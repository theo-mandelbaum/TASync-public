{"version":3,"file":"ej2-pdf.min.js","sources":["../../src/pdf/core/utils.js","../../src/pdf/core/pdf-primitives.js","../../src/pdf/core/enumerator.js","../../src/pdf/core/graphics/pdf-stream-writer.js","../../src/pdf/core/fonts/pdf-string-format.js","../../src/pdf/core/fonts/pdf-font-metrics.js","../../src/pdf/core/fonts/string-layouter.js","../../src/pdf/core/fonts/ttf-table.js","../../src/pdf/core/fonts/ttf-reader.js","../../src/pdf/core/fonts/unicode-true-type-font.js","../../src/pdf/core/graphics/rightToLeft/text-shape.js","../../src/pdf/core/graphics/rightToLeft/bidirectional.js","../../src/pdf/core/graphics/rightToLeft/text-renderer.js","../../src/pdf/core/fonts/pdf-standard-font.js","../../src/pdf/core/graphics/pdf-path.js","../../src/pdf/core/graphics/images/pdf-image.js","../../src/pdf/core/graphics/pdf-graphics.js","../../src/pdf/core/import-export/xml-writer.js","../../src/pdf/core/import-export/xfdf-document.js","../../src/pdf/core/import-export/json-document.js","../../src/pdf/core/graphics/pdf-template.js","../../src/pdf/core/pdf-action.js","../../src/pdf/core/form/field.js","../../src/pdf/core/annotations/pdf-appearance.js","../../src/pdf/core/annotations/annotation.js","../../src/pdf/core/annotations/annotation-collection.js","../../src/pdf/core/pdf-outline.js","../../src/pdf/core/pdf-page.js","../../src/pdf/core/graphics/images/image-decoder.js","../../src/pdf/core/graphics/images/jpeg-decoder.js","../../src/pdf/core/compression/enum.js","../../src/pdf/core/graphics/images/png-decoder.js","../../src/pdf/core/compression/decompressed-output.js","../../src/pdf/core/compression/in-buffer.js","../../src/pdf/core/compression/huffman-tree.js","../../src/pdf/core/compression/inflater.js","../../src/pdf/core/compression/deflate-stream.js","../../src/pdf/core/base-stream.js","../../src/pdf/core/content-parser.js","../../src/pdf/core/decode-stream.js","../../src/pdf/core/decrypt-stream.js","../../src/pdf/core/flate-stream.js","../../src/pdf/core/pdf-catalog.js","../../src/pdf/core/predictor-stream.js","../../src/pdf/core/security/encryptor.js","../../src/pdf/core/pdf-parser.js","../../src/pdf/core/pdf-cross-reference.js","../../src/pdf/core/form/form.js","../../src/pdf/core/import-export/fdf-document.js","../../src/pdf/core/import-export/xml-document.js","../../src/pdf/core/pdf-file-structure.js","../../src/pdf/core/pdf-page-import-options.js","../../src/pdf/core/pdf-merge.js","../../src/pdf/core/layers/layer.js","../../src/pdf/core/layers/layer-collection.js","../../src/pdf/core/pdf-section.js","../../src/pdf/core/pdf-document.js","../../src/pdf/core/annotations/pdf-paddings.js","../../src/pdf/core/graphics/pdf-layouter.js","../../src/pdf/core/graphics/images/pdf-bitmap.js","../../src/pdf/core/list/pdf-list-item.js","../../src/pdf/core/list/pdf-list.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { PdfDestination } from './pdf-page';\nimport { PdfFormFieldVisibility, PdfAnnotationFlag, PdfCheckBoxStyle, PdfHighlightMode, PdfBorderStyle, PdfBorderEffectStyle, PdfLineEndingStyle, _PdfCheckFieldState, PdfMeasurementUnit, _PdfGraphicsUnit, PdfTextMarkupAnnotationType, PdfRotationAngle, PdfAnnotationState, PdfAnnotationStateModel, PdfPopupIcon, PdfRubberStampAnnotationIcon, PdfAttachmentIcon, PdfAnnotationIntent, PdfBlendMode, _PdfAnnotationType, PdfDestinationMode, PdfNumberStyle } from './enumerator';\nimport { _PdfTransformationMatrix } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nimport { PdfAnnotation, PdfLineAnnotation } from './annotations/annotation';\nimport { PdfTemplate } from './graphics/pdf-template';\nimport { PdfField } from './form/field';\nimport { PdfCjkFontFamily, PdfCjkStandardFont, PdfFontFamily, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './fonts/pdf-standard-font';\nimport { _JpegDecoder } from './graphics/images/jpeg-decoder';\nimport { _PngDecoder } from './graphics/images/png-decoder';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * Gets the unsigned value.\n *\n * @param {number} value input value.\n * @param {number} bits bits to process.\n * @returns {number} unsigned value.\n */\nexport function _toUnsigned(value, bits) {\n    return (value & ((Math.pow(2, bits)) - 1));\n}\n/**\n * Gets the signed 16 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned16(value) {\n    return (value << 16) >> 16;\n}\n/**\n * Gets the signed 32 bit value.\n *\n * @param {number} value input value.\n * @returns {number} unsigned value.\n */\nexport function _toSigned32(value) {\n    return (value << 0);\n}\n/**\n * Copy values from one array to another.\n *\n * @param {number[]} target destination array.\n * @param {number} at target index.\n * @param {number[]} source source array.\n * @param {number} start start index.\n * @param {number} end end index.\n * @returns {void} Returns nothing.\n */\nexport function _copyRange(target, at, source, start, end) {\n    if (start === null || typeof start === 'undefined') {\n        start = 0;\n    }\n    end = (typeof end === 'undefined') ? source.length : end;\n    start = Math.max(0, Math.min(source.length, start));\n    end = Math.max(0, Math.min(source.length, end));\n    if (at + (end - start) > target.length) {\n        target.length = at + (end - start);\n    }\n    for (var i = start, j = at; i < end; i++, j++) {\n        target[Number.parseInt(j.toString(), 10)] = source[Number.parseInt(i.toString(), 10)];\n    }\n}\n/**\n * Checks the type of the image using header bytes.\n *\n * @param {Uint8Array} imageData image data.\n * @param {number[]} header header bytes.\n * @returns {boolean} Header matched or not.\n */\nexport function _checkType(imageData, header) {\n    for (var i = 0; i < header.length; i++) {\n        if (header[Number.parseInt(i.toString(), 10)] !== imageData[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the image decoder.\n *\n * @param {Uint8Array} imageData image data.\n * @returns {_ImageDecoder} Image decoder.\n */\nexport function _getDecoder(imageData) {\n    var decoder;\n    if (_checkType(imageData, [255, 216])) {\n        decoder = new _JpegDecoder(imageData);\n    }\n    else if (_checkType(imageData, [137, 80, 78, 71, 13, 10, 26, 10])) {\n        decoder = new _PngDecoder(imageData);\n    }\n    else {\n        throw new Error('Unsupported image format');\n    }\n    return decoder;\n}\n/**\n * Gets the page rotation.\n *\n * @param {PdfPage} page Page.\n * @param {number} height Height.\n * @param {number} left Left.\n * @returns {number} Page rotation.\n */\nexport function _checkRotation(page, height, left) {\n    var topValue = 0;\n    left = (typeof left === 'undefined' || left === null) ? 0 : left;\n    if (page.rotation === PdfRotationAngle.angle90) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : left;\n    }\n    else if (page.rotation === PdfRotationAngle.angle180) {\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : height;\n    }\n    else if (page.rotation === PdfRotationAngle.angle270) {\n        var size = page.size;\n        topValue = (typeof height === 'undefined' || height === null) ? 0 : size[0] - left;\n    }\n    return topValue;\n}\n/**\n * Gets the page index.\n *\n * @param {PdfDocument} loadedDocument Loaded document.\n * @param {_PdfDictionary} pageDictionary Page dictionary.\n * @returns {number} Page index.\n */\nexport function _getPageIndex(loadedDocument, pageDictionary) {\n    var index = -1;\n    for (var i = 0; i < loadedDocument.pageCount; i++) {\n        var page = loadedDocument.getPage(i);\n        if (page._pageDictionary === pageDictionary) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * Convert string value from annotation flag\n *\n * @private\n * @param {PdfAnnotationFlag} flag Annotation flag.\n * @returns {string} Valid string to write into XML.\n */\nexport function _annotationFlagsToString(flag) {\n    var values = [];\n    if ((flag & PdfAnnotationFlag.hidden) !== 0) {\n        values.push('hidden');\n    }\n    if ((flag & PdfAnnotationFlag.invisible) !== 0) {\n        values.push('invisible');\n    }\n    if ((flag & PdfAnnotationFlag.locked) !== 0) {\n        values.push('locked');\n    }\n    if ((flag & PdfAnnotationFlag.noRotate) !== 0) {\n        values.push('norotate');\n    }\n    if ((flag & PdfAnnotationFlag.noView) !== 0) {\n        values.push('noview');\n    }\n    if ((flag & PdfAnnotationFlag.noZoom) !== 0) {\n        values.push('nozoom');\n    }\n    if ((flag & PdfAnnotationFlag.print) !== 0) {\n        values.push('print');\n    }\n    if ((flag & PdfAnnotationFlag.readOnly) !== 0) {\n        values.push('readonly');\n    }\n    if ((flag & PdfAnnotationFlag.toggleNoView) !== 0) {\n        values.push('togglenoview');\n    }\n    if ((flag & PdfAnnotationFlag.default) !== 0) {\n        values.push('default');\n    }\n    return values.join(',');\n}\n/**\n * Convert string value to annotation flag\n *\n * @private\n * @param {string} flag String value to map\n * @returns {PdfAnnotationFlag} Annotation flag\n */\nexport function _stringToAnnotationFlags(flag) {\n    switch (flag) {\n        case 'hidden':\n            return PdfAnnotationFlag.hidden;\n        case 'invisible':\n            return PdfAnnotationFlag.invisible;\n        case 'locked':\n            return PdfAnnotationFlag.locked;\n        case 'norotate':\n            return PdfAnnotationFlag.noRotate;\n        case 'noview':\n            return PdfAnnotationFlag.noView;\n        case 'nozoom':\n            return PdfAnnotationFlag.noZoom;\n        case 'print':\n            return PdfAnnotationFlag.print;\n        case 'readonly':\n            return PdfAnnotationFlag.readOnly;\n        case 'togglenoview':\n            return PdfAnnotationFlag.toggleNoView;\n        default:\n            return PdfAnnotationFlag.default;\n    }\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @returns {string} Valid string to write into PDF.\n */\nexport function _stringToPdfString(value) {\n    if (typeof value === 'string' && value.length > 0 && value.charCodeAt(0) >= '\\xEF'.charCodeAt(0)) {\n        var encoding = void 0;\n        if (value[0] === '\\xEF' && value[1] === '\\xBB' && value[2] === '\\xBF') {\n            encoding = 'utf-8';\n        }\n        else if (value[0] === '\\xFF' && value[1] === '\\xFE') {\n            encoding = 'utf-16le';\n        }\n        else if (value[0] === '\\xFE' && value[1] === '\\xFF') {\n            encoding = 'utf-16be';\n        }\n        if (encoding) {\n            try {\n                return (new TextDecoder(encoding, { fatal: true })).decode(_stringToBytes(value));\n            }\n            catch (e) { } // eslint-disable-line\n        }\n    }\n    var buffer = [];\n    var translateTable = [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n        0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n        0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n        0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n        0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac\n    ];\n    for (var i = 0; i < value.length; i++) {\n        var code = translateTable[value.charCodeAt(i)];\n        buffer.push(code ? String.fromCharCode(code) : value.charAt(i));\n    }\n    return buffer.join('');\n}\n/**\n * Convert string value to byte array\n *\n * @private\n * @param {string} value string value.\n * @param {boolean} isDirect Whether to return a number[] or Uint8Array.\n * @param {boolean} isPassword Whether the string is a password.\n * @param {number[]} destination Destination array.\n * @returns {number[] | Uint8Array} Byte array\n */\nexport function _stringToBytes(value, isDirect, isPassword, destination) {\n    if (isDirect === void 0) { isDirect = false; }\n    if (isPassword === void 0) { isPassword = false; }\n    var bytes = [];\n    if (destination) {\n        bytes = destination;\n    }\n    if (isPassword) {\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n    }\n    else {\n        for (var i = 0; i < value.length; i++) {\n            var charCode = value.charCodeAt(i);\n            if (charCode < 0x80) {\n                bytes.push(charCode);\n            }\n            else if (charCode < 0x800) {\n                bytes.push((charCode >> 6) | 0xC0);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else if (charCode < 0xD800 || charCode >= 0xE000) {\n                bytes.push((charCode >> 12) | 0xE0);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n            else {\n                i++;\n                charCode = 0x10000 + (((charCode & 0x3FF) << 10) | (value.charCodeAt(i) & 0x3FF));\n                bytes.push((charCode >> 18) | 0xF0);\n                bytes.push(((charCode >> 12) & 0x3F) | 0x80);\n                bytes.push(((charCode >> 6) & 0x3F) | 0x80);\n                bytes.push((charCode & 0x3F) | 0x80);\n            }\n        }\n    }\n    return isDirect ? bytes : new Uint8Array(bytes);\n}\n/**\n * Check equal or not.\n *\n * @private\n * @param {number[]} first byte array.\n * @param {number[]} second byte array.\n * @returns {boolean} Equal or not\n */\nexport function _areArrayEqual(first, second) {\n    if (first.length !== second.length) {\n        return false;\n    }\n    for (var i = 0; i < first.length; i++) {\n        if (first[Number.parseInt(i.toString(), 10)] !== second[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert number to string as round value with fixed decimal points 2.\n *\n * @private\n * @param {number[]} value number value.\n * @returns {boolean} Equal string.\n */\nexport function _numberToString(value) {\n    if (Number.isInteger(value)) {\n        return value.toString();\n    }\n    return value.toFixed(7);\n}\n/**\n * Check whether entries in two array are equal or not.\n *\n * @private\n * @param {number[]} value first array.\n * @param {number[]} current second array.\n * @returns {boolean} Return true if for each elements are equal in both array.\n */\nexport function _areNotEqual(value, current) {\n    var result = false;\n    if (value.length !== current.length) {\n        return true;\n    }\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] !== current[i]) { // eslint-disable-line\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Process bytes and convert as string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @param {boolean} isJson Whether is json or xfdf.\n * @returns {string} String value processed from input bytes.\n */\nexport function _bytesToString(bytes, isJson) {\n    if (isJson === void 0) { isJson = false; }\n    var length = bytes.length;\n    var max = 8192;\n    var stringBuffer = [];\n    if (length < max) {\n        return (isJson ? _decodeUnicodeBytes(bytes) : String.fromCharCode.apply(null, bytes));\n    }\n    for (var i = 0; i < length; i += max) {\n        var chunkEnd = Math.min(i + max, length);\n        var chunk = bytes.subarray(i, chunkEnd);\n        stringBuffer.push(isJson ? _decodeUnicodeBytes(chunk) : String.fromCharCode.apply(null, chunk));\n    }\n    return stringBuffer.join('');\n}\n/**\n * Decode unicode string.\n *\n * @private\n * @param {Uint8Array} bytes Input data.\n * @returns {string} String value processed from input bytes.\n */\nexport function _decodeUnicodeBytes(bytes) {\n    var result = '';\n    var i = 0;\n    while (i < bytes.length) {\n        var byte = bytes[i++];\n        if (byte < 0x80) {\n            result += String.fromCharCode(byte);\n        }\n        else if (byte < 0xE0) {\n            result += String.fromCharCode(((byte & 0x1F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else if (byte < 0xF0) {\n            result += String.fromCharCode(((byte & 0x0F) << 12) | ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F));\n        }\n        else {\n            var codePoint = ((byte & 0x07) << 18) | ((bytes[i++] & 0x3F) << 12) |\n                ((bytes[i++] & 0x3F) << 6) | (bytes[i++] & 0x3F) - 0x10000;\n            result += String.fromCharCode((codePoint >> 10) + 0xD800, (codePoint & 0x03FF) + 0xDC00);\n        }\n    }\n    return result;\n}\n/**\n * Convert string to unicode array.\n *\n * @private\n * @param {string} value string value.\n * @returns {Uint8Array} unicode array\n */\nexport function _stringToUnicodeArray(value) {\n    var output = [];\n    if (value !== null && typeof value !== 'undefined') {\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n    }\n    var unicodeArray = new Uint8Array(output);\n    return unicodeArray;\n}\n/**\n * Convert byte array to hex string.\n *\n * @private\n * @param {Uint8Array} byteArray Byte array.\n * @returns {string} Hex string.\n */\nexport function _byteArrayToHexString(byteArray) {\n    var nextHexByte;\n    var stringBuffer = [];\n    for (var i = 0; i < byteArray.length; i++) {\n        nextHexByte = byteArray[Number.parseInt(i.toString(), 10)].toString(16).toUpperCase();\n        if (nextHexByte.length < 2) {\n            nextHexByte = '0' + nextHexByte;\n        }\n        stringBuffer.push(nextHexByte);\n    }\n    return stringBuffer.join('');\n}\n/**\n * Convert hex string to byte array.\n *\n * @private\n * @param {string} hexString Hex string.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Byte array.\n */\nexport function _hexStringToByteArray(hexString, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var array = [];\n    if (hexString) {\n        for (var i = 0; i < hexString.length; i += 2) {\n            array.push(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n    }\n    return isDirect ? array : new Uint8Array(array);\n}\n/**\n * Convert hex string to normal string.\n *\n * @private\n * @param {string} hexString Hex string.\n * @returns {string} Normal string.\n */\nexport function _hexStringToString(hexString) {\n    var result = '';\n    if (hexString && hexString[0] === '#') {\n        hexString = hexString.substring(1);\n        for (var i = 0; i < hexString.length; i += 2) {\n            result += String.fromCharCode(Number.parseInt(hexString.substring(i, i + 2), 16));\n        }\n        return result;\n    }\n    return hexString;\n}\n/**\n * Check whether the character code is white space.\n *\n * @private\n * @param {number} ch The character code to check.\n * @returns {boolean} True if the character is space, otherwise false.\n */\nexport function _isWhiteSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0d || ch === 0x0a;\n}\n/**\n * Decode a chunk of base64 string into Uint8Array.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @returns {Uint8Array} Decoded bytes as Uint8Array.\n */\nfunction _decodeChunk(input) {\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var chr1;\n    var chr2;\n    var chr3;\n    var enc1;\n    var enc2;\n    var enc3;\n    var enc4;\n    var i = 0;\n    var resultIndex = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n    var totalLength = input.length * 3 / 4;\n    if (input.charAt(input.length - 1) === key.charAt(64)) {\n        totalLength--;\n    }\n    var output = new Array(totalLength | 0);\n    while (i < input.length) {\n        enc1 = key.indexOf(input.charAt(i++));\n        enc2 = key.indexOf(input.charAt(i++));\n        enc3 = key.indexOf(input.charAt(i++));\n        enc4 = key.indexOf(input.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr1;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr2;\n        }\n        if (resultIndex < totalLength) {\n            output[resultIndex++] = chr3;\n        }\n    }\n    return new Uint8Array(output);\n}\n/**\n * Decode bytes from base64 string.\n *\n * @private\n * @param {string} input The base64 string to decode.\n * @param {boolean} isDirect Whether to return object or number[]. Default is false.\n * @returns {Uint8Array | number[]} Decoded bytes.\n */\nexport function _decode(input, isDirect) {\n    if (isDirect === void 0) { isDirect = false; }\n    var chunkSize = 3000000;\n    if (input.length >= chunkSize) {\n        input = input.replace(/[^A-Za-z0-9+/=]/g, '');\n        var outputChunks = [];\n        var totalLength = 0;\n        for (var i = 0; i < input.length; i += chunkSize) {\n            var chunk = input.substring(i, i + chunkSize);\n            var decodedChunk = _decodeChunk(chunk);\n            outputChunks.push(decodedChunk);\n            totalLength += decodedChunk.length;\n        }\n        var output = new Uint8Array(totalLength);\n        var offset = 0;\n        for (var _i = 0, outputChunks_1 = outputChunks; _i < outputChunks_1.length; _i++) {\n            var chunk = outputChunks_1[_i];\n            output.set(chunk, offset);\n            offset += chunk.length;\n        }\n        return isDirect ? Array.from(output) : output;\n    }\n    else {\n        var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1 = void 0;\n        var chr2 = void 0;\n        var chr3 = void 0;\n        var enc1 = void 0;\n        var enc2 = void 0;\n        var enc3 = void 0;\n        var enc4 = void 0;\n        var i = 0;\n        var resultIndex = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, ''); // eslint-disable-line\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === key.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = key.indexOf(input.charAt(i++));\n            enc2 = key.indexOf(input.charAt(i++));\n            enc3 = key.indexOf(input.charAt(i++));\n            enc4 = key.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr1;\n            }\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr2;\n            }\n            if (resultIndex < totalLength) {\n                output[resultIndex++] = chr3;\n            }\n        }\n        return isDirect ? output : new Uint8Array(output);\n    }\n}\n/**\n * Encode a chunk of bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @param {boolean} isLastChunk Defines a last chunk of bytes.\n * @returns {string} Decoded string.\n */\nfunction _encodeChunk(bytes, isLastChunk) {\n    if (isLastChunk === void 0) { isLastChunk = false; }\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var output = [];\n    var length = bytes.length;\n    var i = 0;\n    while (i < length) {\n        var byte1 = bytes[i++];\n        var byte2 = i < length ? bytes[i++] : 0;\n        var byte3 = i < length ? bytes[i++] : 0;\n        var value1 = byte1 >> 2;\n        var value2 = ((byte1 & 3) << 4) | (byte2 >> 4);\n        var value3 = ((byte2 & 15) << 2) | (byte3 >> 6);\n        var value4 = byte3 & 63;\n        output.push(key[Number.parseInt(value1.toString(), 10)], key[Number.parseInt(value2.toString(), 10)], i - 1 > length ? '=' : key[Number.parseInt(value3.toString(), 10)], i > length ? '=' : key[Number.parseInt(value4.toString(), 10)]);\n    }\n    if (isLastChunk) {\n        if (length % 3 === 1) {\n            output[output.length - 1] = '=';\n            output[output.length - 2] = '=';\n        }\n        else if (length % 3 === 2) {\n            output[output.length - 1] = '=';\n        }\n    }\n    return output.join('');\n}\n/**\n * Encode bytes to base64 string.\n *\n * @private\n * @param {Uint8Array} bytes Bytes to encode.\n * @returns {string} Decoded string.\n */\nexport function _encode(bytes) {\n    var chunkSize = 3000000;\n    var key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var length = bytes.length;\n    if (length >= chunkSize) {\n        var output = [];\n        if (length > chunkSize) {\n            for (var start = 0; start < length; start += chunkSize) {\n                var chunk = bytes.subarray(start, Math.min(start + chunkSize, length));\n                if ((start + chunkSize) >= length) {\n                    output.push(_encodeChunk(chunk, true));\n                }\n                else {\n                    output.push(_encodeChunk(chunk));\n                }\n            }\n        }\n        else {\n            output.push(_encodeChunk(bytes, true));\n        }\n        return output.join('');\n    }\n    else {\n        var output = '';\n        var currentChar = 0;\n        for (var i = 0; i < bytes.length; i++) {\n            if (i % 3 === 0) {\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] >> 2);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 4) & 63;\n            }\n            else if (i % 3 === 1) {\n                currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 4);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = (bytes[Number.parseInt(i.toString(), 10)] << 2) & 63;\n            }\n            else if (i % 3 === 2) {\n                currentChar += (bytes[Number.parseInt(i.toString(), 10)] >> 6);\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n                currentChar = bytes[Number.parseInt(i.toString(), 10)] & 63;\n                output += key[Number.parseInt(currentChar.toString(), 10)];\n            }\n        }\n        if (bytes.length % 3 === 1) {\n            output += key[Number.parseInt(currentChar.toString(), 10)] + \"==\";\n        }\n        if (bytes.length % 3 === 2) {\n            output += key[Number.parseInt(currentChar.toString(), 10)] + \"=\";\n        }\n        return output;\n    }\n}\n/**\n * Get property value in inheritable mode.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} key Input dictionary.\n * @param {boolean} isArray Search array.\n * @param {boolean} stopWhenFound Stop when found.\n * @param {string[]} parentKey Key string for parent node.\n * @returns {any} Property value.\n */\nexport function _getInheritableProperty(dictionary, key, isArray, stopWhenFound) {\n    if (isArray === void 0) { isArray = false; }\n    if (stopWhenFound === void 0) { stopWhenFound = true; }\n    var parentKey = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        parentKey[_i - 4] = arguments[_i];\n    }\n    var values; // eslint-disable-line\n    var refSet = new Set(); // eslint-disable-line\n    while (dictionary instanceof _PdfDictionary && dictionary.objId && !refSet.has(dictionary.objId)) {\n        if (dictionary.objId) {\n            refSet.add(dictionary.objId);\n        }\n        var value = isArray ? dictionary.getArray(key) : dictionary.get(key); // eslint-disable-line\n        if (value !== undefined) {\n            if (stopWhenFound) {\n                return value;\n            }\n            if (!values) {\n                values = [];\n            }\n            values.push(value);\n        }\n        var index = 0;\n        var hasParent = false;\n        while (index < parentKey.length) {\n            var element = parentKey[index]; // eslint-disable-line\n            if (dictionary.has(element)) {\n                dictionary = dictionary.get(element);\n                hasParent = true;\n                break;\n            }\n            index++;\n        }\n        if (!hasParent) {\n            break;\n        }\n    }\n    return values;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {boolean} isWidget Input page.\n * @returns {any} Bounds value.\n */\nexport function _parseRectangle(dictionary, isWidget) {\n    var rectangle = { x: 0, y: 0, width: 0, height: 0 };\n    var elements = dictionary.getArray('Rect');\n    if (elements && Array.isArray(elements)) {\n        var x1 = elements[0];\n        var y1 = elements[1];\n        var x2 = elements[2];\n        var y2 = elements[3];\n        if (typeof x1 !== 'undefined' && typeof y1 !== 'undefined' && typeof x2 !== 'undefined' && typeof y2 !== 'undefined') {\n            rectangle.x = Math.min(x1, x2);\n            rectangle.y = Math.min(y1, y2);\n            rectangle.width = Math.max(x1, x2) - rectangle.x;\n            rectangle.height = Math.max(y1, y2) - rectangle.y;\n            if (isWidget) {\n                rectangle.height = parseFloat(rectangle.height.toFixed(3));\n                if (elements[1] < 0) {\n                    rectangle.y = elements[1];\n                    if (elements[1] > elements[3]) {\n                        rectangle.y -= rectangle.height;\n                    }\n                }\n            }\n        }\n    }\n    return rectangle;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {string} page Input page.\n * @returns {any} Bounds value.\n */\nexport function _calculateBounds(dictionary, page) {\n    var rect;\n    if (dictionary.has('Rect')) {\n        rect = _parseRectangle(dictionary);\n        if (page) {\n            var size = page.size;\n            var mBox = page.mediaBox;\n            var cropBox = page.cropBox;\n            if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && page._pageDictionary.has('CropBox')) {\n                if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                    size[1] === cropBox[3]) && (rect.x !== cropBox[0])) {\n                    rect.x -= cropBox[0];\n                    rect.y = cropBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else if (mBox && Array.isArray(mBox) && mBox.length === 4 && page._pageDictionary.has('MediaBox')) {\n                if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                    rect.x -= mBox[0];\n                    rect.y = mBox[3] - (rect.y + rect.height);\n                }\n                else {\n                    rect.y = size[1] - (rect.y + rect.height);\n                }\n            }\n            else {\n                rect.y = size[1] - (rect.y + rect.height);\n            }\n        }\n        else {\n            rect.y = rect.y + rect.height;\n        }\n    }\n    return rect;\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value array value.\n * @returns {any} Rectangle value.\n */\nexport function _toRectangle(value) {\n    return {\n        x: Math.min(value[0], value[2]),\n        y: Math.min(value[1], value[3]),\n        width: Math.abs(value[0] - value[2]),\n        height: Math.abs(value[1] - value[3])\n    };\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {any} value Rectangle value.\n * @param {any} value.x X value.\n * @param {any} value.y Y value.\n * @param {any} value.width Width value.\n * @param {any} value.height Height value.\n * @returns {number[]} Bounds value.\n */\nexport function _fromRectangle(value) {\n    return [value.x, value.y, value.x + value.width, value.y + value.height];\n}\n/**\n * Calculate bounds of annotation or field.\n *\n * @private\n * @param {number[]} value Input dictionary.\n * @param {string} page Input page.\n * @returns {number[]} Bounds value.\n */\nexport function _getUpdatedBounds(value, page) {\n    var x = value[0];\n    var y = value[1];\n    var width = value[2];\n    var height = value[3];\n    if (page) {\n        var size = page.size;\n        var pageWidth = size[0];\n        var pageHeight = size[1];\n        var mBox = page.mediaBox;\n        var cropBox = page.cropBox;\n        if (cropBox && Array.isArray(cropBox) && cropBox.length === 4) {\n            if (cropBox[0] !== 0 || cropBox[1] !== 0 || pageWidth === cropBox[2] || pageHeight === cropBox[3]) {\n                x += cropBox[0];\n                y = cropBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else if (mBox && Array.isArray(mBox) && mBox.length === 4) {\n            if (mBox[0] > 0 || mBox[1] > 0 || pageWidth === mBox[2] || pageHeight === mBox[3]) {\n                x -= mBox[0];\n                y = mBox[3] - (y + height);\n            }\n            else {\n                y = pageHeight - (y + height);\n            }\n        }\n        else {\n            y = pageHeight - (y + height);\n        }\n    }\n    return [x, y, x + width, y + height];\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {string} colorString Color value in string format.\n * @returns {number[]} RGB color value.\n */\nexport function _convertToColor(colorString) {\n    var color = _getColorValue(colorString);\n    if (!color) {\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(colorString);\n        if (result) {\n            color = [Number.parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n        }\n    }\n    return color;\n}\n/**\n * Parse RGB color.\n *\n * @private\n * @param {number[]} array Color array in dictionary.\n * @returns {number[]} RGB color value.\n */\nexport function _parseColor(array) {\n    var color;\n    if (array) {\n        if (array.length === 1) {\n            var entry = array[0];\n            if (typeof entry !== 'undefined') {\n                var round = Math.round(entry * 255);\n                color = [round, round, round];\n            }\n        }\n        else if (array.length === 3) {\n            var r = array[0];\n            var g = array[1];\n            var b = array[2];\n            if (typeof r !== 'undefined' && typeof g !== 'undefined' && typeof b !== 'undefined') {\n                color = [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n            }\n        }\n        else if (array.length === 4) {\n            var c = array[0];\n            var m = array[1];\n            var y = array[2];\n            var k = array[3];\n            if (typeof c !== 'undefined' && typeof m !== 'undefined' && typeof y !== 'undefined' && typeof k !== 'undefined') {\n                var fBlack = k * 255;\n                color = [Math.round(255 - Math.min(255, ((c * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((m * (255 - fBlack)) + fBlack))),\n                    Math.round(255 - Math.min(255, ((y * (255 - fBlack)) + fBlack)))];\n            }\n        }\n    }\n    return color;\n}\n/**\n * Get the border style in _PdfName.\n *\n * @private\n * @param {PdfBorderStyle} style border style in enum.\n * @returns {_PdfName} border style in _PdfName.\n */\nexport function _mapBorderStyle(style) {\n    var token = 'S';\n    switch (style) {\n        case PdfBorderStyle.dot:\n        case PdfBorderStyle.dashed:\n            token = 'D';\n            break;\n        case PdfBorderStyle.beveled:\n            token = 'B';\n            break;\n        case PdfBorderStyle.inset:\n            token = 'I';\n            break;\n        case PdfBorderStyle.underline:\n            token = 'U';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Get the border effect style in _PdfName.\n *\n * @private\n * @param {string} style border effect style as string.\n * @returns {PdfBorderEffectStyle} border effect style.\n */\nexport function _mapBorderEffectStyle(style) {\n    var value = PdfBorderEffectStyle.solid;\n    switch (style) {\n        case 'C':\n            value = PdfBorderEffectStyle.cloudy;\n            break;\n    }\n    return value;\n}\n/**\n * Get the string value for line ending style.\n *\n * @private\n * @param {PdfLineEndingStyle} style style in enum.\n * @returns {string} value default None.\n */\nexport function _reverseMapEndingStyle(style) {\n    var value = 'None';\n    if (typeof style !== 'undefined') {\n        switch (style) {\n            case PdfLineEndingStyle.openArrow:\n                value = 'OpenArrow';\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                value = 'ClosedArrow';\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                value = 'ROpenArrow';\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                value = 'RClosedArrow';\n                break;\n            case PdfLineEndingStyle.butt:\n                value = 'Butt';\n                break;\n            case PdfLineEndingStyle.diamond:\n                value = 'Diamond';\n                break;\n            case PdfLineEndingStyle.circle:\n                value = 'Circle';\n                break;\n            case PdfLineEndingStyle.square:\n                value = 'Square';\n                break;\n            case PdfLineEndingStyle.slash:\n                value = 'Slash';\n                break;\n        }\n    }\n    return value;\n}\n/**\n * Get the enum value for line ending style.\n *\n * @private\n * @param {string} style Style value in string.\n * @param {PdfLineEndingStyle} defaultValue Default style value to return.\n * @returns {PdfLineEndingStyle} enum value default 0.\n */\nexport function _mapLineEndingStyle(style, defaultValue) {\n    var value = typeof defaultValue !== 'undefined' ? defaultValue : PdfLineEndingStyle.none;\n    switch (style.toLowerCase()) {\n        case 'openarrow':\n            value = PdfLineEndingStyle.openArrow;\n            break;\n        case 'closedarrow':\n            value = PdfLineEndingStyle.closedArrow;\n            break;\n        case 'ropenarrow':\n            value = PdfLineEndingStyle.rOpenArrow;\n            break;\n        case 'rclosedarrow':\n            value = PdfLineEndingStyle.rClosedArrow;\n            break;\n        case 'butt':\n            value = PdfLineEndingStyle.butt;\n            break;\n        case 'diamond':\n            value = PdfLineEndingStyle.diamond;\n            break;\n        case 'circle':\n            value = PdfLineEndingStyle.circle;\n            break;\n        case 'square':\n            value = PdfLineEndingStyle.square;\n            break;\n        case 'slash':\n            value = PdfLineEndingStyle.slash;\n            break;\n    }\n    return value;\n}\n/**\n * Get highlight mode.\n *\n * @private\n * @param {string} mode Mode entry in dictionary.\n * @returns {PdfHighlightMode} Highlight mode.\n */\nexport function _mapHighlightMode(mode) {\n    switch (mode) {\n        case 'P':\n            return PdfHighlightMode.push;\n        case 'N':\n            return PdfHighlightMode.noHighlighting;\n        case 'O':\n            return PdfHighlightMode.outline;\n        default:\n            return PdfHighlightMode.invert;\n    }\n}\n/**\n * Get highlight mode as string.\n *\n * @private\n * @param {PdfHighlightMode} mode Mode entry.\n * @returns {_PdfName} Highlight mode as PDF name.\n */\nexport function _reverseMapHighlightMode(mode) {\n    switch (mode) {\n        case PdfHighlightMode.push:\n            return _PdfName.get('P');\n        case PdfHighlightMode.noHighlighting:\n            return _PdfName.get('N');\n        case PdfHighlightMode.outline:\n            return _PdfName.get('O');\n        default:\n            return _PdfName.get('I');\n    }\n}\n/**\n * Reverse map blend mode.\n *\n * @private\n * @param {PdfBlendMode} mode Mode entry.\n * @returns {_PdfName} Blend mode as name.\n */\nexport function _reverseMapBlendMode(mode) {\n    var token = 'Normal';\n    switch (mode) {\n        case PdfBlendMode.multiply:\n            token = 'Multiply';\n            break;\n        case PdfBlendMode.screen:\n            token = 'Screen';\n            break;\n        case PdfBlendMode.overlay:\n            token = 'Overlay';\n            break;\n        case PdfBlendMode.darken:\n            token = 'Darken';\n            break;\n        case PdfBlendMode.lighten:\n            token = 'Lighten';\n            break;\n        case PdfBlendMode.colorDodge:\n            token = 'ColorDodge';\n            break;\n        case PdfBlendMode.colorBurn:\n            token = 'ColorBurn';\n            break;\n        case PdfBlendMode.hardLight:\n            token = 'HardLight';\n            break;\n        case PdfBlendMode.softLight:\n            token = 'SoftLight';\n            break;\n        case PdfBlendMode.difference:\n            token = 'Difference';\n            break;\n        case PdfBlendMode.exclusion:\n            token = 'Exclusion';\n            break;\n        case PdfBlendMode.hue:\n            token = 'Hue';\n            break;\n        case PdfBlendMode.saturation:\n            token = 'Saturation';\n            break;\n        case PdfBlendMode.color:\n            token = 'Color';\n            break;\n        case PdfBlendMode.luminosity:\n            token = 'Luminosity';\n            break;\n        default:\n            token = 'Normal';\n            break;\n    }\n    return _PdfName.get(token);\n}\n/**\n * Map blend mode.\n *\n * @private\n * @param {_PdfName} token Blend mode as name.\n * @returns {PdfBlendMode} Mode value;\n */\nexport function _mapBlendMode(token) {\n    var style = PdfBlendMode.normal;\n    switch (token.name) {\n        case 'Multiply':\n            style = PdfBlendMode.multiply;\n            break;\n        case 'Screen':\n            style = PdfBlendMode.screen;\n            break;\n        case 'Overlay':\n            style = PdfBlendMode.overlay;\n            break;\n        case 'Darken':\n            style = PdfBlendMode.darken;\n            break;\n        case 'Lighten':\n            style = PdfBlendMode.lighten;\n            break;\n        case 'ColorDodge':\n            style = PdfBlendMode.colorDodge;\n            break;\n        case 'ColorBurn':\n            style = PdfBlendMode.colorBurn;\n            break;\n        case 'HardLight':\n            style = PdfBlendMode.hardLight;\n            break;\n        case 'SoftLight':\n            style = PdfBlendMode.softLight;\n            break;\n        case 'Difference':\n            style = PdfBlendMode.difference;\n            break;\n        case 'Exclusion':\n            style = PdfBlendMode.exclusion;\n            break;\n        case 'Hue':\n            style = PdfBlendMode.hue;\n            break;\n        case 'Saturation':\n            style = PdfBlendMode.saturation;\n            break;\n        case 'Color':\n            style = PdfBlendMode.color;\n            break;\n        case 'Luminosity':\n            style = PdfBlendMode.luminosity;\n            break;\n        default:\n            style = PdfBlendMode.normal;\n            break;\n    }\n    return style;\n}\n/**\n * Convert float to string.\n *\n * @private\n * @param {number} value number value.\n * @returns {string} equal fixed length string value;\n */\nexport function _floatToString(value) {\n    var returnString = value.toFixed(2);\n    if (returnString === '0.00') {\n        returnString = '.00';\n    }\n    return returnString;\n}\n/**\n * Check and add proc set value.\n *\n * @private\n * @param {string} value entry.\n * @param {_PdfDictionary} dictionary source dictionary.\n * @returns {void} Nothing;\n */\nexport function _addProcSet(value, dictionary) {\n    var name = _PdfName.get(value);\n    if (dictionary.has('ProcSet')) {\n        var procset = dictionary.getArray('ProcSet');\n        if (procset && procset.indexOf(name) === -1) {\n            procset.push(name);\n            dictionary.update('ProcSet', procset);\n        }\n    }\n    else {\n        dictionary.update('ProcSet', [name]);\n    }\n}\n/**\n * Get new GUID string.\n *\n * @private\n * @returns {string} A new GUID string;\n */\nexport function _getNewGuidString() {\n    return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n        var random = Math.random() * 16 | 0;\n        var result = c === 'a' ? random : (random & 0x3 | 0x8);\n        return result.toString(16);\n    });\n}\n/**\n * Escape PDF name.\n *\n * @private\n * @param {string} value name value.\n * @returns {string} equal and processed name value;\n */\nexport function _escapePdfName(value) {\n    var buffer = [];\n    var start = 0;\n    for (var i = 0; i < value.length; i++) {\n        var char = value.charCodeAt(i);\n        if (char < 0x21 ||\n            char > 0x7e ||\n            char === 0x23 ||\n            char === 0x28 ||\n            char === 0x29 ||\n            char === 0x3c ||\n            char === 0x3e ||\n            char === 0x5b ||\n            char === 0x5d ||\n            char === 0x7b ||\n            char === 0x7d ||\n            char === 0x2f ||\n            char === 0x25) {\n            if (start < i) {\n                buffer.push(value.substring(start, i));\n            }\n            buffer.push(\"#\" + char.toString(16));\n            start = i + 1;\n        }\n    }\n    if (buffer.length === 0) {\n        return value;\n    }\n    if (start < value.length) {\n        buffer.push(value.substring(start, value.length));\n    }\n    return buffer.join('');\n}\n/**\n * Calculate bezier arc points.\n *\n * @private\n * @param {number} x1 value.\n * @param {number} y1 value.\n * @param {number} x2 value.\n * @param {number} y2 value.\n * @param {number} start value.\n * @param {number} extent value.\n * @returns {number[]} bezier arc points;\n */\nexport function _getBezierArc(x1, y1, x2, y2, start, extent) {\n    if (x1 > x2) {\n        var swap = x1;\n        x1 = x2;\n        x2 = swap;\n    }\n    if (y2 > y1) {\n        var swap = y1;\n        y1 = y2;\n        y2 = swap;\n    }\n    var angle;\n    var count;\n    if (Math.abs(extent) <= 90) {\n        angle = extent;\n        count = 1;\n    }\n    else {\n        count = Math.ceil(Math.abs(extent) / 90);\n        angle = extent / count;\n    }\n    var first = ((x1 + x2) / 2);\n    var second = ((y1 + y2) / 2);\n    var firstAngle = ((x2 - x1) / 2);\n    var secondAngle = ((y2 - y1) / 2);\n    var half = (angle * (Math.PI / 360));\n    var value = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(half)) / Math.sin(half)));\n    var points = [];\n    for (var i = 0; (i < count); i++) {\n        var zero = (((start + (i * angle)) * (Math.PI / 180)));\n        var one = (((start + ((i + 1) * angle)) * (Math.PI / 180)));\n        var cosZero = (Math.cos(zero));\n        var cosOne = (Math.cos(one));\n        var sinZero = (Math.sin(zero));\n        var sinOne = (Math.sin(one));\n        if ((angle > 0)) {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero - (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero + (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne + (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne - (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n        else {\n            points.push(first + (firstAngle * cosZero));\n            points.push(second - (secondAngle * sinZero));\n            points.push(first + (firstAngle * (cosZero + (value * sinZero))));\n            points.push(second - (secondAngle * (sinZero - (value * cosZero))));\n            points.push(first + (firstAngle * (cosOne - (value * sinOne))));\n            points.push(second - (secondAngle * (sinOne + (value * cosOne))));\n            points.push(first + (firstAngle * cosOne));\n            points.push(second - (secondAngle * sinOne));\n        }\n    }\n    return points;\n}\n/**\n * Find page of the annotation.\n *\n * @private\n * @param {PdfDocument} document PDF document.\n * @param {_PdfReference} reference Annotation reference.\n * @returns {PdfPage} Page of the annotation;\n */\nexport function _findPage(document, reference) {\n    var page;\n    for (var i = 0; i < document.pageCount && typeof page === 'undefined'; i++) {\n        var entry = document.getPage(i);\n        if (entry && entry._pageDictionary.has('Annots')) {\n            var annots = entry._pageDictionary.get('Annots');\n            if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                for (var j = 0; j < annots.length && typeof page === 'undefined'; j++) {\n                    var ref = annots[Number.parseInt(j.toString(), 10)];\n                    if (ref !== null && typeof ref !== 'undefined' && ref instanceof _PdfReference && ref === reference) {\n                        page = entry;\n                    }\n                }\n            }\n        }\n    }\n    return page;\n}\n/**\n * Check the field is checked or not.\n *\n * @private\n * @param {_PdfDictionary} dictionary PDF dictionary.\n * @returns {boolean} True if the field is checked, otherwise false;\n */\nexport function _checkField(dictionary) {\n    var check = false;\n    if (dictionary.has('AS')) {\n        var state = dictionary.get('AS');\n        if (state) {\n            check = state.name !== 'Off';\n        }\n        else {\n            var actual = dictionary.get('V');\n            if (actual) {\n                check = actual.name === _getItemValue(dictionary);\n            }\n        }\n    }\n    return check;\n}\n/**\n * Get item value from state item field.\n *\n * @private\n * @param {_PdfDictionary} itemDictionary PDF document.\n * @returns {string} value of item;\n */\nexport function _getItemValue(itemDictionary) {\n    var itemValue = '';\n    var name;\n    if (itemDictionary.has('AS')) {\n        name = itemDictionary.get('AS');\n        if (name !== null && name.name !== 'Off') {\n            itemValue = name.name;\n        }\n    }\n    if (itemValue === '' && itemDictionary.has('AP')) {\n        var dictionary = itemDictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary) {\n                var keys_1 = [];\n                appearance.forEach(function (key, value) {\n                    keys_1.push(key);\n                });\n                for (var i = 0; i < keys_1.length; i++) {\n                    if (keys_1[Number.parseInt(i.toString(), 10)] !== 'Off') {\n                        itemValue = keys_1[Number.parseInt(i.toString(), 10)];\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return itemValue;\n}\n/**\n * Get state item template.\n *\n * @private\n * @param {_PdfCheckFieldState} state Check field state.\n * @param {PdfStateItem | PdfField} item source to check.\n * @returns {PdfTemplate} Appearance template;\n */\nexport function _getStateTemplate(state, item) {\n    var value = state === _PdfCheckFieldState.checked ? _getItemValue(item._dictionary) : 'Off';\n    var template;\n    if (item._dictionary.has('AP')) {\n        var dictionary = item._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearance = dictionary.get('N');\n            if (appearance && appearance instanceof _PdfBaseStream) {\n                appearance = appearance.dictionary;\n            }\n            if (appearance && appearance instanceof _PdfDictionary && (value && value !== '' && appearance.has(value))) {\n                var stream = appearance.get(value);\n                var reference = appearance.getRaw(value);\n                if (reference) {\n                    stream.reference = reference;\n                }\n                if (stream) {\n                    template = new PdfTemplate(stream, item._crossReference);\n                }\n            }\n        }\n    }\n    return template;\n}\n/**\n * Get color value\n *\n * @private\n * @param {string} colorName name of the color.\n * @returns {number[]} return color value as number array.\n */\nexport function _getColorValue(colorName) {\n    var color;\n    switch (colorName) {\n        case 'transparent':\n            color = [255, 255, 255];\n            break;\n        case 'aliceblue':\n            color = [240, 248, 255];\n            break;\n        case 'antiquewhite':\n            color = [250, 235, 215];\n            break;\n        case 'aqua':\n            color = [0, 255, 255];\n            break;\n        case 'aquamarine':\n            color = [127, 255, 212];\n            break;\n        case 'azure':\n            color = [240, 255, 255];\n            break;\n        case 'beige':\n            color = [245, 245, 220];\n            break;\n        case 'bisque':\n            color = [255, 228, 196];\n            break;\n        case 'black':\n            color = [0, 0, 0];\n            break;\n        case 'blanchedalmond':\n            color = [255, 235, 205];\n            break;\n        case 'blue':\n            color = [0, 0, 255];\n            break;\n        case 'blueviolet':\n            color = [138, 43, 226];\n            break;\n        case 'brown':\n            color = [165, 42, 42];\n            break;\n        case 'burlywood':\n            color = [222, 184, 135];\n            break;\n        case 'cadetBlue':\n            color = [95, 158, 160];\n            break;\n        case 'chartreuse':\n            color = [127, 255, 0];\n            break;\n        case 'chocolate':\n            color = [210, 105, 30];\n            break;\n        case 'coral':\n            color = [255, 127, 80];\n            break;\n        case 'cornflowerblue':\n            color = [100, 149, 237];\n            break;\n        case 'cornsilk':\n            color = [255, 248, 220];\n            break;\n        case 'crimson':\n            color = [220, 20, 60];\n            break;\n        case 'cyan':\n            color = [0, 255, 255];\n            break;\n        case 'darkblue':\n            color = [0, 0, 139];\n            break;\n        case 'darkcyan':\n            color = [0, 139, 139];\n            break;\n        case 'darkgoldenrod':\n            color = [184, 134, 11];\n            break;\n        case 'darkgray':\n            color = [169, 169, 169];\n            break;\n        case 'darkgreen':\n            color = [0, 100, 0];\n            break;\n        case 'darkkhaki':\n            color = [189, 183, 107];\n            break;\n        case 'darkmagenta':\n            color = [139, 0, 139];\n            break;\n        case 'darkolivegreen':\n            color = [85, 107, 47];\n            break;\n        case 'darkorange':\n            color = [255, 140, 0];\n            break;\n        case 'darkorchid':\n            color = [153, 50, 204];\n            break;\n        case 'darkred':\n            color = [139, 0, 0];\n            break;\n        case 'darksalmon':\n            color = [233, 150, 122];\n            break;\n        case 'darkseagreen':\n            color = [143, 188, 139];\n            break;\n        case 'darkslateblue':\n            color = [72, 61, 139];\n            break;\n        case 'darkslategray':\n            color = [47, 79, 79];\n            break;\n        case 'darkturquoise':\n            color = [0, 206, 209];\n            break;\n        case 'darkviolet':\n            color = [148, 0, 211];\n            break;\n        case 'deeppink':\n            color = [255, 20, 147];\n            break;\n        case 'deepskyblue':\n            color = [0, 191, 255];\n            break;\n        case 'dimgray':\n            color = [105, 105, 105];\n            break;\n        case 'dodgerblue':\n            color = [30, 144, 255];\n            break;\n        case 'firebrick':\n            color = [178, 34, 34];\n            break;\n        case 'floralwhite':\n            color = [255, 250, 240];\n            break;\n        case 'forestgreen':\n            color = [34, 139, 34];\n            break;\n        case 'fuchsia':\n            color = [255, 0, 255];\n            break;\n        case 'gainsboro':\n            color = [220, 220, 220];\n            break;\n        case 'ghostwhite':\n            color = [248, 248, 255];\n            break;\n        case 'gold':\n            color = [255, 215, 0];\n            break;\n        case 'goldenrod':\n            color = [218, 165, 32];\n            break;\n        case 'gray':\n            color = [128, 128, 128];\n            break;\n        case 'green':\n            color = [0, 128, 0];\n            break;\n        case 'greenyellow':\n            color = [173, 255, 47];\n            break;\n        case 'honeydew':\n            color = [240, 255, 240];\n            break;\n        case 'hotpink':\n            color = [255, 105, 180];\n            break;\n        case 'indianred':\n            color = [205, 92, 92];\n            break;\n        case 'indigo':\n            color = [75, 0, 130];\n            break;\n        case 'ivory':\n            color = [255, 255, 240];\n            break;\n        case 'khaki':\n            color = [240, 230, 140];\n            break;\n        case 'lavender':\n            color = [230, 230, 250];\n            break;\n        case 'lavenderblush':\n            color = [255, 240, 245];\n            break;\n        case 'lawngreen':\n            color = [124, 252, 0];\n            break;\n        case 'lemonchiffon':\n            color = [255, 250, 205];\n            break;\n        case 'lightblue':\n            color = [173, 216, 230];\n            break;\n        case 'lightcoral':\n            color = [240, 128, 128];\n            break;\n        case 'lightcyan':\n            color = [224, 255, 255];\n            break;\n        case 'lightgoldenrodyellow':\n            color = [250, 250, 210];\n            break;\n        case 'lightgreen':\n            color = [144, 238, 144];\n            break;\n        case 'lightgray':\n            color = [211, 211, 211];\n            break;\n        case 'LightPink':\n            color = [255, 182, 193];\n            break;\n        case 'lightsalmon':\n            color = [255, 160, 122];\n            break;\n        case 'lightseagreen':\n            color = [32, 178, 170];\n            break;\n        case 'lightskyblue':\n            color = [135, 206, 250];\n            break;\n        case 'lightslategray':\n            color = [119, 136, 153];\n            break;\n        case 'lightsteelblue':\n            color = [176, 196, 222];\n            break;\n        case 'lightyellow':\n            color = [255, 255, 224];\n            break;\n        case 'lime':\n            color = [0, 255, 0];\n            break;\n        case 'limeGreen':\n            color = [50, 205, 50];\n            break;\n        case 'linen':\n            color = [250, 240, 230];\n            break;\n        case 'magenta':\n            color = [255, 0, 255];\n            break;\n        case 'maroon':\n            color = [128, 0, 0];\n            break;\n        case 'mediumaquamarine':\n            color = [102, 205, 170];\n            break;\n        case 'mediumblue':\n            color = [0, 0, 205];\n            break;\n        case 'mediumorchid':\n            color = [186, 85, 211];\n            break;\n        case 'mediumpurple':\n            color = [147, 112, 219];\n            break;\n        case 'mediumseagreen':\n            color = [60, 179, 113];\n            break;\n        case 'mediumslateblue':\n            color = [123, 104, 238];\n            break;\n        case 'mediumspringgreen':\n            color = [0, 250, 154];\n            break;\n        case 'mediumturquoise':\n            color = [72, 209, 204];\n            break;\n        case 'mediumvioletred':\n            color = [199, 21, 133];\n            break;\n        case 'midnightblue':\n            color = [25, 25, 112];\n            break;\n        case 'mintcream':\n            color = [245, 255, 250];\n            break;\n        case 'mistyrose':\n            color = [255, 228, 225];\n            break;\n        case 'moccasin':\n            color = [255, 228, 181];\n            break;\n        case 'navajowhite':\n            color = [255, 222, 173];\n            break;\n        case 'navy':\n            color = [0, 0, 128];\n            break;\n        case 'oldLace':\n            color = [253, 245, 230];\n            break;\n        case 'olive':\n            color = [128, 128, 0];\n            break;\n        case 'olivedrab':\n            color = [107, 142, 35];\n            break;\n        case 'orange':\n            color = [255, 165, 0];\n            break;\n        case 'orangered':\n            color = [255, 69, 0];\n            break;\n        case 'orchid':\n            color = [218, 112, 214];\n            break;\n        case 'palegoldenrod':\n            color = [238, 232, 170];\n            break;\n        case 'palegreen':\n            color = [152, 251, 152];\n            break;\n        case 'paleturquoise':\n            color = [175, 238, 238];\n            break;\n        case 'palebioletred':\n            color = [219, 112, 147];\n            break;\n        case 'papayawhip':\n            color = [255, 239, 213];\n            break;\n        case 'peachpuff':\n            color = [255, 218, 185];\n            break;\n        case 'peru':\n            color = [205, 133, 63];\n            break;\n        case 'pink':\n            color = [255, 192, 203];\n            break;\n        case 'plum':\n            color = [221, 160, 221];\n            break;\n        case 'powderblue':\n            color = [176, 224, 230];\n            break;\n        case 'purple':\n            color = [128, 0, 128];\n            break;\n        case 'red':\n            color = [255, 0, 0];\n            break;\n        case 'rosybrown':\n            color = [188, 143, 143];\n            break;\n        case 'royalblue':\n            color = [65, 105, 225];\n            break;\n        case 'saddlebrown':\n            color = [139, 69, 19];\n            break;\n        case 'salmon':\n            color = [250, 128, 114];\n            break;\n        case 'sandybrown':\n            color = [244, 164, 96];\n            break;\n        case 'seagreen':\n            color = [46, 139, 87];\n            break;\n        case 'seashell':\n            color = [255, 245, 238];\n            break;\n        case 'sienna':\n            color = [160, 82, 45];\n            break;\n        case 'silver':\n            color = [192, 192, 192];\n            break;\n        case 'skyblue':\n            color = [135, 206, 235];\n            break;\n        case 'slateblue':\n            color = [106, 90, 205];\n            break;\n        case 'slategray':\n            color = [112, 128, 144];\n            break;\n        case 'snow':\n            color = [255, 250, 250];\n            break;\n        case 'springgreen':\n            color = [0, 255, 127];\n            break;\n        case 'steelblue':\n            color = [70, 130, 180];\n            break;\n        case 'tan':\n            color = [210, 180, 140];\n            break;\n        case 'teal':\n            color = [0, 128, 128];\n            break;\n        case 'thistle':\n            color = [216, 191, 216];\n            break;\n        case 'tomato':\n            color = [255, 99, 71];\n            break;\n        case 'turquoise':\n            color = [64, 224, 208];\n            break;\n        case 'violet':\n            color = [238, 130, 238];\n            break;\n        case 'wheat':\n            color = [245, 222, 179];\n            break;\n        case 'white':\n            color = [255, 255, 255];\n            break;\n        case 'whitesmoke':\n            color = [245, 245, 245];\n            break;\n        case 'yellow':\n            color = [255, 255, 0];\n            break;\n        case 'yellowgreen':\n            color = [154, 205, 50];\n            break;\n    }\n    return color;\n}\n/**\n * Update box value in template bounds.\n *\n * @private\n * @param {PdfTemplate} template Template object.\n * @param {number} angle Angle value.\n * @returns {void} Nothing.\n */\nexport function _setMatrix(template, angle) {\n    var box = template._content.dictionary.getArray('BBox');\n    if (box && typeof angle !== 'undefined' && angle !== null) {\n        if (angle === 0) {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        else {\n            var matrix = new _PdfTransformationMatrix();\n            if (angle === 90) {\n                matrix._translate(box[3], -box[0]);\n            }\n            else if (angle === 180) {\n                matrix._translate(box[2], box[3]);\n            }\n            else if (angle === 270) {\n                matrix._translate(-box[1], box[2]);\n            }\n            matrix._rotate(angle);\n            template._content.dictionary.set('Matrix', matrix._matrix._elements);\n        }\n    }\n}\n/**\n * Get the state item style to string\n *\n * @private\n * @param {PdfCheckBoxStyle} style State item style.\n * @returns {string} return as string value.\n */\nexport function _styleToString(style) {\n    var value = '4';\n    switch (style) {\n        case PdfCheckBoxStyle.circle:\n            value = 'l';\n            break;\n        case PdfCheckBoxStyle.cross:\n            value = '8';\n            break;\n        case PdfCheckBoxStyle.diamond:\n            value = 'u';\n            break;\n        case PdfCheckBoxStyle.square:\n            value = 'n';\n            break;\n        case PdfCheckBoxStyle.star:\n            value = 'H';\n            break;\n    }\n    return value;\n}\n/**\n * Get the string to state item style\n *\n * @private\n * @param {string} style State item style as string.\n * @returns {PdfCheckBoxStyle} return as state item style.\n */\nexport function _stringToStyle(style) {\n    var value = PdfCheckBoxStyle.check;\n    switch (style) {\n        case 'l':\n            value = PdfCheckBoxStyle.circle;\n            break;\n        case '8':\n            value = PdfCheckBoxStyle.cross;\n            break;\n        case 'u':\n            value = PdfCheckBoxStyle.diamond;\n            break;\n        case 'n':\n            value = PdfCheckBoxStyle.square;\n            break;\n        case 'H':\n            value = PdfCheckBoxStyle.star;\n            break;\n    }\n    return value;\n}\n/**\n * Map measurement unit type.\n *\n * @private\n * @param {string} unitString measurement unit as string.\n * @returns {PdfMeasurementUnit} measurement unit.\n */\nexport function _mapMeasurementUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n        case 'in':\n            unit = PdfMeasurementUnit.inch;\n            break;\n        case 'mm':\n            unit = PdfMeasurementUnit.millimeter;\n            break;\n        case 'p':\n            unit = PdfMeasurementUnit.pica;\n            break;\n        case 'pt':\n            unit = PdfMeasurementUnit.point;\n            break;\n        default:\n            unit = PdfMeasurementUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map markup annotation type.\n *\n * @private\n * @param {string} text markup type as string.\n * @returns {PdfTextMarkupAnnotationType} markup type as name.\n */\nexport function _mapMarkupAnnotationType(text) {\n    var type;\n    switch (text) {\n        case 'Highlight':\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n        case 'Squiggly':\n            type = PdfTextMarkupAnnotationType.squiggly;\n            break;\n        case 'StrikeOut':\n            type = PdfTextMarkupAnnotationType.strikeOut;\n            break;\n        case 'Underline':\n            type = PdfTextMarkupAnnotationType.underline;\n            break;\n        default:\n            type = PdfTextMarkupAnnotationType.highlight;\n            break;\n    }\n    return type;\n}\n/**\n * Reverse text markup annotation type.\n *\n * @private\n * @param {PdfTextMarkupAnnotationType} type markup type.\n * @returns {string} markup type as name.\n */\nexport function _reverseMarkupAnnotationType(type) {\n    var token = 'Highlight';\n    switch (type) {\n        case PdfTextMarkupAnnotationType.highlight:\n            token = 'Highlight';\n            break;\n        case PdfTextMarkupAnnotationType.squiggly:\n            token = 'Squiggly';\n            break;\n        case PdfTextMarkupAnnotationType.strikeOut:\n            token = 'StrikeOut';\n            break;\n        case PdfTextMarkupAnnotationType.underline:\n            token = 'Underline';\n            break;\n        default:\n            token = 'Highlight';\n            break;\n    }\n    return token;\n}\n/**\n * Map graphics unit.\n *\n * @private\n * @param {string} unitString String value.\n * @returns {_PdfGraphicsUnit} PDF graphics unit.\n */\nexport function _mapGraphicsUnit(unitString) {\n    var unit;\n    switch (unitString) {\n        case 'cm':\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n        case 'in':\n            unit = _PdfGraphicsUnit.inch;\n            break;\n        case 'mm':\n            unit = _PdfGraphicsUnit.millimeter;\n            break;\n        case 'p':\n            unit = _PdfGraphicsUnit.pica;\n            break;\n        case 'pt':\n            unit = _PdfGraphicsUnit.point;\n            break;\n        default:\n            unit = _PdfGraphicsUnit.centimeter;\n            break;\n    }\n    return unit;\n}\n/**\n * Map rubber stamp icon.\n *\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Rubber stamp icon.\n */\nexport function _mapRubberStampIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case '#Approved':\n        case 'SBApproved':\n            icon = PdfRubberStampAnnotationIcon.approved;\n            break;\n        case '#AsIs':\n        case 'SBAsIs':\n            icon = PdfRubberStampAnnotationIcon.asIs;\n            break;\n        case '#Completed':\n        case 'SBCompleted':\n            icon = PdfRubberStampAnnotationIcon.completed;\n            break;\n        case '#Confidential':\n        case 'SBConfidential':\n            icon = PdfRubberStampAnnotationIcon.confidential;\n            break;\n        case '#Departmental':\n        case 'SBDepartmental':\n            icon = PdfRubberStampAnnotationIcon.departmental;\n            break;\n        case '#Draft':\n        case 'SBDraft':\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n        case '#Experimental':\n        case 'SBExperimental':\n            icon = PdfRubberStampAnnotationIcon.experimental;\n            break;\n        case '#Expired':\n        case 'SBExpired':\n            icon = PdfRubberStampAnnotationIcon.expired;\n            break;\n        case '#Final':\n        case 'SBFinal':\n            icon = PdfRubberStampAnnotationIcon.final;\n            break;\n        case '#ForComment':\n        case 'SBForComment':\n            icon = PdfRubberStampAnnotationIcon.forComment;\n            break;\n        case '#ForPublicRelease':\n        case 'SBForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.forPublicRelease;\n            break;\n        case '#InformationOnly':\n        case 'SBInformationOnly':\n            icon = PdfRubberStampAnnotationIcon.informationOnly;\n            break;\n        case '#NotApproved':\n        case 'SBNotApproved':\n            icon = PdfRubberStampAnnotationIcon.notApproved;\n            break;\n        case '#NotForPublicRelease':\n        case 'SBNotForPublicRelease':\n            icon = PdfRubberStampAnnotationIcon.notForPublicRelease;\n            break;\n        case '#PreliminaryResults':\n        case 'SBPreliminaryResults':\n            icon = PdfRubberStampAnnotationIcon.preliminaryResults;\n            break;\n        case '#Sold':\n        case 'SBSold':\n            icon = PdfRubberStampAnnotationIcon.sold;\n            break;\n        case '#TopSecret':\n        case 'SBTopSecret':\n            icon = PdfRubberStampAnnotationIcon.topSecret;\n            break;\n        case '#Void':\n        case 'SBVoid':\n            icon = PdfRubberStampAnnotationIcon.void;\n            break;\n        default:\n            icon = PdfRubberStampAnnotationIcon.draft;\n            break;\n    }\n    return icon;\n}\n/**\n * Map popup icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfRubberStampAnnotationIcon} Popup icon.\n */\nexport function _mapPopupIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'Note':\n            icon = PdfPopupIcon.note;\n            break;\n        case 'Comment':\n            icon = PdfPopupIcon.comment;\n            break;\n        case 'Help':\n            icon = PdfPopupIcon.help;\n            break;\n        case 'Insert':\n            icon = PdfPopupIcon.insert;\n            break;\n        case 'Key':\n            icon = PdfPopupIcon.key;\n            break;\n        case 'NewParagraph':\n            icon = PdfPopupIcon.newParagraph;\n            break;\n        case 'Paragraph':\n            icon = PdfPopupIcon.paragraph;\n            break;\n        default:\n            icon = PdfPopupIcon.note;\n            break;\n    }\n    return icon;\n}\n/**\n * Convert annotation state to string value.\n *\n * @private\n * @param {PdfAnnotationState} type Annotation state.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationState(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationState.none:\n            token = 'None';\n            break;\n        case PdfAnnotationState.accepted:\n            token = 'Accepted';\n            break;\n        case PdfAnnotationState.rejected:\n            token = 'Rejected';\n            break;\n        case PdfAnnotationState.cancel:\n            token = 'Cancelled';\n            break;\n        case PdfAnnotationState.completed:\n            token = 'Completed';\n            break;\n        case PdfAnnotationState.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationState.unmarked:\n            token = 'Unmarked';\n            break;\n        case PdfAnnotationState.unknown:\n            token = 'Unknown';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationState} Annotation state.\n */\nexport function _mapAnnotationState(type) {\n    var token = PdfAnnotationState.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationState.none;\n            break;\n        case 'Accepted':\n            token = PdfAnnotationState.accepted;\n            break;\n        case 'Rejected':\n            token = PdfAnnotationState.rejected;\n            break;\n        case 'Cancelled':\n            token = PdfAnnotationState.cancel;\n            break;\n        case 'Completed':\n            token = PdfAnnotationState.completed;\n            break;\n        case 'Marked':\n            token = PdfAnnotationState.marked;\n            break;\n        case 'Unmarked':\n            token = PdfAnnotationState.unmarked;\n            break;\n        case 'Unknown':\n            token = PdfAnnotationState.unknown;\n            break;\n    }\n    return token;\n}\n/**\n * Convert annotation state model to string value.\n *\n * @private\n * @param {PdfAnnotationStateModel} type Annotation state model.\n * @returns {string} String value.\n */\nexport function _reverseMapAnnotationStateModel(type) {\n    var token = 'None';\n    switch (type) {\n        case PdfAnnotationStateModel.none:\n            token = 'None';\n            break;\n        case PdfAnnotationStateModel.marked:\n            token = 'Marked';\n            break;\n        case PdfAnnotationStateModel.review:\n            token = 'Review';\n            break;\n        default:\n            token = 'None';\n            break;\n    }\n    return token;\n}\n/**\n * Convert string value to annotation state model.\n *\n * @private\n * @param {string} type String value.\n * @returns {PdfAnnotationStateModel} Annotation state model.\n */\nexport function _mapAnnotationStateModel(type) {\n    var token = PdfAnnotationStateModel.none;\n    switch (type) {\n        case 'None':\n            token = PdfAnnotationStateModel.none;\n            break;\n        case 'Marked':\n            token = PdfAnnotationStateModel.marked;\n            break;\n        case 'Review':\n            token = PdfAnnotationStateModel.review;\n            break;\n    }\n    return token;\n}\n/**\n * Map attachment icon.\n *\n * @private\n * @param {string} iconString String value.\n * @returns {PdfAttachmentIcon} Icon.\n */\nexport function _mapAttachmentIcon(iconString) {\n    var icon;\n    switch (iconString) {\n        case 'PushPin':\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n        case 'Tag':\n            icon = PdfAttachmentIcon.tag;\n            break;\n        case 'Graph':\n            icon = PdfAttachmentIcon.graph;\n            break;\n        case 'Paperclip':\n            icon = PdfAttachmentIcon.paperClip;\n            break;\n        default:\n            icon = PdfAttachmentIcon.pushPin;\n            break;\n    }\n    return icon;\n}\n/**\n * Map attachment intent.\n *\n * @private\n * @param {string} intentString String value.\n * @returns {PdfAnnotationIntent} intent.\n */\nexport function _mapAnnotationIntent(intentString) {\n    var intent;\n    switch (intentString) {\n        case 'None':\n            intent = PdfAnnotationIntent.none;\n            break;\n        case 'FreeTextCallout':\n            intent = PdfAnnotationIntent.freeTextCallout;\n            break;\n        case 'FreeTextTypeWriter':\n            intent = PdfAnnotationIntent.freeTextTypeWriter;\n            break;\n        default:\n            intent = PdfAnnotationIntent.none;\n            break;\n    }\n    return intent;\n}\n/**\n * Convert PDF font style to string value.\n *\n * @private\n * @param {PdfFontStyle} style Font style.\n * @returns {string} String value.\n */\nexport function _reverseMapPdfFontStyle(style) {\n    var value = [];\n    if ((style & PdfFontStyle.bold) > 0) {\n        value.push('Bold');\n    }\n    if ((style & PdfFontStyle.italic) > 0) {\n        value.push('Italic');\n    }\n    if ((style & PdfFontStyle.underline) > 0) {\n        value.push('Underline');\n    }\n    if ((style & PdfFontStyle.strikeout) > 0) {\n        value.push('Strikeout');\n    }\n    if (value.length === 0) {\n        return 'Regular';\n    }\n    return value.join(', ');\n}\n/**\n * Get special character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getSpecialCharacter(input) {\n    var result;\n    switch (input) {\n        case 'head2right':\n            result = '\\u27A2';\n            break;\n        case 'aacute':\n            result = 'a\\u0301';\n            break;\n        case 'eacute':\n            result = 'e\\u0301';\n            break;\n        case 'iacute':\n            result = 'i\\u0301';\n            break;\n        case 'oacute':\n            result = 'o\\u0301';\n            break;\n        case 'uacute':\n            result = 'u\\u0301';\n            break;\n        case 'circleright':\n            result = '\\u27B2';\n            break;\n        case 'bleft':\n            result = '\\u21E6';\n            break;\n        case 'bright':\n            result = '\\u21E8';\n            break;\n        case 'bup':\n            result = '\\u21E7';\n            break;\n        case 'bdown':\n            result = '\\u21E9';\n            break;\n        case 'barb4right':\n            result = '\\u2794';\n            break;\n        case 'bleftright':\n            result = '\\u2B04';\n            break;\n        case 'bupdown':\n            result = '\\u21F3';\n            break;\n        case 'bnw':\n            result = '\\u2B00';\n            break;\n        case 'bne':\n            result = '\\u2B01';\n            break;\n        case 'bsw':\n            result = '\\u2B03';\n            break;\n        case 'bse':\n            result = '\\u2B02';\n            break;\n        case 'bdash1':\n            result = '\\u25AD';\n            break;\n        case 'bdash2':\n            result = '\\u25AB';\n            break;\n        case 'xmarkbld':\n            result = '\\u2717';\n            break;\n        case 'checkbld':\n            result = '\\u2713';\n            break;\n        case 'boxxmarkbld':\n            result = '\\u2612';\n            break;\n        case 'boxcheckbld':\n            result = '\\u2611';\n            break;\n        case 'space':\n            result = '\\u0020';\n            break;\n        case 'pencil':\n            result = '\\u270F';\n            break;\n        case 'scissors':\n            result = '\\u2702';\n            break;\n        case 'scissorscutting':\n            result = '\\u2701';\n            break;\n        case 'readingglasses':\n            result = '\\u2701';\n            break;\n        case 'bell':\n            result = '\\u2701';\n            break;\n        case 'book':\n            result = '\\u2701';\n            break;\n        case 'telephonesolid':\n            result = '\\u2701';\n            break;\n        case 'telhandsetcirc':\n            result = '\\u2701';\n            break;\n        case 'envelopeback':\n            result = '\\u2701';\n            break;\n        case 'hourglass':\n            result = '\\u231B';\n            break;\n        case 'keyboard':\n            result = '\\u2328';\n            break;\n        case 'tapereel':\n            result = '\\u2707';\n            break;\n        case 'handwrite':\n            result = '\\u270D';\n            break;\n        case 'handv':\n            result = '\\u270C';\n            break;\n        case 'handptleft':\n            result = '\\u261C';\n            break;\n        case 'handptright':\n            result = '\\u261E';\n            break;\n        case 'handptup':\n            result = '\\u261D';\n            break;\n        case 'handptdown':\n            result = '\\u261F';\n            break;\n        case 'smileface':\n            result = '\\u263A';\n            break;\n        case 'frownface':\n            result = '\\u2639';\n            break;\n        case 'skullcrossbones':\n            result = '\\u2620';\n            break;\n        case 'flag':\n            result = '\\u2690';\n            break;\n        case 'pennant':\n            result = '\\u1F6A9';\n            break;\n        case 'airplane':\n            result = '\\u2708';\n            break;\n        case 'sunshine':\n            result = '\\u263C';\n            break;\n        case 'droplet':\n            result = '\\u1F4A7';\n            break;\n        case 'snowflake':\n            result = '\\u2744';\n            break;\n        case 'crossshadow':\n            result = '\\u271E';\n            break;\n        case 'crossmaltese':\n            result = '\\u2720';\n            break;\n        case 'starofdavid':\n            result = '\\u2721';\n            break;\n        case 'crescentstar':\n            result = '\\u262A';\n            break;\n        case 'yinyang':\n            result = '\\u262F';\n            break;\n        case 'om':\n            result = '\\u0950';\n            break;\n        case 'wheel':\n            result = '\\u2638';\n            break;\n        case 'aries':\n            result = '\\u2648';\n            break;\n        case 'taurus':\n            result = '\\u2649';\n            break;\n        case 'gemini':\n            result = '\\u264A';\n            break;\n        case 'cancer':\n            result = '\\u264B';\n            break;\n        case 'leo':\n            result = '\\u264C';\n            break;\n        case 'virgo':\n            result = '\\u264D';\n            break;\n        case 'libra':\n            result = '\\u264E';\n            break;\n        case 'scorpio':\n            result = '\\u264F';\n            break;\n        case 'saggitarius':\n            result = '\\u2650';\n            break;\n        case 'capricorn':\n            result = '\\u2651';\n            break;\n        case 'aquarius':\n            result = '\\u2652';\n            break;\n        case 'pisces':\n            result = '\\u2653';\n            break;\n        case 'ampersanditlc':\n            result = '\\u0026';\n            break;\n        case 'ampersandit':\n            result = '\\u0026';\n            break;\n        case 'circle6':\n            result = '\\u25CF';\n            break;\n        case 'circleshadowdwn':\n            result = '\\u274D';\n            break;\n        case 'square6':\n            result = '\\u25A0';\n            break;\n        case 'box3':\n            result = '\\u25A1';\n            break;\n        case 'boxshadowdwn':\n            result = '\\u2751';\n            break;\n        case 'boxshadowup':\n            result = '\\u2752';\n            break;\n        case 'lozenge4':\n            result = '\\u2B27';\n            break;\n        case 'lozenge6':\n            result = '\\u29EB';\n            break;\n        case 'rhombus6':\n            result = '\\u25C6';\n            break;\n        case 'xrhombus':\n            result = '\\u2756';\n            break;\n        case 'rhombus4':\n            result = '\\u2B25';\n            break;\n        case 'clear':\n            result = '\\u2327';\n            break;\n        case 'escape':\n            result = '\\u2353';\n            break;\n        case 'command':\n            result = '\\u2318';\n            break;\n        case 'rosette':\n            result = '\\u2740';\n            break;\n        case 'rosettesolid':\n            result = '\\u273F';\n            break;\n        case 'quotedbllftbld':\n            result = '\\u275D';\n            break;\n        case 'quotedblrtbld':\n            result = '\\u275E';\n            break;\n        case '.notdef':\n            result = '\\u25AF';\n            break;\n        case 'zerosans':\n            result = '\\u24EA';\n            break;\n        case 'onesans':\n            result = '\\u2460';\n            break;\n        case 'twosans':\n            result = '\\u2461';\n            break;\n        case 'threesans':\n            result = '\\u2462';\n            break;\n        case 'foursans':\n            result = '\\u2463';\n            break;\n        case 'fivesans':\n            result = '\\u2464';\n            break;\n        case 'sixsans':\n            result = '\\u2465';\n            break;\n        case 'sevensans':\n            result = '\\u2466';\n            break;\n        case 'eightsans':\n            result = '\\u2467';\n            break;\n        case 'ninesans':\n            result = '\\u2468';\n            break;\n        case 'tensans':\n            result = '\\u2469';\n            break;\n        case 'zerosansinv':\n            result = '\\u24FF';\n            break;\n        case 'onesansinv':\n            result = '\\u2776';\n            break;\n        case 'twosansinv':\n            result = '\\u2777';\n            break;\n        case 'threesansinv':\n            result = '\\u2778';\n            break;\n        case 'foursansinv':\n            result = '\\u2779';\n            break;\n        case 'circle2':\n            result = '\\u00B7';\n            break;\n        case 'circle4':\n            result = '\\u2022';\n            break;\n        case 'square2':\n            result = '\\u25AA';\n            break;\n        case 'ring2':\n            result = '\\u25CB';\n            break;\n        case 'ringbutton2':\n            result = '\\u25C9';\n            break;\n        case 'target':\n            result = '\\u25CE';\n            break;\n        case 'square4':\n            result = '\\u25AA';\n            break;\n        case 'box2':\n            result = '\\u25FB';\n            break;\n        case 'crosstar2':\n            result = '\\u2726';\n            break;\n        case 'pentastar2':\n            result = '\\u2605';\n            break;\n        case 'hexstar2':\n            result = '\\u2736';\n            break;\n        case 'octastar2':\n            result = '\\u2734';\n            break;\n        case 'dodecastar3':\n            result = '\\u2739';\n            break;\n        case 'octastar4':\n            result = '\\u2735';\n            break;\n        case 'registercircle':\n            result = '\\u2316';\n            break;\n        case 'cuspopen':\n            result = '\\u27E1';\n            break;\n        case 'cuspopen1':\n            result = '\\u2311';\n            break;\n        case 'circlestar':\n            result = '\\u2605';\n            break;\n        case 'starshadow':\n            result = '\\u2730';\n            break;\n        case 'deleteleft':\n            result = '\\u232B';\n            break;\n        case 'deleteright':\n            result = '\\u2326';\n            break;\n        case 'scissorsoutline':\n            result = '\\u2704';\n            break;\n        case 'telephone':\n            result = '\\u260F';\n            break;\n        case 'telhandset':\n            result = '\\u1F4DE';\n            break;\n        case 'handptlft1':\n            result = '\\u261C';\n            break;\n        case 'handptrt1':\n            result = '\\u261E';\n            break;\n        case 'handptlftsld1':\n            result = '\\u261A';\n            break;\n        case 'handptrtsld1':\n            result = '\\u261B';\n            break;\n        case 'handptup1':\n            result = '\\u261D';\n            break;\n        case 'handptdwn1':\n            result = '\\u261F';\n            break;\n        case 'xmark':\n            result = '\\u2717';\n            break;\n        case 'check':\n            result = '\\u2713';\n            break;\n        case 'boxcheck':\n            result = '\\u2611';\n            break;\n        case 'boxx':\n            result = '\\u2612';\n            break;\n        case 'boxxbld':\n            result = '\\u2612';\n            break;\n        case 'circlex':\n            result = '=\\u2314';\n            break;\n        case 'circlexbld':\n            result = '\\u2314';\n            break;\n        case 'prohibit':\n        case 'prohibitbld':\n            result = '\\u29B8';\n            break;\n        case 'ampersanditaldm':\n        case 'ampersandbld':\n        case 'ampersandsans':\n        case 'ampersandsandm':\n            result = '\\u0026';\n            break;\n        case 'interrobang':\n        case 'interrobangdm':\n        case 'interrobangsans':\n        case 'interrobngsandm':\n            result = '\\u203D';\n            break;\n        case 'sacute':\n            result = 'ś';\n            break;\n        case 'Sacute':\n            result = 'Ś';\n            break;\n        case 'eogonek':\n            result = 'ę';\n            break;\n        case 'cacute':\n            result = 'ć';\n            break;\n        case 'aogonek':\n            result = 'ą';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Get latin character.\n *\n * @private\n * @param {string} input Input string.\n * @returns {string} String value.\n */\nexport function _getLatinCharacter(input) {\n    var result;\n    switch (input) {\n        case 'zero':\n            result = '0';\n            break;\n        case 'one':\n            result = '1';\n            break;\n        case 'two':\n            result = '2';\n            break;\n        case 'three':\n            result = '3';\n            break;\n        case 'four':\n            result = '4';\n            break;\n        case 'five':\n            result = '5';\n            break;\n        case 'six':\n            result = '6';\n            break;\n        case 'seven':\n            result = '7';\n            break;\n        case 'eight':\n            result = '8';\n            break;\n        case 'nine':\n            result = '9';\n            break;\n        case 'aacute':\n            result = 'á';\n            break;\n        case 'asciicircum':\n            result = '^';\n            break;\n        case 'asciitilde':\n            result = '~';\n            break;\n        case 'asterisk':\n            result = '*';\n            break;\n        case 'at':\n            result = '@';\n            break;\n        case 'atilde':\n            result = 'ã';\n            break;\n        case 'backslash':\n            result = '\\\\';\n            break;\n        case 'bar':\n            result = '|';\n            break;\n        case 'braceleft':\n            result = '{';\n            break;\n        case 'braceright':\n            result = '}';\n            break;\n        case 'bracketleft':\n            result = '[';\n            break;\n        case 'bracketright':\n            result = ']';\n            break;\n        case 'breve':\n            result = '˘';\n            break;\n        case 'brokenbar':\n            result = '|';\n            break;\n        case 'bullet3':\n            result = '•';\n            break;\n        case 'bullet':\n            result = '•';\n            break;\n        case 'caron':\n            result = 'ˇ';\n            break;\n        case 'ccedilla':\n            result = 'ç';\n            break;\n        case 'cedilla':\n            result = '¸';\n            break;\n        case 'cent':\n            result = '¢';\n            break;\n        case 'circumflex':\n            result = 'ˆ';\n            break;\n        case 'colon':\n            result = ':';\n            break;\n        case 'comma':\n            result = ',';\n            break;\n        case 'copyright':\n            result = '©';\n            break;\n        case 'currency1':\n            result = '¤';\n            break;\n        case 'dagger':\n            result = '†';\n            break;\n        case 'daggerdbl':\n            result = '‡';\n            break;\n        case 'degree':\n            result = '°';\n            break;\n        case 'dieresis':\n            result = '¨';\n            break;\n        case 'divide':\n            result = '÷';\n            break;\n        case 'dollar':\n            result = '$';\n            break;\n        case 'dotaccent':\n            result = '˙';\n            break;\n        case 'dotlessi':\n            result = 'ı';\n            break;\n        case 'eacute':\n            result = 'é';\n            break;\n        case 'middot':\n            result = '˙';\n            break;\n        case 'edieresis':\n            result = 'ë';\n            break;\n        case 'egrave':\n            result = 'è';\n            break;\n        case 'ellipsis':\n            result = '...';\n            break;\n        case 'emdash':\n            result = '—';\n            break;\n        case 'endash':\n            result = '–';\n            break;\n        case 'equal':\n            result = '=';\n            break;\n        case 'eth':\n            result = 'ð';\n            break;\n        case 'exclam':\n            result = '!';\n            break;\n        case 'exclamdown':\n            result = '¡';\n            break;\n        case 'florin':\n            result = 'ƒ';\n            break;\n        case 'fraction':\n            result = '⁄';\n            break;\n        case 'germandbls':\n            result = 'ß';\n            break;\n        case 'grave':\n            result = '`';\n            break;\n        case 'greater':\n            result = '>';\n            break;\n        case 'guillemotleft4':\n            result = '«';\n            break;\n        case 'guillemotright4':\n            result = '»';\n            break;\n        case 'guilsinglleft':\n            result = '‹';\n            break;\n        case 'guilsinglright':\n            result = '›';\n            break;\n        case 'hungarumlaut':\n            result = '˝';\n            break;\n        case 'hyphen5':\n            result = '-';\n            break;\n        case 'iacute':\n            result = 'í';\n            break;\n        case 'icircumflex':\n            result = 'î';\n            break;\n        case 'idieresis':\n            result = 'ï';\n            break;\n        case 'igrave':\n            result = 'ì';\n            break;\n        case 'less':\n            result = '<';\n            break;\n        case 'logicalnot':\n            result = '¬';\n            break;\n        case 'lslash':\n            result = 'ł';\n            break;\n        case 'Lslash':\n            result = 'Ł';\n            break;\n        case 'macron':\n            result = '¯';\n            break;\n        case 'minus':\n            result = '−';\n            break;\n        case 'mu':\n            result = 'μ';\n            break;\n        case 'multiply':\n            result = '×';\n            break;\n        case 'ntilde':\n            result = 'ñ';\n            break;\n        case 'numbersign':\n            result = '#';\n            break;\n        case 'oacute':\n            result = 'ó';\n            break;\n        case 'ocircumflex':\n            result = 'ô';\n            break;\n        case 'odieresis':\n            result = 'ö';\n            break;\n        case 'oe':\n            result = 'oe';\n            break;\n        case 'ogonek':\n            result = '˛';\n            break;\n        case 'ograve':\n            result = 'ò';\n            break;\n        case 'onehalf':\n            result = '1/2';\n            break;\n        case 'onequarter':\n            result = '1/4';\n            break;\n        case 'onesuperior':\n            result = '¹';\n            break;\n        case 'ordfeminine':\n            result = 'ª';\n            break;\n        case 'ordmasculine':\n            result = 'º';\n            break;\n        case 'otilde':\n            result = 'õ';\n            break;\n        case 'paragraph':\n            result = '¶';\n            break;\n        case 'parenleft':\n            result = '(';\n            break;\n        case 'parenright':\n            result = ')';\n            break;\n        case 'percent':\n            result = '%';\n            break;\n        case 'period':\n            result = '.';\n            break;\n        case 'periodcentered':\n            result = '·';\n            break;\n        case 'perthousand':\n            result = '‰';\n            break;\n        case 'plus':\n            result = '+';\n            break;\n        case 'plusminus':\n            result = '±';\n            break;\n        case 'question':\n            result = '?';\n            break;\n        case 'questiondown':\n            result = '¿';\n            break;\n        case 'quotedbl':\n            result = '\\'';\n            break;\n        case 'quotedblbase':\n            result = '„';\n            break;\n        case 'quotedblleft':\n            result = '“';\n            break;\n        case 'quotedblright':\n            result = '”';\n            break;\n        case 'quoteleft':\n            result = '‘';\n            break;\n        case 'quoteright':\n            result = '’';\n            break;\n        case 'quotesinglbase':\n            result = '‚';\n            break;\n        case 'quotesingle':\n            result = '\\'';\n            break;\n        case 'registered':\n            result = '®';\n            break;\n        case 'ring':\n            result = '˚';\n            break;\n        case 'scaron':\n            result = 'š';\n            break;\n        case 'section':\n            result = '§';\n            break;\n        case 'semicolon':\n            result = ';';\n            break;\n        case 'slash':\n            result = '/';\n            break;\n        case 'space6':\n            result = ' ';\n            break;\n        case 'space':\n            result = ' ';\n            break;\n        case 'udieresis':\n            result = 'ü';\n            break;\n        case 'uacute':\n            result = 'ú';\n            break;\n        case 'Ecircumflex':\n            result = 'Ê';\n            break;\n        case 'hyphen':\n            result = '-';\n            break;\n        case 'underscore':\n            result = '_';\n            break;\n        case 'adieresis':\n            result = 'ä';\n            break;\n        case 'ampersand':\n            result = '&';\n            break;\n        case 'Adieresis':\n            result = 'Ä';\n            break;\n        case 'Udieresis':\n            result = 'Ü';\n            break;\n        case 'ccaron':\n            result = 'č';\n            break;\n        case 'Scaron':\n            result = 'Š';\n            break;\n        case 'zcaron':\n            result = 'ž';\n            break;\n        case 'sterling':\n            result = '£';\n            break;\n        case 'agrave':\n            result = 'à';\n            break;\n        case 'ecircumflex':\n            result = 'ê';\n            break;\n        case 'acircumflex':\n            result = 'â';\n            break;\n        case 'Oacute':\n            result = 'Ó';\n            break;\n        default:\n            result = input;\n            break;\n    }\n    return result;\n}\n/**\n * Encode value to string.\n *\n * @private\n * @param {string} value Input string.\n * @returns {string} result.\n */\nexport function _encodeValue(value) {\n    var name = '';\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i) & 0xff;\n        var entry = String.fromCharCode(code);\n        var hex = '';\n        switch (entry) {\n            case ' ':\n            case '%':\n            case '(':\n            case ')':\n            case '<':\n            case '>':\n            case '[':\n            case ']':\n            case '{':\n            case '}':\n            case '/':\n            case '#':\n                name += '#';\n                hex = code.toString(16).toUpperCase();\n                name += (hex.length === 1 ? ('0' + hex) : hex);\n                break;\n            default:\n                if (code > 126 || code < 37) {\n                    name += '#';\n                    hex = code.toString(16).toUpperCase();\n                    name += (hex.length === 1 ? ('0' + hex) : hex);\n                }\n                else {\n                    name += entry;\n                }\n                break;\n        }\n    }\n    return name;\n}\n/**\n * Parse and retrieve comments and review history from the annotation.\n *\n * @private\n * @param {PdfComment} annotation Input annotation.\n * @param {boolean} isReview Input is review or not.\n * @returns {PdfPopupAnnotationCollection} result.\n */\nexport function _getCommentsOrReview(annotation, isReview) {\n    if (isReview) {\n        return annotation.reviewHistory;\n    }\n    else {\n        return annotation.comments;\n    }\n}\n/**\n * Returns true if input dictionary is belongs to the review history.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is review or not.\n */\nexport function _checkReview(dictionary) {\n    var flag = dictionary.get('F');\n    return ((dictionary.has('State') || dictionary.has('StateModel')) && (flag === 30 || flag === 128));\n}\n/**\n * Returns true if input dictionary is belongs to the comments.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @returns {boolean} Input is comments or not.\n */\nexport function _checkComment(dictionary) {\n    var flag = dictionary.get('F');\n    return (!(dictionary.has('State') || dictionary.has('StateModel')) && (flag === 28 || flag === 128));\n}\n/**\n * Update visibility.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {PdfFormFieldVisibility} value Visibility.\n * @returns {void} Nothing.\n */\nexport function _updateVisibility(dictionary, value) {\n    if (dictionary.has('F')) {\n        delete dictionary._map.F;\n        dictionary._updated = true;\n    }\n    switch (value) {\n        case PdfFormFieldVisibility.hidden:\n            dictionary.update('F', PdfAnnotationFlag.hidden);\n            break;\n        case PdfFormFieldVisibility.hiddenPrintable:\n            dictionary.update('F', (PdfAnnotationFlag.noView | PdfAnnotationFlag.print));\n            break;\n        case PdfFormFieldVisibility.visible:\n            if (dictionary.has('DV')) {\n                delete dictionary._map.DV;\n                dictionary._updated = true;\n            }\n            if (dictionary.has('MK')) {\n                var mkDict = dictionary.get('MK');\n                if (mkDict && mkDict.has('BG')) {\n                    delete mkDict._map.BG;\n                    mkDict._updated = true;\n                }\n            }\n            break;\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {_PdfDictionary} dictionary Input dictionary.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @param {string} key Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateReference(dictionary, crossTable, key) {\n    if (dictionary && dictionary.has(key)) {\n        var oldAppearance = dictionary.getRaw(key);\n        if (oldAppearance && oldAppearance instanceof _PdfReference && oldAppearance._isNew) {\n            var appearance = dictionary.get(key); // eslint-disable-line\n            if (appearance) {\n                if (appearance instanceof _PdfReference) {\n                    appearance = crossTable._fetch(appearance);\n                }\n                var appearanceDictionary = void 0;\n                if (appearance instanceof _PdfDictionary) {\n                    appearanceDictionary = appearance;\n                }\n                else if (appearance instanceof _PdfBaseStream) {\n                    appearanceDictionary = appearance.dictionary;\n                }\n                if (appearanceDictionary && appearanceDictionary.has('Resources')) {\n                    _removeDuplicateFromResources(appearanceDictionary.get('Resources'), crossTable);\n                }\n            }\n            crossTable._cacheMap.delete(oldAppearance);\n        }\n    }\n}\n/**\n * Remove duplicate reference from resources.\n *\n * @private\n * @param {_PdfDictionary} resources Input resources.\n * @param {_PdfCrossReference} crossTable Cross reference table.\n * @returns {void} Nothing.\n */\nexport function _removeDuplicateFromResources(resources, crossTable) {\n    if (resources && resources.size > 0) {\n        resources.forEach(function (key, value) {\n            if (typeof key !== 'undefined' && typeof value !== 'undefined') {\n                if (value instanceof _PdfReference) {\n                    var reference = value;\n                    if (reference._isNew) {\n                        var dictionary = resources.get(key);\n                        if (dictionary && dictionary instanceof _PdfDictionary) {\n                            if (key === 'XObject' && dictionary.has('Resources')) {\n                                _removeDuplicateFromResources(dictionary.get('Resources'), crossTable);\n                            }\n                            crossTable._cacheMap.delete(reference);\n                        }\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    if (value.has('Resources')) {\n                        _removeDuplicateFromResources(value.get('Resources'), crossTable);\n                    }\n                    if (key === 'Font' || key === 'XObject' || key === 'ExtGState') {\n                        _removeDuplicateFromResources(value, crossTable);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * Remove duplicate reference.\n *\n * @private\n * @param {any} normal Input.\n * @param {_PdfCrossReference} crossReference Cross reference table.\n * @param {string} firstKey Key string for appearance type.\n * @param {string} secondKey Key string for appearance type.\n * @returns {void} Nothing.\n */\nexport function _removeReferences(normal, crossReference, firstKey, secondKey) {\n    var normalElement;\n    if (normal) {\n        if (normal instanceof _PdfDictionary) {\n            normalElement = normal;\n        }\n        else if (normal instanceof _PdfStream) {\n            normalElement = normal.dictionary;\n        }\n    }\n    if (normalElement) {\n        _removeDuplicateReference(normalElement, crossReference, firstKey);\n        _removeDuplicateReference(normalElement, crossReference, secondKey);\n    }\n}\nvar BaseException = /** @class */ (function () {\n    function BaseException(message, name) {\n        this.message = message;\n        this.name = name;\n    }\n    return BaseException;\n}());\nexport { BaseException };\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(message) {\n        return _super.call(this, message, 'FormatError') || this;\n    }\n    return FormatError;\n}(BaseException));\nexport { FormatError };\nvar ParserEndOfFileException = /** @class */ (function (_super) {\n    __extends(ParserEndOfFileException, _super);\n    function ParserEndOfFileException(message) {\n        return _super.call(this, message, 'ParserEndOfFileException') || this;\n    }\n    return ParserEndOfFileException;\n}(BaseException));\nexport { ParserEndOfFileException };\n/**\n * Gets the default string.\n *\n * @param {string} item Input string.\n * @returns {string} result.\n */\nexport function _defaultToString(item) {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n/**\n * Gets the form field font.\n *\n * @param {PdfForm} form form.\n * @param {PdfWidgetAnnotation} widget widget annotation.\n * @param {PdfField} field field.\n * @returns {PdfFont} font.\n */\nexport function _obtainFontDetails(form, widget, field) {\n    var fontFamily = '';\n    var fontSize;\n    var font;\n    var defaultAppearance;\n    if (widget && widget._dictionary.has('DA') || field._dictionary.has('DA')) {\n        if (widget && widget._dictionary.has('DA')) {\n            defaultAppearance = widget._dictionary.get('DA');\n        }\n        else {\n            defaultAppearance = field._dictionary.get('DA');\n        }\n    }\n    if (defaultAppearance && defaultAppearance !== '' && defaultAppearance.indexOf('Tf') !== -1) {\n        var textCollection = defaultAppearance.split(' ');\n        for (var i = 0; i < textCollection.length; i++) {\n            if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                fontFamily = textCollection[i - 2];\n                while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                    fontFamily = fontFamily.substring(1);\n                }\n                fontSize = Number.parseFloat(textCollection[i - 1]);\n            }\n        }\n    }\n    if (fontFamily) {\n        fontFamily = fontFamily.trim();\n    }\n    if (form && form._dictionary.has('DR')) {\n        var resources = form._dictionary.get('DR');\n        if (resources.has('Font')) {\n            var fonts = resources.get('Font');\n            if (fonts.has(fontFamily)) {\n                var fontDictionary = fonts.get(fontFamily);\n                if (fontDictionary && fontFamily && fontDictionary.has('BaseFont')) {\n                    var baseFont = fontDictionary.get('BaseFont');\n                    var textFontStyle = PdfFontStyle.regular;\n                    if (baseFont) {\n                        defaultAppearance = baseFont.name;\n                        textFontStyle = _getFontStyle(baseFont.name);\n                        if (defaultAppearance.includes('-')) {\n                            defaultAppearance = defaultAppearance.substring(0, defaultAppearance.indexOf('-'));\n                        }\n                        if (widget && widget._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, widget);\n                        }\n                        else if (field && field._dictionary.has('DA')) {\n                            font = _mapFont(defaultAppearance, fontSize, textFontStyle, field);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if ((font === null || typeof font === 'undefined') && fontSize) {\n        font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n    }\n    if ((font === null || typeof font === 'undefined') || (font && font.size === 1)) {\n        if (widget) {\n            font = widget._circleCaptionFont;\n        }\n        else if (field) {\n            font = field._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font style.\n *\n * @param {string} fontFamilyString Font family string.\n * @returns {PdfFontStyle} result.\n */\nexport function _getFontStyle(fontFamilyString) {\n    var position = fontFamilyString.indexOf('-');\n    if (position < 0) {\n        position = fontFamilyString.indexOf(',');\n    }\n    var style = PdfFontStyle.regular;\n    if (position >= 0) {\n        var standardName = fontFamilyString.substring(position + 1, fontFamilyString.length);\n        switch (standardName) {\n            case 'Bold':\n            case 'BoldMT':\n                style = PdfFontStyle.bold;\n                break;\n            case 'Italic':\n            case 'ItalicMT':\n            case 'Oblique':\n            case 'It':\n                style = PdfFontStyle.italic;\n                break;\n            case 'BoldItalic':\n            case 'BoldItalicMT':\n            case 'BoldOblique':\n                style = PdfFontStyle.bold | PdfFontStyle.italic;\n                break;\n        }\n    }\n    return style;\n}\n/**\n * Map the font.\n *\n * @param {string} name Font name.\n * @param {number} size Font size.\n * @param {PdfFontStyle} style Font style.\n * @param {PdfAnnotation} annotation Annotation or Field.\n * @returns {PdfFont} result.\n */\nexport function _mapFont(name, size, style, annotation) {\n    var font;\n    var fontFamily = name ? name : '';\n    if (fontFamily.includes('-')) {\n        fontFamily = fontFamily.substring(0, fontFamily.indexOf('-'));\n    }\n    if (typeof size === 'undefined' && annotation instanceof PdfLineAnnotation && annotation._isLoaded) {\n        size = 10;\n    }\n    var fontSize = typeof size !== 'undefined' ? size : 1;\n    if (annotation._dictionary.has('DS') || annotation._dictionary.has('DA')) {\n        switch (fontFamily) {\n            case 'Helv':\n            case 'Helvetica':\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n                break;\n            case 'Cour':\n            case 'Courier':\n                font = new PdfStandardFont(PdfFontFamily.courier, fontSize, style);\n                break;\n            case 'Symb':\n            case 'Symbol':\n                font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, style);\n                break;\n            case 'Times':\n            case 'TiRo':\n            case 'TimesRoman':\n                font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, style);\n                break;\n            case 'ZaDb':\n            case 'ZapfDingbats':\n                font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, style);\n                break;\n            case 'MonotypeSungLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeSungLight, fontSize, style);\n                break;\n            case 'SinoTypeSongLight':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.sinoTypeSongLight, fontSize, style);\n                break;\n            case 'MonotypeHeiMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.monotypeHeiMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsGothicMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsGothicMedium, fontSize, style);\n                break;\n            case 'HanyangSystemsShinMyeongJoMedium':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium, fontSize, style);\n                break;\n            case 'HeiseiKakuGothicW5':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiKakuGothicW5, fontSize, style);\n                break;\n            case 'HeiseiMinchoW3':\n                font = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, fontSize, style);\n                break;\n            default:\n                if (annotation._dictionary.has('AP')) {\n                    var fontData = _tryParseFontStream(annotation._dictionary, annotation._crossReference, annotation);\n                    if (annotation._hasData) {\n                        var base64String = _encode(fontData);\n                        font = new PdfTrueTypeFont(base64String, fontSize, style);\n                    }\n                }\n                break;\n        }\n    }\n    if (font === null || typeof font === 'undefined') {\n        if (annotation instanceof PdfAnnotation) {\n            if (annotation._type !== _PdfAnnotationType.widgetAnnotation) {\n                font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, style);\n            }\n            else {\n                font = annotation._circleCaptionFont;\n            }\n        }\n        else if (annotation instanceof PdfField) {\n            font = annotation._circleCaptionFont;\n        }\n    }\n    return font;\n}\n/**\n * Gets the font stream.\n *\n * @param {_PdfDictionary} widgetDictionary Widget dictionary.\n * @param {_PdfCrossReference} crossReference Cross reference.\n * @param {PdfAnnotation} annotation Annotation.\n * @returns {Uint8Array} result.\n */\nexport function _tryParseFontStream(widgetDictionary, crossReference, annotation) {\n    var fontData;\n    var apperance = widgetDictionary.get('AP');\n    if (apperance && apperance instanceof _PdfDictionary && apperance.has('N')) {\n        var normal = apperance.get('N');\n        if (normal && normal instanceof _PdfStream && normal.dictionary.has('Resources')) {\n            var resourcesDictionary = normal.dictionary.get('Resources');\n            if (resourcesDictionary && resourcesDictionary.has('Font')) {\n                var fontDictionary = resourcesDictionary.get('Font');\n                if (fontDictionary && fontDictionary instanceof _PdfDictionary) {\n                    fontDictionary.forEach(function (key, value) {\n                        if (value) {\n                            var dictionary = crossReference._fetch(value);\n                            if (dictionary && dictionary.has('DescendantFonts')) {\n                                var descendant = dictionary.getArray('DescendantFonts'); // eslint-disable-line\n                                if (descendant && descendant.length > 0) {\n                                    for (var i = 0; i < descendant.length; i++) {\n                                        var descendantFont = descendant[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                        if (descendantFont && descendantFont instanceof _PdfDictionary && descendantFont.has('FontDescriptor')) {\n                                            var fontDescriptor = descendantFont.get('FontDescriptor');\n                                            if (fontDescriptor && fontDescriptor.has('FontFile2')) {\n                                                var fontFile = fontDescriptor.get('FontFile2');\n                                                if (fontFile && fontFile instanceof _PdfStream && fontFile.length > 0) {\n                                                    fontData = fontFile.getByteRange(fontFile.start, fontFile.end);\n                                                    if (fontData && fontData.length > 0) {\n                                                        annotation._hasData = true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n    }\n    return fontData;\n}\n/**\n * Gets the boolean if two arrays are equal.\n *\n * @param {Array<number[]>} inkPointsCollection Ink points collection.\n * @param {Array<number[]>} previousCollection Previous collection.\n * @returns {boolean} result.\n */\nexport function _checkInkPoints(inkPointsCollection, previousCollection) {\n    if (inkPointsCollection.length !== previousCollection.length) {\n        return false;\n    }\n    for (var i = 0; i < inkPointsCollection.length; i++) {\n        if (!_areArrayEqual(inkPointsCollection[Number.parseInt(i.toString(), 10)], previousCollection[Number.parseInt(i.toString(), 10)])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Gets the Destination.\n *\n * @param {_PdfDictionary} dictionary widget dictionary.\n * @param {string} key bookmark or action dictionary key.\n * @returns {PdfDestination} destination.\n */\nexport function _obtainDestination(dictionary, key) {\n    var page;\n    var destination;\n    if (dictionary) {\n        var destinationArray = void 0; // eslint-disable-line\n        if (dictionary.has(key)) {\n            destinationArray = dictionary.getArray(key);\n        }\n        var loadedDocument = dictionary._crossReference._document;\n        var mode = void 0;\n        if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n            var value = destinationArray[0]; // eslint-disable-line\n            var left = void 0;\n            var height = void 0;\n            var bottom = void 0;\n            var right = void 0;\n            var zoom = void 0;\n            if (typeof value === 'number') {\n                var pageNumber = destinationArray[0];\n                if (pageNumber >= 0) {\n                    var document_1 = dictionary._crossReference._document;\n                    if (document_1 && document_1.pageCount > pageNumber) {\n                        page = document_1.getPage(pageNumber);\n                    }\n                    if (destinationArray.length > 1) {\n                        mode = destinationArray[1];\n                    }\n                    if (mode && mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = pageNumber;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value instanceof _PdfDictionary) {\n                var pageDictionary = value;\n                var index = void 0;\n                if (loadedDocument && pageDictionary) {\n                    index = _getPageIndex(loadedDocument, pageDictionary);\n                }\n                if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                    page = loadedDocument.getPage(index);\n                }\n                if (destinationArray.length > 1) {\n                    mode = destinationArray[1];\n                }\n                if (mode) {\n                    if (mode.name === 'XYZ') {\n                        if (destinationArray.length > 2) {\n                            left = destinationArray[2];\n                        }\n                        if (destinationArray.length > 3) {\n                            height = destinationArray[3];\n                        }\n                        if (destinationArray.length > 4) {\n                            zoom = destinationArray[4];\n                        }\n                        if (page) {\n                            var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                            var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                            if (page.rotation !== PdfRotationAngle.angle0) {\n                                topValue = _checkRotation(page, height, left);\n                            }\n                            destination = new PdfDestination(page, [leftValue, topValue]);\n                            destination._index = index;\n                            destination.zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                            if (left === null || height === null || zoom === null || typeof left === 'undefined' ||\n                                typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                destination._setValidation(false);\n                            }\n                        }\n                    }\n                    else {\n                        if (mode.name === 'FitR') {\n                            if (destinationArray.length > 2) {\n                                left = destinationArray[2];\n                            }\n                            if (destinationArray.length > 3) {\n                                bottom = destinationArray[3];\n                            }\n                            if (destinationArray.length > 4) {\n                                right = destinationArray[4];\n                            }\n                            if (destinationArray.length > 5) {\n                                height = destinationArray[5];\n                            }\n                            if (page) {\n                                left = (left === null || typeof left === 'undefined') ? 0 : left;\n                                bottom = (bottom === null || typeof bottom === 'undefined') ? 0 : bottom;\n                                height = (height === null || typeof height === 'undefined') ? 0 : height;\n                                right = (right === null || typeof right === 'undefined') ? 0 : right;\n                                destination = new PdfDestination(page, [left, bottom, right, height]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitR;\n                            }\n                        }\n                        else if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                            if (destinationArray.length >= 3) {\n                                height = destinationArray[2];\n                            }\n                            if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                page = loadedDocument.getPage(index);\n                            }\n                            if (page && page.size) {\n                                var topValue = (height === null || typeof height === 'undefined') ? 0 : page.size[1] - height;\n                                destination = new PdfDestination(page, [0, topValue]);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitH;\n                                if (height === null || typeof height === 'undefined') {\n                                    destination._setValidation(false);\n                                }\n                            }\n                        }\n                        else {\n                            if (page && mode.name === 'Fit') {\n                                destination = new PdfDestination(page);\n                                destination._index = index;\n                                destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return destination;\n}\n/**\n * Update the annotation bounds.\n *\n * @param {PdfAnnotation} annotation annotation.\n * @param {number[]} bounds annotation bounds.\n * @returns {number[]} bounds.\n */\nexport function _updateBounds(annotation, bounds) {\n    if (bounds) {\n        annotation._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n    }\n    var rect;\n    if (annotation._page && annotation.bounds) {\n        rect = [annotation.bounds.x, annotation.bounds.y + annotation.bounds.height,\n            annotation.bounds.width, annotation.bounds.height];\n        if (annotation._page._isNew && annotation._page._pageSettings) {\n            var pageSettings = annotation._page._pageSettings;\n            var pageBounds = [pageSettings.margins.left, pageSettings.margins.top, pageSettings.size[0] -\n                    (pageSettings.margins.left + pageSettings.margins.right),\n                pageSettings.size[1] - (pageSettings.margins.top + pageSettings.margins.bottom)];\n            rect[0] += pageBounds[0];\n            rect[1] = pageSettings.size[1] - (pageBounds[1] + rect[1]);\n        }\n        else {\n            var size = annotation._page.size;\n            rect[1] = size[1] - (annotation.bounds.y + annotation.bounds.height);\n            var cropBoxOrMediaBox = annotation._getCropOrMediaBox();\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]];\n    }\n    return rect;\n}\n/**\n * Decode text.\n *\n * @param {string} text Text to decode.\n * @param {boolean} isColorSpace Color space or not\n * @param {boolean} isPassword Password or not\n * @returns {string} Decoded text.\n */\nexport function _decodeText(text, isColorSpace, isPassword) {\n    if (text && typeof text === 'string' && !isColorSpace && !isPassword) {\n        if (text.startsWith('þÿ')) {\n            text = text.substring(2);\n            if (text.endsWith('ÿý')) {\n                text = text.substring(0, text.length - 2);\n            }\n            var bytes = _stringToBytes(text, false, true);\n            var result = '';\n            for (var i = 0; i < bytes.length; i += 2) {\n                var x = bytes[Number.parseInt(i.toString(), 10)] << 8;\n                var y = bytes[Number.parseInt((i + 1).toString(), 10)];\n                var codeUnit = x | y;\n                result += String.fromCharCode(codeUnit);\n            }\n            text = result;\n        }\n    }\n    return text;\n}\n/**\n * Number of bytes required to save the number.\n *\n * @param {number} input number.\n * @returns {number} number of bytes.\n */\nexport function _getSize(input) {\n    var size = 0;\n    var uintMaxValue = 0xFFFFFFFF;\n    var ushortMaxValue = 0xFFFF;\n    var byteMaxValue = 0xFF;\n    if (input <= uintMaxValue) {\n        if (input <= ushortMaxValue) {\n            if (input <= byteMaxValue) {\n                size = 1;\n            }\n            else {\n                size = 2;\n            }\n        }\n        else {\n            if (input <= (ushortMaxValue | (ushortMaxValue << 8))) {\n                size = 3;\n            }\n            else {\n                size = 4;\n            }\n        }\n    }\n    else {\n        size = 8;\n    }\n    return size;\n}\n/**\n * Convert the string to big endian bytes.\n *\n * @param {string} input string.\n * @returns {number[]} bytes.\n */\nexport function _stringToBigEndianBytes(input) {\n    var bytes = [];\n    for (var i = 0; i < input.length; i++) {\n        var charCode = input.charCodeAt(Number.parseInt(i.toString(), 10));\n        if (charCode <= 0xFFFF) {\n            bytes.push((charCode >> 8) & 0xFF);\n            bytes.push(charCode & 0xFF);\n        }\n    }\n    return bytes;\n}\n/**\n * Convert number respect to ordered list number style.\n *\n * @param {number} intArabic Input value.\n * @param {PdfNumberStyle} numberStyle Number style.\n * @returns {string} String value.\n */\nexport function _convertNumber(intArabic, numberStyle) {\n    switch (numberStyle) {\n        case PdfNumberStyle.none:\n            return '';\n        case PdfNumberStyle.numeric:\n            return intArabic.toString();\n        case PdfNumberStyle.lowerLatin:\n            return _arabicToLetter(intArabic).toLowerCase();\n        case PdfNumberStyle.lowerRoman:\n            return _arabicToRoman(intArabic).toLowerCase();\n        case PdfNumberStyle.upperLatin:\n            return _arabicToLetter(intArabic);\n        case PdfNumberStyle.upperRoman:\n            return _arabicToRoman(intArabic);\n    }\n}\n/**\n * Convert arabic numbers to roman style.\n *\n * @param {number} intArabic Input value.\n * @returns {string} String value.\n */\nexport function _arabicToRoman(intArabic) {\n    var retval = '';\n    var romanNumerals = [\n        [1000, 'M'], [900, 'CM'], [500, 'D'], [400, 'CD'],\n        [100, 'C'], [90, 'XC'], [50, 'L'], [40, 'XL'],\n        [10, 'X'], [9, 'IX'], [5, 'V'], [4, 'IV'], [1, 'I']\n    ];\n    for (var _i = 0, romanNumerals_1 = romanNumerals; _i < romanNumerals_1.length; _i++) {\n        var _a = romanNumerals_1[_i], value = _a[0], numeral = _a[1];\n        while (intArabic >= value) {\n            retval += numeral;\n            intArabic -= value;\n        }\n    }\n    return retval;\n}\n/**\n * Convert arabic numbers to alphabet.\n *\n * @param {number} arabic Input value.\n * @returns {string} String value.\n */\nexport function _arabicToLetter(arabic) {\n    var result = '';\n    while (arabic > 0) {\n        var remainder = arabic % 26;\n        arabic = Math.floor(arabic / 26);\n        if (remainder === 0) {\n            arabic--;\n            remainder = 26;\n        }\n        result = _appendChar(remainder) + result;\n    }\n    return result;\n}\n/**\n * Convert character code to string.\n *\n * @param {number} value Input value.\n * @returns {string} String value.\n */\nexport function _appendChar(value) {\n    if (value <= 0 || value > 26) {\n        throw new Error('Value can not be less 0 and greater 26');\n    }\n    return String.fromCharCode(64 + value);\n}\n/**\n * Check whether the value is null or undefined.\n *\n * @param {any} value Input value.\n * @returns {boolean} Return true if the value is null or undefined; otherwise, return false\n */\nexport function _isNullOrUndefined(value) {\n    if (value !== null && typeof value !== 'undefined') {\n        return true;\n    }\n    return false;\n}\n/**\n * Compare two arrays of numbers to determine if they are equal.\n *\n * This function checks if two arrays have the same length and\n * identical elements in the same order.\n *\n * @param {number[]} arr1 - The first array to compare.\n * @param {number[]} arr2 - The second array to compare.\n * @returns {boolean} 'true' if the arrays are equal, otherwise 'false'.\n */\nexport function _isArrayEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (var i = 0, ii = arr1.length; i < ii; i++) {\n        if (arr1[Number.parseInt(i.toString(), 10)] !== arr2[Number.parseInt(i.toString(), 10)]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Defines a property on an object with specific attributes.\n *\n * @param {Object} obj - The target object on which the property will be defined.\n * @param {string} prop - The name of the property to define.\n * @param {any} value - The value to assign to the property.\n * @param {boolean} [serializable = false] - If true, the property will not be enumerable.\n * @returns {any} The value of the property that was defined.\n *\n */\nexport function _defineProperty(obj, prop, value, serializable) {\n    if (serializable === void 0) { serializable = false; }\n    Object.defineProperty(obj, prop, {\n        value: value,\n        enumerable: !serializable,\n        configurable: true,\n        writable: false\n    });\n    return value;\n}\n/**\n * Compresses the content of a PDFBaseStream\n *\n * @param {_PdfBaseStream} stream - Base stream to compress.\n * @param {boolean} isExport - Denotes compress the stream as a hex-encoded string.\n * @returns {boolean} compressed string.\n */\nexport function _compressStream(stream, isExport) {\n    if (isExport === void 0) { isExport = false; }\n    var value = stream.getString();\n    var byteArray = [];\n    for (var i = 0; i < value.length; i++) {\n        byteArray.push(value.charCodeAt(i));\n    }\n    var dataArray = new Uint8Array(byteArray);\n    var sw = new CompressedStreamWriter();\n    sw.write(dataArray, 0, dataArray.length);\n    sw.close();\n    value = sw.getCompressedString;\n    stream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n    if (isExport) {\n        var buffer = [];\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n        return _byteArrayToHexString(new Uint8Array(buffer));\n    }\n    return value;\n}\n/**\n * Check whether the input string contains any right-to-left (RTL) characters.\n *\n * @param {string} input The input string.\n * @returns {boolean} Returns true if the string contains any RTL characters; otherwise, returns false.\n */\nexport function _isRightToLeftCharacters(input) {\n    // Unicode range for RTL characters\n    var rtlRegex = /[\\u0590-\\u08FF\\uFB1D-\\uFDFF\\uFE70-\\uFEFF]/;\n    return rtlRegex.test(input);\n}\n/**\n * Updates the page count value in the dictionary\n *\n * @param {_PdfDictionary} dictionary - Dictionary to update page count.\n * @param {number} valueToIncrement - Page count.\n * @returns {void} Nothing.\n */\nexport function _updatePageCount(dictionary, valueToIncrement) {\n    dictionary.update('Count', dictionary.get('Count') + valueToIncrement);\n    if (dictionary.has('Parent')) {\n        var parentDictionary = dictionary.get('Parent');\n        if (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n            _updatePageCount(parentDictionary, valueToIncrement);\n        }\n    }\n}\n/**\n * Updates the page settings in the dictionary\n *\n * @param {_PdfDictionary} dictionary - Dictionary to update page settings.\n * @param {PdfPageSettings} settings - PDF page settings.\n * @returns {void} Nothing.\n */\nexport function _updatePageSettings(dictionary, settings) {\n    var bounds = [0, 0, settings.size[0], settings.size[1]];\n    dictionary.update('MediaBox', bounds);\n    dictionary.update('CropBox', bounds);\n    var rotate = Math.floor(settings.rotation) * 90;\n    if (rotate >= 360) {\n        rotate = rotate % 360;\n    }\n    dictionary.update('Rotate', rotate);\n}\n/**\n * Base64 encoded string representing an empty PDF document.\n */\nexport var _emptyPdfData = 'JVBERi0xLjQNCiWDkvr+DQoxIDAgb2JqDQo8PA0KL1R5cGUgL0NhdGFsb2cNCi9QYWdlcyAyIDAgUg0KL0Fjcm9Gb3JtIDMgMCBSDQo+Pg0KZW5kb2JqDQoyIDAgb2JqDQo8PA0KL1R5cGUgL1BhZ2VzDQovS2lkcyBbNCAwIFJdDQovQ291bnQgMQ0KL1Jlc291cmNlcyA8PD4+DQoNCi9NZWRpYUJveCBbLjAwIC4wMCA1OTUuMDAgODQyLjAwXQ0KL1JvdGF0ZSAwDQo+Pg0KZW5kb2JqDQozIDAgb2JqDQo8PA0KL0ZpZWxkcyBbXQ0KPj4NCmVuZG9iag0KNCAwIG9iag0KPDwNCi9Db3VudCAxDQovVHlwZSAvUGFnZXMNCi9LaWRzIFs1IDAgUl0NCi9QYXJlbnQgMiAwIFINCj4+DQplbmRvYmoNCjUgMCBvYmoNCjw8DQovVHlwZSAvUGFnZQ0KL1BhcmVudCA0IDAgUg0KPj4NCmVuZG9iag0KeHJlZg0KMCA2DQowMDAwMDAwMDAwIDY1NTM1IGYNCjAwMDAwMDAwMTcgMDAwMDAgbg0KMDAwMDAwMDA4OSAwMDAwMCBuDQowMDAwMDAwMjE4IDAwMDAwIG4NCjAwMDAwMDAyNTUgMDAwMDAgbg0KMDAwMDAwMDMzNCAwMDAwMCBuDQp0cmFpbGVyDQo8PA0KL1Jvb3QgMSAwIFINCi9TaXplIDYNCj4+DQoNCnN0YXJ0eHJlZg0KMzg3DQolJUVPRg0K';\n","import { _defaultToString } from './utils';\n/* eslint-disable */\nvar nameCache = Object.create(null);\nvar cmdCache = Object.create(null);\nvar refCache = Object.create(null);\nvar _PdfName = /** @class */ (function () {\n    function _PdfName(name) {\n        this.name = name;\n    }\n    _PdfName.get = function (name) {\n        return nameCache[name] || (nameCache[name] = new _PdfName(name));\n    };\n    return _PdfName;\n}());\nexport { _PdfName };\nvar _PdfCommand = /** @class */ (function () {\n    function _PdfCommand(command) {\n        this.command = command;\n    }\n    _PdfCommand.get = function (command) {\n        return cmdCache[command] || (cmdCache[command] = new _PdfCommand(command));\n    };\n    return _PdfCommand;\n}());\nexport { _PdfCommand };\nvar _PdfReference = /** @class */ (function () {\n    function _PdfReference(objectNumber, gen) {\n        this._isNew = false;\n        this.objectNumber = objectNumber;\n        this.generationNumber = gen;\n    }\n    _PdfReference.prototype.toString = function () {\n        return this.objectNumber + \" \" + this.generationNumber;\n    };\n    _PdfReference.get = function (objectNumber, generationNumber) {\n        var key = generationNumber === 0 ? objectNumber + \"R\" : objectNumber + \"R\" + generationNumber;\n        return refCache[key] || (refCache[key] = new _PdfReference(objectNumber, generationNumber));\n    };\n    return _PdfReference;\n}());\nexport { _PdfReference };\nvar _PdfReferenceSet = /** @class */ (function () {\n    function _PdfReferenceSet(parent) {\n        if (parent === void 0) { parent = null; }\n        this._set = new Set(parent && parent._set);\n    }\n    _PdfReferenceSet.prototype.has = function (ref) {\n        return this._set.has(ref.toString());\n    };\n    _PdfReferenceSet.prototype.put = function (ref) {\n        this._set.add(ref.toString());\n    };\n    _PdfReferenceSet.prototype.remove = function (ref) {\n        this._set.delete(ref.toString());\n    };\n    _PdfReferenceSet.prototype.clear = function () {\n        this._set.clear();\n    };\n    return _PdfReferenceSet;\n}());\nexport { _PdfReferenceSet };\nvar _PdfReferenceSetCache = /** @class */ (function () {\n    function _PdfReferenceSetCache() {\n        this._map = new Map();\n    }\n    Object.defineProperty(_PdfReferenceSetCache.prototype, \"size\", {\n        get: function () {\n            return this._map.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfReferenceSetCache.prototype.get = function (ref) {\n        return this._map.get(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.has = function (ref) {\n        return this._map.has(ref.toString());\n    };\n    _PdfReferenceSetCache.prototype.put = function (ref, obj) {\n        this._map.set(ref.toString(), obj);\n    };\n    _PdfReferenceSetCache.prototype.set = function (objId, obj) {\n        this._map.set(objId, obj);\n    };\n    _PdfReferenceSetCache.prototype.clear = function () {\n        this._map.clear();\n    };\n    return _PdfReferenceSetCache;\n}());\nexport { _PdfReferenceSetCache };\nvar Dictionary = /** @class */ (function () {\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || _defaultToString;\n    }\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    Dictionary.prototype.setValue = function (key, value) {\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        this.nElements++;\n        ret = undefined;\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n        }\n        return keysArray;\n    };\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    Dictionary.prototype._size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}());\nexport { Dictionary };\nvar _PdfDictionary = /** @class */ (function () {\n    function _PdfDictionary(xref) {\n        this._isFont = false;\n        this._initialize(xref);\n    }\n    Object.defineProperty(_PdfDictionary.prototype, \"size\", {\n        get: function () {\n            return Object.keys(this._map).length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDictionary.prototype.assignXref = function (xref) {\n        this._crossReference = xref;\n    };\n    _PdfDictionary.prototype.getRaw = function (key) {\n        return this._map[key];\n    };\n    _PdfDictionary.prototype.getRawValues = function () {\n        return this._map.values;\n    };\n    _PdfDictionary.prototype.get = function (key1, key2, key3) {\n        var value = this._get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && value instanceof _PdfReference) {\n            value = this._crossReference._fetch(value);\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.getArray = function (key1, key2, key3) {\n        var value = this.get(key1, key2, key3);\n        if (this._crossReference && typeof value !== 'undefined' && Array.isArray(value)) {\n            value = value.slice();\n            for (var i = 0; i < value.length; i++) {\n                var reference = value[Number.parseInt(i.toString(), 10)];\n                if (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) {\n                    value[Number.parseInt(i.toString(), 10)] = this._crossReference._fetch(reference);\n                }\n            }\n        }\n        return value;\n    };\n    _PdfDictionary.prototype.set = function (key, value) {\n        this._map[key] = value;\n    };\n    _PdfDictionary.prototype.has = function (key) {\n        return typeof this._map[key] !== 'undefined';\n    };\n    _PdfDictionary.prototype.forEach = function (callback) {\n        for (var key in this._map) {\n            callback(key, this.getRaw(key));\n        }\n    };\n    _PdfDictionary.prototype.update = function (key, value) {\n        if (this.has(key)) {\n            var prevValue = this._map[key];\n            if (prevValue !== null && typeof prevValue !== 'undefined' && prevValue instanceof _PdfReference && this._crossReference) {\n                prevValue = this._crossReference._fetch(prevValue);\n            }\n            if (prevValue !== value) {\n                this._map[key] = value;\n                this._updated = true;\n            }\n        }\n        else {\n            this._map[key] = value;\n            this._updated = true;\n        }\n    };\n    _PdfDictionary.getEmpty = function (xref) {\n        var emptyDict = new _PdfDictionary(xref);\n        emptyDict.set = function (key, value) {\n            throw new Error('Should not call set on the empty dictionary.');\n        };\n        return emptyDict;\n    };\n    _PdfDictionary.merge = function (xref, dictionaryArray, mergeSubDictionary) {\n        if (mergeSubDictionary === void 0) { mergeSubDictionary = false; }\n        var mergedDictionary = new _PdfDictionary(xref);\n        var properties = Object.create(null);\n        for (var _i = 0, dictionaryArray_1 = dictionaryArray; _i < dictionaryArray_1.length; _i++) {\n            var dictionary = dictionaryArray_1[_i];\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            for (var _a = 0, _b = dictionary._map; _a < _b.length; _a++) {\n                var _c = _b[_a], key = _c[0], value = _c[1];\n                var property = properties.get(key);\n                if (typeof property === 'undefined') {\n                    property = [];\n                    properties.set(key, property);\n                }\n                else if (!mergeSubDictionary || !(value instanceof _PdfDictionary)) {\n                    continue;\n                }\n                property.push(value);\n            }\n        }\n        for (var _d = 0, properties_1 = properties; _d < properties_1.length; _d++) {\n            var _e = properties_1[_d], name_1 = _e[0], values = _e[1];\n            if (values.length === 1 || !(values[0] instanceof _PdfDictionary)) {\n                mergedDictionary._map[name_1] = values[0];\n                continue;\n            }\n            var subDict = new _PdfDictionary(xref);\n            for (var _f = 0, values_1 = values; _f < values_1.length; _f++) {\n                var dictionary = values_1[_f];\n                for (var _g = 0, _h = dictionary._map; _g < _h.length; _g++) {\n                    var _j = _h[_g], key = _j[0], value = _j[1];\n                    if (typeof subDict._map[key] === 'undefined') {\n                        subDict._map[key] = value;\n                    }\n                }\n            }\n            if (subDict.size > 0) {\n                mergedDictionary._map[name_1] = subDict;\n            }\n        }\n        properties.clear();\n        return mergedDictionary.size > 0 ? mergedDictionary : _PdfDictionary.getEmpty(xref);\n    };\n    _PdfDictionary.prototype._initialize = function (xref) {\n        this._map = Object.create(null);\n        this.suppressEncryption = false;\n        this._updated = false;\n        this.isCatalog = false;\n        this._isNew = false;\n        if (xref) {\n            this._crossReference = xref;\n        }\n    };\n    _PdfDictionary.prototype._get = function (key1, key2, key3) {\n        var value = this._map[key1];\n        if (typeof value === 'undefined') {\n            value = this._map[key2];\n            if (typeof key2 !== 'undefined' && key2 !== null) {\n                value = this._map[key2];\n            }\n            else if (typeof key3 !== 'undefined' && key3 !== null) {\n                value = this._map[key3];\n            }\n        }\n        return value;\n    };\n    return _PdfDictionary;\n}());\nexport { _PdfDictionary };\nvar _PdfNull = /** @class */ (function () {\n    function _PdfNull(value) {\n        if (value === void 0) { value = []; }\n        this.value = value;\n    }\n    return _PdfNull;\n}());\nexport { _PdfNull };\nexport function _clearPrimitiveCaches() {\n    nameCache = Object.create(null);\n    cmdCache = Object.create(null);\n    refCache = Object.create(null);\n}\nexport function _isName(value, name) {\n    return value instanceof _PdfName && (typeof name === 'undefined' || value.name === name);\n}\nexport function _isCommand(value, command) {\n    return value instanceof _PdfCommand && (typeof command === 'undefined' || value.command === command);\n}\n","/**\n * Public Enum to define annotation flag types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the annotation flag to enable print\n * annotation.flags = PdfAnnotationFlag.print;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationFlag;\n(function (PdfAnnotationFlag) {\n    /**\n     * Specifies the type of `default`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the type of `invisible`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"invisible\"] = 1] = \"invisible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"hidden\"] = 2] = \"hidden\";\n    /**\n     * Specifies the type of `print`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the type of `noZoom`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noZoom\"] = 8] = \"noZoom\";\n    /**\n     * Specifies the type of `noRotate`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noRotate\"] = 16] = \"noRotate\";\n    /**\n     * Specifies the type of `noView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"noView\"] = 32] = \"noView\";\n    /**\n     * Specifies the type of `readOnly`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"readOnly\"] = 64] = \"readOnly\";\n    /**\n     * Specifies the type of `locked`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"locked\"] = 128] = \"locked\";\n    /**\n     * Specifies the type of `toggleNoView`.\n     */\n    PdfAnnotationFlag[PdfAnnotationFlag[\"toggleNoView\"] = 256] = \"toggleNoView\";\n})(PdfAnnotationFlag || (PdfAnnotationFlag = {}));\n/**\n * Public Enum to define line ending style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n * // Sets the begin line end style as openArrow\n * annotation.beginLineStyle = PdfLineEndingStyle.openArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineEndingStyle;\n(function (PdfLineEndingStyle) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `openArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"openArrow\"] = 1] = \"openArrow\";\n    /**\n     * Specifies the type of `closedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"closedArrow\"] = 2] = \"closedArrow\";\n    /**\n     * Specifies the type of `rOpenArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rOpenArrow\"] = 3] = \"rOpenArrow\";\n    /**\n     * Specifies the type of `rClosedArrow`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"rClosedArrow\"] = 4] = \"rClosedArrow\";\n    /**\n     * Specifies the type of `butt`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"butt\"] = 5] = \"butt\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"diamond\"] = 6] = \"diamond\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"circle\"] = 7] = \"circle\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"square\"] = 8] = \"square\";\n    /**\n     * Specifies the type of `slash`.\n     */\n    PdfLineEndingStyle[PdfLineEndingStyle[\"slash\"] = 9] = \"slash\";\n})(PdfLineEndingStyle || (PdfLineEndingStyle = {}));\n/**\n * Public Enum to define line indent.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Sets the line intent as lineArrow\n * annotation.lineIntent = PdfLineIntent.lineArrow;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineIntent;\n(function (PdfLineIntent) {\n    /**\n     * Specifies the type of `lineArrow`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineArrow\"] = 0] = \"lineArrow\";\n    /**\n     * Specifies the type of `lineDimension`.\n     */\n    PdfLineIntent[PdfLineIntent[\"lineDimension\"] = 1] = \"lineDimension\";\n})(PdfLineIntent || (PdfLineIntent = {}));\n/**\n * Public Enum to define the types of points and segments in a path.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Add path points\n * let pathPoints: Array<number[]> = [[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]];\n * // Add path types\n * let pathTypes: PathPointType[] = [0, 1, 1, 1, 1];\n * // Create a new PDF path\n * let path: PdfPath = new PdfPath(pathPoints, pathTypes);\n * // Draw the path to the PDF page\n * page.graphics.drawPath(path, pen, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * The starting point of a path.\n     */\n    PathPointType[PathPointType[\"start\"] = 0] = \"start\";\n    /**\n     * A straight line segment.\n     */\n    PathPointType[PathPointType[\"line\"] = 1] = \"line\";\n    /**\n     * A Bezier curve segment.\n     */\n    PathPointType[PathPointType[\"bezier\"] = 3] = \"bezier\";\n    /**\n     * A mask for extracting the type of a point.\n     */\n    PathPointType[PathPointType[\"pathTypeMask\"] = 7] = \"pathTypeMask\";\n    /**\n     * Indicates that the segment has dashed line style.\n     */\n    PathPointType[PathPointType[\"dashMode\"] = 16] = \"dashMode\";\n    /**\n     * Indicates a marker point in the path.\n     */\n    PathPointType[PathPointType[\"pathMarker\"] = 32] = \"pathMarker\";\n    /**\n     * Closes the current path.\n     */\n    PathPointType[PathPointType[\"closePath\"] = 128] = \"closePath\";\n})(PathPointType || (PathPointType = {}));\n/**\n * Public Enum to define line caption type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the line caption type as inline\n * annotation.caption.type = PdfLineCaptionType.inline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCaptionType;\n(function (PdfLineCaptionType) {\n    /**\n     * Specifies the type of `inline`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"inline\"] = 0] = \"inline\";\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfLineCaptionType[PdfLineCaptionType[\"top\"] = 1] = \"top\";\n})(PdfLineCaptionType || (PdfLineCaptionType = {}));\n/**\n * Public Enum to define border style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border style as underline\n * annotation.border.style = PdfBorderStyle.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderStyle;\n(function (PdfBorderStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dashed`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dashed\"] = 1] = \"dashed\";\n    /**\n     * Specifies the type of `beveled`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"beveled\"] = 2] = \"beveled\";\n    /**\n     * Specifies the type of `inset`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"inset\"] = 3] = \"inset\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfBorderStyle[PdfBorderStyle[\"dot\"] = 5] = \"dot\";\n})(PdfBorderStyle || (PdfBorderStyle = {}));\n/**\n * Public Enum to define border effect style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Sets the border effect as underline\n * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBorderEffectStyle;\n(function (PdfBorderEffectStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `cloudy`.\n     */\n    PdfBorderEffectStyle[PdfBorderEffectStyle[\"cloudy\"] = 1] = \"cloudy\";\n})(PdfBorderEffectStyle || (PdfBorderEffectStyle = {}));\n/**\n * Public Enum to define rotation of the interactive elements.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Gets the rotation of the field\n * let rotation: PdfRotationAngle = field.rotationAngle;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRotationAngle;\n(function (PdfRotationAngle) {\n    /**\n     * Specifies the type of `angle0`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle0\"] = 0] = \"angle0\";\n    /**\n     * Specifies the type of `angle90`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle90\"] = 1] = \"angle90\";\n    /**\n     * Specifies the type of `angle180`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle180\"] = 2] = \"angle180\";\n    /**\n     * Specifies the type of `angle270`.\n     */\n    PdfRotationAngle[PdfRotationAngle[\"angle270\"] = 3] = \"angle270\";\n})(PdfRotationAngle || (PdfRotationAngle = {}));\n/**\n * Public Enum to define cross reference type.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Save the document with cross reference type as stream\n * document.save('output.pdf', PdfCrossReferenceType.stream);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCrossReferenceType;\n(function (PdfCrossReferenceType) {\n    /**\n     * Specifies the type of `table`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"table\"] = 0] = \"table\";\n    /**\n     * Specifies the type of `stream`.\n     */\n    PdfCrossReferenceType[PdfCrossReferenceType[\"stream\"] = 1] = \"stream\";\n})(PdfCrossReferenceType || (PdfCrossReferenceType = {}));\n/**\n * Public Enum to define highlight mode of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the highlight mode of text box field as outline\n * field.highlightMode = PdfHighlightMode.outline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfHighlightMode;\n(function (PdfHighlightMode) {\n    /**\n     * Specifies the type of `noHighlighting`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"noHighlighting\"] = 0] = \"noHighlighting\";\n    /**\n     * Specifies the type of `invert`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"invert\"] = 1] = \"invert\";\n    /**\n     * Specifies the type of `outline`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"outline\"] = 2] = \"outline\";\n    /**\n     * Specifies the type of `push`.\n     */\n    PdfHighlightMode[PdfHighlightMode[\"push\"] = 3] = \"push\";\n})(PdfHighlightMode || (PdfHighlightMode = {}));\n/**\n * Public Enum to define text alignment of text box field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Sets the text alignment of form field as center\n * field.textAlignment = PdfTextAlignment.center;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `left`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Specifies the type of `center`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"center\"] = 1] = \"center\";\n    /**\n     * Specifies the type of `right`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"right\"] = 2] = \"right\";\n    /**\n     * Specifies the type of `justify`.\n     */\n    PdfTextAlignment[PdfTextAlignment[\"justify\"] = 3] = \"justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * Public Enum to define visibility of form field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Sets the visibility of form field as hidden\n * field.visibility = PdfFormFieldVisibility.hidden;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldVisibility;\n(function (PdfFormFieldVisibility) {\n    /**\n     * Specifies the type of `visible`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visible\"] = 0] = \"visible\";\n    /**\n     * Specifies the type of `hidden`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hidden\"] = 1] = \"hidden\";\n    /**\n     * Specifies the type of `visibleNotPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"visibleNotPrintable\"] = 2] = \"visibleNotPrintable\";\n    /**\n     * Specifies the type of `hiddenPrintable`.\n     */\n    PdfFormFieldVisibility[PdfFormFieldVisibility[\"hiddenPrintable\"] = 3] = \"hiddenPrintable\";\n})(PdfFormFieldVisibility || (PdfFormFieldVisibility = {}));\n/**\n * Public Enum to define measurement unit of line measurement annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfLineAnnotation = page.annotations.at(0) PdfLineAnnotation;\n * // Sets the measurement unit of line measurement annoation as centimeter\n * annotation.unit = PdfMeasurementUnit.centimeter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfMeasurementUnit;\n(function (PdfMeasurementUnit) {\n    /**\n     * Specifies the type of `inch`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"inch\"] = 0] = \"inch\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `point`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"centimeter\"] = 4] = \"centimeter\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    PdfMeasurementUnit[PdfMeasurementUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(PdfMeasurementUnit || (PdfMeasurementUnit = {}));\n/**\n * Public Enum to define measurement type of circle annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfCircleAnnotation = page.annotations.at(0) PdfCircleAnnotation;\n * // Sets the measurement type of circle annotation as diameter\n * annotation.measureType = PdfCircleMeasurementType.diameter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCircleMeasurementType;\n(function (PdfCircleMeasurementType) {\n    /**\n     * Specifies the type of `diameter`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"diameter\"] = 0] = \"diameter\";\n    /**\n     * Specifies the type of `radius`.\n     */\n    PdfCircleMeasurementType[PdfCircleMeasurementType[\"radius\"] = 1] = \"radius\";\n})(PdfCircleMeasurementType || (PdfCircleMeasurementType = {}));\n/**\n * Public Enum to define icon type of rubber stamp annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) PdfRubberStampAnnotation;\n * // Sets the rubber stamp annotation icon type as confidential\n * annotation.icon = PdfRubberStampAnnotationIcon.confidential;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfRubberStampAnnotationIcon;\n(function (PdfRubberStampAnnotationIcon) {\n    /**\n     * Specifies the type of `approved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"approved\"] = 0] = \"approved\";\n    /**\n     * Specifies the type of `asIs`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"asIs\"] = 1] = \"asIs\";\n    /**\n     * Specifies the type of `confidential`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"confidential\"] = 2] = \"confidential\";\n    /**\n     * Specifies the type of `departmental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"departmental\"] = 3] = \"departmental\";\n    /**\n     * Specifies the type of `draft`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"draft\"] = 4] = \"draft\";\n    /**\n     * Specifies the type of `experimental`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"experimental\"] = 5] = \"experimental\";\n    /**\n     * Specifies the type of `expired`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"expired\"] = 6] = \"expired\";\n    /**\n     * Specifies the type of `final`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"final\"] = 7] = \"final\";\n    /**\n     * Specifies the type of `forComment`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forComment\"] = 8] = \"forComment\";\n    /**\n     * Specifies the type of `forPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"forPublicRelease\"] = 9] = \"forPublicRelease\";\n    /**\n     * Specifies the type of `notApproved`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notApproved\"] = 10] = \"notApproved\";\n    /**\n     * Specifies the type of `notForPublicRelease`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"notForPublicRelease\"] = 11] = \"notForPublicRelease\";\n    /**\n     * Specifies the type of `sold`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"sold\"] = 12] = \"sold\";\n    /**\n     * Specifies the type of `topSecret`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"topSecret\"] = 13] = \"topSecret\";\n    /**\n     * Specifies the type of `completed`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"completed\"] = 14] = \"completed\";\n    /**\n     * Specifies the type of `void`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"void\"] = 15] = \"void\";\n    /**\n     * Specifies the type of `informationOnly`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"informationOnly\"] = 16] = \"informationOnly\";\n    /**\n     * Specifies the type of `preliminaryResults`.\n     */\n    PdfRubberStampAnnotationIcon[PdfRubberStampAnnotationIcon[\"preliminaryResults\"] = 17] = \"preliminaryResults\";\n})(PdfRubberStampAnnotationIcon || (PdfRubberStampAnnotationIcon = {}));\n/**\n * Public Enum to define check box style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCheckBoxStyle;\n(function (PdfCheckBoxStyle) {\n    /**\n     * Specifies the type of `check`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"check\"] = 0] = \"check\";\n    /**\n     * Specifies the type of `circle`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"circle\"] = 1] = \"circle\";\n    /**\n     * Specifies the type of `cross`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"cross\"] = 2] = \"cross\";\n    /**\n     * Specifies the type of `diamond`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"diamond\"] = 3] = \"diamond\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"square\"] = 4] = \"square\";\n    /**\n     * Specifies the type of `star`.\n     */\n    PdfCheckBoxStyle[PdfCheckBoxStyle[\"star\"] = 5] = \"star\";\n})(PdfCheckBoxStyle || (PdfCheckBoxStyle = {}));\n/**\n * Public Enum to define type of text markup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) PdfTextMarkupAnnotation;\n * // Sets the type of the text markup annotation as underline\n * annotation.textMarkupType = PdfTextMarkupAnnotationType.underline;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextMarkupAnnotationType;\n(function (PdfTextMarkupAnnotationType) {\n    /**\n     * Specifies the type of `highlight`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the type of `underline`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the type of `squiggly`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"squiggly\"] = 2] = \"squiggly\";\n    /**\n     * Specifies the type of `strikeOut`.\n     */\n    PdfTextMarkupAnnotationType[PdfTextMarkupAnnotationType[\"strikeOut\"] = 3] = \"strikeOut\";\n})(PdfTextMarkupAnnotationType || (PdfTextMarkupAnnotationType = {}));\n/**\n * Public Enum to define icon type of popup annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the icon type of the popup annotation as comment\n * annotation.icon = PdfPopupIcon.comment;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPopupIcon;\n(function (PdfPopupIcon) {\n    /**\n     * Specifies the type of `note`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"note\"] = 0] = \"note\";\n    /**\n     * Specifies the type of `comment`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"comment\"] = 1] = \"comment\";\n    /**\n     * Specifies the type of `help`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"help\"] = 2] = \"help\";\n    /**\n     * Specifies the type of `insert`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"insert\"] = 3] = \"insert\";\n    /**\n     * Specifies the type of `key`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"key\"] = 4] = \"key\";\n    /**\n     * Specifies the type of `new paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"newParagraph\"] = 5] = \"newParagraph\";\n    /**\n     * Specifies the type of `paragraph`.\n     */\n    PdfPopupIcon[PdfPopupIcon[\"paragraph\"] = 6] = \"paragraph\";\n})(PdfPopupIcon || (PdfPopupIcon = {}));\n/**\n * Public Enum to define annotation state.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state of the popup annotation as accepted\n * annotation.state = PdfAnnotationState.accepted;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationState;\n(function (PdfAnnotationState) {\n    /**\n     * Specifies the default state of `none`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the state of `accepted`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"accepted\"] = 1] = \"accepted\";\n    /**\n     * Specifies the state of `rejected`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"rejected\"] = 2] = \"rejected\";\n    /**\n     * Specifies the state of `cancel`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"cancel\"] = 3] = \"cancel\";\n    /**\n     * Specifies the state of `completed`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"completed\"] = 4] = \"completed\";\n    /**\n     * Specifies the state of `marked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"marked\"] = 5] = \"marked\";\n    /**\n     * Specifies the state of `unmarked`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unmarked\"] = 6] = \"unmarked\";\n    /**\n     * Specifies the state of `unknown`.\n     */\n    PdfAnnotationState[PdfAnnotationState[\"unknown\"] = 7] = \"unknown\";\n})(PdfAnnotationState || (PdfAnnotationState = {}));\n/**\n * Public Enum to define annotation state model.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfPopupAnnotation = page.annotations.at(0) PdfPopupAnnotation;\n * // Sets the state model of the popup annotation as marked\n * annotation.stateModel = PdfAnnotationStateModel.marked;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationStateModel;\n(function (PdfAnnotationStateModel) {\n    /**\n     * Specifies the default model of `none`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the model of `marked`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"marked\"] = 1] = \"marked\";\n    /**\n     * Specifies the model of `review`.\n     */\n    PdfAnnotationStateModel[PdfAnnotationStateModel[\"review\"] = 2] = \"review\";\n})(PdfAnnotationStateModel || (PdfAnnotationStateModel = {}));\n/**\n * Public Enum to define icon type of attachment annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) PdfAttachmentAnnotation;\n * // Sets the icon type of attachment annotation to pushPin\n * annotation.icon = PdfAttachmentIcon.pushPin;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAttachmentIcon;\n(function (PdfAttachmentIcon) {\n    /**\n     * Specifies the default icon of `pushPin`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"pushPin\"] = 0] = \"pushPin\";\n    /**\n     * Specifies the icon of `tag`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"tag\"] = 1] = \"tag\";\n    /**\n     * Specifies the icon of `graph`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"graph\"] = 2] = \"graph\";\n    /**\n     * Specifies the icon of `paperClip`.\n     */\n    PdfAttachmentIcon[PdfAttachmentIcon[\"paperClip\"] = 3] = \"paperClip\";\n})(PdfAttachmentIcon || (PdfAttachmentIcon = {}));\n/**\n * Public Enum to define annotation intent of free text annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) PdfFreeTextAnnotation;\n * // Sets the free text annotation intent to freeTextCallout\n * annotation.annotationIntent = PdfAnnotationIntent.freeTextCallout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfAnnotationIntent;\n(function (PdfAnnotationIntent) {\n    /**\n     * Specifies the default intent of `none`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the intent of `freeTextCallout`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextCallout\"] = 1] = \"freeTextCallout\";\n    /**\n     * Specifies the intent of `freeTextTypeWriter`.\n     */\n    PdfAnnotationIntent[PdfAnnotationIntent[\"freeTextTypeWriter\"] = 2] = \"freeTextTypeWriter\";\n})(PdfAnnotationIntent || (PdfAnnotationIntent = {}));\n/**\n * Public Enum to define destination mode of document link annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) PdfDocumentLinkAnnotation;\n * // Sets the destination mode as fitToPage\n * annotation.destination.mode = PdfDestinationMode.fitToPage;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the default intent of `location`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"location\"] = 0] = \"location\";\n    /**\n     * Specifies the intent of `FitToPage`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitToPage\"] = 1] = \"fitToPage\";\n    /**\n     * Specifies the intent of `fitR`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitR\"] = 2] = \"fitR\";\n    /**\n     * Specifies the intent of `fitH`.\n     */\n    PdfDestinationMode[PdfDestinationMode[\"fitH\"] = 3] = \"fitH\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n/**\n * Public Enum to define export or import data format.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DataFormat;\n(function (DataFormat) {\n    /**\n     * Specifies the intent of `FDF`.\n     */\n    DataFormat[DataFormat[\"fdf\"] = 0] = \"fdf\";\n    /**\n     * Specifies the intent of `XFDF`.\n     */\n    DataFormat[DataFormat[\"xfdf\"] = 1] = \"xfdf\";\n    /**\n     * Specifies the intent of `JSON`.\n     */\n    DataFormat[DataFormat[\"json\"] = 2] = \"json\";\n    /**\n     * Specifies the intent of `XML`.\n     */\n    DataFormat[DataFormat[\"xml\"] = 3] = \"xml\";\n})(DataFormat || (DataFormat = {}));\n/**\n * Public enum to define form fields tab order.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Set a PDF form's tab order.\n * document.form.orderFormFields(PdfFormFieldsTabOrder.row);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFormFieldsTabOrder;\n(function (PdfFormFieldsTabOrder) {\n    /**\n     * Specifies that no tab order is defined.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the tab order is defined by the document's rows.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"row\"] = 1] = \"row\";\n    /**\n     * Specifies the tab order is defined by the document's columns.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"column\"] = 2] = \"column\";\n    /**\n     * Specifies the tab order is defined by the document's structure tree.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"structure\"] = 3] = \"structure\";\n    /**\n     * Specifies the tab order is defined manually.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"manual\"] = 4] = \"manual\";\n    /**\n     * Specifies the tab order is defined by the widget annotations in the document.\n     */\n    PdfFormFieldsTabOrder[PdfFormFieldsTabOrder[\"widget\"] = 5] = \"widget\";\n})(PdfFormFieldsTabOrder || (PdfFormFieldsTabOrder = {}));\n/**\n * Enum for PDF loaded annotation type.\n */\nexport var _PdfAnnotationType;\n(function (_PdfAnnotationType) {\n    /**\n     * Specifies the intent of `highlight`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"highlight\"] = 0] = \"highlight\";\n    /**\n     * Specifies the intent of `underline`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"underline\"] = 1] = \"underline\";\n    /**\n     * Specifies the intent of `strikeOut`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"strikeOut\"] = 2] = \"strikeOut\";\n    /**\n     * Specifies the intent of `squiggly`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squiggly\"] = 3] = \"squiggly\";\n    /**\n     * Specifies the intent of `redactionAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"redactionAnnotation\"] = 4] = \"redactionAnnotation\";\n    /**\n     * Specifies the intent of `textAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textAnnotation\"] = 5] = \"textAnnotation\";\n    /**\n     * Specifies the intent of `linkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"linkAnnotation\"] = 6] = \"linkAnnotation\";\n    /**\n     * Specifies the intent of `documentLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"documentLinkAnnotation\"] = 7] = \"documentLinkAnnotation\";\n    /**\n     * Specifies the intent of `uriAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"uriAnnotation\"] = 8] = \"uriAnnotation\";\n    /**\n     * Specifies the intent of `fileLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileLinkAnnotation\"] = 9] = \"fileLinkAnnotation\";\n    /**\n     * Specifies the intent of `freeTextAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"freeTextAnnotation\"] = 10] = \"freeTextAnnotation\";\n    /**\n     * Specifies the intent of `lineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"lineAnnotation\"] = 11] = \"lineAnnotation\";\n    /**\n     * Specifies the intent of `circleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"circleAnnotation\"] = 12] = \"circleAnnotation\";\n    /**\n     * Specifies the intent of `ellipseAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"ellipseAnnotation\"] = 13] = \"ellipseAnnotation\";\n    /**\n     * Specifies the intent of `squareAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"squareAnnotation\"] = 14] = \"squareAnnotation\";\n    /**\n     * Specifies the intent of `rectangleAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rectangleAnnotation\"] = 15] = \"rectangleAnnotation\";\n    /**\n     * Specifies the intent of `polygonAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polygonAnnotation\"] = 16] = \"polygonAnnotation\";\n    /**\n     * Specifies the intent of `polyLineAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"polyLineAnnotation\"] = 17] = \"polyLineAnnotation\";\n    /**\n     * Specifies the intent of `textMarkupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textMarkupAnnotation\"] = 18] = \"textMarkupAnnotation\";\n    /**\n     * Specifies the intent of `caretAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"caretAnnotation\"] = 19] = \"caretAnnotation\";\n    /**\n     * Specifies the intent of `rubberStampAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"rubberStampAnnotation\"] = 20] = \"rubberStampAnnotation\";\n    /**\n     * Specifies the intent of `popupAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"popupAnnotation\"] = 21] = \"popupAnnotation\";\n    /**\n     * Specifies the intent of `fileAttachmentAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"fileAttachmentAnnotation\"] = 22] = \"fileAttachmentAnnotation\";\n    /**\n     * Specifies the intent of `soundAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"soundAnnotation\"] = 23] = \"soundAnnotation\";\n    /**\n     * Specifies the intent of `movieAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"movieAnnotation\"] = 24] = \"movieAnnotation\";\n    /**\n     * Specifies the intent of `screenAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"screenAnnotation\"] = 25] = \"screenAnnotation\";\n    /**\n     * Specifies the intent of `widgetAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"widgetAnnotation\"] = 26] = \"widgetAnnotation\";\n    /**\n     * Specifies the intent of `printerMarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"printerMarkAnnotation\"] = 27] = \"printerMarkAnnotation\";\n    /**\n     * Specifies the intent of `trapNetworkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"trapNetworkAnnotation\"] = 28] = \"trapNetworkAnnotation\";\n    /**\n     * Specifies the intent of `watermarkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"watermarkAnnotation\"] = 29] = \"watermarkAnnotation\";\n    /**\n     * Specifies the intent of `textWebLinkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"textWebLinkAnnotation\"] = 30] = \"textWebLinkAnnotation\";\n    /**\n     * Specifies the intent of `inkAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"inkAnnotation\"] = 31] = \"inkAnnotation\";\n    /**\n     * Specifies the intent of `richMediaAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"richMediaAnnotation\"] = 32] = \"richMediaAnnotation\";\n    /**\n     * Specifies the intent of `angleMeasurementAnnotation`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"angleMeasurementAnnotation\"] = 33] = \"angleMeasurementAnnotation\";\n    /**\n     * Specifies the intent of `null`.\n     */\n    _PdfAnnotationType[_PdfAnnotationType[\"null\"] = 34] = \"null\";\n})(_PdfAnnotationType || (_PdfAnnotationType = {}));\n/**\n * Enum for PDF graphics unit.\n */\nexport var _PdfGraphicsUnit;\n(function (_PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `centimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"centimeter\"] = 0] = \"centimeter\";\n    /**\n     * Specifies the type of `pica`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pica\"] = 1] = \"pica\";\n    /**\n     * Specifies the type of `pixel`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"pixel\"] = 2] = \"pixel\";\n    /**\n     * Specifies the type of `point`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"point\"] = 3] = \"point\";\n    /**\n     * Specifies the type of `inch`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"inch\"] = 4] = \"inch\";\n    /**\n     * Specifies the type of `document`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"document\"] = 5] = \"document\";\n    /**\n     * Specifies the type of `millimeter`.\n     */\n    _PdfGraphicsUnit[_PdfGraphicsUnit[\"millimeter\"] = 6] = \"millimeter\";\n})(_PdfGraphicsUnit || (_PdfGraphicsUnit = {}));\nexport var _FieldFlag;\n(function (_FieldFlag) {\n    _FieldFlag[_FieldFlag[\"default\"] = 0] = \"default\";\n    _FieldFlag[_FieldFlag[\"readOnly\"] = 1] = \"readOnly\";\n    _FieldFlag[_FieldFlag[\"required\"] = 2] = \"required\";\n    _FieldFlag[_FieldFlag[\"noExport\"] = 4] = \"noExport\";\n    _FieldFlag[_FieldFlag[\"multiLine\"] = 4096] = \"multiLine\";\n    _FieldFlag[_FieldFlag[\"password\"] = 8192] = \"password\";\n    _FieldFlag[_FieldFlag[\"fileSelect\"] = 1048576] = \"fileSelect\";\n    _FieldFlag[_FieldFlag[\"doNotSpellCheck\"] = 4194304] = \"doNotSpellCheck\";\n    _FieldFlag[_FieldFlag[\"doNotScroll\"] = 8388608] = \"doNotScroll\";\n    _FieldFlag[_FieldFlag[\"comb\"] = 16777216] = \"comb\";\n    _FieldFlag[_FieldFlag[\"richText\"] = 33554432] = \"richText\";\n    _FieldFlag[_FieldFlag[\"noToggleToOff\"] = 16384] = \"noToggleToOff\";\n    _FieldFlag[_FieldFlag[\"radio\"] = 32768] = \"radio\";\n    _FieldFlag[_FieldFlag[\"pushButton\"] = 65536] = \"pushButton\";\n    _FieldFlag[_FieldFlag[\"radiosInUnison\"] = 33554432] = \"radiosInUnison\";\n    _FieldFlag[_FieldFlag[\"combo\"] = 131072] = \"combo\";\n    _FieldFlag[_FieldFlag[\"edit\"] = 262144] = \"edit\";\n    _FieldFlag[_FieldFlag[\"sort\"] = 524288] = \"sort\";\n    _FieldFlag[_FieldFlag[\"multiSelect\"] = 2097152] = \"multiSelect\";\n    _FieldFlag[_FieldFlag[\"commitOnSelectChange\"] = 67108864] = \"commitOnSelectChange\";\n})(_FieldFlag || (_FieldFlag = {}));\nexport var _SignatureFlag;\n(function (_SignatureFlag) {\n    _SignatureFlag[_SignatureFlag[\"none\"] = 0] = \"none\";\n    _SignatureFlag[_SignatureFlag[\"signatureExists\"] = 1] = \"signatureExists\";\n    _SignatureFlag[_SignatureFlag[\"appendOnly\"] = 2] = \"appendOnly\";\n})(_SignatureFlag || (_SignatureFlag = {}));\nexport var _PdfCheckFieldState;\n(function (_PdfCheckFieldState) {\n    _PdfCheckFieldState[_PdfCheckFieldState[\"unchecked\"] = 0] = \"unchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"checked\"] = 1] = \"checked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedUnchecked\"] = 2] = \"pressedUnchecked\";\n    _PdfCheckFieldState[_PdfCheckFieldState[\"pressedChecked\"] = 3] = \"pressedChecked\";\n})(_PdfCheckFieldState || (_PdfCheckFieldState = {}));\n/**\n * Public enum to define the PDF document permission flags.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the permission flag\n * let permission: PdfPermissionFlag = document.permissions;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPermissionFlag;\n(function (PdfPermissionFlag) {\n    /**\n     * Specifies the default permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"default\"] = 0] = \"default\";\n    /**\n     * Specifies the print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"print\"] = 4] = \"print\";\n    /**\n     * Specifies the edit content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editContent\"] = 8] = \"editContent\";\n    /**\n     * Specifies the copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"copyContent\"] = 16] = \"copyContent\";\n    /**\n     * Specifies the edit annotations permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"editAnnotations\"] = 32] = \"editAnnotations\";\n    /**\n     * Specifies the fill fields permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fillFields\"] = 256] = \"fillFields\";\n    /**\n     * Specifies the accessibility copy content permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"accessibilityCopyContent\"] = 512] = \"accessibilityCopyContent\";\n    /**\n     * Specifies the assemble document permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"assembleDocument\"] = 1024] = \"assembleDocument\";\n    /**\n     * Specifies the full quality print permission flag.\n     */\n    PdfPermissionFlag[PdfPermissionFlag[\"fullQualityPrint\"] = 2048] = \"fullQualityPrint\";\n})(PdfPermissionFlag || (PdfPermissionFlag = {}));\n/**\n * Public enum to define the PDF page orientation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Get the page orientation\n * let orientation: PdfPageOrientation = page.orientation;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `portrait`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"portrait\"] = 0] = \"portrait\";\n    /**\n     * Specifies the type of `landscape`.\n     */\n    PdfPageOrientation[PdfPageOrientation[\"landscape\"] = 1] = \"landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * Public enum to define the text direction.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Load the font file\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(read('./resources/Fonts/', 'Arial.ttf'), 10);\n * // Add a string format\n * let format: PdfStringFormat = new PdfStringFormat();\n * format.alignment = PdfTextAlignment.right;\n * format.textDirection = PdfTextDirection.rightToLeft;\n * // Draw a text with right to left direction\n * page.graphics.drawString('Hello World مرحبا بالعالم', font, [10, 20, 300, 200], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfTextDirection[PdfTextDirection[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `leftToRight`.\n     */\n    PdfTextDirection[PdfTextDirection[\"leftToRight\"] = 1] = \"leftToRight\";\n    /**\n     * Specifies the type of `rightToLeft`.\n     */\n    PdfTextDirection[PdfTextDirection[\"rightToLeft\"] = 2] = \"rightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n/**\n * Public enum to define the subscript or superscript mode.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n * // Set a new paragraph indent\n * format.paragraphIndent = 20;\n * // Set the subscript or superscript mode\n * format.subSuperScript = PdfSubSuperScript.subScript;\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `none`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `superScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"superScript\"] = 1] = \"superScript\";\n    /**\n     * Specifies the type of `subScript`.\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"subScript\"] = 2] = \"subScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * Public enum to define blend mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the blend mode\n * graphics.setTransparency(0.5, 0.5, PdfBlendMode.hardLight);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `normal`.\n     */\n    PdfBlendMode[PdfBlendMode[\"normal\"] = 0] = \"normal\";\n    /**\n     * Specifies the type of `multiply`.\n     */\n    PdfBlendMode[PdfBlendMode[\"multiply\"] = 1] = \"multiply\";\n    /**\n     * Specifies the type of `screen`.\n     */\n    PdfBlendMode[PdfBlendMode[\"screen\"] = 2] = \"screen\";\n    /**\n     * Specifies the type of `overlay`.\n     */\n    PdfBlendMode[PdfBlendMode[\"overlay\"] = 3] = \"overlay\";\n    /**\n     * Specifies the type of `darken`.\n     */\n    PdfBlendMode[PdfBlendMode[\"darken\"] = 4] = \"darken\";\n    /**\n     * Specifies the type of `lighten`.\n     */\n    PdfBlendMode[PdfBlendMode[\"lighten\"] = 5] = \"lighten\";\n    /**\n     * Specifies the type of `colorDodge`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorDodge\"] = 6] = \"colorDodge\";\n    /**\n     * Specifies the type of `colorBurn`.\n     */\n    PdfBlendMode[PdfBlendMode[\"colorBurn\"] = 7] = \"colorBurn\";\n    /**\n     * Specifies the type of `hardLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hardLight\"] = 8] = \"hardLight\";\n    /**\n     * Specifies the type of `softLight`.\n     */\n    PdfBlendMode[PdfBlendMode[\"softLight\"] = 9] = \"softLight\";\n    /**\n     * Specifies the type of `difference`.\n     */\n    PdfBlendMode[PdfBlendMode[\"difference\"] = 10] = \"difference\";\n    /**\n     * Specifies the type of `exclusion`.\n     */\n    PdfBlendMode[PdfBlendMode[\"exclusion\"] = 11] = \"exclusion\";\n    /**\n     * Specifies the type of `hue`.\n     */\n    PdfBlendMode[PdfBlendMode[\"hue\"] = 12] = \"hue\";\n    /**\n     * Specifies the type of `saturation`.\n     */\n    PdfBlendMode[PdfBlendMode[\"saturation\"] = 13] = \"saturation\";\n    /**\n     * Specifies the type of `color`.\n     */\n    PdfBlendMode[PdfBlendMode[\"color\"] = 14] = \"color\";\n    /**\n     * Specifies the type of `luminosity`.\n     */\n    PdfBlendMode[PdfBlendMode[\"luminosity\"] = 15] = \"luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * Public enum to define fill mode of the PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.symbol, 10);\n * // Set the fill mode\n * graphics.setClip([0, 0, 100, 100], PdfFillMode.winding);\n * // Draw the text\n * graphics.drawString('Hello World', font, null, new PointF(10, 10));\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `winding`.\n     */\n    PdfFillMode[PdfFillMode[\"winding\"] = 0] = \"winding\";\n    /**\n     * Specifies the type of `alternate`.\n     */\n    PdfFillMode[PdfFillMode[\"alternate\"] = 1] = \"alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * Public enum to define the dash style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `solid`.\n     */\n    PdfDashStyle[PdfDashStyle[\"solid\"] = 0] = \"solid\";\n    /**\n     * Specifies the type of `dash`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dash\"] = 1] = \"dash\";\n    /**\n     * Specifies the type of `dot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dot\"] = 2] = \"dot\";\n    /**\n     * Specifies the type of `dashDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDot\"] = 3] = \"dashDot\";\n    /**\n     * Specifies the type of `dashDotDot`.\n     */\n    PdfDashStyle[PdfDashStyle[\"dashDotDot\"] = 4] = \"dashDotDot\";\n    /**\n     * Specifies the type of `custom`.\n     */\n    PdfDashStyle[PdfDashStyle[\"custom\"] = 5] = \"custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * Public enum to define the line cap.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line cap\n * pen._lineCap = PdfLineCap.round;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `flat`.\n     */\n    PdfLineCap[PdfLineCap[\"flat\"] = 0] = \"flat\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineCap[PdfLineCap[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `square`.\n     */\n    PdfLineCap[PdfLineCap[\"square\"] = 2] = \"square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * Public enum to define the line join.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Set the dash style\n * pen._dashStyle = PdfDashStyle.dashDot;\n * // Set the line join\n * pen._lineJoin = PdfLineJoin.bevel;\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `miter`.\n     */\n    PdfLineJoin[PdfLineJoin[\"miter\"] = 0] = \"miter\";\n    /**\n     * Specifies the type of `round`.\n     */\n    PdfLineJoin[PdfLineJoin[\"round\"] = 1] = \"round\";\n    /**\n     * Specifies the type of `bevel`.\n     */\n    PdfLineJoin[PdfLineJoin[\"bevel\"] = 2] = \"bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\nexport var _PdfWordWrapType;\n(function (_PdfWordWrapType) {\n    /**\n     * Specifies the type of `none`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type of `word`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"word\"] = 1] = \"word\";\n    /**\n     * Specifies the type of `wordOnly`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"wordOnly\"] = 2] = \"wordOnly\";\n    /**\n     * Specifies the type of `character`.\n     */\n    _PdfWordWrapType[_PdfWordWrapType[\"character\"] = 3] = \"character\";\n})(_PdfWordWrapType || (_PdfWordWrapType = {}));\nexport var _FontDescriptorFlag;\n(function (_FontDescriptorFlag) {\n    _FontDescriptorFlag[_FontDescriptorFlag[\"fixedPitch\"] = 1] = \"fixedPitch\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"serif\"] = 2] = \"serif\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"symbolic\"] = 4] = \"symbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"script\"] = 8] = \"script\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"nonSymbolic\"] = 32] = \"nonSymbolic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"italic\"] = 64] = \"italic\";\n    _FontDescriptorFlag[_FontDescriptorFlag[\"forceBold\"] = 262144] = \"forceBold\";\n})(_FontDescriptorFlag || (_FontDescriptorFlag = {}));\nexport var _TrueTypeCmapFormat;\n(function (_TrueTypeCmapFormat) {\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"apple\"] = 0] = \"apple\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"microsoft\"] = 4] = \"microsoft\";\n    _TrueTypeCmapFormat[_TrueTypeCmapFormat[\"trimmed\"] = 6] = \"trimmed\";\n})(_TrueTypeCmapFormat || (_TrueTypeCmapFormat = {}));\nexport var _TrueTypeCmapEncoding;\n(function (_TrueTypeCmapEncoding) {\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unknown\"] = 0] = \"unknown\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"symbol\"] = 1] = \"symbol\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"unicode\"] = 2] = \"unicode\";\n    _TrueTypeCmapEncoding[_TrueTypeCmapEncoding[\"macintosh\"] = 3] = \"macintosh\";\n})(_TrueTypeCmapEncoding || (_TrueTypeCmapEncoding = {}));\nexport var _TrueTypePlatformID;\n(function (_TrueTypePlatformID) {\n    _TrueTypePlatformID[_TrueTypePlatformID[\"appleUnicode\"] = 0] = \"appleUnicode\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"macintosh\"] = 1] = \"macintosh\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"iSO\"] = 2] = \"iSO\";\n    _TrueTypePlatformID[_TrueTypePlatformID[\"microsoft\"] = 3] = \"microsoft\";\n})(_TrueTypePlatformID || (_TrueTypePlatformID = {}));\nexport var _TrueTypeMicrosoftEncodingID;\n(function (_TrueTypeMicrosoftEncodingID) {\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"undefined\"] = 0] = \"undefined\";\n    _TrueTypeMicrosoftEncodingID[_TrueTypeMicrosoftEncodingID[\"unicode\"] = 1] = \"unicode\";\n})(_TrueTypeMicrosoftEncodingID || (_TrueTypeMicrosoftEncodingID = {}));\nexport var _TrueTypeMacintoshEncodingID;\n(function (_TrueTypeMacintoshEncodingID) {\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"roman\"] = 0] = \"roman\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"japanese\"] = 1] = \"japanese\";\n    _TrueTypeMacintoshEncodingID[_TrueTypeMacintoshEncodingID[\"chinese\"] = 2] = \"chinese\";\n})(_TrueTypeMacintoshEncodingID || (_TrueTypeMacintoshEncodingID = {}));\nexport var _TrueTypeCompositeGlyphFlag;\n(function (_TrueTypeCompositeGlyphFlag) {\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"Reserved\"] = 16] = \"Reserved\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    _TrueTypeCompositeGlyphFlag[_TrueTypeCompositeGlyphFlag[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(_TrueTypeCompositeGlyphFlag || (_TrueTypeCompositeGlyphFlag = {}));\nexport var _ImageFormat;\n(function (_ImageFormat) {\n    /**\n     * Specifies the type of `unknown`.\n     */\n    _ImageFormat[_ImageFormat[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * Specifies the type of `bmp`.\n     */\n    _ImageFormat[_ImageFormat[\"bmp\"] = 1] = \"bmp\";\n    /**\n     * Specifies the type of `emf`.\n     */\n    _ImageFormat[_ImageFormat[\"emf\"] = 2] = \"emf\";\n    /**\n     * Specifies the type of `gif`.\n     */\n    _ImageFormat[_ImageFormat[\"gif\"] = 3] = \"gif\";\n    /**\n     * Specifies the type of `jpeg`.\n     */\n    _ImageFormat[_ImageFormat[\"jpeg\"] = 4] = \"jpeg\";\n    /**\n     * Specifies the type of `png`.\n     */\n    _ImageFormat[_ImageFormat[\"png\"] = 5] = \"png\";\n    /**\n     * Specifies the type of `wmf`.\n     */\n    _ImageFormat[_ImageFormat[\"wmf\"] = 6] = \"wmf\";\n    /**\n     * Specifies the type of `icon`.\n     */\n    _ImageFormat[_ImageFormat[\"icon\"] = 7] = \"icon\";\n})(_ImageFormat || (_ImageFormat = {}));\nexport var _TokenType;\n(function (_TokenType) {\n    _TokenType[_TokenType[\"none\"] = 0] = \"none\";\n    _TokenType[_TokenType[\"comment\"] = 1] = \"comment\";\n    _TokenType[_TokenType[\"number\"] = 2] = \"number\";\n    _TokenType[_TokenType[\"real\"] = 3] = \"real\";\n    _TokenType[_TokenType[\"string\"] = 4] = \"string\";\n    _TokenType[_TokenType[\"hexString\"] = 5] = \"hexString\";\n    _TokenType[_TokenType[\"unicodeString\"] = 6] = \"unicodeString\";\n    _TokenType[_TokenType[\"unicodeHexString\"] = 7] = \"unicodeHexString\";\n    _TokenType[_TokenType[\"name\"] = 8] = \"name\";\n    _TokenType[_TokenType[\"operator\"] = 9] = \"operator\";\n    _TokenType[_TokenType[\"beginArray\"] = 10] = \"beginArray\";\n    _TokenType[_TokenType[\"endArray\"] = 11] = \"endArray\";\n    _TokenType[_TokenType[\"eof\"] = 12] = \"eof\";\n})(_TokenType || (_TokenType = {}));\n/**\n * Public enum to define text style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets bookmark at the specified index\n * let bookmark : PdfBookMark = bookmarks.at(0) as PdfBookMark;\n * // Gets the textStyle\n * let textStyle: PdfTextStyle = bookmark.textStyle;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfTextStyle;\n(function (PdfTextStyle) {\n    /**\n     * Specifies the `regular` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the `italic` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"italic\"] = 1] = \"italic\";\n    /**\n     * Specifies the `bold` text style.\n     */\n    PdfTextStyle[PdfTextStyle[\"bold\"] = 2] = \"bold\";\n})(PdfTextStyle || (PdfTextStyle = {}));\nexport var _PdfColorSpace;\n(function (_PdfColorSpace) {\n    _PdfColorSpace[_PdfColorSpace[\"rgb\"] = 0] = \"rgb\";\n    _PdfColorSpace[_PdfColorSpace[\"cmyk\"] = 1] = \"cmyk\";\n    _PdfColorSpace[_PdfColorSpace[\"grayScale\"] = 2] = \"grayScale\";\n    _PdfColorSpace[_PdfColorSpace[\"indexed\"] = 3] = \"indexed\";\n})(_PdfColorSpace || (_PdfColorSpace = {}));\n/**\n * Public enum type to represent the ordered list style\n * ````typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the item collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list and passing the list item collection\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Set the ordered list number style for the list items\n * list.style = PdfNumberStyle.lowerLatin;\n * // Draw the ordered list\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * No numbering at all.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies the type '1'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"numeric\"] = 1] = \"numeric\";\n    /**\n     * Specifies the style 'a'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"lowerLatin\"] = 2] = \"lowerLatin\";\n    /**\n     * Specifies the style 'i'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"lowerRoman\"] = 3] = \"lowerRoman\";\n    /**\n     * Specifies the style 'A'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"upperLatin\"] = 4] = \"upperLatin\";\n    /**\n     * Specifies the style 'I'.\n     */\n    PdfNumberStyle[PdfNumberStyle[\"upperRoman\"] = 5] = \"upperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * Public enum to define the style used for unordered list.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a unordered list and pass the list item collection\n * let list: PdfUnorderedList = new PdfUnorderedList(items);\n * // Set the unordered list style for the list items\n * list.style = PdfUnorderedListStyle.circle;\n * // Draw the unordered list associated with items\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfUnorderedListStyle;\n(function (PdfUnorderedListStyle) {\n    /**\n     * No bulleting at all.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"none\"] = 0] = \"none\";\n    /**\n     * Specifies disk style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"disk\"] = 1] = \"disk\";\n    /**\n     * Specifies square style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"square\"] = 2] = \"square\";\n    /**\n     * Specifies asterisk style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"asterisk\"] = 3] = \"asterisk\";\n    /**\n     * Specifies circle style.\n     */\n    PdfUnorderedListStyle[PdfUnorderedListStyle[\"circle\"] = 4] = \"circle\";\n})(PdfUnorderedListStyle || (PdfUnorderedListStyle = {}));\n/**\n * Public enum to define a layout type for drawing\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string for items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the items to the list item collection by passing the array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create a layout format for drawing\n * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Initialize layout type for drawing\n * pageLayout.layout = PdfLayoutType.paginate;\n * // Draw the list on the page along with the specified layout\n * list.draw(page, 0, 20, 500, 700, pageLayout);\n * // Get the layout type used to draw the list\n * let layoutType: PdfLayoutType = pageLayout.layout;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies pagination across multiple pages based on the specified dimensions and layout options\n     */\n    PdfLayoutType[PdfLayoutType[\"paginate\"] = 0] = \"paginate\";\n    /**\n     * Specifies content to be laid out to fit within a single page, without pagination\n     */\n    PdfLayoutType[PdfLayoutType[\"onePage\"] = 1] = \"onePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * Public enum to define a layout Break type for drawing\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string for items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the item to list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create a layout for drawing\n * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Set  the layout break type for drawing\n * pageLayout.break = PdfLayoutBreakType.fitPage;\n * // Draw the list associated with items along with layout\n * list.draw(page, 0, 20, 500, 700, pageLayout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies that content should break to a new page to fit within specified dimensions.\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"fitPage\"] = 0] = \"fitPage\";\n    /**\n     * Specifies that content should break to a new page or element to fit within specified dimensions.\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"fitElement\"] = 1] = \"fitElement\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n/**\n * Public enum to define a list marker alignment\n * ````typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add each item to the item collection by passing the string array\n * let items: PdfListitemCollection = new PdfListitemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list and passing the list item collection\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Set the marker alignment\n * list.alignment = PdfListMarkerAlignment.left;\n * // Draw the ordered list\n * list.draw(page, 0, 20, 500, 700);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfListMarkerAlignment;\n(function (PdfListMarkerAlignment) {\n    /**\n     * Left alignment for marker.\n     */\n    PdfListMarkerAlignment[PdfListMarkerAlignment[\"left\"] = 0] = \"left\";\n    /**\n     * Right alignment for marker.\n     */\n    PdfListMarkerAlignment[PdfListMarkerAlignment[\"right\"] = 1] = \"right\";\n})(PdfListMarkerAlignment || (PdfListMarkerAlignment = {}));\n/**\n * Public enum to define a print state of layer\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the collection of layers in the document\n * let layers: PdfLayerCollection = document.layers;\n * // Retrieve the first layer from the layers collection\n * let layer: PdfLayer = layers.at(0);\n * // Retrieve the print state of the layer\n * let printState: PdfPrintState = layer.printState;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nexport var PdfPrintState;\n(function (PdfPrintState) {\n    /**\n     * The PDF layers always get print\n     */\n    PdfPrintState[PdfPrintState[\"alwaysPrint\"] = 0] = \"alwaysPrint\";\n    /**\n     * The PDF layers never get print\n     */\n    PdfPrintState[PdfPrintState[\"neverPrint\"] = 1] = \"neverPrint\";\n    /**\n     * The visible PDF layers get print\n     */\n    PdfPrintState[PdfPrintState[\"printWhenVisible\"] = 2] = \"printWhenVisible\";\n})(PdfPrintState || (PdfPrintState = {}));\n","import { _escapePdfName } from './../utils';\nimport { _PdfColorSpace } from '../enumerator';\nvar _PdfStreamWriter = /** @class */ (function () {\n    function _PdfStreamWriter(stream) {\n        this._newLine = '\\r\\n';\n        this._whiteSpace = ' ';\n        this._stream = stream;\n    }\n    _PdfStreamWriter.prototype._writeOperator = function (value) {\n        this._stream.write(value);\n        this._stream.write(this._newLine);\n    };\n    _PdfStreamWriter.prototype._saveGraphicsState = function () {\n        this._writeOperator('q');\n    };\n    _PdfStreamWriter.prototype._restoreGraphicsState = function () {\n        this._writeOperator('Q');\n    };\n    _PdfStreamWriter.prototype._writeComment = function (comment) {\n        if (comment && comment.length > 0) {\n            this._writeOperator('% ' + comment);\n        }\n    };\n    _PdfStreamWriter.prototype._setGraphicsState = function (value) {\n        this._stream.write(\"/\" + _escapePdfName(value.name) + \" \");\n        this._writeOperator('gs');\n    };\n    _PdfStreamWriter.prototype._modifyCtm = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('cm');\n    };\n    _PdfStreamWriter.prototype._modifyTM = function (matrix) {\n        this._stream.write(matrix._toString() + \" \");\n        this._writeOperator('Tm');\n    };\n    _PdfStreamWriter.prototype._setColorSpace = function (value, arg2, arg3) {\n        if (typeof value === 'string' && typeof arg2 === 'boolean') {\n            this._stream.write(\"/\" + value + \" \");\n            this._writeOperator(arg2 ? 'CS' : 'cs');\n        }\n        else if (Array.isArray(value) && typeof arg2 === 'number' && typeof arg3 === 'boolean') {\n            var colorSpaceName = void 0;\n            switch (arg2) {\n                case _PdfColorSpace.rgb:\n                    colorSpaceName = 'DeviceRGB';\n                    break;\n                case _PdfColorSpace.cmyk:\n                    colorSpaceName = 'DeviceCMYK';\n                    break;\n                case _PdfColorSpace.grayScale:\n                    colorSpaceName = 'DeviceGray';\n                    break;\n                default:\n                    colorSpaceName = 'DeviceRGB';\n                    break;\n            }\n            this._stream.write(\"/\" + colorSpaceName + \" \");\n            this._writeOperator(arg3 ? 'CS' : 'cs');\n            this._setColor(value, arg3);\n        }\n    };\n    _PdfStreamWriter.prototype._setColor = function (color, forStroking) {\n        this._stream.write((color[0] / 255).toFixed(3) + \" \" + (color[1] / 255).toFixed(3) + \" \" + (color[2] / 255).toFixed(3) + \" \");\n        this._writeOperator(forStroking ? 'RG' : 'rg');\n    };\n    _PdfStreamWriter.prototype._appendRectangle = function (x, y, width, height) {\n        this._writePoint(x, y);\n        this._writePoint(width, height);\n        this._writeOperator('re');\n    };\n    _PdfStreamWriter.prototype._writePoint = function (x, y) {\n        this._stream.write(x.toFixed(3) + \" \" + (-y).toFixed(3) + \" \");\n    };\n    _PdfStreamWriter.prototype._clipPath = function (isEvenOdd) {\n        this._stream.write((isEvenOdd ? 'W*' : 'W') + \" n\" + this._newLine);\n    };\n    _PdfStreamWriter.prototype._fillPath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'f*' : 'f');\n    };\n    _PdfStreamWriter.prototype._closeFillPath = function (isEvenOdd) {\n        this._writeOperator('h');\n        this._fillPath(isEvenOdd);\n    };\n    _PdfStreamWriter.prototype._strokePath = function () {\n        this._writeOperator('S');\n    };\n    _PdfStreamWriter.prototype._closeStrokePath = function () {\n        this._writeOperator('s');\n    };\n    _PdfStreamWriter.prototype._fillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'B*' : 'B');\n    };\n    _PdfStreamWriter.prototype._closeFillStrokePath = function (isEvenOdd) {\n        this._writeOperator(isEvenOdd ? 'b*' : 'b');\n    };\n    _PdfStreamWriter.prototype._endPath = function () {\n        this._writeOperator('n');\n    };\n    _PdfStreamWriter.prototype._setFont = function (name, size) {\n        this._stream.write(\"/\" + name + \" \" + size.toFixed(3) + \" \");\n        this._writeOperator('Tf');\n    };\n    _PdfStreamWriter.prototype._setTextScaling = function (textScaling) {\n        this._stream.write(textScaling.toFixed(3) + \" \");\n        this._writeOperator('Tz');\n    };\n    _PdfStreamWriter.prototype._closePath = function () {\n        this._writeOperator('h');\n    };\n    _PdfStreamWriter.prototype._startNextLine = function (x, y) {\n        if (typeof x === 'undefined') {\n            this._writeOperator('T*');\n        }\n        else {\n            this._writePoint(x, y);\n            this._writeOperator('Td');\n        }\n    };\n    _PdfStreamWriter.prototype._setLeading = function (leading) {\n        this._write(leading.toFixed(3) + \" \");\n        this._write(this._whiteSpace);\n        this._writeOperator('TL');\n    };\n    _PdfStreamWriter.prototype._showText = function (text) {\n        this._writeText(text);\n        this._writeOperator('Tj');\n    };\n    _PdfStreamWriter.prototype._write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += '\\r\\n';\n        this._writeOperator(builder);\n    };\n    _PdfStreamWriter.prototype._writeText = function (text) {\n        var result = '';\n        var data = this._escapeSymbols(text);\n        for (var i = 0; i < data.length; i++) {\n            result += String.fromCharCode(data[i]); // eslint-disable-line\n        }\n        result = '(' + result + ')';\n        this._stream.write(result);\n    };\n    _PdfStreamWriter.prototype._beginText = function () {\n        this._writeOperator('BT');\n    };\n    _PdfStreamWriter.prototype._endText = function () {\n        this._writeOperator('ET');\n    };\n    _PdfStreamWriter.prototype._beginPath = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('m');\n    };\n    _PdfStreamWriter.prototype._appendLineSegment = function (x, y) {\n        this._writePoint(x, y);\n        this._writeOperator('l');\n    };\n    _PdfStreamWriter.prototype._appendBezierSegment = function (x1, y1, x2, y2, x3, y3) {\n        this._writePoint(x1, y1);\n        this._writePoint(x2, y2);\n        this._writePoint(x3, y3);\n        this._writeOperator('c');\n    };\n    _PdfStreamWriter.prototype._setTextRenderingMode = function (renderingMode) {\n        this._stream.write(renderingMode.toString() + \" \");\n        this._writeOperator('Tr');\n    };\n    _PdfStreamWriter.prototype._setCharacterSpacing = function (charSpacing) {\n        this._stream.write(charSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tc');\n    };\n    _PdfStreamWriter.prototype._setWordSpacing = function (wordSpacing) {\n        this._stream.write(wordSpacing.toFixed(3) + \" \");\n        this._writeOperator('Tw');\n    };\n    _PdfStreamWriter.prototype._showNextLineText = function (text, unicode) {\n        if (unicode !== null && typeof unicode !== 'undefined' && unicode) {\n            this._writeText(text);\n            this._writeOperator('\\'');\n        }\n        else {\n            this._stream.write(text);\n            this._writeOperator('\\'');\n        }\n    };\n    _PdfStreamWriter.prototype._setLineDashPattern = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString(); // eslint-disable-line\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' '; // eslint-disable-line\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' d';\n        this._writeOperator(tempPattern);\n    };\n    _PdfStreamWriter.prototype._setMiterLimit = function (miterLimit) {\n        this._stream.write(miterLimit.toFixed(3) + \" \");\n        this._writeOperator('M');\n    };\n    _PdfStreamWriter.prototype._setLineWidth = function (width) {\n        this._stream.write(width.toFixed(3) + \" \");\n        this._writeOperator('w');\n    };\n    _PdfStreamWriter.prototype._setLineCap = function (lineCapStyle) {\n        this._stream.write(lineCapStyle + \" \");\n        this._writeOperator('J');\n    };\n    _PdfStreamWriter.prototype._setLineJoin = function (lineJoinStyle) {\n        this._stream.write(lineJoinStyle + \" \");\n        this._writeOperator('j');\n    };\n    _PdfStreamWriter.prototype._executeObject = function (name) {\n        this._stream.write(\"/\" + name.name + \" \");\n        this._writeOperator('Do');\n    };\n    _PdfStreamWriter.prototype._beginMarkupSequence = function (name) {\n        this._stream.write(\"/\" + name + \" \");\n        this._writeOperator('BMC');\n    };\n    _PdfStreamWriter.prototype._endMarkupSequence = function () {\n        this._writeOperator('EMC');\n    };\n    _PdfStreamWriter.prototype._clear = function () {\n        this._stream._bytes = [];\n    };\n    _PdfStreamWriter.prototype._escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    return _PdfStreamWriter;\n}());\nexport { _PdfStreamWriter };\n","import { PdfSubSuperScript, _PdfWordWrapType } from './../enumerator';\n/**\n * Represents the text layout information.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        this.horizontalScalingFactor = 100.0;\n        this.rightToLeft = false;\n        this._wordWrapType = _PdfWordWrapType.word;\n        this._isList = false;\n        this.lineLimit = true;\n        if (typeof arg1 !== 'undefined') {\n            this.alignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.lineAlignment = arg2;\n        }\n        else {\n            this.lineAlignment = PdfVerticalAlignment.top;\n        }\n        this.characterSpacing = 0;\n        this.wordSpacing = 0;\n        this.lineSpacing = 0;\n        this.clipPath = false;\n        this.firstLineIndent = 0;\n        this._internalParagraphIndent = 0;\n        this.measureTrailingSpaces = false;\n        this.noClip = false;\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets the paragraph indent from string format.\n         *\n         * @returns {number} Returns the paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Get the default paragraph indent\n         * let paragraph: number = format.paragraphIndent;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._internalParagraphIndent;\n        },\n        /**\n         * Sets the paragraph indent to string format.\n         *\n         * @param {number} value paragraph indent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets the subscript or superscript mode from string format.\n         *\n         * @returns {PdfSubSuperScript} Returns the subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Get the subscript or superscript mode\n         * let script: PdfSubSuperScript = format.subSuperScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pdfSubSuperScript === 'undefined' || this._pdfSubSuperScript === null) {\n                return PdfSubSuperScript.none;\n            }\n            else {\n                return this._pdfSubSuperScript;\n            }\n        },\n        /**\n         * Sets the subscript or superscript mode to string format.\n         *\n         * @param {PdfSubSuperScript} value subscript or superscript mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Create a new PDF string format\n         * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right);\n         * // Set a new paragraph indent\n         * format.paragraphIndent = 20;\n         * // Set the subscript or superscript mode\n         * format.subSuperScript = PdfSubSuperScript.subScript;\n         * // Draw the text\n         * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"_wordWrap\", {\n        get: function () {\n            return this._wordWrapType;\n        },\n        set: function (value) {\n            this._wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n/**\n * Public enum to define vertical alignment.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.top);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `top`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"top\"] = 0] = \"top\";\n    /**\n     * Specifies the type of `middle`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"middle\"] = 1] = \"middle\";\n    /**\n     * Specifies the type of `bottom`.\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"bottom\"] = 2] = \"bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfSubSuperScript } from './../enumerator';\nvar _PdfFontMetrics = /** @class */ (function () {\n    function _PdfFontMetrics() {\n        this._lineGap = 0;\n    }\n    _PdfFontMetrics.prototype._getAscent = function (format) {\n        return this._ascent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getDescent = function (format) {\n        return this._descent * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getLineGap = function (format) {\n        return this._lineGap * 0.001 * this._getSize(format);\n    };\n    _PdfFontMetrics.prototype._getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            clearTypeFontCollection.push(clearTypeFonts[Number.parseInt(index.toString(), 10)]);\n        }\n        if (this._getDescent(format) < 0) {\n            height = (this._getAscent(format) - this._getDescent(format) + this._getLineGap(format));\n        }\n        else {\n            height = (this._getAscent(format) + this._getDescent(format) + this._getLineGap(format));\n        }\n        return height;\n    };\n    _PdfFontMetrics.prototype._getSize = function (format) {\n        var size = this._size;\n        if (format !== null && typeof format !== 'undefined') {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.subScript:\n                    size /= this._subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.superScript:\n                    size /= this._superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    return _PdfFontMetrics;\n}());\nexport { _PdfFontMetrics };\nvar _WidthTable = /** @class */ (function () {\n    function _WidthTable() {\n    }\n    return _WidthTable;\n}());\nexport { _WidthTable };\nvar _StandardWidthTable = /** @class */ (function (_super) {\n    __extends(_StandardWidthTable, _super);\n    function _StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        _this.widths = widths;\n        return _this;\n    }\n    _StandardWidthTable.prototype._itemAt = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('The character is not supported by the font.');\n        }\n        return this.widths[Number.parseInt(index.toString(), 10)];\n    };\n    _StandardWidthTable.prototype._toArray = function () {\n        return this.widths;\n    };\n    return _StandardWidthTable;\n}(_WidthTable));\nexport { _StandardWidthTable };\nvar _CjkWidthTable = /** @class */ (function (_super) {\n    __extends(_CjkWidthTable, _super);\n    function _CjkWidthTable(defaultWidth) {\n        var _this = _super.call(this) || this;\n        _this._defaultWidth = defaultWidth;\n        _this.widths = [];\n        return _this;\n    }\n    _CjkWidthTable.prototype._itemAt = function (index) {\n        var width = this._defaultWidth;\n        this.widths.forEach(function (entry) {\n            if (index >= entry._from && index <= entry._to) {\n                width = entry._itemAt(index);\n            }\n        });\n        return width;\n    };\n    _CjkWidthTable.prototype._toArray = function () {\n        var array = [];\n        this.widths.forEach(function (width) {\n            width._appendToArray(array);\n        });\n        return array;\n    };\n    _CjkWidthTable.prototype._add = function (width) {\n        this.widths.push(width);\n    };\n    return _CjkWidthTable;\n}(_WidthTable));\nexport { _CjkWidthTable };\nvar _CjkWidth = /** @class */ (function () {\n    function _CjkWidth() {\n    }\n    return _CjkWidth;\n}());\nexport { _CjkWidth };\nvar _CjkSameWidth = /** @class */ (function (_super) {\n    __extends(_CjkSameWidth, _super);\n    function _CjkSameWidth(from, to, width) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widthTo = to;\n        _this._width = width;\n        return _this;\n    }\n    Object.defineProperty(_CjkSameWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkSameWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthTo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkSameWidth.prototype._itemAt = function (index) {\n        if (index < this._from || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._width;\n    };\n    _CjkSameWidth.prototype._appendToArray = function (array) {\n        array.push(this._from, this._to, this._width);\n    };\n    return _CjkSameWidth;\n}(_CjkWidth));\nexport { _CjkSameWidth };\nvar _CjkDifferentWidth = /** @class */ (function (_super) {\n    __extends(_CjkDifferentWidth, _super);\n    function _CjkDifferentWidth(from, widths) {\n        var _this = _super.call(this) || this;\n        _this._widthFrom = from;\n        _this._widths = widths;\n        return _this;\n    }\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_from\", {\n        get: function () {\n            return this._widthFrom;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_CjkDifferentWidth.prototype, \"_to\", {\n        get: function () {\n            return this._widthFrom + this._widths.length - 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _CjkDifferentWidth.prototype._itemAt = function (index) {\n        if (index < this._widthFrom || index > this._to) {\n            throw new Error('Index is out of range.');\n        }\n        return this._widths[Number.parseInt(index.toString(), 10)];\n    };\n    _CjkDifferentWidth.prototype._appendToArray = function (array) {\n        array.push(this._from);\n        array.forEach(function (entry) {\n            array.push(entry);\n        });\n    };\n    return _CjkDifferentWidth;\n}(_CjkWidth));\nexport { _CjkDifferentWidth };\n","import { _PdfWordWrapType } from './../enumerator';\nvar _PdfStringLayouter = /** @class */ (function () {\n    function _PdfStringLayouter() {\n    }\n    _PdfStringLayouter.prototype._layout = function (text, font, format, size) {\n        this._initialize(text, font, format, size);\n        var result = this._doLayout();\n        this._clear();\n        return result;\n    };\n    _PdfStringLayouter.prototype._initialize = function (text, font, format, size) {\n        this._font = font;\n        this._format = format;\n        this._size = size;\n        this._rectangle = [0, 0, size[0], size[1]];\n        this._reader = new _StringTokenizer(text);\n        this._pageHeight = 0;\n    };\n    _PdfStringLayouter.prototype._clear = function () {\n        this._font = null;\n        this._format = null;\n        this._reader._close();\n        this._reader = null;\n    };\n    _PdfStringLayouter.prototype._doLayout = function () {\n        var result = new _PdfStringLayoutResult();\n        var lineResult = new _PdfStringLayoutResult();\n        var lines = [];\n        var line = this._reader._peekLine();\n        var lineIndent = this._getLineIndent(true);\n        while (line !== null) {\n            lineResult = this._layoutLine(line, lineIndent);\n            if (typeof lineResult !== 'undefined' && lineResult !== null) {\n                var numSymbolsInserted = 0;\n                var returnedValue = this._copyToResult(result, lineResult, lines, numSymbolsInserted);\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.flag;\n                if (!success) {\n                    this._reader._read(numSymbolsInserted);\n                    break;\n                }\n            }\n            this._reader._readLine();\n            line = this._reader._peekLine();\n            lineIndent = this._getLineIndent(false);\n        }\n        this._finalizeResult(result, lines);\n        return result;\n    };\n    _PdfStringLayouter.prototype._getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this._format) {\n            lineIndent = (firstLine) ? this._format.firstLineIndent : this._format.paragraphIndent;\n            lineIndent = (this._size[0] > 0) ? Math.min(this._size[0], lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    _PdfStringLayouter.prototype._getLineHeight = function () {\n        var height = this._font._metrics._getHeight();\n        if (this._format && this._format.lineSpacing !== 0) {\n            height = this._format.lineSpacing + this._font._metrics._getHeight();\n        }\n        return height;\n    };\n    _PdfStringLayouter.prototype._getLineWidth = function (line) {\n        return this._font.getLineWidth(line, this._format);\n    };\n    _PdfStringLayouter.prototype._layoutLine = function (line, lineIndent) {\n        var lineResult = new _PdfStringLayoutResult();\n        lineResult._lineHeight = this._getLineHeight();\n        var lines = [];\n        var maxWidth = this._size[0];\n        var lineWidth = this._getLineWidth(line) + lineIndent;\n        var lineType = _LineType.firstParagraphLine;\n        var readWord = true;\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this._addToLineResult(lineResult, lines, line, lineWidth, _LineType.newLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new _StringTokenizer(line);\n            var word = reader._peekWord();\n            if (word.length !== reader._length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader._position += 1;\n                    word = reader._peekWord();\n                }\n            }\n            while (word !== null) {\n                curLine = curLine + word;\n                var curLineWidth = this._getLineWidth(curLine.toString()) + curIndent;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this._getWrapType() === _PdfWordWrapType.none) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        if (this._getWrapType() === _PdfWordWrapType.wordOnly) {\n                            lineResult._remainder = line.substring(reader._position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader._peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this._getLineWidth(word.toString()) > maxWidth) {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.character;\n                            }\n                        }\n                        else {\n                            if (typeof this._format !== 'undefined' && this._format !== null) {\n                                this._format._wordWrap = _PdfWordWrapType.word;\n                            }\n                        }\n                        if (this._getWrapType() !== _PdfWordWrapType.character || !readWord) {\n                            var stringValue = builder.toString();\n                            if (stringValue !== ' ') {\n                                this._addToLineResult(lineResult, lines, stringValue, lineWidth, _LineType.layoutBreak | lineType);\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = _LineType.none;\n                            word = (readWord) ? word : reader._peekWord();\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader._peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader._readWord();\n                    word = reader._peekWord();\n                }\n                else {\n                    reader._read();\n                    word = reader._peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                this._addToLineResult(lineResult, lines, builder.toString(), lineWidth, _LineType.newLineBreak | _LineType.lastParagraphLine);\n            }\n            reader._close();\n        }\n        lineResult._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        lines = [];\n        return lineResult;\n    };\n    _PdfStringLayouter.prototype._addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new _LineInfo();\n        info._text = line;\n        info._width = lineWidth;\n        info._lineType = breakType;\n        lines.push(info);\n        var size = lineResult._actualSize;\n        size[1] = size[1] + this._getLineHeight();\n        size[0] = Math.max(size[0], lineWidth);\n        lineResult._size = size;\n    };\n    _PdfStringLayouter.prototype._copyToResult = function (result, lineResult, lines, flag) {\n        var success = true;\n        var allowPartialLines = (this._format && !this._format.lineLimit);\n        var height = result._actualSize[1];\n        var maxHeight = this._size[1];\n        if ((this._pageHeight > 0) && (maxHeight + this._rectangle[1] > this._pageHeight)) {\n            maxHeight = this._rectangle[1] - this._pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        flag = 0;\n        if (lineResult._lines !== null) {\n            for (var i = 0, len = lineResult._lines.length; i < len; i++) {\n                var expHeight = height + lineResult._lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult._lines[i]; // eslint-disable-line\n                    flag += info._text.length;\n                    info = this._trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    var size = result._actualSize;\n                    size[0] = Math.max(size[0], info._width);\n                    result._size = size;\n                    height = expHeight;\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height !== result._size[1]) {\n            result._size = [result._actualSize[0], height];\n        }\n        return { success: success, flag: flag };\n    };\n    _PdfStringLayouter.prototype._finalizeResult = function (result, lines) {\n        result._layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result._layoutLines.push(lines[index]); // eslint-disable-line\n        }\n        result._lineHeight = this._getLineHeight();\n        if (!this._reader._end) {\n            result._remainder = this._reader._readToEnd();\n        }\n        lines = [];\n    };\n    _PdfStringLayouter.prototype._trimLine = function (info, firstLine) {\n        var line = info._text.trim();\n        var lineWidth = info._width;\n        if (line.length !== info._text.length) {\n            lineWidth = this._getLineWidth(line);\n            if ((info._lineType & _LineType.firstParagraphLine) > 0) {\n                lineWidth += this._getLineIndent(firstLine);\n            }\n        }\n        info._text = line;\n        info._width = lineWidth;\n        return info;\n    };\n    _PdfStringLayouter.prototype._getWrapType = function () {\n        var wrapType = (this._format !== null && typeof this._format !== 'undefined') ?\n            this._format._wordWrap : _PdfWordWrapType.word;\n        return wrapType;\n    };\n    return _PdfStringLayouter;\n}());\nexport { _PdfStringLayouter };\nvar _PdfStringLayoutResult = /** @class */ (function () {\n    function _PdfStringLayoutResult() {\n    }\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_actualSize\", {\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                this._size = [0, 0];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lines\", {\n        get: function () {\n            return this._layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_empty\", {\n        get: function () {\n            return (this._layoutLines === null || this._layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStringLayoutResult.prototype, \"_lineCount\", {\n        get: function () {\n            return (!this._empty) ? this._layoutLines.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _PdfStringLayoutResult;\n}());\nexport { _PdfStringLayoutResult };\nvar _LineInfo = /** @class */ (function () {\n    function _LineInfo() {\n    }\n    return _LineInfo;\n}());\nexport { _LineInfo };\nexport var _LineType;\n(function (_LineType) {\n    _LineType[_LineType[\"none\"] = 0] = \"none\";\n    _LineType[_LineType[\"newLineBreak\"] = 1] = \"newLineBreak\";\n    _LineType[_LineType[\"layoutBreak\"] = 2] = \"layoutBreak\";\n    _LineType[_LineType[\"firstParagraphLine\"] = 4] = \"firstParagraphLine\";\n    _LineType[_LineType[\"lastParagraphLine\"] = 8] = \"lastParagraphLine\";\n})(_LineType || (_LineType = {}));\nvar _StringTokenizer = /** @class */ (function () {\n    function _StringTokenizer(textValue) {\n        this._position = 0;\n        if (typeof textValue === 'undefined' || textValue === null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this._text = textValue;\n    }\n    Object.defineProperty(_StringTokenizer.prototype, \"_length\", {\n        get: function () {\n            return this._text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_StringTokenizer.prototype, \"_end\", {\n        get: function () {\n            return (this._position === this._text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _StringTokenizer.prototype._readLine = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekLine = function () {\n        var position = this._position;\n        var line = this._readLine();\n        this._position = position;\n        return line;\n    };\n    _StringTokenizer.prototype._readWord = function () {\n        var position = this._position;\n        while (position < this._length) {\n            var ch = this._text[position]; // eslint-disable-line\n            var text = void 0;\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    text = this._text.substring(this._position, position - this._position);\n                    this._position = position + 1;\n                    if (((ch === '\\r') && (this._position < this._length)) && (this._text[this._position] === '\\n')) {\n                        this._position++;\n                    }\n                    return text;\n                case ' ':\n                case '\\t':\n                    if (position === this._position) {\n                        position++;\n                    }\n                    text = this._text.substring(this._position, position);\n                    this._position = position;\n                    return text;\n            }\n            position++;\n        }\n        if (position > this._position) {\n            var text2 = this._text.substring(this._position, position);\n            this._position = position;\n            return text2;\n        }\n        return null;\n    };\n    _StringTokenizer.prototype._peekWord = function () {\n        var position = this._position;\n        var word = this._readWord();\n        this._position = position;\n        return word;\n    };\n    _StringTokenizer.prototype._read = function (count) {\n        if (typeof count === 'undefined') {\n            var character = '0';\n            if (!this._end) {\n                character = this._text[this._position];\n                this._position++;\n            }\n            return character;\n        }\n        else {\n            var value = 0;\n            var builder = '';\n            while (!this._end && value < count) {\n                builder += this._read();\n                value++;\n            }\n            return builder;\n        }\n    };\n    _StringTokenizer.prototype._peek = function () {\n        return this._end ? '0' : this._text[this._position];\n    };\n    _StringTokenizer.prototype._close = function () {\n        this._text = null;\n    };\n    _StringTokenizer.prototype._readToEnd = function () {\n        var text;\n        if (this._position === 0) {\n            text = this._text;\n        }\n        else {\n            text = this._text.substring(this._position);\n        }\n        this._position = this._length;\n        return text;\n    };\n    _StringTokenizer._whiteSpace = ' ';\n    _StringTokenizer._tab = '\\t';\n    _StringTokenizer._spaces = [_StringTokenizer._whiteSpace, _StringTokenizer._tab];\n    return _StringTokenizer;\n}());\nexport { _StringTokenizer };\n","var _TrueTypeTableInfo = /** @class */ (function () {\n    function _TrueTypeTableInfo() {\n    }\n    Object.defineProperty(_TrueTypeTableInfo.prototype, \"_empty\", {\n        get: function () {\n            var empty = (this._offset === this._length && this._length === this._checksum && this._checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeTableInfo;\n}());\nexport { _TrueTypeTableInfo };\nvar _TrueTypeOS2Table = /** @class */ (function () {\n    function _TrueTypeOS2Table() {\n    }\n    return _TrueTypeOS2Table;\n}());\nexport { _TrueTypeOS2Table };\nvar _TrueTypePostTable = /** @class */ (function () {\n    function _TrueTypePostTable() {\n    }\n    return _TrueTypePostTable;\n}());\nexport { _TrueTypePostTable };\nvar _TrueTypeNameTable = /** @class */ (function () {\n    function _TrueTypeNameTable() {\n    }\n    return _TrueTypeNameTable;\n}());\nexport { _TrueTypeNameTable };\nvar _TrueTypeMicrosoftCmapSubTable = /** @class */ (function () {\n    function _TrueTypeMicrosoftCmapSubTable() {\n    }\n    return _TrueTypeMicrosoftCmapSubTable;\n}());\nexport { _TrueTypeMicrosoftCmapSubTable };\nvar _TrueTypeHorizontalHeaderTable = /** @class */ (function () {\n    function _TrueTypeHorizontalHeaderTable() {\n    }\n    return _TrueTypeHorizontalHeaderTable;\n}());\nexport { _TrueTypeHorizontalHeaderTable };\nvar _TrueTypeHeadTable = /** @class */ (function () {\n    function _TrueTypeHeadTable() {\n    }\n    return _TrueTypeHeadTable;\n}());\nexport { _TrueTypeHeadTable };\nvar _TrueTypeCmapTable = /** @class */ (function () {\n    function _TrueTypeCmapTable() {\n    }\n    return _TrueTypeCmapTable;\n}());\nexport { _TrueTypeCmapTable };\nvar _TrueTypeCmapSubTable = /** @class */ (function () {\n    function _TrueTypeCmapSubTable() {\n    }\n    return _TrueTypeCmapSubTable;\n}());\nexport { _TrueTypeCmapSubTable };\nvar _TrueTypeAppleCmapSubTable = /** @class */ (function () {\n    function _TrueTypeAppleCmapSubTable() {\n    }\n    return _TrueTypeAppleCmapSubTable;\n}());\nexport { _TrueTypeAppleCmapSubTable };\nvar _TrueTypeTrimmedCmapSubTable = /** @class */ (function () {\n    function _TrueTypeTrimmedCmapSubTable() {\n    }\n    return _TrueTypeTrimmedCmapSubTable;\n}());\nexport { _TrueTypeTrimmedCmapSubTable };\n","import { _TrueTypeTableInfo, _TrueTypeHorizontalHeaderTable, _TrueTypeNameTable, _TrueTypeHeadTable, _TrueTypeOS2Table, _TrueTypePostTable, _TrueTypeCmapSubTable, _TrueTypeCmapTable, _TrueTypeAppleCmapSubTable, _TrueTypeMicrosoftCmapSubTable, _TrueTypeTrimmedCmapSubTable } from './ttf-table';\nimport { Dictionary } from '../pdf-primitives';\nimport { _StringTokenizer } from './string-layouter';\nimport { _TrueTypeCmapFormat, _TrueTypeCmapEncoding, _TrueTypePlatformID, _TrueTypeMicrosoftEncodingID, _TrueTypeMacintoshEncodingID, _TrueTypeCompositeGlyphFlag } from '../../core/enumerator';\nvar _TrueTypeReader = /** @class */ (function () {\n    function _TrueTypeReader(fontData) {\n        this._int32Size = 4;\n        this._isFont = false;\n        this._isMacTtf = false;\n        this._isMacFont = false;\n        this._missedGlyphs = 0;\n        this._tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this._entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._fontData = fontData;\n        this._initialize();\n    }\n    Object.defineProperty(_TrueTypeReader.prototype, \"macintosh\", {\n        get: function () {\n            if (this._macintoshDictionary === null || typeof this._macintoshDictionary === 'undefined') {\n                this._macintoshDictionary = new Dictionary();\n            }\n            return this._macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoft\", {\n        get: function () {\n            if (this._microsoftDictionary === null || typeof this._microsoftDictionary === 'undefined') {\n                this._microsoftDictionary = new Dictionary();\n            }\n            return this._microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_macintoshGlyphs\", {\n        get: function () {\n            if (this._internalMacintoshGlyphs === null || typeof this._internalMacintoshGlyphs === 'undefined') {\n                this._internalMacintoshGlyphs = new Dictionary();\n            }\n            return this._internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeReader.prototype, \"_microsoftGlyphs\", {\n        get: function () {\n            if (this._internalMicrosoftGlyphs === null || typeof this._internalMicrosoftGlyphs === 'undefined') {\n                this._internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this._internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _TrueTypeReader.prototype._initialize = function () {\n        if (typeof this._metrics === 'undefined' || this._metrics === null) {\n            this._metrics = new _TrueTypeMetrics();\n        }\n        this._readFontDictionary();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._initializeFontName(nameTable);\n        this._metrics._macStyle = headTable._macStyle;\n    };\n    _TrueTypeReader.prototype._readFontDictionary = function () {\n        this._offset = 0;\n        this._check();\n        var table = this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        this._readInt16(this._offset);\n        if (typeof this._tableDirectory === 'undefined' || this._tableDirectory === null) {\n            this._tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < table; ++i) {\n            var table_1 = new _TrueTypeTableInfo();\n            var tableKey = this._readString(this._int32Size);\n            table_1._checksum = this._readInt32(this._offset);\n            table_1._offset = this._readInt32(this._offset);\n            table_1._length = this._readInt32(this._offset);\n            this._tableDirectory.setValue(tableKey, table_1);\n        }\n        this._lowestPosition = this._offset;\n        if (!this._isFont) {\n            this._fixOffsets();\n        }\n    };\n    _TrueTypeReader.prototype._fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        var tableKeys = this._tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n            var offset = value._offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this._lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this._lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this._tableDirectory.getValue(tableKeys[Number.parseInt(i.toString(), 10)]);\n                value._offset -= shift;\n                table.setValue(tableKeys[Number.parseInt(i.toString(), 10)], value);\n            }\n            this._tableDirectory = table;\n        }\n    };\n    _TrueTypeReader.prototype._check = function () {\n        var version = this._readInt32(this._offset);\n        this._isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this._isFont = true;\n            this._offset = 0;\n            var fontTag = this._readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset += 4;\n            var ttcIdentificationNumber = this._readInt32(this._offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this._offset = this._readInt32(this._offset);\n            version = this._readInt32(this._offset);\n        }\n        return version;\n    };\n    _TrueTypeReader.prototype._readNameTable = function () {\n        var tableInfo = this._getTable('name');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeNameTable();\n        table._formatSelector = this._readUInt16(this._offset);\n        table._recordsCount = this._readUInt16(this._offset);\n        table._offset = this._readUInt16(this._offset);\n        table._nameRecords = [];\n        var recordSize = 12;\n        var position = this._offset;\n        for (var i = 0; i < table._recordsCount; i++) {\n            this._offset = position;\n            var record = new _TrueTypeNameRecord();\n            record._platformID = this._readUInt16(this._offset);\n            record._encodingID = this._readUInt16(this._offset);\n            record._languageID = this._readUInt16(this._offset);\n            record._nameID = this._readUInt16(this._offset);\n            record._length = this._readUInt16(this._offset);\n            record._offset = this._readUInt16(this._offset);\n            this._offset = tableInfo._offset + table._offset + record._offset;\n            var unicode = (record._platformID === 0 || record._platformID === 3);\n            record._name = this._readString(record._length, unicode);\n            table._nameRecords[Number.parseInt(i.toString(), 10)] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readHeadTable = function () {\n        var tableInfo = this._getTable('head');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHeadTable();\n        table._version = this._readFixed(this._offset);\n        table._fontRevision = this._readFixed(this._offset);\n        table._checkSumAdjustment = this._readUInt32(this._offset);\n        table._magicNumber = this._readUInt32(this._offset);\n        table._flags = this._readUInt16(this._offset);\n        table._unitsPerEm = this._readUInt16(this._offset);\n        table._created = this._readInt64(this._offset);\n        table._modified = this._readInt64(this._offset);\n        table._xMin = this._readInt16(this._offset);\n        table._yMin = this._readInt16(this._offset);\n        table._xMax = this._readInt16(this._offset);\n        table._yMax = this._readInt16(this._offset);\n        table._macStyle = this._readUInt16(this._offset);\n        table._lowestReadableSize = this._readUInt16(this._offset);\n        table._fontDirectionHint = this._readInt16(this._offset);\n        table._indexToLocalFormat = this._readInt16(this._offset);\n        table._glyphDataFormat = this._readInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readHorizontalHeaderTable = function () {\n        var tableInfo = this._getTable('hhea');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeHorizontalHeaderTable();\n        table._version = this._readFixed(this._offset);\n        table._ascender = this._readInt16(this._offset);\n        table._descender = this._readInt16(this._offset);\n        table._lineGap = this._readInt16(this._offset);\n        table._advanceWidthMax = this._readUInt16(this._offset);\n        table._minLeftSideBearing = this._readInt16(this._offset);\n        table._minRightSideBearing = this._readInt16(this._offset);\n        table._xMaxExtent = this._readInt16(this._offset);\n        table._caretSlopeRise = this._readInt16(this._offset);\n        table._caretSlopeRun = this._readInt16(this._offset);\n        this._offset += 10;\n        table._metricDataFormat = this._readInt16(this._offset);\n        table._numberOfHMetrics = this._readUInt16(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readOS2Table = function () {\n        var tableInfo = this._getTable('OS/2');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeOS2Table();\n        table._version = this._readUInt16(this._offset);\n        table._xAvgCharWidth = this._readInt16(this._offset);\n        table._usWeightClass = this._readUInt16(this._offset);\n        table._usWidthClass = this._readUInt16(this._offset);\n        table._fsType = this._readInt16(this._offset);\n        table._ySubscriptXSize = this._readInt16(this._offset);\n        table._ySubscriptYSize = this._readInt16(this._offset);\n        table._ySubscriptXOffset = this._readInt16(this._offset);\n        table._ySubscriptYOffset = this._readInt16(this._offset);\n        table._ySuperscriptXSize = this._readInt16(this._offset);\n        table._ySuperscriptYSize = this._readInt16(this._offset);\n        table._ySuperscriptXOffset = this._readInt16(this._offset);\n        table._ySuperscriptYOffset = this._readInt16(this._offset);\n        table._yStrikeoutSize = this._readInt16(this._offset);\n        table._yStrikeoutPosition = this._readInt16(this._offset);\n        table._sFamilyClass = this._readInt16(this._offset);\n        table._panose = this._readBytes(10);\n        table._ulUnicodeRange1 = this._readUInt32(this._offset);\n        table._ulUnicodeRange2 = this._readUInt32(this._offset);\n        table._ulUnicodeRange3 = this._readUInt32(this._offset);\n        table._ulUnicodeRange4 = this._readUInt32(this._offset);\n        table._vendorIdentifier = this._readBytes(4);\n        table._fsSelection = this._readUInt16(this._offset);\n        table._usFirstCharIndex = this._readUInt16(this._offset);\n        table._usLastCharIndex = this._readUInt16(this._offset);\n        table._sTypoAscender = this._readInt16(this._offset);\n        table._sTypoDescender = this._readInt16(this._offset);\n        table._sTypoLineGap = this._readInt16(this._offset);\n        table._usWinAscent = this._readUInt16(this._offset);\n        table._usWinDescent = this._readUInt16(this._offset);\n        table._ulCodePageRange1 = this._readUInt32(this._offset);\n        table._ulCodePageRange2 = this._readUInt32(this._offset);\n        if (table._version > 1) {\n            table._sxHeight = this._readInt16(this._offset);\n            table._sCapHeight = this._readInt16(this._offset);\n            table._usDefaultChar = this._readUInt16(this._offset);\n            table._usBreakChar = this._readUInt16(this._offset);\n            table._usMaxContext = this._readUInt16(this._offset);\n        }\n        else {\n            table._sxHeight = 0;\n            table._sCapHeight = 0;\n            table._usDefaultChar = 0;\n            table._usBreakChar = 0;\n            table._usMaxContext = 0;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._readPostTable = function () {\n        var tableInfo = this._getTable('post');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypePostTable();\n        table._formatType = this._readFixed(this._offset);\n        table._italicAngle = this._readFixed(this._offset);\n        table._underlinePosition = this._readInt16(this._offset);\n        table._underlineThickness = this._readInt16(this._offset);\n        table._isFixedPitch = this._readUInt32(this._offset);\n        table._minType42 = this._readUInt32(this._offset);\n        table._maxType42 = this._readUInt32(this._offset);\n        table._minType1 = this._readUInt32(this._offset);\n        table._maxType1 = this._readUInt32(this._offset);\n        return table;\n    };\n    _TrueTypeReader.prototype._readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this._getTable('hmtx');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new _TrueTypeLongHorMetric();\n            glyph._advanceWidth = this._readUInt16(this._offset);\n            glyph._lsb = this._readInt16(this._offset);\n            var glyphWidth = glyph._advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    _TrueTypeReader.prototype._readCmapTable = function () {\n        var tableInfo = this._getTable('cmap');\n        if (typeof tableInfo._offset !== 'undefined' && tableInfo._offset !== null) {\n            this._offset = tableInfo._offset;\n        }\n        var table = new _TrueTypeCmapTable();\n        table._version = this._readUInt16(this._offset);\n        table._tablesCount = this._readUInt16(this._offset);\n        var position = this._offset;\n        var subTables = [];\n        for (var i = 0; i < table._tablesCount; i++) {\n            this._offset = position;\n            var subTable = new _TrueTypeCmapSubTable();\n            subTable._platformID = this._readUInt16(this._offset);\n            subTable._encodingID = this._readUInt16(this._offset);\n            subTable._offset = this._readUInt32(this._offset);\n            position = this._offset;\n            this._readCmapSubTable(subTable);\n            subTables[Number.parseInt(i.toString(), 10)] = subTable;\n        }\n        return subTables;\n    };\n    _TrueTypeReader.prototype._readCmapSubTable = function (subTable) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var format = this._readUInt16(this._offset);\n        var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n        if (encoding !== _TrueTypeCmapEncoding.unknown) {\n            switch (format) {\n                case _TrueTypeCmapFormat.apple:\n                    this._readAppleCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.microsoft:\n                    this._readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case _TrueTypeCmapFormat.trimmed:\n                    this._readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeAppleCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        if (this._maxMacIndex === null || typeof this._maxMacIndex === 'undefined') {\n            this._maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readByte(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var collection = (encoding === _TrueTypeCmapEncoding.unicode) ? this._microsoft\n            : this.macintosh;\n        var table = new _TrueTypeMicrosoftCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._segCountX2 = this._readUInt16(this._offset);\n        table._searchRange = this._readUInt16(this._offset);\n        table._entrySelector = this._readUInt16(this._offset);\n        table._rangeShift = this._readUInt16(this._offset);\n        var segCount = table._segCountX2 / 2;\n        table._endCount = this._readUShortArray(segCount);\n        table._reservedPad = this._readUInt16(this._offset);\n        table._startCount = this._readUShortArray(segCount);\n        table._idDelta = this._readUShortArray(segCount);\n        table._idRangeOffset = this._readUShortArray(segCount);\n        var length = (table._length / 2 - 8) - (segCount * 4);\n        table._glyphID = this._readUShortArray(length);\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table._startCount[Number.parseInt(j.toString(), 10)]; k <=\n                table._endCount[Number.parseInt(j.toString(), 10)] && k !== 65535; k++) {\n                if (table._idRangeOffset[Number.parseInt(j.toString(), 10)] === 0) {\n                    codeOffset = (k + table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                else {\n                    index = j + table._idRangeOffset[Number.parseInt(j.toString(), 10)] / 2 - segCount +\n                        k - table._startCount[Number.parseInt(j.toString(), 10)];\n                    if (index >= table._glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table._glyphID[Number.parseInt(index.toString(), 10)] +\n                        table._idDelta[Number.parseInt(j.toString(), 10)]) & 65535;\n                }\n                var glyph = new _TrueTypeGlyph();\n                glyph._index = codeOffset;\n                glyph._width = this._getWidth(glyph._index);\n                var id = (encoding === _TrueTypeCmapEncoding.symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph._charCode = id;\n                collection.setValue(id, glyph);\n                this._addGlyph(glyph, encoding);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this._getTable('cmap');\n        this._offset = tableInfo._offset + subTable._offset;\n        var table = new _TrueTypeTrimmedCmapSubTable();\n        table._format = this._readUInt16(this._offset);\n        table._length = this._readUInt16(this._offset);\n        table._version = this._readUInt16(this._offset);\n        table._firstCode = this._readUInt16(this._offset);\n        table._entryCount = this._readUInt16(this._offset);\n        for (var i = 0; i < table._entryCount; ++i) {\n            var glyphInfo = new _TrueTypeGlyph();\n            glyphInfo._index = this._readUInt16(this._offset);\n            glyphInfo._width = this._getWidth(glyphInfo._index);\n            glyphInfo._charCode = i + table._firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this._addGlyph(glyphInfo, encoding);\n            this._maxMacIndex = Math.max(i, this._maxMacIndex);\n        }\n    };\n    _TrueTypeReader.prototype._initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable._recordsCount; i++) {\n            var record = nameTable._nameRecords[Number.parseInt(i.toString(), 10)];\n            if (record._nameID === 1) {\n                this._metrics._fontFamily = record._name;\n            }\n            else if (record._nameID === 6) {\n                this._metrics._postScriptName = record._name;\n            }\n            if (this._metrics._fontFamily !== null && typeof this._metrics._fontFamily !== 'undefined' &&\n                this._metrics._postScriptName !== null && typeof this._metrics._postScriptName !== 'undefined') {\n                break;\n            }\n        }\n    };\n    _TrueTypeReader.prototype._getTable = function (name) {\n        var table = new _TrueTypeTableInfo();\n        var obj;\n        if (this._tableDirectory.containsKey(name)) {\n            obj = this._tableDirectory.getValue(name);\n        }\n        if (obj !== null && typeof obj !== 'undefined') {\n            table = obj;\n        }\n        return table;\n    };\n    _TrueTypeReader.prototype._getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this._width.length) ? glyphCode : this._width.length - 1;\n        return this._width[Number.parseInt(glyphCode.toString(), 10)];\n    };\n    _TrueTypeReader.prototype._getCmapEncoding = function (platformID, encodingID) {\n        var format = _TrueTypeCmapEncoding.unknown;\n        if (platformID === _TrueTypePlatformID.microsoft &&\n            encodingID === _TrueTypeMicrosoftEncodingID.undefined) {\n            format = _TrueTypeCmapEncoding.symbol;\n        }\n        else if (platformID === _TrueTypePlatformID.microsoft\n            && encodingID === _TrueTypeMicrosoftEncodingID.unicode) {\n            format = _TrueTypeCmapEncoding.unicode;\n        }\n        else if (platformID === _TrueTypePlatformID.macintosh\n            && encodingID === _TrueTypeMacintoshEncodingID.roman) {\n            format = _TrueTypeCmapEncoding.macintosh;\n        }\n        return format;\n    };\n    _TrueTypeReader.prototype._addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case _TrueTypeCmapEncoding.unicode:\n                collection = this._microsoftGlyphs;\n                break;\n            case _TrueTypeCmapEncoding.macintosh:\n            case _TrueTypeCmapEncoding.symbol:\n                collection = this._macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph._index, glyph);\n    };\n    _TrueTypeReader.prototype._initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        this._initializeFontName(nameTable);\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[Number.parseInt(i.toString(), 10)];\n            var encoding = this._getCmapEncoding(subTable._platformID, subTable._encodingID);\n            if (encoding === _TrueTypeCmapEncoding.symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this._metrics._isSymbol = bSymbol;\n        this._metrics._macStyle = headTable._macStyle;\n        this._metrics._isFixedPitch = (postTable._isFixedPitch !== 0);\n        this._metrics._italicAngle = postTable._italicAngle;\n        var factor = 1000 / headTable._unitsPerEm;\n        this._metrics._winAscent = os2Table._sTypoAscender * factor;\n        this._metrics._macAscent = horizontalHeadTable._ascender * factor;\n        this._metrics._capHeight = (os2Table._sCapHeight !== 0) ? os2Table._sCapHeight : 0.7 * headTable._unitsPerEm * factor;\n        this._metrics._winDescent = os2Table._sTypoDescender * factor;\n        this._metrics._macDescent = horizontalHeadTable._descender * factor;\n        this._metrics._leading = (os2Table._sTypoAscender - os2Table._sTypoDescender + os2Table._sTypoLineGap) * factor;\n        this._metrics._lineGap = Math.ceil(horizontalHeadTable._lineGap * factor);\n        var left = headTable._xMin * factor;\n        var top = Math.ceil(this._metrics._macAscent + this._metrics._lineGap);\n        var right = headTable._xMax * factor;\n        var bottom = this._metrics._macDescent;\n        this._metrics._fontBox = [left, top, right, bottom];\n        this._metrics._stemV = 80;\n        this._metrics._widthTable = this._updateWidth();\n        this._metrics._contains = this._tableDirectory.containsKey('CFF');\n        this._metrics._subScriptSizeFactor = headTable._unitsPerEm / os2Table._ySubscriptYSize;\n        this._metrics._superscriptSizeFactor = headTable._unitsPerEm / os2Table._ySuperscriptYSize;\n    };\n    _TrueTypeReader.prototype._updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this._metrics._isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this._getGlyph(String.fromCharCode(Number.parseInt(i.toString(), 10)));\n                bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = Number.parseInt(i.toString(), 10);\n                var text = this._getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    bytes[Number.parseInt(i.toString(), 10)] = glyphInfo._width;\n                }\n                else {\n                    glyphInfo = this._getGlyph(space);\n                    bytes[Number.parseInt(i.toString(), 10)] = (glyphInfo._empty) ? 0 : glyphInfo._width;\n                }\n            }\n        }\n        return bytes;\n    };\n    _TrueTypeReader.prototype._getDefaultGlyph = function () {\n        var glyph = this._getGlyph(_StringTokenizer._whiteSpace);\n        return glyph;\n    };\n    _TrueTypeReader.prototype._getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._setOffset = function (offset) {\n        this._offset = offset;\n    };\n    _TrueTypeReader.prototype._readFontProgram = function (chars) {\n        var glyphChars = this._getGlyphChars(chars);\n        var locaTable = this._readLocaTable(this._bIsLocaShort);\n        if (glyphChars && glyphChars._size() < chars._size()) {\n            this._missedGlyphs = chars._size() - glyphChars._size();\n        }\n        this._updateGlyphChars(glyphChars, locaTable);\n        var result1 = this._generateGlyphTable(glyphChars, locaTable, null, null);\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this._updateLocaTable(newLocaTable, this._bIsLocaShort);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this._getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    _TrueTypeReader.prototype._generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        newLocaTable = [];\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[Number.parseInt(i.toString(), 10)];\n            if (locaTable._offsets.length > 0) {\n                glyphSize += locaTable._offsets[glyphIndex + 1] - locaTable._offsets[Number.parseInt(glyphIndex.toString(), 10)];\n            }\n        }\n        var glyphSizeAligned = this._align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this._getTable('glyf');\n        for (var i = 0; i < locaTable._offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[Number.parseInt(nextGlyphIndex.toString(), 10)] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[Number.parseInt(i.toString(), 10)] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable._offsets[Number.parseInt(i.toString(), 10)];\n                var oldNextGlyphOffset = locaTable._offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this._offset = table._offset + oldGlyphOffset;\n                    var result = this._read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    _TrueTypeReader.prototype._readLocaTable = function (bShort) {\n        var tableInfo = this._getTable('loca');\n        this._offset = tableInfo._offset;\n        var table = new _TrueTypeLocaTable();\n        var buffer = [];\n        if (bShort) {\n            var len = tableInfo._length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo._length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[Number.parseInt(i.toString(), 10)] = this._readUInt32(this._offset);\n            }\n        }\n        table._offsets = buffer;\n        return table;\n    };\n    _TrueTypeReader.prototype._updateGlyphChars = function (glyphChars, locaTable) {\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[Number.parseInt(i.toString(), 10)], glyphChars.getValue(glyphCharKeys[Number.parseInt(i.toString(), 10)]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[Number.parseInt(i.toString(), 10)];\n            this._processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    _TrueTypeReader.prototype._processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        if (glyph < locaTable._offsets.length - 1) {\n            var glyphOffset = locaTable._offsets[Number.parseInt(glyph.toString(), 10)];\n            if (glyphOffset !== locaTable._offsets[glyph + 1]) {\n                var tableInfo = this._getTable('glyf');\n                this._offset = tableInfo._offset + glyphOffset;\n                var glyphHeader = new _TrueTypeGlyphHeader();\n                glyphHeader.numberOfContours = this._readInt16(this._offset);\n                glyphHeader.xMin = this._readInt16(this._offset);\n                glyphHeader.yMin = this._readInt16(this._offset);\n                glyphHeader.xMax = this._readInt16(this._offset);\n                glyphHeader.yMax = this._readInt16(this._offset);\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this._readUInt16(this._offset);\n                        var glyphIndex = this._readUInt16(this._offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & _TrueTypeCompositeGlyphFlag.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & _TrueTypeCompositeGlyphFlag.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & _TrueTypeCompositeGlyphFlag.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this._offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._updateLocaTable = function (newLocaTable, bLocaIsShort) {\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this._align(size);\n        var writer = new _BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[Number.parseInt(i.toString(), 10)];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer._writeShort(value);\n            }\n            else {\n                writer._writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer._data, newLocaSize: size };\n    };\n    _TrueTypeReader.prototype._align = function (value) {\n        return (value + 3) & (~3);\n    };\n    _TrueTypeReader.prototype._getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        var result = this._getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var table = result.table;\n        var writer = new _BigEndianWriter(fontProgramLength);\n        writer._writeInt(0x10000);\n        writer._writeShort(table);\n        var entrySelector = this._entrySelectors[Number.parseInt(table.toString(), 10)];\n        writer._writeShort((1 << (entrySelector & 31)) * 16);\n        writer._writeShort(entrySelector);\n        writer._writeShort((table - (1 << (entrySelector & 31))) * 16);\n        this._writeCheckSums(writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        this._writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer._data;\n    };\n    _TrueTypeReader.prototype._getFontProgramLength = function (newLocaTableOut, newGlyphTable, table) {\n        var fontProgramLength = 0;\n        if (newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' && newLocaTableOut.length > 0 &&\n            newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            table = 2;\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                if (tableName !== 'glyf' && tableName !== 'loca') {\n                    var tableInfo = this._getTable(tableName);\n                    if (!tableInfo._empty) {\n                        ++table;\n                        fontProgramLength += this._align(tableInfo._length);\n                    }\n                }\n            }\n            fontProgramLength += newLocaTableOut.length;\n            fontProgramLength += newGlyphTable.length;\n            var usedTablesSize = table * 16 + (3 * 4);\n            fontProgramLength += usedTablesSize;\n        }\n        return { fontProgramLength: fontProgramLength, table: table };\n    };\n    _TrueTypeReader.prototype._getGlyphChars = function (chars) {\n        var dictionary = new Dictionary();\n        if (chars !== null && typeof chars !== 'undefined') {\n            var charKeys = chars.keys();\n            for (var i = 0; i < charKeys.length; i++) {\n                var ch = charKeys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._getGlyph(ch);\n                if (!glyph._empty) {\n                    dictionary.setValue(glyph._index, ch.charCodeAt(0));\n                }\n            }\n        }\n        return dictionary;\n    };\n    _TrueTypeReader.prototype._writeCheckSums = function (writer, table, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTableOut !== null && typeof newLocaTableOut !== 'undefined' &&\n            newLocaTableOut.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            var usedTablesSize = table * 16 + (3 * 4);\n            var nextTableSize = 0;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                writer._writeString(tableName);\n                if (tableName === 'glyf') {\n                    var checksum = this._calculateCheckSum(newGlyphTable);\n                    writer._writeInt(checksum);\n                    nextTableSize = glyphTableSize;\n                }\n                else if (tableName === 'loca') {\n                    var checksum = this._calculateCheckSum(newLocaTableOut);\n                    writer._writeInt(checksum);\n                    nextTableSize = locaTableSize;\n                }\n                else {\n                    writer._writeInt(tableInfo._checksum);\n                    nextTableSize = tableInfo._length;\n                }\n                writer._writeUInt(usedTablesSize);\n                writer._writeUInt(nextTableSize);\n                usedTablesSize += this._align(nextTableSize);\n            }\n        }\n    };\n    _TrueTypeReader.prototype._calculateCheckSum = function (bytes) {\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        var result = 0;\n        if (bytes !== null && typeof bytes !== 'undefined' && bytes.length > 0) {\n            for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n                byte4 += (bytes[pos++] & 255);\n                byte3 += (bytes[pos++] & 255);\n                byte2 += (bytes[pos++] & 255);\n                byte1 += (bytes[pos++] & 255);\n            }\n            result = byte1;\n            result += (byte2 << 8);\n            result += (byte3 << 16);\n            result += (byte4 << 24);\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer !== null && typeof writer !== 'undefined' && newLocaTable !== null && typeof newLocaTable !== 'undefined' &&\n            newLocaTable.length > 0 && newGlyphTable !== null && typeof newGlyphTable !== 'undefined' && newGlyphTable.length > 0) {\n            var tableNames = this._tableNames;\n            for (var i = 0; i < tableNames.length; i++) {\n                var tableName = tableNames[Number.parseInt(i.toString(), 10)];\n                var tableInfo = this._getTable(tableName);\n                if (tableInfo._empty) {\n                    continue;\n                }\n                if (tableName === 'glyf') {\n                    writer._writeBytes(newGlyphTable);\n                }\n                else if (tableName === 'loca') {\n                    writer._writeBytes(newLocaTable);\n                }\n                else {\n                    var count = this._align(tableInfo._length);\n                    var buff = [];\n                    for (var i_1 = 0; i_1 < count; i_1++) {\n                        buff.push(0);\n                    }\n                    this._offset = tableInfo._offset;\n                    var result = this._read(buff, 0, tableInfo._length);\n                    writer._writeBytes(result.buffer);\n                }\n            }\n        }\n    };\n    _TrueTypeReader.prototype._read = function (buffer, index, count) {\n        var written = 0;\n        if (buffer !== null && typeof buffer !== 'undefined' && buffer.length > 0) {\n            var read = 0;\n            do {\n                for (var i = 0; (i < count - written) && (this._offset + i < this._fontData.length); i++) {\n                    buffer[index + i] = this._fontData[this._offset + i];\n                }\n                read = count - written;\n                this._offset += read;\n                written += read;\n            } while (written < count);\n        }\n        return { buffer: buffer, written: written };\n    };\n    _TrueTypeReader.prototype._createInternals = function () {\n        this._metrics = new _TrueTypeMetrics();\n        var nameTable = this._readNameTable();\n        var headTable = this._readHeadTable();\n        this._bIsLocaShort = (headTable._indexToLocalFormat === 0);\n        var horizontalHeadTable = this._readHorizontalHeaderTable();\n        var os2Table = this._readOS2Table();\n        var postTable = this._readPostTable();\n        this._width = this._readWidthTable(horizontalHeadTable._numberOfHMetrics, headTable._unitsPerEm);\n        var subTables = this._readCmapTable();\n        this._initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    _TrueTypeReader.prototype._getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this._metrics._isSymbol && this._microsoftGlyphs !== null) {\n                if (this._microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this._microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this._metrics._isSymbol && this._macintoshGlyphs !== null) {\n                if (this._macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this._macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 !== null) ? obj1 : this._getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this._metrics._isSymbol && this._microsoft !== null) {\n                if (this._microsoft.containsKey(code)) {\n                    obj = this._microsoft.getValue(code);\n                    if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                        this._isFontPresent = true;\n                    }\n                }\n                else if (code !== _StringTokenizer._whiteSpace.charCodeAt(0)) {\n                    this._isFontPresent = false;\n                }\n            }\n            else if (this._metrics._isSymbol && this.macintosh !== null || this._isMacFont) {\n                if (this._maxMacIndex !== 0) {\n                    code %= this._maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this._isFontPresent = true;\n                }\n            }\n            if (charCode === _StringTokenizer._whiteSpace && obj === null) {\n                obj = new _TrueTypeGlyph();\n            }\n            var glyph = (obj !== null) ? obj : this._getDefaultGlyph();\n            return glyph;\n        }\n    };\n    _TrueTypeReader.prototype._readString = function (length, isUnicode) {\n        if (typeof isUnicode === 'undefined' || isUnicode === null) {\n            return this._readString(length, false);\n        }\n        else {\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this._fontData[this._offset]);\n                    }\n                    this._offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this._fontData[this._offset]);\n                    this._offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    _TrueTypeReader.prototype._readFixed = function (offset) {\n        var integer = this._readInt16(offset);\n        var sFraction = this._readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    _TrueTypeReader.prototype._readInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    _TrueTypeReader.prototype._readUInt32 = function (offset) {\n        var i1 = this._fontData[Number.parseInt(offset.toString(), 10) + 3];\n        var i2 = this._fontData[Number.parseInt(offset.toString(), 10) + 2];\n        var i3 = this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        var i4 = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    _TrueTypeReader.prototype._readInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) +\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readInt64 = function (offset) {\n        var low = this._readInt32(offset + 4);\n        var n = this._readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    _TrueTypeReader.prototype._readUInt16 = function (offset) {\n        var result = (this._fontData[Number.parseInt(offset.toString(), 10)] << 8) |\n            this._fontData[Number.parseInt(offset.toString(), 10) + 1];\n        this._offset += 2;\n        return result;\n    };\n    _TrueTypeReader.prototype._readUShortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[Number.parseInt(i.toString(), 10)] = this._readUInt16(this._offset);\n        }\n        return buffer;\n    };\n    _TrueTypeReader.prototype._readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this._fontData[Number.parseInt(this._offset.toString(), 10)]);\n            this._offset += 1;\n        }\n        return result;\n    };\n    _TrueTypeReader.prototype._readByte = function (offset) {\n        var result = this._fontData[Number.parseInt(offset.toString(), 10)];\n        this._offset += 1;\n        return result;\n    };\n    _TrueTypeReader.prototype._getCharacterWidth = function (code) {\n        var glyphInfo = this._getGlyph(code);\n        glyphInfo = (!glyphInfo._empty) ? glyphInfo : this._getDefaultGlyph();\n        var codeWidth = (!glyphInfo._empty) ? glyphInfo._width : 0;\n        return codeWidth;\n    };\n    _TrueTypeReader.prototype._convertString = function (text) {\n        var glyph = '';\n        if (text !== null && text !== undefined && text.length > 0) {\n            for (var k = 0; k < text.length; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = this._getGlyph(ch);\n                if (!glyphInfo._empty) {\n                    glyph += String.fromCharCode(glyphInfo._index);\n                }\n            }\n        }\n        return glyph;\n    };\n    return _TrueTypeReader;\n}());\nexport { _TrueTypeReader };\nvar _TrueTypeNameRecord = /** @class */ (function () {\n    function _TrueTypeNameRecord() {\n    }\n    return _TrueTypeNameRecord;\n}());\nexport { _TrueTypeNameRecord };\nvar _TrueTypeMetrics = /** @class */ (function () {\n    function _TrueTypeMetrics() {\n    }\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isItalic\", {\n        get: function () {\n            return ((this._macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_TrueTypeMetrics.prototype, \"_isBold\", {\n        get: function () {\n            return ((this._macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeMetrics;\n}());\nexport { _TrueTypeMetrics };\nvar _TrueTypeLongHorMetric = /** @class */ (function () {\n    function _TrueTypeLongHorMetric() {\n    }\n    return _TrueTypeLongHorMetric;\n}());\nexport { _TrueTypeLongHorMetric };\nvar _TrueTypeGlyph = /** @class */ (function () {\n    function _TrueTypeGlyph() {\n    }\n    Object.defineProperty(_TrueTypeGlyph.prototype, \"_empty\", {\n        get: function () {\n            return (this._index === this._width && this._width === this._charCode && this._charCode === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _TrueTypeGlyph;\n}());\nexport { _TrueTypeGlyph };\nvar _TrueTypeLocaTable = /** @class */ (function () {\n    function _TrueTypeLocaTable() {\n    }\n    return _TrueTypeLocaTable;\n}());\nexport { _TrueTypeLocaTable };\nvar _TrueTypeGlyphHeader = /** @class */ (function () {\n    function _TrueTypeGlyphHeader() {\n    }\n    return _TrueTypeGlyphHeader;\n}());\nexport { _TrueTypeGlyphHeader };\nvar _BigEndianWriter = /** @class */ (function () {\n    function _BigEndianWriter(capacity) {\n        this.int32Size = 4;\n        this.int16Size = 2;\n        this.int64Size = 8;\n        this._bufferLength = capacity;\n        this._buffer = [];\n    }\n    Object.defineProperty(_BigEndianWriter.prototype, \"_data\", {\n        get: function () {\n            if (this._buffer.length < this._bufferLength) {\n                var length_1 = this._bufferLength - this._buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this._buffer.push(0);\n                }\n            }\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_BigEndianWriter.prototype, \"_position\", {\n        get: function () {\n            if (typeof this._internalPosition === 'undefined' || this._internalPosition === null) {\n                this._internalPosition = 0;\n            }\n            return this._internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _BigEndianWriter.prototype._writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeInt = function (value) {\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(bytes);\n    };\n    _BigEndianWriter.prototype._writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this._flush(buff);\n    };\n    _BigEndianWriter.prototype._writeString = function (value) {\n        if (value !== null && typeof value !== 'undefined') {\n            var bytes = [];\n            for (var i = 0; i < value.length; i++) {\n                bytes.push(value.charCodeAt(i));\n            }\n            this._flush(bytes);\n        }\n    };\n    _BigEndianWriter.prototype._writeBytes = function (value) {\n        this._flush(value);\n    };\n    _BigEndianWriter.prototype._flush = function (buff) {\n        if (buff !== null && typeof buff !== 'undefined') {\n            var position = this._position;\n            for (var i = 0; i < buff.length; i++) {\n                this._buffer[Number.parseInt(position.toString(), 10)] = buff[Number.parseInt(i.toString(), 10)];\n                position++;\n            }\n            this._internalPosition += buff.length;\n        }\n    };\n    return _BigEndianWriter;\n}());\nexport { _BigEndianWriter };\n","import { _TrueTypeReader } from './ttf-reader';\nimport { _PdfDictionary, _PdfName, Dictionary } from './../pdf-primitives';\nimport { _PdfFontMetrics } from './pdf-font-metrics';\nimport { _StandardWidthTable } from './pdf-font-metrics';\nimport { _FontDescriptorFlag } from '../enumerator';\nimport { _decode } from '../utils';\nimport { _PdfStream } from './../base-stream';\nvar _UnicodeTrueTypeFont = /** @class */ (function () {\n    function _UnicodeTrueTypeFont(base64String, size) {\n        this._nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        this._isEmbedFont = false;\n        this._cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + '\\r\\n' + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 beginCodeSpacerange' + '\\r\\n';\n        this._cmapEndCodeSpaceRange = 'endCodeSpacerange' + '\\r\\n';\n        this._cmapBeginRange = 'beginbfrange' + '\\r\\n';\n        this._cmapEndRange = 'endbfrange' + '\\r\\n';\n        this._cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + '\\r\\n';\n        if (base64String === null || typeof base64String === 'undefined') {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this._fontSize = size;\n        this._fontString = base64String;\n        this._Initialize();\n    }\n    _UnicodeTrueTypeFont.prototype._beginSave = function () {\n        this._descendantFontBeginSave();\n        this._cmapBeginSave();\n        this._fontDictionaryBeginSave();\n        this._fontProgramBeginSave();\n        if (this._fontDescriptor) {\n            this._fontDescriptor.update('FontFile2', this._fontProgram);\n            this._fontDescriptor._updated = true;\n            this._fontDescriptor._isFont = true;\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._descendantFontBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var width = this._getDescendantWidth(); // eslint-disable-line\n            if (width !== null) {\n                this._descendantFont.set('W', width);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._fontDictionaryBeginSave = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            this._fontDictionary.update('ToUnicode', this._cmap);\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._Initialize = function () {\n        var byteArray = _decode(this._fontString);\n        this._fontData = byteArray;\n        this._ttfReader = new _TrueTypeReader(this._fontData);\n        this._ttfMetrics = this._ttfReader._metrics;\n    };\n    _UnicodeTrueTypeFont.prototype._createInternals = function () {\n        this._fontDictionary = new _PdfDictionary();\n        this._descendantFont = new _PdfDictionary();\n        this._metrics = new _PdfFontMetrics();\n        this._ttfReader._createInternals();\n        this._usedChars = null;\n        var data = []; // eslint-disable-line\n        this._fontProgram = new _PdfStream(data, new _PdfDictionary());\n        this._cmap = new _PdfStream(data, new _PdfDictionary());\n        this._ttfMetrics = this._ttfReader._metrics;\n        this._initializeMetrics();\n        this._subsetName = this._getFontName();\n        this._createDescendantFont();\n        this._createFontDictionary();\n    };\n    _UnicodeTrueTypeFont.prototype._getInternals = function () {\n        return this._fontDictionary;\n    };\n    _UnicodeTrueTypeFont.prototype._initializeMetrics = function () {\n        var ttfMetrics = this._ttfReader._metrics;\n        this._metrics._ascent = ttfMetrics._macAscent;\n        this._metrics._descent = ttfMetrics._macDescent;\n        this._metrics._height = ttfMetrics._macAscent - ttfMetrics._macDescent + ttfMetrics._lineGap;\n        this._metrics._name = ttfMetrics._fontFamily;\n        this._metrics._postScriptName = ttfMetrics._postScriptName;\n        this._metrics._size = this._fontSize;\n        this._metrics._widthTable = new _StandardWidthTable(ttfMetrics._widthTable);\n        this._metrics._lineGap = ttfMetrics._lineGap;\n        this._metrics._subScriptSizeFactor = ttfMetrics._subScriptSizeFactor;\n        this._metrics._superscriptSizeFactor = ttfMetrics._superscriptSizeFactor;\n        this._metrics._isBold = ttfMetrics._isBold;\n    };\n    _UnicodeTrueTypeFont.prototype._getFontName = function () {\n        var builder = '';\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this._nameString[Number.parseInt(index.toString(), 10)];\n        }\n        builder += '+';\n        builder += this._ttfReader._metrics._postScriptName;\n        return builder.toString();\n    };\n    _UnicodeTrueTypeFont.prototype._createDescendantFont = function () {\n        this._descendantFont = new _PdfDictionary();\n        this._descendantFont._updated = true;\n        this._descendantFont.set('Type', new _PdfName('Font'));\n        this._descendantFont.set('Subtype', new _PdfName('CIDFontType2'));\n        this._descendantFont.set('BaseFont', new _PdfName(this._subsetName));\n        this._descendantFont.set('CIDToGIDMap', new _PdfName('Identity'));\n        this._descendantFont.set('DW', 1000);\n        this._fontDescriptor = this._createFontDescriptor();\n        this._descendantFont.set('FontDescriptor', this._fontDescriptor);\n        var systemInfo = this._createSystemInfo();\n        this._descendantFont.set('CIDSystemInfo', systemInfo);\n        this._descendantFont._isFont = true;\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDescriptor = function () {\n        var descriptor = new _PdfDictionary();\n        var metrics = this._ttfReader._metrics;\n        descriptor.set('Type', new _PdfName('FontDescriptor'));\n        descriptor.set('FontName', new _PdfName(this._subsetName));\n        descriptor.set('Flags', this._getDescriptorFlags());\n        descriptor.set('FontBBox', this._getBoundBox());\n        descriptor.set('MissingWidth', metrics._widthTable[32]);\n        descriptor.set('StemV', metrics._stemV);\n        descriptor.set('ItalicAngle', metrics._italicAngle);\n        descriptor.set('CapHeight', metrics._capHeight);\n        descriptor.set('Ascent', metrics._winAscent);\n        descriptor.set('Descent', metrics._winDescent);\n        descriptor.set('Leading', metrics._leading);\n        descriptor.set('AvgWidth', metrics._widthTable[32]);\n        descriptor.set('MaxWidth', metrics._widthTable[32]);\n        descriptor.set('XHeight', 0);\n        descriptor.set('StemH', 0);\n        descriptor._updated = true;\n        return descriptor;\n    };\n    _UnicodeTrueTypeFont.prototype._generateFontProgram = function () {\n        var fontProgram = [];\n        this._usedChars = (this._usedChars === null || typeof this._usedChars === 'undefined') ? new Dictionary()\n            : this._usedChars;\n        this._ttfReader._setOffset(0);\n        fontProgram = this._ttfReader._readFontProgram(this._usedChars);\n        this._fontProgram._clearStream();\n        this._fontProgram._writeBytes(fontProgram);\n    };\n    _UnicodeTrueTypeFont.prototype._getBoundBox = function () {\n        var rect = this._ttfReader._metrics._fontBox;\n        var width = Math.abs(rect[2] - rect[0]);\n        var height = Math.abs(rect[1] - rect[3]);\n        var rectangle = [rect[0], rect[3], width, height];\n        return rectangle;\n    };\n    _UnicodeTrueTypeFont.prototype._cmapBeginSave = function () {\n        this._generateCmap();\n    };\n    _UnicodeTrueTypeFont.prototype._fontProgramBeginSave = function () {\n        this._generateFontProgram();\n    };\n    _UnicodeTrueTypeFont.prototype._toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    _UnicodeTrueTypeFont.prototype._generateCmap = function () {\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphChars = this._ttfReader._getGlyphChars(this._usedChars);\n            if (glyphChars._size() > 0) {\n                var keys = glyphChars.keys().sort();\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this._toHexString(first, false) + this._toHexString(last, false) + '\\r\\n';\n                var builder = '';\n                builder += this._cmapPrefix;\n                builder += middlePart;\n                builder += this._cmapEndCodeSpaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this._cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += ' ';\n                        builder += this._cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    builder += this._toHexString(key, true) + this._toHexString(key, true);\n                    builder += this._toHexString(glyphChars.getValue(key), true) + '\\n';\n                }\n                builder += this._cmapSuffix;\n                this._cmap._clearStream();\n                this._cmap._write(builder);\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._createFontDictionary = function () {\n        this._fontDictionary._updated = true;\n        this._fontDictionary.set('Type', _PdfName.get('Font'));\n        this._fontDictionary.set('Subtype', _PdfName.get('Type0'));\n        this._fontDictionary.set('BaseFont', new _PdfName(this._subsetName));\n        this._fontDictionary.set('Encoding', _PdfName.get('Identity-H'));\n        this._fontDictionary.set('DescendantFonts', this._descendantFont);\n        this._fontDictionary._isFont = true;\n        this._fontDictionary._currentObj = this;\n    };\n    _UnicodeTrueTypeFont.prototype._createSystemInfo = function () {\n        var systemInfo = new _PdfDictionary();\n        systemInfo._updated = true;\n        systemInfo.set('Registry', 'Adobe');\n        systemInfo.set('Ordering', 'Identity');\n        systemInfo.set('Supplement', 0);\n        return systemInfo;\n    };\n    _UnicodeTrueTypeFont.prototype._getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this._ttfReader._metrics;\n        if (metrics._isFixedPitch) {\n            flags |= _FontDescriptorFlag.fixedPitch;\n        }\n        if (metrics._isSymbol) {\n            flags |= _FontDescriptorFlag.symbolic;\n        }\n        else {\n            flags |= _FontDescriptorFlag.nonSymbolic;\n        }\n        if (metrics._isItalic) {\n            flags |= _FontDescriptorFlag.italic;\n        }\n        if (metrics._isBold) {\n            flags |= _FontDescriptorFlag.forceBold;\n        }\n        return flags;\n    };\n    _UnicodeTrueTypeFont.prototype._getCharacterWidth = function (charCode) {\n        var codeWidth = this._ttfReader._getCharacterWidth(charCode);\n        return codeWidth;\n    };\n    _UnicodeTrueTypeFont.prototype._setSymbols = function (text) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._usedChars === null || typeof this._usedChars === 'undefined') {\n                this._usedChars = new Dictionary();\n            }\n            for (var i = 0; i < text.length; i++) {\n                var ch = text[Number.parseInt(i.toString(), 10)];\n                this._usedChars.setValue(ch, String.fromCharCode(0));\n            }\n        }\n    };\n    _UnicodeTrueTypeFont.prototype._getDescendantWidth = function () {\n        var array = new Array(); // eslint-disable-line\n        if (this._usedChars !== null && typeof this._usedChars !== 'undefined' && this._usedChars._size() > 0) {\n            var glyphInfo = [];\n            var keys = this._usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[Number.parseInt(i.toString(), 10)];\n                var glyph = this._ttfReader._getGlyph(chLen);\n                glyphInfo.push(glyph);\n            }\n            glyphInfo.sort(function (a, b) { return a._index - b._index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new Array(); // eslint-disable-line\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[Number.parseInt(i.toString(), 10)];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph._index;\n                    lastGlyphIndex = glyph._index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph._index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    array.push(Number(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.push(widthDetails);\n                    }\n                    firstGlyphIndex = glyph._index;\n                    widthDetails = new Array(); // eslint-disable-line\n                }\n                widthDetails.push(Number(glyph._width));\n                if ((i + 1) === glyphInfo.length) {\n                    array.push(Number(firstGlyphIndex));\n                    array.push(widthDetails);\n                }\n                lastGlyphIndex = glyph._index;\n            }\n        }\n        return array;\n    };\n    return _UnicodeTrueTypeFont;\n}());\nexport { _UnicodeTrueTypeFont };\n","var _ArabicShapeRenderer = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'ArabicShapeRenderer' class.\n     *\n     * @private\n     */\n    function _ArabicShapeRenderer() {\n        this._arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'], ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'], ['\\u0625', '\\uFE87', '\\uFE88'], ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'], ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'], ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'], ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'], ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'], ['\\u062F', '\\uFEA9', '\\uFEAA'], ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'], ['\\u0632', '\\uFEAF', '\\uFEB0'], ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'], ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'], ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'], ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'], ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'], ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'], ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'], ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'], ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'], ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'], ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'], ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'], ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'], ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'], ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'], ['\\u0688', '\\uFB88', '\\uFB89'], ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'], ['\\u068E', '\\uFB86', '\\uFB87'], ['\\u0691', '\\uFB8C', '\\uFB8D'], ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'], ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'], ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'], ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'], ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'], ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'], ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'], ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'], ['\\u06C7', '\\uFBD7', '\\uFBD8'], ['\\u06C8', '\\uFBDB', '\\uFBDC'], ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'], ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'], ['\\u06D2', '\\uFBAE', '\\uFBAF'], ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this._alef = '\\u0627';\n        this._alefHamza = '\\u0623';\n        this._alefHamzaBelow = '\\u0625';\n        this._alefMadda = '\\u0622';\n        this._lam = '\\u0644';\n        this._hamza = '\\u0621';\n        this._zeroWidthJoiner = '\\u200D';\n        this._hamzaAbove = '\\u0654';\n        this._hamzaBelow = '\\u0655';\n        this._wawHamza = '\\u0624';\n        this._yehHamza = '\\u0626';\n        this._waw = '\\u0648';\n        this._alefsura = '\\u0649';\n        this._yeh = '\\u064A';\n        this._farsiYeh = '\\u06CC';\n        this._shadda = '\\u0651';\n        this._madda = '\\u0653';\n        this._lwa = '\\uFEFB';\n        this._lwawh = '\\uFEF7';\n        this._lwawhb = '\\uFEF9';\n        this._lwawm = '\\uFEF5';\n        this._bwhb = '\\u06D3';\n        this._fathatan = '\\u064B';\n        this._superalef = '\\u0670';\n        this._vowel = 0x1;\n        this._arabicMapTable = new Map();\n        for (var i = 0; i < this._arabicCharTable.length; i++) {\n            this._arabicMapTable.set(this._arabicCharTable[Number.parseInt(i.toString(), 10)][0], this._arabicCharTable[Number.parseInt(i.toString(), 10)]);\n        }\n    }\n    _ArabicShapeRenderer.prototype._getCharacterShape = function (input, index) {\n        if ((input >= this._hamza) && (input <= this._bwhb)) {\n            var value = [];\n            if (this._arabicMapTable.get(input)) {\n                value = this._arabicMapTable.get(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this._lwawm && input <= this._lwa) {\n            return (input);\n        }\n        return input;\n    };\n    _ArabicShapeRenderer.prototype._shape = function (text) {\n        var builder = '';\n        var value = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[Number.parseInt(i.toString(), 10)];\n            if (c >= '؀' && c <= 'ۿ') {\n                value = value + c;\n            }\n            else {\n                if (value.length > 0) {\n                    var shapeText = this._doShape(value.toString(), 0);\n                    builder = builder + shapeText;\n                    value = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (value.length > 0) {\n            var shapeText = this._doShape(value.toString(), 0);\n            builder = builder + shapeText;\n        }\n        return builder.toString();\n    };\n    _ArabicShapeRenderer.prototype._doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new _ArabicShape();\n        var present = new _ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this._ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this._getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous._shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present._shapes);\n                present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n                str = this._append(str, previous, level);\n                previous = present;\n                present = new _ArabicShape();\n                present._shapeValue = next;\n                present._shapes = shapeCount;\n                present._shapeLigature++;\n            }\n        }\n        len = (previous._shapes > 2) ? 1 : 0;\n        len = len % (present._shapes);\n        present._shapeValue = this._getCharacterShape(present._shapeValue, len);\n        str = this._append(str, previous, level);\n        str = this._append(str, present, level);\n        return str.toString();\n    };\n    _ArabicShapeRenderer.prototype._append = function (builder, shape, level) {\n        if (shape._shapeValue !== '') {\n            builder = builder + shape._shapeValue;\n            shape._shapeLigature -= 1;\n            if (shape._shapeType !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeType;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n            if (shape._shapeVowel !== '') {\n                if ((level & this._vowel) === 0) {\n                    builder = builder + shape._shapeVowel;\n                    shape._shapeLigature -= 1;\n                }\n                else {\n                    shape._shapeLigature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    _ArabicShapeRenderer.prototype._ligature = function (value, shape) {\n        if (shape._shapeValue !== '') {\n            var result = 0;\n            if ((value >= this._fathatan && value <= this._hamzaBelow) || value === this._superalef) {\n                result = 1;\n                if ((shape._shapeVowel !== '') && (value !== this._shadda)) {\n                    result = 2;\n                }\n                if (value === this._shadda) {\n                    if (shape._shapeType === '') {\n                        shape._shapeType = this._shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this._hamzaBelow) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaBelow;\n                    }\n                }\n                else if (value === this._hamzaAbove) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._lwa) {\n                        shape._shapeValue = this._lwawh;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._waw) {\n                        shape._shapeValue = this._wawHamza;\n                        result = 2;\n                    }\n                    else if (shape._shapeValue === this._yeh || shape._shapeValue === this._alefsura ||\n                        shape._shapeValue === this._farsiYeh) {\n                        shape._shapeValue = this._yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape._shapeType = this._hamzaAbove;\n                    }\n                }\n                else if (value === this._madda) {\n                    if (shape._shapeValue === this._alef) {\n                        shape._shapeValue = this._alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape._shapeVowel = value;\n                }\n                if (result === 1) {\n                    shape._shapeLigature++;\n                }\n                return result;\n            }\n            if (shape._shapeVowel !== '') {\n                return 0;\n            }\n            if (shape._shapeValue === this._lam) {\n                if (value === this._alef) {\n                    shape._shapeValue = this._lwa;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamza) {\n                    shape._shapeValue = this._lwawh;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefHamzaBelow) {\n                    shape._shapeValue = this._lwawhb;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n                else if (value === this._alefMadda) {\n                    shape._shapeValue = this._lwawm;\n                    shape._shapes = 2;\n                    result = 3;\n                }\n            }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    _ArabicShapeRenderer.prototype._getShapeCount = function (shape) {\n        if ((shape >= this._hamza) && (shape <= this._bwhb) && !((shape >= this._fathatan && shape <= this._hamzaBelow)\n            || shape === this._superalef)) {\n            var c = [];\n            if (this._arabicMapTable.get(shape)) {\n                c = this._arabicMapTable.get(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this._zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return _ArabicShapeRenderer;\n}());\nexport { _ArabicShapeRenderer };\nvar _ArabicShape = /** @class */ (function () {\n    function _ArabicShape() {\n        this._shapeValue = '';\n        this._shapeType = '';\n        this._shapeVowel = '';\n        this._shapeLigature = 0;\n        this._shapes = 1;\n    }\n    return _ArabicShape;\n}());\nexport { _ArabicShape };\n","import { Dictionary } from './../../pdf-primitives';\nvar _Bidirectional = /** @class */ (function () {\n    /**\n     * Creates a new instance of the `_Bidirectional` class.\n     *\n     * @private\n     */\n    function _Bidirectional() {\n        this._indexes = [];\n        this._indexLevels = [];\n        this._mirroringShape = new Dictionary();\n        this._update();\n    }\n    _Bidirectional.prototype._doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this._indexLevels[Number.parseInt(i.toString(), 10)] & 1) === 1)\n                && this._mirroringShape.containsKey(text[Number.parseInt(i.toString(), 10)].charCodeAt(0))) {\n                var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n                result[Number.parseInt(i.toString(), 10)] = String.fromCharCode(this._mirroringShape.getValue(value));\n            }\n            else {\n                result[Number.parseInt(i.toString(), 10)] = text[Number.parseInt(i.toString(), 10)].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[Number.parseInt(j.toString(), 10)];\n        }\n        return res;\n    };\n    _Bidirectional.prototype._getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new _RtlCharacters();\n        this._indexLevels = rtlCharacters._getVisualOrder(inputText, isRtl);\n        this._setDefaultIndexLevel();\n        this._doOrder(0, this._indexLevels.length - 1);\n        var text = this._doMirrorShaping(inputText);\n        var resultBuilder = '';\n        for (var i = 0; i < this._indexes.length; i++) {\n            var index = this._indexes[Number.parseInt(i.toString(), 10)];\n            resultBuilder += text[Number.parseInt(index.toString(), 10)];\n        }\n        return resultBuilder.toString();\n    };\n    _Bidirectional.prototype._setDefaultIndexLevel = function () {\n        for (var i = 0; i < this._indexLevels.length; i++) {\n            this._indexes[Number.parseInt(i.toString(), 10)] = i;\n        }\n    };\n    _Bidirectional.prototype._doOrder = function (sIndex, eIndex) {\n        var max = this._indexLevels[Number.parseInt(sIndex.toString(), 10)];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this._indexLevels[Number.parseInt(i.toString(), 10)];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this._reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            while (true) { // eslint-disable-line\n                while (pstart <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pstart.toString(), 10)] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this._indexLevels[Number.parseInt(pend.toString(), 10)] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this._reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    _Bidirectional.prototype._reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this._indexes[Number.parseInt(i.toString(), 10)];\n            this._indexes[Number.parseInt(i.toString(), 10)] = this._indexes[Number.parseInt(j.toString(), 10)];\n            this._indexes[Number.parseInt(j.toString(), 10)] = temp;\n        }\n    };\n    _Bidirectional.prototype._update = function () {\n        this._mirroringShape.setValue(40, 41);\n        this._mirroringShape.setValue(41, 40);\n        this._mirroringShape.setValue(60, 62);\n        this._mirroringShape.setValue(62, 60);\n        this._mirroringShape.setValue(91, 93);\n        this._mirroringShape.setValue(93, 91);\n        this._mirroringShape.setValue(123, 125);\n        this._mirroringShape.setValue(125, 123);\n        this._mirroringShape.setValue(171, 187);\n        this._mirroringShape.setValue(187, 171);\n        this._mirroringShape.setValue(8249, 8250);\n        this._mirroringShape.setValue(8250, 8249);\n        this._mirroringShape.setValue(8261, 8262);\n        this._mirroringShape.setValue(8262, 8261);\n        this._mirroringShape.setValue(8317, 8318);\n        this._mirroringShape.setValue(8318, 8317);\n        this._mirroringShape.setValue(8333, 8334);\n        this._mirroringShape.setValue(8334, 8333);\n        this._mirroringShape.setValue(8712, 8715);\n        this._mirroringShape.setValue(8713, 8716);\n        this._mirroringShape.setValue(8714, 8717);\n        this._mirroringShape.setValue(8715, 8712);\n        this._mirroringShape.setValue(8716, 8713);\n        this._mirroringShape.setValue(8717, 8714);\n        this._mirroringShape.setValue(8725, 10741);\n        this._mirroringShape.setValue(8764, 8765);\n        this._mirroringShape.setValue(8765, 8764);\n        this._mirroringShape.setValue(8771, 8909);\n        this._mirroringShape.setValue(8786, 8787);\n        this._mirroringShape.setValue(8787, 8786);\n        this._mirroringShape.setValue(8788, 8789);\n        this._mirroringShape.setValue(8789, 8788);\n        this._mirroringShape.setValue(8804, 8805);\n        this._mirroringShape.setValue(8805, 8804);\n        this._mirroringShape.setValue(8806, 8807);\n        this._mirroringShape.setValue(8807, 8806);\n        this._mirroringShape.setValue(8808, 8809);\n        this._mirroringShape.setValue(8809, 8808);\n        this._mirroringShape.setValue(8810, 8811);\n        this._mirroringShape.setValue(8811, 8810);\n        this._mirroringShape.setValue(8814, 8815);\n        this._mirroringShape.setValue(8815, 8814);\n        this._mirroringShape.setValue(8816, 8817);\n        this._mirroringShape.setValue(8817, 8816);\n        this._mirroringShape.setValue(8818, 8819);\n        this._mirroringShape.setValue(8819, 8818);\n        this._mirroringShape.setValue(8820, 8821);\n        this._mirroringShape.setValue(8821, 8820);\n        this._mirroringShape.setValue(8822, 8823);\n        this._mirroringShape.setValue(8823, 8822);\n        this._mirroringShape.setValue(8824, 8825);\n        this._mirroringShape.setValue(8825, 8824);\n        this._mirroringShape.setValue(8826, 8827);\n        this._mirroringShape.setValue(8827, 8826);\n        this._mirroringShape.setValue(8828, 8829);\n        this._mirroringShape.setValue(8829, 8828);\n        this._mirroringShape.setValue(8830, 8831);\n        this._mirroringShape.setValue(8831, 8830);\n        this._mirroringShape.setValue(8832, 8833);\n        this._mirroringShape.setValue(8833, 8832);\n        this._mirroringShape.setValue(8834, 8835);\n        this._mirroringShape.setValue(8835, 8834);\n        this._mirroringShape.setValue(8836, 8837);\n        this._mirroringShape.setValue(8837, 8836);\n        this._mirroringShape.setValue(8838, 8839);\n        this._mirroringShape.setValue(8839, 8838);\n        this._mirroringShape.setValue(8840, 8841);\n        this._mirroringShape.setValue(8841, 8840);\n        this._mirroringShape.setValue(8842, 8843);\n        this._mirroringShape.setValue(8843, 8842);\n        this._mirroringShape.setValue(8847, 8848);\n        this._mirroringShape.setValue(8848, 8847);\n        this._mirroringShape.setValue(8849, 8850);\n        this._mirroringShape.setValue(8850, 8849);\n        this._mirroringShape.setValue(8856, 10680);\n        this._mirroringShape.setValue(8866, 8867);\n        this._mirroringShape.setValue(8867, 8866);\n        this._mirroringShape.setValue(8870, 10974);\n        this._mirroringShape.setValue(8872, 10980);\n        this._mirroringShape.setValue(8873, 10979);\n        this._mirroringShape.setValue(8875, 10981);\n        this._mirroringShape.setValue(8880, 8881);\n        this._mirroringShape.setValue(8881, 8880);\n        this._mirroringShape.setValue(8882, 8883);\n        this._mirroringShape.setValue(8883, 8882);\n        this._mirroringShape.setValue(8884, 8885);\n        this._mirroringShape.setValue(8885, 8884);\n        this._mirroringShape.setValue(8886, 8887);\n        this._mirroringShape.setValue(8887, 8886);\n        this._mirroringShape.setValue(8905, 8906);\n        this._mirroringShape.setValue(8906, 8905);\n        this._mirroringShape.setValue(8907, 8908);\n        this._mirroringShape.setValue(8908, 8907);\n        this._mirroringShape.setValue(8909, 8771);\n        this._mirroringShape.setValue(8912, 8913);\n        this._mirroringShape.setValue(8913, 8912);\n        this._mirroringShape.setValue(8918, 8919);\n        this._mirroringShape.setValue(8919, 8918);\n        this._mirroringShape.setValue(8920, 8921);\n        this._mirroringShape.setValue(8921, 8920);\n        this._mirroringShape.setValue(8922, 8923);\n        this._mirroringShape.setValue(8923, 8922);\n        this._mirroringShape.setValue(8924, 8925);\n        this._mirroringShape.setValue(8925, 8924);\n        this._mirroringShape.setValue(8926, 8927);\n        this._mirroringShape.setValue(8927, 8926);\n        this._mirroringShape.setValue(8928, 8929);\n        this._mirroringShape.setValue(8929, 8928);\n        this._mirroringShape.setValue(8930, 8931);\n        this._mirroringShape.setValue(8931, 8930);\n        this._mirroringShape.setValue(8932, 8933);\n        this._mirroringShape.setValue(8933, 8932);\n        this._mirroringShape.setValue(8934, 8935);\n        this._mirroringShape.setValue(8935, 8934);\n        this._mirroringShape.setValue(8936, 8937);\n        this._mirroringShape.setValue(8937, 8936);\n        this._mirroringShape.setValue(8938, 8939);\n        this._mirroringShape.setValue(8939, 8938);\n        this._mirroringShape.setValue(8940, 8941);\n        this._mirroringShape.setValue(8941, 8940);\n        this._mirroringShape.setValue(8944, 8945);\n        this._mirroringShape.setValue(8945, 8944);\n        this._mirroringShape.setValue(8946, 8954);\n        this._mirroringShape.setValue(8947, 8955);\n        this._mirroringShape.setValue(8948, 8956);\n        this._mirroringShape.setValue(8950, 8957);\n        this._mirroringShape.setValue(8951, 8958);\n        this._mirroringShape.setValue(8954, 8946);\n        this._mirroringShape.setValue(8955, 8947);\n        this._mirroringShape.setValue(8956, 8948);\n        this._mirroringShape.setValue(8957, 8950);\n        this._mirroringShape.setValue(8958, 8951);\n        this._mirroringShape.setValue(8968, 8969);\n        this._mirroringShape.setValue(8969, 8968);\n        this._mirroringShape.setValue(8970, 8971);\n        this._mirroringShape.setValue(8971, 8970);\n        this._mirroringShape.setValue(9001, 9002);\n        this._mirroringShape.setValue(9002, 9001);\n        this._mirroringShape.setValue(10088, 10089);\n        this._mirroringShape.setValue(10089, 10088);\n        this._mirroringShape.setValue(10090, 10091);\n        this._mirroringShape.setValue(10091, 10090);\n        this._mirroringShape.setValue(10092, 10093);\n        this._mirroringShape.setValue(10093, 10092);\n        this._mirroringShape.setValue(10094, 10095);\n        this._mirroringShape.setValue(10095, 10094);\n        this._mirroringShape.setValue(10096, 10097);\n        this._mirroringShape.setValue(10097, 10096);\n        this._mirroringShape.setValue(10098, 10099);\n        this._mirroringShape.setValue(10099, 10098);\n        this._mirroringShape.setValue(10100, 10101);\n        this._mirroringShape.setValue(10101, 10100);\n        this._mirroringShape.setValue(10197, 10198);\n        this._mirroringShape.setValue(10198, 10197);\n        this._mirroringShape.setValue(10205, 10206);\n        this._mirroringShape.setValue(10206, 10205);\n        this._mirroringShape.setValue(10210, 10211);\n        this._mirroringShape.setValue(10211, 10210);\n        this._mirroringShape.setValue(10212, 10213);\n        this._mirroringShape.setValue(10213, 10212);\n        this._mirroringShape.setValue(10214, 10215);\n        this._mirroringShape.setValue(10215, 10214);\n        this._mirroringShape.setValue(10216, 10217);\n        this._mirroringShape.setValue(10217, 10216);\n        this._mirroringShape.setValue(10218, 10219);\n        this._mirroringShape.setValue(10219, 10218);\n        this._mirroringShape.setValue(10627, 10628);\n        this._mirroringShape.setValue(10628, 10627);\n        this._mirroringShape.setValue(10629, 10630);\n        this._mirroringShape.setValue(10630, 10629);\n        this._mirroringShape.setValue(10631, 10632);\n        this._mirroringShape.setValue(10632, 10631);\n        this._mirroringShape.setValue(10633, 10634);\n        this._mirroringShape.setValue(10634, 10633);\n        this._mirroringShape.setValue(10635, 10636);\n        this._mirroringShape.setValue(10636, 10635);\n        this._mirroringShape.setValue(10637, 10640);\n        this._mirroringShape.setValue(10638, 10639);\n        this._mirroringShape.setValue(10639, 10638);\n        this._mirroringShape.setValue(10640, 10637);\n        this._mirroringShape.setValue(10641, 10642);\n        this._mirroringShape.setValue(10642, 10641);\n        this._mirroringShape.setValue(10643, 10644);\n        this._mirroringShape.setValue(10644, 10643);\n        this._mirroringShape.setValue(10645, 10646);\n        this._mirroringShape.setValue(10646, 10645);\n        this._mirroringShape.setValue(10647, 10648);\n        this._mirroringShape.setValue(10648, 10647);\n        this._mirroringShape.setValue(10680, 8856);\n        this._mirroringShape.setValue(10688, 10689);\n        this._mirroringShape.setValue(10689, 10688);\n        this._mirroringShape.setValue(10692, 10693);\n        this._mirroringShape.setValue(10693, 10692);\n        this._mirroringShape.setValue(10703, 10704);\n        this._mirroringShape.setValue(10704, 10703);\n        this._mirroringShape.setValue(10705, 10706);\n        this._mirroringShape.setValue(10706, 10705);\n        this._mirroringShape.setValue(10708, 10709);\n        this._mirroringShape.setValue(10709, 10708);\n        this._mirroringShape.setValue(10712, 10713);\n        this._mirroringShape.setValue(10713, 10712);\n        this._mirroringShape.setValue(10714, 10715);\n        this._mirroringShape.setValue(10715, 10714);\n        this._mirroringShape.setValue(10741, 8725);\n        this._mirroringShape.setValue(10744, 10745);\n        this._mirroringShape.setValue(10745, 10744);\n        this._mirroringShape.setValue(10748, 10749);\n        this._mirroringShape.setValue(10749, 10748);\n        this._mirroringShape.setValue(10795, 10796);\n        this._mirroringShape.setValue(10796, 10795);\n        this._mirroringShape.setValue(10797, 10796);\n        this._mirroringShape.setValue(10798, 10797);\n        this._mirroringShape.setValue(10804, 10805);\n        this._mirroringShape.setValue(10805, 10804);\n        this._mirroringShape.setValue(10812, 10813);\n        this._mirroringShape.setValue(10813, 10812);\n        this._mirroringShape.setValue(10852, 10853);\n        this._mirroringShape.setValue(10853, 10852);\n        this._mirroringShape.setValue(10873, 10874);\n        this._mirroringShape.setValue(10874, 10873);\n        this._mirroringShape.setValue(10877, 10878);\n        this._mirroringShape.setValue(10878, 10877);\n        this._mirroringShape.setValue(10879, 10880);\n        this._mirroringShape.setValue(10880, 10879);\n        this._mirroringShape.setValue(10881, 10882);\n        this._mirroringShape.setValue(10882, 10881);\n        this._mirroringShape.setValue(10883, 10884);\n        this._mirroringShape.setValue(10884, 10883);\n        this._mirroringShape.setValue(10891, 10892);\n        this._mirroringShape.setValue(10892, 10891);\n        this._mirroringShape.setValue(10897, 10898);\n        this._mirroringShape.setValue(10898, 10897);\n        this._mirroringShape.setValue(10899, 10900);\n        this._mirroringShape.setValue(10900, 10899);\n        this._mirroringShape.setValue(10901, 10902);\n        this._mirroringShape.setValue(10902, 10901);\n        this._mirroringShape.setValue(10903, 10904);\n        this._mirroringShape.setValue(10904, 10903);\n        this._mirroringShape.setValue(10905, 10906);\n        this._mirroringShape.setValue(10906, 10905);\n        this._mirroringShape.setValue(10907, 10908);\n        this._mirroringShape.setValue(10908, 10907);\n        this._mirroringShape.setValue(10913, 10914);\n        this._mirroringShape.setValue(10914, 10913);\n        this._mirroringShape.setValue(10918, 10919);\n        this._mirroringShape.setValue(10919, 10918);\n        this._mirroringShape.setValue(10920, 10921);\n        this._mirroringShape.setValue(10921, 10920);\n        this._mirroringShape.setValue(10922, 10923);\n        this._mirroringShape.setValue(10923, 10922);\n        this._mirroringShape.setValue(10924, 10925);\n        this._mirroringShape.setValue(10925, 10924);\n        this._mirroringShape.setValue(10927, 10928);\n        this._mirroringShape.setValue(10928, 10927);\n        this._mirroringShape.setValue(10931, 10932);\n        this._mirroringShape.setValue(10932, 10931);\n        this._mirroringShape.setValue(10939, 10940);\n        this._mirroringShape.setValue(10940, 10939);\n        this._mirroringShape.setValue(10941, 10942);\n        this._mirroringShape.setValue(10942, 10941);\n        this._mirroringShape.setValue(10943, 10944);\n        this._mirroringShape.setValue(10944, 10943);\n        this._mirroringShape.setValue(10945, 10946);\n        this._mirroringShape.setValue(10946, 10945);\n        this._mirroringShape.setValue(10947, 10948);\n        this._mirroringShape.setValue(10948, 10947);\n        this._mirroringShape.setValue(10949, 10950);\n        this._mirroringShape.setValue(10950, 10949);\n        this._mirroringShape.setValue(10957, 10958);\n        this._mirroringShape.setValue(10958, 10957);\n        this._mirroringShape.setValue(10959, 10960);\n        this._mirroringShape.setValue(10960, 10959);\n        this._mirroringShape.setValue(10961, 10962);\n        this._mirroringShape.setValue(10962, 10961);\n        this._mirroringShape.setValue(10963, 10964);\n        this._mirroringShape.setValue(10964, 10963);\n        this._mirroringShape.setValue(10965, 10966);\n        this._mirroringShape.setValue(10966, 10965);\n        this._mirroringShape.setValue(10974, 8870);\n        this._mirroringShape.setValue(10979, 8873);\n        this._mirroringShape.setValue(10980, 8872);\n        this._mirroringShape.setValue(10981, 8875);\n        this._mirroringShape.setValue(10988, 10989);\n        this._mirroringShape.setValue(10989, 10988);\n        this._mirroringShape.setValue(10999, 11000);\n        this._mirroringShape.setValue(11000, 10999);\n        this._mirroringShape.setValue(11001, 11002);\n        this._mirroringShape.setValue(11002, 11001);\n        this._mirroringShape.setValue(12296, 12297);\n        this._mirroringShape.setValue(12297, 12296);\n        this._mirroringShape.setValue(12298, 12299);\n        this._mirroringShape.setValue(12299, 12298);\n        this._mirroringShape.setValue(12300, 12301);\n        this._mirroringShape.setValue(12301, 12300);\n        this._mirroringShape.setValue(12302, 12303);\n        this._mirroringShape.setValue(12303, 12302);\n        this._mirroringShape.setValue(12304, 12305);\n        this._mirroringShape.setValue(12305, 12304);\n        this._mirroringShape.setValue(12308, 12309);\n        this._mirroringShape.setValue(12309, 12308);\n        this._mirroringShape.setValue(12310, 12311);\n        this._mirroringShape.setValue(12311, 12310);\n        this._mirroringShape.setValue(12312, 12313);\n        this._mirroringShape.setValue(12313, 12312);\n        this._mirroringShape.setValue(12314, 12315);\n        this._mirroringShape.setValue(12315, 12314);\n        this._mirroringShape.setValue(65288, 65289);\n        this._mirroringShape.setValue(65289, 65288);\n        this._mirroringShape.setValue(65308, 65310);\n        this._mirroringShape.setValue(65310, 65308);\n        this._mirroringShape.setValue(65339, 65341);\n        this._mirroringShape.setValue(65341, 65339);\n        this._mirroringShape.setValue(65371, 65373);\n        this._mirroringShape.setValue(65373, 65371);\n        this._mirroringShape.setValue(65375, 65376);\n        this._mirroringShape.setValue(65376, 65375);\n        this._mirroringShape.setValue(65378, 65379);\n        this._mirroringShape.setValue(65379, 65378);\n    };\n    return _Bidirectional;\n}());\nexport { _Bidirectional };\nvar _RtlCharacters = /** @class */ (function () {\n    /**\n     * Creates an instance of the 'RtlCharacters' class.\n     *\n     * @private\n     */\n    function _RtlCharacters() {\n        this._type = [];\n        this._textOrder = -1;\n        this._rtlCharacterTypes = new Array(65536);\n        this.L = 0;\n        this.lre = 1;\n        this.lro = 2;\n        this.R = 3;\n        this.AL = 4;\n        this.rle = 5;\n        this.rlo = 6;\n        this.pdf = 7;\n        this.EN = 8;\n        this.ES = 9;\n        this.ET = 10;\n        this.AN = 11;\n        this.CS = 12;\n        this.nsm = 13;\n        this.BN = 14;\n        this.B = 15;\n        this.S = 16;\n        this.WS = 17;\n        this.ON = 18;\n        this._charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.nsm, this.nsm, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34, this.ON, 35,\n            37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS, 47, 47, this.CS, 48, 57, this.EN,\n            58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L, 123, 126, this.ON, 127, 132, this.BN, 133, 133,\n            this.B, 134, 159, this.BN, 160, 160, this.CS, 161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175,\n            this.ON, 176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON, 185, 185, this.EN, 186, 186,\n            this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON, 216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698,\n            this.ON, 699, 705, this.L, 706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON, 750, 750,\n            this.L, 751, 767, this.ON, 768, 855, this.nsm, 856, 860, this.L, 861, 879, this.nsm, 880, 883, this.L, 884, 885, this.ON, 886, 893,\n            this.L, 894, 894, this.ON, 895, 899, this.L, 900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014,\n            this.ON, 1015, 1154, this.L, 1155, 1158, this.nsm, 1159, 1159, this.L, 1160, 1161, this.nsm, 1162, 1417, this.L, 1418, 1418,\n            this.ON, 1419, 1424, this.L, 1425, 1441, this.nsm, 1442, 1442, this.L, 1443, 1465, this.nsm, 1466, 1466, this.L, 1467, 1469,\n            this.nsm, 1470, 1470, this.R, 1471, 1471, this.nsm, 1472, 1472, this.R, 1473, 1474, this.nsm, 1475, 1475, this.R, 1476, 1476,\n            this.nsm, 1477, 1487, this.L, 1488, 1514, this.R, 1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON, 1552, 1557, this.nsm, 1558, 1562, this.L, 1563,\n            1563, this.AL, 1564, 1566, this.L, 1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L, 1600, 1610,\n            this.AL, 1611, 1624, this.nsm, 1625, 1631, this.L, 1632, 1641, this.AN, 1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647,\n            this.AL, 1648, 1648, this.nsm, 1649, 1749, this.AL, 1750, 1756, this.nsm, 1757, 1757, this.AL, 1758, 1764, this.nsm, 1765, 1766,\n            this.AL, 1767, 1768, this.nsm, 1769, 1769, this.ON, 1770, 1773, this.nsm, 1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805,\n            this.AL, 1806, 1806, this.L, 1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.nsm, 1810, 1839, this.AL, 1840, 1866,\n            this.nsm, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L, 1920, 1957, this.AL, 1958, 1968, this.nsm, 1969, 1969,\n            this.AL, 1970, 2304, this.L, 2305, 2306, this.nsm, 2307, 2363, this.L, 2364, 2364, this.nsm, 2365, 2368, this.L, 2369, 2376,\n            this.nsm, 2377, 2380, this.L, 2381, 2381, this.nsm, 2382, 2384, this.L, 2385, 2388, this.nsm, 2389, 2401, this.L, 2402, 2403,\n            this.nsm, 2404, 2432, this.L, 2433, 2433, this.nsm, 2434, 2491, this.L, 2492, 2492, this.nsm, 2493, 2496, this.L, 2497, 2500,\n            this.nsm, 2501, 2508, this.L, 2509, 2509, this.nsm, 2510, 2529, this.L, 2530, 2531, this.nsm, 2532, 2545, this.L, 2546, 2547,\n            this.ET, 2548, 2560, this.L, 2561, 2562, this.nsm, 2563, 2619, this.L, 2620, 2620, this.nsm, 2621, 2624, this.L, 2625, 2626,\n            this.nsm, 2627, 2630, this.L, 2631, 2632, this.nsm, 2633, 2634, this.L, 2635, 2637, this.nsm, 2638, 2671, this.L, 2672, 2673,\n            this.nsm, 2674, 2688, this.L, 2689, 2690, this.nsm, 2691, 2747, this.L, 2748, 2748, this.nsm, 2749, 2752, this.L, 2753, 2757,\n            this.nsm, 2758, 2758, this.L, 2759, 2760, this.nsm, 2761, 2764, this.L, 2765, 2765, this.nsm, 2766, 2785, this.L, 2786, 2787,\n            this.nsm, 2788, 2800, this.L, 2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.nsm, 2818, 2875, this.L, 2876, 2876,\n            this.nsm, 2877, 2878, this.L, 2879, 2879, this.nsm, 2880, 2880, this.L, 2881, 2883, this.nsm, 2884, 2892, this.L, 2893, 2893,\n            this.nsm, 2894, 2901, this.L, 2902, 2902, this.nsm, 2903, 2945, this.L, 2946, 2946, this.nsm, 2947, 3007, this.L, 3008, 3008,\n            this.nsm, 3009, 3020, this.L, 3021, 3021, this.nsm, 3022, 3058, this.L, 3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066,\n            this.ON, 3067, 3133, this.L, 3134, 3136, this.nsm, 3137, 3141, this.L, 3142, 3144, this.nsm, 3145, 3145, this.L, 3146, 3149,\n            this.nsm, 3150, 3156, this.L, 3157, 3158, this.nsm, 3159, 3259, this.L, 3260, 3260, this.nsm, 3261, 3275, this.L, 3276, 3277,\n            this.nsm, 3278, 3392, this.L, 3393, 3395, this.nsm, 3396, 3404, this.L, 3405, 3405, this.nsm, 3406, 3529, this.L, 3530, 3530,\n            this.nsm, 3531, 3537, this.L, 3538, 3540, this.nsm, 3541, 3541, this.L, 3542, 3542, this.nsm, 3543, 3632, this.L, 3633, 3633,\n            this.nsm, 3634, 3635, this.L, 3636, 3642, this.nsm, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L, 3655, 3662,\n            this.nsm, 3663, 3760, this.L, 3761, 3761, this.nsm, 3762, 3763, this.L, 3764, 3769, this.nsm, 3770, 3770, this.L, 3771, 3772,\n            this.nsm, 3773, 3783, this.L, 3784, 3789, this.nsm, 3790, 3863, this.L, 3864, 3865, this.nsm, 3866, 3892, this.L, 3893, 3893,\n            this.nsm, 3894, 3894, this.L, 3895, 3895, this.nsm, 3896, 3896, this.L, 3897, 3897, this.nsm, 3898, 3901, this.ON, 3902, 3952,\n            this.L, 3953, 3966, this.nsm, 3967, 3967, this.L, 3968, 3972, this.nsm, 3973, 3973, this.L, 3974, 3975, this.nsm, 3976, 3983,\n            this.L, 3984, 3991, this.nsm, 3992, 3992, this.L, 3993, 4028, this.nsm, 4029, 4037, this.L, 4038, 4038, this.nsm, 4039, 4140,\n            this.L, 4141, 4144, this.nsm, 4145, 4145, this.L, 4146, 4146, this.nsm, 4147, 4149, this.L, 4150, 4151, this.nsm, 4152, 4152,\n            this.L, 4153, 4153, this.nsm, 4154, 4183, this.L, 4184, 4185, this.nsm, 4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786,\n            this.L, 5787, 5788, this.ON, 5789, 5905, this.L, 5906, 5908, this.nsm, 5909, 5937, this.L, 5938, 5940, this.nsm, 5941, 5969,\n            this.L, 5970, 5971, this.nsm, 5972, 6001, this.L, 6002, 6003, this.nsm, 6004, 6070, this.L, 6071, 6077, this.nsm, 6078, 6085,\n            this.L, 6086, 6086, this.nsm, 6087, 6088, this.L, 6089, 6099, this.nsm, 6100, 6106, this.L, 6107, 6107, this.ET, 6108, 6108,\n            this.L, 6109, 6109, this.nsm, 6110, 6127, this.L, 6128, 6137, this.ON, 6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157,\n            this.nsm, 6158, 6158, this.WS, 6159, 6312, this.L, 6313, 6313, this.nsm, 6314, 6431, this.L, 6432, 6434, this.nsm, 6435, 6438,\n            this.L, 6439, 6443, this.nsm, 6444, 6449, this.L, 6450, 6450, this.nsm, 6451, 6456, this.L, 6457, 6459, this.nsm, 6460, 6463,\n            this.L, 6464, 6464, this.ON, 6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON, 6656, 8124, this.L,\n            8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON, 8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157,\n            8159, this.ON, 8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON, 8191, 8191, this.L, 8192, 8202,\n            this.WS, 8203, 8205, this.BN, 8206, 8206, this.L, 8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.lre, 8235, 8235, this.rle, 8236, 8236, this.pdf, 8237, 8237, this.lro, 8238, 8238, this.rlo, 8239, 8239, this.WS,\n            8240, 8244, this.ET, 8245, 8276, this.ON, 8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS, 8288,\n            8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN, 8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315,\n            this.ET, 8316, 8318, this.ON, 8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON, 8335, 8351,\n            this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.nsm, 8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L,\n            8451, 8454, this.ON, 8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON, 8469, 8469, this.L, 8470,\n            8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON, 8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487,\n            this.ON, 8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET, 8495, 8497, this.L, 8498, 8498, this.ON,\n            8499, 8505, this.L, 8506, 8507, this.ON, 8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON, 8524,\n            8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON, 8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082,\n            this.L, 9083, 9108, this.ON, 9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON, 9255, 9279, this.L,\n            9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN, 9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752,\n            9752, this.L, 9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L, 9888, 9889, this.ON, 9890, 9984,\n            this.L, 9985, 9988, this.ON, 9989, 9989, this.L, 9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024,\n            this.L, 10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L, 10063, 10066, this.ON, 10067,\n            10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L, 10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON,\n            10133, 10135, this.L, 10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L, 10192, 10219,\n            this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L, 11904, 11929, this.ON, 11930, 11930, this.L, 11931,\n            12019, this.ON, 12020, 12031, this.L, 12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON, 12321, 12329, this.L, 12330, 12335,\n            this.nsm, 12336, 12336, this.ON, 12337, 12341, this.L, 12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352,\n            12440, this.L, 12441, 12442, this.nsm, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON, 12449, 12538, this.L,\n            12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON, 12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923,\n            this.L, 12924, 12925, this.ON, 12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON, 13008,\n            13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON, 13280, 13310, this.L, 13311, 13311, this.ON,\n            13312, 19903, this.L, 19904, 19967, this.ON, 19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285,\n            this.R, 64286, 64286, this.nsm, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R, 64311, 64311, this.L, 64312,\n            64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R, 64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323,\n            64324, this.R, 64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L, 64467, 64829, this.AL,\n            64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL, 64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007,\n            this.L, 65008, 65020, this.AL, 65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.nsm, 65040, 65055, this.L, 65056,\n            65059, this.nsm, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS, 65105, 65105, this.ON, 65106, 65106, this.CS,\n            65107, 65107, this.L, 65108, 65108, this.ON, 65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121,\n            this.ON, 65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON, 65129, 65130, this.ET, 65131,\n            65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL, 65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L,\n            65279, 65279, this.BN, 65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON, 65291, 65291,\n            this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS, 65295, 65295, this.ES, 65296, 65305, this.EN, 65306,\n            65306, this.CS, 65307, 65312, this.ON, 65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET, 65511, 65511, this.L, 65512, 65518,\n            this.ON, 65519, 65528, this.L, 65529, 65531, this.BN, 65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this._charTypes.length; ++i) {\n            var start = this._charTypes[Number.parseInt(i.toString(), 10)];\n            var end = this._charTypes[++i];\n            var b = this._charTypes[++i];\n            while (start <= end) {\n                this._rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    _RtlCharacters.prototype._getVisualOrder = function (inputText, isRtl) {\n        this._type = this._getCharacterCode(inputText);\n        this._textOrder = isRtl ? this.lre : this.L;\n        this._doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this._levels.length; i++) {\n            result[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n        }\n        return result;\n    };\n    _RtlCharacters.prototype._getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            var value = text[Number.parseInt(i.toString(), 10)].charCodeAt(0); // eslint-disable-line\n            characterCodes[Number.parseInt(i.toString(), 10)] = this._rtlCharacterTypes[Number.parseInt(value.toString(), 10)];\n        }\n        return characterCodes;\n    };\n    _RtlCharacters.prototype._setDefaultLevels = function () {\n        for (var i = 0; i < this._length; i++) {\n            this._levels[Number.parseInt(i.toString(), 10)] = this._textOrder;\n        }\n    };\n    _RtlCharacters.prototype._setLevels = function () {\n        this._setDefaultLevels();\n        for (var n = 0; n < this._length; ++n) {\n            var level = this._levels[Number.parseInt(n.toString(), 10)];\n            this._levels[Number.parseInt(n.toString(), 10)] = level;\n        }\n    };\n    _RtlCharacters.prototype._updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] === this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] !== this.L) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this._result[Number.parseInt(i.toString(), 10)] !== this.R) {\n                    this._levels[Number.parseInt(i.toString(), 10)] += 1;\n                }\n            }\n        }\n    };\n    _RtlCharacters.prototype._doVisualOrder = function () {\n        this._length = this._type.length;\n        this._result = this._type;\n        this._levels = [];\n        this._setLevels();\n        this._length = this._getEmbeddedCharactersLength();\n        var preview = this._textOrder;\n        var i = 0;\n        while (i < this._length) {\n            var level = this._levels[Number.parseInt(i.toString(), 10)];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this._length && this._levels[Number.parseInt(length_1.toString(), 10)] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this._length ? this._levels[Number.parseInt(length_1.toString(), 10)] : this._textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this._check(i, length_1, level, preType, type);\n            this._updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this._checkEmbeddedCharacters(this._length);\n    };\n    _RtlCharacters.prototype._getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this._length; ++i) {\n            if (!(this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN)) {\n                this._result[Number.parseInt(index.toString(), 10)] = this._result[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(index.toString(), 10)] = this._levels[Number.parseInt(i.toString(), 10)];\n                index++;\n            }\n        }\n        return index;\n    };\n    _RtlCharacters.prototype._checkEmbeddedCharacters = function (length) {\n        for (var i = this._type.length - 1; i >= 0; --i) {\n            if (this._type[Number.parseInt(i.toString(), 10)] === this.lre || this._type[Number.parseInt(i.toString(), 10)] === this.rle\n                || this._type[Number.parseInt(i.toString(), 10)] === this.lro ||\n                this._type[Number.parseInt(i.toString(), 10)] === this.rlo || this._type[Number.parseInt(i.toString(), 10)] === this.pdf\n                || this._type[Number.parseInt(i.toString(), 10)] === this.BN) {\n                this._result[Number.parseInt(i.toString(), 10)] = this._type[Number.parseInt(i.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = -1;\n            }\n            else {\n                length -= 1;\n                this._result[Number.parseInt(i.toString(), 10)] = this._result[Number.parseInt(length.toString(), 10)];\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[Number.parseInt(length.toString(), 10)];\n            }\n        }\n        for (var i = 0; i < this._type.length; i++) {\n            if (this._levels[Number.parseInt(i.toString(), 10)] === -1) {\n                this._levels[Number.parseInt(i.toString(), 10)] = this._levels[i - 1];\n            }\n        }\n    };\n    _RtlCharacters.prototype._check = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.nsm) {\n                this._result[Number.parseInt(i.toString(), 10)] = charType;\n            }\n            else {\n                charType = this._result[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                        if (this._result[Number.parseInt(j.toString(), 10)] === this.AL) {\n                            this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this._checkArabicCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.AL) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.R;\n            }\n        }\n        this._checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                var preview = this._result[i - 1];\n                var success = this._result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.EN;\n                }\n                else if (this._result[Number.parseInt(i.toString(), 10)] === this.CS && preview === this.AN && success === this.AN) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.AN;\n                }\n            }\n        }\n        this._checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this._getLength(s, length, b);\n                var data = s === index ? startType : this._result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this._result[Number.parseInt(l.toString(), 10)];\n                }\n                i = l;\n            }\n        }\n        this._checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.ES || this._result[Number.parseInt(i.toString(), 10)] === this.ET\n                || this._result[Number.parseInt(i.toString(), 10)] === this.CS) {\n                this._result[Number.parseInt(i.toString(), 10)] = this.ON;\n            }\n        }\n        this._checkOtherCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this._result[Number.parseInt(j.toString(), 10)] === this.L ||\n                        this._result[Number.parseInt(j.toString(), 10)] === this.R) {\n                        pst = this._result[Number.parseInt(j.toString(), 10)];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this._result[Number.parseInt(i.toString(), 10)] = this.L;\n                }\n            }\n        }\n        this._checkCharacters(index, length, level, startType, endType);\n    };\n    _RtlCharacters.prototype._getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this._result[Number.parseInt(index.toString(), 10)];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[Number.parseInt(i.toString(), 10)]) {\n                    index = this._getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    _RtlCharacters.prototype._checkCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this._result[Number.parseInt(i.toString(), 10)] === this.WS ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.ON ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.B ||\n                this._result[Number.parseInt(i.toString(), 10)] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this._getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this._result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this._result[Number.parseInt(l.toString(), 10)];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this._result[Number.parseInt(j.toString(), 10)] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return _RtlCharacters;\n}());\nexport { _RtlCharacters };\n","import { _UnicodeLine } from './../../fonts/pdf-standard-font';\nimport { _ArabicShapeRenderer } from './../../graphics/rightToLeft/text-shape';\nimport { _Bidirectional } from './../../graphics/rightToLeft/bidirectional';\nimport { PdfTextDirection } from './../../enumerator';\nimport { _stringToUnicodeArray, _bytesToString } from './../../utils';\nvar _RtlRenderer = /** @class */ (function () {\n    function _RtlRenderer() {\n        this._openBracket = '(';\n        this._closeBracket = ')';\n    }\n    _RtlRenderer.prototype._layout = function (line, font, rtl, wordSpace, format) {\n        var result = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (font._isUnicode) {\n                result = this._customLayout(line, rtl, format, font, wordSpace);\n            }\n            else {\n                result = [];\n                result[0] = line;\n            }\n        }\n        return result;\n    };\n    _RtlRenderer.prototype._splitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            var system = false;\n            if (!system) {\n                words = this._customSplitLayout(line, font, rtl, wordSpace, format);\n            }\n        }\n        return words;\n    };\n    _RtlRenderer.prototype._getGlyphIndex = function (line, font, glyphs) {\n        glyphs = [];\n        if (font !== null && typeof font !== 'undefined' && line !== null && typeof line !== 'undefined') {\n            if (line.length === 0) {\n                return { _result: false, _glyphIndex: glyphs };\n            }\n            var renderer = new _ArabicShapeRenderer();\n            var text = renderer._shape(line);\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            glyphs = [text.length];\n            var i = 0;\n            for (var k = 0, len = text.length; k < len; k++) {\n                var ch = text[Number.parseInt(k.toString(), 10)];\n                var glyphInfo = ttfReader._getGlyph(ch);\n                if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                    glyphs[i++] = (glyphInfo)._index;\n                }\n            }\n        }\n        var unicodeLine = new _UnicodeLine();\n        unicodeLine._result = true;\n        unicodeLine._glyphIndex = glyphs;\n        return unicodeLine;\n    };\n    _RtlRenderer.prototype._customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            var result = null;\n            if (line !== null && typeof line !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var bidi = new _Bidirectional();\n                    result = bidi._getLogicalToVisualString(line, rtl);\n                }\n            }\n            return result;\n        }\n        else {\n            var layouted = '';\n            var result = [];\n            if (line !== null && typeof line !== 'undefined' && font !== null && typeof font !== 'undefined') {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    var renderer = new _ArabicShapeRenderer();\n                    var txt = renderer._shape(line);\n                    layouted = this._customLayout(txt, rtl, format);\n                }\n                if (wordSpace) {\n                    var words = layouted.split('');\n                    var count = words.length;\n                    for (var i = 0; i < count; i++) {\n                        words[Number.parseInt(i.toString(), 10)] = this._addCharacter(font, words[Number.parseInt(i.toString(), 10)]);\n                    }\n                    result = words;\n                }\n                else {\n                    result = [];\n                    result[0] = this._addCharacter(font, layouted);\n                }\n            }\n            return result;\n        }\n    };\n    _RtlRenderer.prototype._addCharacter = function (font, glyphs) {\n        if (font !== null && typeof font !== 'undefined' && glyphs !== null && typeof glyphs !== 'undefined') {\n            var internalFont = font._fontInternal;\n            var ttfReader = internalFont._ttfReader;\n            font._setSymbols(glyphs);\n            glyphs = ttfReader._convertString(glyphs);\n            var bytes = _stringToUnicodeArray(glyphs);\n            glyphs = _bytesToString(bytes);\n        }\n        return glyphs;\n    };\n    _RtlRenderer.prototype._customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        var words = [];\n        if (line !== null && typeof line !== 'undefined') {\n            var reversedLine = this._customLayout(line, rtl, format);\n            words = reversedLine.split('');\n        }\n        return words;\n    };\n    return _RtlRenderer;\n}());\nexport { _RtlRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfStringFormat } from './pdf-string-format';\nimport { _PdfFontMetrics, _CjkWidthTable, _StandardWidthTable, _CjkSameWidth, _CjkDifferentWidth } from './pdf-font-metrics';\nimport { _PdfDictionary, _PdfName } from './../pdf-primitives';\nimport { _PdfStringLayouter } from './string-layouter';\nimport { _UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { _fromRectangle } from './../utils';\nimport { PdfTextDirection } from './../../core/enumerator';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\n/**\n * Represents the base class for font objects.`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this._size = size;\n        }\n        else {\n            this._size = size;\n            this._style = style;\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF font.\n         *\n         * @returns {number} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Gets the font size\n         * let size: number = font.size;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style of the PDF font.\n         *\n         * @returns {PdfFontStyle} size.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font style\n         * let style: PdfFontStyle = font.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style of the PDF font.\n         *\n         * @param {PdfFontStyle} value to font style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n         * // Sets the font style\n         * font.style = PdfFontStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isUnderline\", {\n        /**\n         * Gets the boolean flag indicating whether the font has underline style or not.\n         *\n         * @returns {boolean} isUnderline.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.underline);\n         * // Gets the boolean flag indicating whether the font has underline style or not.\n         * let underline: boolean = font.isUnderline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.underline) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isStrikeout\", {\n        /**\n         * Gets the boolean flag indicating whether the font has strike out style or not.\n         *\n         * @returns {boolean} isStrikeout.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the boolean flag indicating whether the font has strike out style or not.\n         * let strikeout: boolean = font.isStrikeout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this.style & PdfFontStyle.strikeout) > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"_metrics\", {\n        get: function () {\n            return this._fontMetrics;\n        },\n        set: function (value) {\n            this._fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isBold\", {\n        /**\n         * Gets the boolean flag indicating whether the font has bold style or not.\n         *\n         * @returns {boolean} isBold.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.bold);\n         * // Gets the boolean flag indicating whether the font has bold style or not.\n         * let bold: boolean = font.isBold;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"isItalic\", {\n        /**\n         * Gets the boolean flag indicating whether the font has italic style or not.\n         *\n         * @returns {boolean} isItalic.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the boolean flag indicating whether the font has italic style or not.\n         * let italic: boolean = font.isItalic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the font height.\n         *\n         * @returns {number} height.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.italic);\n         * // Gets the font height\n         * let height: number = font.height;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._metrics._getHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype._setInternals = function (internals) {\n        if (!internals) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this._pdfFontInternals = internals;\n    };\n    PdfFont.prototype._getCharacterCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            var numSymbols = 0;\n            var curIndex = 0;\n            curIndex = text.indexOf(symbols, curIndex);\n            while (curIndex !== -1) {\n                numSymbols++;\n                curIndex++;\n                curIndex = text.indexOf(symbols, curIndex);\n            }\n            return numSymbols;\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < text.length; i++) {\n                if (symbols.indexOf(text[Number.parseInt(i.toString(), 10)]) !== -1) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null) &&\n            typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 === null)\n            && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number'\n            && (arg3 instanceof PdfStringFormat || arg3 === null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = [arg2, 0];\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new _PdfStringLayouter();\n            var result = layouter._layout(text, this, temparg3, temparg2);\n            arg4 = text.length;\n            arg5 = (result._empty) ? 0 : result._lines.length;\n            return result._actualSize;\n        }\n    };\n    PdfFont.prototype._applyFormatSettings = function (line, format, width) {\n        var realWidth = width;\n        if (typeof format !== 'undefined' && format !== null && width > 0) {\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            if (format.wordSpacing !== 0) {\n                realWidth += this._getCharacterCount(line, [' ', '\\t']) * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    return PdfFont;\n}());\nexport { PdfFont };\n/**\n * Represents one of the 14 standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._checkStyle();\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF standard font.\n         *\n         * @returns {PdfFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF standard font\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.strikeout);\n         * // Gets the font family\n         * let fontFamily: PdfFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStandardFont.prototype._checkStyle = function () {\n        if (this._fontFamily === PdfFontFamily.symbol || this._fontFamily === PdfFontFamily.zapfDingbats) {\n            this._style &= ~(PdfFontStyle.bold | PdfFontStyle.italic);\n        }\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF standard font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type1'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        if (this._fontFamily !== PdfFontFamily.symbol && this._fontFamily !== PdfFontFamily.zapfDingbats) {\n            dictionary.set('Encoding', new _PdfName('WinAnsiEncoding'));\n        }\n        return dictionary;\n    };\n    PdfStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var code = charCode.charCodeAt(0);\n        if (this._metrics._name === 'Helvetica' ||\n            this._metrics._name === 'Courier' ||\n            this._metrics._name === 'TimesRoman' ||\n            this._metrics._name === 'Symbol' ||\n            this._metrics._name === 'ZapfDingbats') {\n            code = code - 32;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        return this._metrics._widthTable._itemAt(code);\n    };\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n/**\n * Represents one of the 7 CJK standard fonts.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCjkStandardFont = /** @class */ (function (_super) {\n    __extends(PdfCjkStandardFont, _super);\n    function PdfCjkStandardFont(fontFamily, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._fontFamily = fontFamily;\n        _this._size = size;\n        _this._initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfCjkStandardFont.prototype, \"fontFamily\", {\n        /**\n         * Gets the font family of the PDF CJK font.\n         *\n         * @returns {PdfCjkFontFamily} fontFamily.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF CJK standard font\n         * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n         * // Gets the font family\n         * let fontFamily: PdfCjkFontFamily = font.fontFamily;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCjkStandardFont.prototype._initializeInternals = function () {\n        this._metrics = _PdfCjkStandardFontMetricsFactory._getMetrics(this._fontFamily, this._style, this._size);\n        this._dictionary = this._createInternals();\n    };\n    PdfCjkStandardFont.prototype._createInternals = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('Type0'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('Encoding', this._getEncoding(this._fontFamily));\n        dictionary.set('DescendantFonts', this._getDescendantFont());\n        return dictionary;\n    };\n    PdfCjkStandardFont.prototype._getEncoding = function (fontFamily) {\n        var encoding = 'Unknown';\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                encoding = 'UniKS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                encoding = 'UniJIS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                encoding = 'UniCNS-UCS2-H';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                encoding = 'UniGB-UCS2-H';\n                break;\n        }\n        return new _PdfName(encoding);\n    };\n    PdfCjkStandardFont.prototype._getDescendantFont = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary._updated = true;\n        dictionary.set('Type', _PdfName.get('Font'));\n        dictionary.set('Subtype', _PdfName.get('CIDFontType2'));\n        dictionary.set('BaseFont', new _PdfName(this._metrics._postScriptName));\n        dictionary.set('DW', this._metrics._widthTable._defaultWidth);\n        dictionary.set('W', this._metrics._widthTable._toArray());\n        dictionary.set('FontDescriptor', _PdfCjkFontDescriptorFactory._getFontDescriptor(this._fontFamily, this._style, this._metrics));\n        dictionary.set('CIDSystemInfo', this._getSystemInformation());\n        return [dictionary];\n    };\n    PdfCjkStandardFont.prototype._getSystemInformation = function () {\n        var systemInformation = new _PdfDictionary();\n        systemInformation._updated = true;\n        systemInformation.set('Registry', 'Adobe');\n        switch (this._fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                systemInformation.set('Ordering', 'Korea1');\n                systemInformation.set('Supplement', 1);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                systemInformation.set('Ordering', 'Japan1');\n                systemInformation.set('Supplement', 2);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.monotypeSungLight:\n                systemInformation.set('Ordering', 'CNS1');\n                systemInformation.set('Supplement', '0');\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                systemInformation.set('Ordering', 'GB1');\n                systemInformation.set('Supplement', 2);\n                break;\n        }\n        return systemInformation;\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF CJK standard font\n     * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20, PdfFontStyle.bold);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCjkStandardFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        for (var i = 0; i < line.length; i++) {\n            width += this._getCharacterWidthInternal(line.charCodeAt(i));\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfCjkStandardFont.prototype._getCharacterWidthInternal = function (charCode) {\n        charCode = (charCode >= 0) ? charCode : 0;\n        return this._metrics._widthTable._itemAt(charCode);\n    };\n    return PdfCjkStandardFont;\n}(PdfFont));\nexport { PdfCjkStandardFont };\n/**\n * Represents TrueType font.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF truetype font\n * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? PdfFontStyle.regular : style) || this;\n        _this._isEmbedFont = false;\n        _this._isUnicode = true;\n        if (style !== undefined) {\n            _this._createFontInternal(base64String, style);\n        }\n        else {\n            _this._createFontInternal(base64String, PdfFontStyle.regular);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isUnicode\", {\n        /**\n         * Gets the boolean flag indicating whether the font has unicode or not.\n         *\n         * @returns {boolean} unicode.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font has or not.\n         * let isUnicode: boolean = font.isUnicode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"isEmbed\", {\n        /**\n         * Gets the boolean flag indicating whether the font is embedded or not.\n         *\n         * @returns {boolean} isEmbed.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new PDF truetype font\n         * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10);\n         * // Gets the boolean flag indicating whether the font is embedded or not.\n         * let isEmbed: boolean = font.isEmbed;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEmbedFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTrueTypeFont.prototype._createFontInternal = function (base64String, style) {\n        this._fontInternal = new _UnicodeTrueTypeFont(base64String, this._size);\n        this.style = style;\n        this._initializeInternals();\n    };\n    PdfTrueTypeFont.prototype._initializeInternals = function () {\n        var internals = null;\n        if (this._fontInternal instanceof _UnicodeTrueTypeFont) {\n            this._fontInternal._isEmbed = this._isEmbedFont;\n        }\n        this._fontInternal._createInternals();\n        internals = this._fontInternal._getInternals();\n        this._metrics = this._fontInternal._metrics;\n        this._metrics._isUnicodeFont = true;\n        this._setInternals(internals);\n    };\n    /**\n     * Gets the line width.\n     *\n     * @param {string} line Line.\n     * @param {PdfStringFormat} format String format.\n     * @returns {number} width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Create a new PDF truetype font\n     * let font: PdfTrueTypeFont = new PdfTrueTypeFont(base64String, 10, PdfFontStyle.regular);\n     * // Create a new PDF string format\n     * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n     * // Get the text width\n     * let width: number = font.getLineWidth('Syncfusion', format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n            width = this._getUnicodeLineWidth(line, width);\n        }\n        else {\n            for (var i = 0, len = line.length; i < len; i++) {\n                width += this._getCharacterWidthInternal(line[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        width *= (0.001 * this._metrics._size);\n        width = this._applyFormatSettings(line, format, width);\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getUnicodeLineWidth = function (line, width) {\n        width = 0;\n        var glyphIndex = [];\n        var result = false;\n        var rtlRender = new _RtlRenderer();\n        var value = rtlRender._getGlyphIndex(line, this, glyphIndex);\n        result = value._result;\n        glyphIndex = value._glyphIndex;\n        if (result && glyphIndex !== null) {\n            var ttfReader = this._fontInternal._ttfReader;\n            for (var i = 0, len = glyphIndex.length; i < len; i++) {\n                var index = glyphIndex[Number.parseInt(i.toString(), 10)];\n                var glyph = ttfReader._getGlyph(index);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph._width;\n                }\n            }\n        }\n        return width;\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidth = function (charCode, format) {\n        var codeWidth = this._fontInternal._getCharacterWidth(charCode);\n        var size = this._metrics._getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    PdfTrueTypeFont.prototype._setSymbols = function (text) {\n        var internalFont = this._fontInternal;\n        if (internalFont !== null && typeof internalFont !== 'undefined') {\n            internalFont._setSymbols(text);\n        }\n    };\n    PdfTrueTypeFont.prototype._getCharacterWidthInternal = function (charCode) {\n        var code = charCode.charCodeAt(0);\n        code = (code >= 0 && code !== 128) ? code : 0;\n        return this._metrics._widthTable._itemAt(code);\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\nvar _PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfStandardFontMetricsFactory() {\n    }\n    _PdfStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.helvetica:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                metrics._name = 'Helvetica';\n                break;\n            case PdfFontFamily.courier:\n                metrics = this._getCourierMetrics(fontStyle, size);\n                metrics._name = 'Courier';\n                break;\n            case PdfFontFamily.timesRoman:\n                metrics = this._getTimesMetrics(fontStyle, size);\n                metrics._name = 'TimesRoman';\n                break;\n            case PdfFontFamily.symbol:\n                metrics = this._getSymbolMetrics(size);\n                metrics._name = 'Symbol';\n                break;\n            case PdfFontFamily.zapfDingbats:\n                metrics = this._getZapfDingbatsMetrics(size);\n                metrics._name = 'ZapfDingbats';\n                break;\n            default:\n                metrics = this._getHelveticaMetrics(fontStyle, size);\n                metrics._name = 'Helvetica';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getHelveticaMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaBoldItalicAscent;\n            metrics._descent = this._helveticaBoldItalicDescent;\n            metrics._postScriptName = this._helveticaBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._helveticaBoldAscent;\n            metrics._descent = this._helveticaBoldDescent;\n            metrics._postScriptName = this._helveticaBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._helveticaItalicAscent;\n            metrics._descent = this._helveticaItalicDescent;\n            metrics._postScriptName = this._helveticaItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._helveticaAscent;\n            metrics._descent = this._helveticaDescent;\n            metrics._postScriptName = this._helveticaName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._arialWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getCourierMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierBoldItalicAscent;\n            metrics._descent = this._courierBoldItalicDescent;\n            metrics._postScriptName = this._courierBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._courierBoldAscent;\n            metrics._descent = this._courierBoldDescent;\n            metrics._postScriptName = this._courierBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._courierItalicAscent;\n            metrics._descent = this._courierItalicDescent;\n            metrics._postScriptName = this._courierItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._courierAscent;\n            metrics._descent = this._courierDescent;\n            metrics._postScriptName = this._courierName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._fixedWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getTimesMetrics = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.bold) > 0 && (fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesBoldItalicAscent;\n            metrics._descent = this._timesBoldItalicDescent;\n            metrics._postScriptName = this._timesBoldItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldItalicWidths);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.bold) > 0) {\n            metrics._ascent = this._timesBoldAscent;\n            metrics._descent = this._timesBoldDescent;\n            metrics._postScriptName = this._timesBoldName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanBoldWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else if ((fontStyle & PdfFontStyle.italic) > 0) {\n            metrics._ascent = this._timesItalicAscent;\n            metrics._descent = this._timesItalicDescent;\n            metrics._postScriptName = this._timesItalicName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanItalicWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        else {\n            metrics._ascent = this._timesAscent;\n            metrics._descent = this._timesDescent;\n            metrics._postScriptName = this._timesName;\n            metrics._size = size;\n            metrics._widthTable = new _StandardWidthTable(this._timesRomanWidth);\n            metrics._height = metrics._ascent - metrics._descent;\n        }\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getSymbolMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._symbolAscent;\n        metrics._descent = this._symbolDescent;\n        metrics._postScriptName = this._symbolName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._symbolWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._getZapfDingbatsMetrics = function (size) {\n        var metrics = new _PdfFontMetrics();\n        metrics._ascent = this._zapfDingbatsAscent;\n        metrics._descent = this._zapfDingbatsDescent;\n        metrics._postScriptName = this._zapfDingbatsName;\n        metrics._size = size;\n        metrics._widthTable = new _StandardWidthTable(this._zapfDingbatsWidth);\n        metrics._height = metrics._ascent - metrics._descent;\n        return metrics;\n    };\n    _PdfStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    _PdfStandardFontMetricsFactory._helveticaAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaName = 'Helvetica';\n    _PdfStandardFontMetricsFactory._helveticaBoldAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldName = 'Helvetica-Bold';\n    _PdfStandardFontMetricsFactory._helveticaItalicAscent = 931;\n    _PdfStandardFontMetricsFactory._helveticaItalicDescent = -225;\n    _PdfStandardFontMetricsFactory._helveticaItalicName = 'Helvetica-Oblique';\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicAscent = 962;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicDescent = -228;\n    _PdfStandardFontMetricsFactory._helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    _PdfStandardFontMetricsFactory._courierAscent = 805;\n    _PdfStandardFontMetricsFactory._courierDescent = -250;\n    _PdfStandardFontMetricsFactory._courierName = 'Courier';\n    _PdfStandardFontMetricsFactory._courierBoldAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldName = 'Courier-Bold';\n    _PdfStandardFontMetricsFactory._courierItalicAscent = 805;\n    _PdfStandardFontMetricsFactory._courierItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierItalicName = 'Courier-Oblique';\n    _PdfStandardFontMetricsFactory._courierBoldItalicAscent = 801;\n    _PdfStandardFontMetricsFactory._courierBoldItalicDescent = -250;\n    _PdfStandardFontMetricsFactory._courierBoldItalicName = 'Courier-BoldOblique';\n    _PdfStandardFontMetricsFactory._timesAscent = 898;\n    _PdfStandardFontMetricsFactory._timesDescent = -218;\n    _PdfStandardFontMetricsFactory._timesName = 'Times-Roman';\n    _PdfStandardFontMetricsFactory._timesBoldAscent = 935;\n    _PdfStandardFontMetricsFactory._timesBoldDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldName = 'Times-Bold';\n    _PdfStandardFontMetricsFactory._timesItalicAscent = 883;\n    _PdfStandardFontMetricsFactory._timesItalicDescent = -217;\n    _PdfStandardFontMetricsFactory._timesItalicName = 'Times-Italic';\n    _PdfStandardFontMetricsFactory._timesBoldItalicAscent = 921;\n    _PdfStandardFontMetricsFactory._timesBoldItalicDescent = -218;\n    _PdfStandardFontMetricsFactory._timesBoldItalicName = 'Times-BoldItalic';\n    _PdfStandardFontMetricsFactory._symbolAscent = 1010;\n    _PdfStandardFontMetricsFactory._symbolDescent = -293;\n    _PdfStandardFontMetricsFactory._symbolName = 'Symbol';\n    _PdfStandardFontMetricsFactory._zapfDingbatsAscent = 820;\n    _PdfStandardFontMetricsFactory._zapfDingbatsDescent = -143;\n    _PdfStandardFontMetricsFactory._zapfDingbatsName = 'ZapfDingbats';\n    _PdfStandardFontMetricsFactory._arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    _PdfStandardFontMetricsFactory._fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    _PdfStandardFontMetricsFactory._symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    _PdfStandardFontMetricsFactory._zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return _PdfStandardFontMetricsFactory;\n}());\nexport { _PdfStandardFontMetricsFactory };\nvar _PdfCjkStandardFontMetricsFactory = /** @class */ (function () {\n    function _PdfCjkStandardFontMetricsFactory() {\n    }\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsGothicMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 127, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYGoThic-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYGoThic-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHanyangSystemsShinMyeongJoMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(8094, 8190, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HYSMyeongJo-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HYSMyeongJo-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiKakuGothicW5 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -125;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiKakuGo-W5,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiKakuGo-W5';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getHeiseiMinchoW3 = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(231, 632, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 857;\n        metrics._descent = -143;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'HeiseiMin-W3,Italic';\n        }\n        else {\n            metrics._postScriptName = 'HeiseiMin-W3';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeHeiMedium = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MHei-Medium,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MHei-Medium';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMonotypeSungLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(13648, 13742, 500));\n        metrics._widthTable = widthTable;\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'MSung-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'MSung-Light';\n        }\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getSinoTypeSongLight = function (fontStyle, size) {\n        var metrics = new _PdfFontMetrics();\n        var widthTable = new _CjkWidthTable(1000);\n        widthTable._add(new _CjkSameWidth(1, 95, 500));\n        widthTable._add(new _CjkSameWidth(814, 939, 500));\n        widthTable._add(new _CjkDifferentWidth(7712, [500]));\n        widthTable._add(new _CjkDifferentWidth(7716, [500]));\n        metrics._ascent = 880;\n        metrics._descent = -120;\n        metrics._size = size;\n        metrics._height = metrics._ascent - metrics._descent;\n        if ((fontStyle & PdfFontStyle.bold) !== 0 && (fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,BoldItalic';\n        }\n        else if ((fontStyle & PdfFontStyle.bold) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Bold';\n        }\n        else if ((fontStyle & PdfFontStyle.italic) !== 0) {\n            metrics._postScriptName = 'STSong-Light,Italic';\n        }\n        else {\n            metrics._postScriptName = 'STSong-Light';\n        }\n        metrics._widthTable = widthTable;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                metrics = this._getHanyangSystemsGothicMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsGothicMedium';\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                metrics = this._getHanyangSystemsShinMyeongJoMedium(fontStyle, size);\n                metrics._name = 'HanyangSystemsShinMyeongJoMedium';\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                metrics = this._getHeiseiKakuGothicW5(fontStyle, size);\n                metrics._name = 'HeiseiKakuGothicW5';\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                metrics = this._getHeiseiMinchoW3(fontStyle, size);\n                metrics._name = 'HeiseiMinchoW3';\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                metrics = this._getMonotypeHeiMedium(fontStyle, size);\n                metrics._name = 'MonotypeHeiMedium';\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                metrics = this._getMonotypeSungLight(fontStyle, size);\n                metrics._name = 'MonotypeSungLight';\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                metrics = this._getSinoTypeSongLight(fontStyle, size);\n                metrics._name = 'SinoTypeSongLight';\n                break;\n        }\n        metrics._subScriptSizeFactor = this._subSuperScriptFactor;\n        metrics._superscriptSizeFactor = this._subSuperScriptFactor;\n        return metrics;\n    };\n    _PdfCjkStandardFontMetricsFactory._subSuperScriptFactor = 1.52;\n    return _PdfCjkStandardFontMetricsFactory;\n}());\nexport { _PdfCjkStandardFontMetricsFactory };\nvar _PdfCjkFontDescriptorFactory = /** @class */ (function () {\n    function _PdfCjkFontDescriptorFactory() {\n    }\n    _PdfCjkFontDescriptorFactory._fillMonotypeSungLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -160, y: -249, width: 1175, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiKakuGothicW5 = function (fontDescriptor, fontStyle, fontFamily, fontMetrics) {\n        var fontBox = { x: -92, y: -250, width: 1102, height: 1172 };\n        var fontBoxItalic = { x: -92, y: -250, width: 1102, height: 1932 };\n        if ((fontStyle & (PdfFontStyle.italic | PdfFontStyle.bold)) !== PdfFontStyle.italic) {\n            this._fillFontBox(fontDescriptor, fontBox);\n        }\n        else {\n            this._fillFontBox(fontDescriptor, fontBoxItalic);\n        }\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 689);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsShinMyeongJoMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: 0, y: -148, width: 1001, height: 1028 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHeiseiMinchoW3 = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -123, y: -257, width: 1124, height: 1167 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 702);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 718);\n        fontDescriptor.set('XHeight', 500);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillSinoTypeSongLight = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -25, y: -254, width: 1025, height: 1134 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillMonotypeHeiMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -45, y: -250, width: 1060, height: 1137 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillHanyangSystemsGothicMedium = function (fontDescriptor, fontFamily, fontMetrics) {\n        var fontBox = { x: -6, y: -145, width: 1009, height: 1025 };\n        this._fillFontBox(fontDescriptor, fontBox);\n        this._fillKnownInformation(fontDescriptor, fontFamily, fontMetrics);\n        fontDescriptor.set('Flags', 4);\n        fontDescriptor.set('StemV', 93);\n        fontDescriptor.set('StemH', 93);\n        fontDescriptor.set('AvgWidth', 1000);\n        fontDescriptor.set('MaxWidth', 1000);\n        fontDescriptor.set('CapHeight', 880);\n        fontDescriptor.set('XHeight', 616);\n        fontDescriptor.set('Leading', 250);\n    };\n    _PdfCjkFontDescriptorFactory._fillFontBox = function (fontDescriptor, fontBox) {\n        fontDescriptor.set('FontBBox', _fromRectangle(fontBox));\n    };\n    _PdfCjkFontDescriptorFactory._fillKnownInformation = function (fontDescriptor, fontFamily, fontMetrics) {\n        fontDescriptor.set('FontName', _PdfName.get(fontMetrics._postScriptName));\n        fontDescriptor.set('Type', _PdfName.get('FontDescriptor'));\n        fontDescriptor.set('ItalicAngle', 0);\n        fontDescriptor.set('MissingWidth', fontMetrics._widthTable._defaultWidth);\n        fontDescriptor.set('Ascent', fontMetrics._ascent);\n        fontDescriptor.set('Descent', fontMetrics._descent);\n        switch (fontFamily) {\n            case PdfCjkFontFamily.monotypeHeiMedium:\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                fontDescriptor.set('Flags', 4);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n            case PdfCjkFontFamily.monotypeSungLight:\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                fontDescriptor.set('Flags', 6);\n                break;\n        }\n    };\n    _PdfCjkFontDescriptorFactory._getFontDescriptor = function (fontFamily, fontStyle, fontMetrics) {\n        var fontDescriptor = new _PdfDictionary();\n        fontDescriptor._updated = true;\n        switch (fontFamily) {\n            case PdfCjkFontFamily.hanyangSystemsGothicMedium:\n                this._fillHanyangSystemsGothicMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.hanyangSystemsShinMyeongJoMedium:\n                this._fillHanyangSystemsShinMyeongJoMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiKakuGothicW5:\n                this._fillHeiseiKakuGothicW5(fontDescriptor, fontStyle, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.heiseiMinchoW3:\n                this._fillHeiseiMinchoW3(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeHeiMedium:\n                this._fillMonotypeHeiMedium(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.monotypeSungLight:\n                this._fillMonotypeSungLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            case PdfCjkFontFamily.sinoTypeSongLight:\n                this._fillSinoTypeSongLight(fontDescriptor, fontFamily, fontMetrics);\n                break;\n            default:\n                break;\n        }\n        return fontDescriptor;\n    };\n    return _PdfCjkFontDescriptorFactory;\n}());\nexport { _PdfCjkFontDescriptorFactory };\n/**\n * Public enum to define font style.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the font style `regular`.\n     */\n    PdfFontStyle[PdfFontStyle[\"regular\"] = 0] = \"regular\";\n    /**\n     * Specifies the font style `bold`.\n     */\n    PdfFontStyle[PdfFontStyle[\"bold\"] = 1] = \"bold\";\n    /**\n     * Specifies the font style `italic`.\n     */\n    PdfFontStyle[PdfFontStyle[\"italic\"] = 2] = \"italic\";\n    /**\n     * Specifies the font style `underline`.\n     */\n    PdfFontStyle[PdfFontStyle[\"underline\"] = 4] = \"underline\";\n    /**\n     * Specifies the font style `strikeout`.\n     */\n    PdfFontStyle[PdfFontStyle[\"strikeout\"] = 8] = \"strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Public enum to define font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF standard font\n * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 10, PdfFontStyle.regular);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('Helvetica', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `helvetica` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"helvetica\"] = 0] = \"helvetica\";\n    /**\n     * Specifies the `courier` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"courier\"] = 1] = \"courier\";\n    /**\n     * Specifies the `timesRoman` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"timesRoman\"] = 2] = \"timesRoman\";\n    /**\n     * Specifies the `symbol` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"symbol\"] = 3] = \"symbol\";\n    /**\n     * Specifies the `zapfDingbats` font family.\n     */\n    PdfFontFamily[PdfFontFamily[\"zapfDingbats\"] = 4] = \"zapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * Public enum to define CJK font family.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Gets the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF CJK standard font\n * let font: PdfCjkStandardFont = new PdfCjkStandardFont(PdfCjkFontFamily.heiseiMinchoW3, 20);\n * // Create a new PDF string format\n * let format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n * // Draw the text\n * page.graphics.drawString('こんにちは世界', font, [0, 180, page.size[0], 40], undefined, new PdfBrush([0, 0, 255]), format);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfCjkFontFamily;\n(function (PdfCjkFontFamily) {\n    /**\n     * Specifies the `heiseiKakuGothicW5` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiKakuGothicW5\"] = 0] = \"heiseiKakuGothicW5\";\n    /**\n     * Specifies the `heiseiMinchoW3` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"heiseiMinchoW3\"] = 1] = \"heiseiMinchoW3\";\n    /**\n     * Specifies the `hanyangSystemsGothicMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsGothicMedium\"] = 2] = \"hanyangSystemsGothicMedium\";\n    /**\n     * Specifies the `hanyangSystemsShinMyeongJoMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"hanyangSystemsShinMyeongJoMedium\"] = 3] = \"hanyangSystemsShinMyeongJoMedium\";\n    /**\n     * Specifies the `monotypeHeiMedium` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeHeiMedium\"] = 4] = \"monotypeHeiMedium\";\n    /**\n     * Specifies the `monotypeSungLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"monotypeSungLight\"] = 5] = \"monotypeSungLight\";\n    /**\n     * Specifies the `sinoTypeSongLight` CJK font family.\n     */\n    PdfCjkFontFamily[PdfCjkFontFamily[\"sinoTypeSongLight\"] = 6] = \"sinoTypeSongLight\";\n})(PdfCjkFontFamily || (PdfCjkFontFamily = {}));\nvar _UnicodeLine = /** @class */ (function () {\n    function _UnicodeLine() {\n        this._result = false;\n        this._glyphIndex = [];\n    }\n    return _UnicodeLine;\n}());\nexport { _UnicodeLine };\n","import { _getBezierArc } from './../utils';\nimport { PdfFillMode, PathPointType } from './../enumerator';\n/**\n * Implements graphics path, which is a sequence of primitive graphics elements.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics object of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Create a new PDF path\n * let path: PdfPath = new PdfPath();\n * // Add a line to the Graphics path\n * path.addLine(10, 250, 200, 250);\n * // Draw the path on the PDF page\n * graphics.drawPath(path, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPath = /** @class */ (function () {\n    function PdfPath(points, pathTypes) {\n        this._points = [];\n        this._pathTypes = [];\n        this._isRoundedRectangle = false;\n        this._fillMode = PdfFillMode.winding;\n        this._isStart = true;\n        this._isXps = false;\n        this._brush = undefined;\n        this._pen = undefined;\n        if (points && pathTypes) {\n            if (Array.isArray(points) && Array.isArray(pathTypes)) {\n                this._points = points;\n                this._pathTypes = pathTypes;\n            }\n            else {\n                throw new Error('Invalid constructor arguments.');\n            }\n        }\n        else {\n            this._points = [];\n            this._pathTypes = [];\n        }\n    }\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last point of the path.\n         *\n         * @returns {number[]} The value of the last point.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the last point of the path.\n         * let lastPoint: number[] = path.lastPoint;\n         * // Draw the path on the PDF page.\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = [0, 0];\n            var count = this._points.length;\n            if (this._points.length > 0) {\n                value[0] = this._points[count - 1][0];\n                value[1] = this._points[count - 1][1];\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the array of points that represent the x and y coordinates defining the path.\n         *\n         * @returns {Array<number[]>} An array of arrays of numbers, where each inner array represents a set of points.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the path points of the path\n         * let pathPoints: Array<number[]> = path.pathPoints;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the types of the corresponding points in the path.\n         *\n         * @returns {PathPointType[]} An array of `PathPointType` objects representing the types of each path point.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the path types of the path\n         * let pathTypes: PathPointType[] = path.pathTypes;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        /**\n         * Gets the fill mode.\n         *\n         * @returns {PdfFillMode} The fill mode of the PDF path.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Get the fill mode of the path\n         * let fillMode: PdfFillMode = path.fillMode;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fillMode;\n        },\n        /**\n         * Sets the fill mode.\n         *\n         * @param {PdfFillMode} mode The fill mode of the path.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics object of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create a new pen\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * // Create a new brush\n         * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n         * // Create a new PDF path\n         * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n         * // Set the fill mode of the path\n         * path.fillMode = PdfFillMode.alternate;\n         * // Draw the path on the PDF page\n         * page.graphics.drawPath(path, pen, brush);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (mode) {\n            this._fillMode = mode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this._addPath(arg1._points, arg1._pathTypes);\n        }\n        else if (Array.isArray(arg1) && Array.isArray(arg2)) {\n            this._addPath(arg1, arg2);\n        }\n    };\n    PdfPath.prototype._addPath = function (pathPoints, pathTypes) {\n        if (!pathPoints || pathPoints.length === 0) {\n            throw new Error('Path points cannot be null or undefined.');\n        }\n        if (!pathTypes || pathTypes.length === 0) {\n            throw new Error('Path types cannot be null or undefined.');\n        }\n        if (pathPoints.length !== pathTypes.length) {\n            throw new Error('The argument arrays should be of equal length.');\n        }\n        for (var i = 0; i < pathPoints.length; i++) {\n            if (i >= pathPoints.length || i < 0) {\n                throw new Error('Index' + i + 'is out of bounds.');\n            }\n            this._points.push(pathPoints[Number.parseInt(i.toString(), 10)].slice());\n            this._pathTypes.push(pathTypes[Number.parseInt(i.toString(), 10)]);\n        }\n    };\n    /**\n     * Adds a line segment to the path.\n     *\n     * @param {number} x1 The x-coordinate of the starting point of the line.\n     * @param {number} y1 The y-coordinate of the starting point of the line.\n     * @param {number} x2 The x-coordinate of the ending point of the line.\n     * @param {number} y2 The y-coordinate of the ending point of the line.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a line segment to the path\n     * path.addLine(10, 250, 200, 250);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addLine = function (x1, y1, x2, y2) {\n        this._addPoints([x1, y1, x2, y2], PathPointType.line);\n    };\n    PdfPath.prototype._addLines = function (linePoints) {\n        var start = linePoints[0];\n        if (linePoints.length === 1) {\n            this._addPoint(linePoints[0], PathPointType.line);\n        }\n        else {\n            for (var i = 1; i < linePoints.length; i++) {\n                var last = linePoints[Number.parseInt(i.toString(), 10)];\n                this.addLine(start[0], start[1], last[0], last[1]);\n                start = last;\n            }\n        }\n    };\n    PdfPath.prototype._addPoints = function (points, type, start, end) {\n        var startIndex = (typeof start !== 'undefined') ? start : 0;\n        var endIndex = (typeof end !== 'undefined') ? end : points.length;\n        for (var i = startIndex; i < endIndex; i += 2) {\n            var point = [points[Number.parseInt(i.toString(), 10)], points[i + 1]];\n            if (i === startIndex) {\n                if (this._points.length === 0 || this._isStart) {\n                    this._addPoint(point, PathPointType.start);\n                    this._isStart = false;\n                }\n                else if (this._isRoundedRectangle && (point[0] !== this.lastPoint[0] || point[1] !== this.lastPoint[1])) {\n                    this._addPoint(point, PathPointType.line);\n                }\n                else if (point[0] !== this.lastPoint[0] && point[1] !== this.lastPoint[1]) {\n                    this._addPoint(point, PathPointType.line);\n                }\n            }\n            else {\n                this._addPoint(point, type);\n            }\n        }\n    };\n    PdfPath.prototype._addPoint = function (point, type) {\n        this._points.push(point);\n        this._pathTypes.push(type);\n    };\n    /**\n     * Adds an arc within a bounding rectangle using the angles that define the start and sweep of the arc.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangular region.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangular region.\n     * @param {number} width The width of the rectangular region.\n     * @param {number} height The height of the rectangular region.\n     * @param {number} startAngle The start angle of the arc.\n     * @param {number} sweepAngle The angle between start angle and the end of the arc.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('Empty.pdf'));\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a Bezier curve to the path\n     * path.addBezier(10, 100, 50, 150, 150, 150, 200, 100);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addArc = function (x, y, width, height, startAngle, sweepAngle) {\n        var points = _getBezierArc(x, y, x + width, y + height, startAngle, sweepAngle);\n        for (var i = 0; i < points.length; ++i) {\n            var list = [points[Number.parseInt(i.toString(), 10)],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i],\n                points[++i]];\n            this._addPoints(list, PathPointType.bezier);\n        }\n    };\n    /**\n     * Adds a rectangle to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangle.\n     * @param {number} width The width of the rectangle.\n     * @param {number} height The height of the rectangle.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a rectangle to the path\n     * path.addRectangle(10, 20, 50, 100);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addRectangle = function (x, y, width, height) {\n        this.startFigure();\n        this._addPoints([x, y, x + width, y, x + width, y + height, x, y + height], PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Adds a polygon to the path.\n     *\n     * @param {Array<number[]>} points The points of the polygon, where each point is an array of two numbers representing the x and y coordinates.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a polygon to the path\n     * path.addPolygon([[200, 10], [300, 100], [150, 100], [200, 10]]);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var newPoints = [];\n        points.forEach(function (element) {\n            newPoints.push(element[0], element[1]);\n        });\n        this.startFigure();\n        this._addPoints(newPoints, PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Adds an ellipse to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rectangular region that bounds the ellipse.\n     * @param {number} y The y-coordinate of the upper-left corner of the rectangular region that bounds the ellipse.\n     * @param {number} width The width of the bounding rectangle for the ellipse.\n     * @param {number} height The height of the bounding rectangle for the ellipse.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add an ellipse to the path\n     * path.addEllipse(200, 200, 100, 50);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addEllipse = function (x, y, width, height) {\n        this.startFigure();\n        this.addArc(x, y, width, height, 0, 360);\n        this.closeFigure();\n    };\n    /**\n     * Adds a Bezier curve to the path using specified coordinates for the start point, two control points, and the end point.\n     *\n     * @param {number} startX The x-coordinate of the starting point of the Bezier curve.\n     * @param {number} startY The y-coordinate of the starting point of the Bezier curve.\n     * @param {number} firstX The x-coordinate of the first control point of the Bezier curve.\n     * @param {number} firstY The y-coordinate of the first control point of the Bezier curve.\n     * @param {number} secondX The x-coordinate of the second control point of the Bezier curve.\n     * @param {number} secondY The y-coordinate of the second control point of the Bezier curve.\n     * @param {number} endX The x-coordinate of the ending point of the Bezier curve.\n     * @param {number} endY The y-coordinate of the ending point of the Bezier curve.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a Bezier curve to the path\n     * path.addBezier(100, 100, 150, 150, 50, 250, 100, 300);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addBezier = function (startX, startY, firstX, firstY, secondX, secondY, endX, endY) {\n        var points = [startX, startY, firstX, firstY, secondX, secondY, endX, endY];\n        this._addPoints(points, PathPointType.bezier);\n    };\n    PdfPath.prototype._addBezierPoints = function (pointsCollection) {\n        if (pointsCollection.length < 4) {\n            throw Error('Incorrect size of array points');\n        }\n        var bound = 3;\n        var index = 0;\n        var start = pointsCollection[Number.parseInt(index.toString(), 10)];\n        index++;\n        while ((index + bound) <= pointsCollection.length) {\n            var inner1 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var inner2 = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            var end = pointsCollection[Number.parseInt(index.toString(), 10)];\n            index++;\n            this.addBezier(start[0], start[1], inner1[0], inner1[1], inner2[0], inner2[1], end[0], end[1]);\n            start = end;\n        }\n    };\n    /**\n     * Adds a pie slice to the path.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the bounding rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the bounding rectangle.\n     * @param {number} width The width of the bounding rectangle.\n     * @param {number} height The height of the bounding rectangle.\n     * @param {number} startAngle The angle in degrees measured clockwise from the x-axis to the start of the pie slice.\n     * @param {number} sweepAngle The angle in degrees measured clockwise from the startAngle parameter to the end of the pie slice.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Add a pie slice to the path\n     * path.addPie(0, 20, 100, 100, 270, 45);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.addPie = function (x, y, width, height, startAngle, sweepAngle) {\n        this.startFigure();\n        this.addArc(x, y, width, height, startAngle, sweepAngle);\n        this._addPoint([x + width / 2, y + height / 2], PathPointType.line);\n        this.closeFigure();\n    };\n    /**\n     * Starts a new figure in the path.\n     *\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath();\n     * // Start a new figure in the path\n     * path.startFigure();\n     * // Add some path points (optional)\n     * path.addLine(50, 50, 100, 50);\n     * // Draw the path on the PDF page\n     * graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.startFigure = function () {\n        this._isStart = true;\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index !== 'undefined') {\n            var type = this._pathTypes[Number.parseInt(index.toString(), 10)];\n            type |= PathPointType.closePath;\n            this._pathTypes[Number.parseInt(index.toString(), 10)] = type;\n        }\n        else {\n            if (this._points.length > 0) {\n                this.closeFigure(this._points.length - 1);\n            }\n            this.startFigure();\n        }\n    };\n    /**\n     * Closes all non-closed figures in the path.\n     *\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics object of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Create a new PDF path\n     * let path: PdfPath = new PdfPath([[50, 50], [100, 50], [100, 100], [50, 100], [50, 50]], [0, 1, 1, 1, 1]);\n     * // Close all non-closed figures\n     * path.closeAllFigures();\n     * // Draw the path on the PDF page\n     * page.graphics.drawPath(path, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        for (var i = 0; i < this._points.length; ++i) {\n            var pointType = this._pathTypes[Number.parseInt(i.toString(), 10)];\n            var flag = false;\n            if (i !== 0 && pointType === PathPointType.start) {\n                this.closeFigure(i - 1);\n                flag = true;\n            }\n            else if (i === this._pathTypes.length - 1 && !flag && this._isXps) {\n                if (this._points[0][0] === this._points[Number.parseInt(i.toString(), 10)][0] &&\n                    this._points[0][1] === this._points[Number.parseInt(i.toString(), 10)][1]) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    PdfPath.prototype._getBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this._points.length > 0) {\n            var xmin = this._points[0][0];\n            var xmax = this._points[0][0];\n            var ymin = this._points[0][1];\n            var ymax = this._points[0][1];\n            for (var i = 1; i < this._points.length; ++i) {\n                var point = this._points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point[0], xmin);\n                xmax = Math.max(point[0], xmax);\n                ymin = Math.min(point[1], ymin);\n                ymax = Math.max(point[1], ymax);\n            }\n            bounds = [xmin, ymin, xmax - xmin, ymax - ymin];\n        }\n        return bounds;\n    };\n    return PdfPath;\n}());\nexport { PdfPath };\n","import { _PdfGraphicsUnit } from './../../enumerator';\nimport { _PdfUnitConvertor } from './../../graphics/pdf-graphics';\n/**\n * The 'PdfImage' contains methods and properties to handle the images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets the width of the PDF image.\n         *\n         * @returns {number} image width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the width of the image.\n         * let width: number = image.width;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        /**\n         * Sets the width of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the width of the image.\n         * image.width = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets the height of the PDF image.\n         *\n         * @returns {number} image height.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the height of the image.\n         * let height: number = image.height;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        /**\n         * Sets the height of the PDF image.\n         *\n         * @param {number} value value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Sets the height of the image.\n         * image.height = 100;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the physical dimension of the PDF image (Read only).\n         *\n         * @returns {number[]} image physical dimension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Gets the physical dimension of the image.\n         * let dimension: number[] = image.physicalDimension;\n         * //Draw the image.\n         * image.draw(graphics);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            this._imagePhysicalDimension = this._getPointSize(this.width, this.height, this._horizontalResolution);\n            return [this.width, this.height];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.draw = function (graphics, x, y) {\n        if ((x === null || typeof x === 'undefined') && (y === null || typeof y === 'undefined')) {\n            x = 0;\n            y = 0;\n        }\n        var needSave = (x !== 0 || y !== 0);\n        var state = null;\n        if (needSave) {\n            state = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        graphics.drawImage(this, 0, 0);\n        if (needSave) {\n            graphics.restore(state);\n        }\n    };\n    PdfImage.prototype._getPointSize = function (width, height, horizontalResolution) {\n        if ((horizontalResolution === null || typeof horizontalResolution === 'undefined')) {\n            var dpiX = 96;\n            var size = this._getPointSize(width, height, dpiX);\n            return size;\n        }\n        else {\n            var ucX = new _PdfUnitConvertor();\n            var ucY = new _PdfUnitConvertor();\n            var ptWidth = ucX._convertUnits(width, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var ptHeight = ucY._convertUnits(height, _PdfGraphicsUnit.pixel, _PdfGraphicsUnit.point);\n            var size = [ptWidth, ptHeight];\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","import { PdfPage } from './../pdf-page';\nimport { _PdfStreamWriter } from './pdf-stream-writer';\nimport { _PdfBaseStream } from './../base-stream';\nimport { _floatToString, _addProcSet, _reverseMapBlendMode, _mapBlendMode, _getNewGuidString, _getBezierArc, _numberToString, _bytesToString, _stringToUnicodeArray } from './../utils';\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfFont, PdfFontStyle, PdfStandardFont, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { _PdfStringLayouter, _LineType, _StringTokenizer } from './../fonts/string-layouter';\nimport { PdfTextAlignment, PdfTextDirection, PdfSubSuperScript, PdfBlendMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode, PathPointType } from './../enumerator';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { PdfTemplate } from './pdf-template';\nimport { PdfPath } from './pdf-path';\nimport { _UnicodeTrueTypeFont } from '../fonts/unicode-true-type-font';\nimport { _RtlRenderer } from './../graphics/rightToLeft/text-renderer';\nimport { PdfImage } from './images/pdf-image';\n/**\n * Represents a graphics from a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * //Create a new pen.\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * //Draw line on the page graphics.\n * graphics.drawLine(pen, 10, 10, 100, 100);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphics` class.\n     *\n     * @param {number[]} size The graphics client size.\n     * @param {_PdfContentStream} content Content stream.\n     * @param {_PdfCrossReference} xref Cross reference.\n     * @param {PdfPage | PdfTemplate} source Source object of the graphics.\n     * @private\n     */\n    function PdfGraphics(size, content, xref, source) {\n        this._pendingResource = []; // eslint-disable-line\n        this._isItalic = false;\n        this._hasResourceReference = false;\n        if (source instanceof PdfPage) {\n            this._source = source._pageDictionary;\n            this._page = source;\n        }\n        else if (source instanceof PdfTemplate) {\n            this._source = source._content.dictionary;\n            this._template = source;\n        }\n        if (this._source && this._source.has('Resources')) {\n            var obj = this._source.getRaw('Resources'); // eslint-disable-line\n            if (obj) {\n                if (obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = xref._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n        }\n        else {\n            this._resourceObject = new _PdfDictionary();\n            this._source.update('Resources', this._resourceObject);\n        }\n        this._crossReference = xref;\n        this._sw = new _PdfStreamWriter(content);\n        this._size = size;\n        _addProcSet('PDF', this._resourceObject);\n        this._initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the size of the canvas reduced by margins and page templates (Read only).\n         *\n         * @returns {number[]} The width and height of the client area as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics client size.\n         * let size: number[] = page.graphics.clientSize;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return [this._clipBounds[2], this._clipBounds[3]];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_matrix\", {\n        get: function () {\n            if (typeof this._m === 'undefined') {\n                this._m = new _PdfTransformationMatrix();\n            }\n            return this._m;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"_resources\", {\n        get: function () {\n            var _this = this;\n            if (typeof this._resourceMap === 'undefined') {\n                this._resourceMap = new Map();\n                if (this._resourceObject && this._resourceObject.has('Font')) {\n                    var fonts = this._resourceObject.get('Font');\n                    if (fonts && fonts.size > 0) {\n                        fonts.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('XObject')) {\n                    var other = this._resourceObject.get('XObject');\n                    if (other && other.size > 0) {\n                        other.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._resourceMap.set(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n                if (this._resourceObject.has('ExtGState')) {\n                    var state = this._resourceObject.get('ExtGState');\n                    if (state && state.size > 0) {\n                        if (!this._transparencies) {\n                            this._transparencies = new Map();\n                        }\n                        state.forEach(function (key, value) {\n                            if (value !== null && typeof value !== 'undefined' && value instanceof _PdfReference) {\n                                _this._setTransparencyData(value, _PdfName.get(key));\n                            }\n                        });\n                    }\n                }\n            }\n            return this._resourceMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Save the current graphics state.\n     *\n     * @returns {PdfGraphicsState} graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this._matrix);\n        state._textRenderingMode = this._textRenderingMode;\n        state._charSpacing = this._characterSpacing;\n        state._textScaling = this._textScaling;\n        state._wordSpacing = this._wordSpacing;\n        state._currentBrush = this._currentBrush;\n        state._currentPen = this._currentPen;\n        state._currentFont = this._currentFont;\n        this._graphicsState.push(state);\n        this._sw._saveGraphicsState();\n        return state;\n    };\n    /**\n     * Restore the graphics state.\n     *\n     * @param {PdfGraphicsState} state graphics state.\n     * @returns {void} restore of the graphics state.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the graphics\n     * let state: PdfGraphicsState = graphics.save();\n     * //Set graphics translate transform.\n     * graphics.translateTransform(100, 100);\n     * //Draws the String.\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * //Restore the graphics.\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.restore = function (state) {\n        if (this._graphicsState.length > 0) {\n            if (typeof state === 'undefined') {\n                this._doRestore();\n            }\n            else {\n                if (this._graphicsState.length > 0 && this._graphicsState.indexOf(state) !== -1) {\n                    while (this._graphicsState.length > 0) {\n                        if (this._doRestore() === state) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._doRestore = function () {\n        var state = this._graphicsState.pop();\n        this._m = state._transformationMatrix;\n        this._currentBrush = state._currentBrush;\n        this._currentPen = state._currentPen;\n        this._currentFont = state._currentFont;\n        this._characterSpacing = state._charSpacing;\n        this._wordSpacing = state._wordSpacing;\n        this._textScaling = state._textScaling;\n        this._textRenderingMode = state._textRenderingMode;\n        this._sw._restoreGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.drawRectangle = function (x, y, width, height, first, second) {\n        this._beginMarkContent();\n        var result = this._setPenBrush(first, second);\n        this._sw._appendRectangle(x, y, width, height);\n        this._drawGraphicsPath(result.pen, result.brush);\n        this._endMarkContent();\n    };\n    /**\n     * Draws a Bezier curve using a specified pen and coordinates for the start point, two control points, and end point.\n     *\n     * @param {number} startX The x-coordinate of the starting point of the Bezier curve.\n     * @param {number} startY The y-coordinate of the starting point of the Bezier curve.\n     * @param {number} firstX The x-coordinate of the first control point of the Bezier curve.\n     * @param {number} firstY The y-coordinate of the first control point of the Bezier curve.\n     * @param {number} secondX The x-coordinate of the second control point of the Bezier curve.\n     * @param {number} secondY The y-coordinate of the second control point of the Bezier curve.\n     * @param {number} endX The x-coordinate of the ending point of the Bezier curve.\n     * @param {number} endY The y-coordinate of the ending point of the Bezier curve.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the Bezier curve.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a Bezier curve on the page graphics\n     * graphics.drawBezier(50, 100, 200, 50, 100, 150, 150, 100, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawBezier = function (startX, startY, firstX, firstY, secondX, secondY, endX, endY, pen) {\n        this._beginMarkContent();\n        this._stateControl(pen, null, null);\n        this._sw._beginPath(startX, startY);\n        this._sw._appendBezierSegment(firstX, firstY, secondX, secondY, endX, endY);\n        this._drawGraphicsPath(pen);\n        this._endMarkContent();\n    };\n    PdfGraphics.prototype.drawPie = function (x, y, width, height, startAngle, sweepAngle, first, second) {\n        this._beginMarkContent();\n        var result = this._setPenBrush(first, second);\n        this._constructPiePath(x, y, x + width, y + height, startAngle, sweepAngle);\n        this._sw._appendLineSegment(x + width / 2, y + height / 2);\n        this._drawGraphicsPath(result.pen, result.brush, null, true);\n        this._endMarkContent();\n    };\n    PdfGraphics.prototype.drawPolygon = function (points, first, second) {\n        this._beginMarkContent();\n        if (points.length > 0) {\n            var result = this._setPenBrush(first, second);\n            this._sw._beginPath(points[0][0], points[0][1]);\n            for (var i = 1; i < points.length; i++) {\n                this._sw._appendLineSegment(points[Number.parseInt(i.toString(), 10)][0], points[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._drawGraphicsPath(result.pen, result.brush, PdfFillMode.winding, true);\n        }\n        this._endMarkContent();\n    };\n    PdfGraphics.prototype.drawEllipse = function (x, y, width, height, first, second) {\n        this._beginMarkContent();\n        var result = this._setPenBrush(first, second);\n        this._constructArcPath(x, y, x + width, y + height, 0, 360);\n        this._drawGraphicsPath(result.pen, result.brush, PdfFillMode.winding, true);\n        this._endMarkContent();\n    };\n    /**\n     * Draw arc on the page graphics.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} y The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} width Width of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} height Height of the bounding rectangle that defines the ellipse from which the arc shape comes.\n     * @param {number} startAngle Angle measured in degrees clockwise from the x-axis to the first side of the arc shape.\n     * @param {number} sweepAngle Angle measured in degrees clockwise from the startAngle parameter to the second side of the arc shape.\n     * @param {PdfPen} pen Pen that determines the stroke color, width, and style of the arc.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw an arc on the page graphics\n     * graphics.drawArc(10, 20, 100, 200, 20, 30, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawArc = function (x, y, width, height, startAngle, sweepAngle, pen) {\n        if (sweepAngle !== 0) {\n            this._beginMarkContent();\n            this._stateControl(pen);\n            this._constructArcPath(x, y, x + width, y + height, startAngle, sweepAngle);\n            this._drawGraphicsPath(pen, null, PdfFillMode.winding, false);\n            this._endMarkContent();\n        }\n    };\n    PdfGraphics.prototype._beginMarkContent = function () {\n        if (this._layer) {\n            this._layer._beginLayer(this);\n        }\n    };\n    PdfGraphics.prototype._endMarkContent = function () {\n        if (this._layer) {\n            if (this._layer._isEndState && this._layer._parentLayer.length !== 0) {\n                for (var i = 0; i < this._layer._parentLayer.length; i++) {\n                    this._sw._write('EMC');\n                }\n            }\n            if (this._layer._isEndState) {\n                this._sw._write('EMC');\n            }\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        this._beginMarkContent();\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size[0], size[1]);\n        }\n        else {\n            arg1._save();\n            var matrix = new _PdfTransformationMatrix();\n            this._getTranslateTransform(arg2, (arg3 + arg5), matrix);\n            this._getScaleTransform(arg4, arg5, matrix);\n            this._sw._write('q');\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var keyName = void 0;\n            var isNew = true;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName === 'undefined') {\n                keyName = _PdfName.get(_getNewGuidString());\n            }\n            if (this._crossReference) {\n                this._updateImageResource(arg1, keyName, sourceDictionary, this._crossReference);\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            else {\n                this._pendingResource.push({ 'resource': arg1, 'key': keyName, 'source': sourceDictionary });\n            }\n            this._sw._executeObject(keyName);\n            this._sw._write('Q');\n            this._sw._write('\\r\\n');\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n        this._endMarkContent();\n    };\n    /**\n     * Draws a PDF template onto the page graphics.\n     *\n     * @param {PdfTemplate} template The PDF template to be drawn.\n     * @param {{x: number, y: number, width: number, height: number}} bounds The bounds of the template.\n     * @param {number} bounds.x The x-coordinate of the upper-left corner where the template will be drawn.\n     * @param {number} bounds.y The y-coordinate of the upper-left corner where the template will be drawn.\n     * @param {number} bounds.width The width of the area where the template will be drawn.\n     * @param {number} bounds.height The height of the area where the template will be drawn.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Get the appearance template of the annotation\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Get the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Draw the template on the page graphics within the specified bounds\n     * graphics.drawTemplate(template, { x: 10, y: 20, width: template.size[0], height: template.size[1] });\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawTemplate = function (template, bounds) {\n        var _this = this;\n        this._beginMarkContent();\n        if (typeof template !== 'undefined') {\n            if (template._isExported || template._isResourceExport) {\n                if (this._crossReference) {\n                    template._crossReference = this._crossReference;\n                    template._importStream(true, template._isResourceExport);\n                }\n                else {\n                    template._importStream(false, template._isResourceExport);\n                    this._pendingResource.push(template);\n                }\n            }\n            var scaleX = (template && template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n            var scaleY = (template && template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n            var needScale = !(Math.trunc(scaleX * 1000) / 1000 === 1 && Math.trunc(scaleY * 1000) / 1000 === 1);\n            var cropBox = void 0;\n            var mediaBox = void 0;\n            if (this._page) {\n                cropBox = this._page.cropBox;\n                mediaBox = this._page.mediaBox;\n                if (this._page._pageDictionary.has('CropBox') && this._page._pageDictionary.has('MediaBox')) {\n                    if (cropBox[0] > 0 && cropBox[1] > 0 && mediaBox[0] < 0 && mediaBox[1] < 0) {\n                        this.translateTransform(cropBox[0], -cropBox[1]);\n                        bounds.x = -cropBox[0];\n                        bounds.y = cropBox[1];\n                    }\n                }\n            }\n            var state = this.save();\n            var matrix = new _PdfTransformationMatrix();\n            if (this._page) {\n                var needTransform = (this._page._pageDictionary.has('CropBox') &&\n                    this._page._pageDictionary.has('MediaBox') && cropBox && mediaBox &&\n                    cropBox[0] === mediaBox[0] && cropBox[1] === mediaBox[1] && cropBox[2] === mediaBox[2] && cropBox[3] === mediaBox[3]) ||\n                    (this._page._pageDictionary.has('MediaBox') && mediaBox && mediaBox[3] === 0);\n                matrix._translate(bounds.x, -(bounds.y + ((this._page._origin[0] >= 0 || needTransform) ? bounds.height : 0)));\n            }\n            else {\n                matrix._translate(bounds.x, -(bounds.y + bounds.height));\n            }\n            var scaleApplied = false;\n            if (template._content && template._content.dictionary) {\n                var dictionary = template._content.dictionary;\n                if (dictionary.has('Matrix') && dictionary.has('BBox')) {\n                    var templateMatrix = dictionary.getArray('Matrix');\n                    var templateBox = dictionary.getArray('BBox');\n                    if (templateMatrix && templateBox && templateMatrix.length > 5 && templateBox.length > 3) {\n                        var templateScaleX = Number.parseFloat(_numberToString(-templateMatrix[1]));\n                        var templateScaleY = Number.parseFloat(_numberToString(templateMatrix[2]));\n                        var roundScaleX = Number.parseFloat(_numberToString(scaleX));\n                        var roundScaleY = Number.parseFloat(_numberToString(scaleY));\n                        if (roundScaleX === templateScaleX &&\n                            roundScaleY === templateScaleY &&\n                            templateBox[2] === template._size[0] &&\n                            templateBox[3] === template._size[1] && template._isAnnotationTemplate\n                            && template._needScale && needScale) {\n                            matrix = new _PdfTransformationMatrix();\n                            matrix._translate(bounds.x - templateMatrix[4], -(bounds.y + templateMatrix[5]));\n                            matrix._scale(1, 1);\n                            scaleApplied = true;\n                        }\n                        else if (templateBox[0] !== 0 && templateBox[1] !== 0 && templateBox[0] === bounds.x &&\n                            this._page && template._isSignature) {\n                            matrix._translate(bounds.x - templateBox[0], -this._page.size[1]);\n                            matrix._scale(scaleX, scaleY);\n                            scaleApplied = true;\n                        }\n                    }\n                }\n            }\n            if (needScale && !scaleApplied) {\n                matrix._scale(scaleX, scaleY);\n            }\n            this._sw._modifyCtm(matrix);\n            var sourceDictionary = void 0;\n            var isReference = false;\n            var keyName_1;\n            var isNew = true;\n            var ref_1;\n            if (this._resourceObject.has('XObject')) {\n                var obj = this._resourceObject.getRaw('XObject'); // eslint-disable-line\n                if (obj) {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        sourceDictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        sourceDictionary = obj;\n                    }\n                }\n                if (sourceDictionary) {\n                    isNew = false;\n                    this._resources.forEach(function (value, key) {\n                        if (key && key instanceof _PdfReference) {\n                            var base = _this._crossReference._fetch(key);\n                            if (base && template && base === template._content) {\n                                keyName_1 = value;\n                                ref_1 = key;\n                            }\n                        }\n                    });\n                }\n            }\n            if (isNew) {\n                sourceDictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('XObject', sourceDictionary);\n            }\n            if (typeof keyName_1 === 'undefined') {\n                keyName_1 = _PdfName.get(_getNewGuidString());\n                if (template && template._content.reference) {\n                    ref_1 = template._content.reference;\n                }\n                else if (this._crossReference) {\n                    ref_1 = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': template._content, 'key': keyName_1, 'source': sourceDictionary });\n                }\n                if (ref_1 && this._crossReference) {\n                    if (!this._crossReference._cacheMap.has(ref_1) && template && template._content) {\n                        this._crossReference._cacheMap.set(ref_1, template._content);\n                    }\n                    sourceDictionary.update(keyName_1.name, ref_1);\n                    this._resources.set(ref_1, keyName_1);\n                }\n                this._resourceObject._updated = true;\n            }\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n            this._sw._executeObject(keyName_1);\n            this.restore(state);\n            _addProcSet('ImageB', this._resourceObject);\n            _addProcSet('ImageC', this._resourceObject);\n            _addProcSet('ImageI', this._resourceObject);\n            _addProcSet('Text', this._resourceObject);\n        }\n        this._endMarkContent();\n    };\n    PdfGraphics.prototype._processResources = function (crossReference) {\n        this._crossReference = crossReference;\n        if (this._pendingResource.length > 0) {\n            for (var i = 0; i < this._pendingResource.length; i++) {\n                var entry = this._pendingResource[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (entry instanceof PdfTemplate) {\n                    entry._crossReference = crossReference;\n                    entry._updatePendingResource(crossReference);\n                }\n                else if (entry.resource instanceof _PdfBaseStream) {\n                    var reference = void 0;\n                    if (entry.resource._reference) {\n                        reference = entry.resource._reference;\n                    }\n                    else {\n                        reference = crossReference._getNextReference();\n                        entry.resource._reference = reference;\n                    }\n                    if (!crossReference._cacheMap.has(reference) && entry.resource) {\n                        crossReference._cacheMap.set(reference, entry.resource);\n                    }\n                    entry.source.update(entry.key.name, reference);\n                    this._resources.set(reference, entry.key);\n                }\n                else if (entry.resource instanceof PdfImage) {\n                    this._updateImageResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                else if (entry.resource instanceof PdfFont) {\n                    this._updateFontResource(entry.resource, entry.key, entry.source, crossReference);\n                }\n                this._source.update('Resources', this._resourceObject);\n                this._source._updated = true;\n            }\n            this._pendingResource = [];\n        }\n    };\n    PdfGraphics.prototype._updateImageResource = function (image, keyName, source, crossReference) {\n        var reference;\n        if (image._reference) {\n            reference = image._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            image._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (image && image._imageStream && image._imageStream.dictionary) {\n                crossReference._cacheMap.set(reference, image._imageStream);\n                image._imageStream.dictionary._updated = true;\n                if (image._maskStream && image._maskStream.dictionary) {\n                    var ref = void 0;\n                    if (image._maskReference) {\n                        ref = image._maskReference;\n                    }\n                    else {\n                        ref = crossReference._getNextReference();\n                        image._maskReference = ref;\n                    }\n                    crossReference._cacheMap.set(ref, image._maskStream);\n                    image._maskStream.dictionary._updated = true;\n                    image._imageStream.dictionary.set('SMask', ref);\n                }\n            }\n        }\n        source.update(keyName.name, reference);\n        this._resources.set(reference, keyName);\n        this._resourceObject._updated = true;\n    };\n    PdfGraphics.prototype._updateFontResource = function (font, keyName, source, crossReference) {\n        var reference;\n        if (font._reference) {\n            reference = font._reference;\n        }\n        else {\n            reference = crossReference._getNextReference();\n            font._reference = reference;\n        }\n        if (!crossReference._cacheMap.has(reference)) {\n            if (font._dictionary) {\n                crossReference._cacheMap.set(reference, font._dictionary);\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n            else if (font instanceof PdfTrueTypeFont) {\n                var internal = font._fontInternal;\n                if (internal && internal._fontDictionary) {\n                    crossReference._cacheMap.set(reference, internal._fontDictionary);\n                }\n                source.update(keyName.name, reference);\n                this._resources.set(reference, keyName);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (path, first, second) {\n        this._beginMarkContent();\n        var result = this._setPenBrush(first, second);\n        if (result.pen || result.brush) {\n            this._buildUpPath(path._points, path._pathTypes);\n            this._drawGraphicsPath(result.pen, result.brush, path.fillMode, false);\n        }\n        this._endMarkContent();\n    };\n    /**\n     * Draws a rounded rectangle on the page graphics.\n     *\n     * @param {number} x The x-coordinate of the upper-left corner of the rounded rectangle.\n     * @param {number} y The y-coordinate of the upper-left corner of the rounded rectangle.\n     * @param {number} width The width of the rounded rectangle.\n     * @param {number} height The height of the rounded rectangle.\n     * @param {number} radius The radius of the rounded corners of the rectangle.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the rectangle.\n     * @param {PdfBrush} brush The brush that determines the fill color and texture of the rectangle.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 0, 255]);\n     * // Draw a rounded rectangle on the page graphics\n     * graphics.drawRoundedRectangle(10, 20, 100, 200, 5, pen, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (x, y, width, height, radius, pen, brush) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        var bounds = [x, y, width, height];\n        var diameter = radius * 2;\n        var size = [diameter, diameter];\n        var arc = [bounds[0], bounds[1], size[0], size[1]];\n        var path = new PdfPath();\n        if (radius === 0) {\n            path.addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            this.drawPath(path, pen, brush);\n        }\n        else {\n            path._isRoundedRectangle = true;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 180, 90);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 270, 90);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 0, 90);\n            arc[0] = bounds[0];\n            path.addArc(arc[0], arc[1], arc[2], arc[3], 90, 90);\n            path.closeFigure();\n            this.drawPath(path, pen, brush);\n        }\n    };\n    PdfGraphics.prototype._constructArcPath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            return;\n        }\n        var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this._sw._beginPath(point[0], point[1]);\n        for (var i = 0; i < points.length; i = i + 8) {\n            point = [points[Number.parseInt(i.toString(), 10)],\n                points[i + 1],\n                points[i + 2],\n                points[i + 3],\n                points[i + 4],\n                points[i + 5],\n                points[i + 6],\n                points[i + 7]];\n            this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n        }\n    };\n    PdfGraphics.prototype._constructPiePath = function (x1, y1, x2, y2, start, sweep) {\n        var points = _getBezierArc(x1, y1, x2, y2, start, sweep);\n        if (points.length === 8) {\n            var point = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n            this._sw._beginPath(point[0], point[1]);\n            for (var i = 0; i < points.length; i = i + 8) {\n                point = [points[Number.parseInt(i.toString(), 10)],\n                    points[i + 1],\n                    points[i + 2],\n                    points[i + 3],\n                    points[i + 4],\n                    points[i + 5],\n                    points[i + 6],\n                    points[i + 7]];\n                this._sw._appendBezierSegment(point[2], point[3], point[4], point[5], point[6], point[7]);\n            }\n        }\n    };\n    PdfGraphics.prototype._writePen = function (pen) {\n        var lineWidth = pen._width;\n        var pattern = pen._dashPattern;\n        var setPattern = [];\n        for (var i = 0; i < pattern.length; ++i) {\n            setPattern[i] = pattern[i] * pen._width; // eslint-disable-line\n        }\n        this._sw._setLineDashPattern(setPattern, pen._dashOffset * lineWidth);\n        this._sw._setLineWidth(pen._width);\n        this._sw._setLineJoin(pen._lineJoin);\n        this._sw._setLineCap(pen._lineCap);\n        if (pen._miterLimit > 0) {\n            this._sw._setMiterLimit(pen._miterLimit);\n        }\n        this._sw._setColor(pen._color, true);\n    };\n    /**\n     * Draw text on the page graphics.\n     *\n     * @param {string} value The string to be drawn.\n     * @param {PdfFont} font The font used to draw the string.\n     * @param {number[]} bounds An array specifying the bounds [x, y, width, height] where the string will be drawn.\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the string.\n     * @param {PdfBrush} brush The brush that determines the fill color and texture of the string.\n     * @param {PdfStringFormat} format The format that specifies text layout information such as alignment, line spacing, and trimming.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Create a new font\n     * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 12);\n     * // Create a new string format\n     * let format: PdfStringFormat = new PdfStringFormat();\n     * format.alignment = PdfTextAlignment.center;\n     * // Draw text on the page graphics\n     * graphics.drawString('Hello World', font, [10, 20, 100, 200], pen, new PdfBrush([0, 0, 255]), format);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawString = function (value, font, bounds, pen, brush, format) {\n        this._beginMarkContent();\n        var layouter = new _PdfStringLayouter();\n        if (!format) {\n            format = new PdfStringFormat();\n        }\n        var result = layouter._layout(value, font, format, [bounds[2], bounds[3]]);\n        if (!result._empty) {\n            var rect = this._checkCorrectLayoutRectangle(result._actualSize, bounds[0], bounds[1], format);\n            if (bounds[2] <= 0) {\n                bounds[0] = rect[0];\n                bounds[2] = rect[2];\n            }\n            if (bounds[3] <= 0) {\n                bounds[1] = rect[1];\n                bounds[3] = rect[3];\n            }\n            this._drawStringLayoutResult(result, font, pen, brush, bounds, format);\n        }\n        _addProcSet('Text', this._resourceObject);\n        this._endMarkContent();\n    };\n    PdfGraphics.prototype._buildUpPath = function (points, types) {\n        for (var i = 0; i < points.length; i++) {\n            var point = points[Number.parseInt(i.toString(), 10)];\n            var type = types[Number.parseInt(i.toString(), 10)];\n            switch (type & 0xf) {\n                case PathPointType.start:\n                    this._sw._beginPath(point[0], point[1]);\n                    break;\n                case PathPointType.bezier:\n                    var result = this._getBezierPoint(points, types, i); // eslint-disable-line\n                    i = result.index;\n                    var first = result.point; // eslint-disable-line\n                    result = this._getBezierPoint(points, types, i);\n                    i = result.index;\n                    var second = result.point; // eslint-disable-line\n                    this._sw._appendBezierSegment(point[0], point[1], first[0], first[1], second[0], second[1]);\n                    break;\n                case PathPointType.line:\n                    this._sw._appendLineSegment(point[0], point[1]);\n                    break;\n                default:\n                    throw new Error('Incorrect path formation.');\n            }\n            type = types[Number.parseInt(i.toString(), 10)];\n            if ((type & PathPointType.closePath) === PathPointType.closePath) {\n                this._sw._closePath();\n            }\n        }\n    };\n    PdfGraphics.prototype._getBezierPoint = function (points, types, index) {\n        if (types[Number.parseInt(index.toString(), 10)] !== PathPointType.bezier) {\n            throw new Error('Malforming path.');\n        }\n        index++;\n        return { 'index': index, 'point': points[Number.parseInt(index.toString(), 10)] };\n    };\n    PdfGraphics.prototype._initialize = function () {\n        this._mediaBoxUpperRightBound = 0;\n        this._characterSpacing = -1;\n        this._wordSpacing = -1;\n        this._textScaling = -100;\n        this._textRenderingMode = -1;\n        this._graphicsState = [];\n        this._clipBounds = [0, 0, this._size[0], this._size[1]];\n        this._colorSpaceInitialized = false;\n        this._startCutIndex = -1;\n    };\n    PdfGraphics.prototype._initializeCurrentColorSpace = function () {\n        if (!this._colorSpaceInitialized) {\n            this._sw._setColorSpace('DeviceRGB', true);\n            this._sw._setColorSpace('DeviceRGB', false);\n            this._colorSpaceInitialized = true;\n        }\n    };\n    PdfGraphics.prototype._brushControl = function (brush) {\n        this._sw._setColor(brush._color, false);\n        this._currentBrush = brush;\n    };\n    PdfGraphics.prototype._penControl = function (pen) {\n        this._currentPen = pen;\n        this._writePen(pen);\n        this._currentPen = pen;\n    };\n    PdfGraphics.prototype._fontControl = function (font, format) {\n        var _this = this;\n        var size = font._metrics._getSize(format);\n        this._currentFont = font;\n        var sourceDictionary;\n        var isReference = false;\n        var keyName;\n        var isNew = true;\n        var ref;\n        var hasResource = false;\n        if (this._resourceObject.has('Font')) {\n            var obj = this._resourceObject.getRaw('Font'); // eslint-disable-line\n            if (obj !== null && typeof obj !== 'undefined') {\n                if (obj instanceof _PdfReference) {\n                    isReference = true;\n                    sourceDictionary = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    sourceDictionary = obj;\n                }\n            }\n            if (typeof sourceDictionary !== 'undefined' && sourceDictionary !== null) {\n                isNew = false;\n                this._resources.forEach(function (value, key) {\n                    if (_this._crossReference) {\n                        if (key !== null && typeof key !== 'undefined') {\n                            var dictionary = _this._crossReference._fetch(key);\n                            if (dictionary && ((font instanceof PdfStandardFont && dictionary === font._dictionary) ||\n                                (font instanceof PdfTrueTypeFont && dictionary === font._fontInternal._fontDictionary))) {\n                                keyName = value;\n                                ref = key;\n                                hasResource = true;\n                            }\n                        }\n                    }\n                    else if (font._reference && font._reference === key) {\n                        keyName = value;\n                        ref = key;\n                        hasResource = true;\n                    }\n                });\n            }\n        }\n        if (isNew) {\n            sourceDictionary = new _PdfDictionary(this._crossReference);\n            this._resourceObject.update('Font', sourceDictionary);\n        }\n        if (typeof keyName === 'undefined') {\n            keyName = _PdfName.get(_getNewGuidString());\n            if (!ref) {\n                if (font._reference) {\n                    ref = font._reference;\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (this._crossReference) {\n                    ref = this._crossReference._getNextReference();\n                }\n                else {\n                    this._pendingResource.push({ 'resource': font, 'key': keyName, 'source': sourceDictionary });\n                }\n            }\n            if (ref && this._crossReference) {\n                if (!font._reference) {\n                    font._reference = ref;\n                }\n                if (font._dictionary) {\n                    this._crossReference._cacheMap.set(ref, font._dictionary);\n                    sourceDictionary.update(keyName.name, ref);\n                }\n                else if (font instanceof PdfTrueTypeFont) {\n                    var internal = font._fontInternal;\n                    if (internal && internal._fontDictionary) {\n                        this._crossReference._cacheMap.set(ref, internal._fontDictionary);\n                    }\n                    sourceDictionary.update(keyName.name, ref);\n                }\n            }\n            if (!hasResource) {\n                this._resources.set(ref, keyName);\n            }\n        }\n        if (isReference) {\n            this._resourceObject._updated = true;\n        }\n        if (this._hasResourceReference) {\n            this._source._updated = true;\n        }\n        this._sw._setFont(keyName.name, size);\n    };\n    PdfGraphics.prototype._setPenBrush = function (first, second) {\n        var pen;\n        var brush;\n        if (first) {\n            if (first instanceof PdfPen) {\n                pen = first;\n            }\n            else {\n                brush = first;\n            }\n        }\n        if (second && second instanceof PdfBrush) {\n            brush = second;\n        }\n        this._stateControl(pen, brush, null);\n        return { pen: pen, brush: brush };\n    };\n    PdfGraphics.prototype._stateControl = function (pen, brush, font, format) {\n        if (pen || brush) {\n            this._initializeCurrentColorSpace();\n        }\n        if (pen) {\n            this._penControl(pen);\n        }\n        if (brush) {\n            this._brushControl(brush);\n        }\n        if (font) {\n            this._fontControl(font, format);\n        }\n    };\n    PdfGraphics.prototype._drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result._empty) {\n            var allowPartialLines = (format && typeof format.lineLimit !== 'undefined' && !format.lineLimit);\n            var shouldClip = (typeof format === 'undefined' || (format && typeof format.noClip !== 'undefined'\n                && !format.noClip));\n            var clipRegion = allowPartialLines && shouldClip;\n            var state = void 0;\n            if (clipRegion) {\n                state = this.save();\n                var clipBounds = [layoutRectangle[0], layoutRectangle[1], result._actualSize[0], result._actualSize[1]];\n                if (layoutRectangle[2] > 0) {\n                    clipBounds[2] = layoutRectangle[2];\n                }\n                if (format.lineAlignment === PdfVerticalAlignment.middle) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]) / 2;\n                }\n                else if (format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    clipBounds[1] += (layoutRectangle[3] - clipBounds[3]);\n                }\n                this.setClip(clipBounds);\n            }\n            if (font && font instanceof PdfTrueTypeFont && font._fontInternal &&\n                font._fontInternal instanceof _UnicodeTrueTypeFont && font.isItalic) {\n                if (!font._fontInternal._ttfMetrics._isItalic) {\n                    state = this.save();\n                    this._isItalic = true;\n                }\n            }\n            this._applyStringSettings(font, pen, brush, format);\n            var textScaling = (typeof format !== 'undefined' && format !== null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this._textScaling) {\n                this._sw._setTextScaling(textScaling);\n                this._textScaling = textScaling;\n            }\n            var verticalAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n            var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                font._metrics._getHeight(format) :\n                format.lineSpacing + font._metrics._getHeight(format);\n            var script = (format !== null && typeof format !== 'undefined' &&\n                format.subSuperScript === PdfSubSuperScript.subScript);\n            var shift = 0;\n            shift = (script) ? height - (font.height + font._metrics._getDescent(format)) : (height - font._metrics._getAscent(format));\n            if (format && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                    (layoutRectangle[3] - result._actualSize[1]) < (font._metrics._size / 2) - 1) {\n                    if (Number.parseFloat(_numberToString(layoutRectangle[3])) <=\n                        Number.parseFloat(_numberToString(font._metrics._getHeight(format)))) {\n                        shift = -(height / font._metrics._size);\n                    }\n                }\n            }\n            var matrix = new _PdfTransformationMatrix();\n            if (this._isItalic) {\n                this.translateTransform(layoutRectangle[0] + font.size / 5, layoutRectangle[1] - shift + verticalAlignShift);\n                this._skewTransform(0, -11);\n            }\n            else {\n                matrix._translate(layoutRectangle[0], (-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    (font._metrics._getDescent(format) > 0 ? -font._metrics._getDescent(format) : font._metrics._getDescent(format))) -\n                    verticalAlignShift);\n                this._sw._modifyTM(matrix);\n            }\n            if (layoutRectangle[3] < font._metrics._size) {\n                if ((result._actualSize[1] - layoutRectangle[3]) < (font._metrics._size / 2) - 1) {\n                    verticalAlignShift = 0;\n                }\n            }\n            if (verticalAlignShift !== 0) {\n                if (format !== null && format.lineAlignment === PdfVerticalAlignment.bottom) {\n                    if (layoutRectangle[3] - result._actualSize[1] !== 0 &&\n                        (layoutRectangle[3] - result._actualSize[1]) > (font._metrics._size / 2) - 1) {\n                        verticalAlignShift -= (shift - (height - font._metrics._size)) / 2;\n                    }\n                }\n            }\n            if (this._isItalic) {\n                this._sw._startNextLine(0, 0);\n                this._sw._setLeading(+height);\n            }\n            this._drawLayoutResult(result, font, format, layoutRectangle);\n            if (verticalAlignShift !== 0) {\n                this._sw._startNextLine(0, -(verticalAlignShift - result._lineHeight));\n            }\n            _addProcSet('Text', this._resourceObject);\n            this._sw._endText();\n            if (this._isItalic) {\n                this.restore(state);\n            }\n            this._underlineStrikeoutText(brush, result, font, layoutRectangle, format);\n            if (clipRegion) {\n                this.restore(state);\n            }\n        }\n    };\n    PdfGraphics.prototype._getNextPage = function () {\n        var page;\n        var pageCount = this._crossReference._document.pageCount;\n        if (this._page._pageIndex <= pageCount - 2) {\n            page = this._crossReference._document.getPage(this._page._pageIndex + 1);\n        }\n        else {\n            page = this._crossReference._document.addPage();\n        }\n        return page;\n    };\n    PdfGraphics.prototype._applyStringSettings = function (font, pen, brush, format) {\n        var tm = _TextRenderingMode.fill;\n        var setLineWidth = false;\n        if (pen && brush) {\n            tm = _TextRenderingMode.fillStroke;\n        }\n        else if (pen) {\n            tm = _TextRenderingMode.stroke;\n        }\n        else if (brush) {\n            tm = _TextRenderingMode.fill;\n        }\n        if (font && font instanceof PdfTrueTypeFont && (font.isUnicode || (font._style & PdfFontStyle.bold) !== 0)) {\n            var fontName = font._fontInternal._metrics._postScriptName;\n            var isBoldFont = false;\n            if (fontName && fontName.toLocaleLowerCase().includes('bold')) {\n                isBoldFont = true;\n            }\n            if (font._fontInternal && font._fontInternal._metrics && font._fontInternal._metrics._isBold !==\n                font.isBold && font.isBold === true && !isBoldFont) {\n                if (!pen && brush) {\n                    pen = new PdfPen(brush._color, 1);\n                }\n                tm = _TextRenderingMode.fillStroke;\n                setLineWidth = true;\n            }\n        }\n        if (format && format.clipPath) {\n            tm |= _TextRenderingMode.clipFlag;\n        }\n        this._sw._beginText();\n        this._stateControl(pen, brush, font, format);\n        if (tm !== this._textRenderingMode) {\n            this._sw._setTextRenderingMode(tm);\n            this._textRenderingMode = tm;\n        }\n        var cs = (typeof format !== 'undefined' && format !== null) ? format.characterSpacing : 0;\n        if (cs !== this._characterSpacing) {\n            this._sw._setCharacterSpacing(cs);\n            this._characterSpacing = cs;\n        }\n        var ws = (typeof format !== 'undefined' && format !== null) ? format.wordSpacing : 0;\n        if (ws !== this._wordSpacing) {\n            this._sw._setWordSpacing(ws);\n            this._wordSpacing = ws;\n        }\n        if (font && setLineWidth) {\n            this._sw._setLineWidth(font.size / 30);\n        }\n    };\n    PdfGraphics.prototype._drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var height = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n            font._metrics._getHeight(format) :\n            format.lineSpacing + font._metrics._getHeight(format);\n        var lines = result._lines;\n        var ttfFont = font;\n        var unicode = (ttfFont !== null && ttfFont.isUnicode);\n        for (var i = 0, len = lines.length; (i < len && i !== this._startCutIndex); i++) {\n            var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n            var lineWidth = lineInfo._width;\n            var hAlignShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format) +\n                this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n            if (hAlignShift !== 0) {\n                this._sw._startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this._drawUnicodeLine(lineInfo, layoutRectangle[2], font, format);\n            }\n            else {\n                this._drawAsciiLine(lineInfo, layoutRectangle[2], format, font);\n            }\n            if ((i + 1 !== len)) {\n                var vAlignShift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var matrix = new _PdfTransformationMatrix();\n                var baseline = ((-(layoutRectangle[1] + font._metrics._getHeight(format)) -\n                    font._metrics._getDescent(format)) -\n                    vAlignShift) -\n                    (height * (i + 1));\n                matrix._translate(layoutRectangle[0], baseline);\n                this._sw._modifyTM(matrix);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeLine = function (lineInfo, width, font, format) {\n        var line = lineInfo._text;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && format.wordSpacing > 0);\n        var ttfFont = font;\n        var wordSpacing = this._justifyLine(lineInfo, width, format, ttfFont);\n        var rtlRender = new _RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none)) {\n            var blocks = [];\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                blocks = rtlRender._layout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender._layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = [];\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.none) {\n                    words = rtlRender._splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.rightToLeft) ? true : false, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this._breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this._drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this._convertToUnicode(line, ttfFont);\n                this._sw._showNextLineText(token, true);\n            }\n        }\n    };\n    PdfGraphics.prototype._drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks !== null && typeof blocks !== 'undefined' && blocks.length > 0 && words !== null && typeof words !== 'undefined' &&\n            words.length > 0 && font !== null && typeof font !== 'undefined') {\n            this._sw._startNextLine();\n            var x = 0;\n            var xShift = 0;\n            var firstLineIndent = 0;\n            var paragraphIndent = 0;\n            try {\n                if (format !== null && typeof format !== 'undefined') {\n                    firstLineIndent = format.firstLineIndent;\n                    paragraphIndent = format.paragraphIndent;\n                    format.firstLineIndent = 0;\n                    format.paragraphIndent = 0;\n                }\n                var spaceWidth = font._getCharacterWidth(_StringTokenizer._whiteSpace, format) + wordSpacing;\n                var characterSpacing = (format !== null) ? format.characterSpacing : 0;\n                var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n                spaceWidth += characterSpacing + wordSpace;\n                for (var i = 0; i < blocks.length; i++) {\n                    var token = blocks[i]; //eslint-disable-line\n                    var word = words[i]; //eslint-disable-line\n                    var tokenWidth = 0;\n                    if (x !== 0) {\n                        this._sw._startNextLine(x, 0);\n                    }\n                    if (word.length > 0) {\n                        tokenWidth += font.measureString(word, format)[0];\n                        tokenWidth += characterSpacing;\n                        this._sw._showText(token);\n                    }\n                    if (i !== blocks.length - 1) {\n                        x = tokenWidth + spaceWidth;\n                        xShift += x;\n                    }\n                }\n                if (xShift > 0) {\n                    this._sw._startNextLine(-xShift, 0);\n                }\n            }\n            finally {\n                if (format !== null && typeof format !== 'undefined') {\n                    format.firstLineIndent = firstLineIndent;\n                    format.paragraphIndent = paragraphIndent;\n                }\n            }\n        }\n    };\n    PdfGraphics.prototype._breakUnicodeLine = function (line, ttfFont, words) {\n        var tokens = [];\n        if (line !== null && typeof line !== 'undefined' && line.length > 0) {\n            words = line.split(null);\n            for (var i = 0; i < words.length; i++) {\n                var word = words[i]; //eslint-disable-line\n                var token = this._convertToUnicode(word, ttfFont);\n                tokens[Number.parseInt(i.toString(), 10)] = token;\n            }\n        }\n        return { tokens: tokens, words: words };\n    };\n    PdfGraphics.prototype._convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text !== null && typeof text !== 'undefined' && ttfFont !== null && typeof ttfFont !== 'undefined' &&\n            ttfFont._fontInternal instanceof _UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont._fontInternal._ttfReader;\n            ttfFont._setSymbols(text);\n            token = ttfReader._convertString(text);\n            var bytes = _stringToUnicodeArray(token);\n            token = _bytesToString(bytes);\n        }\n        return token;\n    };\n    PdfGraphics.prototype._getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && (typeof format !== 'undefined' && format !== null) && format.lineAlignment !== PdfVerticalAlignment.top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && (typeof format !== 'undefined' && format !== null) && format.alignment !== PdfTextAlignment.left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    PdfGraphics.prototype._getLineIndent = function (lineInfo, format, width, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo._lineType & _LineType.firstParagraphLine) > 0);\n        if (format && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (width > 0) ? Math.min(width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    PdfGraphics.prototype._drawAsciiLine = function (lineInfo, width, format, font) {\n        this._justifyLine(lineInfo, width, format, font);\n        var value = '';\n        if (lineInfo._text.indexOf('(') !== -1 || lineInfo._text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo._text.length; i++) {\n                if (lineInfo._text[Number.parseInt(i.toString(), 10)] === '(') {\n                    value += '\\\\\\('; // eslint-disable-line\n                }\n                else if (lineInfo._text[Number.parseInt(i.toString(), 10)] === ')') {\n                    value += '\\\\\\)'; // eslint-disable-line\n                }\n                else {\n                    value += lineInfo._text[Number.parseInt(i.toString(), 10)];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo._text;\n        }\n        this._sw._showNextLineText('(' + value + ')');\n    };\n    PdfGraphics.prototype._justifyLine = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var shouldJustify = this._shouldJustify(lineInfo, boundsWidth, format, font);\n        var hasWordSpacing = (format && format.wordSpacing !== 0);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            wordSpace = (boundsWidth - lineWidth) / whitespacesCount;\n            this._sw._setWordSpacing(wordSpace);\n        }\n        else if (format && format.alignment === PdfTextAlignment.justify) {\n            this._sw._setWordSpacing(0);\n        }\n        return wordSpace;\n    };\n    PdfGraphics.prototype._shouldJustify = function (lineInfo, boundsWidth, format, font) {\n        var line = lineInfo._text;\n        var lineWidth = lineInfo._width;\n        var justifyStyle = (format && format.alignment === PdfTextAlignment.justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var whitespacesCount = font._getCharacterCount(line, [' ', '\\t']);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== ' ');\n        var goodLineBreakStyle = ((lineInfo._lineType & _LineType.layoutBreak) > 0);\n        return (justifyStyle && goodWidth && hasSpaces && goodLineBreakStyle);\n    };\n    PdfGraphics.prototype._underlineStrikeoutText = function (brush, result, font, layoutRectangle, format) {\n        if (font.isUnderline || font.isStrikeout) {\n            var linePen = this._createUnderlineStrikeoutPen(brush, font);\n            if (typeof linePen !== 'undefined' && linePen !== null) {\n                var shift = this._getTextVerticalAlignShift(result._actualSize[1], layoutRectangle[3], format);\n                var underlineYOffset = layoutRectangle[1] + shift + font._metrics._getAscent(format) + 1.5 * linePen._width;\n                var strikeoutYOffset = layoutRectangle[1] + shift + font._metrics._getHeight(format) / 2 + 1.5 * linePen._width;\n                var lines = result._lines;\n                for (var i = 0; i < result._lineCount; i++) {\n                    var lineInfo = lines[Number.parseInt(i.toString(), 10)];\n                    var lineWidth = lineInfo._width;\n                    var hShift = this._getHorizontalAlignShift(lineWidth, layoutRectangle[2], format);\n                    var lineIndent = this._getLineIndent(lineInfo, format, layoutRectangle[2], (i === 0));\n                    var x1 = layoutRectangle[0] + hShift;\n                    var x2 = (!this._shouldJustify(lineInfo, layoutRectangle[2], format, font)) ?\n                        x1 + lineWidth - lineIndent :\n                        x1 + layoutRectangle[2] - lineIndent;\n                    if (font.isUnderline) {\n                        this.drawLine(linePen, x1, underlineYOffset, x2, underlineYOffset);\n                        underlineYOffset += result._lineHeight;\n                    }\n                    if (font.isStrikeout) {\n                        this.drawLine(linePen, x1, strikeoutYOffset, x2, strikeoutYOffset);\n                        strikeoutYOffset += result._lineHeight;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Draws a line on the page graphics.\n     *\n     * @param {PdfPen} pen The pen that determines the stroke color, width, and style of the line.\n     * @param {number} x1 The x-coordinate of the starting point of the line.\n     * @param {number} y1 The y-coordinate of the starting point of the line.\n     * @param {number} x2 The x-coordinate of the ending point of the line.\n     * @param {number} y2 The y-coordinate of the ending point of the line.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a line on the page graphics\n     * graphics.drawLine(pen, 10, 10, 100, 100);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.drawLine = function (pen, x1, y1, x2, y2) {\n        this._beginMarkContent();\n        this._stateControl(pen);\n        this._sw._beginPath(x1, y1);\n        this._sw._appendLineSegment(x2, y2);\n        this._sw._strokePath();\n        _addProcSet('PDF', this._resourceObject);\n        this._endMarkContent();\n    };\n    PdfGraphics.prototype._createUnderlineStrikeoutPen = function (brush, font) {\n        return new PdfPen(brush._color, font._metrics._size / 20);\n    };\n    PdfGraphics.prototype._checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = [x, y, textSize[0], textSize[0]];\n        if (format) {\n            switch (format.alignment) {\n                case PdfTextAlignment.center:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2] / 2;\n                    break;\n                case PdfTextAlignment.right:\n                    layoutedRectangle[0] = layoutedRectangle[0] - layoutedRectangle[2];\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.middle:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3] / 2;\n                    break;\n                case PdfVerticalAlignment.bottom:\n                    layoutedRectangle[1] = layoutedRectangle[1] - layoutedRectangle[3];\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    PdfGraphics.prototype._drawGraphicsPath = function (pen, brush, fillMode, needClosing) {\n        if (typeof fillMode === 'undefined') {\n            fillMode = PdfFillMode.winding;\n        }\n        var isBrush = (typeof brush !== 'undefined' && brush !== null);\n        var isPen = (typeof pen !== 'undefined' && pen !== null);\n        var isEvenOdd = fillMode === PdfFillMode.alternate;\n        if (isPen && isBrush) {\n            if (needClosing) {\n                this._sw._closeFillStrokePath(isEvenOdd);\n            }\n            else {\n                this._sw._fillStrokePath(isEvenOdd);\n            }\n        }\n        else if (!isPen && !isBrush) {\n            this._sw._endPath();\n        }\n        else if (isPen) {\n            if (needClosing) {\n                this._sw._closeStrokePath();\n            }\n            else {\n                this._sw._strokePath();\n            }\n        }\n        else {\n            if (needClosing) {\n                this._sw._closeFillPath(isEvenOdd);\n            }\n            else {\n                this._sw._fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype._initializeCoordinates = function (page) {\n        var cbox;\n        if (page) {\n            var location_1 = [0, 0];\n            var needTransformation = false;\n            if (page._pageDictionary.has('CropBox') && page._pageDictionary.has('MediaBox')) {\n                cbox = page._pageDictionary.getArray('CropBox');\n                var mbox = page._pageDictionary.getArray('MediaBox');\n                if (cbox[0] === mbox[0] && cbox[1] === mbox[1] && cbox[2] === mbox[2] && cbox[3] === mbox[3]) {\n                    needTransformation = true;\n                }\n                if (cbox[0] > 0 && cbox[3] > 0 && mbox[0] < 0 && mbox[1] < 0) {\n                    this.translateTransform(cbox[0], -cbox[3]);\n                    location_1[0] = -cbox[0];\n                    location_1[1] = cbox[3];\n                }\n                else if (!page._pageDictionary.has('CropBox')) {\n                    needTransformation = true;\n                }\n                if (needTransformation) {\n                    this._sw._writeComment('Change co-ordinate system to left/top.');\n                    if (this._cropBox) {\n                        this.translateTransform(this._cropBox[0], -this._cropBox[3]);\n                    }\n                    else {\n                        if (-(page._origin[1]) < this._mediaBoxUpperRightBound || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._sw._writeComment('Change co-ordinate system to left/top.');\n            if (this._mediaBoxUpperRightBound !== (-this._size[1])) {\n                if (this._cropBox) {\n                    cbox = this._cropBox;\n                    if (cbox[0] > 0 || cbox[1] > 0 || this._size[0] === cbox[2] || this._size[1] === cbox[3]) {\n                        this.translateTransform(cbox[0], -cbox[3]);\n                    }\n                    else {\n                        if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                            this.translateTransform(0, -this._size[1]);\n                        }\n                        else {\n                            this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                        }\n                    }\n                }\n                else {\n                    if (this._mediaBoxUpperRightBound === this._size[1] || this._mediaBoxUpperRightBound === 0) {\n                        this.translateTransform(0, -this._size[1]);\n                    }\n                    else {\n                        this.translateTransform(0, -this._mediaBoxUpperRightBound);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Represents a scale transform of the graphics.\n     *\n     * @param {number} scaleX Scale factor in the x direction.\n     * @param {number} scaleY Scale factor in the y direction.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply scale transform\n     * graphics.scaleTransform(0.5, 0.5);\n     * // Draw a string with the scaled transformation\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._scale(scaleX, scaleY);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a translate transform of the graphics.\n     *\n     * @param {number} x x-coordinate of the translation.\n     * @param {number} y y-coordinate of the translation.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply translate transform\n     * graphics.translateTransform(100, 100);\n     * // Draw a string with the translation applied\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.translateTransform = function (x, y) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._translate(x, -y);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a rotate transform of the graphics.\n     *\n     * @param {number} angle Angle of rotation in degrees.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Save the current graphics state\n     * let state: PdfGraphicsState = graphics.save();\n     * // Apply rotate transform\n     * graphics.rotateTransform(-90);\n     * // Draw a string with the rotation applied\n     * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Restore the graphics to its previous state\n     * graphics.restore(state);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new _PdfTransformationMatrix();\n        matrix._rotate(-angle);\n        this._sw._modifyCtm(matrix);\n        this._matrix._multiply(matrix);\n    };\n    /**\n     * Represents a clipping region of this graphics.\n     *\n     * @param {number[]} bounds Rectangle structure that represents the new clip region, specified as [x, y, width, height].\n     * @param {PdfFillMode} mode Member of the PdfFillMode enumeration that specifies the filling operation to use.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Set clipping region\n     * graphics.setClip([0, 0, 50, 12], PdfFillMode.alternate);\n     * // Draw a string within the clipping region\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setClip = function (bounds, mode) {\n        if (typeof mode === 'undefined') {\n            mode = PdfFillMode.winding;\n        }\n        this._sw._appendRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n        this._sw._clipPath(mode === PdfFillMode.alternate);\n    };\n    /**\n     * Sets the transparency for the graphics.\n     *\n     * @param {number} stroke The transparency value for strokes.\n     * @param {number} fill The transparency value for fills.\n     * @param {PdfBlendMode} mode The blend mode to use.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new font\n     * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // Set transparency\n     * graphics.setTransparency(0.5, 0.5, PdfBlendMode.multiply);\n     * // Draw the string\n     * graphics.drawString(\"Hello world!\", font, [0, 0, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.setTransparency = function (stroke, fill, mode) {\n        if (typeof fill === 'undefined') {\n            fill = stroke;\n        }\n        if (typeof mode === 'undefined') {\n            mode = PdfBlendMode.normal;\n        }\n        if (typeof this._transparencies === 'undefined') {\n            this._transparencies = new Map();\n        }\n        var transparencyKey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var transparencyData;\n        if (this._transparencies.size > 0) {\n            this._transparencies.forEach(function (value, key) {\n                if (value === transparencyKey) {\n                    transparencyData = key;\n                }\n            });\n        }\n        if (!transparencyData) {\n            transparencyData = new _TransparencyData();\n            var transparencyDict = new _PdfDictionary();\n            transparencyDict.update('CA', stroke);\n            transparencyDict.update('ca', fill);\n            transparencyDict.update('BM', _reverseMapBlendMode(mode));\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, transparencyDict);\n            transparencyData._dictionary = transparencyDict;\n            transparencyData._key = transparencyKey;\n            transparencyData._name = _PdfName.get(_getNewGuidString());\n            transparencyData._reference = ref;\n            var dictionary = void 0;\n            var isReference = false;\n            if (this._resourceObject.has('ExtGState')) {\n                var obj = this._resourceObject.getRaw('ExtGState'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined') {\n                    if (obj instanceof _PdfReference) {\n                        isReference = true;\n                        dictionary = this._crossReference._fetch(obj);\n                    }\n                    else if (obj instanceof _PdfDictionary) {\n                        dictionary = obj;\n                    }\n                }\n            }\n            else {\n                dictionary = new _PdfDictionary(this._crossReference);\n                this._resourceObject.update('ExtGState', dictionary);\n            }\n            dictionary.update(transparencyData._name.name, ref);\n            if (isReference) {\n                this._resourceObject._updated = true;\n            }\n            if (this._hasResourceReference) {\n                this._source._updated = true;\n            }\n        }\n        this._sw._setGraphicsState(transparencyData._name);\n    };\n    PdfGraphics.prototype._setTransparencyData = function (ref, name) {\n        this._resourceMap.set(ref, name);\n        var dictionary = this._crossReference._fetch(ref);\n        var stroke = 0;\n        var fill = 0;\n        var mode = 0;\n        if (dictionary) {\n            if (dictionary.has('CA')) {\n                stroke = dictionary.get('CA');\n            }\n            if (dictionary.has('ca')) {\n                fill = dictionary.get('ca');\n            }\n            if (dictionary.has('ca')) {\n                fill = dictionary.get('ca');\n            }\n            if (dictionary.has('BM')) {\n                mode = _mapBlendMode(dictionary.get('BM'));\n            }\n        }\n        var tkey = 'CA:' + stroke.toString() + '_ca:' + fill.toString() + '_BM:' + mode.toString();\n        var tdata = new _TransparencyData();\n        tdata._dictionary = dictionary;\n        tdata._key = tkey;\n        tdata._name = name;\n        tdata._reference = ref;\n        this._transparencies.set(tdata, tkey);\n    };\n    PdfGraphics.prototype._getTranslateTransform = function (x, y, input) {\n        input._translate(x, -y);\n        return input;\n    };\n    PdfGraphics.prototype._getScaleTransform = function (x, y, input) {\n        if (input === null || typeof input === 'undefined') {\n            input = new _PdfTransformationMatrix();\n        }\n        input._scale(x, y);\n        return input;\n    };\n    PdfGraphics.prototype._clipTranslateMargins = function (clipBounds) {\n        this._clipBounds = clipBounds;\n        this._sw._writeComment('Clip margins.');\n        this._sw._appendRectangle(clipBounds[0], clipBounds[1], clipBounds[2], clipBounds[3]);\n        this._sw._closePath();\n        this._sw._clipPath(false);\n        this._sw._writeComment('Translate co-ordinate system.');\n        this.translateTransform(clipBounds[0], clipBounds[1]);\n    };\n    PdfGraphics.prototype._skewTransform = function (angleX, angleY) {\n        var matrix = new _PdfTransformationMatrix();\n        this._getSkewTransform(angleX, angleY, matrix);\n        this._sw._modifyCtm(matrix);\n        matrix._multiply(matrix);\n    };\n    PdfGraphics.prototype._getSkewTransform = function (angleX, angleY, input) {\n        input._skew(-angleX, -angleY);\n        return input;\n    };\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\nvar _PdfTransformationMatrix = /** @class */ (function () {\n    function _PdfTransformationMatrix() {\n        this._matrix = new _Matrix(1, 0, 0, 1, 0, 0);\n    }\n    _PdfTransformationMatrix.prototype._translate = function (x, y) {\n        this._matrix._translate(x, y);\n    };\n    _PdfTransformationMatrix.prototype._scale = function (x, y) {\n        this._matrix._elements[0] = x;\n        this._matrix._elements[3] = y;\n    };\n    _PdfTransformationMatrix.prototype._rotate = function (angle) {\n        angle = (angle * Math.PI) / 180;\n        this._matrix._elements[0] = Math.cos(angle);\n        this._matrix._elements[1] = Math.sin(angle);\n        this._matrix._elements[2] = -Math.sin(angle);\n        this._matrix._elements[3] = Math.cos(angle);\n    };\n    _PdfTransformationMatrix.prototype._multiply = function (matrix) {\n        this._matrix._multiply(matrix._matrix);\n    };\n    _PdfTransformationMatrix.prototype._toString = function () {\n        var builder = '';\n        for (var i = 0, len = this._matrix._elements.length; i < len; i++) {\n            builder += _floatToString(this._matrix._elements[Number.parseInt(i.toString(), 10)]) + ' ';\n        }\n        return builder;\n    };\n    _PdfTransformationMatrix.prototype._skew = function (angleX, angleY) {\n        var tanA = Math.tan(this._degreeToRadians(angleX));\n        var tanB = Math.tan(this._degreeToRadians(angleY));\n        var skew = new _Matrix(1, tanA, tanB, 1, 0, 0);\n        this._matrix._multiply(skew);\n    };\n    _PdfTransformationMatrix.prototype._degreeToRadians = function (degreesX) {\n        var degreeRadFactor = Math.PI / 180;\n        return degreeRadFactor * degreesX;\n    };\n    return _PdfTransformationMatrix;\n}());\nexport { _PdfTransformationMatrix };\nvar _Matrix = /** @class */ (function () {\n    function _Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this._elements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this._elements = [arg1, arg2, arg3, arg4, arg5, arg6];\n        }\n        else {\n            this._elements = arg1;\n        }\n    }\n    Object.defineProperty(_Matrix.prototype, \"_offsetX\", {\n        get: function () {\n            return this._elements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_Matrix.prototype, \"_offsetY\", {\n        get: function () {\n            return this._elements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Matrix.prototype._clone = function () {\n        return new _Matrix(this._elements.slice());\n    };\n    _Matrix.prototype._translate = function (x, y) {\n        this._elements[4] = x;\n        this._elements[5] = y;\n    };\n    _Matrix.prototype._transform = function (points) {\n        var x = points[0];\n        var y = points[1];\n        var x2 = x * this._elements[0] + y * this._elements[2] + this._offsetX;\n        var y2 = x * this._elements[1] + y * this._elements[3] + this._offsetY;\n        return [x2, y2];\n    };\n    _Matrix.prototype._multiply = function (matrix) {\n        this._elements = [(this._elements[0] * matrix._elements[0] + this._elements[1] * matrix._elements[2]),\n            (this._elements[0] * matrix._elements[1] + this._elements[1] * matrix._elements[3]),\n            (this._elements[2] * matrix._elements[0] + this._elements[3] * matrix._elements[2]),\n            (this._elements[2] * matrix._elements[1] + this._elements[3] * matrix._elements[3]),\n            (this._offsetX * matrix._elements[0] + this._offsetY * matrix._elements[2] + matrix._offsetX),\n            (this._offsetX * matrix._elements[1] + this._offsetY * matrix._elements[3] + matrix._offsetY)];\n    };\n    return _Matrix;\n}());\nexport { _Matrix };\n/**\n * Represents a state of the graphics from a PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new font\n * let font: PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // Save the graphics state\n * let state: PdfGraphicsState = graphics.save();\n * // Set graphics translate transform\n * graphics.translateTransform(100, 100);\n * // Draw the string\n * graphics.drawString(\"Hello world!\", font, [10, 20, 100, 200], undefined, new PdfBrush([0, 0, 255]));\n * // Restore the graphics state\n * graphics.restore(state);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphicsState = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfGraphicsState` class.\n     *\n     * @private\n     * @param {PdfGraphics} graphics Graphics.\n     * @param {_PdfTransformationMatrix} matrix Matrix.\n     *\n     */\n    function PdfGraphicsState(graphics, matrix) {\n        if (graphics) {\n            this._g = graphics;\n            this._transformationMatrix = matrix;\n        }\n        this._charSpacing = 0;\n        this._wordSpacing = 0;\n        this._textScaling = 100;\n        this._textRenderingMode = _TextRenderingMode.fill;\n    }\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar _TransparencyData = /** @class */ (function () {\n    function _TransparencyData() {\n    }\n    return _TransparencyData;\n}());\nexport var _TextRenderingMode;\n(function (_TextRenderingMode) {\n    _TextRenderingMode[_TextRenderingMode[\"fill\"] = 0] = \"fill\";\n    _TextRenderingMode[_TextRenderingMode[\"stroke\"] = 1] = \"stroke\";\n    _TextRenderingMode[_TextRenderingMode[\"fillStroke\"] = 2] = \"fillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"none\"] = 3] = \"none\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFlag\"] = 4] = \"clipFlag\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFill\"] = 4] = \"clipFill\";\n    _TextRenderingMode[_TextRenderingMode[\"clipStroke\"] = 5] = \"clipStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clipFillStroke\"] = 6] = \"clipFillStroke\";\n    _TextRenderingMode[_TextRenderingMode[\"clip\"] = 7] = \"clip\";\n})(_TextRenderingMode || (_TextRenderingMode = {}));\n/**\n * Represents a brush for the PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new brush\n * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n * // Draw a rectangle using brush\n * graphics.drawRectangle(10, 10, 100, 100, brush);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBrush` class.\n     *\n     * @param {number[]} color Color.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new brush\n     * let brush: PdfBrush = new PdfBrush([0, 255, 255]);\n     * // Draw a rectangle using brush\n     * graphics.drawRectangle(10, 10, 100, 100, brush);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBrush(color) {\n        this._color = typeof color !== 'undefined' ? color : [0, 0, 0];\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n/**\n * Represents a pen for the PDF page.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create a new pen\n * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n * // Draw a rectangle using pen\n * graphics.drawRectangle(150, 50, 50, 50, pen);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPen` class.\n     *\n     * @param {number[]} color Color.\n     * @param {number} width Width.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Gets the graphics of the PDF page\n     * let graphics: PdfGraphics = page.graphics;\n     * // Create a new pen\n     * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n     * // Draw a rectangle using pen\n     * graphics.drawRectangle(150, 50, 50, 50, pen);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPen(color, width) {\n        this._color = color;\n        this._width = width;\n        this._dashOffset = 0;\n        this._dashPattern = [];\n        this._dashStyle = PdfDashStyle.solid;\n        this._miterLimit = 0;\n        this._lineCap = PdfLineCap.flat;\n        this._lineJoin = PdfLineJoin.miter;\n    }\n    return PdfPen;\n}());\nexport { PdfPen };\nvar _PdfUnitConvertor = /** @class */ (function () {\n    function _PdfUnitConvertor() {\n        this._horizontalResolution = 96;\n        this._proportions = this._updateProportions(this._horizontalResolution);\n    }\n    _PdfUnitConvertor.prototype._updateProportions = function (pixel) {\n        return [pixel / 2.54, pixel / 6.0, 1, pixel / 72.0, pixel, pixel / 300.0, pixel / 25.4];\n    };\n    _PdfUnitConvertor.prototype._convertUnits = function (value, from, to) {\n        return this._convertFromPixels(this._convertToPixels(value, from), to);\n    };\n    _PdfUnitConvertor.prototype._convertFromPixels = function (value, to) {\n        var index = to;\n        return (value / this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    _PdfUnitConvertor.prototype._convertToPixels = function (value, from) {\n        var index = from;\n        return (value * this._proportions[Number.parseInt(index.toString(), 10)]);\n    };\n    return _PdfUnitConvertor;\n}());\nexport { _PdfUnitConvertor };\n","import { _stringToBytes } from './../utils';\nvar _XmlWriter = /** @class */ (function () {\n    function _XmlWriter(isAppearance) {\n        if (isAppearance === void 0) { isAppearance = false; }\n        this._position = 0;\n        this._bufferText = '';\n        this._buffer = new Uint8Array(0);\n        this._namespaceStack = [];\n        this._elementStack = [];\n        if (!isAppearance) {\n            this._currentState = 'Initial';\n            this._namespaceStack.push(new _Namespace());\n            this._elementStack.push(new _XmlElement());\n            this._namespaceStack[0]._set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[1]._set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n            this._namespaceStack.push(new _Namespace());\n            this._namespaceStack[2]._set('', '', 'Implied');\n            this._elementStack[0]._set('', '', '', this._namespaceStack.length - 1);\n        }\n        else {\n            this._currentState = 'StartDocument';\n            this._skipNamespace = true;\n        }\n        this._attributeStack = [];\n    }\n    Object.defineProperty(_XmlWriter.prototype, \"buffer\", {\n        get: function () {\n            this._flush();\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _XmlWriter.prototype._writeStartDocument = function (standalone) {\n        if (this._currentState !== 'Initial' || typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._currentState = 'StartDocument';\n        this._rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (typeof standalone !== 'undefined' && standalone !== null) {\n            this._rawText('\" standalone=\"');\n            this._rawText(standalone ? 'yes' : 'no');\n        }\n        this._rawText('\"?>');\n    };\n    _XmlWriter.prototype._writeStartElement = function (localName, prefix, namespace) {\n        if (typeof this._buffer === 'undefined') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this._checkName(localName);\n        if (this._currentState === 'Initial') {\n            this._writeStartDocument();\n        }\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n        }\n        this._currentState = 'StartElement';\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                prefix = this._lookupPrefix(namespace);\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null || (typeof namespace !== 'undefined' && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            namespace = this._lookupNamespace(prefix);\n        }\n        this._writeStartElementInternal(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndElement = function () {\n        if (this._currentState === 'StartElement') {\n            this._startElementContent();\n            this._currentState = 'ElementContent';\n        }\n        else if (this._currentState === 'ElementContent') {\n            this._currentState = 'ElementContent';\n        }\n        this._currentState = 'EndElement';\n        var top = this._elementStack.length - 1;\n        this._writeEndElementInternal(this._elementStack[Number.parseInt(top.toString(), 10)]._prefix, this._elementStack[Number.parseInt(top.toString(), 10)]._localName);\n        this._namespaceStack.splice(this._elementStack[Number.parseInt(top.toString(), 10)]._previousTop + 1);\n        this._elementStack.splice(top);\n        // if (this._bufferText.length > 10240) {\n        //     this._flush();\n        // }\n    };\n    _XmlWriter.prototype._writeElementString = function (localName, value, prefix, namespace) {\n        this._writeStartElement(localName, prefix, namespace);\n        if (typeof value !== 'undefined' && value !== null && value.length !== 0) {\n            this._writeString(value);\n        }\n        this._writeEndElement();\n    };\n    _XmlWriter.prototype._writeAttributeString = function (localName, value, prefix, namespace) {\n        this._writeStartAttribute(localName, value, prefix, namespace);\n        this._writeStringInternal(value, true);\n        this._writeEndAttribute();\n    };\n    _XmlWriter.prototype._writeString = function (text) {\n        this._writeInternal(text, false);\n    };\n    _XmlWriter.prototype._writeRaw = function (text) {\n        this._writeInternal(text, true);\n    };\n    _XmlWriter.prototype._writeInternal = function (text, isRawString) {\n        if (text !== null && typeof text !== 'undefined') {\n            if (this._currentState !== 'StartElement' && this._currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this._currentState === 'StartElement') {\n                this._startElementContent();\n            }\n            this._currentState = 'ElementContent';\n            if (isRawString) {\n                this._rawText(text);\n            }\n            else {\n                this._writeStringInternal(text, false);\n            }\n        }\n    };\n    _XmlWriter.prototype._save = function () {\n        while (this._elementStack.length - 1 > 0) {\n            this._writeEndElement();\n        }\n        if (this._bufferText !== '') {\n            this._flush();\n        }\n        return this._buffer;\n    };\n    _XmlWriter.prototype._destroy = function () {\n        this._buffer = undefined;\n        for (var i = 0; i < this._namespaceStack.length; i++) {\n            this._namespaceStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._namespaceStack = [];\n        for (var i = 0; i < this._elementStack.length; i++) {\n            this._elementStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._elementStack = [];\n        this._bufferText = '';\n        this._position = 0;\n    };\n    _XmlWriter.prototype._flush = function () {\n        if (this._buffer && this._bufferText && this._bufferText !== '') {\n            if (this._buffer.length > 0) {\n                var buffer = new Array(this._bufferText.length);\n                for (var i = 0; i < this._bufferText.length; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = this._bufferText.charCodeAt(i) & 0xff;\n                }\n                var array = new Uint8Array(this._buffer.length + buffer.length);\n                array.set(this._buffer);\n                array.set(buffer, this._buffer.length);\n                this._buffer = array;\n            }\n            else {\n                this._buffer = _stringToBytes(this._bufferText);\n            }\n            this._bufferText = '';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttribute = function (localName, value, prefix, namespace) {\n        if (typeof localName === 'undefined' || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this._currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this._checkName(localName);\n        this._writeStartAttributePrefixAndNameSpace(localName, value, prefix, namespace);\n    };\n    _XmlWriter.prototype._writeStartAttributePrefixAndNameSpace = function (localName, value, prefix, namespace) {\n        if (typeof prefix === 'undefined' || prefix === null) {\n            if (typeof namespace !== 'undefined' && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this._lookupPrefix(namespace);\n                }\n            }\n            if (typeof prefix === 'undefined' || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (typeof namespace === 'undefined' || namespace === null) {\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n                namespace = this._lookupNamespace(prefix);\n            }\n            if (typeof namespace === 'undefined' || namespace === null) {\n                namespace = '';\n            }\n        }\n        this._writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    _XmlWriter.prototype._writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this._skipPushAndWrite(prefix, localName, namespace);\n                this._pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this._lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this._skipPushAndWrite(prefix, localName, namespace);\n                    this._pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this._skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n            this._pushNamespaceImplicit(prefix, namespace);\n        }\n        this._skipPushAndWrite(prefix, localName, namespace);\n    };\n    _XmlWriter.prototype._writeEndAttribute = function () {\n        this._currentState = 'StartElement';\n        this._bufferText += '\"';\n    };\n    _XmlWriter.prototype._writeStartElementInternal = function (prefix, localName, namespace) {\n        this._bufferText += '<';\n        if (prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        var top = this._elementStack.length;\n        this._elementStack.push(new _XmlElement());\n        this._elementStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespace, this._namespaceStack.length - 1);\n        this._pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this._attributeStack.length; i++) {\n            this._attributeStack[Number.parseInt(i.toString(), 10)]._destroy();\n        }\n        this._attributeStack = [];\n    };\n    _XmlWriter.prototype._writeEndElementInternal = function (prefix, localName) {\n        if (this._position !== this._bufferText.length + 1) {\n            this._bufferText += '</';\n            if (typeof prefix !== 'undefined' && prefix !== null && prefix.length !== 0) {\n                this._rawText(prefix);\n                this._bufferText += ':';\n            }\n            this._rawText(localName);\n            this._bufferText += '>';\n        }\n        else {\n            this._bufferText = this._bufferText.substring(0, this._bufferText.length - 1);\n            this._bufferText += ' />';\n        }\n    };\n    _XmlWriter.prototype._writeStartAttributeInternal = function (prefix, localName) {\n        this._bufferText += ' ';\n        if (typeof prefix !== 'undefined' && prefix !== null && prefix.length > 0) {\n            this._rawText(prefix);\n            this._bufferText += ':';\n        }\n        this._rawText(localName);\n        this._bufferText += '=\"';\n    };\n    _XmlWriter.prototype._writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        if (!this._skipNamespace) {\n            this._writeStartNamespaceDeclaration(prefix);\n            this._writeStringInternal(namespaceUri, true);\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStartNamespaceDeclaration = function (prefix) {\n        if (typeof prefix === 'undefined' || prefix === null || prefix.length === 0) {\n            this._rawText(' xmlns=\"');\n        }\n        else {\n            this._rawText(' xmlns:');\n            this._rawText(prefix);\n            this._bufferText += '=';\n            this._bufferText += '\"';\n        }\n    };\n    _XmlWriter.prototype._writeStringInternal = function (text, inAttributeValue) {\n        if (typeof text === 'undefined' || text === null) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;'); // eslint-disable-line\n        text = text.replace(/\\</g, '&lt;'); // eslint-disable-line\n        text = text.replace(/\\>/g, '&gt;'); // eslint-disable-line\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;'); // eslint-disable-line\n        }\n        this._bufferText += text;\n        if (!inAttributeValue) {\n            this._position = 0;\n        }\n    };\n    _XmlWriter.prototype._startElementContent = function () {\n        var start = this._elementStack[this._elementStack.length - 1]._previousTop;\n        for (var i = this._namespaceStack.length - 1; i > start; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._kind === 'NeedToWrite') {\n                this._writeNamespaceDeclaration(this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix, this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri);\n            }\n        }\n        this._bufferText += '>';\n        this._position = this._bufferText.length + 1;\n    };\n    _XmlWriter.prototype._rawText = function (text) {\n        this._bufferText += text;\n    };\n    _XmlWriter.prototype._addNamespace = function (prefix, ns, kind) {\n        var top = this._namespaceStack.length;\n        this._namespaceStack.push(new _Namespace());\n        this._namespaceStack[Number.parseInt(top.toString(), 10)]._set(prefix, ns, kind);\n    };\n    _XmlWriter.prototype._lookupPrefix = function (namespace) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri === namespace) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespace = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return this._namespaceStack[Number.parseInt(i.toString(), 10)]._namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    _XmlWriter.prototype._lookupNamespaceIndex = function (prefix) {\n        for (var i = this._namespaceStack.length - 1; i >= 0; i--) {\n            if (this._namespaceStack[Number.parseInt(i.toString(), 10)]._prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    _XmlWriter.prototype._pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        var isValid = true;\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                isValid = false;\n            }\n            else {\n                if (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._namespaceUri === ns) ?\n                        'Implied' :\n                        'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        if (isValid) {\n            this._addNamespace(prefix, ns, kind);\n        }\n    };\n    _XmlWriter.prototype._pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this._lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this._elementStack[this._elementStack.length - 1]._previousTop) {\n                this._namespaceStack[Number.parseInt(existingNsIndex.toString(), 10)]._kind = 'Written';\n                return;\n            }\n        }\n        this._addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    _XmlWriter.prototype._addAttribute = function (prefix, localName, namespaceName) {\n        var top = this._attributeStack.length;\n        this._attributeStack.push(new _XmlAttribute());\n        this._attributeStack[Number.parseInt(top.toString(), 10)]._set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this._attributeStack[Number.parseInt(i.toString(), 10)]._isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    _XmlWriter.prototype._skipPushAndWrite = function (prefix, localName, namespace) {\n        this._addAttribute(prefix, localName, namespace);\n        this._writeStartAttributeInternal(prefix, localName);\n    };\n    _XmlWriter.prototype._checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/; // eslint-disable-line\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return _XmlWriter;\n}());\nexport { _XmlWriter };\nvar _Namespace = /** @class */ (function () {\n    function _Namespace() {\n    }\n    _Namespace.prototype._set = function (prefix, namespaceUri, kind) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._kind = kind;\n    };\n    _Namespace.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._kind = undefined;\n    };\n    return _Namespace;\n}());\nexport { _Namespace };\nvar _XmlElement = /** @class */ (function () {\n    function _XmlElement() {\n    }\n    _XmlElement.prototype._set = function (prefix, localName, namespaceUri, previousTop) {\n        this._previousTop = previousTop;\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlElement.prototype._destroy = function () {\n        this._previousTop = undefined;\n        this._prefix = undefined;\n        this._localName = undefined;\n        this._namespaceUri = undefined;\n    };\n    return _XmlElement;\n}());\nexport { _XmlElement };\nvar _XmlAttribute = /** @class */ (function () {\n    function _XmlAttribute() {\n    }\n    _XmlAttribute.prototype._set = function (prefix, localName, namespaceUri) {\n        this._prefix = prefix;\n        this._namespaceUri = namespaceUri;\n        this._localName = localName;\n    };\n    _XmlAttribute.prototype._isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this._localName === localName) && ((this._prefix === prefix) || (this._namespaceUri === namespaceUri)));\n    };\n    _XmlAttribute.prototype._destroy = function () {\n        this._prefix = undefined;\n        this._namespaceUri = undefined;\n        this._localName = undefined;\n    };\n    return _XmlAttribute;\n}());\nexport { _XmlAttribute };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { PdfAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfDocumentLinkAnnotation, PdfUriAnnotation } from './../annotations/annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { _hexStringToByteArray, _stringToAnnotationFlags, _convertToColor, _bytesToString, _hexStringToString, _getSpecialCharacter, _getLatinCharacter, _getInheritableProperty, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _encode, _compressStream } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField, PdfListField } from './../form/field';\nvar _ExportHelper = /** @class */ (function () {\n    function _ExportHelper() {\n        this._asPerSpecification = false;\n        this._fileName = '';\n        this._formKey = '';\n        this._exportEmptyFields = false;\n        this._groupReferences = new Map();\n        this._groupHolders = [];\n        this._richTextPrefix = '<?xml version=\"1.0\"?>';\n        this._table = new Map(); // eslint-disable-line\n        this._fields = new Map();\n        this._richTextValues = new Map();\n        this._jsonData = [];\n        this._openingBrace = 123;\n        this._openingBracket = 91;\n        this._closingBrace = 125;\n        this._closingBracket = 93;\n        this._colon = 58;\n        this._doubleQuotes = 34;\n        this._comma = 44;\n        this._space = 32;\n        this.fdfString = '';\n        this._xmlImport = false;\n    }\n    _ExportHelper.prototype._exportFormFieldsData = function (field) {\n        var textValue = '';\n        if (field !== null && typeof field !== 'undefined' && field.export) {\n            var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n            if (type && type.name !== null && typeof type.name !== 'undefined') {\n                var font = this._getEncodedFontDictionary(field._dictionary);\n                var fieldName = field.name;\n                if (font !== null && typeof font !== 'undefined') {\n                    fieldName = this._getEncodedValue(fieldName, font);\n                }\n                var value = void 0; // eslint-disable-line\n                var selectedValue = void 0;\n                switch (type.name) {\n                    case 'Tx':\n                        textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Ch':\n                        value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                textValue = selectedValue;\n                                this._table.set(fieldName, textValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                                return values;\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            textValue = '';\n                            this._table.set(fieldName, textValue);\n                        }\n                        break;\n                    case 'Btn':\n                        value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                        if (value !== null && typeof value !== 'undefined') {\n                            var text = this._getExportValue(value, field);\n                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                var radioButton = void 0;\n                                if (field instanceof PdfRadioButtonListField) {\n                                    radioButton = field;\n                                }\n                                if (!field._dictionary.has('Opt') ||\n                                    (radioButton !== null &&\n                                        typeof radioButton !== 'undefined'\n                                        && radioButton.selectedIndex === -1)) {\n                                    text = this._getEncodedValue(text, font);\n                                    textValue = text;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else {\n                                    if (field._dictionary.has('Opt')) {\n                                        var options = field._dictionary.getArray('Opt');\n                                        var index = Number.parseInt(text, 10);\n                                        if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                            index = 0;\n                                        }\n                                        if (options !== null && typeof options !== 'undefined') {\n                                            var current = void 0;\n                                            if (radioButton) {\n                                                current = options[radioButton.selectedIndex];\n                                            }\n                                            else {\n                                                current = options[Number.parseInt(index.toString(), 10)];\n                                            }\n                                            if (current !== null && typeof current !== 'undefined') {\n                                                text = current;\n                                            }\n                                            if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                                text = this._getEncodedValue(text, font);\n                                                textValue = text;\n                                                this._table.set(fieldName, textValue);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                                if (this._exportEmptyFields) {\n                                    textValue = text;\n                                }\n                                else {\n                                    textValue = 'Off';\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else {\n                            if (field instanceof PdfRadioButtonListField) {\n                                textValue = field._getAppearanceStateValue();\n                                if (!textValue) {\n                                    if (this._exportEmptyFields) {\n                                        textValue = '';\n                                    }\n                                    else {\n                                        textValue = 'Off';\n                                    }\n                                }\n                                this._table.set(fieldName, textValue);\n                            }\n                            else {\n                                var widget = field.itemAt(field._defaultIndex);\n                                var dictionary = void 0;\n                                if (widget) {\n                                    dictionary = widget._dictionary;\n                                }\n                                else {\n                                    dictionary = field._dictionary;\n                                }\n                                if (dictionary && dictionary.has('AS')) {\n                                    textValue = dictionary.get('AS').name;\n                                    this._table.set(fieldName, textValue);\n                                }\n                                else if (this._exportEmptyFields) {\n                                    textValue = '';\n                                    this._table.set(fieldName, textValue);\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n        return textValue;\n    };\n    _ExportHelper.prototype._exportFormFieldData = function (field) {\n        var type = _getInheritableProperty(field._dictionary, 'FT', false, true, 'Parent');\n        if (type && type.name !== null && typeof type.name !== 'undefined') {\n            var font = this._getEncodedFontDictionary(field._dictionary);\n            var fieldName = field.name;\n            if (font !== null && typeof font !== 'undefined') {\n                fieldName = this._getEncodedValue(fieldName, font);\n            }\n            var textValue = void 0;\n            var value = void 0; // eslint-disable-line\n            switch (type.name) {\n                case 'Tx':\n                    textValue = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field._dictionary.has('RV')) {\n                            textValue = _getInheritableProperty(field._dictionary, 'RV', false, true, 'Parent');\n                            if (textValue !== null && typeof textValue !== 'undefined') {\n                                textValue += this._key;\n                                this._formKey = this._key;\n                                this._table.set(fieldName, textValue);\n                            }\n                        }\n                        else if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            var replaceValue = textValue;\n                            if (field instanceof PdfTextBoxField && field.multiLine) {\n                                replaceValue = replaceValue.replace('\\n', '');\n                                replaceValue = replaceValue.replace('\\r', '\\r\\n');\n                                textValue = replaceValue;\n                            }\n                            this._table.set(fieldName, textValue);\n                        }\n                    }\n                    else {\n                        if (textValue !== null && typeof textValue !== 'undefined') {\n                            textValue = this._getEncodedValue(textValue, font);\n                            this._table.set(fieldName, textValue);\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Ch':\n                    value = _getInheritableProperty(field._dictionary, 'V', true, true, 'Parent');\n                    if (this._asPerSpecification) {\n                        if (field instanceof PdfListField) {\n                            if (Array.isArray(value)) {\n                                this._table.set(fieldName, value);\n                            }\n                            else {\n                                if (typeof value === 'string') {\n                                    value = this._getEncodedValue(value, font);\n                                    this._table.set(fieldName, value);\n                                }\n                                else if ((value === null || typeof value === 'undefined') && field._dictionary.has('I')) {\n                                    var selectedValue = field._obtainSelectedValue();\n                                    if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                                        if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                            selectedValue = this._getEncodedValue(selectedValue, font);\n                                            this._table.set(fieldName, textValue);\n                                        }\n                                        else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                            var values = [];\n                                            for (var i = 0; i < selectedValue.length; i++) {\n                                                values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                            }\n                                            this._table.set(fieldName, values);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var selectedValue = void 0;\n                        if (value !== null && typeof value !== 'undefined') {\n                            selectedValue = this._getExportValue(value);\n                        }\n                        if (!value && field._dictionary.has('I') && (field instanceof PdfListBoxField || field instanceof PdfComboBoxField)) {\n                            selectedValue = field._obtainSelectedValue();\n                        }\n                        if (selectedValue !== null && typeof selectedValue !== 'undefined') {\n                            if (typeof selectedValue === 'string' && selectedValue !== '') {\n                                selectedValue = this._getEncodedValue(selectedValue, font);\n                                this._table.set(fieldName, selectedValue);\n                            }\n                            else if (selectedValue instanceof Array && selectedValue.length > 0) {\n                                var values = [];\n                                for (var i = 0; i < selectedValue.length; i++) {\n                                    values.push(this._getEncodedValue(selectedValue[Number.parseInt(i.toString(), 10)], font));\n                                }\n                                this._table.set(fieldName, values);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                        else if (this._exportEmptyFields) {\n                            this._table.set(fieldName, '');\n                        }\n                    }\n                    break;\n                case 'Btn':\n                    value = _getInheritableProperty(field._dictionary, 'V', false, true, 'Parent');\n                    if (value !== null && typeof value !== 'undefined') {\n                        var text = this._getExportValue(value, field);\n                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                            if (this._asPerSpecification && this._format !== 'XML') {\n                                text = _hexStringToString(text);\n                            }\n                            var radioButton = void 0;\n                            if (field instanceof PdfRadioButtonListField) {\n                                radioButton = field;\n                            }\n                            if (!field._dictionary.has('Opt') ||\n                                (radioButton !== null &&\n                                    typeof radioButton !== 'undefined'\n                                    && radioButton.selectedIndex === -1)) {\n                                text = this._getEncodedValue(text, font);\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                if (field._dictionary.has('Opt')) {\n                                    var options = field._dictionary.getArray('Opt');\n                                    var index = Number.parseInt(text, 10);\n                                    if (index === null || typeof index === 'undefined' || Number.isNaN(index)) {\n                                        index = 0;\n                                    }\n                                    if (options !== null && typeof options !== 'undefined') {\n                                        var current = void 0;\n                                        if (radioButton) {\n                                            current = options[radioButton.selectedIndex];\n                                        }\n                                        else {\n                                            current = options[Number.parseInt(index.toString(), 10)];\n                                        }\n                                        if (current !== null && typeof current !== 'undefined') {\n                                            text = current;\n                                        }\n                                        if (text !== null && typeof text !== 'undefined' && text !== '') {\n                                            text = this._getEncodedValue(text, font);\n                                            this._table.set(fieldName, text);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            if (this._exportEmptyFields) {\n                                this._table.set(fieldName, text);\n                            }\n                            else {\n                                this._table.set(fieldName, 'Off');\n                            }\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfRadioButtonListField) {\n                            var text = field._getAppearanceStateValue();\n                            if (!text) {\n                                if (this._exportEmptyFields) {\n                                    text = '';\n                                }\n                                else {\n                                    text = 'Off';\n                                }\n                            }\n                            this._table.set(fieldName, text);\n                        }\n                        else {\n                            var widget = field.itemAt(field._defaultIndex);\n                            var dictionary = void 0;\n                            if (widget) {\n                                dictionary = widget._dictionary;\n                            }\n                            else {\n                                dictionary = field._dictionary;\n                            }\n                            if (dictionary && dictionary.has('AS')) {\n                                this._table.set(fieldName, dictionary.get('AS').name);\n                            }\n                            else if (this._exportEmptyFields) {\n                                this._table.set(fieldName, '');\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    _ExportHelper.prototype._getAnnotationType = function (dictionary) {\n        var type = '';\n        if (dictionary && dictionary.has('Subtype')) {\n            var subtype = dictionary.get('Subtype');\n            if (subtype) {\n                type = subtype.name;\n            }\n        }\n        return type;\n    };\n    _ExportHelper.prototype._getValue = function (primitive, isJson) {\n        if (isJson === void 0) { isJson = false; }\n        var value = '';\n        if (typeof primitive !== 'undefined' && primitive !== null) {\n            if (primitive instanceof _PdfName) {\n                value = primitive.name;\n            }\n            else if (typeof primitive === 'boolean') {\n                value = primitive ? isJson ? 'true' : 'yes' : isJson ? 'false' : 'no';\n            }\n            else if (typeof primitive === 'string') {\n                value = this._getValidString(primitive);\n            }\n            else if (Array.isArray(primitive)) {\n                var colorArray = primitive; // eslint-disable-line\n                if (colorArray.length > 0) {\n                    value = this._getValue(colorArray[0], isJson);\n                }\n                for (var i = 1; i < colorArray.length; i++) {\n                    value += ',' + this._getValue(colorArray[Number.parseInt(i.toString(), 10)], isJson);\n                }\n            }\n            else if (typeof primitive === 'number') {\n                value = primitive.toString();\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getColor = function (primitive) {\n        var color = '';\n        if (primitive && Array.isArray(primitive) && primitive.length >= 3) {\n            var r = Math.round(primitive[0] * 255).toString(16).toUpperCase();\n            var g = Math.round(primitive[1] * 255).toString(16).toUpperCase();\n            var b = Math.round(primitive[2] * 255).toString(16).toUpperCase();\n            color = '#' + (r.length === 1 ? ('0' + r) : r) + (g.length === 1 ? ('0' + g) : g) + (b.length === 1 ? ('0' + b) : b);\n        }\n        return color;\n    };\n    _ExportHelper.prototype._getValidString = function (value) {\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    _ExportHelper.prototype._getEncodedFontDictionary = function (source) {\n        var font;\n        var kids; // eslint-disable-line\n        if (source.has('Kids') && !source.has('AP')) {\n            kids = source.getArray('Kids');\n        }\n        if (source.has('AP') || (kids !== null && typeof kids !== 'undefined' && Array.isArray(kids))) {\n            var appearance = void 0;\n            if (kids !== null && typeof kids !== 'undefined' && kids.length > 0) {\n                var kid = kids[0];\n                if (kid !== null && typeof kid !== 'undefined' && kid.has('AP')) {\n                    appearance = kid.get('AP');\n                }\n            }\n            else {\n                appearance = source.get('AP');\n            }\n            if (appearance !== null && typeof appearance !== 'undefined' && appearance.has('N')) {\n                var normal = appearance.get('N');\n                if (normal !== null && typeof normal !== 'undefined' && normal instanceof _PdfBaseStream && normal.dictionary.has('Resources')) {\n                    var resource = normal.dictionary.get('Resources');\n                    if (resource !== null && typeof resource !== 'undefined' && resource.has('Font')) {\n                        font = resource.get('Font');\n                    }\n                }\n            }\n        }\n        return font;\n    };\n    _ExportHelper.prototype._getEncodedValue = function (value, dictionary) {\n        var _this = this;\n        var text = value;\n        var structure;\n        if (this._encodeDictionary !== null && typeof this._encodeDictionary !== 'undefined') {\n            structure = new _FontStructure(this._encodeDictionary);\n            return this._replaceNotUsedCharacters(text, structure);\n        }\n        else {\n            var root = this._document.form._dictionary;\n            if (root !== null && typeof root !== 'undefined' && root.has('DR')) {\n                var resource = root.get('DR');\n                if (resource !== null && typeof resource !== 'undefined' && resource.has('Encoding')) {\n                    var encoding = resource.get('Encoding');\n                    if (encoding !== null && typeof encoding !== 'undefined' && encoding.has('PDFDocEncoding')) {\n                        var pdfEncoding = encoding.get('PDFDocEncoding');\n                        if (pdfEncoding !== null && typeof pdfEncoding !== 'undefined' && pdfEncoding.has('Differences')) {\n                            var encodingDictionary = new _PdfDictionary(this._crossReference);\n                            encodingDictionary.set('Differences', pdfEncoding.get('Differences'));\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, encodingDictionary);\n                            var fontEncodeDictionary = new _PdfDictionary(this._crossReference);\n                            fontEncodeDictionary.set('Subtype', _PdfName.get('Type1'));\n                            fontEncodeDictionary.set('Encoding', reference);\n                            structure = new _FontStructure(fontEncodeDictionary);\n                            if (structure !== null &&\n                                typeof structure !== 'undefined' &&\n                                structure.differencesDictionary !== null &&\n                                typeof structure.differencesDictionary !== 'undefined' &&\n                                structure.differencesDictionary.size > 0) {\n                                this._encodeDictionary = fontEncodeDictionary;\n                                return this._replaceNotUsedCharacters(text, structure);\n                            }\n                        }\n                    }\n                }\n            }\n            if (value !== null &&\n                typeof value !== 'undefined' &&\n                dictionary !== null &&\n                typeof dictionary !== 'undefined' &&\n                dictionary.size > 0) {\n                var result_1;\n                var isSkip_1 = false;\n                dictionary.forEach(function (key, value) {\n                    if (!isSkip_1 && value !== null && typeof value !== 'undefined') {\n                        var fontDictionary = void 0;\n                        if (value instanceof _PdfDictionary) {\n                            fontDictionary = value;\n                        }\n                        else if (value instanceof _PdfReference) {\n                            var holder = _this._crossReference._fetch(value); // eslint-disable-line\n                            if (holder !== null && typeof holder !== 'undefined' && holder instanceof _PdfDictionary) {\n                                fontDictionary = holder;\n                            }\n                        }\n                        if (fontDictionary) {\n                            structure = new _FontStructure(fontDictionary);\n                            result_1 = _this._replaceNotUsedCharacters(text, structure);\n                            isSkip_1 = true;\n                        }\n                    }\n                });\n                if (!isSkip_1) {\n                    return result_1;\n                }\n            }\n            return text;\n        }\n    };\n    _ExportHelper.prototype._replaceNotUsedCharacters = function (input, structure) {\n        var updatedString = '';\n        var differencesDictionary = structure.differencesDictionary;\n        for (var i = 0; i < input.length; i++) {\n            var text = input[Number.parseInt(i.toString(), 10)];\n            var code = input.charCodeAt(i);\n            if (differencesDictionary.has(text)) {\n                var difference = differencesDictionary.get(text);\n                if ((difference.length > 1 && structure._fontType !== 'Type3') ||\n                    (code > 127 && code <= 255 && structure._fontType === 'Type1' &&\n                        structure._baseFontEncoding !== 'WinAnsiEncoding' &&\n                        structure._fontEncoding === 'Encoding' && structure._fontName === 'ZapfDingbats')) {\n                    updatedString += text;\n                }\n                else {\n                    updatedString += difference;\n                }\n            }\n            else {\n                updatedString += text;\n            }\n        }\n        return updatedString;\n    };\n    _ExportHelper.prototype._getExportValue = function (primitive, field) {\n        var value;\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (field !== null && typeof field !== 'undefined') {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                if (value !== null &&\n                    typeof value !== 'undefined' &&\n                    value !== '' &&\n                    field instanceof PdfRadioButtonListField &&\n                    field.selectedIndex !== -1) {\n                    var item = field.itemAt(field.selectedIndex);\n                    if (item !== null && typeof item !== 'undefined' && item.value === value) {\n                        value = item.value;\n                    }\n                }\n            }\n            else {\n                if (primitive instanceof _PdfName) {\n                    value = primitive.name;\n                }\n                else if (typeof primitive === 'string') {\n                    value = primitive;\n                }\n                else if (Array.isArray(primitive)) {\n                    var values = [];\n                    for (var i = 0; i < primitive.length; i++) {\n                        var element = primitive[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (element instanceof _PdfName) {\n                            values.push(element.name);\n                        }\n                        else if (typeof element === 'string') {\n                            values.push(element);\n                        }\n                    }\n                    return values;\n                }\n            }\n        }\n        return value;\n    };\n    _ExportHelper.prototype._addReferenceToGroup = function (reference, dictionary) {\n        var name = dictionary.get('NM');\n        if (name && name !== '') {\n            this._groupReferences.set(name, reference);\n            if (dictionary.has('IRT')) {\n                this._groupHolders.push(dictionary);\n            }\n        }\n        else if (!name && dictionary.has('IRT')) {\n            name = dictionary.get('IRT');\n            if (name && name !== '' && this._groupReferences.has(name)) {\n                dictionary.update('IRT', this._groupReferences.get(name));\n            }\n        }\n    };\n    _ExportHelper.prototype._handlePopup = function (annotations, reference, annotationDictionary, pageDictionary) {\n        if (annotationDictionary && annotationDictionary.has('Popup')) {\n            var popupReference = annotationDictionary.getRaw('Popup');\n            var popup = annotationDictionary.get('Popup');\n            if (popup && popup instanceof _PdfDictionary) {\n                if (popupReference && popup) {\n                    popup.update('Parent', reference);\n                }\n                var popupAnnotation = annotations._parseAnnotation(popup);\n                var index = annotations._annotations.length;\n                annotations._annotations.push(reference);\n                pageDictionary.set('Annots', annotations._annotations);\n                pageDictionary._updated = true;\n                annotations._parsedAnnotations.set(index, popupAnnotation);\n            }\n        }\n    };\n    _ExportHelper.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._fields.forEach(function (value, key) {\n                var richTextValue;\n                if (_this._richTextValues.size > 0 && _this._richTextValues.has(key)) {\n                    richTextValue = _this._richTextValues.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (richTextValue && richTextValue !== '') {\n                            field._dictionary.update('RV', richTextValue);\n                        }\n                        _this._importFieldData(field, value);\n                    }\n                }\n            });\n        }\n    };\n    _ExportHelper.prototype._importFieldData = function (field, values) {\n        if (values !== null &&\n            typeof values !== 'undefined' &&\n            values.length > 0 &&\n            field !== null &&\n            typeof field !== 'undefined' &&\n            !field.readOnly) {\n            var value = values[0];\n            if (field instanceof PdfTextBoxField) {\n                if (value !== null && typeof value !== 'undefined') {\n                    if (field instanceof PdfTextBoxField && field.multiLine) {\n                        value = value.replace('\\r\\n', '\\r');\n                        value = value.replace('\\n', '\\r');\n                    }\n                    field.text = value;\n                }\n            }\n            else if (field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                var selectedValues_1;\n                if (values.length > 1) {\n                    selectedValues_1 = values;\n                }\n                else {\n                    if (this._xmlImport) {\n                        selectedValues_1 = (value.indexOf(',') !== -1 ? value.split(',') : [value]);\n                    }\n                    else {\n                        selectedValues_1 = [value.indexOf(',') !== -1 ? value.split(',')[0] : value];\n                    }\n                }\n                var indexes_1 = [];\n                var options_1 = field._options;\n                if (options_1 && options_1.length > 0) {\n                    options_1.forEach(function (option) {\n                        if (selectedValues_1.indexOf(option[0]) !== -1 || selectedValues_1.indexOf(option[1]) !== -1) {\n                            indexes_1.push(options_1.indexOf(option));\n                        }\n                    });\n                }\n                if (indexes_1.length > 0) {\n                    field.selectedIndex = indexes_1;\n                    if (field instanceof PdfComboBoxField && this._asPerSpecification && field._dictionary.has('AP')) {\n                        delete field._dictionary._map.AP;\n                        field._dictionary._updated = true;\n                    }\n                }\n            }\n            else if (field instanceof PdfCheckBoxField) {\n                var lowerCase = value.toLowerCase();\n                if (this._containsExportValue(value, field) || lowerCase === 'on' || lowerCase === 'yes') {\n                    field.checked = true;\n                }\n                else {\n                    field.checked = false;\n                }\n            }\n            else if (field instanceof PdfRadioButtonListField) {\n                var index = -1;\n                for (var i = 0; i < field._kidsCount; i++) {\n                    var item = field.itemAt(i);\n                    if (item && item.value && item.value === value) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1 && field.selectedIndex !== index) {\n                    field.selectedIndex = index;\n                }\n            }\n        }\n    };\n    _ExportHelper.prototype._containsExportValue = function (value, field) {\n        var result = false;\n        if (field._kidsCount > 0) {\n            for (var i = 0; i < field._kidsCount; i++) {\n                var kid = field.itemAt(i);\n                if (kid && this._checkSelected(kid._dictionary, value)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            result = this._checkSelected(field._dictionary, value);\n            if (!result && this._asPerSpecification && field._dictionary.has('AS')) {\n                var asEntry = field._dictionary.get('AS');\n                if (asEntry && (asEntry.name === 'Off' || asEntry.name === 'No')) {\n                    if (field._dictionary.has('Opt')) {\n                        var options = field._dictionary.getArray('Opt');\n                        if (options && options.length > 0) {\n                            options.forEach(function (option) {\n                                if (option === value) {\n                                    result = true;\n                                }\n                            });\n                        }\n                    }\n                }\n                else {\n                    result = true;\n                }\n            }\n        }\n        return result;\n    };\n    _ExportHelper.prototype._checkSelected = function (dictionary, value) {\n        if (dictionary && dictionary.has('AP')) {\n            var appearance = dictionary.get('AP');\n            if (appearance && appearance instanceof _PdfDictionary && appearance.has('N')) {\n                var normalTemplate = appearance.get('N');\n                if (normalTemplate &&\n                    normalTemplate instanceof _PdfDictionary &&\n                    normalTemplate.has(value) &&\n                    !(value.toLocaleLowerCase() === 'off' || value.toLocaleLowerCase() === 'no')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    _ExportHelper.prototype._dispose = function () {\n        this.exportAppearance = undefined;\n        this._asPerSpecification = undefined;\n        this._skipBorderStyle = undefined;\n        this._fileName = undefined;\n        this._document = undefined;\n        this._crossReference = undefined;\n        this._isAnnotationExport = undefined;\n        this._isAnnotationImport = undefined;\n        this._key = undefined;\n        this._formKey = undefined;\n        this._exportEmptyFields = undefined;\n        this._groupReferences = undefined;\n        this._groupHolders = undefined;\n        this._encodeDictionary = undefined;\n        this._annotationTypes = undefined;\n        this._annotationAttributes = undefined;\n        this._xmlDocument = undefined;\n        this._parser = undefined;\n        this._table = undefined;\n        this._fields = undefined;\n        this._richTextValues = undefined;\n        this._jsonData = undefined;\n    };\n    return _ExportHelper;\n}());\nexport { _ExportHelper };\nvar _XfdfDocument = /** @class */ (function (_super) {\n    __extends(_XfdfDocument, _super);\n    function _XfdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _XfdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        return this._save();\n    };\n    _XfdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XfdfDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        writer._writeStartElement('xfdf');\n        writer._writeAttributeString(null, 'http://ns.adobe.com/xfdf/', 'xmlns', null);\n        writer._writeAttributeString('space', 'preserve', 'xml', null);\n        if (this._isAnnotationExport) {\n            writer._writeStartElement('annots');\n            if (this._document) {\n                for (var i = 0; i < this._document.pageCount; i++) {\n                    var page = this._document.getPage(i);\n                    var annotations = page.annotations;\n                    for (var j = 0; j < annotations.count; j++) {\n                        var annotation = annotations.at(j);\n                        if (annotation && (!this._annotationTypes ||\n                            this._annotationTypes.length === 0 ||\n                            (this._annotationTypes && this._annotationTypes.length > 0 && this._checkAnnotationType(annotation)))) {\n                            this._exportAnnotationData(annotation, writer, i);\n                        }\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        else {\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this._exportFormFieldData(field);\n                    }\n                }\n                this._writeFormFieldData(writer, this._asPerSpecification);\n            }\n        }\n        if (!this._asPerSpecification) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XfdfDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        var _this = this;\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            writer._writeStartElement('f');\n            writer._writeAttributeString('href', this._fileName);\n            writer._writeEndElement();\n            var elements = this._getElements(this._table); // eslint-disable-line\n            if (elements && elements.size > 0) {\n                writer._writeStartElement('fields');\n                var flag_1 = false;\n                elements.forEach(function (value, key) {\n                    writer._writeStartElement('field');\n                    writer._writeAttributeString('name', key.toString());\n                    if (Array.isArray(value)) {\n                        value.forEach(function (item) {\n                            writer._writeStartElement('value');\n                            writer._writeString(item.toString());\n                            writer._writeEndElement();\n                            flag_1 = true;\n                        });\n                    }\n                    if (value instanceof Map) {\n                        _this._writeFieldName(value, writer);\n                    }\n                    else if (!flag_1 && !value.toString().endsWith(_this._formKey) || (!flag_1 && _this._formKey === '')) {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                        writer._writeEndElement();\n                    }\n                    else if (_this._formKey !== '' && value.toString().endsWith(_this._formKey)) {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                        writer._writeEndElement();\n                    }\n                    writer._writeEndElement();\n                    flag_1 = false;\n                });\n                writer._writeEndElement();\n            }\n            writer._writeStartElement('ids');\n            var hasId = false;\n            if (this._crossReference._root.has('ID')) {\n                var id = this._crossReference._root.getArray('ID');\n                if (id && id.length >= 1) {\n                    writer._writeAttributeString('original', id[0]);\n                    writer._writeAttributeString('modified', id[1]);\n                    hasId = true;\n                }\n            }\n            if (!hasId) {\n                writer._writeAttributeString('original', '');\n                writer._writeAttributeString('modified', '');\n            }\n            writer._writeEndElement();\n        }\n        else {\n            writer._writeStartElement('fields');\n            this._table.forEach(function (value, key) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    writer._writeStartElement('value');\n                    writer._writeString(value.toString());\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            });\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeFieldName = function (value, writer) {\n        var _this = this;\n        value.forEach(function (value, key) {\n            if (value instanceof Map) {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                _this._writeFieldName(value, writer);\n                writer._writeEndElement();\n            }\n            else {\n                writer._writeStartElement('field');\n                writer._writeAttributeString('name', key.toString());\n                if (Array.isArray(value)) {\n                    value.forEach(function (item) {\n                        writer._writeStartElement('value');\n                        writer._writeString(item.toString());\n                        writer._writeEndElement();\n                    });\n                }\n                else {\n                    if (!value.toString().endsWith(_this._formKey) || _this._formKey === '') {\n                        writer._writeStartElement('value');\n                        writer._writeString(value.toString());\n                    }\n                    else {\n                        writer._writeStartElement('value-richtext');\n                        var text = value.toString();\n                        if (text.startsWith('<?xml version=\"1.0\"?>')) {\n                            text = text.substring(21);\n                        }\n                        var start = text.length - _this._formKey.length;\n                        text = text.substring(0, start) + text.substring(start + _this._formKey.length);\n                        writer._writeRaw(text);\n                    }\n                    writer._writeEndElement();\n                }\n                writer._writeEndElement();\n            }\n        });\n    };\n    _XfdfDocument.prototype._getElements = function (table) {\n        var _this = this;\n        var elements = new Map(); // eslint-disable-line\n        table.forEach(function (value, key) {\n            var parentElements = elements; // eslint-disable-line\n            if (key.toString().indexOf('.') !== -1) {\n                var values = key.toString().split('.');\n                for (var i = 0; i < values.length; i++) {\n                    var element = values[Number.parseInt(i.toString(), 10)];\n                    if (parentElements.has(element)) {\n                        _this._getElements(parentElements[element]); // eslint-disable-line\n                        parentElements = parentElements[element]; // eslint-disable-line\n                    }\n                    else {\n                        if (i === values.length - 1) {\n                            parentElements.set(element, value);\n                        }\n                        else {\n                            var newTable = new Map(); // eslint-disable-line\n                            parentElements.set(element, newTable);\n                            parentElements = newTable;\n                        }\n                    }\n                }\n            }\n            else {\n                parentElements.set(key, value);\n            }\n        });\n        return elements;\n    };\n    _XfdfDocument.prototype._checkAnnotationType = function (annotation) {\n        return (typeof annotation._type !== 'undefined' && this._annotationTypes.indexOf(annotation._type) !== -1);\n    };\n    _XfdfDocument.prototype._exportAnnotationData = function (annotation, writer, pageIndex) {\n        if (annotation._dictionary &&\n            !(annotation instanceof PdfFileLinkAnnotation ||\n                annotation instanceof PdfTextWebLinkAnnotation ||\n                annotation instanceof PdfDocumentLinkAnnotation ||\n                annotation instanceof PdfUriAnnotation)) {\n            this._writeAnnotationData(writer, pageIndex, annotation);\n        }\n    };\n    _XfdfDocument.prototype._writeAnnotationData = function (writer, pageIndex, source) {\n        var hasAppearance = false;\n        var annotation;\n        var dictionary;\n        if (source instanceof PdfAnnotation) {\n            annotation = source;\n            dictionary = source._dictionary;\n        }\n        else {\n            dictionary = source;\n        }\n        var type = this._getAnnotationType(dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            if (!this._annotationAttributes) {\n                this._annotationAttributes = [];\n            }\n            writer._writeStartElement(type.toLowerCase());\n            writer._writeAttributeString('page', pageIndex.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    writer._writeAttributeString('start', points[0].toString() + ',' + points[1].toString());\n                    writer._writeAttributeString('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, pageIndex, writer, hasAppearance);\n            writer._writeEndElement();\n            this._annotationAttributes = [];\n        }\n    };\n    _XfdfDocument.prototype._writeDictionary = function (dictionary, pageIndex, writer, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, writer, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                writer._writeAttributeString('inreplyto', _this._getValue(entry.get('NM')));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, writer, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(writer, key, value);\n                }\n            }\n        });\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                writer._writeStartElement('appearance');\n                writer._writeRaw(_encode(stream));\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'), writer);\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    writer._writeAttributeString('bits', this._getValue(soundDictionary.get('B')));\n                }\n                if (soundDictionary.has('C')) {\n                    writer._writeAttributeString('channels', this._getValue(soundDictionary.get('C')));\n                }\n                if (soundDictionary.has('E')) {\n                    writer._writeAttributeString('encoding', this._getValue(soundDictionary.get('E')));\n                }\n                if (soundDictionary.has('R')) {\n                    writer._writeAttributeString('rate', this._getValue(soundDictionary.get('R')));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        writer._writeStartElement('data');\n                        writer._writeAttributeString('MODE', 'raw');\n                        writer._writeAttributeString('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            writer._writeAttributeString('length', this._getValue(soundDictionary.get('Length')));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            writer._writeAttributeString('filter', this._getValue(soundDictionary.get('Filter')));\n                        }\n                        writer._writeRaw(data);\n                        writer._writeEndElement();\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    writer._writeAttributeString('file', this._getValue(fsDictionary.get('F')));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'));\n                                        writer._writeAttributeString('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'));\n                                        writer._writeAttributeString('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        writer._writeAttributeString('size', this._getValue(paramsDictionary.get('Size')));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'));\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        writer._writeAttributeString('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                writer._writeStartElement('data');\n                                writer._writeAttributeString('MODE', 'raw');\n                                writer._writeAttributeString('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    writer._writeAttributeString('length', this._getValue(fDictionary.get('Length')));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    writer._writeAttributeString('filter', this._getValue(fDictionary.get('Filter')));\n                                }\n                                writer._writeRaw(data);\n                                writer._writeEndElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dictionary.has('Vertices')) {\n            writer._writeStartElement('vertices');\n            var vertices = dictionary.getArray('Vertices');\n            if (vertices && vertices.length > 0) {\n                var elementCount = vertices.length;\n                if (elementCount % 2 === 0) {\n                    var value = '';\n                    for (var i = 0; i < elementCount - 1; i++) {\n                        value += this._getValue(vertices[Number.parseInt(i.toString(), 10)]) + (i % 2 !== 0 ? ';' : ',');\n                    }\n                    value += this._getValue(vertices[elementCount - 1]);\n                    if (value && value !== '') {\n                        writer._writeRaw(value);\n                    }\n                }\n            }\n            writer._writeEndElement();\n        }\n        if (dictionary.has('Popup')) {\n            var popup = dictionary.get('Popup');\n            if (popup) {\n                this._writeAnnotationData(writer, pageIndex, popup);\n            }\n        }\n        if (dictionary.has('DA')) {\n            var defaultAppearance = dictionary.get('DA');\n            if (defaultAppearance) {\n                this._writeRawData(writer, 'defaultappearance', defaultAppearance);\n            }\n        }\n        if (dictionary.has('DS')) {\n            var defaultStyle = dictionary.get('DS');\n            if (defaultStyle) {\n                this._writeRawData(writer, 'defaultstyle', defaultStyle);\n            }\n        }\n        if (dictionary.has('InkList')) {\n            var inkList = dictionary.getArray('InkList');\n            if (inkList && inkList.length > 0) {\n                writer._writeStartElement('inklist');\n                for (var j = 0; j < inkList.length; j++) {\n                    writer._writeElementString('gesture', this._getValue(inkList[Number.parseInt(j.toString(), 10)]));\n                }\n                writer._writeEndElement();\n            }\n        }\n        if (dictionary.has('RC')) {\n            var value = dictionary.get('RC');\n            if (value && value !== '') {\n                var index = value.indexOf('<body');\n                if (index > 0) {\n                    value = value.substring(index);\n                }\n                this._writeRawData(writer, 'contents-richtext', value);\n            }\n        }\n        if (dictionary.has('Contents')) {\n            var value = dictionary.get('Contents');\n            if (value && value.length > 0) {\n                writer._writeStartElement('contents');\n                writer._writeString(value);\n                writer._writeEndElement();\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearanceString = function (appearance) {\n        var textWriter = new _XmlWriter(true);\n        textWriter._writeStartElement('DICT');\n        textWriter._writeAttributeString('KEY', 'AP');\n        this._writeAppearanceDictionary(textWriter, appearance);\n        textWriter._writeEndElement();\n        var buffer = textWriter.buffer;\n        textWriter._destroy();\n        return buffer;\n    };\n    _XfdfDocument.prototype._writeAppearanceDictionary = function (writer, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(writer, value instanceof _PdfReference ? dictionary.get(key) : value, dictionary, key);\n            });\n        }\n    };\n    _XfdfDocument.prototype._writeObject = function (writer, primitive, dictionary, key, isNewReference) {\n        if (primitive !== null && typeof primitive !== 'undefined') {\n            if (primitive instanceof _PdfName) {\n                this._writePrefix(writer, 'NAME', key);\n                writer._writeAttributeString('VAL', primitive.name);\n                writer._writeEndElement();\n            }\n            else if (Array.isArray(primitive)) {\n                this._writePrefix(writer, 'ARRAY', key);\n                if (dictionary.has(key)) {\n                    this._writeArray(writer, dictionary.getArray(key), dictionary);\n                }\n                else {\n                    this._writeArray(writer, primitive, dictionary);\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'string') {\n                this._writePrefix(writer, 'STRING', key);\n                writer._writeAttributeString('VAL', primitive);\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'number') {\n                if (Number.isInteger(primitive)) {\n                    this._writePrefix(writer, 'INT', key);\n                    writer._writeAttributeString('VAL', primitive.toString());\n                }\n                else {\n                    this._writePrefix(writer, 'FIXED', key);\n                    writer._writeAttributeString('VAL', primitive.toFixed(6));\n                }\n                writer._writeEndElement();\n            }\n            else if (typeof primitive === 'boolean') {\n                this._writePrefix(writer, 'BOOL', key);\n                writer._writeAttributeString('VAL', primitive ? 'true' : 'false');\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfDictionary) {\n                this._writePrefix(writer, 'DICT', key);\n                this._writeAppearanceDictionary(writer, primitive);\n                writer._writeEndElement();\n            }\n            else if (primitive === null) {\n                this._writePrefix(writer, 'NULL', key);\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfBaseStream && primitive.dictionary) {\n                var streamDictionary = primitive.dictionary;\n                this._writePrefix(writer, 'STREAM', key);\n                writer._writeAttributeString('DEFINE', '');\n                if ((streamDictionary.has('Subtype') &&\n                    this._getValue(streamDictionary.get('Subtype')) === 'Image') ||\n                    (!streamDictionary.has('Type') && !streamDictionary.has('Subtype'))) {\n                    var data = void 0;\n                    if (isNewReference) {\n                        if (streamDictionary.has('Filter') && streamDictionary.get('Filter').name === 'DCTDecode') {\n                            data = primitive.getString(true);\n                        }\n                        else {\n                            data = _compressStream(primitive, true);\n                        }\n                    }\n                    else {\n                        data = primitive.getString(true);\n                    }\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'RAW');\n                    writer._writeAttributeString('ENCODING', 'HEX');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                else {\n                    var data = primitive.getString();\n                    if (!streamDictionary.has('Length') && data && data !== '') {\n                        streamDictionary.update('Length', primitive.length);\n                    }\n                    data = data.replace(/</g, '&lt;');\n                    data = data.replace(/>/g, '&gt;');\n                    this._writeAppearanceDictionary(writer, streamDictionary);\n                    writer._writeStartElement('DATA');\n                    writer._writeAttributeString('MODE', 'FILTERED');\n                    writer._writeAttributeString('ENCODING', 'ASCII');\n                    if (data && data !== '') {\n                        writer._writeRaw(data);\n                    }\n                }\n                writer._writeEndElement();\n                writer._writeEndElement();\n            }\n            else if (primitive instanceof _PdfReference && this._crossReference) {\n                this._writeObject(writer, this._crossReference._fetch(primitive), dictionary, key, primitive._isNew);\n            }\n        }\n    };\n    _XfdfDocument.prototype._writePrefix = function (writer, name, key) {\n        writer._writeStartElement(name);\n        if (key) {\n            writer._writeAttributeString('KEY', key);\n        }\n    };\n    _XfdfDocument.prototype._writeArray = function (writer, array, dictionary) {\n        var _this = this;\n        array.forEach(function (entry) {\n            _this._writeObject(writer, entry, dictionary);\n        });\n    };\n    _XfdfDocument.prototype._getFormatedString = function (value, isParsing) {\n        if (isParsing === void 0) { isParsing = false; }\n        if (isParsing) {\n            value = value.replace('&amp;', '&');\n            value = value.replace('&lt;', '<');\n            value = value.replace('&gt;', '>');\n        }\n        else {\n            value = value.replace('&', '&amp;');\n            value = value.replace('<', '&lt;');\n            value = value.replace('>', '&gt;');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._writeAttribute = function (writer, key, primitive) {\n        var bytes;\n        if (this._annotationAttributes && this._annotationAttributes.indexOf(key) === -1) {\n            switch (key) {\n                case 'C':\n                    this._writeColor(writer, primitive, 'color', 'c');\n                    break;\n                case 'IC':\n                    this._writeColor(writer, primitive, 'interior-color');\n                    break;\n                case 'M':\n                    this._writeAttributeString(writer, 'date', primitive);\n                    break;\n                case 'NM':\n                    this._writeAttributeString(writer, 'name', primitive);\n                    break;\n                case 'Name':\n                    this._writeAttributeString(writer, 'icon', primitive);\n                    break;\n                case 'Subj':\n                    this._writeAttributeString(writer, 'subject', primitive);\n                    break;\n                case 'T':\n                    this._writeAttributeString(writer, 'title', primitive);\n                    break;\n                case 'Rotate':\n                    this._writeAttributeString(writer, 'rotation', primitive);\n                    break;\n                case 'W':\n                    this._writeAttributeString(writer, 'width', primitive);\n                    break;\n                case 'LE':\n                    if (primitive && Array.isArray(primitive)) {\n                        if (primitive.length === 2) {\n                            writer._writeAttributeString('head', this._getValue(primitive[0]));\n                            writer._writeAttributeString('tail', this._getValue(primitive[1]));\n                        }\n                    }\n                    else if (primitive instanceof _PdfName) {\n                        this._writeAttributeString(writer, 'head', primitive);\n                    }\n                    break;\n                case 'S':\n                    if (this._annotationAttributes.indexOf('style') === -1) {\n                        switch (this._getValue(primitive)) {\n                            case 'D':\n                                writer._writeAttributeString('style', 'dash');\n                                break;\n                            case 'C':\n                                writer._writeAttributeString('style', 'cloudy');\n                                break;\n                            case 'S':\n                                writer._writeAttributeString('style', 'solid');\n                                break;\n                            case 'B':\n                                writer._writeAttributeString('style', 'bevelled');\n                                break;\n                            case 'I':\n                                writer._writeAttributeString('style', 'inset');\n                                break;\n                            case 'U':\n                                writer._writeAttributeString('style', 'underline');\n                                break;\n                        }\n                        this._annotationAttributes.push('style');\n                    }\n                    break;\n                case 'D':\n                    this._writeAttributeString(writer, 'dashes', primitive);\n                    break;\n                case 'I':\n                    this._writeAttributeString(writer, 'intensity', primitive);\n                    break;\n                case 'RD':\n                    this._writeAttributeString(writer, 'fringe', primitive);\n                    break;\n                case 'IT':\n                    this._writeAttributeString(writer, 'IT', primitive);\n                    break;\n                case 'RT':\n                    this._writeAttributeString(writer, 'replyType', primitive, true);\n                    break;\n                case 'LL':\n                    this._writeAttributeString(writer, 'leaderLength', primitive);\n                    break;\n                case 'LLE':\n                    this._writeAttributeString(writer, 'leaderExtend', primitive);\n                    break;\n                case 'Cap':\n                    this._writeAttributeString(writer, 'caption', primitive);\n                    break;\n                case 'Q':\n                    this._writeAttributeString(writer, 'justification', primitive);\n                    break;\n                case 'CP':\n                    this._writeAttributeString(writer, 'caption-style', primitive);\n                    break;\n                case 'CL':\n                    this._writeAttributeString(writer, 'callout', primitive);\n                    break;\n                case 'QuadPoints':\n                    this._writeAttributeString(writer, 'coords', primitive);\n                    break;\n                case 'CA':\n                    this._writeAttributeString(writer, 'opacity', primitive);\n                    break;\n                case 'F':\n                    if (typeof primitive === 'number' && this._annotationAttributes.indexOf('flags') === -1) {\n                        var flag = _annotationFlagsToString(primitive);\n                        writer._writeAttributeString('flags', flag);\n                        this._annotationAttributes.push('flags');\n                    }\n                    break;\n                case 'InkList':\n                case 'Type':\n                case 'Subtype':\n                case 'P':\n                case 'Parent':\n                case 'L':\n                case 'Contents':\n                case 'RC':\n                case 'DA':\n                case 'DS':\n                case 'FS':\n                case 'MeasurementTypes':\n                case 'Vertices':\n                case 'GroupNesting':\n                case 'ITEx':\n                    break;\n                case 'TextMarkupContent':\n                    bytes = _stringToBytes(primitive);\n                    this._writeAttributeString(writer, key.toLowerCase(), _byteArrayToHexString(bytes));\n                    break;\n                default:\n                    this._writeAttributeString(writer, key.toLowerCase(), primitive);\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._writeAttributeString = function (writer, attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        if (this._annotationAttributes.indexOf(attribute) === -1) {\n            var value = this._getValue(primitive);\n            writer._writeAttributeString(attribute, isLowerCase ? value.toLowerCase() : value);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._writeRawData = function (writer, name, value) {\n        if (value && value !== '') {\n            writer._writeStartElement(name);\n            writer._writeRaw(value);\n            writer._writeEndElement();\n        }\n    };\n    _XfdfDocument.prototype._writeColor = function (writer, primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive);\n            if (c && c !== '' && this._annotationAttributes.indexOf(tag) === -1) {\n                writer._writeAttributeString(tag, c);\n                this._annotationAttributes.push(tag);\n            }\n        }\n        if (color && color !== '' && this._annotationAttributes.indexOf(attribute) === -1) {\n            writer._writeAttributeString(attribute, color);\n            this._annotationAttributes.push(attribute);\n        }\n    };\n    _XfdfDocument.prototype._exportMeasureDictionary = function (dictionary, writer) {\n        writer._writeStartElement('measure');\n        if (dictionary) {\n            if (dictionary.has('R')) {\n                writer._writeAttributeString('rateValue', this._getValue(dictionary.get('R')));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                writer._writeStartElement('area');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                writer._writeStartElement('distance');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                writer._writeStartElement('xformat');\n                this._exportMeasureFormatDetails(array[0], writer);\n                writer._writeEndElement();\n            }\n        }\n        writer._writeEndElement();\n    };\n    _XfdfDocument.prototype._exportMeasureFormatDetails = function (measurementDetails, writer) {\n        if (measurementDetails.has('C')) {\n            writer._writeAttributeString('c', this._getValue(measurementDetails.get('C')));\n        }\n        if (measurementDetails.has('F')) {\n            writer._writeAttributeString('f', this._getValue(measurementDetails.get('F')));\n        }\n        if (measurementDetails.has('D')) {\n            writer._writeAttributeString('d', this._getValue(measurementDetails.get('D')));\n        }\n        if (measurementDetails.has('RD')) {\n            writer._writeAttributeString('rd', this._getValue(measurementDetails.get('RD')));\n        }\n        if (measurementDetails.has('U')) {\n            writer._writeAttributeString('u', this._getValue(measurementDetails.get('U')));\n        }\n        if (measurementDetails.has('RT')) {\n            writer._writeAttributeString('rt', this._getValue(measurementDetails.get('RT')));\n        }\n        if (measurementDetails.has('SS')) {\n            writer._writeAttributeString('ss', this._getValue(measurementDetails.get('SS')));\n        }\n        if (measurementDetails.has('FD')) {\n            writer._writeAttributeString('fd', this._getValue(measurementDetails.get('FD')));\n        }\n    };\n    //#endregion Export Annotations\n    //#region Import Annotations\n    _XfdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var xml = _bytesToString(data, true);\n        this._xmlDocument = (new DOMParser()).parseFromString(xml, 'text/xml');\n        this._isAnnotationImport = true;\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._xmlDocument = (new DOMParser()).parseFromString(_bytesToString(data, true), 'text/xml');\n        this._readXmlData(this._xmlDocument.documentElement);\n    };\n    _XfdfDocument.prototype._readXmlData = function (root) {\n        if (root && root.nodeType === 1) {\n            this._checkXfdf(root);\n            if (this._isAnnotationImport) {\n                var xList = root.getElementsByTagName('annots');\n                if (xList && xList.length > 0) {\n                    for (var i = 0; i < xList.length; i++) {\n                        var child = xList.item(i);\n                        if (child && child.localName === 'annots' && child.hasChildNodes()) {\n                            var childeNodes = child.childNodes;\n                            for (var j = 0; j < childeNodes.length; j++) {\n                                var childNode = childeNodes.item(j);\n                                if (childNode && childNode.nodeType === 1) {\n                                    var element = childNode;\n                                    if (element && element.nodeType === 1) {\n                                        this._parseAnnotationData(element);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n            else {\n                this._parseFormData(root);\n            }\n        }\n        this._dispose();\n    };\n    _XfdfDocument.prototype._checkXfdf = function (element) {\n        if (element.nodeName !== 'xfdf') {\n            throw new Error('Invalid XFDF file.');\n        }\n    };\n    _XfdfDocument.prototype._parseFormData = function (root) {\n        var list = root.getElementsByTagName('f');\n        if (list && list.length > 0) {\n            var fileNameElement = list.item(0);\n            if (fileNameElement && fileNameElement.localName === 'f' && fileNameElement.hasAttribute('href')) {\n                var fileName = fileNameElement.getAttribute('href');\n                if (fileName && fileName !== '') {\n                    this._fileName = fileName;\n                }\n            }\n        }\n        list = root.getElementsByTagName('ids');\n        if (list && list.length > 0) {\n            this._asPerSpecification = true;\n        }\n        var child = root.childNodes;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode && childNode.nodeType === 1) {\n                    var element = childNode;\n                    if (element && element.localName === 'fields' && element.hasChildNodes()) {\n                        var fieldList = element.childNodes;\n                        var elements = [];\n                        for (var j = 0; j < fieldList.length; j++) {\n                            var field = fieldList.item(j);\n                            if (field && field.nodeType === 1) {\n                                var filedElement = field;\n                                if (filedElement && filedElement.localName === 'field') {\n                                    elements.push(filedElement);\n                                }\n                            }\n                        }\n                        this._importFormNodes(elements);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XfdfDocument.prototype._importFormNodes = function (list) {\n        for (var i = 0; i < list.length; i++) {\n            var child = list[Number.parseInt(i.toString(), 10)];\n            var fieldName = '';\n            if (child) {\n                if (child.hasAttribute('name')) {\n                    fieldName = child.getAttribute('name');\n                }\n                if (fieldName && fieldName !== '') {\n                    var values = child.getElementsByTagName('value');\n                    if (values && values.length > 0) {\n                        var node = child;\n                        var textName = '';\n                        while (node.localName !== 'fields') {\n                            if (textName.length > 0) {\n                                textName = '.' + textName;\n                            }\n                            var skip = false;\n                            if (node.hasAttribute('name')) {\n                                var name_1 = node.getAttribute('name');\n                                if (name_1 && name_1 !== '') {\n                                    textName = name_1 + textName;\n                                    skip = true;\n                                }\n                            }\n                            if (!skip) {\n                                textName += node.localName;\n                            }\n                            node = node.parentElement;\n                        }\n                        fieldName = textName;\n                        var dataValues = void 0;\n                        if (this._fields.has(fieldName)) {\n                            dataValues = this._fields.get(fieldName);\n                        }\n                        else {\n                            dataValues = [];\n                        }\n                        for (var j = 0; j < values.length; j++) {\n                            dataValues.push(values.item(j).textContent);\n                        }\n                        this._fields.set(fieldName, dataValues);\n                    }\n                    else {\n                        values = child.getElementsByTagName('value-richtext');\n                        if (values && values.length > 0) {\n                            var element = values.item(0);\n                            if (element) {\n                                var node = child;\n                                var textName = '';\n                                while (node.localName !== 'fields') {\n                                    if (textName.length > 0) {\n                                        textName = '.' + textName;\n                                    }\n                                    var skip = false;\n                                    if (node.hasAttribute('name')) {\n                                        var name_2 = node.getAttribute('name');\n                                        if (name_2 && name_2 !== '') {\n                                            textName = name_2 + textName;\n                                            skip = true;\n                                        }\n                                    }\n                                    if (!skip) {\n                                        textName += node.localName;\n                                    }\n                                    node = node.parentElement;\n                                }\n                                fieldName = textName;\n                                var richText = element.textContent;\n                                if (element.childNodes && element.childNodes.length > 0) {\n                                    var childNode = element.childNodes[0];\n                                    if (childNode && childNode.hasChildNodes()) {\n                                        richText = '';\n                                        var childNodes = childNode.childNodes;\n                                        for (var j = void 0; j < childNodes.length; j++) {\n                                            richText += childNodes.item(j).textContent + '\\r';\n                                        }\n                                        if (richText.length > 0) {\n                                            richText = richText.substring(0, richText.length - 1);\n                                        }\n                                        else {\n                                            richText = element.textContent;\n                                        }\n                                    }\n                                }\n                                var dataValues = void 0;\n                                if (this._fields.has(fieldName)) {\n                                    dataValues = this._fields.get(fieldName);\n                                }\n                                else {\n                                    dataValues = [];\n                                }\n                                for (var j = 0; j < values.length; j++) {\n                                    dataValues.push(richText);\n                                }\n                                this._fields.set(fieldName, dataValues);\n                                if (!this._richTextValues.has(fieldName)) {\n                                    this._richTextValues.set(fieldName, element.innerHTML);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._parseAnnotationData = function (element) {\n        if (element) {\n            var pageIndex = -1;\n            if (element.hasAttributes && element.hasAttribute('page')) {\n                pageIndex = Number.parseInt(element.getAttribute('page'), 10);\n                if (pageIndex >= 0 && pageIndex < this._document.pageCount) {\n                    var page = this._document.getPage(pageIndex);\n                    var annotationDictionary = this._getAnnotationDictionary(page, element);\n                    if (annotationDictionary && annotationDictionary.size > 0) {\n                        var pageDictionary = page._pageDictionary;\n                        if (pageDictionary) {\n                            var annotations = page.annotations;\n                            var annotation = annotations._parseAnnotation(annotationDictionary);\n                            if (annotation) {\n                                annotation._isImported = true;\n                                var reference = this._crossReference._getNextReference();\n                                this._crossReference._cacheMap.set(reference, annotationDictionary);\n                                if (annotationDictionary.has('NM') || annotationDictionary.has('IRT')) {\n                                    this._addReferenceToGroup(reference, annotationDictionary);\n                                }\n                                annotation._ref = reference;\n                                var index = annotations._annotations.length;\n                                annotations._annotations.push(reference);\n                                if (annotations._comments && annotations._comments.length > 0) {\n                                    annotations._comments = [];\n                                }\n                                pageDictionary.set('Annots', annotations._annotations);\n                                pageDictionary._updated = true;\n                                annotations._parsedAnnotations.set(index, annotation);\n                                this._handlePopup(annotations, reference, annotationDictionary, pageDictionary);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAnnotationDictionary = function (page, element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        dictionary.update('Type', _PdfName.get('Annot'));\n        var isValidType = true;\n        switch (element.localName.toLowerCase()) {\n            case 'line':\n                dictionary.update('Subtype', _PdfName.get('Line'));\n                if (element.hasAttribute('start') && element.hasAttribute('end')) {\n                    var points_1 = [];\n                    element.getAttribute('start').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    element.getAttribute('end').split(',').forEach(function (value) {\n                        points_1.push(Number.parseFloat(value));\n                    });\n                    if (points_1.length === 4) {\n                        dictionary.update('L', points_1);\n                    }\n                }\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'circle':\n                dictionary.update('Subtype', _PdfName.get('Circle'));\n                break;\n            case 'square':\n                dictionary.update('Subtype', _PdfName.get('Square'));\n                break;\n            case 'polyline':\n                dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'polygon':\n                dictionary.update('Subtype', _PdfName.get('Polygon'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'ink':\n                dictionary.update('Subtype', _PdfName.get('Ink'));\n                break;\n            case 'popup':\n                dictionary.update('Subtype', _PdfName.get('Popup'));\n                break;\n            case 'text':\n                dictionary.update('Subtype', _PdfName.get('Text'));\n                break;\n            case 'freetext':\n                dictionary.update('Subtype', _PdfName.get('FreeText'));\n                this._addLineEndStyle(dictionary, element);\n                break;\n            case 'stamp':\n                dictionary.update('Subtype', _PdfName.get('Stamp'));\n                break;\n            case 'highlight':\n                dictionary.update('Subtype', _PdfName.get('Highlight'));\n                break;\n            case 'squiggly':\n                dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                break;\n            case 'underline':\n                dictionary.update('Subtype', _PdfName.get('Underline'));\n                break;\n            case 'strikeout':\n                dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                break;\n            case 'fileattachment':\n                dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                break;\n            case 'sound':\n                dictionary.update('Subtype', _PdfName.get('Sound'));\n                break;\n            case 'caret':\n                dictionary.update('Subtype', _PdfName.get('Caret'));\n                break;\n            case 'redact':\n                dictionary.update('Subtype', _PdfName.get('Redact'));\n                break;\n            default:\n                isValidType = false;\n                break;\n        }\n        if (isValidType) {\n            this._addAnnotationData(dictionary, element, page);\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._addAnnotationData = function (dictionary, element, page) {\n        this._addBorderStyle(dictionary, element);\n        this._applyAttributeValues(dictionary, element.attributes);\n        this._parseInnerElements(dictionary, element, page);\n        this._addMeasureDictionary(dictionary, element);\n    };\n    _XfdfDocument.prototype._addBorderStyle = function (dictionary, element) {\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('width')) {\n            borderStyleDictionary.update('W', Number.parseFloat(element.getAttribute('width')));\n        }\n        var isBasicStyle = true;\n        if (element.hasAttribute('style')) {\n            var style = '';\n            switch (element.getAttribute('style')) {\n                case 'dash':\n                    style = 'D';\n                    break;\n                case 'solid':\n                    style = 'S';\n                    break;\n                case 'bevelled':\n                    style = 'B';\n                    break;\n                case 'inset':\n                    style = 'I';\n                    break;\n                case 'underline':\n                    style = 'U';\n                    break;\n                case 'cloudy':\n                    style = 'C';\n                    isBasicStyle = false;\n                    break;\n            }\n            if (style !== '') {\n                (isBasicStyle ? borderStyleDictionary : borderEffectDictionary).update('S', _PdfName.get(style));\n                if (!isBasicStyle && element.hasAttribute('intensity')) {\n                    borderEffectDictionary.update('I', Number.parseFloat(element.getAttribute('intensity')));\n                }\n                else if (element.hasAttribute('dashes')) {\n                    var dashes_1 = [];\n                    element.getAttribute('dashes').split(',').forEach(function (value) {\n                        dashes_1.push(Number.parseFloat(value));\n                    });\n                    borderStyleDictionary.update('D', dashes_1);\n                }\n            }\n        }\n        if (borderEffectDictionary.size > 0) {\n            dictionary.update('BE', borderEffectDictionary);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', 'Border');\n            dictionary.update('BS', borderStyleDictionary);\n        }\n    };\n    _XfdfDocument.prototype._applyAttributeValues = function (dictionary, attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[Number.parseInt(i.toString(), 10)];\n            var value = attribute.value;\n            var values = void 0;\n            var leaderExtend = void 0;\n            switch (attribute.name.toLowerCase()) {\n                case 'page':\n                case 'start':\n                case 'end':\n                case 'width':\n                case 'head':\n                case 'tail':\n                case 'style':\n                case 'intensity':\n                case 'itex':\n                    break;\n                case 'state':\n                    this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'rect':\n                    values = this._obtainPoints(value);\n                    if (values && values.length === 4) {\n                        dictionary.update('Rect', values);\n                    }\n                    break;\n                case 'color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('C', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'interior-color':\n                    values = _convertToColor(value);\n                    if (values && values.length === 3) {\n                        dictionary.update('IC', [values[0] / 255, values[1] / 255, values[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value && value !== '') {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    this._addString(dictionary, 'Subj', this._getFormatedString(value, true));\n                    break;\n                case 'title':\n                    this._addString(dictionary, 'T', this._getFormatedString(value, true));\n                    break;\n                case 'rotation':\n                    this._addInt(dictionary, 'Rotate', value);\n                    break;\n                case 'justification':\n                    this._addInt(dictionary, 'Q', value);\n                    break;\n                case 'fringe':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'RD');\n                    break;\n                case 'it':\n                    if (value && value !== '') {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    this._addFloat(dictionary, 'LL', value);\n                    break;\n                case 'leaderextend':\n                    leaderExtend = Number.parseFloat(value);\n                    if (typeof leaderExtend !== 'undefined') {\n                        dictionary.update('LLE', leaderExtend);\n                    }\n                    break;\n                case 'caption':\n                    if (value && value !== '') {\n                        dictionary.update('Cap', value.toLowerCase() === 'yes' ? true : false);\n                    }\n                    break;\n                case 'caption-style':\n                    if (value && value !== '') {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'CL');\n                    break;\n                case 'coords':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'QuadPoints');\n                    break;\n                case 'border':\n                    this._addFloatPoints(dictionary, this._obtainPoints(value), 'Border');\n                    break;\n                case 'opacity':\n                    this._addFloat(dictionary, 'CA', value);\n                    break;\n                case 'flags':\n                    if (value && value !== '') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i_1 = 0; i_1 < flags.length; i_1++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i_1.toString(), 10)]);\n                            if (i_1 === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    if (value && value !== '') {\n                        dictionary.update('Open', (value === 'true' || value === 'yes') ? true : false);\n                    }\n                    break;\n                case 'calibrate':\n                    this._addString(dictionary, 'Calibrate', value);\n                    break;\n                case 'customdata':\n                    this._addString(dictionary, 'CustomData', value);\n                    break;\n                case 'overlaytext':\n                    dictionary.update('OverlayText', value);\n                    break;\n                case 'repeat':\n                    dictionary.update('Repeat', (value === 'true' || value === 'yes') ? true : false);\n                    break;\n                default:\n                    if (this._document._allowImportCustomData) {\n                        this._addString(dictionary, attribute.name, value);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._obtainPoints = function (value) {\n        var points = [];\n        value.split(',').forEach(function (value) {\n            points.push(Number.parseFloat(value));\n        });\n        return points;\n    };\n    _XfdfDocument.prototype._parseInnerElements = function (dictionary, element, page) {\n        if (element.hasChildNodes) {\n            var children = element.childNodes;\n            var _loop_1 = function (index) {\n                var child = children[Number.parseInt(index.toString(), 10)];\n                if (child.nodeType === 1) {\n                    var childElement = child;\n                    var textContent = child.textContent;\n                    var innerHTML = childElement.innerHTML;\n                    switch (child.nodeName.toLowerCase()) {\n                        case 'popup':\n                            if (childElement && childElement.hasAttributes) {\n                                var popupDictionary = this_1._getAnnotationDictionary(page, childElement);\n                                if (popupDictionary.size > 0) {\n                                    var reference = this_1._crossReference._getNextReference();\n                                    this_1._crossReference._cacheMap.set(reference, popupDictionary);\n                                    dictionary.update('Popup', reference);\n                                    if (popupDictionary.has('NM')) {\n                                        this_1._addReferenceToGroup(reference, popupDictionary);\n                                    }\n                                }\n                            }\n                            break;\n                        case 'contents':\n                            if (textContent && textContent !== '') {\n                                dictionary.update('Contents', this_1._getFormatedString(textContent, true));\n                            }\n                            break;\n                        case 'contents-richtext':\n                            if (innerHTML && innerHTML !== '') {\n                                dictionary.update('RC', this_1._richTextPrefix + innerHTML);\n                            }\n                            break;\n                        case 'defaultstyle':\n                            this_1._addString(dictionary, 'DS', textContent);\n                            break;\n                        case 'defaultappearance':\n                            this_1._addString(dictionary, 'DA', textContent);\n                            break;\n                        case 'vertices':\n                            if (textContent && textContent !== '') {\n                                var vertices_1 = [];\n                                textContent.split(',').forEach(function (value) {\n                                    if (value.indexOf(';') !== -1) {\n                                        value.split(';').forEach(function (innerValue) {\n                                            vertices_1.push(innerValue);\n                                        });\n                                    }\n                                    else {\n                                        vertices_1.push(value);\n                                    }\n                                });\n                                if (vertices_1.length > 0) {\n                                    var verticesArray_1 = [];\n                                    vertices_1.forEach(function (value) {\n                                        verticesArray_1.push(Number.parseFloat(value));\n                                    });\n                                    dictionary.update('Vertices', verticesArray_1);\n                                }\n                            }\n                            break;\n                        case 'appearance':\n                            this_1._addAppearanceData(child, dictionary);\n                            break;\n                        case 'inklist':\n                            if (child.hasChildNodes) {\n                                var inkListCollection = [];\n                                var childNodes = child.childNodes;\n                                var _loop_2 = function (i) {\n                                    var inkChild = childNodes[Number.parseInt(i.toString(), 10)];\n                                    if (inkChild && inkChild.nodeType === 1) {\n                                        var inkChildElement = inkChild;\n                                        if (inkChildElement.nodeName.toLowerCase() === 'gesture') {\n                                            if (inkChildElement.textContent && inkChildElement.textContent !== '') {\n                                                var points_2 = [];\n                                                inkChildElement.textContent.split(',').forEach(function (value) {\n                                                    if (value.indexOf(';') !== -1) {\n                                                        value.split(';').forEach(function (innerValue) {\n                                                            points_2.push(innerValue);\n                                                        });\n                                                    }\n                                                    else {\n                                                        points_2.push(value);\n                                                    }\n                                                });\n                                                if (points_2.length > 0) {\n                                                    var pointsArray_1 = [];\n                                                    points_2.forEach(function (value) {\n                                                        pointsArray_1.push(Number.parseFloat(value));\n                                                    });\n                                                    inkListCollection.push(pointsArray_1);\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    _loop_2(i);\n                                }\n                                dictionary.update('InkList', inkListCollection);\n                            }\n                            break;\n                        case 'data':\n                            this_1._addStreamData(child, dictionary, element);\n                            break;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var index = 0; index < children.length; index++) {\n                _loop_1(index);\n            }\n        }\n    };\n    _XfdfDocument.prototype._addStreamData = function (child, dictionary, parent) {\n        if (child && child.textContent && child.textContent !== '') {\n            var raw = _hexStringToByteArray(child.textContent, true);\n            if (raw && raw.length > 0) {\n                if (dictionary.has('Subtype')) {\n                    var subtype = dictionary.get('Subtype');\n                    if (subtype && subtype.name === 'FileAttachment') {\n                        this._addFileAttachment(dictionary, parent, raw);\n                    }\n                    else if (subtype && subtype.name === 'Sound') {\n                        this._addSound(dictionary, parent, raw);\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._addSound = function (dictionary, element, raw) {\n        var soundStream = new _PdfContentStream(raw);\n        soundStream.dictionary._crossReference = this._crossReference;\n        soundStream.dictionary.update('Type', _PdfName.get('Sound'));\n        if (element.hasAttribute('bits')) {\n            this._addInt(soundStream.dictionary, 'B', element.getAttribute('bits'));\n        }\n        if (element.hasAttribute('rate')) {\n            this._addInt(soundStream.dictionary, 'R', element.getAttribute('rate'));\n        }\n        if (element.hasAttribute('channels')) {\n            this._addInt(soundStream.dictionary, 'C', element.getAttribute('channels'));\n        }\n        if (element.hasAttribute('encoding')) {\n            var value = element.getAttribute('encoding');\n            if (value && value !== '') {\n                soundStream.dictionary.update('E', _PdfName.get(value));\n            }\n        }\n        if (element.hasAttribute('filter')) {\n            soundStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        }\n        var soundReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(soundReference, soundStream);\n        dictionary.update('Sound', soundReference);\n    };\n    _XfdfDocument.prototype._addFileAttachment = function (dictionary, element, raw) {\n        var fileDictionary = new _PdfDictionary(this._crossReference);\n        fileDictionary.update('Type', _PdfName.get('Filespec'));\n        if (element.hasAttribute('file')) {\n            var value = element.getAttribute('file');\n            this._addString(fileDictionary, 'F', value);\n            this._addString(fileDictionary, 'UF', value);\n        }\n        var fileStream = new _PdfContentStream(raw);\n        fileStream.dictionary._crossReference = this._crossReference;\n        var param = new _PdfDictionary(this._crossReference);\n        if (element.hasAttribute('size')) {\n            var size = Number.parseInt(element.getAttribute('size'), 10);\n            if (typeof size !== 'undefined') {\n                param.update('Size', size);\n                fileStream.dictionary.update('DL', size);\n            }\n        }\n        if (element.hasAttribute('modification')) {\n            this._addString(param, 'ModDate', element.getAttribute('modification'));\n        }\n        if (element.hasAttribute('creation')) {\n            this._addString(param, 'CreationDate', element.getAttribute('creation'));\n        }\n        fileStream.dictionary.update('Params', param);\n        if (element.hasAttribute('mimetype')) {\n            this._addString(fileStream.dictionary, 'Subtype', element.getAttribute('mimetype'));\n        }\n        fileStream.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n        var embeddedFile = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileStream);\n        embeddedFile.update('F', reference);\n        fileDictionary.update('EF', embeddedFile);\n        var fileReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fileReference, fileDictionary);\n        dictionary.update('FS', fileReference);\n    };\n    _XfdfDocument.prototype._addAppearanceData = function (element, dictionary) {\n        var innerText = element.textContent;\n        if (innerText && innerText !== '') {\n            var document_1 = (new DOMParser()).parseFromString(atob(innerText), 'text/xml');\n            if (document_1 && document_1.hasChildNodes) {\n                var childNodes = document_1.childNodes;\n                if (childNodes && childNodes.length === 1) {\n                    var rootNode = childNodes[0];\n                    if (rootNode && rootNode.nodeType === 1) {\n                        var rootElement = rootNode;\n                        if (rootElement.nodeName.toUpperCase() === 'DICT' && rootElement.hasAttribute('KEY')) {\n                            var key = rootElement.getAttribute('KEY');\n                            if (key && key === 'AP' && rootElement.hasChildNodes) {\n                                var appearance = new _PdfDictionary(this._crossReference);\n                                childNodes = rootElement.childNodes;\n                                for (var i = 0; i < childNodes.length; i++) {\n                                    this._getAppearance(appearance, childNodes[Number.parseInt(i.toString(), 10)]);\n                                }\n                                if (appearance.size > 0) {\n                                    dictionary.update('AP', appearance);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getAppearance = function (source, child) {\n        var appearance = source instanceof _PdfDictionary ? source : source.dictionary;\n        if (child && child.nodeType === 1) {\n            var element = child;\n            if (element && element.localName) {\n                var stream = void 0;\n                var dictionary = void 0;\n                var data = void 0;\n                switch (element.localName) {\n                    case 'STREAM':\n                        stream = this._getStream(element);\n                        if (stream) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, stream);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'DICT':\n                        dictionary = this._getDictionary(element);\n                        if (dictionary) {\n                            var reference = this._crossReference._getNextReference();\n                            this._crossReference._cacheMap.set(reference, dictionary);\n                            this._addKey(reference, appearance, element);\n                        }\n                        break;\n                    case 'ARRAY':\n                        this._addKey(this._getArray(element), appearance, element);\n                        break;\n                    case 'FIXED':\n                        this._addKey(this._getFixed(element), appearance, element);\n                        break;\n                    case 'INT':\n                        this._addKey(this._getInt(element), appearance, element);\n                        break;\n                    case 'STRING':\n                        this._addKey(this._getString(element), appearance, element);\n                        break;\n                    case 'NAME':\n                        this._addKey(this._getName(element), appearance, element);\n                        break;\n                    case 'BOOL':\n                        this._addKey(this._getBoolean(element), appearance, element);\n                        break;\n                    case 'DATA':\n                        data = this._getData(element);\n                        if (data && data.length > 0 && source instanceof _PdfContentStream) {\n                            source._bytes = data;\n                            var isImage = false;\n                            if (appearance && appearance.has('Subtype')) {\n                                var type = appearance.get('Subtype');\n                                isImage = type && type.name === 'Image';\n                            }\n                            if (isImage) {\n                                source._isCompress = false;\n                            }\n                            else {\n                                if (source.dictionary.has('Length')) {\n                                    delete source.dictionary._map.Length;\n                                }\n                                if (source.dictionary.has('Filter')) {\n                                    delete source.dictionary._map.Filter;\n                                }\n                            }\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    _XfdfDocument.prototype._getStream = function (element) {\n        var stream = new _PdfContentStream([]);\n        stream.dictionary._crossReference = this._crossReference;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(stream, child);\n                }\n            }\n        }\n        return stream;\n    };\n    _XfdfDocument.prototype._getDictionary = function (element) {\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._getAppearance(dictionary, child);\n                }\n            }\n        }\n        return dictionary;\n    };\n    _XfdfDocument.prototype._getArray = function (element) {\n        var array = []; // eslint-disable-line\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var child = childNodes[Number.parseInt(i.toString(), 10)];\n                if (child && child.nodeType === 1) {\n                    this._addArrayElements(array, child);\n                }\n            }\n        }\n        return array;\n    };\n    _XfdfDocument.prototype._getData = function (element) {\n        var data = [];\n        if (element && element.textContent &&\n            element.textContent !== '' &&\n            element.hasAttribute('MODE') && element.hasAttribute('ENCODING')) {\n            var mode = element.getAttribute('MODE');\n            var encoding = element.getAttribute('ENCODING');\n            if (mode && encoding) {\n                var innerText = this._getFormatedString(element.textContent, true);\n                if (mode === 'FILTERED' && encoding === 'ASCII') {\n                    data = _stringToBytes(innerText, true);\n                }\n                else if (mode === 'RAW' && encoding === 'HEX') {\n                    data = _hexStringToByteArray(innerText, true);\n                }\n            }\n        }\n        return data;\n    };\n    _XfdfDocument.prototype._addArrayElements = function (array, child) {\n        if (child && child.nodeType === 1) {\n            var element = child;\n            var stream = void 0;\n            var dictionary = void 0;\n            var value = void 0; // eslint-disable-line\n            var floatValue = void 0;\n            var intValue = void 0;\n            var name_3;\n            var bool = void 0;\n            switch (element.localName) {\n                case 'STREAM':\n                    stream = this._getStream(element);\n                    if (stream) {\n                        var reference = this._crossReference._getNextReference();\n                        stream.reference = reference;\n                        this._crossReference._cacheMap.set(reference, stream);\n                        array.push(reference);\n                    }\n                    break;\n                case 'DICT':\n                    dictionary = this._getDictionary(element);\n                    if (dictionary) {\n                        var reference = this._crossReference._getNextReference();\n                        this._crossReference._cacheMap.set(reference, dictionary);\n                        array.push(reference);\n                    }\n                    break;\n                case 'ARRAY':\n                    value = this._getArray(element);\n                    if (value) {\n                        array.push(value);\n                    }\n                    break;\n                case 'FIXED':\n                    floatValue = this._getFixed(element);\n                    if (typeof floatValue !== 'undefined' && !isNaN(floatValue)) {\n                        array.push(floatValue);\n                    }\n                    break;\n                case 'INT':\n                    intValue = this._getInt(element);\n                    if (typeof intValue !== 'undefined' && !isNaN(intValue)) {\n                        array.push(intValue);\n                    }\n                    break;\n                case 'NAME':\n                    name_3 = this._getName(element);\n                    if (name_3) {\n                        array.push(name_3);\n                    }\n                    break;\n                case 'BOOL':\n                    bool = this._getBoolean(element);\n                    if (typeof bool !== 'undefined' && bool !== null) {\n                        array.push(bool);\n                    }\n                    break;\n            }\n        }\n    };\n    _XfdfDocument.prototype._getFixed = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseFloat(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getInt = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = Number.parseInt(element.getAttribute('VAL'), 10);\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getString = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL');\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getName = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = _PdfName.get(element.getAttribute('VAL'));\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._getBoolean = function (element) {\n        var value;\n        if (element && element.hasAttribute('VAL')) {\n            value = element.getAttribute('VAL') === 'true' ? true : false;\n        }\n        return value;\n    };\n    _XfdfDocument.prototype._addMeasureDictionary = function (dictionary, element) {\n        var measurement;\n        var area;\n        var distance;\n        var xformat;\n        if (element.hasChildNodes) {\n            var childNodes = element.childNodes;\n            for (var i = 0; i < childNodes.length; i++) {\n                var childElement = childNodes[Number.parseInt(i.toString(), 10)];\n                if (childElement && childElement.localName === 'measure') {\n                    measurement = childElement;\n                    break;\n                }\n            }\n        }\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var dDict = new _PdfDictionary(this._crossReference);\n        var aDict = new _PdfDictionary(this._crossReference);\n        var xDict = new _PdfDictionary(this._crossReference);\n        var dArray = [];\n        var aArray = [];\n        var xArray = [];\n        if (measurement) {\n            measureDictionary.update('Type', _PdfName.get('Measure'));\n            if (measurement.hasAttribute('rateValue')) {\n                var attribute = measurement.getAttribute('rateValue');\n                if (attribute && attribute !== '') {\n                    measureDictionary.update('R', attribute);\n                }\n            }\n            if (measurement.hasChildNodes) {\n                var childNodes = measurement.childNodes;\n                for (var i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[Number.parseInt(i.toString(), 10)];\n                    if (child && child.nodeType === 1) {\n                        var childElement = child;\n                        switch (childElement.nodeName.toLowerCase()) {\n                            case 'distance':\n                                distance = childElement;\n                                break;\n                            case 'area':\n                                area = childElement;\n                                break;\n                            case 'xformat':\n                                xformat = childElement;\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        if (xformat) {\n            this._addElements(xformat, xDict);\n            xArray.push(xDict);\n        }\n        if (distance) {\n            this._addElements(distance, dDict);\n            dArray.push(dDict);\n        }\n        if (area) {\n            this._addElements(area, aDict);\n            aArray.push(aDict);\n        }\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        if (measureDictionary.size > 0 && measureDictionary.has('Type')) {\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _XfdfDocument.prototype._addElements = function (element, dictionary) {\n        if (element.hasAttribute('d')) {\n            this._addFloat(dictionary, 'D', element.getAttribute('d'));\n        }\n        if (element.hasAttribute('c')) {\n            this._addFloat(dictionary, 'C', element.getAttribute('c'));\n        }\n        if (element.hasAttribute('rt')) {\n            dictionary.update('RT', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('rd')) {\n            dictionary.update('RD', element.getAttribute('rt'));\n        }\n        if (element.hasAttribute('ss')) {\n            dictionary.update('SS', element.getAttribute('ss'));\n        }\n        if (element.hasAttribute('u')) {\n            dictionary.update('U', element.getAttribute('u'));\n        }\n        if (element.hasAttribute('f')) {\n            dictionary.update('F', _PdfName.get(element.getAttribute('f')));\n        }\n        if (element.hasAttribute('fd')) {\n            dictionary.update('FD', element.getAttribute('fd') === 'yes' ? true : false);\n        }\n    };\n    _XfdfDocument.prototype._addString = function (dictionary, key, value) {\n        if (value && value !== '') {\n            dictionary.update(key, value);\n        }\n    };\n    _XfdfDocument.prototype._addInt = function (dictionary, key, value) {\n        var intValue = Number.parseInt(value, 10);\n        if (typeof intValue !== 'undefined') {\n            dictionary.update(key, intValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloat = function (dictionary, key, value) {\n        var floatValue = Number.parseFloat(value);\n        if (typeof floatValue !== 'undefined') {\n            dictionary.update(key, floatValue);\n        }\n    };\n    _XfdfDocument.prototype._addFloatPoints = function (dictionary, points, key) {\n        if (points && points.length > 0) {\n            dictionary.update(key, points);\n        }\n    };\n    _XfdfDocument.prototype._addKey = function (primitive, dictionary, element) {\n        if (typeof primitive !== 'undefined' && primitive !== null && element.hasAttribute('KEY')) {\n            dictionary.update(element.getAttribute('KEY'), primitive);\n        }\n    };\n    _XfdfDocument.prototype._addLineEndStyle = function (dictionary, element) {\n        var beginLineStyle = '';\n        if (element.hasAttribute('head')) {\n            beginLineStyle = element.getAttribute('head');\n        }\n        var endLineStyle = '';\n        if (element.hasAttribute('tail')) {\n            endLineStyle = element.getAttribute('tail');\n        }\n        if (beginLineStyle && beginLineStyle !== '') {\n            if (endLineStyle && endLineStyle !== '') {\n                var lineEndingStyles = [];\n                lineEndingStyles.push(_PdfName.get(beginLineStyle));\n                lineEndingStyles.push(_PdfName.get(endLineStyle));\n                dictionary.update('LE', lineEndingStyles);\n            }\n            else {\n                dictionary.update('LE', _PdfName.get(beginLineStyle));\n            }\n        }\n        else if (endLineStyle && endLineStyle !== '') {\n            dictionary.update('LE', _PdfName.get(endLineStyle));\n        }\n    };\n    return _XfdfDocument;\n}(_ExportHelper));\nexport { _XfdfDocument };\nvar _FontStructure = /** @class */ (function () {\n    function _FontStructure(dictionary) {\n        this._baseFontEncoding = '';\n        this._dictionary = dictionary;\n        this._fontType = this._dictionary.get('Subtype').name;\n    }\n    Object.defineProperty(_FontStructure.prototype, \"differencesDictionary\", {\n        get: function () {\n            if (!this._differencesDictionary) {\n                this._differencesDictionary = this._getDifferencesDictionary();\n            }\n            return this._differencesDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"baseFontEncoding\", {\n        get: function () {\n            return this._baseFontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontEncoding\", {\n        get: function () {\n            if (!this._fontEncoding) {\n                this._fontEncoding = this._getFontEncoding();\n            }\n            return this._fontEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_FontStructure.prototype, \"fontName\", {\n        get: function () {\n            if (!this._fontName) {\n                this._fontName = this._getFontName();\n            }\n            return this._fontName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _FontStructure.prototype._getFontEncoding = function () {\n        var encoding = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var baseFont = this._dictionary.get('Encoding'); // eslint-disable-line\n            if (baseFont instanceof _PdfName) {\n                encoding = baseFont.name;\n            }\n            else if (baseFont instanceof _PdfDictionary) {\n                if (baseFont.has('BaseEncoding')) {\n                    var baseFontEncoding = baseFont.get('BaseEncoding');\n                    if (baseFontEncoding && baseFontEncoding instanceof _PdfName) {\n                        this._baseFontEncoding = baseFontEncoding.name;\n                    }\n                }\n                if (baseFont.has('Type')) {\n                    var fontEncoding = baseFont.get('Type');\n                    if (fontEncoding !== null && typeof fontEncoding !== 'undefined') {\n                        encoding = fontEncoding.name;\n                    }\n                }\n            }\n        }\n        if (encoding.toString() === 'identity#2dh' || encoding === 'CMap') {\n            encoding = 'Identity-H';\n        }\n        return encoding;\n    };\n    _FontStructure.prototype._getDifferencesDictionary = function () {\n        var result = new Map();\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Encoding')) {\n            var encoding = this._dictionary.get('Encoding');\n            if (encoding !== null &&\n                typeof encoding !== 'undefined' &&\n                encoding instanceof _PdfDictionary &&\n                encoding.has('Differences')) {\n                var differences = encoding.getArray('Differences'); // eslint-disable-line\n                var count = 0;\n                if (differences !== null && typeof differences !== 'undefined') {\n                    for (var i = 0; i < differences.length; i++) {\n                        var text = '';\n                        var item = differences[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                        if (typeof item === 'number') {\n                            text = item.toString();\n                            count = Number.parseInt(text, 10);\n                        }\n                        else if (item instanceof _PdfName) {\n                            text = item.name;\n                            if (this._fontType === 'Type1' && text === '.notdef') {\n                                text = ' ';\n                                result.set(count.toString(), _getLatinCharacter(text));\n                            }\n                            else {\n                                text = _getLatinCharacter(text);\n                                text = _getSpecialCharacter(text);\n                                if (!result.has(count.toString())) {\n                                    result.set(count.toString(), _getLatinCharacter(text));\n                                }\n                                count++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    _FontStructure.prototype._getFontName = function () {\n        var fontName = '';\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BaseFont')) {\n            var baseFont = this._dictionary.get('BaseFont');\n            var font = baseFont.name;\n            if (font.indexOf('#20') !== -1 && font.indexOf('+') === -1) {\n                var index = font.lastIndexOf('#20');\n                font = font.substring(0, index);\n                font += '+';\n            }\n            if (baseFont.name.indexOf('+') !== -1) {\n                fontName = baseFont.name.split('+')[1];\n            }\n            else {\n                fontName = baseFont.name;\n            }\n            if (fontName.indexOf('-') !== -1) {\n                fontName = fontName.split('-')[0];\n            }\n            else if (fontName.indexOf(',') !== -1) {\n                fontName = fontName.split(',')[0];\n            }\n            if (fontName.indexOf('MT') !== -1) {\n                fontName = fontName.replace('MT', '');\n            }\n            if (fontName.indexOf('#20') !== -1) {\n                fontName = fontName.replace('#20', ' ');\n            }\n            if (fontName.indexOf('#') !== -1) {\n                fontName = this._decodeHexFontName(fontName);\n            }\n        }\n        return fontName;\n    };\n    _FontStructure.prototype._decodeHexFontName = function (fontName) {\n        var result = fontName;\n        for (var i = 0; i < fontName.length; i++) {\n            if (fontName[Number.parseInt(i.toString(), 10)] === '#') {\n                var hexValue = fontName[i + 1] + fontName[i + 2];\n                var value = Number.parseInt(hexValue, 16);\n                if (value !== 0) {\n                    result = result.replace(\"#\" + hexValue, String.fromCharCode(value));\n                    i += 2;\n                }\n                if (result.indexOf('#') === -1) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    return _FontStructure;\n}());\nexport { _FontStructure };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ExportHelper } from './xfdf-document';\nimport { _stringToAnnotationFlags, _convertToColor, _encode, _byteArrayToHexString, _stringToBytes, _annotationFlagsToString, _bytesToString, _hexStringToByteArray, _decode, _isNullOrUndefined, _compressStream } from './../utils';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './../base-stream';\nimport { PdfAnnotationFlag } from './../enumerator';\nvar _JsonDocument = /** @class */ (function (_super) {\n    __extends(_JsonDocument, _super);\n    function _JsonDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._isImport = false;\n        _this._isColorSpace = false;\n        _this._isDuplicate = false;\n        _this._isGroupingSupport = false;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    // #region Export Annotations\n    _JsonDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _JsonDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                this._exportFormFieldsData(field);\n            }\n            this._writeFormFieldData();\n        }\n        return this._save();\n    };\n    _JsonDocument.prototype._save = function () {\n        var result = new Uint8Array(this._jsonData);\n        this._jsonData = [];\n        return result;\n    };\n    _JsonDocument.prototype._writeFormFieldData = function () {\n        var _this = this;\n        this._jsonData.push(this._openingBrace);\n        var index = 0;\n        this._table.forEach(function (value, key) {\n            key = _this._getValidString(key);\n            _this._jsonData.push(_this._doubleQuotes);\n            _this._jsonData = _stringToBytes(key, true, false, _this._jsonData);\n            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                value = _this._getValidString(typeof value === 'string' ? value : value[0]);\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._doubleQuotes);\n                _this._jsonData = _stringToBytes(value, true, false, _this._jsonData);\n                _this._jsonData.push(_this._doubleQuotes);\n            }\n            else {\n                _this._jsonData.push(_this._doubleQuotes, _this._colon, _this._openingBracket);\n                for (var j = 0; j < value.length; j++) {\n                    _this._jsonData.push(_this._doubleQuotes);\n                    var entry = value[Number.parseInt(j.toString(), 10)];\n                    for (var k = 0; k < entry.length; k++) {\n                        _this._jsonData.push(entry.charCodeAt(k));\n                    }\n                    _this._jsonData.push(_this._doubleQuotes);\n                    if (j < value.length - 1) {\n                        _this._jsonData.push(_this._comma);\n                    }\n                }\n                _this._jsonData.push(_this._closingBracket);\n            }\n            if (index < _this._table.size - 1) {\n                _this._jsonData.push(_this._comma);\n            }\n            index++;\n        });\n        this._jsonData.push(this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var _this = this;\n        var isAnnotationAdded = false;\n        this._jsonData.push(this._openingBrace, this._doubleQuotes, 112, 100, 102, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBrace);\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(i !== 0 && isAnnotationAdded ? this._comma : this._space, this._doubleQuotes);\n                var pageNumber = _stringToBytes(i.toString(), true, false, []);\n                pageNumber.forEach(function (entry) {\n                    _this._jsonData.push(entry);\n                });\n                this._jsonData.push(this._doubleQuotes, this._colon, this._openingBrace, this._doubleQuotes, 115, 104, 97, 112, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, this._doubleQuotes, this._colon, this._openingBracket);\n                isAnnotationAdded = true;\n            }\n            var count = 0;\n            for (var k = 0; k < page.annotations.count; k++) {\n                var annotation = page.annotations.at(k);\n                if (annotation) {\n                    if (count !== 0) {\n                        this._jsonData.push(this._comma);\n                    }\n                    count++;\n                    this._exportAnnotation(annotation, i);\n                    this._jsonData = _stringToBytes(this._convertToJson(this._table), true, false, this._jsonData);\n                    this._table.clear();\n                }\n            }\n            if (page && page.annotations.count > 0) {\n                this._jsonData.push(this._closingBracket, this._closingBrace);\n            }\n        }\n        this._jsonData.push(this._closingBrace, this._closingBrace);\n    };\n    _JsonDocument.prototype._exportAnnotation = function (annotation, index) {\n        var hasAppearance = false;\n        var dictionary = annotation._dictionary;\n        var type = this._getAnnotationType(annotation._dictionary);\n        this._skipBorderStyle = false;\n        if (type && type !== '') {\n            this._table.set('type', type);\n            this._table.set('page', index.toString());\n            var lineAnnotation = void 0;\n            var points = void 0;\n            switch (type) {\n                case 'Line':\n                    lineAnnotation = annotation;\n                    points = lineAnnotation.linePoints;\n                    this._table.set('start', points[0].toString() + ',' + points[1].toString());\n                    this._table.set('end', points[2].toString() + ',' + points[3].toString());\n                    break;\n                case 'Stamp':\n                    hasAppearance = true;\n                    break;\n                case 'Square':\n                    hasAppearance = true;\n                    break;\n            }\n            if (dictionary && dictionary.has('BE') && dictionary.has('BS')) {\n                var borderEffect = dictionary.get('BE');\n                if (borderEffect && borderEffect.has('S')) {\n                    this._skipBorderStyle = true;\n                }\n            }\n            this._writeDictionary(dictionary, index, hasAppearance);\n        }\n    };\n    _JsonDocument.prototype._writeDictionary = function (dictionary, pageIndex, hasAppearance) {\n        var _this = this;\n        var isBorderStyle = false;\n        if (dictionary && dictionary.has('Type')) {\n            var type = dictionary.get('Type');\n            isBorderStyle = (type && type.name === 'Border' && this._skipBorderStyle);\n        }\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP') || key === 'P' || key === 'Parent')) {\n                var entry = void 0; // eslint-disable-line\n                if (value instanceof _PdfReference) {\n                    entry = dictionary.get(key);\n                }\n                if (entry && entry instanceof _PdfDictionary) {\n                    switch (key) {\n                        case 'BS':\n                        case 'BE':\n                            _this._writeDictionary(entry, pageIndex, false);\n                            break;\n                        case 'IRT':\n                            if (entry.has('NM')) {\n                                _this._table.set('inreplyto', _this._getValue(entry.get('NM'), true));\n                            }\n                            break;\n                    }\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, pageIndex, false);\n                }\n                else if ((!isBorderStyle) || (isBorderStyle && key !== 'S')) {\n                    _this._writeAttribute(key, value, dictionary);\n                }\n            }\n        });\n        if (dictionary.has('Measure')) {\n            this._exportMeasureDictionary(dictionary.get('Measure'));\n        }\n        if ((this.exportAppearance || hasAppearance) && dictionary.has('AP')) {\n            var stream = this._getAppearanceString(dictionary.get('AP'));\n            if (stream && stream.length > 0) {\n                this._table.set('appearance', _encode(stream));\n            }\n        }\n        if (dictionary.has('Sound')) {\n            var sound = dictionary.get('Sound');\n            if (sound && sound.dictionary) {\n                var soundDictionary = sound.dictionary;\n                if (soundDictionary.has('B')) {\n                    this._table.set('bits', this._getValue(soundDictionary.get('B'), true));\n                }\n                if (soundDictionary.has('C')) {\n                    this._table.set('channels', this._getValue(soundDictionary.get('C'), true));\n                }\n                if (soundDictionary.has('E')) {\n                    this._table.set('encoding', this._getValue(soundDictionary.get('E'), true));\n                }\n                if (soundDictionary.has('R')) {\n                    this._table.set('rate', this._getValue(soundDictionary.get('R'), true));\n                }\n                if (soundDictionary.has('Length') && soundDictionary.get('Length') > 0) {\n                    var data = _byteArrayToHexString(sound.getBytes());\n                    if (data && data !== '') {\n                        this._table.set('MODE', 'raw');\n                        this._table.set('encoding', 'hex');\n                        if (soundDictionary.has('Length')) {\n                            this._table.set('length', this._getValue(soundDictionary.get('Length'), true));\n                        }\n                        if (soundDictionary.has('Filter')) {\n                            this._table.set('filter', this._getValue(soundDictionary.get('Filter'), true));\n                        }\n                        this._table.set('data', data);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('FS')) {\n            var fsDictionary = dictionary.get('FS');\n            if (fsDictionary) {\n                if (fsDictionary.has('F')) {\n                    this._table.set('file', this._getValue(fsDictionary.get('F'), true));\n                }\n                if (fsDictionary.has('EF')) {\n                    var efDictionary = fsDictionary.get('EF');\n                    if (efDictionary && efDictionary.has('F')) {\n                        var fStream = efDictionary.get('F');\n                        if (fStream && fStream.dictionary) {\n                            var fDictionary = fStream.dictionary;\n                            if (fDictionary.has('Params')) {\n                                var paramsDictionary = fDictionary.get('Params');\n                                if (paramsDictionary) {\n                                    if (paramsDictionary.has('CreationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('CreationDate'), true);\n                                        this._table.set('creation', value);\n                                    }\n                                    if (paramsDictionary.has('ModificationDate')) {\n                                        var value = this._getValue(paramsDictionary.get('ModificationDate'), true);\n                                        this._table.set('modification', value);\n                                    }\n                                    if (paramsDictionary.has('Size')) {\n                                        this._table.set('size', this._getValue(paramsDictionary.get('Size'), true));\n                                    }\n                                    if (paramsDictionary.has('CheckSum')) {\n                                        var value = this._getValue(paramsDictionary.get('CheckSum'), true);\n                                        var checksum = _stringToBytes(value);\n                                        var hexString = _byteArrayToHexString(checksum);\n                                        this._table.set('checksum', hexString);\n                                    }\n                                }\n                            }\n                            var data = _byteArrayToHexString(fStream.getBytes());\n                            if (data && data !== '') {\n                                this._table.set('MODE', 'raw');\n                                this._table.set('encoding', 'hex');\n                                if (fDictionary.has('Length')) {\n                                    this._table.set('length', this._getValue(fDictionary.get('Length'), true));\n                                }\n                                if (fDictionary.has('Filter')) {\n                                    this._table.set('filter', this._getValue(fDictionary.get('Filter'), true));\n                                }\n                                this._table.set('data', data);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeColor = function (primitive, attribute, tag) {\n        var color = this._getColor(primitive);\n        if (typeof primitive === 'number' && tag) {\n            var c = this._getValue(primitive, true);\n            if (c && c !== '') {\n                this._table.set(tag, c);\n            }\n        }\n        if (color && color !== '') {\n            this._table.set(attribute, color);\n        }\n    };\n    _JsonDocument.prototype._writeAttributeString = function (attribute, primitive, isLowerCase) {\n        if (isLowerCase === void 0) { isLowerCase = false; }\n        var value = this._getValue(primitive, true);\n        this._table.set(attribute, isLowerCase ? value.toLowerCase() : value);\n    };\n    _JsonDocument.prototype._writeAttribute = function (key, primitive, dictionary) {\n        var value;\n        var rcValue;\n        var bytes;\n        switch (key) {\n            case 'C':\n                this._writeColor(primitive, 'color', 'c');\n                break;\n            case 'IC':\n                this._writeColor(primitive, 'interior-color');\n                break;\n            case 'DA':\n                value = dictionary.get('DA');\n                if (value) {\n                    this._table.set('defaultappearance', value);\n                }\n                break;\n            case 'M':\n                this._writeAttributeString('date', primitive);\n                break;\n            case 'NM':\n                this._table.set('name', primitive);\n                break;\n            case 'Name':\n                this._writeAttributeString('icon', primitive);\n                break;\n            case 'Subj':\n                this._writeAttributeString('subject', primitive);\n                break;\n            case 'T':\n                this._writeAttributeString('title', primitive);\n                break;\n            case 'Rect':\n                value = this._getValue(primitive, true);\n                if (value) {\n                    var rectArray = value.split(',');\n                    var subTable = new Map();\n                    subTable.set('x', rectArray[0]);\n                    subTable.set('y', rectArray[1]);\n                    subTable.set('width', rectArray[2]);\n                    subTable.set('height', rectArray[3]);\n                    this._table.set(key.toLowerCase(), this._convertToJson(subTable));\n                }\n                break;\n            case 'CreationDate':\n                this._writeAttributeString('creationdate', primitive);\n                break;\n            case 'Rotate':\n                this._writeAttributeString('rotation', primitive);\n                break;\n            case 'W':\n                this._writeAttributeString('width', primitive);\n                break;\n            case 'LE':\n                if (primitive && Array.isArray(primitive)) {\n                    if (primitive.length === 2) {\n                        this._table.set('head', this._getValue(primitive[0], true));\n                        this._table.set('tail', this._getValue(primitive[1], true));\n                    }\n                }\n                else if (primitive instanceof _PdfName) {\n                    this._writeAttributeString('head', primitive);\n                }\n                break;\n            case 'S':\n                switch (this._getValue(primitive, true)) {\n                    case 'D':\n                        this._table.set('style', 'dash');\n                        break;\n                    case 'C':\n                        this._table.set('style', 'cloudy');\n                        break;\n                    case 'S':\n                        this._table.set('style', 'solid');\n                        break;\n                    case 'B':\n                        this._table.set('style', 'bevelled');\n                        break;\n                    case 'I':\n                        this._table.set('style', 'inset');\n                        break;\n                    case 'U':\n                        this._table.set('style', 'underline');\n                        break;\n                }\n                break;\n            case 'D':\n                this._writeAttributeString('dashes', primitive);\n                break;\n            case 'I':\n                this._writeAttributeString('intensity', primitive);\n                break;\n            case 'RD':\n                this._writeAttributeString('fringe', primitive);\n                break;\n            case 'IT':\n                this._writeAttributeString('IT', primitive);\n                break;\n            case 'RT':\n                this._writeAttributeString('replyType', primitive, true);\n                break;\n            case 'LL':\n                this._writeAttributeString('leaderLength', primitive);\n                break;\n            case 'LLE':\n                this._writeAttributeString('leaderExtend', primitive);\n                break;\n            case 'Cap':\n                this._writeAttributeString('caption', primitive);\n                break;\n            case 'CP':\n                this._writeAttributeString('caption-style', primitive);\n                break;\n            case 'CL':\n                this._writeAttributeString('callout', primitive);\n                break;\n            case 'QuadPoints':\n                this._writeAttributeString('coords', primitive);\n                break;\n            case 'CA':\n                this._writeAttributeString('opacity', primitive);\n                break;\n            case 'F':\n                if (typeof primitive === 'number') {\n                    var flag = _annotationFlagsToString(primitive);\n                    this._table.set('flags', flag);\n                }\n                break;\n            case 'Contents':\n                value = dictionary.get('Contents');\n                if (value && value.length > 0) {\n                    this._table.set('contents', this._getValidString(value));\n                }\n                break;\n            case 'InkList':\n                this._writeInkList(dictionary);\n                break;\n            case 'Vertices':\n                this._writeVertices(dictionary);\n                break;\n            case 'DS':\n                value = dictionary.get('DS');\n                if (_isNullOrUndefined(value)) {\n                    var styleTable = new Map();\n                    var textStyle = value.split(';');\n                    for (var i = 0; i < textStyle.length; i++) {\n                        var text = textStyle[Number.parseInt(i.toString(), 10)].split(':');\n                        if (text && text.length > 0 && text[0] && text[0].length > 1 && text[0].startsWith(' ')) {\n                            text[0] = text[0].substring(1);\n                        }\n                        styleTable.set(text[0], text[1]);\n                    }\n                    this._table.set('defaultStyle', this._convertToJson(styleTable));\n                }\n                break;\n            case 'AllowedInteractions':\n                if (primitive) {\n                    var bytes_1 = _stringToBytes(primitive);\n                    var styleTable = new Map();\n                    styleTable.set('unicodeData', _byteArrayToHexString(bytes_1));\n                    this._table.set(key, this._convertToJson(styleTable));\n                }\n                break;\n            case 'RC':\n                rcValue = dictionary.get('RC');\n                if (typeof rcValue === 'string' && rcValue.includes('<body')) {\n                    var index = rcValue.indexOf('<body');\n                    if (index > 0) {\n                        rcValue = rcValue.substring(index);\n                    }\n                    this._writeAttributeString('contents-richtext', rcValue);\n                }\n                break;\n            case 'Type':\n            case 'Subtype':\n            case 'P':\n            case 'Parent':\n            case 'L':\n            case 'FS':\n            case 'MeasurementTypes':\n            case 'GroupNesting':\n            case 'ITEx':\n                break;\n            case 'TextMarkupContent':\n                bytes = _stringToBytes(primitive);\n                this._writeAttributeString(key, _byteArrayToHexString(bytes));\n                break;\n            case 'Border':\n            case 'A':\n            case 'R':\n            case 'X':\n            case 'ca':\n                this._writeAttributeString(key.toLowerCase(), primitive);\n                break;\n            default:\n                if (typeof primitive === 'string' && primitive.startsWith('{') && primitive.endsWith('}')) {\n                    this._table.set(key, primitive);\n                }\n                else {\n                    this._writeAttributeString(key, primitive);\n                }\n                break;\n        }\n    };\n    _JsonDocument.prototype._writeVertices = function (dictionary) {\n        var vertices = dictionary.getArray('Vertices');\n        if (_isNullOrUndefined(vertices) && vertices.length > 0) {\n            var elementCount = vertices.length;\n            if (elementCount % 2 === 0) {\n                var vertice = '';\n                for (var i = 0; i < elementCount - 1; i++) {\n                    vertice += this._getValue(vertices[Number.parseInt(i.toString(), 10)], true) + (i % 2 !== 0 ? ';' : ',');\n                }\n                vertice += this._getValue(vertices[elementCount - 1], true);\n                if (vertice && vertice !== '') {\n                    this._table.set('vertices', vertice);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._writeInkList = function (dictionary) {\n        var inkList = dictionary.getArray('InkList');\n        if (inkList && inkList.length > 0) {\n            var points = new Map();\n            var json = '[';\n            for (var j = 0; j < inkList.length; j++) {\n                json += '[' + this._getValue(inkList[Number.parseInt(j.toString(), 10)], true) + ']';\n                if (j < inkList.length - 1) {\n                    json += ',';\n                }\n            }\n            json += ']';\n            points.set('gesture', json);\n            this._table.set('inklist', this._convertToJson(points));\n        }\n    };\n    _JsonDocument.prototype._exportMeasureDictionary = function (dictionary) {\n        if (dictionary) {\n            if (dictionary.has('Type')) {\n                this._table.set('type1', 'Measure');\n            }\n            if (dictionary.has('R')) {\n                this._table.set('ratevalue', this._getValue(dictionary.get('R'), true));\n            }\n            if (dictionary.has('SubType')) {\n                this._table.set('SubType', this._getValue(dictionary.get('SubType'), true));\n            }\n            if (dictionary.has('TargetUnitConversion')) {\n                this._table.set('TargetUnitConversion', this._getValue(dictionary.get('TargetUnitConversion'), true));\n            }\n            if (dictionary.has('A')) {\n                var array = dictionary.getArray('A');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('area', array[0]);\n                }\n            }\n            if (dictionary.has('D')) {\n                var array = dictionary.getArray('D');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('distance', array[0]);\n                }\n            }\n            if (dictionary.has('X')) {\n                var array = dictionary.getArray('X');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('xformat', array[0]);\n                }\n            }\n            if (dictionary.has('T')) {\n                var array = dictionary.getArray('T');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('tformat', array[0]);\n                }\n            }\n            if (dictionary.has('V')) {\n                var array = dictionary.getArray('V');\n                if (array && array.length > 0 && array[0]) {\n                    this._exportMeasureFormatDetails('vformat', array[0]);\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._exportMeasureFormatDetails = function (key, measurementDetails) {\n        var details = new Map();\n        if (measurementDetails) {\n            if (measurementDetails.has('C')) {\n                details.set('c', this._getValue(measurementDetails.get('C'), true));\n            }\n            if (measurementDetails.has('F')) {\n                details.set('f', this._getValue(measurementDetails.get('F'), true));\n            }\n            if (measurementDetails.has('D')) {\n                details.set('d', this._getValue(measurementDetails.get('D'), true));\n            }\n            if (measurementDetails.has('RD')) {\n                details.set('rd', this._getValue(measurementDetails.get('RD'), true));\n            }\n            if (measurementDetails.has('U')) {\n                details.set('u', this._getValue(measurementDetails.get('U'), true));\n            }\n            if (measurementDetails.has('RT')) {\n                details.set('rt', this._getValue(measurementDetails.get('RT'), true));\n            }\n            if (measurementDetails.has('SS')) {\n                details.set('ss', this._getValue(measurementDetails.get('SS'), true));\n            }\n            if (measurementDetails.has('FD')) {\n                details.set('fd', this._getValue(measurementDetails.get('FD'), true));\n            }\n        }\n        this._table.set(key, this._convertToJson(details));\n    };\n    _JsonDocument.prototype._getAppearanceString = function (appearance) {\n        var parentTable = new Map();\n        var appearanceTable = new Map();\n        this._writeAppearanceDictionary(appearanceTable, appearance);\n        parentTable.set('ap', this._convertToJson(appearanceTable));\n        return _stringToBytes(this._convertToJson(parentTable));\n    };\n    _JsonDocument.prototype._writeAppearanceDictionary = function (table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                if (key === 'OC' && value instanceof Array || (key !== 'P' && key !== 'Parent' && key !== 'Dest' && key !== 'OC' && !(key === 'AP' && _this._isGroupingSupport))) {\n                    _this._writeObject(table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n                }\n            });\n        }\n    };\n    _JsonDocument.prototype._writeObject = function (table, value, dictionary, key, array, isColorSpace, isNewReference) {\n        if (isColorSpace === void 0) { isColorSpace = false; }\n        if (isNewReference === void 0) { isNewReference = false; }\n        if (value instanceof _PdfName) {\n            value.name = this._getValidString(value.name);\n            this._writeTable('name', value.name, table, key, array);\n        }\n        else if (Array.isArray(value)) {\n            var list = [];\n            if (key === 'ColorSpace' || isColorSpace) {\n                this._writeArray(list, value, dictionary, true);\n            }\n            else {\n                this._writeArray(list, value, dictionary);\n            }\n            this._isColorSpace = false;\n            this._writeTable('array', this._convertToJsonArray(list), table, key, array);\n        }\n        else if (typeof value === 'string') {\n            var isTabSpace = false;\n            if (value.indexOf('\\t') !== -1) {\n                isTabSpace = true;\n            }\n            if (key !== 'AllowedInteractions') {\n                value = this._getValidString(value);\n            }\n            if (this._isColorSpace || key === 'AllowedInteractions' || this._hasUnicodeCharacters(value) || isTabSpace) {\n                var bytes = _stringToBytes(value);\n                this._writeTable('unicodeData', _byteArrayToHexString(bytes), table, key, array);\n                isTabSpace = false;\n            }\n            else {\n                this._writeTable('string', value, table, key, array);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeTable(Number.isInteger(value) ? 'int' : 'fixed', value.toString(), table, key, array);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeTable('boolean', value ? 'true' : 'false', table, key, array);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new Map();\n            this._writeAppearanceDictionary(subTable, value);\n            this._writeTable('dict', this._convertToJson(subTable), table, key, array);\n        }\n        else if (value instanceof _PdfBaseStream && value.dictionary) {\n            var dataTable = new Map(); // eslint-disable-line\n            var streamTable = new Map(); // eslint-disable-line\n            var streamDictionary = value.dictionary;\n            var data = void 0;\n            var baseStream = value; // eslint-disable-line\n            var isImageStream = false;\n            if (streamDictionary.has('Subtype') && streamDictionary.get('Subtype').name === 'Image') {\n                isImageStream = true;\n            }\n            if (isNewReference && isImageStream) {\n                if (value.dictionary.has('Filter') && value.dictionary.get('Filter').name === 'DCTDecode') {\n                    data = value.getString(true);\n                }\n                else {\n                    data = _compressStream(value, true);\n                }\n            }\n            else if (isImageStream && baseStream.stream) {\n                if (baseStream.stream instanceof _PdfStream) {\n                    if (typeof baseStream._initialized === 'boolean' && baseStream._cipher) {\n                        var streamLength = baseStream.stream.end - baseStream.stream.start;\n                        baseStream.getBytes(streamLength);\n                        var bytes = baseStream.buffer.subarray(0, baseStream.bufferLength);\n                        data = baseStream.getString(true, bytes);\n                    }\n                    else {\n                        var stream = baseStream.stream;\n                        data = baseStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                    }\n                }\n                else if (baseStream.stream.stream) {\n                    var flateStream = baseStream.stream; // eslint-disable-line\n                    if (flateStream.stream instanceof _PdfStream && typeof flateStream._initialized === 'boolean' && flateStream._cipher) {\n                        var streamLength = flateStream.stream.end - flateStream.stream.start;\n                        flateStream.getBytes(streamLength);\n                        var bytes = flateStream.buffer.subarray(0, flateStream.bufferLength);\n                        data = flateStream.getString(true, bytes);\n                    }\n                    else if (flateStream.stream instanceof _PdfStream) {\n                        var stream = flateStream.stream;\n                        data = flateStream.getString(true, stream.getByteRange(stream.start, stream.end));\n                    }\n                }\n                else {\n                    data = value.getString(true);\n                }\n            }\n            else {\n                data = value.getString(true);\n            }\n            if (!streamDictionary.has('Length') && data && data !== '') {\n                streamDictionary.update('Length', value.length);\n            }\n            this._writeAppearanceDictionary(streamTable, streamDictionary);\n            var type = void 0;\n            if (streamDictionary.has('Subtype')) {\n                type = this._getValue(streamDictionary.get('Subtype'));\n            }\n            if ((!streamDictionary.has('Type') && !streamDictionary.has('Subtype')) ||\n                (streamDictionary.has('Subtype') &&\n                    (type === 'Image' || type === 'Form' || type === 'CIDFontType0C' || type === 'OpenType'))) {\n                dataTable.set('mode', 'raw');\n                dataTable.set('encoding', 'hex');\n            }\n            else {\n                dataTable.set('mode', 'filtered');\n                dataTable.set('encoding', 'ascii');\n            }\n            if (data && data !== '') {\n                dataTable.set('bytes', data);\n            }\n            streamTable.set('data', this._convertToJson(dataTable));\n            this._writeTable('stream', this._convertToJson(streamTable), table, key, array);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(table, this._crossReference._fetch(value), dictionary, key, array, isColorSpace, value._isNew);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeTable('null', 'null', table, key, array);\n        }\n    };\n    _JsonDocument.prototype._writeTable = function (tableKey, value, table, key, array) {\n        var map = new Map();\n        map.set(tableKey, value);\n        if (key) {\n            table.set(key, this._convertToJson(map));\n        }\n        else if (array) {\n            array.push(map);\n        }\n    };\n    _JsonDocument.prototype._writeArray = function (array, value, dictionary, isColorSpace) {\n        if (isColorSpace === void 0) { isColorSpace = false; }\n        for (var i = 0; i < value.length; i++) {\n            if (isColorSpace && typeof value[Number.parseInt(i.toString(), 10)] === 'string') {\n                this._isColorSpace = true;\n            }\n            this._writeObject(null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array, isColorSpace);\n        }\n    };\n    _JsonDocument.prototype._convertToJson = function (table) {\n        var j = 0;\n        var json = '{';\n        table.forEach(function (value, key) {\n            if (value.startsWith('{') || value.startsWith('[')) {\n                if (key === 'AllowedInteractions') {\n                    json += \"\\\"\" + key + \"\\\":\" + value;\n                }\n                else {\n                    json += '\"' + key + '\":' + value;\n                }\n            }\n            else {\n                if (value.startsWith(' ') && value.length > 1 && (value[1] === '[' || value[1] === '{')) {\n                    value = value.substring(1);\n                }\n                json += '\"' + key + '\":\"' + value + '\"';\n            }\n            if (j < table.size - 1) {\n                json += ',';\n            }\n            j++;\n        });\n        return json + '}';\n    };\n    _JsonDocument.prototype._hasUnicodeCharacters = function (value) {\n        var unicodeRegex = /[^\\x00-\\x7F]/; // eslint-disable-line\n        return value.split('').some(function (char) { return unicodeRegex.exec(char) !== null; }); // eslint-disable-line\n    };\n    _JsonDocument.prototype._convertToJsonArray = function (array) {\n        var json = '[';\n        for (var i = 0; i < array.length; i++) {\n            json += this._convertToJson(array[Number.parseInt(i.toString(), 10)]);\n            if (i < array.length - 1) {\n                json += ',';\n            }\n        }\n        return json + ']';\n    };\n    // #import\n    _JsonDocument.prototype._parseJson = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var stringData = _bytesToString(data, true);\n        if (stringData.startsWith('{') && !stringData.endsWith('}')) {\n            while (stringData.length > 0 && !stringData.endsWith('}')) {\n                stringData = stringData.substring(0, stringData.length - 1);\n            }\n        }\n        return JSON.parse(stringData);\n    };\n    _JsonDocument.prototype._importFormData = function (document, data) {\n        var _this = this;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys && keys.length > 0) {\n                var _loop_1 = function (i) {\n                    var key = keys[Number.parseInt(i.toString(), 10)];\n                    var value = json[key]; // eslint-disable-line\n                    if (Array.isArray(value)) {\n                        if (this_1._fields.has('key')) {\n                            value.forEach(function (entry) {\n                                _this._fields.get(key).push(entry);\n                            });\n                        }\n                        else {\n                            this_1._fields.set(key, value);\n                        }\n                    }\n                    else {\n                        if (this_1._fields.has('key')) {\n                            this_1._fields.get(key).push(value);\n                        }\n                        else {\n                            this_1._fields.set(key, [value]);\n                        }\n                    }\n                };\n                var this_1 = this;\n                for (var i = 0; i < keys.length; i++) {\n                    _loop_1(i);\n                }\n                this._importField();\n            }\n        }\n    };\n    _JsonDocument.prototype._importAnnotations = function (document, data) {\n        var _this = this;\n        this._isImport = true;\n        var json = this._parseJson(document, data); // eslint-disable-line\n        if (json) {\n            var keys = Object.keys(json);\n            if (keys.indexOf('pdfAnnotation') !== -1) {\n                var pageAnnotations_1 = json.pdfAnnotation; // eslint-disable-line\n                var pageCount_1 = document.pageCount;\n                var pageKeys = Object.keys(pageAnnotations_1);\n                if (pageKeys && pageKeys.length > 0) {\n                    pageKeys.forEach(function (key) {\n                        var pageIndex = Number.parseInt(key, 10);\n                        if (typeof pageIndex !== 'undefined' && pageIndex < pageCount_1) {\n                            var page_1 = document.getPage(pageIndex);\n                            var pageAnnotation = pageAnnotations_1[key]; // eslint-disable-line\n                            if (pageAnnotation) {\n                                var pageAnnotationKeys = Object.keys(pageAnnotation);\n                                if (pageAnnotationKeys && pageAnnotationKeys.length > 0 && pageAnnotationKeys.indexOf('shapeAnnotation') !== -1) {\n                                    var annotations = pageAnnotation['shapeAnnotation']; // eslint-disable-line\n                                    if (annotations && annotations.length > 0) {\n                                        annotations.forEach(function (annotation) {\n                                            var annotationKeys = Object.keys(annotation);\n                                            if (annotationKeys && annotationKeys.length > 0 && annotationKeys.indexOf('type') !== -1) {\n                                                var dictionary = new _PdfDictionary(_this._crossReference);\n                                                dictionary.update('Type', _PdfName.get('Annot'));\n                                                var isValidType = true;\n                                                switch (annotation['type'].toLowerCase()) {\n                                                    case 'line':\n                                                        dictionary.update('Subtype', _PdfName.get('Line'));\n                                                        break;\n                                                    case 'circle':\n                                                        dictionary.update('Subtype', _PdfName.get('Circle'));\n                                                        break;\n                                                    case 'square':\n                                                        dictionary.update('Subtype', _PdfName.get('Square'));\n                                                        break;\n                                                    case 'polyline':\n                                                        dictionary.update('Subtype', _PdfName.get('PolyLine'));\n                                                        break;\n                                                    case 'polygon':\n                                                        dictionary.update('Subtype', _PdfName.get('Polygon'));\n                                                        break;\n                                                    case 'ink':\n                                                        dictionary.update('Subtype', _PdfName.get('Ink'));\n                                                        break;\n                                                    case 'popup':\n                                                        dictionary.update('Subtype', _PdfName.get('Popup'));\n                                                        break;\n                                                    case 'text':\n                                                        dictionary.update('Subtype', _PdfName.get('Text'));\n                                                        break;\n                                                    case 'freetext':\n                                                        dictionary.update('Subtype', _PdfName.get('FreeText'));\n                                                        break;\n                                                    case 'stamp':\n                                                        dictionary.update('Subtype', _PdfName.get('Stamp'));\n                                                        break;\n                                                    case 'highlight':\n                                                        dictionary.update('Subtype', _PdfName.get('Highlight'));\n                                                        break;\n                                                    case 'squiggly':\n                                                        dictionary.update('Subtype', _PdfName.get('Squiggly'));\n                                                        break;\n                                                    case 'underline':\n                                                        dictionary.update('Subtype', _PdfName.get('Underline'));\n                                                        break;\n                                                    case 'strikeout':\n                                                        dictionary.update('Subtype', _PdfName.get('StrikeOut'));\n                                                        break;\n                                                    case 'fileattachment':\n                                                        dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n                                                        break;\n                                                    case 'sound':\n                                                        dictionary.update('Subtype', _PdfName.get('Sound'));\n                                                        break;\n                                                    case 'redact':\n                                                        dictionary.update('Subtype', _PdfName.get('Redact'));\n                                                        break;\n                                                    case 'caret':\n                                                        dictionary.update('Subtype', _PdfName.get('Caret'));\n                                                        break;\n                                                    default:\n                                                        isValidType = false;\n                                                        break;\n                                                }\n                                                if (isValidType) {\n                                                    _this._addAnnotationData(dictionary, annotation, annotationKeys);\n                                                    var pageDictionary = page_1._pageDictionary;\n                                                    if (pageDictionary) {\n                                                        var annotations_1 = page_1.annotations;\n                                                        var annotation_1 = annotations_1._parseAnnotation(dictionary);\n                                                        if (annotation_1) {\n                                                            annotation_1._isImported = true;\n                                                            var reference = _this._crossReference._getNextReference();\n                                                            _this._crossReference._cacheMap.set(reference, dictionary);\n                                                            if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                                                _this._addReferenceToGroup(reference, dictionary);\n                                                            }\n                                                            annotation_1._ref = reference;\n                                                            var index = annotations_1._annotations.length;\n                                                            annotations_1._annotations.push(reference);\n                                                            if (annotations_1._comments && annotations_1._comments.length > 0) {\n                                                                annotations_1._comments = [];\n                                                            }\n                                                            pageDictionary.set('Annots', annotations_1._annotations);\n                                                            pageDictionary._updated = true;\n                                                            annotations_1._parsedAnnotations.set(index, annotation_1);\n                                                            _this._handlePopup(annotations_1, reference, dictionary, pageDictionary);\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this._groupHolders.length > 0) {\n                    for (var i = 0; i < this._groupHolders.length; i++) {\n                        var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo && inReplyTo !== '') {\n                            if (this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n                this._groupHolders = [];\n                this._groupReferences = new Map();\n            }\n        }\n    };\n    _JsonDocument.prototype._addAnnotationData = function (dictionary, annotation, annotationKeys) {\n        var _this = this;\n        var borderEffectDictionary = new _PdfDictionary(this._crossReference);\n        var borderStyleDictionary = new _PdfDictionary(this._crossReference);\n        var dataStream = new Map();\n        var linePoints = [];\n        var beginLineStyle;\n        var endLineStyle;\n        var values = '';\n        var rect;\n        var outColor;\n        annotationKeys.forEach(function (key) {\n            var value = annotation[key]; // eslint-disable-line\n            switch (key.toLowerCase()) {\n                case 'start':\n                case 'end':\n                    _this._addLinePoints(value, linePoints);\n                    if (linePoints.length === 4) {\n                        dictionary.update('L', linePoints);\n                        linePoints = [];\n                    }\n                    break;\n                case 'itex':\n                    break;\n                case 'state':\n                    _this._addString(dictionary, 'State', value);\n                    break;\n                case 'statemodel':\n                    _this._addString(dictionary, 'StateModel', value);\n                    break;\n                case 'replytype':\n                    if (value.toLowerCase() === 'group') {\n                        dictionary.update('RT', _PdfName.get('Group'));\n                    }\n                    break;\n                case 'inreplyto':\n                    _this._addString(dictionary, 'IRT', value);\n                    break;\n                case 'dashes':\n                case 'width':\n                case 'intensity':\n                case 'style':\n                    _this._addBorderStyle(key, value, borderEffectDictionary, borderStyleDictionary);\n                    break;\n                case 'rect':\n                    rect = value;\n                    if (rect) {\n                        var points = [];\n                        points.push(Number.parseFloat(rect.x));\n                        points.push(Number.parseFloat(rect.y));\n                        points.push(Number.parseFloat(rect.width));\n                        points.push(Number.parseFloat(rect.height));\n                        if (points && points.length === 4) {\n                            dictionary.update('Rect', points);\n                        }\n                    }\n                    break;\n                case 'color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('C', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'oc':\n                    if (value && dictionary.get('Subtype').name === 'Redact') {\n                        outColor = value.split(',');\n                        var color_1 = [];\n                        outColor.forEach(function (entry) {\n                            color_1.push(Number.parseFloat(entry));\n                        });\n                        if (color_1 && color_1.length > 0) {\n                            dictionary.update('OC', color_1);\n                        }\n                    }\n                    break;\n                case 'interior-color':\n                    value = _convertToColor(value);\n                    if (value && value.length === 3) {\n                        dictionary.update('IC', [value[0] / 255, value[1] / 255, value[2] / 255]);\n                    }\n                    break;\n                case 'date':\n                    _this._addString(dictionary, 'M', value);\n                    break;\n                case 'creationdate':\n                    _this._addString(dictionary, 'CreationDate', value);\n                    break;\n                case 'name':\n                    _this._addString(dictionary, 'NM', value);\n                    break;\n                case 'icon':\n                    if (value) {\n                        dictionary.update('Name', _PdfName.get(value));\n                    }\n                    break;\n                case 'subject':\n                    _this._addString(dictionary, 'Subj', value);\n                    break;\n                case 'title':\n                    _this._addString(dictionary, 'T', value);\n                    break;\n                case 'rotation':\n                    dictionary.update('Rotate', Number.parseFloat(value));\n                    break;\n                case 'fringe':\n                    _this._addFloatPoints(dictionary, 'RD', _this._parseFloatPoints(value));\n                    break;\n                case 'it':\n                    if (value) {\n                        dictionary.update('IT', _PdfName.get(value));\n                    }\n                    break;\n                case 'leaderlength':\n                    dictionary.update('LL', Number.parseFloat(value));\n                    break;\n                case 'leaderextend':\n                    dictionary.update('LLE', Number.parseFloat(value));\n                    break;\n                case 'caption':\n                    _this._addBoolean(dictionary, 'Cap', value.toLowerCase());\n                    break;\n                case 'caption-style':\n                    if (value) {\n                        dictionary.update('CP', _PdfName.get(value));\n                    }\n                    break;\n                case 'callout':\n                    _this._addFloatPoints(dictionary, 'CL', _this._parseFloatPoints(value));\n                    break;\n                case 'coords':\n                    _this._addFloatPoints(dictionary, 'QuadPoints', _this._parseFloatPoints(value));\n                    break;\n                case 'border':\n                    _this._addFloatPoints(dictionary, 'Border', _this._parseFloatPoints(value));\n                    break;\n                case 'opacity':\n                    dictionary.update('CA', Number.parseFloat(value));\n                    break;\n                case 'defaultstyle':\n                    if (value) {\n                        var styleKeys_1 = Object.keys(value);\n                        if (styleKeys_1 && styleKeys_1.length > 0) {\n                            var style_1 = '';\n                            var count_1 = 0;\n                            styleKeys_1.forEach(function (styleKey) {\n                                var styleValue = value[styleKey]; // eslint-disable-line\n                                style_1 += styleKey + ':' + styleValue;\n                                if (count_1 < styleKeys_1.length - 1) {\n                                    style_1 += ';';\n                                }\n                                count_1++;\n                            });\n                            _this._addString(dictionary, 'DS', style_1);\n                        }\n                    }\n                    break;\n                case 'defaultappearance':\n                    _this._addString(dictionary, 'DA', value);\n                    break;\n                case 'contents-richtext':\n                    if (typeof value === 'string') {\n                        _this._addString(dictionary, 'RC', value);\n                    }\n                    break;\n                case 'flags':\n                    if (value && typeof value === 'string') {\n                        var annotFlag = PdfAnnotationFlag.default;\n                        var flags = value.split(',');\n                        for (var i = 0; i < flags.length; i++) {\n                            var flagType = _stringToAnnotationFlags(flags[Number.parseInt(i.toString(), 10)]);\n                            if (i === 0) {\n                                annotFlag = flagType;\n                            }\n                            else {\n                                annotFlag |= flagType;\n                            }\n                        }\n                        dictionary.update('F', annotFlag);\n                    }\n                    break;\n                case 'open':\n                    _this._addBoolean(dictionary, 'Open', value.toLowerCase());\n                    break;\n                case 'repeat':\n                    _this._addBoolean(dictionary, 'Repeat', value.toLowerCase());\n                    break;\n                case 'overlaytext':\n                    _this._addString(dictionary, 'OverlayText', value);\n                    break;\n                case 'contents':\n                    if (typeof value === 'string') {\n                        if (value.indexOf('\\\\r') !== -1) {\n                            value = value.replace('\\\\r', '\\r');\n                        }\n                        if (value) {\n                            _this._addString(dictionary, 'Contents', value);\n                        }\n                    }\n                    break;\n                case 'q':\n                    dictionary.update('Q', Number.parseInt(value, 10));\n                    break;\n                case 'inklist':\n                    if (value) {\n                        var gestureKeys = Object.keys(value);\n                        if (gestureKeys && gestureKeys.length > 0 && gestureKeys.indexOf('gesture') !== -1) {\n                            var gesture = value.gesture;\n                            if (gesture && gesture.length > 0) {\n                                dictionary.update('InkList', gesture);\n                            }\n                        }\n                    }\n                    break;\n                case 'head':\n                    beginLineStyle = value;\n                    break;\n                case 'tail':\n                    endLineStyle = value;\n                    break;\n                case 'creation':\n                case 'modification':\n                case 'file':\n                case 'bits':\n                case 'channels':\n                case 'encoding':\n                case 'rate':\n                case 'length':\n                case 'filter':\n                case 'mode':\n                case 'size':\n                    dataStream.set(key, value);\n                    break;\n                case 'data':\n                    values = value;\n                    break;\n                case 'vertices':\n                    if (value && typeof value === 'string') {\n                        var split = value.split(/[,;]/);\n                        if (split && split.length > 0) {\n                            var vertices = [];\n                            for (var i = 0; i < split.length; i++) {\n                                vertices.push(Number.parseFloat(split[Number.parseInt(i.toString(), 10)]));\n                            }\n                            if (vertices.length > 0 && vertices.length % 2 === 0) {\n                                dictionary.update('Vertices', vertices);\n                            }\n                        }\n                    }\n                    break;\n                case 'appearance':\n                    _this._addAppearanceData(dictionary, value);\n                    break;\n                case 'allowedinteractions':\n                    if (value) {\n                        if (value && typeof value === 'string') {\n                            _this._addString(dictionary, 'AllowedInteractions', value);\n                        }\n                        else {\n                            var interactionKeys = Object.keys(value);\n                            if (interactionKeys && interactionKeys.length > 0 && interactionKeys.indexOf('unicodeData') !== -1) {\n                                var convertString = JSON.stringify(value['unicodeData']);\n                                convertString = convertString.substring(1, convertString.length - 1);\n                                value = _bytesToString(_hexStringToByteArray(convertString, false), true);\n                                _this._addString(dictionary, 'AllowedInteractions', value);\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    if (_this._document._allowImportCustomData && key !== 'type' && key !== 'page') {\n                        _this._addString(dictionary, key, typeof value === 'string' ? value : JSON.stringify(value));\n                    }\n                    break;\n            }\n        });\n        this._addMeasureDictionary(dictionary, annotation, annotationKeys);\n        if (beginLineStyle) {\n            if (endLineStyle) {\n                dictionary.update('LE', [_PdfName.get(beginLineStyle), _PdfName.get(endLineStyle)]);\n            }\n            else {\n                dictionary.update('LE', beginLineStyle);\n            }\n        }\n        else if (endLineStyle) {\n            dictionary.update('LE', endLineStyle);\n        }\n        if (borderStyleDictionary.size > 0) {\n            borderStyleDictionary.update('Type', _PdfName.get('Border'));\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderStyleDictionary);\n            dictionary.update('BS', reference);\n        }\n        if (borderEffectDictionary.size > 0) {\n            var reference = this._crossReference._getNextReference();\n            borderStyleDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, borderEffectDictionary);\n            dictionary.update('BE', reference);\n        }\n        this._addStreamData(dictionary, dataStream, values);\n    };\n    _JsonDocument.prototype._addLinePoints = function (value, linePoints) {\n        if (value && value.indexOf(',') !== -1) {\n            var points = value.split(',');\n            points.forEach(function (point) {\n                linePoints.push(Number.parseFloat(point));\n            });\n        }\n    };\n    _JsonDocument.prototype._addString = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addBoolean = function (dictionary, key, value) {\n        if (value) {\n            dictionary.update(key, value === 'yes' || value === 'true');\n        }\n    };\n    _JsonDocument.prototype._addBorderStyle = function (key, value, borderEffectDictionary, borderStyleDictionary) {\n        var style = '';\n        var isBasicStyle = true;\n        switch (value) {\n            case 'dash':\n                style = 'D';\n                break;\n            case 'solid':\n                style = 'S';\n                break;\n            case 'bevelled':\n                style = 'B';\n                break;\n            case 'inset':\n                style = 'I';\n                break;\n            case 'underline':\n                style = 'U';\n                break;\n            case 'cloudy':\n                style = 'C';\n                isBasicStyle = false;\n                break;\n        }\n        switch (key.toLowerCase()) {\n            case 'width':\n                borderStyleDictionary.update('W', Number.parseFloat(value));\n                break;\n            case 'intensity':\n                borderEffectDictionary.update('I', Number.parseFloat(value));\n                break;\n            case 'dashes':\n                if (value && value.indexOf(',') !== -1) {\n                    borderStyleDictionary.update('D', this._parseFloatPoints(value));\n                }\n                break;\n        }\n        if (style) {\n            if (isBasicStyle) {\n                borderStyleDictionary.update('S', _PdfName.get(style));\n            }\n            else {\n                borderEffectDictionary.update('S', _PdfName.get(style));\n            }\n        }\n    };\n    _JsonDocument.prototype._parseFloatPoints = function (value) {\n        var dashes = value.split(',');\n        var dashArray = [];\n        dashes.forEach(function (dash) {\n            dashArray.push(Number.parseFloat(dash));\n        });\n        return dashArray;\n    };\n    _JsonDocument.prototype._addFloatPoints = function (dictionary, key, value) {\n        if (value && value.length > 0) {\n            dictionary.update(key, value);\n        }\n    };\n    _JsonDocument.prototype._addMeasureDictionary = function (dictionary, annotation, annotationKeys) {\n        var measureDictionary = new _PdfDictionary(this._crossReference);\n        var aArray = [];\n        var dArray = [];\n        var xArray = [];\n        var tArray = [];\n        var vArray = [];\n        measureDictionary.set('A', aArray);\n        measureDictionary.set('D', dArray);\n        measureDictionary.set('X', xArray);\n        measureDictionary.set('T', tArray);\n        measureDictionary.set('V', vArray);\n        if (annotationKeys.indexOf('ratevalue') !== -1) {\n            this._addString(measureDictionary, 'R', annotation['ratevalue']);\n        }\n        if (annotationKeys.indexOf('subtype') !== -1) {\n            this._addString(measureDictionary, 'Subtype', annotation['subtype']);\n        }\n        if (annotationKeys.indexOf('targetunitconversion') !== -1) {\n            this._addString(measureDictionary, 'TargetUnitConversion', annotation['targetunitconversion']);\n        }\n        if (annotationKeys.indexOf('area') !== -1) {\n            aArray.push(this._readDictionaryElements(annotation['area']));\n        }\n        if (annotationKeys.indexOf('distance') !== -1) {\n            dArray.push(this._readDictionaryElements(annotation['distance']));\n        }\n        if (annotationKeys.indexOf('xformat') !== -1) {\n            xArray.push(this._readDictionaryElements(annotation['xformat']));\n        }\n        if (annotationKeys.indexOf('tformat') !== -1) {\n            tArray.push(this._readDictionaryElements(annotation['tformat']));\n        }\n        if (annotationKeys.indexOf('vformat') !== -1) {\n            vArray.push(this._readDictionaryElements(annotation['vformat']));\n        }\n        if (annotationKeys.indexOf('type1') !== -1) {\n            measureDictionary.set('Type', _PdfName.get('Measure'));\n            var reference = this._crossReference._getNextReference();\n            measureDictionary.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            dictionary.update('Measure', reference);\n        }\n    };\n    _JsonDocument.prototype._readDictionaryElements = function (elements) {\n        var keys = Object.keys(elements);\n        var dictionary = new _PdfDictionary(this._crossReference);\n        if (keys && keys.length > 0) {\n            keys.forEach(function (key) {\n                var value = elements[key]; // eslint-disable-line\n                if (key && value) {\n                    switch (key) {\n                        case 'd':\n                            dictionary.set('D', Number.parseFloat(value));\n                            break;\n                        case 'c':\n                            dictionary.set('C', Number.parseFloat(value));\n                            break;\n                        case 'rt':\n                            dictionary.set('RT', value);\n                            break;\n                        case 'rd':\n                            dictionary.set('RD', value);\n                            break;\n                        case 'ss':\n                            dictionary.set('SS', value);\n                            break;\n                        case 'u':\n                            dictionary.set('U', value);\n                            break;\n                        case 'f':\n                            dictionary.set('F', _PdfName.get(value));\n                            break;\n                        case 'fd':\n                            dictionary.set('FD', value);\n                            break;\n                        case 'type':\n                            dictionary.set('Type', _PdfName.get(value));\n                            break;\n                    }\n                }\n            });\n        }\n        return dictionary;\n    };\n    _JsonDocument.prototype._addStreamData = function (dictionary, data, values) {\n        var _this = this;\n        var subtype = dictionary.get('Subtype').name;\n        var bytes = _hexStringToByteArray(values, true);\n        if (subtype === 'Sound') {\n            var soundStream_1 = new _PdfContentStream(bytes);\n            soundStream_1.dictionary._crossReference = this._crossReference;\n            soundStream_1.dictionary.update('Type', _PdfName.get('Sound'));\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    switch (key) {\n                        case 'bits':\n                        case 'rate':\n                        case 'channels':\n                            soundStream_1.dictionary.set(key, Number.parseInt(value, 10));\n                            break;\n                        case 'encoding':\n                            soundStream_1.dictionary.set('E', _PdfName.get(value));\n                            break;\n                        case 'filter':\n                            soundStream_1.dictionary.set('Filter', _PdfName.get('FlateDecode'));\n                            break;\n                    }\n                }\n            });\n            soundStream_1.reference = this._crossReference._getNextReference();\n            soundStream_1.dictionary.objId = soundStream_1.reference.objectNumber + ' ' + soundStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(soundStream_1.reference, soundStream_1);\n            dictionary.update('Sound', soundStream_1.reference);\n        }\n        else if (subtype === 'FileAttachment') {\n            var fileDictionary_1 = new _PdfDictionary(this._crossReference);\n            fileDictionary_1.update('Type', _PdfName.get('Filespec'));\n            var fileStream_1 = new _PdfContentStream(bytes);\n            fileStream_1.dictionary._crossReference = this._crossReference;\n            var param_1 = new _PdfDictionary(this._crossReference);\n            data.forEach(function (value, key) {\n                if (key && value) {\n                    var size = void 0;\n                    switch (key) {\n                        case 'file':\n                            _this._addString(fileDictionary_1, 'F', value);\n                            _this._addString(fileDictionary_1, 'UF', value);\n                            break;\n                        case 'size':\n                            size = Number.parseInt(value, 10);\n                            if (typeof size !== 'undefined') {\n                                param_1.update('Size', size);\n                                fileStream_1.dictionary.update('DL', size);\n                            }\n                            break;\n                        case 'creation':\n                            _this._addString(param_1, 'CreationDate', value);\n                            break;\n                        case 'modification':\n                            _this._addString(param_1, 'ModificationDate', value);\n                            break;\n                    }\n                }\n            });\n            fileStream_1.dictionary.update('Params', param_1);\n            fileStream_1.dictionary.update('Filter', _PdfName.get('FlateDecode'));\n            fileStream_1.reference = this._crossReference._getNextReference();\n            fileStream_1.dictionary.objId = fileStream_1.reference.objectNumber + ' ' + fileStream_1.reference.generationNumber;\n            this._crossReference._cacheMap.set(fileStream_1.reference, fileStream_1);\n            var embeddedFile = new _PdfDictionary(this._crossReference);\n            embeddedFile.update('F', fileStream_1.reference);\n            fileDictionary_1.update('EF', embeddedFile);\n            var reference = this._crossReference._getNextReference();\n            fileDictionary_1.objId = reference.objectNumber + ' ' + reference.generationNumber;\n            this._crossReference._cacheMap.set(reference, fileDictionary_1);\n            dictionary.update('FS', reference);\n        }\n    };\n    _JsonDocument.prototype._addAppearanceData = function (dictionary, data) {\n        if (data) {\n            var encoded = _decode(data, false);\n            var decoded = _bytesToString(encoded);\n            if (decoded.startsWith('{') && !decoded.endsWith('}')) {\n                while (decoded.length > 0 && !decoded.endsWith('}')) {\n                    decoded = decoded.substring(0, decoded.length - 1);\n                }\n            }\n            var json = JSON.parse(decoded); // eslint-disable-line\n            if (json) {\n                var keys = Object.keys(json);\n                if (keys && keys.length > 0 && keys.indexOf('ap') !== -1) {\n                    dictionary.update('AP', this._parseDictionary(json['ap']));\n                }\n            }\n        }\n    };\n    _JsonDocument.prototype._parseAppearance = function (element) {\n        var _this = this;\n        var value; // eslint-disable-line\n        var keys = Object.keys(element);\n        if (keys.indexOf('name') !== -1) {\n            value = _PdfName.get(element.name);\n        }\n        else if (keys.indexOf('int') !== -1) {\n            value = Number.parseInt(element.int, 10);\n        }\n        else if (keys.indexOf('fixed') !== -1) {\n            value = Number.parseFloat(element.fixed);\n        }\n        else if (keys.indexOf('string') !== -1) {\n            value = element.string;\n        }\n        else if (keys.indexOf('boolean') !== -1) {\n            value = element.boolean === 'true' ? true : false;\n        }\n        else if (keys.indexOf('array') !== -1) {\n            var array = element.array; // eslint-disable-line\n            value = [];\n            array.forEach(function (element) {\n                value.push(_this._parseAppearance(element));\n            });\n        }\n        else if (keys.indexOf('dict') !== -1) {\n            var dictionary = this._parseDictionary(element.dict);\n            if (dictionary.size > 0) {\n                value = this._crossReference._getNextReference();\n                dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n                this._crossReference._cacheMap.set(value, dictionary);\n            }\n            else {\n                value = new _PdfDictionary(this._crossReference);\n            }\n        }\n        else if (keys.indexOf('stream') !== -1) {\n            var stream = this._parseStream(element.stream);\n            value = this._crossReference._getNextReference();\n            stream.reference = value;\n            stream.dictionary.objId = value.objectNumber + ' ' + value.generationNumber;\n            this._crossReference._cacheMap.set(value, stream);\n        }\n        else if (keys.indexOf('unicodeData') !== -1) {\n            value = _bytesToString(_hexStringToByteArray(element.unicodeData, false), true);\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    _JsonDocument.prototype._parseDictionary = function (element) {\n        var _this = this;\n        var result = new _PdfDictionary(this._crossReference);\n        if (element) {\n            var keys = Object.keys(element);\n            if (keys && keys.length > 0) {\n                keys.forEach(function (key) {\n                    var value = element[key]; // eslint-disable-line\n                    if (key !== 'data') {\n                        var primitive = _this._parseAppearance(value); // eslint-disable-line\n                        result.update(key, primitive);\n                    }\n                });\n            }\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStream = function (element) {\n        var result;\n        var keys = Object.keys(element);\n        if (element && keys.indexOf('data')) {\n            var data = element.data; // eslint-disable-line\n            var bytes = void 0;\n            if (data) {\n                var dataKeys = Object.keys(data);\n                if (dataKeys && dataKeys.indexOf('bytes') !== -1) {\n                    var byteString = data.bytes;\n                    if (byteString) {\n                        bytes = _hexStringToByteArray(byteString, true);\n                    }\n                }\n            }\n            if (!bytes) {\n                bytes = [];\n            }\n            var stream = new _PdfContentStream(bytes);\n            if (this._crossReference) {\n                this._parseStreamElements(stream, element);\n            }\n            else {\n                stream._pendingResources = JSON.stringify(element);\n            }\n            result = stream;\n        }\n        return result;\n    };\n    _JsonDocument.prototype._parseStreamElements = function (stream, element) {\n        if (typeof element === 'undefined' && stream._pendingResources) {\n            element = JSON.parse(stream._pendingResources);\n        }\n        if (element) {\n            var dictionary = this._parseDictionary(element);\n            var isImage = false;\n            if (dictionary && dictionary.has('Subtype')) {\n                var type = dictionary.get('Subtype');\n                isImage = type && type.name === 'Image';\n            }\n            if (isImage || (this._isImport && stream._isCompress)) {\n                stream._isCompress = false;\n            }\n            else {\n                if (dictionary.has('Length')) {\n                    delete dictionary._map.Length;\n                }\n                if (dictionary.has('Filter')) {\n                    delete dictionary._map.Filter;\n                }\n            }\n            stream.dictionary = dictionary;\n        }\n    };\n    _JsonDocument.prototype._getValidString = function (value) {\n        if (value.indexOf('\\\\') !== -1) {\n            value = value.replace(/\\\\/g, '\\\\\\\\');\n        }\n        if (value.indexOf('\"') !== -1) {\n            value = value.replace(/\"/g, '\\\\\"');\n        }\n        if (value.indexOf('[') !== -1) {\n            value = value.replace(/\\[/g, '\\\\[');\n        }\n        if (value.indexOf(']') !== -1) {\n            value = value.replace(/\\[/g, '\\\\]');\n        }\n        if (value.indexOf('{') !== -1) {\n            value = value.replace(/\\[/g, '\\\\{');\n        }\n        if (value.indexOf('}') !== -1) {\n            value = value.replace(/\\}/g, '\\\\}');\n        }\n        if (value.indexOf('\\n') !== -1) {\n            value = value.replace(/\\n/g, '\\\\n');\n        }\n        if (value.indexOf('\\r') !== -1) {\n            value = value.replace(/\\r/g, '\\\\r');\n        }\n        return value;\n    };\n    return _JsonDocument;\n}(_ExportHelper));\nexport { _JsonDocument };\n","import { _PdfName } from './../pdf-primitives';\nimport { _PdfBaseStream, _PdfContentStream } from './../base-stream';\nimport { PdfGraphics } from './pdf-graphics';\nimport { _toRectangle } from './../utils';\nimport { _JsonDocument } from './../import-export/json-document';\n/**\n * `PdfTemplate` class represents the template of the PDF.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the normal appearance of the annotation\n * let normalAppearance: PdfTemplate = annotation.appearance.normal;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * normalAppearance.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(value, crossReference) {\n        this._isExported = false;\n        this._isResourceExport = false;\n        this._isSignature = false;\n        this._crossReference = crossReference;\n        if (value instanceof _PdfBaseStream) {\n            this._content = value;\n            if (!this._content.dictionary.has('Type') || !this._content.dictionary.has('Subtype')) {\n                this._initialize();\n            }\n            var bounds = this._content.dictionary.getArray('BBox');\n            if (bounds && bounds.length > 3) {\n                var rect = _toRectangle(bounds);\n                this._size = [rect.width, rect.height];\n                this._templateOriginalSize = this._size;\n            }\n            this._isReadOnly = true;\n        }\n        else {\n            if (typeof value !== 'undefined') {\n                this._size = [value[2], value[3]];\n                this._content = new _PdfContentStream([]);\n                this._content.dictionary._crossReference = this._crossReference;\n                this._initialize();\n                this._content.dictionary.set('BBox', [value[0], value[1], value[0] + value[2], value[1] + value[3]]);\n            }\n            else {\n                this._isReadOnly = true;\n            }\n        }\n        this._writeTransformation = true;\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Get the graphics of the PDF template. (Read only)\n         *\n         * @returns {PdfGraphics} The graphics object of the PDF template.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the graphics of the normal appearance\n         * let graphics: PdfGraphics = annotation.appearance.normal.graphics;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isReadOnly) {\n                return null;\n            }\n            if (typeof this._g === 'undefined') {\n                this._g = new PdfGraphics(this._size, this._content, this._crossReference, this);\n                if (this._writeTransformation) {\n                    this._g._initializeCoordinates();\n                }\n                this._g._isTemplateGraphics = true;\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        /**\n         * Get the size of the PDF template. (Read only)\n         *\n         * @returns {number[]} Template width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array.\n         * let size: number[] = template.size;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"_originalSize\", {\n        /**\n         * Get the original size of the PDF template. (Read only)\n         *\n         * Remarks: The `_originalSize` property is internal and provides access to the original dimensions of the PDF template.\n         *\n         * @returns {number[]} Template original width and height as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Get the width and height of the PDF template as number array\n         * let size: number[] = template._originalSize;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, size[0], size[1]);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._templateOriginalSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTemplate.prototype._initialize = function () {\n        this._content.dictionary.set('Type', _PdfName.get('XObject'));\n        this._content.dictionary.set('Subtype', _PdfName.get('Form'));\n    };\n    PdfTemplate.prototype._exportStream = function (dictionary, crossReference) {\n        var jsonDocument = new _JsonDocument();\n        jsonDocument._crossReference = crossReference;\n        jsonDocument._isAnnotationExport = true;\n        var resourceTable = new Map();\n        jsonDocument._writeObject(resourceTable, dictionary.get('N'), dictionary, 'normal');\n        this._appearance = jsonDocument._convertToJson(resourceTable);\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._importStream = function (hasCrossReference, isResourceExport) {\n        var jsonDocument = new _JsonDocument();\n        if (hasCrossReference) {\n            jsonDocument._crossReference = this._crossReference;\n        }\n        var json = JSON.parse(this._appearance); // eslint-disable-line    \n        if (json) {\n            var entryKey = isResourceExport ? 'resources' : 'normal'; // eslint-disable-line\n            var entry = json[entryKey]; // eslint-disable-line    \n            if (entry) {\n                if (isResourceExport) {\n                    var resourceDictionary = jsonDocument._parseDictionary(entry['dict']);\n                    if (hasCrossReference) {\n                        this._content.dictionary.update('Resources', resourceDictionary);\n                    }\n                }\n                else {\n                    this._content = jsonDocument._parseStream(entry['stream']);\n                    if (hasCrossReference) {\n                        this._content.dictionary._crossReference = this._crossReference;\n                        this._content.dictionary._updated = true;\n                    }\n                }\n            }\n        }\n        jsonDocument._dispose();\n    };\n    PdfTemplate.prototype._updatePendingResource = function (crossReference) {\n        if (this._content._pendingResources && this._content._pendingResources !== '') {\n            var jsonDocument = new _JsonDocument();\n            jsonDocument._crossReference = crossReference;\n            jsonDocument._parseStreamElements(this._content);\n            this._content._pendingResources = '';\n            jsonDocument._dispose();\n        }\n    };\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName } from './pdf-primitives';\nimport { _obtainDestination } from './utils';\n/**\n * Represents base class for all action types.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the GoTo action to the mouse enter property of the button field\n * let pdfAction: PdfAction = field.actions.mouseEnter;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfAction = /** @class */ (function () {\n    function PdfAction() {\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        /**\n         * Get the next action to be performed after the action represented by this instance.\n         *\n         * @returns {PdfAction} The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * // Create a PdfGoToAction for navigating to the specified page.\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._next;\n        },\n        /**\n         * Set the next action to be performed after the action represented by this instance.\n         *\n         * @param {PdfAction} value The next action to be executed.\n         *\n         * Represents an action which goes to a destination in the current document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the page1\n         * let Page1: PdfPage = document.getPage(1);\n         * let action: PdfGoToAction = new PdfGoToAction(page1);\n         * // Set the destination page for the action\n         * action.destination = new PdfDestination(secondPage);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = action1;\n         * // Access the third page\n         * let page: PdfPage = document.getPage(2);\n         * // Access button field\n         * let field1: PdfButtonField = document.form.fieldAt(1) as PdfButtonField;\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(page);\n         * // Set the next property\n         * gotoAction.next = action;\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field1.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._next = value;\n            var reference = this._page._crossReference._getNextReference();\n            this._page._crossReference._cacheMap.set(reference, value._dictionary);\n            value._dictionary.objId = reference.toString();\n            this._dictionary.update('Next', reference);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n/**\n * Represents an action which goes to a destination in the current document.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Set the goto action to the button\n * field.actions.mouseEnter = gotoAction;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfGoToAction = /** @class */ (function (_super) {\n    __extends(PdfGoToAction, _super);\n    function PdfGoToAction(arg) {\n        var _this = _super.call(this) || this;\n        if (arg instanceof PdfDestination) {\n            _this._destination = arg;\n            _this._page = arg.page;\n        }\n        else {\n            _this._page = arg;\n            _this._destination = new PdfDestination(arg, [0, 0]);\n        }\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', new _PdfName('Action'));\n        _this._dictionary.update('S', new _PdfName('GoTo'));\n        return _this;\n    }\n    Object.defineProperty(PdfGoToAction.prototype, \"destination\", {\n        /**\n         * Get the destination to be navigated.\n         *\n         * @returns {PdfDestination} The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter.destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Set the destination to be navigated.\n         *\n         * @param {PdfDestination} value The destination to be navigated.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the goto action to the button\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            this._destination = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGoToAction;\n}(PdfAction));\nexport { PdfGoToAction };\n/**\n * Represents actions to be performed as response to field events.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access button field\n * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n * // Access the second page\n * let secondPage: PdfPage = document.getPage(2);\n * // Create a PdfDestination for the specified page\n * let destination: PdfDestination = new PdfDestination(secondPage)\n * // Create a new PdfGoToAction with the specified destination\n * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n * // Get the pdf field actions\n * let fieldActions: PdfFieldActions = field.actions;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n */\nvar PdfFieldActions = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfFieldActions` class.\n     *\n     * @private\n     * @param {PdfField} field field items.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access button field\n     * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n     * // Access the second page\n     * let secondPage: PdfPage = document.getPage(2);\n     * // Create a PdfDestination for the specified page\n     * let destination: PdfDestination = new PdfDestination(secondPage)\n     * // Creates a new PdfGoToAction with the specified destination\n     * let gotoAction: PdfGoToAction = new PdfGoToAction(destination);\n     * // Set the goto action to the button\n     * field.actions.mouseEnter = gotoAction;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfFieldActions(field) {\n        this._field = field;\n    }\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseEnter\", {\n        /**\n         * Get the action to be performed when the mouse cursor enters the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse enters the field area\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseEnter) {\n                this._mouseEnter = this._getPdfAction('E');\n            }\n            return this._mouseEnter;\n        },\n        /**\n         * Set the action to be performed when the mouse cursor enters the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse enters the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse enter property of the button field\n         * field.actions.mouseEnter = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseEnter = value;\n                this._updateAction(this._mouseEnter, 'E');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseLeave\", {\n        /**\n         * Get the action to be performed when the cursor exits the fields area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse leave the field area.\n         * let action: PdfAction = field.actions.mouseLeave;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseLeave) {\n                this._mouseLeave = this._getPdfAction('X');\n            }\n            return this._mouseLeave;\n        },\n        /**\n         * Set the action to be performed when the cursor exits the fields area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse exists the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse leave property of the button field\n         * field.actions.mouseLeave = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseLeave = value;\n                this._updateAction(this._mouseLeave, 'X');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseUp\", {\n        /**\n         * Get the action to be performed when the mouse button is released inside the field area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse up the field area.\n         * let action: PdfAction = field.actions.mouseUp;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseUp) {\n                this._mouseUp = this._getPdfAction('U');\n            }\n            return this._mouseUp;\n        },\n        /**\n         * Set the action to be performed when the mouse button is released inside the field area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse released inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse up property of the button field\n         * field.actions.mouseUp = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseUp = value;\n                this._updateAction(this._mouseUp, 'U');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"mouseDown\", {\n        /**\n         * Get the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @returns {PdfAction} The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the mouse down the field area.\n         * let action: PdfAction = field.actions.mouseDown;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._mouseDown) {\n                this._mouseDown = this._getPdfAction('D');\n            }\n            return this._mouseDown;\n        },\n        /**\n         * Set the action to be performed when the mouse button is pressed inside the field’s area.\n         *\n         * @param {PdfAction} value The action to be executed when the mouse button is pressed inside the field area.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the mouse down property of the button field\n         * field.actions.mouseDown = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._mouseDown = value;\n                this._updateAction(this._mouseDown, 'D');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"gotFocus\", {\n        /**\n         * Get the action to be performed when the field receives the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the got focus the field area.\n         * let action: PdfAction = field.actions.gotFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._gotFocus) {\n                this._gotFocus = this._getPdfAction('Fo');\n            }\n            return this._gotFocus;\n        },\n        /**\n         * Set the action to be performed when the field receives the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field receives the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the got focus property of the button field\n         * field.actions.gotFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._gotFocus = value;\n                this._updateAction(this._gotFocus, 'Fo');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFieldActions.prototype, \"lostFocus\", {\n        /**\n         * Get the action to be performed when the field loses the input focus.\n         *\n         * @returns {PdfAction} The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action to be executed when the lost focus the field area.\n         * let action: PdfAction = field.actions.lostFocus;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._lostFocus) {\n                this._lostFocus = this._getPdfAction('Bl');\n            }\n            return this._lostFocus;\n        },\n        /**\n         * Set the action to be performed when the field loses the input focus.\n         *\n         * @param {PdfAction} value The action to be executed when the field loses the input focus.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Access the second page\n         * let secondPage: PdfPage = document.getPage(2);\n         * // Create a new GoTo action with the specified page\n         * let gotoAction: PdfGoToAction = new PdfGoToAction(secondPage);\n         * // Set the destination location within the specified page for the PdfGoToAction\n         * gotoAction.Destination = new PdfDestination(secondPage, [0, 100]);\n         * // Set the GoTo action to the lost focus property of the button field\n         * field.actions.lostFocus = gotoAction;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         */\n        set: function (value) {\n            if (value) {\n                this._lostFocus = value;\n                this._updateAction(this._lostFocus, 'Bl');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFieldActions.prototype._updateAction = function (action, key) {\n        var widget;\n        if (this._field._kidsCount > 0) {\n            widget = this._field.itemAt(0);\n            if (widget && widget._dictionary && action instanceof PdfGoToAction) {\n                var dictionary = new _PdfDictionary();\n                var page = action._page;\n                var destination = action.destination;\n                if (destination._destinationMode === PdfDestinationMode.location) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('XYZ'), destination.location[0], page.size[1], destination.zoom]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitR) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitR'), 0, 0, 0, 0]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitH) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('FitH'), page.size[1]]);\n                }\n                else if (destination._destinationMode === PdfDestinationMode.fitToPage) {\n                    action._dictionary.update('D', [page._ref, new _PdfName('Fit')]);\n                }\n                dictionary.set(key, action._dictionary);\n                dictionary._updated = true;\n                widget._dictionary.update('AA', dictionary);\n            }\n        }\n    };\n    PdfFieldActions.prototype._getPdfAction = function (key) {\n        var result;\n        var widget = this._field.itemAt(0);\n        if (widget && widget._dictionary && widget._dictionary.has('AA')) {\n            var action = widget._dictionary.get('AA');\n            if (action && action.has(key)) {\n                var dictionary = action.get(key);\n                if (dictionary && dictionary.has('S')) {\n                    var type = dictionary.get('S');\n                    if (type && type.name === 'GoTo' && dictionary.has('D')) {\n                        if (!dictionary._crossReference) {\n                            dictionary._crossReference = widget._crossReference;\n                        }\n                        result = new PdfGoToAction(_obtainDestination(dictionary, 'D'));\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    return PdfFieldActions;\n}());\nexport { PdfFieldActions };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfReference, _PdfName } from './../pdf-primitives';\nimport { PdfRadioButtonListItem, PdfStateItem, PdfWidgetAnnotation, PdfListFieldItem, _PaintParameter, PdfInteractiveBorder } from './../annotations/annotation';\nimport { _getItemValue, _checkField, _removeReferences, _removeDuplicateReference, _updateVisibility, _styleToString, _getStateTemplate, _findPage, _getInheritableProperty, _getNewGuidString, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _mapBorderStyle, _getUpdatedBounds, _setMatrix, _obtainFontDetails, _isNullOrUndefined, _stringToPdfString, _mapFont, _isRightToLeftCharacters } from './../utils';\nimport { _PdfCheckFieldState, PdfFormFieldVisibility, _FieldFlag, PdfAnnotationFlag, PdfTextAlignment, PdfHighlightMode, PdfBorderStyle, PdfRotationAngle, PdfCheckBoxStyle, PdfFormFieldsTabOrder, PdfFillMode, PdfTextDirection } from './../enumerator';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _TextRenderingMode, PdfBrush, PdfPen } from './../graphics/pdf-graphics';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont } from './../fonts/pdf-standard-font';\nimport { PdfPath } from './../graphics/pdf-path';\nimport { PdfAnnotationCollection } from '../annotations/annotation-collection';\nimport { PdfFieldActions } from '../pdf-action';\n/**\n * `PdfField` class represents the base class for form field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form field at index 0\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the count of the loaded field items\n * let count: number = field.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfField = /** @class */ (function () {\n    function PdfField() {\n        this._enableGrouping = false;\n        this._isDuplicatePage = false;\n        this._visible = true;\n        this._isTransparentBackColor = false;\n        this._isTransparentBorderColor = false;\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n        this._appearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._defaultItemFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n        this._flatten = false;\n        this._hasData = false;\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isUpdating = false;\n        this._isImport = false;\n    }\n    Object.defineProperty(PdfField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the count of the loaded field items\n         * let count: number = field.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"form\", {\n        /**\n         * Gets the form object of the field (Read only).\n         *\n         * @returns {PdfForm} Form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form object of the field\n         * let form: PdfForm = field.form;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"name\", {\n        /**\n         * Gets the name of the field (Read only).\n         *\n         * @returns {string} Field name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the name of the field\n         * let name: string = field.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined') {\n                var names = _getInheritableProperty(this._dictionary, 'T', false, false, 'Parent');\n                if (names && names.length > 0) {\n                    if (names.length === 1) {\n                        this._name = names[0];\n                    }\n                    else {\n                        this._name = names.join('.');\n                    }\n                }\n            }\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"actualName\", {\n        /**\n         * Gets the actual name of the field (Read only).\n         *\n         * @private\n         * @returns {string} Actual name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the actual name of the field\n         * let name: string = field.actualName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._actualName === 'undefined' && this._dictionary && this._dictionary.has('T')) {\n                var name_1 = this._dictionary.get('T');\n                if (name_1 && typeof name_1 === 'string') {\n                    this._actualName = name_1;\n                }\n            }\n            return this._actualName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"mappingName\", {\n        /**\n         * Gets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @returns {string} Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the mapping name of the field\n         * let name: string = field.mappingName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mappingName === 'undefined' && this._dictionary.has('TM')) {\n                var name_2 = this._dictionary.get('TM');\n                if (name_2 && typeof name_2 === 'string') {\n                    this._mappingName = name_2;\n                }\n            }\n            return this._mappingName;\n        },\n        /**\n         * Sets the mapping name to be used when exporting interactive form field data from the document.\n         *\n         * @param {string} value Mapping name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the mapping name of the field\n         * field.mappingName = ‘Author’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.mappingName === 'undefined' || this._mappingName !== value) {\n                this._mappingName = value;\n                this._dictionary.update('TM', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"toolTip\", {\n        /**\n         * Gets the tool tip of the form field.\n         *\n         * @returns {string} Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tool tip value of the field\n         * let toolTip: string = field.toolTip;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._alternateName === 'undefined' && this._dictionary && this._dictionary.has('TU')) {\n                var name_3 = this._dictionary.get('TU');\n                if (name_3 && typeof name_3 === 'string') {\n                    this._alternateName = name_3;\n                }\n            }\n            return this._alternateName;\n        },\n        /**\n         * Sets the tool tip of the form field.\n         *\n         * @param {string} value Tooltip.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tool tip value of the field\n         * field.toolTip = ‘Author of the document’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.toolTip === 'undefined' || this._alternateName !== value) {\n                this._alternateName = value;\n                this._dictionary.update('TU', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visibility\", {\n        /**\n         * Gets the form field visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the form field visibility.\n         * let visibility: PdfFormFieldVisibility = field.visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                else {\n                    return PdfFormFieldVisibility.visibleNotPrintable;\n                }\n                var flagValue = 3;\n                if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                    flagValue = 0;\n                }\n                if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                    flagValue = 1;\n                }\n                if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                    flagValue &= 2;\n                }\n                switch (flagValue) {\n                    case 0:\n                        value = PdfFormFieldVisibility.hidden;\n                        break;\n                    case 1:\n                        value = PdfFormFieldVisibility.hiddenPrintable;\n                        break;\n                    case 2:\n                        value = PdfFormFieldVisibility.visibleNotPrintable;\n                        break;\n                    case 3:\n                        value = PdfFormFieldVisibility.visible;\n                        break;\n                }\n            }\n            else {\n                if (typeof this._visibility === 'undefined') {\n                    this._visibility = PdfFormFieldVisibility.visible;\n                }\n                value = this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the form field visibility.\n         *\n         * @param {PdfFormFieldVisibility} value visibility.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the form field visibility.\n         * field.visibility = PdfFormFieldVisibility.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (widget && (!widget._hasFlags || this.visibility !== value)) {\n                    _updateVisibility(widget._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n                else if (!this._dictionary.has('F') || this.visibility !== value) {\n                    _updateVisibility(this._dictionary, value);\n                    this._dictionary._updated = true;\n                }\n            }\n            else {\n                if (this.visibility !== value) {\n                    this._visibility = value;\n                    switch (value) {\n                        case PdfFormFieldVisibility.hidden:\n                            widget.flags = PdfAnnotationFlag.hidden;\n                            break;\n                        case PdfFormFieldVisibility.hiddenPrintable:\n                            widget.flags = (PdfAnnotationFlag.noView | PdfAnnotationFlag.print);\n                            break;\n                        case PdfFormFieldVisibility.visible:\n                            widget.flags = PdfAnnotationFlag.print;\n                            break;\n                        case PdfFormFieldVisibility.visibleNotPrintable:\n                            widget.flags = PdfAnnotationFlag.default;\n                            break;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the bounds of list box field.\n         * let bounds: {x: number, y: number, width: number, height: number} = field.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary && this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the bounds.\n         * field.bounds = {x: 10, y: 10, width: 100, height: 20};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                widget._page = this.page;\n                widget.bounds = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the field.\n         *\n         * @returns {number} angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation angle of the form field.\n         * let rotate: number = field.rotate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var angle;\n            if (widget && typeof widget.rotate !== 'undefined') {\n                angle = widget.rotate;\n            }\n            else if (this._dictionary.has('R')) {\n                angle = this._dictionary.get('R');\n            }\n            else {\n                for (var i = 0; i < this._kidsCount && typeof angle === 'undefined'; i++) {\n                    if (i !== this._defaultIndex) {\n                        widget = this.itemAt(i);\n                        if (widget && typeof widget.rotate !== 'undefined') {\n                            angle = widget.rotate;\n                        }\n                    }\n                }\n            }\n            if (typeof angle === 'undefined') {\n                angle = 0;\n            }\n            return angle;\n        },\n        /**\n         * Sets the rotation angle of the field.\n         *\n         * @param {number} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the rotation angle.\n         * field.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget.rotate = value;\n            }\n            else if (!this._dictionary.has('R') || this._dictionary.get('R') !== value) {\n                this._dictionary.update('R', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"color\", {\n        /**\n         * Gets the fore color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the fore color of the field.\n         * let color: number[] = field.color;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color) {\n                value = widget.color;\n            }\n            else if (this._defaultAppearance) {\n                value = this._da.color;\n            }\n            return value;\n        },\n        /**\n         * Sets the fore color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the fore color of the field.\n         * field.color = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.color && _isNullOrUndefined(value)) {\n                widget.color = value;\n            }\n            else {\n                var isNew = false;\n                if (!this._defaultAppearance) {\n                    this._da = new _PdfDefaultAppearance('');\n                    isNew = true;\n                }\n                if (isNew || this._da.color !== value) {\n                    this._da.color = value;\n                    this._dictionary.update('DA', this._da.toString());\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(false);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field.backColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"readOnly\", {\n        /**\n         * Gets a value indicating whether read only.\n         *\n         * @returns {boolean} read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether read only.\n         * let readOnly: boolean = field.readOnly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.readOnly) !== 0;\n        },\n        /**\n         * Sets a value indicating whether read only.\n         *\n         * @param {boolean} value read only or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether read only.\n         * field.readOnly = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.readOnly;\n            }\n            else {\n                if (this._fieldFlags === _FieldFlag.readOnly) {\n                    this._fieldFlags |= _FieldFlag.default;\n                }\n                this._fieldFlags &= ~_FieldFlag.readOnly;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"required\", {\n        /**\n         * Gets a value indicating whether the field is required.\n         *\n         * @returns {boolean} required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is required.\n         * let required: boolean = field.required;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.required) !== 0;\n        },\n        /**\n         * Sets a value indicating whether the field is required.\n         *\n         * @param {boolean} value required or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is required.\n         * field.required = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.required;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.required;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"visible\", {\n        /**\n         * Gets a value indicating the visibility of the field (Read only).\n         *\n         * @returns {boolean} visible or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating the visibility of the field.\n         * let visible: boolean = field.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                var flag = PdfAnnotationFlag.default;\n                if (widget && widget._hasFlags) {\n                    flag = widget.flags;\n                }\n                else if (this._dictionary.has('F')) {\n                    flag = this._dictionary.get('F');\n                }\n                return flag !== PdfAnnotationFlag.hidden;\n            }\n            else {\n                return this._visible;\n            }\n        },\n        /**\n         * Sets a value indicating the visibility of the field.\n         * Only applicable for newly created PDF form fields.\n         *\n         * @param {boolean} value or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating the visibility of the field\n         * field.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && this._visible !== value && !value) {\n                this._visible = value;\n                this.itemAt(this._defaultIndex).flags = PdfAnnotationFlag.hidden;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"border\", {\n        /**\n         * Gets the width, style and dash of the border of the field.\n         *\n         * @returns {PdfInteractiveBorder} Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width, style and dash of the border of the field.\n         * let border: PdfInteractiveBorder = field.border;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var value;\n            if (widget && widget._dictionary.has('BS')) {\n                value = widget.border;\n            }\n            else {\n                value = new PdfInteractiveBorder();\n                if (!(this instanceof PdfButtonField)) {\n                    value._width = 0;\n                }\n                value._dictionary = this._dictionary;\n                if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            value._width = border.get('W');\n                        }\n                        if (border.has('S')) {\n                            var borderStyle = border.get('S');\n                            if (borderStyle) {\n                                switch (borderStyle.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            value._dash = border.getArray('D');\n                        }\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Sets the width, style and dash of the border of the field.\n         *\n         * @param {PdfInteractiveBorder} value Border properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the width, style and dash of the border of the field.\n         * field.border = new PdfInteractiveBorder(2, PdfBorderStyle.solid);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                this._updateBorder(widget._dictionary, value);\n            }\n            else {\n                this._updateBorder(this._dictionary, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the field (Read only).\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the rotation of the field.\n         * let rotate: PdfRotationAngle = field.rotationAngle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = PdfRotationAngle.angle0;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                value = widget.rotationAngle;\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"export\", {\n        /**\n         * Gets a value indicating whether the field is allow to export data or not.\n         *\n         * @returns {boolean} Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets a value indicating whether the field is allow to export data or not.\n         * let export: boolean = field.export;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.noExport) !== 0);\n        },\n        /**\n         * Sets a value indicating whether the field is allow to export data or not.\n         *\n         * @param {boolean} value Allow to export data or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets a value indicating whether the field is allow to export data or not.\n         * field.export = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.noExport;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.noExport;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"tabIndex\", {\n        /**\n         * Gets the tab index of annotation in current page.\n         *\n         * @returns {number} tab index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the tab index of annotation in current page.\n         * let tabIndex: number = field.tabIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var annots = void 0;\n                if (this.page._pageDictionary.has('Annots')) {\n                    annots = this.page._pageDictionary.get('Annots');\n                }\n                if (this._kids && this._kids.length > 0) {\n                    for (var i = 0; i < this._kids.length; i++) {\n                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                        if (reference) {\n                            if (this.page._pageDictionary.has('Annots')) {\n                                if (annots) {\n                                    var index1 = annots.indexOf(reference);\n                                    if (index1 !== -1) {\n                                        return index1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (this._dictionary && this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n                    if (this._ref) {\n                        if (annots) {\n                            var index1 = annots.indexOf(this._ref);\n                            if (index1 !== -1) {\n                                return index1;\n                            }\n                        }\n                    }\n                }\n                return -1;\n            }\n            else {\n                return this._tabIndex;\n            }\n        },\n        /**\n         * Sets the tab index of a annotation in the current page.\n         *\n         * @param {number} value index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the tab index of annotation in current page.\n         * field.tabIndex = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabIndex = value;\n            if (this._isLoaded) {\n                var page = this.page;\n                if (page &&\n                    (page.tabOrder === PdfFormFieldsTabOrder.manual ||\n                        (this.form && this.form._tabOrder === PdfFormFieldsTabOrder.manual))) {\n                    if (page._pageDictionary.has('Annots')) {\n                        var annots = page._pageDictionary.get('Annots');\n                        var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                        page._annotations = annotationCollection;\n                        var index = annots.indexOf(this._ref);\n                        if (index < 0) {\n                            index = this._annotationIndex;\n                        }\n                        var annotations = page.annotations._reArrange(this._ref, this._tabIndex, index);\n                        page._pageDictionary.update('Annots', annotations);\n                        page._pageDictionary._updated = true;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"page\", {\n        /**\n         * Gets the page object of the form field (Read only).\n         *\n         * @returns {PdfPage} Page object.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the page object of the form field.\n         * let page: PdfPage = field.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._page) {\n                var widget = this.itemAt(this._defaultIndex);\n                var dictionary = (typeof widget !== 'undefined') ? widget._dictionary : this._dictionary;\n                var document_1;\n                if (this._crossReference) {\n                    document_1 = this._crossReference._document;\n                }\n                var page = void 0;\n                if (dictionary && dictionary.has('P')) {\n                    var ref = dictionary.getRaw('P');\n                    if (ref && document_1) {\n                        for (var i = 0; i < document_1.pageCount; i++) {\n                            var entry = document_1.getPage(i);\n                            if (entry && entry._ref === ref) {\n                                page = entry;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!page && document_1) {\n                    var widgetRef = (typeof widget !== 'undefined') ? widget._ref : this._ref;\n                    if (!page && widgetRef) {\n                        page = _findPage(document_1, widgetRef);\n                    }\n                    if (!page && this._kids && this._kids.length > 0) {\n                        for (var i = 0; i < this._kids.length; i++) {\n                            page = _findPage(document_1, this._kids[Number.parseInt(i.toString(), 10)]);\n                            if (page) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                this._page = page;\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the boolean flag indicating whether the form field have been flattened or not.\n         * let flatten: boolean = field.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the form field have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the boolean flag indicating whether the form field have been flattened or not.\n         * field.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_grayBrush\", {\n        get: function () {\n            if (!this._gray) {\n                this._gray = new PdfBrush([128, 128, 128]);\n            }\n            return this._gray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_silverBrush\", {\n        get: function () {\n            if (!this._silver) {\n                this._silver = new PdfBrush([198, 198, 198]);\n            }\n            return this._silver;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_whiteBrush\", {\n        get: function () {\n            if (!this._white) {\n                this._white = new PdfBrush([255, 255, 255]);\n            }\n            return this._white;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_blackBrush\", {\n        get: function () {\n            if (!this._black) {\n                this._black = new PdfBrush([0, 0, 0]);\n            }\n            return this._black;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_kidsCount\", {\n        get: function () {\n            return this._kids ? this._kids.length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                if (!mkDictionary) {\n                    var item = this.itemAt(this._defaultIndex);\n                    if (item && item._dictionary.has('MK')) {\n                        mkDictionary = item._dictionary.get('MK');\n                    }\n                }\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._parseBackColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor) {\n                value = widget.backColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BG')) {\n                    var bgArray = mkDict.getArray('BG');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [255, 255, 255];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._parseBorderColor = function (hasTransparency) {\n        var value;\n        if ((!hasTransparency) || ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor))) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor) {\n                value = widget.borderColor;\n            }\n            else if (this._mkDictionary) {\n                var mkDict = this._mkDictionary;\n                if (mkDict.has('BC')) {\n                    var bgArray = mkDict.getArray('BC');\n                    if (bgArray) {\n                        value = _parseColor(bgArray);\n                    }\n                }\n            }\n            if (typeof value === 'undefined' || value === null) {\n                value = [0, 0, 0];\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._updateBackColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && _isNullOrUndefined(value) && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary && this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.backColor = value;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.backColor !== value) {\n                widget.backColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BG') || _parseColor(mkDictionary.getArray('BG')) !== value) {\n                    mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    PdfField.prototype._updateBorderColor = function (value, hasTransparency) {\n        if (hasTransparency === void 0) { hasTransparency = false; }\n        if (hasTransparency && value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n            var item = this.itemAt(this._defaultIndex);\n            if (item) {\n                item.borderColor = value;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && widget.borderColor !== value) {\n                widget.borderColor = value;\n            }\n            else {\n                var mkDictionary = this._mkDictionary;\n                if (typeof mkDictionary === 'undefined') {\n                    var dictionary = new _PdfDictionary(this._crossReference);\n                    dictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary.update('MK', dictionary);\n                }\n                else if (!mkDictionary.has('BC') || _parseColor(mkDictionary.getArray('BC')) !== value) {\n                    mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Gets the field item as `PdfWidgetAnnotation` at the specified index.\n     *\n     * @param {number} index Item index.\n     * @returns {PdfWidgetAnnotation} Loaded PDF form field item at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Access the count of the field items.\n     * let count: number = field.count;\n     * // Access the first item\n     * let item: PdfWidgetAnnotation = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.itemAt = function (index) {\n        var item;\n        if (index >= 0 && index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n                    item._ref = reference;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.fieldAt(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n    };\n    /**\n     * Gets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string} Value associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the value associated with the key 'Author'.\n     * let value: string = document.form.fieldAt(0).getValue('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.getValue = function (name) {\n        var value;\n        if (this._dictionary && this._dictionary.has(name)) {\n            var element = this._dictionary.get(name); // eslint-disable-line\n            if (element !== null && typeof element !== 'undefined' && element instanceof _PdfName) {\n                value = element.name;\n            }\n            else if (typeof element === 'string') {\n                value = element;\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return value;\n    };\n    /**\n     * Sets the value associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Set custom value\n     * field.setValue('Author', 'John');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.setValue = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    /**\n     * Remove the form field item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItemAt = function (index) {\n        if (this._dictionary !== null && typeof this._dictionary !== 'undefined' && this._dictionary.has('Kids') && this.itemsCount > 0) {\n            var item = this.itemAt(index);\n            if (item && item._ref) {\n                var page = item._getPage();\n                if (page) {\n                    page._removeAnnotation(item._ref);\n                }\n                this._kids.splice(index, 1);\n                this._dictionary.set('Kids', this._kids);\n                this._dictionary._updated = true;\n                this._parsedItems.delete(index);\n                if (this._parsedItems.size > 0) {\n                    var parsedItems_1 = new Map();\n                    this._parsedItems.forEach(function (value, key) {\n                        if (key > index) {\n                            parsedItems_1.set(key - 1, value);\n                        }\n                        else {\n                            parsedItems_1.set(key, value);\n                        }\n                    });\n                    this._parsedItems = parsedItems_1;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified form field item.\n     *\n     * @param {PdfWidgetAnnotation} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    Object.defineProperty(PdfField.prototype, \"_fieldFlags\", {\n        get: function () {\n            if (typeof this._flags === 'undefined') {\n                this._flags = _getInheritableProperty(this._dictionary, 'Ff', false, true, 'Parent');\n                if (typeof this._flags === 'undefined') {\n                    this._flags = _FieldFlag.default;\n                }\n            }\n            return this._flags;\n        },\n        set: function (value) {\n            if (this._fieldFlags !== value) {\n                this._flags = value;\n                this._dictionary.update('Ff', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined') {\n                var da = _getInheritableProperty(this._dictionary, 'DA', false, true, 'Parent');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfField.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary && this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfField.prototype._updateBorder = function (dictionary, value) {\n        var bs;\n        var isNew = false;\n        if (dictionary && dictionary.has('BS')) {\n            bs = dictionary.get('BS');\n        }\n        else {\n            bs = new _PdfDictionary(this._crossReference);\n            dictionary.update('BS', bs);\n            isNew = true;\n        }\n        if (typeof value.width !== 'undefined') {\n            bs.update('W', value.width);\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('W', 0);\n        }\n        if (typeof value.style !== 'undefined') {\n            bs.update('S', _mapBorderStyle(value.style));\n            dictionary._updated = true;\n        }\n        else if (isNew) {\n            bs.update('S', _mapBorderStyle(PdfBorderStyle.solid));\n        }\n        if (typeof value.dash !== 'undefined') {\n            bs.update('D', value.dash);\n            dictionary._updated = true;\n        }\n    };\n    PdfField.prototype._checkFieldFlag = function (dictionary) {\n        var flag = dictionary.get('F');\n        return (typeof flag !== 'undefined' && flag === 6);\n    };\n    PdfField.prototype._initializeFont = function (font) {\n        this._font = font;\n        var document = this._crossReference._document;\n        var resource;\n        if (document) {\n            if (document.form._dictionary.has('DR')) {\n                resource = document.form._dictionary.get('DR');\n            }\n            else {\n                resource = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var fontDict;\n        var isReference = false;\n        if (resource && resource.has('Font')) {\n            var obj = resource.getRaw('Font'); // eslint-disable-line\n            if (obj && obj instanceof _PdfReference) {\n                isReference = true;\n                fontDict = this._crossReference._fetch(obj);\n            }\n            else if (obj instanceof _PdfDictionary) {\n                fontDict = obj;\n            }\n        }\n        if (!fontDict) {\n            fontDict = new _PdfDictionary(this._crossReference);\n            resource.update('Font', fontDict);\n        }\n        var keyName;\n        var reference;\n        var hasFont = false;\n        if (this._font && (this._font._key !== null && typeof this._font._key !== 'undefined') && this._font._reference) {\n            keyName = _PdfName.get(this._font._key);\n            reference = this._font._reference;\n            hasFont = true;\n        }\n        else {\n            keyName = _PdfName.get(_getNewGuidString());\n            reference = this._crossReference._getNextReference();\n            if (this._font) {\n                this._font._key = keyName.name;\n                this._font._reference = reference;\n            }\n        }\n        if (reference && !hasFont) {\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._font._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._font._pdfFontInternals);\n                    this._font._reference = reference;\n                }\n            }\n            else if (this._font._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._font._dictionary);\n                fontDict.update(keyName.name, reference);\n                resource._updated = true;\n                document.form._dictionary.update('DR', resource);\n                document.form._dictionary._updated = true;\n            }\n        }\n        fontDict.update(keyName.name, reference);\n        resource._updated = true;\n        document.form._dictionary.update('DR', resource);\n        document.form._dictionary._updated = true;\n        this._fontName = keyName.name;\n        var defaultAppearance = new _PdfDefaultAppearance();\n        defaultAppearance.fontName = this._fontName;\n        defaultAppearance.fontSize = this._font._size;\n        defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n        if (this._dictionary.has('Kids')) {\n            var widgetDictionary = this._dictionary.getArray('Kids');\n            for (var i = 0; i < widgetDictionary.length; i++) {\n                var widget = this.itemAt(i);\n                var dictionary = widgetDictionary[Number.parseInt(i.toString(), 10)];\n                dictionary.update('DA', defaultAppearance.toString());\n                if (widget) {\n                    widget._da = defaultAppearance;\n                }\n            }\n        }\n        else if (this._dictionary.has('Subtype') && this._dictionary.get('Subtype').name === 'Widget') {\n            this._dictionary.update('DA', defaultAppearance.toString());\n        }\n        if (isReference) {\n            resource._updated = true;\n        }\n    };\n    PdfField.prototype._drawRectangularControl = function (g, parameter) {\n        g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    PdfField.prototype._drawBorder = function (g, bounds, borderPen, style, borderWidth) {\n        if (borderPen && borderWidth > 0) {\n            if (style === PdfBorderStyle.underline) {\n                g.drawLine(borderPen, bounds[0], bounds[0] + bounds[3] - borderWidth / 2, bounds[0] + bounds[2], bounds[1] + bounds[3] - borderWidth / 2);\n            }\n            else {\n                g.drawRectangle(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, bounds[2] - borderWidth, bounds[3] - borderWidth, borderPen);\n            }\n        }\n    };\n    PdfField.prototype._drawLeftTopShadow = function (g, bounds, width, brush) {\n        var path = new PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, bounds[1] + width]);\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([bounds[0] + 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - width, bounds[1] + width]);\n        path.addPolygon(points);\n        g.drawPath(path, brush);\n    };\n    PdfField.prototype._drawRightBottomShadow = function (g, bounds, width, brush) {\n        var path = new PdfPath();\n        var points = [];\n        points.push([bounds[0] + width, (bounds[1] + bounds[3]) - width]);\n        points.push([bounds[0] + 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, (bounds[1] + bounds[3]) - 2 * width]);\n        points.push([(bounds[0] + bounds[2]) - 2 * width, bounds[1] + 2 * width]);\n        points.push([bounds[0] + bounds[2] - width, bounds[1] + width]);\n        points.push([(bounds[0] + bounds[2]) - width, (bounds[1] + bounds[3]) - width]);\n        path.addPolygon(points);\n        g.drawPath(path, brush);\n    };\n    PdfField.prototype._drawRadioButton = function (graphics, parameter, checkSymbol, state) {\n        if (checkSymbol === 'l') {\n            var bounds = parameter.bounds;\n            var diameter = bounds[2];\n            if (this._enableGrouping) {\n                diameter = Math.min(bounds[2], bounds[3]);\n            }\n            switch (state) {\n                case _PdfCheckFieldState.checked:\n                case _PdfCheckFieldState.unchecked:\n                    graphics.drawEllipse(bounds[0], bounds[1], diameter, bounds[3], parameter.backBrush);\n                    break;\n                case _PdfCheckFieldState.pressedChecked:\n                case _PdfCheckFieldState.pressedUnchecked:\n                    if ((parameter.borderStyle === PdfBorderStyle.beveled) || (parameter.borderStyle === PdfBorderStyle.underline)) {\n                        graphics.drawEllipse(bounds[0], bounds[1], bounds[2], bounds[3], parameter.backBrush);\n                    }\n                    else {\n                        graphics.drawEllipse(bounds[0], bounds[1], diameter, bounds[3], parameter.shadowBrush);\n                    }\n                    break;\n            }\n            this._drawRoundBorder(graphics, bounds, parameter.borderPen, parameter.borderWidth);\n            this._drawRoundShadow(graphics, parameter, state);\n            if (state === _PdfCheckFieldState.checked || state === _PdfCheckFieldState.pressedChecked) {\n                var outward = [bounds[0] + parameter.borderWidth / 2,\n                    bounds[1] + parameter.borderWidth / 2,\n                    diameter - parameter.borderWidth,\n                    bounds[3] - parameter.borderWidth];\n                graphics.drawEllipse(outward[0] + (outward[2] / 4), outward[1] + (outward[2] / 4), outward[2] - (outward[2] / 2), outward[3] - (outward[2] / 2), parameter.foreBrush);\n            }\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, checkSymbol, state);\n        }\n    };\n    PdfField.prototype._drawRoundBorder = function (graphics, bounds, borderPen, borderWidth) {\n        if (bounds[0] !== 0 || bounds[1] !== 0 || bounds[2] !== 0 || bounds[3] !== 0) {\n            graphics.drawEllipse(bounds[0] + borderWidth / 2, bounds[1] + borderWidth / 2, (this._enableGrouping ?\n                Math.min(bounds[2], bounds[3]) : bounds[2]) - borderWidth, bounds[3] - borderWidth, borderPen);\n        }\n    };\n    PdfField.prototype._drawRoundShadow = function (graphics, parameter, state) {\n        var borderWidth = parameter.borderWidth;\n        var inflateValue = -1.5 * borderWidth;\n        var x = parameter.bounds[0] + inflateValue;\n        var y = parameter.bounds[1] + inflateValue;\n        var width = parameter.bounds[2] + (2 * inflateValue);\n        var height = parameter.bounds[3] + (2 * inflateValue);\n        var shadowBrush = parameter.shadowBrush;\n        if (shadowBrush) {\n            var shadowColor = shadowBrush._color;\n            var leftTop = void 0;\n            var rightBottom = void 0;\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.beveled:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen(shadowColor, borderWidth);\n                            rightBottom = new PdfPen([255, 255, 255], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([255, 255, 255], borderWidth);\n                            rightBottom = new PdfPen(shadowColor, borderWidth);\n                            break;\n                    }\n                    break;\n                case PdfBorderStyle.inset:\n                    switch (state) {\n                        case _PdfCheckFieldState.pressedChecked:\n                        case _PdfCheckFieldState.pressedUnchecked:\n                            leftTop = new PdfPen([0, 0, 0], borderWidth);\n                            rightBottom = new PdfPen([0, 0, 0], borderWidth);\n                            break;\n                        case _PdfCheckFieldState.checked:\n                        case _PdfCheckFieldState.unchecked:\n                            leftTop = new PdfPen([128, 128, 128], borderWidth);\n                            rightBottom = new PdfPen([192, 192, 192], borderWidth);\n                            break;\n                    }\n                    break;\n            }\n            if (leftTop && rightBottom) {\n                graphics.drawArc(x, y, width, height, 135, 180, leftTop);\n                graphics.drawArc(x, y, width, height, -45, 180, rightBottom);\n            }\n        }\n    };\n    PdfField.prototype._drawCheckBox = function (graphics, parameter, checkSymbol, state, font) {\n        switch (state) {\n            case _PdfCheckFieldState.unchecked:\n            case _PdfCheckFieldState.checked:\n                if (parameter.borderPen || parameter.backBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                }\n                break;\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.pressedUnchecked:\n                if ((parameter.borderStyle === PdfBorderStyle.beveled || parameter.backBrush) ||\n                    (parameter.borderStyle === PdfBorderStyle.underline)) {\n                    if (parameter.borderPen || parameter.backBrush) {\n                        graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                    }\n                }\n                else if (parameter.borderPen || parameter.shadowBrush) {\n                    graphics.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                }\n                break;\n        }\n        var rectangle = parameter.bounds;\n        this._drawBorder(graphics, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        if ((state === _PdfCheckFieldState.pressedChecked) || (state === _PdfCheckFieldState.pressedUnchecked)) {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._blackBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    break;\n            }\n        }\n        else {\n            switch (parameter.borderStyle) {\n                case PdfBorderStyle.inset:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                    break;\n                case PdfBorderStyle.beveled:\n                    this._drawLeftTopShadow(graphics, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                    this._drawRightBottomShadow(graphics, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                    break;\n            }\n        }\n        var yOffset = 0;\n        var size = 0;\n        switch (state) {\n            case _PdfCheckFieldState.pressedChecked:\n            case _PdfCheckFieldState.checked:\n                if (!font) {\n                    var extraBorder = parameter.borderStyle === PdfBorderStyle.beveled ||\n                        parameter.borderStyle === PdfBorderStyle.inset;\n                    var borderWidth = parameter.borderWidth;\n                    if (extraBorder) {\n                        borderWidth *= 2;\n                    }\n                    var xPosition = Math.max((extraBorder ? 2 * parameter.borderWidth : parameter.borderWidth), 1);\n                    var xOffset = Math.min(borderWidth, xPosition);\n                    size = (parameter.bounds[2] > parameter.bounds[3]) ? parameter.bounds[3] : parameter.bounds[2];\n                    var fontSize = size - 2 * xOffset;\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize);\n                    if (parameter.bounds[2] > parameter.bounds[3]) {\n                        yOffset = ((parameter.bounds[3] - font._metrics._getHeight()) / 2);\n                    }\n                }\n                else {\n                    font = new PdfStandardFont(PdfFontFamily.zapfDingbats, font._size);\n                }\n                if (size === 0) {\n                    size = parameter.bounds[3];\n                }\n                if (parameter.pageRotationAngle !== PdfRotationAngle.angle0 || parameter.rotationAngle > 0) {\n                    var state_1 = graphics.save();\n                    var size_1 = graphics._size;\n                    if (parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(size_1[1], 0);\n                            graphics.rotateTransform(90);\n                            var y = size_1[1] - (rectangle[0] + rectangle[2]);\n                            var x = rectangle[1];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(0, size_1[0]);\n                            graphics.rotateTransform(270);\n                            var x = size_1[0] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                    }\n                    if (parameter.rotationAngle > 0) {\n                        if (parameter.rotationAngle === 90) {\n                            if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                                graphics.translateTransform(0, size_1[1]);\n                                graphics.rotateTransform(-90);\n                                var x = size_1[1] - (rectangle[1] + rectangle[3]);\n                                var y = rectangle[0];\n                                rectangle = [x, y, rectangle[3], rectangle[2]];\n                            }\n                            else {\n                                if (rectangle[2] > rectangle[3]) {\n                                    graphics.translateTransform(0, size_1[1]);\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                }\n                                else {\n                                    var z = rectangle[0];\n                                    rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                    rectangle[1] = z;\n                                    var height = rectangle[3];\n                                    rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                    rectangle[2] = height;\n                                    graphics.rotateTransform(-90);\n                                    rectangle = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n                                }\n                            }\n                        }\n                        else if (parameter.rotationAngle === 270) {\n                            graphics.translateTransform(size_1[0], 0);\n                            graphics.rotateTransform(-270);\n                            var x = rectangle[1];\n                            var y = size_1[0] - (rectangle[0] + rectangle[2]);\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                        }\n                        else if (parameter.rotationAngle === 180) {\n                            graphics.translateTransform(size_1[0], size_1[1]);\n                            graphics.rotateTransform(-180);\n                            var x = size_1[0] - (rectangle[0] + rectangle[2]);\n                            var y = size_1[1] - (rectangle[1] + rectangle[3]);\n                            rectangle = [x, y, rectangle[2], rectangle[3]];\n                        }\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                        graphics.restore(state_1);\n                    }\n                    else {\n                        graphics.drawString(checkSymbol, font, [rectangle[0], rectangle[1] - yOffset, rectangle[2], rectangle[3]], null, parameter.foreBrush, new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle));\n                    }\n                    break;\n                }\n        }\n    };\n    PdfField.prototype._addToKid = function (item) {\n        if (this._dictionary && this._dictionary.has('Kids')) {\n            this._kids = this._dictionary.get('Kids');\n        }\n        else {\n            this._kids = [];\n            this._dictionary.update('Kids', this._kids);\n            this._parsedItems = new Map();\n        }\n        if (this._kids.indexOf(item._ref) === -1) {\n            var currentIndex = this._kidsCount;\n            item._index = currentIndex;\n            this._kids.push(item._ref);\n            this._parsedItems.set(currentIndex, item);\n        }\n    };\n    PdfField.prototype._drawTemplate = function (template, page, bounds) {\n        if (template && page) {\n            var graphics = page.graphics;\n            graphics.save();\n            if (page.rotation === PdfRotationAngle.angle90) {\n                graphics.translateTransform(graphics._size[1], 0);\n                graphics.rotateTransform(90);\n            }\n            else if (page.rotation === PdfRotationAngle.angle180) {\n                graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                graphics.rotateTransform(-180);\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                graphics.translateTransform(0, graphics._size[0]);\n                graphics.rotateTransform(270);\n            }\n            graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n            graphics.drawTemplate(template, bounds);\n            graphics.restore();\n        }\n    };\n    PdfField.prototype._addToOptions = function (item, field) {\n        if (field instanceof PdfListBoxField) {\n            field._listValues.push(item._text);\n        }\n        field._options.push([item._value, item._text]);\n        field._dictionary.set('Opt', field._options);\n        field._dictionary._updated = true;\n        if (!item._isFont && item._pdfFont) {\n            this._initializeFont(item._pdfFont);\n        }\n    };\n    PdfField.prototype._addAppearance = function (dictionary, template, key) {\n        var appearance = new _PdfDictionary();\n        if (dictionary && dictionary.has('AP')) {\n            appearance = dictionary.get('AP');\n            _removeDuplicateReference(dictionary.get('AP'), this._crossReference, key);\n        }\n        else {\n            appearance = new _PdfDictionary(this._crossReference);\n            dictionary.update('AP', appearance);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        appearance.update(key, reference);\n    };\n    PdfField.prototype._rotateTextBox = function (rect, size, angle) {\n        var rectangle = [0, 0, 0, 0];\n        if (angle === PdfRotationAngle.angle180) {\n            rectangle = [size[0] - (rect[0] + rect[2]), size[1] - (rect[1] + rect[3]), rect[2], rect[3]];\n        }\n        else if (angle === PdfRotationAngle.angle270) {\n            rectangle = [rect[1], size[0] - (rect[0] + rect[2]), rect[3], rect[2]];\n        }\n        else if (angle === PdfRotationAngle.angle90) {\n            rectangle = [size[1] - (rect[1] + rect[3]), rect[0], rect[3], rect[2]];\n        }\n        return rectangle;\n    };\n    PdfField.prototype._checkIndex = function (value, length) {\n        if (value < 0 || (value !== 0 && value >= length)) {\n            throw Error('Index out of range.');\n        }\n    };\n    PdfField.prototype._getAppearanceStateValue = function () {\n        var value;\n        if (this._dictionary && this._dictionary.has('Kids')) {\n            for (var i = 0; i < this._kidsCount; i++) {\n                var item = this.itemAt(i);\n                if (item && item._dictionary && item._dictionary.has('AS')) {\n                    var state = item._dictionary.get('AS');\n                    if (state && state.name !== 'Off') {\n                        value = state.name;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this._dictionary && this._dictionary.has('AS')) {\n            var state = this._dictionary.get('AS');\n            if (state && state.name !== 'Off') {\n                value = state.name;\n            }\n        }\n        return value;\n    };\n    PdfField.prototype._getTextAlignment = function () {\n        if (this._textAlignment === null || typeof this._textAlignment === 'undefined') {\n            if (this._isLoaded) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary && widget._dictionary.has('Q')) {\n                    this._textAlignment = widget._dictionary.get('Q');\n                }\n                else if (this._dictionary.has('Q')) {\n                    this._textAlignment = this._dictionary.get('Q');\n                }\n                else {\n                    this._textAlignment = PdfTextAlignment.left;\n                }\n            }\n            else {\n                this._textAlignment = PdfTextAlignment.left;\n            }\n        }\n        return this._textAlignment;\n    };\n    PdfField.prototype._setTextAlignment = function (value) {\n        var widget = this.itemAt(this._defaultIndex);\n        if (this._isLoaded && !this.readOnly) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else {\n                this._dictionary.update('Q', value);\n            }\n        }\n        if (!this._isLoaded && this._textAlignment !== value) {\n            if (widget && widget._dictionary) {\n                widget._dictionary.update('Q', value);\n            }\n            else if (this._dictionary) {\n                this._dictionary.update('Q', value);\n            }\n        }\n        this._textAlignment = value;\n        this._stringFormat = new PdfStringFormat(value, PdfVerticalAlignment.middle);\n    };\n    PdfField.prototype._parseItems = function () {\n        var collection = [];\n        for (var i = 0; i < this.itemsCount; i++) {\n            collection.push(this.itemAt(i));\n        }\n        return collection;\n    };\n    return PdfField;\n}());\nexport { PdfField };\n/**\n * `PdfTextBoxField` class represents the text box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access text box field\n * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextBoxField = /** @class */ (function (_super) {\n    __extends(PdfTextBoxField, _super);\n    function PdfTextBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._autoResizeText = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing text box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfTextBoxField} Text box field.\n     */\n    PdfTextBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfTextBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    Object.defineProperty(PdfTextBoxField.prototype, \"text\", {\n        /**\n         * Gets the value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text value from text box field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined') {\n                if (this._isLoaded) {\n                    var text = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (text) {\n                        this._text = _stringToPdfString(text);\n                    }\n                    else {\n                        var widget = this.itemAt(this._defaultIndex);\n                        if (widget) {\n                            text = widget._dictionary.get('V');\n                            if (text) {\n                                this._text = _stringToPdfString(text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._text = '';\n                }\n            }\n            return this._text;\n        },\n        /**\n         * Sets the value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text value to text box field\n         * field.text = ‘Syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                if (!this.readOnly) {\n                    if (!(this._dictionary.has('V') && this._dictionary.get('V') === value)) {\n                        this._dictionary.update('V', value);\n                    }\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && !(widget._dictionary.has('V') && widget._dictionary.get('V') === value)) {\n                        widget._dictionary.update('V', value);\n                    }\n                }\n            }\n            else if (this._text !== value) {\n                this._dictionary.update('V', value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a text box.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the text alignment from text box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a text box.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"defaultValue\", {\n        /**\n         * Gets the default value of the field.\n         *\n         * @returns {string} Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the default value from the text box field\n         * let value: string = field.defaultValue;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._defaultValue === 'undefined') {\n                var text = _getInheritableProperty(this._dictionary, 'DV', false, true, 'Parent');\n                if (text) {\n                    this._defaultValue = text;\n                }\n            }\n            return this._defaultValue;\n        },\n        /**\n         * Sets the default value of the field.\n         *\n         * @param {string} value Default value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the default value of the text box field\n         * field.defaultValue = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this.defaultValue) {\n                this._dictionary.update('DV', value);\n                this._defaultValue = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"multiLine\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @returns {boolean} multiline.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is multiline.\n         * let multiLine: boolean = field.multiLine;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.multiLine) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         *\n         * @param {boolean} value multiLine or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is multiline.\n         * field.multiLine = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.multiLine;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.multiLine;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"password\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @returns {boolean} password.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is password.\n         * let password: boolean = field.password;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._fieldFlags & _FieldFlag.password) !== 0;\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is password.\n         *\n         * @param {boolean} value password or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is password.\n         * field.password = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.password;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.password;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"scrollable\", {\n        /**\n         * Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @returns {boolean} scrollable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * let scrollable: boolean = field.scrollable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotScroll) !== 0);\n        },\n        /**\n         * Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         *\n         * @param {boolean} value scrollable or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is scrollable.\n         * field.scrollable = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotScroll;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotScroll;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"spellCheck\", {\n        /**\n         * Gets a value indicating whether to check spelling.\n         *\n         * @returns {boolean} spellCheck.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether to check spelling\n         * let spellCheck: boolean = field.spellCheck;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return !((this._fieldFlags & _FieldFlag.doNotSpellCheck) !== 0);\n        },\n        /**\n         * Sets a value indicating whether to check spelling.\n         *\n         * @param {boolean} value spellCheck or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether to check spelling\n         * field.spellCheck = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags &= ~_FieldFlag.doNotSpellCheck;\n            }\n            else {\n                this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"insertSpaces\", {\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @returns {boolean} insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * let insertSpaces: boolean = field.insertSpaces;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var flags = this._fieldFlags;\n            return ((_FieldFlag.comb & flags) !== 0) &&\n                ((flags & _FieldFlag.multiLine) === 0) &&\n                ((flags & _FieldFlag.password) === 0) &&\n                ((flags & _FieldFlag.fileSelect) === 0);\n        },\n        /**\n         * Meaningful only if the MaxLength property is set and the Multiline, Password properties are false.\n         * If set, the field is automatically divided into as many equally spaced positions, or combs,\n         * as the value of MaxLength, and the text is laid out into those combs.\n         *\n         * @param {boolean} value insertSpaces.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets a value indicating whether this `PdfTextBoxField` is insertSpaces.\n         * field.insertSpaces = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._fieldFlags |= _FieldFlag.comb;\n            }\n            else {\n                this._fieldFlags &= ~_FieldFlag.comb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the highlight mode of text box field\n         * let mode: PdfHighlightMode = field.highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary && this._dictionary.has('H')) {\n                var name_4 = this._dictionary.get('H');\n                mode = _mapHighlightMode(name_4.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.noHighlighting;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the highlight mode of text box field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"maxLength\", {\n        /**\n         * Gets the maximum length of the field, in characters.\n         *\n         * @returns {number} maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the maximum length of the field, in characters.\n         * let maxLength: number = field.maxLength;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._maxLength === 'undefined') {\n                var length_1 = _getInheritableProperty(this._dictionary, 'MaxLen', false, true, 'Parent');\n                this._maxLength = (typeof length_1 !== 'undefined' && Number.isInteger(length_1)) ? length_1 : 0;\n            }\n            return this._maxLength;\n        },\n        /**\n         * Sets the maximum length of the field, in characters.\n         *\n         * @param {number} value maximum length.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the maximum length of the field, in characters.\n         * field.maxLength = 20;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.maxLength !== value) {\n                this._dictionary.update('MaxLen', value);\n                this._maxLength = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"isAutoResizeText\", {\n        /**\n         * Gets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @returns {boolean} Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the flag indicating whether the auto resize text enabled or not.\n         * let isAutoResize: boolean = field.isAutoResizeText;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._autoResizeText;\n        },\n        /**\n         * Sets the flag indicating whether the auto resize text enabled or not.\n         * Note: Applicable only for newly created PDF fields.\n         *\n         * @param {boolean} value Enable or disable auto resize text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the flag indicating whether the auto resize text enabled or not.\n         * field.isAutoResizeText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._autoResizeText = value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._isAutoResize = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let firstName: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * firstName.backColor = [255, 0, 0];\n         * // Access the text box field at index 1\n         * let secondName: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * secondName.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._text = '';\n        this._defaultValue = '';\n        this._defaultIndex = 0;\n        this._spellCheck = false;\n        this._insertSpaces = false;\n        this._multiline = false;\n        this._password = false;\n        this._scrollable = false;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Tx'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.doNotSpellCheck;\n        this._createItem(bounds);\n        this._initializeFont(this._defaultFont);\n    };\n    PdfTextBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.left;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._mkDictionary.update('CA', this.actualName);\n        this._addToKid(widget);\n    };\n    PdfTextBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(isFlatten, item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._page, { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfTextBoxField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if ((widget !== null && typeof widget !== 'undefined' && widget._setAppearance && widget._enableGrouping) || this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(isFlatten, source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfTextBoxField.prototype._createAppearance = function (isFlatten, widget) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            if (border.width === 0) {\n                widget.borderColor = [255, 255, 255];\n            }\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        parameter.insertSpaces = this.insertSpaces;\n        var text = this.text;\n        var pdfFont;\n        var stringFormat;\n        var enableGrouping = false;\n        if (text === null || typeof text === 'undefined') {\n            text = '';\n        }\n        if (this.password) {\n            var password = '';\n            for (var i = 0; i < text.length; i++) {\n                password += '*';\n            }\n            text = password;\n        }\n        if (this.maxLength && text.length > this.maxLength) {\n            text = text.substring(0, this.maxLength);\n        }\n        parameter.required = this.required;\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (widget !== null && typeof widget !== 'undefined' && widget instanceof PdfWidgetAnnotation && widget._enableGrouping) {\n            enableGrouping = true;\n        }\n        if (enableGrouping && widget.font !== null && typeof widget.font !== 'undefined') {\n            pdfFont = widget.font;\n            if (pdfFont.size === 0) {\n                pdfFont._size = 8;\n                pdfFont._fontMetrics._size = 0;\n            }\n        }\n        else if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (enableGrouping && widget.textAlignment !== null && typeof widget.textAlignment !== 'undefined') {\n            stringFormat = stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        }\n        else if (typeof this._stringFormat === 'undefined' || this._stringFormat === null) {\n            if (typeof this.textAlignment === 'undefined' || this.textAlignment === null) {\n                this._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n            }\n            else {\n                this._stringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n            }\n        }\n        if (_isRightToLeftCharacters(text)) {\n            this._stringFormat.textDirection = PdfTextDirection.rightToLeft;\n        }\n        if (enableGrouping) {\n            this._drawTextBox(graphics, parameter, text, pdfFont, stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        }\n        else {\n            this._drawTextBox(graphics, parameter, text, this._font, this._stringFormat, this.multiLine, this.scrollable, this.maxLength);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfTextBoxField.prototype._drawTextBox = function (g, parameter, text, font, format, multiline, scroll, maxLength) {\n        if (typeof maxLength !== 'undefined') {\n            if (parameter.insertSpaces) {\n                var width = 0;\n                if (typeof maxLength !== 'undefined' && maxLength > 0 && this.borderColor) {\n                    width = parameter.bounds[2] / maxLength;\n                    g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.borderPen, parameter.backBrush);\n                    var current = text;\n                    for (var i = 0; i < maxLength; i++) {\n                        if (format.alignment === PdfTextAlignment.right) {\n                            if (maxLength - current.length <= i) {\n                                text = current[i - (maxLength - current.length)];\n                            }\n                            else {\n                                text = '';\n                            }\n                        }\n                        else {\n                            if (format.alignment === PdfTextAlignment.center && current.length < maxLength) {\n                                var startlocation = Math.floor(maxLength / 2 - Math.ceil(current.length / 2));\n                                if (i >= startlocation && i < startlocation + current.length) {\n                                    text = current[i - startlocation];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                            else {\n                                if (current.length > i) {\n                                    text = current[Number.parseInt(i.toString(), 10)];\n                                }\n                                else {\n                                    text = '';\n                                }\n                            }\n                        }\n                        parameter.bounds[2] = width;\n                        var stringFormat = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        this._drawTextBox(g, parameter, text, font, stringFormat, multiline, scroll);\n                        parameter.bounds[0] = parameter.bounds[0] + width;\n                        if (parameter.borderWidth) {\n                            g.drawLine(parameter.borderPen, parameter.bounds[0], parameter.bounds[1], parameter.bounds[0], parameter.bounds[1] + parameter.bounds[3]);\n                        }\n                    }\n                }\n                else {\n                    this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n                }\n            }\n            else {\n                this._drawTextBox(g, parameter, text, font, format, multiline, scroll);\n            }\n        }\n        else {\n            if (g._isTemplateGraphics && parameter.required) {\n                g.save();\n                g._initializeCoordinates();\n            }\n            if (!parameter.insertSpaces) {\n                this._drawRectangularControl(g, parameter);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g.restore();\n                g.save();\n                g._sw._beginMarkupSequence('Tx');\n                g._initializeCoordinates();\n            }\n            var rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n            var rotate = this.rotate;\n            if (rotate !== null && typeof rotate !== 'undefined' && rotate === 90) {\n                rectangle[1] = rectangle[2] / 2;\n            }\n            if (parameter.borderStyle === PdfBorderStyle.beveled || parameter.borderStyle === PdfBorderStyle.inset) {\n                rectangle[0] = rectangle[0] + 4 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 8 * parameter.borderWidth;\n            }\n            else {\n                rectangle[0] = rectangle[0] + 2 * parameter.borderWidth;\n                rectangle[2] = rectangle[2] - 4 * parameter.borderWidth;\n            }\n            if (multiline) {\n                var tempheight = (typeof format === 'undefined' || format === null || format.lineSpacing === 0) ?\n                    font._metrics._getHeight() :\n                    format.lineSpacing;\n                var ascent = font._metrics._getAscent(format);\n                var shift = tempheight - ascent;\n                if (text.indexOf('\\n') !== -1) {\n                    if (rectangle[0] === 0 && rectangle[1] === 1) {\n                        rectangle[1] = -(rectangle[1] - shift);\n                    }\n                }\n                else if (rectangle[0] === 0 && rectangle[1] === 1) {\n                    rectangle[1] = -(rectangle[1] - shift);\n                }\n                if (parameter.isAutoFontSize) {\n                    if (parameter.borderWidth !== 0) {\n                        rectangle[1] = rectangle[1] + 2.5 * parameter.borderWidth;\n                    }\n                }\n            }\n            if ((g._page &&\n                typeof g._page.rotation !== 'undefined' &&\n                g._page.rotation !== PdfRotationAngle.angle0) ||\n                parameter.rotationAngle > 0) {\n                var state = g.save();\n                if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(g._size[1], 0);\n                        g.rotateTransform(90);\n                        var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                        var x = rectangle[1];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                    else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                        g.translateTransform(0, g._size[0]);\n                        g.rotateTransform(270);\n                        var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                }\n                if (parameter.rotationAngle) {\n                    if (parameter.rotationAngle === 90) {\n                        if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                            var y = rectangle[0];\n                            rectangle = [x, y, rectangle[3], rectangle[2]];\n                            parameter.stringFormat = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        }\n                        else {\n                            if (rectangle[2] > rectangle[3]) {\n                                g.translateTransform(0, g._size[1]);\n                                g.rotateTransform(-90);\n                                rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                                rectangle[1] = (rectangle[2] / 2) - (8 * parameter.borderWidth);\n                            }\n                            else {\n                                var z = rectangle[0];\n                                rectangle[0] = -(rectangle[1] + rectangle[3]);\n                                rectangle[1] = z;\n                                var height = rectangle[3];\n                                rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                                rectangle[2] = height;\n                                g.rotateTransform(-90);\n                            }\n                        }\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        g.translateTransform(g._size[0], 0);\n                        g.rotateTransform(-270);\n                        rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        rectangle[1] = (rectangle[2] / 2) - (8 * parameter.borderWidth);\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        g.translateTransform(g._size[0], g._size[1]);\n                        g.rotateTransform(-180);\n                        var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x, y, rectangle[2], rectangle[3]];\n                    }\n                }\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n                g.restore(state);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            }\n            if (g._isTemplateGraphics && parameter.required) {\n                g._sw._endMarkupSequence();\n                g.restore();\n            }\n        }\n    };\n    return PdfTextBoxField;\n}(PdfField));\nexport { PdfTextBoxField };\n/**\n * `PdfButtonField` class represents the button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new button field\n * let field: PdfButtonField = new PdfButtonField(page , 'Button1', {x: 100, y: 40, width: 100, height: 20});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfButtonField = /** @class */ (function (_super) {\n    __extends(PdfButtonField, _super);\n    function PdfButtonField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfButtonField.prototype, \"actions\", {\n        /**\n         * Gets the actions of the field. [Read-Only]\n         *\n         * @returns {PdfFieldActions} The actions.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Get the action value from button field\n         * let action: PdfAction = field.actions.mouseEnter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._actions) {\n                this._actions = new PdfFieldActions(this);\n            }\n            return this._actions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"text\", {\n        /**\n         * Gets value of the text box field.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access text box field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text value from button field\n         * let text: string = field.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                if (typeof this._text === 'undefined') {\n                    var widget = this.itemAt(this._defaultIndex);\n                    if (widget && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                        this._text = widget._mkDictionary.get('CA');\n                    }\n                    else if (this._mkDictionary && this._mkDictionary.has('CA')) {\n                        this._text = this._mkDictionary.get('CA');\n                    }\n                }\n                if (typeof this._text === 'undefined') {\n                    var value = _getInheritableProperty(this._dictionary, 'V', false, true, 'Parent');\n                    if (value) {\n                        this._text = value;\n                    }\n                }\n            }\n            if (typeof this._text === 'undefined') {\n                this._text = '';\n            }\n            return this._text;\n        },\n        /**\n         * Sets value of the text box field.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text value of form field\n         * field.text = ’Click to submit’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && !this.readOnly) {\n                var widget = this.itemAt(this._defaultIndex);\n                if (widget && widget._dictionary) {\n                    this._assignText(widget._dictionary, value);\n                }\n                else {\n                    this._assignText(this._dictionary, value);\n                }\n            }\n            if (!this._isLoaded && this._text !== value) {\n                var widget = this.itemAt(this._defaultIndex);\n                this._assignText(widget._dictionary, value);\n                this._text = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a button field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the text alignment from button field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a button field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the field.\n         *\n         * @returns {PdfHighlightMode} highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the highlight mode from button field\n         * let highlightMode: PdfHighlightMode = field. highlightMode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var widget = this.itemAt(this._defaultIndex);\n            var mode;\n            if (widget && typeof widget.highlightMode !== 'undefined') {\n                mode = widget.highlightMode;\n            }\n            else if (this._dictionary && this._dictionary.has('H')) {\n                var highlight = this._dictionary.get('H');\n                mode = _mapHighlightMode(highlight.name);\n            }\n            return (typeof mode !== 'undefined') ? mode : PdfHighlightMode.invert;\n        },\n        /**\n         * Sets the highlight mode of the field.\n         *\n         * @param {PdfHighlightMode} value highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access button field\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the highlight mode of button field as outline\n         * field.highlightMode = PdfHighlightMode.outline;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget && (typeof widget.highlightMode === 'undefined' || widget.highlightMode !== value)) {\n                widget.highlightMode = value;\n            }\n            else if (!this._dictionary.has('H') || _mapHighlightMode(this._dictionary.get('H')) !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfButtonField = document.form.fieldAt(0) as PdfButtonField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfButtonField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the button field at index 0\n         * let submitButton: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * submitButton.backColor = [255, 0, 0];\n         * // Access the button field at index 1\n         * let cancelButton: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * cancelButton.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfButtonField.prototype._assignText = function (fieldDictionary, value) {\n        var dictionary;\n        if (fieldDictionary && fieldDictionary.has('MK')) {\n            dictionary = fieldDictionary.get('MK');\n        }\n        else {\n            dictionary = new _PdfDictionary(this._crossReference);\n            fieldDictionary.set('MK', dictionary);\n        }\n        dictionary.update('CA', value);\n        fieldDictionary._updated = true;\n    };\n    /**\n     * Parse an existing button field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfButtonField} Button field.\n     */\n    PdfButtonField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfButtonField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfButtonField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._fieldFlags |= _FieldFlag.pushButton;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfButtonField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [.827451, .827451, .827451]);\n        widget._mkDictionary.update('CA', (typeof this._name !== 'undefined' && this._name !== null) ? this._name : this._actualName);\n        this._addToKid(widget);\n    };\n    PdfButtonField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._isLoaded) {\n                if (count > 0) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item) {\n                            this._postProcess(isFlatten, item);\n                        }\n                    }\n                }\n                else if ((isFlatten || this._form._setAppearance || this._setAppearance) && !this._checkFieldFlag(this._dictionary)) {\n                    this._postProcess(isFlatten);\n                }\n            }\n            else if (isFlatten || this._form._setAppearance || this._setAppearance) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        var template = this._createAppearance(item);\n                        if (isFlatten) {\n                            this._drawTemplate(template, item._getPage(), { x: item.bounds.x, y: item.bounds.y, width: template._size[0], height: template._size[1] });\n                        }\n                        else {\n                            this._addAppearance(item._dictionary, template, 'N');\n                            var pressed = this._createAppearance(item, true);\n                            if (pressed) {\n                                this._addAppearance(item._dictionary, pressed, 'D');\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            if (isFlatten) {\n                this._dictionary._updated = false;\n            }\n        }\n    };\n    PdfButtonField.prototype._postProcess = function (isFlatten, widget) {\n        var template;\n        var bounds;\n        var source = widget ? widget : this;\n        if ((widget !== null && typeof widget !== 'undefined' && widget._setAppearance && widget._enableGrouping) || this._form._setAppearance || this._setAppearance || (isFlatten && !source._dictionary.has('AP'))) {\n            template = this._createAppearance(source);\n        }\n        else if (source._dictionary.has('AP')) {\n            var appearanceStream = void 0;\n            var dictionary = source._dictionary.get('AP');\n            if (dictionary && dictionary.has('N')) {\n                appearanceStream = dictionary.get('N');\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        if (template) {\n            if (isFlatten) {\n                var page = source instanceof PdfWidgetAnnotation ? source._getPage() : source.page;\n                if (page) {\n                    var graphics = page.graphics;\n                    graphics.save();\n                    if (page.rotation === PdfRotationAngle.angle90) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(90);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                    }\n                    else if (page.rotation === PdfRotationAngle.angle270) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(270);\n                    }\n                    bounds = { x: source.bounds.x, y: source.bounds.y, width: template._size[0], height: template._size[1] };\n                    graphics.drawTemplate(template, bounds);\n                    graphics.restore();\n                }\n                source._dictionary._updated = false;\n            }\n            else {\n                this._addAppearance(source._dictionary, template, 'N');\n            }\n        }\n    };\n    PdfButtonField.prototype._createAppearance = function (widget, isPressed) {\n        if (isPressed === void 0) { isPressed = false; }\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var text;\n        var font;\n        var stringFormat;\n        var enableGrouping = false;\n        var isSizeZero = false;\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        if (widget !== null && typeof widget !== 'undefined' && widget instanceof PdfWidgetAnnotation && widget._enableGrouping) {\n            enableGrouping = true;\n        }\n        if (enableGrouping) {\n            if (widget._mkDictionary && widget._mkDictionary && widget._mkDictionary.has('CA')) {\n                text = widget._mkDictionary.get('CA');\n            }\n            else {\n                text = '';\n            }\n            if (typeof widget.font !== 'undefined' && widget.font.size !== null && widget.font.size !== 0) {\n                font = widget.font;\n            }\n            stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        }\n        else if (typeof this._font === 'undefined' || this._font === null) {\n            this._font = this._defaultFont;\n        }\n        if (this._isLoaded && widget instanceof PdfWidgetAnnotation &&\n            widget !== null && typeof widget !== 'undefined' && widget._defaultAppearance) {\n            var fontName = widget._defaultAppearance.fontName;\n            if (fontName === null || typeof fontName === 'undefined') {\n                fontName = 'Helvetica';\n            }\n            var fontSize = widget._defaultAppearance.fontSize;\n            if (fontSize === null || typeof fontSize === 'undefined') {\n                fontSize = this._defaultFont.size;\n            }\n            else if (fontSize === 0) {\n                isSizeZero = true;\n            }\n            var previousFont = void 0;\n            var currentFont = void 0;\n            var font_1;\n            this._stringFormat = new PdfStringFormat();\n            this._stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n            this._stringFormat.alignment = PdfTextAlignment.center;\n            if (fontSize !== null && typeof fontSize !== 'undefined' && fontName) {\n                font_1 = _mapFont(fontName, fontSize, PdfFontStyle.regular, widget);\n            }\n            if (font_1 !== null && typeof font_1 !== 'undefined') {\n                currentFont = font_1;\n            }\n            else {\n                currentFont = this._defaultFont;\n            }\n            var textWidth = currentFont.measureString(this.text, this._stringFormat);\n            if (isSizeZero && currentFont && currentFont instanceof PdfStandardFont) {\n                if (this._isLoaded && !widget._dictionary.has('AP')) {\n                    var width = widget.bounds.width - 8 * border.width;\n                    var height = widget.bounds.height - 8 * border.width;\n                    while (textWidth[0] < width || textWidth[1] < height) {\n                        previousFont = currentFont;\n                        currentFont = new PdfStandardFont(currentFont.fontFamily, currentFont._size + 1);\n                        textWidth = currentFont.measureString(this.text, this._stringFormat);\n                        if (textWidth[0] > width || textWidth[1] > height) {\n                            currentFont = previousFont;\n                            break;\n                        }\n                    }\n                    this._font = currentFont;\n                }\n            }\n        }\n        if (enableGrouping) {\n            if (isPressed) {\n                this._drawPressedButton(template.graphics, parameter, text, font, stringFormat);\n            }\n            else {\n                this._drawButton(template.graphics, parameter, text, font, stringFormat);\n            }\n        }\n        else {\n            if (isPressed) {\n                this._drawPressedButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n            }\n            else {\n                this._drawButton(template.graphics, parameter, this.text, this._font, this._stringFormat);\n            }\n        }\n        return template;\n    };\n    PdfButtonField.prototype._drawButton = function (g, parameter, text, font, format) {\n        this._drawRectangularControl(g, parameter);\n        var rectangle = parameter.bounds;\n        if ((g._page &&\n            typeof g._page.rotation !== 'undefined' &&\n            g._page.rotation !== PdfRotationAngle.angle0) ||\n            parameter.rotationAngle > 0) {\n            var state = g.save();\n            if (typeof parameter.pageRotationAngle !== 'undefined' && parameter.pageRotationAngle !== PdfRotationAngle.angle0) {\n                if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                    g.translateTransform(g._size[1], 0);\n                    g.rotateTransform(90);\n                    var y = g._size[1] - (rectangle[0] + rectangle[2]);\n                    var x = rectangle[1];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                else if (parameter.pageRotationAngle === PdfRotationAngle.angle270) {\n                    g.translateTransform(0, g._size[0]);\n                    g.rotateTransform(270);\n                    var x = g._size[0] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n            }\n            if (parameter.rotationAngle) {\n                if (parameter.rotationAngle === 90) {\n                    if (parameter.pageRotationAngle === PdfRotationAngle.angle90) {\n                        g.translateTransform(0, g._size[1]);\n                        g.rotateTransform(-90);\n                        var x = g._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x, y, rectangle[3], rectangle[2]];\n                    }\n                    else {\n                        if (rectangle[2] > rectangle[3]) {\n                            g.translateTransform(0, g._size[1]);\n                            g.rotateTransform(-90);\n                            rectangle = [parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3]];\n                        }\n                        else {\n                            var z = rectangle[0];\n                            rectangle[0] = -(rectangle[1] + rectangle[3]);\n                            rectangle[1] = z;\n                            var height = rectangle[3];\n                            rectangle[3] = rectangle[2] > font._metrics._getHeight() ? rectangle[2] : font._metrics._getHeight();\n                            rectangle[2] = height;\n                            g.rotateTransform(-90);\n                        }\n                    }\n                }\n                else if (parameter.rotationAngle === 270) {\n                    g.translateTransform(g._size[0], 0);\n                    g.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = g._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    g.translateTransform(g._size[0], g._size[1]);\n                    g.rotateTransform(-180);\n                    var x = g._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = g._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n            }\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n            g.restore(state);\n        }\n        else {\n            g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        }\n    };\n    PdfButtonField.prototype._drawPressedButton = function (g, parameter, text, font, format) {\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.shadowBrush);\n                break;\n            default:\n                g.drawRectangle(parameter.bounds[0], parameter.bounds[1], parameter.bounds[2], parameter.bounds[3], parameter.backBrush);\n                break;\n        }\n        this._drawBorder(g, parameter.bounds, parameter.borderPen, parameter.borderStyle, parameter.borderWidth);\n        var rectangle = [parameter.borderWidth,\n            parameter.borderWidth,\n            parameter.bounds[2] - parameter.borderWidth,\n            parameter.bounds[3] - parameter.borderWidth];\n        g.drawString(text, font, rectangle, null, parameter.foreBrush, format);\n        switch (parameter.borderStyle) {\n            case PdfBorderStyle.inset:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, this._grayBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._silverBrush);\n                break;\n            case PdfBorderStyle.beveled:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                this._drawRightBottomShadow(g, parameter.bounds, parameter.borderWidth, this._whiteBrush);\n                break;\n            default:\n                this._drawLeftTopShadow(g, parameter.bounds, parameter.borderWidth, parameter.shadowBrush);\n                break;\n        }\n    };\n    return PdfButtonField;\n}(PdfField));\nexport { PdfButtonField };\n/**\n * `PdfCheckBoxField` class represents the check box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new check box field\n * let field: PdfCheckBoxField = new PdfCheckBoxField('CheckBox1', {x: 100, y: 40, width: 20, height: 20}, page);\n * // Sets the checked flag as true.\n * field.checked = true;\n * // Sets the tool tip value\n * field.toolTip = 'Checked';\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCheckBoxField = /** @class */ (function (_super) {\n    __extends(PdfCheckBoxField, _super);\n    function PdfCheckBoxField(name, bounds, page) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing check box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfCheckBoxField} Check box field.\n     */\n    PdfCheckBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfCheckBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        else {\n            var item = PdfStateItem._load(dictionary, crossReference, field);\n            item._isLoaded = true;\n            item._ref = reference;\n            field._parsedItems.set(0, item);\n        }\n        return field;\n    };\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfStateItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the check box field\n     * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n     * // Gets the first list item.\n     * let item: PdfStateItem = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfCheckBoxField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfStateItem._load(dictionary, this._crossReference, this);\n                    item._isLoaded = true;\n                    item._ref = ref;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    Object.defineProperty(PdfCheckBoxField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not.\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: Boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return (this._kidsCount > 0) ? this.itemAt(this._defaultIndex).checked : _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag indicating whether the field is checked or not.\n         *\n         * @param {boolean} value Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the check box field\n         * let field: PdfCheckBoxField = form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the flag indicating whether the field is checked or not.\n         * field.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._kidsCount > 0) {\n                    this.itemAt(this._defaultIndex).checked = value;\n                }\n                if (value) {\n                    if (this._isLoaded) {\n                        var entry = _getItemValue((this._kidsCount > 0) ?\n                            this.itemAt(this._defaultIndex)._dictionary : this._dictionary);\n                        this._dictionary.update('V', _PdfName.get(entry));\n                        this._dictionary.update('AS', _PdfName.get(entry));\n                    }\n                    else {\n                        this._dictionary.update('V', _PdfName.get('Yes'));\n                        this._dictionary.update('AS', _PdfName.get('Yes'));\n                    }\n                }\n                else {\n                    if (this._dictionary.has('V')) {\n                        delete this._dictionary._map.V;\n                    }\n                    if (this._dictionary.has('AS')) {\n                        delete this._dictionary._map.AS;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a check box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Gets the text alignment from check box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a check box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the check box field at index 0\n         * let checkBox1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * checkBox1.backColor = [255, 0, 0];\n         * // Access the check box field at index 1\n         * let checkBox2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * checkBox2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCheckBoxField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(true);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n            if (this._isLoaded) {\n                this._setAppearance = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCheckBoxField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._defaultIndex = 0;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._createItem(bounds);\n    };\n    PdfCheckBoxField.prototype._createItem = function (bounds) {\n        var widget = new PdfStateItem();\n        widget._create(this._page, bounds, this);\n        widget.textAlignment = PdfTextAlignment.center;\n        this._stringFormat = new PdfStringFormat(widget.textAlignment, PdfVerticalAlignment.middle);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget.style = PdfCheckBoxStyle.check;\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        this._addToKid(widget);\n    };\n    PdfCheckBoxField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (!this._isLoaded) {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                if (item) {\n                    var state = item.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                    item._postProcess(item.checked ? 'Yes' : 'Off');\n                    if (isFlatten) {\n                        var template = this._createAppearance(item, state);\n                        this._drawTemplate(template, item._getPage(), item.bounds);\n                    }\n                    else {\n                        this._drawAppearance(item);\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n        }\n        else if (isFlatten || this._setAppearance || this._dictionary._updated || this._isImport) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (!this._checkFieldFlag(item._dictionary)) {\n                            if (isFlatten) {\n                                var template = void 0;\n                                var state = item.checked ?\n                                    _PdfCheckFieldState.checked :\n                                    _PdfCheckFieldState.unchecked;\n                                if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                    template = this._createAppearance(item, state);\n                                }\n                                else {\n                                    template = _getStateTemplate(state, item);\n                                }\n                                this._drawTemplate(template, item._getPage(), item.bounds);\n                            }\n                            else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                                item._postProcess(item.checked ? 'Yes' : 'Off');\n                                this._drawAppearance(item);\n                            }\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.checked ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfCheckBoxField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        if (widget._styleText) {\n            this._drawCheckBox(graphics, parameter, widget._styleText, state);\n        }\n        else {\n            this._drawCheckBox(graphics, parameter, _styleToString(widget._style), state);\n        }\n        return template;\n    };\n    PdfCheckBoxField.prototype._drawAppearance = function (item, itemValue) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, 'Yes', 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, 'Yes', 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        if (itemValue !== null && typeof itemValue !== 'undefined') {\n            normalDictionary.update(itemValue, normalCheckedReference);\n        }\n        else {\n            normalDictionary.update('Yes', normalCheckedReference);\n        }\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        if (itemValue !== null && typeof itemValue !== 'undefined') {\n            pressedDictionary.update(itemValue, pressCheckedReference);\n        }\n        else {\n            pressedDictionary.update('Yes', pressCheckedReference);\n        }\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfCheckBoxField;\n}(PdfField));\nexport { PdfCheckBoxField };\n/**\n * `PdfRadioButtonListField` class represents the radio button field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListField = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListField, _super);\n    function PdfRadioButtonListField(page, name) {\n        var _this = _super.call(this) || this;\n        _this._selectedIndex = -1;\n        if (page && name) {\n            _this._initialize(page, name);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing radio button list field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfRadioButtonListField} Radio button list field.\n     */\n    PdfRadioButtonListField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfRadioButtonListField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"checked\", {\n        /**\n         * Gets the flag indicating whether the field is checked or not (Read only).\n         *\n         * @returns {boolean} Checked.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the flag indicating whether the field is checked or not.\n         * let checked: boolean = field.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var check = false;\n            if (this._kidsCount > 0) {\n                check = this.itemAt(this._defaultIndex).checked;\n            }\n            return check;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index.\n         *\n         * @returns {number} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Gets the selected index.\n         * let index: number = field.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && this._selectedIndex === -1) {\n                this._selectedIndex = this._obtainSelectedIndex();\n            }\n            return this._selectedIndex;\n        },\n        /**\n         * Sets the selected item index.\n         *\n         * @param {number} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Create and add first item\n         * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n         * // Create and add second item\n         * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n         * field.add(second);\n         * // Sets selected index of the radio button list field\n         * field.selectedIndex = 0;\n         * // Add the field into PDF form\n         * form.add(field);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.selectedIndex !== value) {\n                this._selectedIndex = value;\n                for (var i = 0; i < this._kidsCount; i++) {\n                    var item = this.itemAt(i);\n                    if (i === value) {\n                        item._dictionary.update('AS', _PdfName.get(item.value));\n                        var name_5 = _PdfName.get(item.value);\n                        this._dictionary.update('V', name_5);\n                        this._dictionary.update('DV', name_5);\n                    }\n                    else {\n                        item._dictionary.update('AS', _PdfName.get('Off'));\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListField.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border color of the field.\n         * let borderColor: number[] = field.borderColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor(!this._isLoaded);\n        },\n        /**\n         * Sets the border color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the border color of the field.\n         * field.borderColor = [255, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfRadioButtonListItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the radio button list field\n     * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n     * // Gets the first list item.\n     * let item: PdfRadioButtonListField = field.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.itemAt = function (index) {\n        if (index < 0 || (index !== 0 && index >= this._kidsCount)) {\n            throw Error('Index out of range.');\n        }\n        var item;\n        if (this._parsedItems.has(index)) {\n            item = this._parsedItems.get(index);\n        }\n        else {\n            var dictionary = void 0;\n            if (index >= 0 && this._kids && this._kids.length > 0 && index < this._kids.length) {\n                var ref = this._kids[Number.parseInt(index.toString(), 10)];\n                if (ref && ref instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(ref);\n                }\n                if (dictionary) {\n                    item = PdfRadioButtonListItem._load(dictionary, this._crossReference, this);\n                    item._ref = ref;\n                    item._index = index;\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    PdfRadioButtonListField.prototype.add = function (value, bounds) {\n        if (value instanceof PdfRadioButtonListItem) {\n            value._field = this;\n            value._dictionary.update('Parent', this._ref);\n            value._setField(this);\n            return this._kidsCount;\n        }\n        else {\n            return new PdfRadioButtonListItem(value, bounds, this);\n        }\n    };\n    /**\n     * Remove the radio button list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            var page = item._getPage();\n            if (page) {\n                page._removeAnnotation(item._ref);\n            }\n            this._kids.splice(index, 1);\n            this._dictionary.set('Kids', this._kids);\n            this._dictionary._updated = true;\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_2 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_2.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_2.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_2;\n            }\n            if (this._dictionary.has('Opt')) {\n                var options = this._dictionary.getArray('Opt');\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the specified radio button list field item.\n     *\n     * @param {PdfRadioButtonListItem} item Item to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the form field at index 0\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Remove the first item of the form field\n     * field.removeItem(field.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRadioButtonListField.prototype.removeItem = function (item) {\n        if (item && item._ref) {\n            var index = this._kids.indexOf(item._ref);\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._initialize = function (page, name) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Btn'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._fieldFlags |= _FieldFlag.radio;\n    };\n    PdfRadioButtonListField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    if (options[Number.parseInt(i.toString(), 10)]) {\n                        this.itemAt(i)._optionValue = options[Number.parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n        }\n    };\n    PdfRadioButtonListField.prototype._obtainSelectedIndex = function () {\n        var index = -1;\n        for (var i = 0; i < this._kidsCount; ++i) {\n            var item = this.itemAt(i);\n            if (item) {\n                var checkName = _getInheritableProperty(item._dictionary, 'V', false, true, 'Parent');\n                if (checkName && item._dictionary.has('AS')) {\n                    var asName = item._dictionary.get('AS');\n                    if (asName && asName.name.toLowerCase() !== 'off') {\n                        if (checkName instanceof _PdfName && checkName.name.toLowerCase() !== 'off') {\n                            if (asName.name === checkName.name || item._optionValue === checkName.name) {\n                                index = i;\n                                break;\n                            }\n                        }\n                        else if (typeof checkName === 'string' && checkName.toLowerCase() !== 'off') {\n                            if (asName.name === checkName || item._optionValue === checkName) {\n                                index = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfRadioButtonListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var count = this._kidsCount;\n        if (this._isLoaded) {\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && !this._checkFieldFlag(item._dictionary)) {\n                        if (isFlatten) {\n                            var template = void 0;\n                            var state = this.selectedIndex === i ?\n                                _PdfCheckFieldState.checked :\n                                _PdfCheckFieldState.unchecked;\n                            if (this._setAppearance || this._form._setAppearance || !item._dictionary.has('AP')) {\n                                template = this._createAppearance(item, state);\n                            }\n                            else {\n                                template = _getStateTemplate(state, item);\n                            }\n                            this._drawTemplate(template, item._getPage(), item.bounds);\n                        }\n                        else if (this._setAppearance || this._form._setAppearance || !item._isLoaded) {\n                            item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                            this._drawAppearance(item);\n                        }\n                        item._dictionary._updated = !isFlatten;\n                    }\n                }\n            }\n            else {\n                var style = this.selectedIndex !== -1 ?\n                    _PdfCheckFieldState.checked :\n                    _PdfCheckFieldState.unchecked;\n                this._drawTemplate(_getStateTemplate(style, this), this.page, this.bounds);\n            }\n        }\n        else {\n            for (var i = 0; i < count; i++) {\n                var item = this.itemAt(i);\n                var state = this.selectedIndex === i ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n                if (!this._isDuplicatePage) {\n                    item._dictionary.update('AS', _PdfName.get(this.selectedIndex === i ? item.value : 'Off'));\n                }\n                if (isFlatten) {\n                    var template = this._createAppearance(item, state);\n                    this._drawTemplate(template, item._getPage(), item.bounds);\n                }\n                else if (!this._isDuplicatePage) {\n                    item._postProcess(this.selectedIndex === i ? item.value : 'Off');\n                    this._drawAppearance(item);\n                }\n                item._dictionary._updated = !isFlatten;\n            }\n        }\n        this._dictionary._updated = !isFlatten;\n    };\n    PdfRadioButtonListField.prototype._createAppearance = function (widget, state) {\n        var bounds = widget.bounds;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        if (widget._styleText) {\n            this._drawRadioButton(graphics, parameter, widget._styleText, state);\n        }\n        else {\n            this._drawRadioButton(graphics, parameter, _styleToString(widget.style), state);\n        }\n        return template;\n    };\n    PdfRadioButtonListField.prototype._drawAppearance = function (item) {\n        var appearance = new _PdfDictionary();\n        if (item._dictionary.has('AP')) {\n            appearance = item._dictionary.get('AP');\n            if (appearance) {\n                if (appearance.has('N')) {\n                    _removeReferences(appearance.get('N'), this._crossReference, item.value, 'Off');\n                }\n                if (appearance.has('D')) {\n                    _removeReferences(appearance.get('D'), this._crossReference, item.value, 'Off');\n                }\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            _removeDuplicateReference(appearance, this._crossReference, 'D');\n        }\n        else {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            item._dictionary.update('AP', reference);\n        }\n        var normalChecked = this._createAppearance(item, _PdfCheckFieldState.checked);\n        var normalCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalCheckedReference, normalChecked._content);\n        var normalUnchecked = this._createAppearance(item, _PdfCheckFieldState.unchecked);\n        var normalUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalUncheckedReference, normalUnchecked._content);\n        var normalDictionary = new _PdfDictionary(this._crossReference);\n        var actualValue = item.value;\n        if (!actualValue && item._enableGrouping) {\n            actualValue = 'check' + item._index;\n        }\n        normalDictionary.update(actualValue, normalCheckedReference);\n        normalDictionary.update('Off', normalUncheckedReference);\n        var normalReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(normalReference, normalDictionary);\n        appearance.update('N', normalReference);\n        var pressChecked = this._createAppearance(item, _PdfCheckFieldState.pressedChecked);\n        var pressCheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressCheckedReference, pressChecked._content);\n        var pressUnchecked = this._createAppearance(item, _PdfCheckFieldState.pressedUnchecked);\n        var pressUncheckedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressUncheckedReference, pressUnchecked._content);\n        var pressedDictionary = new _PdfDictionary(this._crossReference);\n        pressedDictionary.update(actualValue, pressCheckedReference);\n        pressedDictionary.update('Off', pressUncheckedReference);\n        var pressedReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pressedReference, pressedDictionary);\n        appearance.update('D', pressedReference);\n        item._dictionary._updated = true;\n    };\n    return PdfRadioButtonListField;\n}(PdfField));\nexport { PdfRadioButtonListField };\n/**\n * Represents the base class for list box and combo box fields.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Access the combo box field\n * let comboBoxField: PdfListField = form.fieldAt(0) as PdfListField;\n * // Gets the count of the loaded combo box field items.\n * let comboItemsCount: number = comboBoxField.itemsCount;\n * // Access the list box field\n * let listBoxField: PdfListField = form.fieldAt(1) as PdfListField;\n * // Gets the count of the loaded list box field items.\n * let ListItemsCount: number = listBoxField.itemsCount;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListField = /** @class */ (function (_super) {\n    __extends(PdfListField, _super);\n    function PdfListField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfListField.prototype, \"itemsCount\", {\n        /**\n         * Gets the count of the loaded field items (Read only).\n         *\n         * @returns {number} Items count.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the count of the loaded combo box field items.\n         * let comboItemsCount: number = comboBoxField.itemsCount;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the count of the loaded list box field items.\n         * let ListItemsCount: number = listBoxField.itemsCount;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._options.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"bounds\", {\n        /**\n         * Gets the bounds.\n         *\n         * @returns {{ x: number, y: number, width: number, height: number }} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the bounds of combo box field.\n         * let comboBoxBounds: {x: number, y: number, width: number, height: number} = comboBoxField.bounds;\n         * // Access the combo box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the bounds of list box field.\n         * let listBoxBounds: {x: number, y: number, width: number, height: number} = listBoxField.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            var widget = this.itemAt(this._defaultIndex);\n            if (widget) {\n                widget._page = this.page;\n            }\n            if (widget && widget.bounds) {\n                value = widget.bounds;\n            }\n            else if (this._dictionary.has('Rect')) {\n                value = _calculateBounds(this._dictionary, this.page);\n            }\n            if (value) {\n                return value;\n            }\n            else if (this._bounds) {\n                return this._bounds;\n            }\n            return value;\n        },\n        /**\n         * Sets the bounds.\n         *\n         * @param {{ x: number, y: number, width: number, height: number }} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the bounds of combo box field.\n         * comboBoxField.bounds = {x: 10, y: 10, width: 100, height: 30};\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Sets the bounds of list box field.\n         * listBoxField.bounds = {x: 10, y: 50, width: 100, height: 30};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            var widget = this.itemAt(this._defaultIndex);\n            if (this._isLoaded) {\n                if (typeof widget === 'undefined' || this._dictionary.has('Rect')) {\n                    this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this.page));\n                }\n                else {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n            }\n            else {\n                if (widget) {\n                    widget._page = this.page;\n                    widget.bounds = value;\n                }\n                else {\n                    this._bounds = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedIndex\", {\n        /**\n         * Gets the selected item index or indexes.\n         *\n         * @returns {number | number[]} Index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxfield: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the selected item index or indexes from combo box field.\n         * let comboBoxIndex: number = comboBoxfield.selectedIndex;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the selected item index or indexes from list box field.\n         * let listBoxIndex: number = listBoxField.selectedIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value = this._dictionary.get('I');\n            if (typeof value === 'undefined') {\n                return [];\n            }\n            else {\n                if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return value;\n                }\n            }\n        },\n        /**\n         * Sets the selected item index or indexes.\n         *\n         * @param {number | number[]} value Selected index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            var length = this._options.length;\n            if (typeof value === 'number') {\n                this._checkIndex(value, length);\n                this._dictionary.update('I', [value]);\n                this._dictionary.update('V', [this._options[Number.parseInt(value.toString(), 10)][0]]);\n            }\n            else {\n                var values_1 = [];\n                value.forEach(function (entry) {\n                    _this._checkIndex(entry, length);\n                    values_1.push(_this._options[Number.parseInt(entry.toString(), 10)][0]);\n                });\n                this._dictionary.update('I', value);\n                this._dictionary.update('V', values_1);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"selectedValue\", {\n        /**\n         * Gets the selected item value or values.\n         *\n         * @returns {string | string[]} Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Gets the selected item value or values from list box field.\n         * if (listBoxField.multiSelect) {\n         *     let listBoxValues: string[]; = listBoxField.selectedValue;\n         * } else {\n         *    let listBoxValues: string = listBoxField.selectedValue;\n         * }\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var _this = this;\n            var values = [];\n            if (this._dictionary && this._dictionary.has('V')) {\n                var value = this._dictionary.getArray('V'); // eslint-disable-line\n                if (typeof value !== 'undefined') {\n                    if (Array.isArray(value)) {\n                        value.forEach(function (element) {\n                            values.push(element);\n                        });\n                    }\n                    else if (typeof value === 'string') {\n                        values.push(value);\n                    }\n                }\n            }\n            if (values.length === 0 && this._dictionary && this._dictionary.has('I')) {\n                var value = this._dictionary.get('I');\n                if (value && value.length > 0) {\n                    value.forEach(function (index) {\n                        values.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                    });\n                }\n            }\n            if (values.length === 1) {\n                return values[0];\n            }\n            else {\n                return values;\n            }\n        },\n        /**\n         * Sets the selected item value or values.\n         *\n         * @param {string | string[]} value Selected values.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Sets the selected values\n         * listField.selectedValue = ['English', 'German'];\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected value\n         * comboField.selectedValue = ['French'];\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var _this = this;\n            if (typeof value === 'string') {\n                var index = this._tryGetIndex(value);\n                if (index !== -1) {\n                    this._dictionary.update('I', [index]);\n                    this._dictionary.update('V', [value]);\n                }\n            }\n            else {\n                var values_2 = [];\n                var indices_1 = [];\n                value.forEach(function (entry) {\n                    var index = _this._tryGetIndex(entry);\n                    if (index !== -1) {\n                        indices_1.push(index);\n                        values_2.push(entry);\n                    }\n                });\n                if (values_2.length > 0) {\n                    this._dictionary.update('I', indices_1);\n                    this._dictionary.update('V', values_2);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"multiSelect\", {\n        /**\n         * Gets the flag indicates whether the list field allows multiple selections.\n         *\n         * @returns {boolean} Value indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box allows multiple selections.\n         * let comboBoxFlag: Boolean = comboBoxField.multiSelect;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box allows multiple selections.\n         * let listBoxFlag: boolean = listBoxField.multiSelect;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.multiSelect) !== 0;\n            }\n            else {\n                return this._multiSelect;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field allows multiple selections.\n         *\n         * @param {boolean} value Indicates whether the list field allows multiple selections.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box allows multiple selections.\n         * listField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box allows multiple selections.\n         * comboField.multiSelect = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.multiSelect !== value) {\n                this._multiSelect = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.multiSelect;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.multiSelect;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"editable\", {\n        /**\n         * Gets the flag indicates whether the list field is editable.\n         *\n         * @returns {boolean} Value indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the combo box field\n         * let comboBoxField: PdfComboBoxField = form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the flag indicates whether the combo box is editable.\n         * let comboBoxFlag: Boolean = comboBoxField.editable;\n         * // Access the list box field\n         * let listBoxField: PdfListBoxField = form.fieldAt(1) as PdfListBoxField;\n         * // Gets the flag indicates whether the list box is editable.\n         * let listBoxFlag: boolean = listBoxField.editable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return (this._fieldFlags & _FieldFlag.edit) !== 0;\n            }\n            else {\n                return this._editable;\n            }\n        },\n        /**\n         * Sets the flag indicates whether the list field is editable.\n         *\n         * @param {boolean} value Indicates whether the list field is editable.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new list box field\n         * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n         * // Add list items to the field.\n         * listField.addItem(new PdfListFieldItem('English', 'English'));\n         * listField.addItem(new PdfListFieldItem('French', 'French'));\n         * listField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * listField.selectedIndex = 2;\n         * // Sets the flag indicates whether the list box is editable.\n         * listField.editable = true;\n         * // Add the field into PDF form\n         * form.add(listField);\n         * // Create a new combo box field\n         * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n         * // Add list items to the field.\n         * comboField.addItem(new PdfListFieldItem('English', 'English'));\n         * comboField.addItem(new PdfListFieldItem('French', 'French'));\n         * comboField.addItem(new PdfListFieldItem('German', 'German'));\n         * // Sets the selected index\n         * comboField.selectedIndex = 2;\n         * // Sets the flag indicates whether the combo box is editable.\n         * comboField.editable = true;\n         * // Add the field into PDF form\n         * form.add(comboField);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._editable !== value) {\n                this._editable = value;\n                if (value) {\n                    this._fieldFlags |= _FieldFlag.edit;\n                }\n                else {\n                    this._fieldFlags &= ~_FieldFlag.edit;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"font\", {\n        /**\n         * Gets the font of the field.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Gets the font of the field.\n         * let font: PdfFont = field.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._font) {\n                return this._font;\n            }\n            else {\n                var widget = this.itemAt(this._defaultIndex);\n                this._font = _obtainFontDetails(this._form, widget, this);\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the field.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfListBoxField = document.form.fieldAt(0) as PdfListBoxField;\n         * // Sets the font of the field\n         * field.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._font = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment in a combo box field.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Gets the text alignment from combo box field\n         * let alignment: PdfTextAlignment = field.textAlignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getTextAlignment();\n        },\n        /**\n         * Sets the text alignment in a combo box field.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access combo box field\n         * let field: PdfComboBoxField = document.form.fieldAt(0) as PdfComboBoxField;\n         * // Sets the text alignment of form field as center\n         * field.textAlignment = PdfTextAlignment.center;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._setTextAlignment(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the list field at index 0\n         * let list1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * list1.backColor = [255, 0, 0];\n         * // Access the list field at index 1\n         * let list2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * list2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListField.prototype, \"_options\", {\n        get: function () {\n            if (!this._optionArray) {\n                if (this._dictionary && this._dictionary.has('Opt')) {\n                    this._optionArray = this._dictionary.getArray('Opt');\n                }\n                else {\n                    this._optionArray = [];\n                    this._dictionary.update('Opt', this._optionArray);\n                }\n            }\n            return this._optionArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the item at the specified index.\n     *\n     * @param {number} index Index of the field item.\n     * @returns {PdfListFieldItem} Field item at the index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBox: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Gets the first list item.\n     * let listBoxItem: PdfListFieldItem = listBox.itemAt(0);\n     * // Access the combo box field\n     * let comboBox: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Gets the first list item.\n     * let comboBoxItem: PdfListFieldItem = comboBox.itemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.itemAt = function (index) {\n        var item;\n        if (index < this._kidsCount) {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else {\n                var dictionary = void 0;\n                var reference = this._kids[Number.parseInt(index.toString(), 10)];\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        else {\n            if (this._parsedItems.has(index)) {\n                item = this._parsedItems.get(index);\n            }\n            else if (this._kidsCount > 0 && this._kids && this._kids.length > 0) {\n                var dictionary = void 0;\n                var reference = void 0;\n                if (this._kidsCount === 1) {\n                    reference = this._kids[0];\n                }\n                else {\n                    reference = this._kids[Number.parseInt(index.toString(), 10)];\n                }\n                if (reference && reference instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(reference);\n                }\n                if (dictionary) {\n                    item = PdfListFieldItem._load(dictionary, this._crossReference, this);\n                    item._index = index;\n                    item._ref = reference;\n                    if (this._options && this._options.length > 0 && index < this._options.length) {\n                        item._text = this._options[Number.parseInt(index.toString(), 10)][1];\n                    }\n                    else {\n                        item._text = '';\n                    }\n                    this._parsedItems.set(index, item);\n                }\n            }\n        }\n        return item;\n    };\n    /**\n     * Add list item.\n     *\n     * @param {PdfListFieldItem} item Item to add.\n     * @returns {number} Index of the field item.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Create a new list box field\n     * let listField: PdfListField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n     * // Add list items to the field.\n     * listField.addItem(new PdfListFieldItem('English', 'English'));\n     * listField.addItem(new PdfListFieldItem('French', 'French'));\n     * listField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * listField.selectedIndex = 2;\n     * // Sets the flag indicates whether the list box allows multiple selections.\n     * listField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(listField);\n     * // Create a new combo box field\n     * let comboField: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 160, width: 100, height: 50});\n     * // Add list items to the field.\n     * comboField.addItem(new PdfListFieldItem('English', 'English'));\n     * comboField.addItem(new PdfListFieldItem('French', 'French'));\n     * comboField.addItem(new PdfListFieldItem('German', 'German'));\n     * // Sets the selected index\n     * comboField.selectedIndex = 2;\n     * // Sets the flag indicates whether the combo box allows multiple selections.\n     * comboField.multiSelect = true;\n     * // Add the field into PDF form\n     * form.add(comboField);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.addItem = function (item) {\n        this._addToOptions(item, this);\n        return this._listValues.length - 1;\n    };\n    /**\n     * Remove the list item from the specified index.\n     *\n     * @param {number} index Item index to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItemAt(1);\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItemAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItemAt = function (index) {\n        var item = this.itemAt(index);\n        if (item && item._ref) {\n            this._parsedItems.delete(index);\n            if (this._parsedItems.size > 0) {\n                var parsedItems_3 = new Map();\n                this._parsedItems.forEach(function (value, key) {\n                    if (key > index) {\n                        parsedItems_3.set(key - 1, value);\n                    }\n                    else {\n                        parsedItems_3.set(key, value);\n                    }\n                });\n                this._parsedItems = parsedItems_3;\n            }\n            if (this._dictionary && this._dictionary.has('Opt')) {\n                var options = this._options;\n                if (options && options.length > 0) {\n                    options.splice(index, 1);\n                    this._dictionary.set('Opt', options);\n                    this._optionArray = options;\n                    this._dictionary._updated = true;\n                }\n            }\n        }\n    };\n    /**\n     * Remove the list item.\n     *\n     * @param {PdfListFieldItem} item Item to remove.\n     * @returns {void} Nothing.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Gets the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Access the PDF form\n     * let form: PdfForm = document.form;\n     * // Access the list box field\n     * let listBoxField: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n     * // Remove the list item from the list box field\n     * listBoxField.removeItem(listBoxField.itemAt(1));\n     * // Access the combo box field\n     * let comboBoxField: PdfComboBoxField = form.fieldAt(1) as PdfComboBoxField;\n     * // Remove the list item from the combo box field\n     * comboBoxField.removeItem(comboBoxField.itemAt(0));\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListField.prototype.removeItem = function (item) {\n        if (item && item.text) {\n            var index = void 0;\n            for (var i = 0; i < this.itemsCount; i++) {\n                var fieldItem = this.itemAt(i);\n                if (fieldItem && item === fieldItem && fieldItem.text === item.text) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                this.removeItemAt(index);\n            }\n        }\n    };\n    PdfListField.prototype._initialize = function (page, name, bounds) {\n        this._defaultIndex = 0;\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Ch'));\n        this._dictionary.update('T', name);\n        this._parsedItems = new Map();\n        this._listValues = [];\n        this._kids = [];\n        this.bounds = bounds;\n        this._addEmptyWidget();\n    };\n    PdfListField.prototype._obtainFont = function (item) {\n        var fontFamily = '';\n        var fontSize = 1;\n        if (item && (item._dictionary.has('DS') || item._dictionary.has('DA'))) {\n            if (item._dictionary.has('DS')) {\n                var collection = item._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_6 = entry[1];\n                        var split = name_6.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    var height = 0.0;\n                    if (fontSize === 0) {\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, height);\n                        if (font !== null) {\n                            height = this._getFontHeight(font._fontFamily);\n                            if (Number.isNaN(height) || height === 0) {\n                                height = 12;\n                            }\n                            font._size = height;\n                            fontSize = height;\n                        }\n                    }\n                }\n            }\n            fontFamily = fontFamily.trim();\n            switch (fontFamily) {\n                case 'Helv':\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Courier':\n                case 'Cour':\n                    this._font = new PdfStandardFont(PdfFontFamily.courier, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'Symb':\n                    this._font = new PdfStandardFont(PdfFontFamily.symbol, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'TiRo':\n                    this._font = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, PdfFontStyle.regular);\n                    break;\n                case 'ZaDb':\n                    this._font = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, PdfFontStyle.regular);\n                    break;\n                default:\n                    this._font = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, PdfFontStyle.regular);\n                    break;\n            }\n        }\n        return this._font;\n    };\n    PdfListField.prototype._obtainSelectedValue = function () {\n        var _this = this;\n        var result = [];\n        if (this._dictionary.has('V')) {\n            var primitive = this._dictionary.get('V'); // eslint-disable-line\n            var array = this._dictionary.getArray('V'); // eslint-disable-line\n            if (primitive !== null && typeof primitive !== 'undefined') {\n                if (typeof primitive === 'string') {\n                    result.push(primitive);\n                }\n                else if (Array.isArray(primitive)) {\n                    array.forEach(function (element) {\n                        result.push(element);\n                    });\n                }\n            }\n        }\n        else {\n            var selectedIndexes = this._dictionary.get('I');\n            if (selectedIndexes !== null &&\n                typeof selectedIndexes !== 'undefined' &&\n                selectedIndexes.length > 0 &&\n                selectedIndexes[0] > -1 &&\n                this._options &&\n                this._options.length > 0) {\n                selectedIndexes.forEach(function (index) {\n                    result.push(_this._options[Number.parseInt(index.toString(), 10)][0]);\n                });\n            }\n        }\n        return result;\n    };\n    PdfListField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten || this._setAppearance || this._form._setAppearance) {\n            var count = this._kidsCount;\n            if (this._kids && this._kids.length > 0) {\n                if (count > 1) {\n                    for (var i = 0; i < count; i++) {\n                        var item = this.itemAt(i);\n                        if (item && !this._checkFieldFlag(item._dictionary)) {\n                            var template = this._createAppearance(item);\n                            if (isFlatten) {\n                                var page = item._getPage();\n                                if (page) {\n                                    this._drawTemplate(template, page, item.bounds);\n                                }\n                            }\n                            else {\n                                this._addAppearance(item._dictionary, template, 'N');\n                            }\n                            item._dictionary._updated = !isFlatten;\n                        }\n                    }\n                }\n                else {\n                    var item = this.itemAt(0);\n                    var template = this._createAppearance();\n                    if (isFlatten) {\n                        var page = this.page;\n                        if (page) {\n                            this._drawTemplate(template, page, this.bounds);\n                        }\n                    }\n                    else {\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                    item._dictionary._updated = !isFlatten;\n                }\n            }\n            else if (this._dictionary) {\n                var template = this._createAppearance();\n                if (isFlatten) {\n                    var page = this.page;\n                    if (page) {\n                        this._drawTemplate(template, page, this.bounds);\n                    }\n                }\n                else {\n                    this._addAppearance(this._dictionary, template, 'N');\n                }\n            }\n            this._dictionary._updated = !isFlatten;\n        }\n    };\n    PdfListField.prototype._tryGetIndex = function (value) {\n        var index = -1;\n        if (this._options && this._options.length > 0) {\n            for (var i = 0; i < this._options.length; i++) {\n                if (value === this._options[Number.parseInt(i.toString(), 10)][0]) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    PdfListField.prototype._addEmptyWidget = function () {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, this.bounds, this);\n        this._addToKid(widget);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n    };\n    return PdfListField;\n}(PdfField));\nexport { PdfListField };\n/**\n * `PdfComboBoxField` class represents the combo box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new combo box field\n * let field: PdfComboBoxField = new PdfComboBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the combo box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComboBoxField = /** @class */ (function (_super) {\n    __extends(PdfComboBoxField, _super);\n    function PdfComboBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n            _this._fieldFlags |= _FieldFlag.combo;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfComboBoxField.prototype, \"_isAutoFontSize\", {\n        /**\n         * Gets the boolean flag indicates whether the combo box field is auto size.\n         *\n         * @private\n         * @returns {boolean} Returns the boolean value to check auto size.\n         */\n        get: function () {\n            var isAutoFontSize = false;\n            if (this._isLoaded && this._form) {\n                var acroForm = this._form._dictionary;\n                if (acroForm && acroForm.has('DA')) {\n                    var fontString = acroForm.get('DA');\n                    if (fontString) {\n                        var defaultAppearance = new _PdfDefaultAppearance(fontString);\n                        if (defaultAppearance.fontSize === 0) {\n                            if (this._kids && this._kids.length > 0) {\n                                var fontSize = false;\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance && defaultAppearance.fontSize > 0) {\n                                            fontSize = true;\n                                        }\n                                    }\n                                }\n                                if (!fontSize) {\n                                    for (var i = 0; i < this._kids.length; i++) {\n                                        var dictionary = void 0;\n                                        var reference = this._kids[Number.parseInt(i.toString(), 10)];\n                                        if (reference && reference instanceof _PdfReference) {\n                                            dictionary = this._crossReference._fetch(reference);\n                                        }\n                                        if (dictionary) {\n                                            if (dictionary.has('DA')) {\n                                                fontString = dictionary.get('DA');\n                                                var height = 0;\n                                                if (fontString) {\n                                                    defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                                    if (defaultAppearance) {\n                                                        height = defaultAppearance.fontSize;\n                                                    }\n                                                }\n                                                if (height === 0) {\n                                                    isAutoFontSize = true;\n                                                }\n                                            }\n                                            else {\n                                                isAutoFontSize = true;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (this._dictionary.has('DA')) {\n                                    fontString = this._dictionary.get('DA');\n                                    var height = 0;\n                                    if (fontString) {\n                                        defaultAppearance = new _PdfDefaultAppearance(fontString);\n                                        if (defaultAppearance) {\n                                            height = defaultAppearance.fontSize;\n                                        }\n                                    }\n                                    if (height === 0) {\n                                        isAutoFontSize = true;\n                                    }\n                                }\n                                else {\n                                    isAutoFontSize = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isAutoFontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Parse an existing combo box field.\n     *\n     * @private\n     * @param {PdfForm} form Form object.\n     * @param {_PdfDictionary} dictionary Field dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {_PdfReference} reference Field reference.\n     * @returns {PdfComboBoxField} Combo box field.\n     */\n    PdfComboBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfComboBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        var options = field._dictionary.getArray('Opt');\n        if (options !== null && typeof options !== 'undefined') {\n            field._listValues = new Array(options.length);\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfComboBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            if (options && options.length > 0) {\n                var itemsCount = this._kidsCount;\n                var count = options.length <= itemsCount ? options.length : itemsCount;\n                for (var i = 0; i < count; i++) {\n                    var text = options[Number.parseInt(i.toString(), 10)][1];\n                    if (text) {\n                        this.itemAt(i)._text = text ? text : '';\n                    }\n                }\n            }\n        }\n    };\n    PdfComboBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (bounds) {\n                if (this._isLoaded &&\n                    this.page &&\n                    typeof this.page.rotation !== 'undefined' &&\n                    this.page.rotation !== PdfRotationAngle.angle0) {\n                    parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n                }\n                else {\n                    parameter.bounds = [0, 0, bounds.width, bounds.height];\n                }\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            if (this.rotate !== null && typeof this.rotate !== 'undefined') {\n                parameter.rotationAngle = this.rotate;\n            }\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        if (parameter.bounds === null || typeof parameter.bounds === 'undefined') {\n            parameter.bounds = [0, 0, 0, 0];\n        }\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = void 0;\n            if (item) {\n                font = this._obtainFont(item);\n            }\n            if (typeof font === 'undefined' || font === null) {\n                font = this._appearanceFont;\n            }\n            this._drawComboBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = new PdfStandardFont(PdfFontFamily.timesRoman, this._getFontHeight(PdfFontFamily.helvetica));\n            }\n            this._drawComboBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfComboBoxField.prototype._drawComboBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var selectedIndexes = this._dictionary.get('I');\n        var i = -1;\n        if (selectedIndexes && selectedIndexes.length > 0) {\n            i = selectedIndexes[0];\n        }\n        if (i >= 0 && i < options.length) {\n            var item = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line \n            var location_1 = [0, 0];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_1[0] = 2 * doubleBorderWidth;\n                location_1[1] = 2 * borderWidth;\n            }\n            else {\n                location_1[0] = doubleBorderWidth + defaultPadding;\n                location_1[1] = 1 * borderWidth + (defaultPadding - 1);\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            if (parameter.rotationAngle === 0) {\n                var x = rect[0] + borderWidth;\n                if (padding) {\n                    x += borderWidth;\n                    width -= doubleBorderWidth;\n                }\n                brush = new PdfBrush([153, 193, 218]);\n                graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                brush = new PdfBrush([0, 0, 0]);\n            }\n            var value = void 0;\n            if (item && Array.isArray(item)) {\n                value = item[1] ? item[1] : item[0];\n            }\n            else {\n                value = item;\n            }\n            if (value) {\n                var itemTextBound = [location_1[0], location_1[1], width - location_1[0], rect[3]];\n                if (parameter.rotationAngle > 0) {\n                    var state = graphics.save();\n                    if (parameter.rotationAngle === 90) {\n                        graphics.translateTransform(0, graphics._size[1]);\n                        graphics.rotateTransform(-90);\n                        var x_1 = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        var y = rectangle[0];\n                        rectangle = [x_1, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 270) {\n                        graphics.translateTransform(graphics._size[0], 0);\n                        graphics.rotateTransform(-270);\n                        var x_2 = rectangle[1];\n                        var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        rectangle = [x_2, y, rectangle[3] + rectangle[2], rectangle[2]];\n                    }\n                    else if (parameter.rotationAngle === 180) {\n                        graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                        graphics.rotateTransform(-180);\n                        var x_3 = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                        var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                        rectangle = [x_3, y, rectangle[2], rectangle[3]];\n                    }\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_1[1], width, rect[3], brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                    graphics.restore(state);\n                }\n                else {\n                    graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                }\n            }\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfComboBoxField.prototype._getFontHeight = function (fontFamily) {\n        var values = this._dictionary.get('I');\n        var s;\n        var itemFont;\n        var format;\n        var options;\n        var bounds;\n        var borderWidth = this.border.width;\n        if (this._isLoaded) {\n            itemFont = new PdfStandardFont(fontFamily, 12);\n            format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            options = this._dictionary.getArray('Opt');\n            bounds = this.bounds;\n            var widths_1 = [];\n            if (values && values.length > 0) {\n                values.forEach(function (entry) {\n                    widths_1.push(itemFont.measureString(options[Number.parseInt(entry.toString(), 10)][1], [0, 0], format, 0, 0)[0]);\n                });\n            }\n            else if (options.length > 0) {\n                var max = itemFont.measureString(options[0][1], [0, 0], format, 0, 0)[0];\n                for (var i = 1; i < options.length; ++i) {\n                    var width = itemFont.measureString(options[Number.parseInt(i.toString(), 10)][1], [0, 0], format, 0, 0)[0];\n                    max = Math.max(max, width);\n                    widths_1.push(max);\n                }\n            }\n            s = (widths_1.length > 0) ? ((12 * (bounds.width - 4 * borderWidth)) / ((widths_1.sort())[widths_1.length - 1])) : 12;\n        }\n        else {\n            s = 0;\n            if (values && values.length > 0) {\n                itemFont = new PdfStandardFont(fontFamily, 12);\n                format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                options = this._dictionary.getArray('Opt');\n                var selectedValue = this.selectedValue; // eslint-disable-line\n                var width = itemFont.measureString((selectedValue !== null && typeof selectedValue === 'string') ? selectedValue :\n                    options[values[0]][1], [0, 0], format, 0, 0)[0];\n                bounds = this.bounds;\n                if (width) {\n                    s = (12 * (bounds.width - 4 * borderWidth)) / width;\n                }\n                else {\n                    s = 12;\n                }\n            }\n            else {\n                return s;\n            }\n        }\n        var fontSize = 0;\n        if (values && values.length > 0) {\n            if (s !== 12) {\n                itemFont = new PdfStandardFont(fontFamily, s);\n                var selectedValue = this.selectedValue; // eslint-disable-line\n                var text = (selectedValue !== null && typeof selectedValue === 'string') ? selectedValue :\n                    options[values[0]][1];\n                var textSize = itemFont.measureString(text);\n                if (textSize[0] > bounds.width || textSize[1] > bounds.height) {\n                    var width = bounds.width - 4 * borderWidth;\n                    var h = bounds.height - 4 * borderWidth;\n                    var min = 0.248;\n                    for (var i = 1; i <= bounds.height; i++) {\n                        itemFont = new PdfStandardFont(fontFamily, i);\n                        var size = itemFont.measureString(text);\n                        if (size[0] > bounds.width || size[1] > h) {\n                            fontSize = i;\n                            do {\n                                fontSize = fontSize - 0.001;\n                                itemFont = new PdfStandardFont(fontFamily, fontSize);\n                                var textWidth = itemFont.getLineWidth(text, format);\n                                if (fontSize < min) {\n                                    itemFont._size = min;\n                                    break;\n                                }\n                                size = itemFont.measureString(text, [0, 0], format, 0, 0);\n                                if (textWidth < width && size[1] < h) {\n                                    itemFont._size = fontSize;\n                                    break;\n                                }\n                            } while (fontSize > min);\n                            s = fontSize;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else if (s > 12) {\n            s = 12;\n        }\n        return s;\n    };\n    return PdfComboBoxField;\n}(PdfListField));\nexport { PdfComboBoxField };\n/**\n * `PdfListBoxField` class represents the list box field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListBoxField = /** @class */ (function (_super) {\n    __extends(PdfListBoxField, _super);\n    function PdfListBoxField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing list box field of the PDF document.\n     *\n     * @private\n     * @param {number} form maximum length.\n     * @param {_PdfDictionary} dictionary maximum length.\n     * @param {_PdfCrossReference} crossReference maximum length.\n     * @param {_PdfReference} reference maximum length.\n     * @returns {PdfListBoxField} List box field.\n     */\n    PdfListBoxField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfListBoxField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        if (field._kidsCount > 0) {\n            field._retrieveOptionValue();\n        }\n        return field;\n    };\n    PdfListBoxField.prototype._retrieveOptionValue = function () {\n        if (this._dictionary.has('Opt')) {\n            var options = this._dictionary.getArray('Opt');\n            var itemsCount = this._kidsCount;\n            var count = options.length <= itemsCount ? options.length : itemsCount;\n            this._listValues = new Array(count);\n            if (options && options.length > 0) {\n                var index = this._dictionary.get('I');\n                if (Array.isArray(index) && index.length > 0) {\n                    index = index[0];\n                    this._selectedIndex = index;\n                }\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item) {\n                        if (_isNullOrUndefined(index) && this._listValues !== null && typeof this._listValues !== 'undefined') {\n                            var value = options[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                            if (Array.isArray(value)) {\n                                this._listValues[Number.parseInt(i.toString(), 10)] = value[1];\n                            }\n                            else {\n                                this._listValues[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (i === index) {\n                                item._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                                this._selectedIndex = i;\n                            }\n                            else {\n                                item._text = this._listValues[Number.parseInt(i.toString(), 10)];\n                            }\n                        }\n                        else {\n                            item._text = '';\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfListBoxField.prototype._createAppearance = function (item) {\n        var parameter = new _PaintParameter();\n        if (item) {\n            var bounds = item.bounds;\n            var page = item._getPage();\n            if (item._isLoaded && page && typeof page.rotation !== 'undefined' && page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], page.size, page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = item.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(item.color);\n            var border = item.border;\n            if (item.borderColor) {\n                parameter.borderPen = new PdfPen(item.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            if (item._enableGrouping && typeof item.rotate === 'undefined') {\n                parameter.rotationAngle = 0;\n            }\n            else {\n                parameter.rotationAngle = item.rotate;\n            }\n            var alignment = typeof item.textAlignment !== 'undefined' ? item.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        else {\n            var bounds = this.bounds;\n            if (this._isLoaded &&\n                this.page &&\n                typeof this.page.rotation !== 'undefined' &&\n                this.page.rotation !== PdfRotationAngle.angle0) {\n                parameter.bounds = this._rotateTextBox([bounds.x, bounds.y, bounds.width, bounds.height], this.page.size, this.page.rotation);\n            }\n            else {\n                parameter.bounds = [0, 0, bounds.width, bounds.height];\n            }\n            var backcolor = this.backColor;\n            if (backcolor) {\n                parameter.backBrush = new PdfBrush(backcolor);\n            }\n            parameter.foreBrush = new PdfBrush(this.color);\n            var border = this.border;\n            if (this.borderColor) {\n                parameter.borderPen = new PdfPen(this.borderColor, border.width);\n            }\n            parameter.borderStyle = border.style;\n            parameter.borderWidth = border.width;\n            if (backcolor) {\n                var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n                var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                    shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                    shadowColor[2] >= 0 ? shadowColor[2] : 0];\n                parameter.shadowBrush = new PdfBrush(color);\n            }\n            parameter.rotationAngle = this.rotationAngle;\n            if (this.rotate !== null && typeof this.rotate !== 'undefined') {\n                parameter.rotationAngle = this.rotate;\n            }\n            var alignment = typeof this.textAlignment !== 'undefined' ? this.textAlignment : PdfTextAlignment.left;\n            var verticalAlignment = this.multiSelect ? PdfVerticalAlignment.top : PdfVerticalAlignment.middle;\n            parameter.stringFormat = new PdfStringFormat(alignment, verticalAlignment);\n        }\n        parameter.required = this.required;\n        var template = new PdfTemplate(parameter.bounds, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (!this.required) {\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        if (this._isLoaded) {\n            var font = this._obtainFont(item);\n            if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n                font = this._appearanceFont;\n            }\n            this._drawListBox(graphics, parameter, font, parameter.stringFormat);\n        }\n        else {\n            if (!this._font) {\n                this._font = this._defaultItemFont;\n            }\n            this._drawListBox(graphics, parameter, this._font, parameter.stringFormat);\n        }\n        if (!this.required) {\n            graphics._sw._endMarkupSequence();\n        }\n        return template;\n    };\n    PdfListBoxField.prototype._drawListBox = function (graphics, parameter, font, stringFormat) {\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.save();\n            graphics._initializeCoordinates();\n        }\n        this._drawRectangularControl(graphics, parameter);\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics.restore();\n            graphics.save();\n            graphics._sw._beginMarkupSequence('Tx');\n            graphics._initializeCoordinates();\n        }\n        var options = this._options;\n        var _loop_1 = function (index) {\n            var item = options[Number.parseInt(index.toString(), 10)];\n            var location_2 = [];\n            var borderWidth = parameter.borderWidth;\n            var doubleBorderWidth = 2 * borderWidth;\n            var defaultPadding = 2;\n            var padding = (parameter.borderStyle === PdfBorderStyle.inset || parameter.borderStyle === PdfBorderStyle.beveled);\n            if (padding) {\n                location_2.push(2 * doubleBorderWidth);\n                location_2.push((index + 2) * borderWidth + font._metrics._getHeight() * index);\n            }\n            else {\n                location_2.push(doubleBorderWidth + defaultPadding);\n                location_2.push((index + 1) * borderWidth + font._metrics._getHeight() * index + (defaultPadding - 1));\n            }\n            var brush = parameter.foreBrush;\n            var rect = parameter.bounds;\n            var width = rect[2] - doubleBorderWidth;\n            var rectangle = rect;\n            if (padding) {\n                rectangle[3] -= doubleBorderWidth;\n            }\n            else {\n                rectangle[3] -= borderWidth;\n            }\n            graphics.setClip(rectangle, PdfFillMode.winding);\n            var selected = false;\n            var selectedIndexes = this_1._dictionary.get('I');\n            if (selectedIndexes !== null && typeof selectedIndexes !== 'undefined' && selectedIndexes.length > 0) {\n                selectedIndexes.forEach(function (selectedIndex) {\n                    selected = selected || (selectedIndex === index);\n                });\n            }\n            if (parameter.rotationAngle === 0) {\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n            }\n            var value = item[1] ? item[1] : item[0];\n            var itemTextBound = [location_2[0], location_2[1], width - location_2[0], font._metrics._getHeight()];\n            if (parameter.rotationAngle > 0) {\n                var state = graphics.save();\n                if (parameter.rotationAngle === 90) {\n                    graphics.translateTransform(0, graphics._size[1]);\n                    graphics.rotateTransform(-90);\n                    var x = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    var y = rectangle[0];\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 270) {\n                    graphics.translateTransform(graphics._size[0], 0);\n                    graphics.rotateTransform(-270);\n                    var x = rectangle[1];\n                    var y = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    rectangle = [x, y, rectangle[3] + rectangle[2], rectangle[2]];\n                }\n                else if (parameter.rotationAngle === 180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                    var x = graphics._size[0] - (rectangle[0] + rectangle[2]);\n                    var y = graphics._size[1] - (rectangle[1] + rectangle[3]);\n                    rectangle = [x, y, rectangle[2], rectangle[3]];\n                }\n                if (selected) {\n                    var x = rect[0] + borderWidth;\n                    if (padding) {\n                        x += borderWidth;\n                        width -= doubleBorderWidth;\n                    }\n                    brush = new PdfBrush([153, 193, 218]);\n                    graphics.drawRectangle(x, location_2[1], width, font._metrics._getHeight(), brush);\n                    brush = new PdfBrush([0, 0, 0]);\n                }\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n                graphics.restore(state);\n            }\n            else {\n                graphics.drawString(value, font, itemTextBound, null, brush, stringFormat);\n            }\n        };\n        var this_1 = this;\n        for (var index = 0; index < options.length; ++index) {\n            _loop_1(index);\n        }\n        if (graphics._isTemplateGraphics && parameter.required) {\n            graphics._sw._endMarkupSequence();\n            graphics.restore();\n        }\n    };\n    PdfListBoxField.prototype._getFontHeight = function (fontFamily) {\n        var itemFont = new PdfStandardFont(fontFamily, 12, PdfFontStyle.regular);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var s = 0;\n        if (_isNullOrUndefined(this._listValues) && this._listValues.length > 0) {\n            var max = itemFont.measureString(this._listValues[0], [0, 0], format, 0, 0)[0];\n            for (var i = 1; i < this._listValues.length; ++i) {\n                var value = itemFont.measureString(this._listValues[Number.parseInt(i.toString(), 10)], [0, 0], format, 0, 0)[0];\n                max = (max > value) ? max : value;\n            }\n            s = ((12 * (this.bounds.width - 4 * this.border.width)) / max);\n            s = (s > 12) ? 12 : s;\n        }\n        return s;\n    };\n    return PdfListBoxField;\n}(PdfListField));\nexport { PdfListBoxField };\n/**\n * `PdfSignatureField` class represents the signature field objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0);\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new signature field\n * let field: PdfSignatureField = new PdfSignatureField(page, 'Signature', {x: 10, y: 10, width: 100, height: 50});\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSignatureField = /** @class */ (function (_super) {\n    __extends(PdfSignatureField, _super);\n    function PdfSignatureField(page, name, bounds) {\n        var _this = _super.call(this) || this;\n        _this._isSigned = false;\n        if (page && name && bounds) {\n            _this._initialize(page, name, bounds);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfSignatureField.prototype, \"isSigned\", {\n        /**\n         * Gets the flag to indicate whether the field is signed or not.\n         *\n         * @returns {boolean} Returns true if the field is signed; otherwise, false.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the loaded signature field\n         * let field: PdfSignatureField = document.form.fieldAt(0) as PdfSignatureField;\n         * // Get the signed status of the field\n         * let isSigned: boolean = field.isSigned;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._isSigned) {\n                this._checkSigned();\n            }\n            return this._isSigned;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSignatureField.prototype, \"backColor\", {\n        /**\n         * Gets the background color of the field.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the background color of the field.\n         * let backColor: number[] = field.backColor;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor(true);\n        },\n        /**\n         * Sets the background color of the field.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the signature field at index 0\n         * let field1: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field.\n         * field1.backColor = [255, 0, 0];\n         * // Access the signature field at index 1\n         * let field2: PdfField = document.form.fieldAt(1);\n         * // Sets the background color of the field to transparent.\n         * field2.backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSignatureField._load = function (form, dictionary, crossReference, reference) {\n        var field = new PdfSignatureField();\n        field._isLoaded = true;\n        field._form = form;\n        field._dictionary = dictionary;\n        field._crossReference = crossReference;\n        field._ref = reference;\n        if (field._dictionary.has('Kids')) {\n            field._kids = field._dictionary.get('Kids');\n        }\n        field._defaultIndex = 0;\n        field._parsedItems = new Map();\n        return field;\n    };\n    PdfSignatureField.prototype._initialize = function (page, name, bounds) {\n        this._crossReference = page._crossReference;\n        this._page = page;\n        this._name = name;\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('FT', _PdfName.get('Sig'));\n        this._dictionary.update('T', name);\n        this._defaultIndex = 0;\n        this._initializeFont(this._defaultFont);\n        this._createItem(bounds);\n    };\n    PdfSignatureField.prototype._createItem = function (bounds) {\n        var widget = new PdfWidgetAnnotation();\n        widget._create(this._page, bounds, this);\n        widget._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        widget._mkDictionary.update('BC', [0, 0, 0]);\n        widget._mkDictionary.update('BG', [1, 1, 1]);\n        widget._dictionary.update('DA', this._fontName + \" 8 Tf 0 0 0 rg\");\n        this._addToKid(widget);\n    };\n    PdfSignatureField.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var needAppearance = this._setAppearance || this._form._setAppearance;\n        if (isFlatten || needAppearance) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary && (needAppearance || (isFlatten && !item._dictionary.has('AP')))) {\n                        var template = this._createAppearance(item, isFlatten);\n                        this._addAppearance(item._dictionary, template, 'N');\n                    }\n                }\n            }\n        }\n        if (isFlatten) {\n            var count = this._kidsCount;\n            if (count > 0) {\n                var firstItemTemplate = void 0;\n                for (var i = 0; i < count; i++) {\n                    var item = this.itemAt(i);\n                    if (item && item._dictionary) {\n                        var page = item._getPage();\n                        if (page) {\n                            if (!firstItemTemplate && i === 0) {\n                                firstItemTemplate = this._getItemTemplate(item._dictionary);\n                            }\n                            this._flattenSignature(item._dictionary, page, item.bounds, firstItemTemplate);\n                        }\n                    }\n                }\n            }\n            else {\n                this._flattenSignature(this._dictionary, this.page, this.bounds);\n            }\n        }\n    };\n    PdfSignatureField.prototype._createAppearance = function (widget, isFlatten) {\n        var bounds = widget.bounds;\n        var template = new PdfTemplate([0, 0, bounds.width, bounds.height], this._crossReference);\n        _setMatrix(template, null);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        parameter.bounds = [0, 0, bounds.width, bounds.height];\n        var backcolor = widget.backColor;\n        if (isFlatten && backcolor) {\n            parameter.backBrush = new PdfBrush(backcolor);\n        }\n        parameter.foreBrush = new PdfBrush(widget.color);\n        var border = widget.border;\n        if (widget.borderColor) {\n            parameter.borderPen = new PdfPen(widget.borderColor, border.width);\n        }\n        parameter.borderWidth = border.width;\n        parameter.borderStyle = border.style;\n        if (backcolor) {\n            var shadowColor = [backcolor[0] - 64, backcolor[1] - 64, backcolor[2] - 64];\n            var color = [shadowColor[0] >= 0 ? shadowColor[0] : 0,\n                shadowColor[1] >= 0 ? shadowColor[1] : 0,\n                shadowColor[2] >= 0 ? shadowColor[2] : 0];\n            parameter.shadowBrush = new PdfBrush(color);\n        }\n        parameter.rotationAngle = widget.rotate;\n        graphics.save();\n        graphics._initializeCoordinates();\n        this._drawRectangularControl(graphics, parameter);\n        graphics.restore();\n        return template;\n    };\n    PdfSignatureField.prototype._flattenSignature = function (dictionary, page, bounds, signatureTemplate) {\n        var template;\n        if (dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference && appearanceStream) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    if (signatureTemplate) {\n                        template = signatureTemplate;\n                    }\n                    else {\n                        template = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (template && page) {\n                        var graphics = page.graphics;\n                        var state = graphics.save();\n                        if (this.isSigned) {\n                            template._isSignature = true;\n                        }\n                        if (page.rotation !== PdfRotationAngle.angle0) {\n                            graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n                        }\n                        else {\n                            graphics.drawTemplate(template, bounds);\n                        }\n                        graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else if (signatureTemplate && page) {\n            template = signatureTemplate;\n            var graphics = page.graphics;\n            var state = graphics.save();\n            if (page.rotation !== PdfRotationAngle.angle0) {\n                graphics.drawTemplate(template, this._calculateTemplateBounds(bounds, page, template, graphics));\n            }\n            else {\n                graphics.drawTemplate(template, bounds);\n            }\n            graphics.restore(state);\n        }\n    };\n    PdfSignatureField.prototype._calculateTemplateBounds = function (bounds, page, template, graphics) {\n        var x = bounds.x;\n        var y = bounds.y;\n        if (page) {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                x = bounds.x;\n                y = -(page._size[1] - bounds.y - bounds.height);\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                x = -(page._size[0] - (bounds.x + template._size[0]));\n                y = -(page._size[1] - bounds.y - template._size[1]);\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                x = -(page._size[0] - bounds.x - bounds.width);\n                y = bounds.y;\n            }\n        }\n        return { x: x, y: y, width: bounds.width, height: bounds.height };\n    };\n    PdfSignatureField.prototype._obtainGraphicsRotation = function (matrix) {\n        var angle = Math.round(Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]) * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfSignatureField.prototype._getItemTemplate = function (dictionary) {\n        var template;\n        if (dictionary && dictionary.has('AP')) {\n            var appearanceDictionary = dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var appearanceStream = appearanceDictionary.get('N');\n                var reference = appearanceDictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                if (appearanceStream) {\n                    template = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return template;\n    };\n    PdfSignatureField.prototype._checkSigned = function () {\n        if (this._dictionary && this._dictionary.has('V')) {\n            var dictionary = this._dictionary.get('V');\n            if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.size > 0) {\n                this._isSigned = true;\n            }\n        }\n    };\n    return PdfSignatureField;\n}(PdfField));\nexport { PdfSignatureField };\nvar _PdfDefaultAppearance = /** @class */ (function () {\n    function _PdfDefaultAppearance(da) {\n        var color;\n        var fontName = '';\n        var fontSize = 0;\n        if (da && typeof da === 'string' && da !== '') {\n            var sliced = da.split(' ');\n            for (var i = 0; i < sliced.length; i++) {\n                switch (sliced[Number.parseInt(i.toString(), 10)]) {\n                    case 'g':\n                        color = [Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'rg':\n                        color = [Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]), Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'k':\n                        color = [Number.parseFloat(sliced[i - 4]), Number.parseFloat(sliced[i - 3]), Number.parseFloat(sliced[i - 2]),\n                            Number.parseFloat(sliced[i - 1])];\n                        break;\n                    case 'Tf':\n                        fontSize = Number.parseFloat(sliced[i - 1]);\n                        fontName = sliced[i - 2].substring(1);\n                        if (fontName.includes('#2C')) {\n                            fontName.replace('#2C', ',');\n                        }\n                        break;\n                }\n            }\n        }\n        this.fontName = fontName;\n        this.fontSize = fontSize;\n        this.color = (typeof color !== 'undefined') ? _parseColor(color) : [0, 0, 0];\n    }\n    _PdfDefaultAppearance.prototype.toString = function () {\n        var color = [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n            Number.parseFloat((this.color[1] / 255).toFixed(3)),\n            Number.parseFloat((this.color[2] / 255).toFixed(3))];\n        return '/' +\n            this.fontName +\n            ' ' +\n            this.fontSize +\n            ' Tf ' +\n            color[0].toString() +\n            ' ' +\n            color[1].toString() +\n            ' ' +\n            color[2].toString() +\n            ' rg';\n    };\n    return _PdfDefaultAppearance;\n}());\nexport { _PdfDefaultAppearance };\n","import { _PdfDictionary } from './../pdf-primitives';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _isNullOrUndefined } from '../utils';\n/**\n * `PdfAppearance` class represents the appearance of the annotation.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n * // Get the appearance of the annotation\n * let appearance: PdfAppearance = annotation.appearance;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * // Draw the image as the custom appearance for the annotation\n * appearance.normal.graphics.drawImage(image, 0, 0, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAppearance = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfAppearance` class.\n     *\n     * @param {PdfAnnotation} annot - The annotation.\n     * @param {number[]} bounds - The bounds.\n     * @private\n     */\n    function PdfAppearance(annot, bounds) {\n        this._dictionary = new _PdfDictionary();\n        if (_isNullOrUndefined(bounds)) {\n            this._bounds = bounds;\n        }\n        else {\n            this._bounds = [];\n        }\n        this._annotations = annot;\n        this._crossReference = annot._crossReference;\n        this._initialize();\n    }\n    Object.defineProperty(PdfAppearance.prototype, \"normal\", {\n        /**\n         * Get the normal appearance of the annotation.\n         *\n         * @returns {PdfTemplate} Returns the normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._templateNormal && this._dictionary && this._dictionary.has('AP')) {\n                this._templateNormal = this._dictionary.get('N');\n            }\n            return this._templateNormal;\n        },\n        /**\n         * Set the normal appearance of the annotation.\n         *\n         * @param {PdfTemplate} value The normal appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Add a new rubber stamp annotation to the page\n         * const annotation2: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 200, 100, 50);\n         * // Set the normal appearance of the annotation\n         * annotation2.appearance.normal = annotation.appearance.normal;\n         * // Add annotation to the page\n         * page.annotations.add(annotation2);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._templateNormal = value;\n                this._dictionary.set('N', this._templateNormal);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAppearance.prototype._initialize = function () {\n        this.normal = new PdfTemplate(this._bounds, this._crossReference);\n    };\n    return PdfAppearance;\n}());\nexport { PdfAppearance };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestination } from './../pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfFormFieldVisibility, _PdfCheckFieldState, PdfAnnotationFlag, PdfBorderStyle, PdfLineCaptionType, PdfLineEndingStyle, PdfLineIntent, PdfRotationAngle, PdfTextAlignment, PdfBorderEffectStyle, PdfMeasurementUnit, _PdfGraphicsUnit, PdfCircleMeasurementType, PdfRubberStampAnnotationIcon, PdfCheckBoxStyle, PdfTextMarkupAnnotationType, PdfPopupIcon, PdfAnnotationState, PdfAnnotationStateModel, PdfAttachmentIcon, PdfAnnotationIntent, _PdfAnnotationType, PdfDestinationMode, PdfBlendMode, PdfDashStyle, PdfLineCap, _PdfColorSpace } from './../enumerator';\nimport { _checkField, _removeDuplicateReference, _updateVisibility, _getPageIndex, _checkComment, _checkReview, _mapAnnotationStateModel, _mapAnnotationState, _decode, _setMatrix, _convertToColor, _findPage, _getItemValue, _areNotEqual, _calculateBounds, _parseColor, _mapHighlightMode, _reverseMapHighlightMode, _getUpdatedBounds, _mapBorderStyle, _mapLineEndingStyle, _reverseMapEndingStyle, _toRectangle, _mapBorderEffectStyle, _getStateTemplate, _mapMeasurementUnit, _mapGraphicsUnit, _stringToStyle, _styleToString, _mapMarkupAnnotationType, _reverseMarkupAnnotationType, _reverseMapAnnotationState, _reverseMapAnnotationStateModel, _mapPopupIcon, _mapRubberStampIcon, _mapAttachmentIcon, _mapAnnotationIntent, _reverseMapPdfFontStyle, _fromRectangle, _getNewGuidString, _getFontStyle, _mapFont, _checkInkPoints, _updateBounds, _stringToBytes, _isNullOrUndefined } from './../utils';\nimport { PdfField, _PdfDefaultAppearance, PdfListBoxField, PdfComboBoxField } from './../form/field';\nimport { PdfTemplate } from './../graphics/pdf-template';\nimport { _TextRenderingMode, PdfBrush, PdfPen, _PdfTransformationMatrix, _PdfUnitConvertor } from './../graphics/pdf-graphics';\nimport { PdfPath } from './../graphics/pdf-path';\nimport { PdfFontFamily, PdfStandardFont, PdfFont, PdfFontStyle, PdfTrueTypeFont, PdfCjkStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './../fonts/pdf-string-format';\nimport { _PdfStream } from './../base-stream';\nimport { PdfAppearance } from './pdf-appearance';\nimport { PdfPopupAnnotationCollection } from './annotation-collection';\n/**\n * Represents the base class for annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfAnnotation = page.annotations.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation() {\n        this._isImported = false;\n        this._isLoaded = false;\n        this._setAppearance = false;\n        this._isExport = false;\n        this._opacity = 1;\n        this._isAllRotation = true;\n        this._flatten = false;\n        this._hasData = false;\n        this._popUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5);\n        this._authorBoldFont = new PdfStandardFont(PdfFontFamily.helvetica, 10.5, PdfFontStyle.bold);\n        this._lineCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n        this._circleCaptionFont = new PdfStandardFont(PdfFontFamily.helvetica, 8, PdfFontStyle.regular);\n        this._isTransparentColor = false;\n        this._isRotated = false;\n        this._isChanged = false;\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"author\", {\n        /**\n         * Gets the author of the annotation.\n         *\n         * @returns {string} Author.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the author of the annotation.\n         * let author: string = annotation.author;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._author === 'undefined' && this._dictionary.has('Author')) {\n                var author = this._dictionary.get('Author');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            if (typeof this._author === 'undefined' && this._dictionary.has('T')) {\n                var author = this._dictionary.get('T');\n                if (author) {\n                    this._author = author;\n                }\n            }\n            return this._author;\n        },\n        /**\n         * Sets the author of the annotation.\n         *\n         * @param {string} value Author.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the author of the annotation.\n         * annotation.author = ‘Syncfusion’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded && typeof value === 'string' && value !== this.author) {\n                var hasKey = false;\n                if (this._dictionary && this._dictionary.has('T')) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (this._dictionary && this._dictionary.has('Author')) {\n                    this._dictionary.update('Author', value);\n                    this._author = value;\n                    hasKey = true;\n                }\n                if (!hasKey) {\n                    this._dictionary.update('T', value);\n                    this._author = value;\n                }\n            }\n            if (!this._isLoaded && typeof value === 'string') {\n                this._dictionary.update('T', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"border\", {\n        /**\n         * Gets the border of the annotation.\n         *\n         * @returns {PdfAnnotationBorder} Annotation border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the border of the annotation.\n         * let border: PdfAnnotationBorder = annotation.border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._border === 'undefined') {\n                var value = new PdfAnnotationBorder();\n                value._dictionary = this._dictionary;\n                if (this._dictionary && this._dictionary.has('Border')) {\n                    var border = this._dictionary.getArray('Border');\n                    if (border && border.length >= 3) {\n                        value._hRadius = border[0];\n                        value._vRadius = border[1];\n                        value._width = border[2];\n                    }\n                }\n                if (this._dictionary && this._dictionary.has('BS')) {\n                    var border = this._dictionary.get('BS');\n                    if (border) {\n                        if (border.has('W')) {\n                            var width = border.get('W');\n                            if (typeof width !== 'undefined' && !Number.isNaN(width)) {\n                                value._width = width;\n                            }\n                        }\n                        if (border.has('S')) {\n                            var style = border.get('S');\n                            if (style) {\n                                switch (style.name) {\n                                    case 'D':\n                                        value._style = PdfBorderStyle.dashed;\n                                        break;\n                                    case 'B':\n                                        value._style = PdfBorderStyle.beveled;\n                                        break;\n                                    case 'I':\n                                        value._style = PdfBorderStyle.inset;\n                                        break;\n                                    case 'U':\n                                        value._style = PdfBorderStyle.underline;\n                                        break;\n                                    default:\n                                        value._style = PdfBorderStyle.solid;\n                                        break;\n                                }\n                            }\n                        }\n                        if (border.has('D')) {\n                            var dash = border.getArray('D');\n                            if (dash) {\n                                value._dash = dash;\n                            }\n                        }\n                    }\n                }\n                this._border = value;\n            }\n            return this._border;\n        },\n        /**\n         * Sets the border of the annotation.\n         *\n         * @param {PdfAnnotationBorder} value Border.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF annotation\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.border;\n            var width;\n            if (!this._isLoaded || (typeof value.width !== 'undefined' && current.width !== value.width)) {\n                width = value.width;\n            }\n            var hRadius;\n            if (!this._isLoaded || (typeof value.hRadius !== 'undefined' && current.hRadius !== value.hRadius)) {\n                hRadius = value.hRadius;\n            }\n            var vRadius;\n            if (!this._isLoaded || (typeof value.vRadius !== 'undefined' && current.vRadius !== value.vRadius)) {\n                vRadius = value.vRadius;\n            }\n            var style;\n            if (!this._isLoaded || (typeof value.style !== 'undefined' && current.style !== value.style)) {\n                style = value.style;\n            }\n            var dash;\n            if (typeof value.dash !== 'undefined' && current.dash !== value.dash) {\n                dash = value.dash;\n            }\n            if (!this._isWidget && this._dictionary && this._dictionary.has('Border') || (width || vRadius || hRadius)) {\n                this._border._hRadius = typeof hRadius !== 'undefined' ? hRadius : current.hRadius;\n                this._border._vRadius = typeof vRadius !== 'undefined' ? vRadius : current.vRadius;\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._dictionary.update('Border', [this._border.hRadius, this._border.vRadius, this._border.width]);\n            }\n            if (this._dictionary !== null && this._dictionary && this._dictionary.has('BS') || (width || style || dash)) {\n                this._border._width = typeof width !== 'undefined' ? width : current.width;\n                this._border._style = typeof style !== 'undefined' ? style : current.style;\n                this._border._dash = typeof dash !== 'undefined' ? dash : current.dash;\n                var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                bs.update('Type', _PdfName.get('Border'));\n                bs.update('W', this._border.width);\n                bs.update('S', _mapBorderStyle(this._border.style));\n                if (typeof this._border.dash !== 'undefined') {\n                    bs.update('D', this._border.dash);\n                }\n                this._dictionary.update('BS', bs);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flags\", {\n        /**\n         * Gets the flags of the annotation.\n         *\n         * @returns {PdfAnnotationFlag} Annotation flag.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flags of the annotation.\n         * let flag: PdfAnnotationFlag = annotation.flags;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotFlags === 'undefined') {\n                this._annotFlags = PdfAnnotationFlag.default;\n                if (this._dictionary && this._dictionary.has('F')) {\n                    this._annotFlags = this._dictionary.get('F');\n                }\n            }\n            return this._annotFlags;\n        },\n        /**\n         * Sets the flags of the annotation.\n         *\n         * @param {PdfAnnotationFlag} value flag value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flags of the annotation.\n         * annotation.flags = PdfAnnotationFlag.print;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this._annotFlags) {\n                this._annotFlags = value;\n                this._dictionary.update('F', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._dictionary.has('C')) {\n                this._color = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the color of the annotation.\n         * annotation.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * Gets the inner color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the inner color of the annotation.\n         * let innerColor: number[] = annotation.innerColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._innerColor === 'undefined' && this._dictionary.has('IC')) {\n                this._innerColor = _parseColor(this._dictionary.getArray('IC'));\n            }\n            return this._innerColor;\n        },\n        /**\n         * Sets the inner color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the inner color of the annotation.\n         * annotation.innerColor = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.innerColor;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._innerColor = value;\n                    this._dictionary.update('IC', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                        Number.parseFloat((value[1] / 255).toFixed(7)),\n                        Number.parseFloat((value[2] / 255).toFixed(7))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"creationDate\", {\n        /**\n         * Gets the creation date of the annotation.\n         *\n         * @returns {Date} Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the creation date of the annotation.\n         * let creationDate: Date = annotation.creationDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._creationDate === 'undefined' || this._creationDate === null) && this._dictionary.has('CreationDate')) {\n                var value = this._dictionary.get('CreationDate'); // eslint-disable-line\n                if (value !== null && typeof value === 'string') {\n                    this._creationDate = this._stringToDate(value);\n                }\n            }\n            return this._creationDate;\n        },\n        /**\n         * Sets the creation date of the annotation.\n         *\n         * @param {Date} value Creation date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the creation date of the annotation.\n         * annotation.creationDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._creationDate = value;\n            this._dictionary.update('CreationDate', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"modifiedDate\", {\n        /**\n         * Gets the modification date of the annotation.\n         *\n         * @returns {Date} Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the modified date of the annotation.\n         * let modifiedDate: Date = annotation.modifiedDate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if ((typeof this._modifiedDate === 'undefined' || this._modifiedDate === null)) {\n                var value = void 0; // eslint-disable-line\n                if (this._dictionary && this._dictionary.has('ModDate')) {\n                    value = this._dictionary.get('ModDate');\n                }\n                else if (this._dictionary.has('M')) {\n                    value = this._dictionary.get('M');\n                }\n                if (value !== null && typeof value === 'string') {\n                    this._modifiedDate = this._stringToDate(value);\n                }\n            }\n            return this._modifiedDate;\n        },\n        /**\n         * Sets the modification date of the annotation.\n         *\n         * @param {Date} value Modified date.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Set the modified date of the annotation.\n         * annotation.modifiedDate = new Date();\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._modifiedDate = value;\n            this._dictionary.update('M', this._dateToString(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._isBounds = true;\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                            this._isChanged = true;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"caption\", {\n        /**\n         * Gets the caption of the annotation.\n         *\n         * @returns {PdfAnnotationCaption} Annotation caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption of the annotation.\n         * let caption: PdfAnnotationCaption = annotation.caption;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._caption === 'undefined') {\n                var value = new PdfAnnotationCaption();\n                value._dictionary = this._dictionary;\n                if (this._dictionary && this._dictionary.has('Cap')) {\n                    value._cap = this._dictionary.get('Cap');\n                }\n                if (this._dictionary && this._dictionary.has('CP')) {\n                    var capType = this._dictionary.get('CP');\n                    if (capType) {\n                        value._type = capType.name === 'Top' ? PdfLineCaptionType.top : PdfLineCaptionType.inline;\n                    }\n                }\n                if (this._dictionary && this._dictionary.has('CO')) {\n                    value._offset = this._dictionary.getArray('CO');\n                }\n                this._caption = value;\n            }\n            return this._caption;\n        },\n        /**\n         * Sets the caption of the annotation.\n         *\n         * @param {PdfAnnotationCaption} value Annottion caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Create and set annotation caption values\n         * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var current = this.caption;\n            if (value) {\n                if (!this._isLoaded || value.cap !== current.cap) {\n                    this._caption.cap = value.cap;\n                }\n                if (!this._isLoaded || value.type !== current.type) {\n                    this._caption.type = value.type;\n                }\n                if (!this._isLoaded || value.offset !== current.offset) {\n                    this._caption.offset = value.offset;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"opacity\", {\n        /**\n         * Gets the opacity of the annotation.\n         *\n         * @returns {number} Opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the opacity of the annotation.\n         * let opacity: number = annotation.opacity;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary && this._dictionary.has('CA')) {\n                var opacity = this._dictionary.get('CA');\n                if (typeof opacity !== 'undefined') {\n                    this._opacity = opacity;\n                }\n            }\n            return this._opacity;\n        },\n        /**\n         * Sets the opacity of the annotation.\n         *\n         * @param {number} value opacity in between 0 t0 1.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the opacity of the annotation.\n         * annotation.opacity = 0.5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && !Number.isNaN(value)) {\n                if (value >= 0 && value <= 1) {\n                    this._dictionary.update('CA', value);\n                    this._opacity = value;\n                }\n                else if (value < 0) {\n                    this._dictionary.update('CA', 0);\n                }\n                else {\n                    this._dictionary.update('CA', 1);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"subject\", {\n        /**\n         * Gets the subject of the annotation.\n         *\n         * @returns {string} Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the subject of the annotation.\n         * let subject: string = annotation.subject;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._subject === 'undefined') {\n                this._subject = this._dictionary.get('Subject', 'Subj');\n            }\n            return this._subject;\n        },\n        /**\n         * Sets the subject of the annotation.\n         *\n         * @param {string} value Subject.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the subject of the annotation.\n         * annotation.subject = 'Line Annotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' && this.subject !== value) {\n                this._dictionary.update('Subj', value);\n                this._subject = value;\n                if (this._dictionary.has('Subject')) {\n                    this._dictionary.update('Subject', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"name\", {\n        /**\n         * Gets the name of the annotation.\n         *\n         * @returns {string} Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the name of the annotation.\n         * let name: string = annotation.name;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._name === 'undefined' && this._dictionary.has('NM')) {\n                this._name = this._dictionary.get('NM');\n            }\n            return this._name;\n        },\n        /**\n         * Sets the name of the annotation.\n         *\n         * @param {string} value Name.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the name of the annotation.\n         * annotation.name = 'LineAnnotation';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('NM', value);\n                this._name = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the text of the annotation.\n         * let text: string = annotation.text;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' && this._dictionary.has('Contents')) {\n                this._text = this._dictionary.get('Contents');\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the text of the annotation.\n         * annotation.text = ‘LineAnnotation’;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._text = this._dictionary.get('Contents');\n                if (value !== this._text) {\n                    this._dictionary.update('Contents', value);\n                    this._text = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotationAngle\", {\n        /**\n         * Gets the rotation of the annotation.\n         *\n         * @returns {PdfRotationAngle} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotationAngle: PdfRotationAngle = annotation.rotationAngle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotate === 'undefined' && this._dictionary && this._dictionary.has('Rotate')) {\n                this._rotate = (this._dictionary.get('Rotate') / 90);\n            }\n            if (this._rotate === null || typeof this._rotate === 'undefined') {\n                this._rotate = PdfRotationAngle.angle0;\n            }\n            return this._rotate;\n        },\n        /**\n         * Sets the rotation of the annotation.\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotationAngle = PdfRotationAngle.angle180;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var prevRotate = this.rotationAngle;\n            if (typeof value !== 'undefined' && typeof prevRotate !== 'undefined') {\n                value = ((value + prevRotate) % 4);\n            }\n            this._dictionary.update('Rotate', value * 90);\n            this._isRotated = true;\n            this._rotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation (Read only).\n         *\n         * @returns {number} Rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * //Get the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = this._getRotationAngle();\n            if (angle < 0) {\n                angle = 360 + angle;\n            }\n            if (angle >= 360) {\n                angle = 360 - angle;\n            }\n            return angle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flattenPopups\", {\n        /**\n         * Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         *\n         * @returns {boolean} Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation's popup have been flattened or not.\n         * let flattenPopups: boolean = annotation.flattenPopups;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isFlattenPopups;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         *\n         * @param {boolean} value Flatten Popup.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation’s popup have been flattened or not.\n         * annotation.flattenPopups = false;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._isFlattenPopups = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @returns {boolean} Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether the annotation have been flattened or not.\n         * let flatten: boolean = annotation.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag indicating whether the annotation have been flattened or not.\n         *\n         * @param {boolean} value Flatten.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether the annotation have been flattened or not.\n         * annotation.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_hasFlags\", {\n        get: function () {\n            return this._dictionary.has('F');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"_degreeToRadian\", {\n        get: function () {\n            if (typeof this._ratio === 'undefined') {\n                this._ratio = Math.PI / 180;\n            }\n            return this._ratio;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"layer\", {\n        /**\n         * Gets the `PdfLayer` of the annotation.\n         *\n         * @returns {PdfLayer} PDF layer to the annotation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the first annotation on the page\n         * let annotation: PdfAnnotation = page.annotations.at(0);\n         * // Get the layer of the annotation\n         * let layer: PdfLayer = annotation.layer;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._layer) {\n                this._layer = this._getDocumentLayer();\n            }\n            return this._layer;\n        },\n        /**\n         * Set the `PdfLayer` to the annotation.\n         *\n         * @param {PdfLayer} value PDF layer to the annotation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Add a new layer to the document with the name 'Layer1'\n         * let layer: PdfLayer = layers.add('Layer1');\n         * // Access the first annotation on the page\n         * let annotation: PdfAnnotation = page.annotations.at(0);\n         * // Assign the layer to the annotation\n         * annotation.layer = layer;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._layer) {\n                this._layer = value;\n                if (this._layer) {\n                    this._dictionary.update('OC', this._layer._referenceHolder);\n                }\n                else {\n                    delete this._dictionary._map['OC'];\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the boolean flag to create a new appearance stream for annotations.\n     *\n     * @param {boolean} value Set appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set the boolean flag to create a new appearance stream for annotations.\n     * document.getPage(0).annotations.at(0).setAppearance(true);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setAppearance = function (value) {\n        this._setAppearance = value;\n        if (value) {\n            this._dictionary._updated = true;\n        }\n    };\n    /**\n     * Gets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @returns {string[]} Values associated with the key.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Gets the values associated with the key 'Author'.\n     * let values: string[] = document.getPage(0).annotations.at(0).getValues('Author');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.getValues = function (name) {\n        var values = [];\n        if (this._dictionary && this._dictionary.has(name)) {\n            var value = this._dictionary.get(name); // eslint-disable-line\n            if (Array.isArray(value)) {\n                value = this._dictionary.getArray(name);\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    if (element instanceof _PdfName) {\n                        values.push(element.name);\n                    }\n                    else if (typeof element === 'string') {\n                        values.push(element);\n                    }\n                    else if (typeof element === 'number') {\n                        values.push(element.toString());\n                    }\n                }\n            }\n            else if (value instanceof _PdfName) {\n                values.push(value.name);\n            }\n            else if (typeof value === 'string') {\n                values.push(value);\n            }\n            else {\n                throw new Error('PdfException: ' + name + ' is not found');\n            }\n        }\n        else {\n            throw new Error('PdfException: ' + name + ' is not found');\n        }\n        return values;\n    };\n    /**\n     * Sets the values associated with the specified key.\n     *\n     * @param {string} name Key.\n     * @param {string} value Value associated with the key..\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = document.getPage(0).annotations.at(0);\n     * // Set Unknown state and model\n     * annotation.setValues('State', 'StateModel');\n     * annotation.setValues('StateModel', 'CustomState');\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotation.prototype.setValues = function (name, value) {\n        if (name && name !== '' && value && value !== '') {\n            this._dictionary.update(name, value);\n        }\n    };\n    //Implementation\n    PdfAnnotation.prototype._initialize = function (page, dictionary) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (!this._isLoaded) {\n            this._dictionary.set('P', this._page._ref);\n            this._dictionary.assignXref(this._crossReference);\n        }\n    };\n    PdfAnnotation.prototype._getRotationAngle = function () {\n        var angle = 0;\n        if (this._dictionary) {\n            if (this._dictionary.has('Rotate')) {\n                angle = this._dictionary.get('Rotate');\n            }\n            else if (this._dictionary.has('Rotation')) {\n                angle = this._dictionary.get('Rotation');\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getMediaOrCropBox = function (page) {\n        var cropOrMediaBox;\n        if (page && page._pageDictionary && page._pageDictionary.has('MediaBox')) {\n            cropOrMediaBox = page._pageDictionary.get('MediaBox');\n        }\n        else if (page && page._pageDictionary && page._pageDictionary.has('CropBox')) {\n            cropOrMediaBox = page._pageDictionary.get('CropBox');\n        }\n        return cropOrMediaBox;\n    };\n    PdfAnnotation.prototype._getBoundsValue = function (linePoints) {\n        var count = 0;\n        if (_isNullOrUndefined(linePoints)) {\n            count = linePoints.length;\n        }\n        var x = [];\n        var y = [];\n        if (count > 0) {\n            var points = [];\n            for (var i = 0; i < linePoints.length; i++) {\n                var value = linePoints[Number.parseInt(i.toString(), 10)];\n                points.push(value);\n            }\n            var x1 = 0;\n            var y1 = 0;\n            for (var i = 0; i < points.length; i++) {\n                if (i % 2 === 0) {\n                    x[Number.parseInt(x1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    x1++;\n                }\n                else {\n                    y[Number.parseInt(y1.toString(), 10)] = points[Number.parseInt(i.toString(), 10)];\n                    y1++;\n                }\n            }\n        }\n        x.sort(function (a, b) { return a > b ? 1 : -1; });\n        y.sort(function (a, b) { return a > b ? 1 : -1; });\n        return { x: x[0], y: y[0], width: x[x.length - 1] - x[0], height: y[y.length - 1] - y[0] };\n    };\n    PdfAnnotation.prototype._validateTemplateMatrix = function (dictionary, template) {\n        var isRotatedMatrix = false;\n        var isValidMatrix = true;\n        if (template === null || typeof template === 'undefined') {\n            if (dictionary && dictionary.has('Matrix')) {\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && matrix.length > 3) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            isRotatedMatrix = true;\n                            var locationX = 0;\n                            var locationY = 0;\n                            var templateX = 0;\n                            var templateY = 0;\n                            if (matrix.length > 4) {\n                                templateX = -matrix[4];\n                                if (matrix.length > 5) {\n                                    templateY = -matrix[5];\n                                }\n                            }\n                            var annotationBounds = void 0;\n                            if (this._dictionary && this._dictionary.has('Rect')) {\n                                annotationBounds = this._dictionary.getArray('Rect');\n                                if (annotationBounds && annotationBounds.length > 1) {\n                                    locationX = annotationBounds[0];\n                                    locationY = annotationBounds[1];\n                                }\n                            }\n                            if (!(locationX === templateX && locationY === templateY) && templateX === 0 && templateY === 0) {\n                                this._locationDisplaced = true;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                isRotatedMatrix = true;\n            }\n            return isRotatedMatrix;\n        }\n        else {\n            var point = this.bounds;\n            if (dictionary && dictionary.has('Matrix')) {\n                var box = dictionary.getArray('BBox');\n                var matrix = dictionary.getArray('Matrix');\n                if (matrix && box && matrix.length > 3 && box.length > 2) {\n                    if (typeof matrix[0] !== 'undefined' &&\n                        typeof matrix[1] !== 'undefined' &&\n                        typeof matrix[2] !== 'undefined' &&\n                        typeof matrix[3] !== 'undefined') {\n                        if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                            if (typeof box[0] !== 'undefined' &&\n                                typeof box[1] !== 'undefined' &&\n                                typeof box[2] !== 'undefined' &&\n                                typeof box[3] !== 'undefined') {\n                                if (this._page && box[0] !== -(matrix[4]) && box[1] !== -(matrix[5]) ||\n                                    (box[0] === 0 && -matrix[4] === 0)) {\n                                    var graphics = this._page.graphics;\n                                    var state = graphics.save();\n                                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                        graphics.setTransparency(this._opacity);\n                                    }\n                                    point.x -= box[0];\n                                    point.y += box[1];\n                                    graphics.drawTemplate(template, point);\n                                    graphics.restore(state);\n                                    this._page.annotations.remove(this);\n                                    isValidMatrix = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return isValidMatrix;\n        }\n    };\n    PdfAnnotation.prototype._flattenAnnotationTemplate = function (template, isNormalMatrix) {\n        var graphics = this._page.graphics;\n        var currentBounds = this.bounds;\n        if (this instanceof PdfLineAnnotation && this._dictionary && !this._dictionary.has('AP')) {\n            if (this._isLoaded) {\n                currentBounds = this._bounds;\n            }\n            else {\n                if (this instanceof PdfLineAnnotation && !this.measure) {\n                    currentBounds = _toRectangle([this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height]);\n                }\n                else {\n                    if (this._setAppearance && this.flatten && !this.measure) {\n                        currentBounds = this._bounds;\n                    }\n                    else {\n                        currentBounds = _toRectangle([this.bounds.x, this.bounds.y,\n                            this.bounds.width, this.bounds.height]);\n                    }\n                }\n            }\n            if (this._page) {\n                var size = this._page.size;\n                var mBox = this._page.mediaBox;\n                var cropBox = this._page.cropBox;\n                if (cropBox && Array.isArray(cropBox) && cropBox.length === 4 && this._page._pageDictionary.has('CropBox') &&\n                    !this._isLoaded && !this._flatten) {\n                    if ((cropBox[0] !== 0 || cropBox[1] !== 0 || size[0] === cropBox[2] ||\n                        size[1] === cropBox[3]) && (currentBounds.x !== cropBox[0])) {\n                        currentBounds.x -= cropBox[0];\n                        currentBounds.y = cropBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else if (mBox && Array.isArray(mBox) && mBox.length === 4 && this._page._pageDictionary.has('MediaBox') &&\n                    !this._isLoaded && !this._flatten) {\n                    if (mBox[0] > 0 || mBox[1] > 0 || size[0] === mBox[2] || size[1] === mBox[3]) {\n                        currentBounds.x -= mBox[0];\n                        currentBounds.y = mBox[3] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                }\n                else {\n                    if (this instanceof PdfLineAnnotation && !this.measure && !this._isLoaded) {\n                        currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                    }\n                    else {\n                        if (this._setAppearance && this.flatten && !this.measure) {\n                            currentBounds = this.bounds;\n                        }\n                        else if (!this._isLoaded) {\n                            currentBounds.y = size[1] - (currentBounds.y + currentBounds.height);\n                        }\n                    }\n                }\n            }\n            else {\n                currentBounds.y = currentBounds.y + currentBounds.height;\n            }\n        }\n        if (typeof currentBounds !== 'undefined' && currentBounds !== null) {\n            var state = graphics.save();\n            this._page._needInitializeGraphics = true;\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var needScale = true;\n                if (this._dictionary && this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (this.rotate === PdfRotationAngle.angle270 && this._page.rotation === PdfRotationAngle.angle270\n                            && appearanceStream.dictionary.has('Matrix')) {\n                            var matrix = appearanceStream.dictionary.getArray('Matrix');\n                            if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                                needScale = false;\n                            }\n                        }\n                    }\n                    if (!isNormalMatrix && this.rotate !== PdfRotationAngle.angle180 && needScale) {\n                        template._isAnnotationTemplate = true;\n                        template._needScale = true;\n                    }\n                }\n            }\n            if (!isNormalMatrix && this._type !== _PdfAnnotationType.rubberStampAnnotation) {\n                template._isAnnotationTemplate = true;\n                template._needScale = true;\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.setTransparency(this._opacity);\n            }\n            var bounds = this._calculateTemplateBounds(currentBounds, this._page, template, isNormalMatrix, graphics);\n            if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                var size = void 0;\n                var location_1;\n                if (this.rotate === PdfRotationAngle.angle0) {\n                    size = [bounds.width, bounds.height];\n                    location_1 = [bounds.x, bounds.y];\n                }\n                else {\n                    size = template._size;\n                    location_1 = [bounds.x, bounds.y];\n                }\n                var isRotatedMatrix = false;\n                if (this.rotate !== PdfRotationAngle.angle0 && template._content) {\n                    if (template._content.dictionary.has('Matrix')) {\n                        var matrix = template._content.dictionary.getArray('Matrix');\n                        if (matrix && matrix.length === 6 && matrix[4] === 0 && matrix[5] !== 0) {\n                            isRotatedMatrix = true;\n                        }\n                    }\n                }\n                var scaleX = (template._size[0] > 0) ? bounds.width / template._size[0] : 1;\n                var scaleY = (template._size[1] > 0) ? bounds.height / template._size[1] : 1;\n                var needScale = !(Math.trunc(scaleX * 1000) / 1000 === 1 && Math.trunc(scaleY * 1000) / 1000 === 1);\n                if (this.rotate !== PdfRotationAngle.angle0 && isRotatedMatrix) {\n                    if (this.rotate === PdfRotationAngle.angle90) {\n                        if (this._page && this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[0] += (size[0] - size[1]);\n                                location_1[1] += size[0];\n                            }\n                            else {\n                                location_1[0] += size[1];\n                                location_1[1] += (size[0] - size[1]) + (size[0] - size[1]);\n                            }\n                        }\n                        else if (!needScale) {\n                            location_1[0] += size[1];\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle270) {\n                        if (this._page && this._page.rotation === PdfRotationAngle.angle270) {\n                            if (needScale && template._isAnnotationTemplate) {\n                                location_1[1] = bounds.y - bounds.width;\n                            }\n                            else if (needScale) {\n                                location_1[1] += (size[0] - size[1]);\n                            }\n                        }\n                        else {\n                            if (!needScale && !(bounds.x === 0 && bounds.y === 0)) {\n                                location_1[1] += -(size[0]);\n                            }\n                            else {\n                                location_1[1] += -(size[0] - size[1]);\n                            }\n                        }\n                    }\n                    else if (this.rotate === PdfRotationAngle.angle180) {\n                        location_1[0] += size[0];\n                        location_1[1] += -(size[1]);\n                    }\n                }\n            }\n            if (!template._content.dictionary.has('Matrix') && template._content.dictionary.has('BBox')) {\n                var box = template._content.dictionary.getArray('BBox');\n                bounds.x -= box[0];\n                bounds.y += box[1];\n            }\n            if (this instanceof PdfAngleMeasurementAnnotation && !this._isLoaded) {\n                bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            graphics.drawTemplate(template, bounds);\n            graphics.restore(state);\n        }\n        this._page.annotations.remove(this);\n    };\n    PdfAnnotation.prototype._calculateTemplateBounds = function (bounds, page, template, isNormalMatrix, graphics) {\n        var annotationBounds = bounds;\n        var x = bounds.x;\n        var y = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        if (!isNormalMatrix) {\n            var rect = this._dictionary.getArray('Rect');\n            if (rect) {\n                annotationBounds = _toRectangle(rect);\n            }\n        }\n        if (typeof page !== 'undefined') {\n            var graphicsRotation = this._obtainGraphicsRotation(graphics._matrix);\n            if (graphicsRotation === 90) {\n                graphics.translateTransform(template._size[1], 0);\n                graphics.rotateTransform(90);\n                if (isNormalMatrix || (typeof this._rotate !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = bounds.x;\n                    if (!this._locationDisplaced) {\n                        y = -(page.size[1] - bounds.y - bounds.height);\n                    }\n                    else if (page._origin && page._o[1] !== 0) {\n                        y = bounds.y + bounds.height;\n                    }\n                    else {\n                        y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.height - template._size[1]));\n                    }\n                }\n                else {\n                    x = bounds.x;\n                    y = -(page.size[1] - (bounds.height + bounds.y) + (bounds.width - template._size[1]));\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 180) {\n                graphics.translateTransform(template._size[0], template._size[1]);\n                graphics.rotateTransform(180);\n                if (isNormalMatrix) {\n                    x = -(page.size[0] - (bounds.x + bounds.width));\n                    y = -(page.size[1] - bounds.y - bounds.height);\n                }\n                else {\n                    x = -(page.size[0] - (bounds.x + template._size[0]));\n                    y = -(page.size[1] - bounds.y - template._size[1]);\n                    if (typeof this.rotationAngle !== 'undefined' &&\n                        (this._rotate === PdfRotationAngle.angle90 ||\n                            this._rotate === PdfRotationAngle.angle270)) {\n                        y = (-(page.size[1] - bounds.y - template._size[1]) - (bounds.width - bounds.height));\n                        width = bounds.height;\n                        height = bounds.width;\n                    }\n                }\n            }\n            else if (graphicsRotation === 270) {\n                graphics.translateTransform(0, template._size[0]);\n                graphics.rotateTransform(270);\n                if (isNormalMatrix || (typeof this.rotationAngle !== 'undefined' && this._rotate === PdfRotationAngle.angle180)) {\n                    x = -(page.size[0] - bounds.x - bounds.width);\n                    y = bounds.y;\n                }\n                else {\n                    x = -(page.size[0] - annotationBounds.x - template._size[0]);\n                    var matrix = template._content.dictionary.getArray('Matrix');\n                    var box = template._content.dictionary.getArray('BBox');\n                    if (matrix && box && matrix[5] !== box[2]) {\n                        y = bounds.y - (bounds.height - bounds.width);\n                    }\n                    else {\n                        y = (bounds.y + bounds.height) - bounds.width;\n                    }\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n            else if (graphicsRotation === 0) {\n                if (!isNormalMatrix &&\n                    (typeof this.rotationAngle !== 'undefined' &&\n                        (this.rotationAngle === PdfRotationAngle.angle90 ||\n                            this.rotationAngle === PdfRotationAngle.angle270))) {\n                    x = bounds.x;\n                    y = (bounds.y + bounds.height - bounds.width);\n                    width = bounds.height;\n                    height = bounds.width;\n                }\n            }\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    PdfAnnotation.prototype._obtainGraphicsRotation = function (matrix) {\n        var radians = Math.atan2(matrix._matrix._elements[2], matrix._matrix._elements[0]);\n        var angle = Math.round(radians * 180 / Math.PI);\n        switch (angle) {\n            case -90:\n                angle = 90;\n                break;\n            case -180:\n                angle = 180;\n                break;\n            case 90:\n                angle = 270;\n                break;\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._removeAnnotation = function (page, annotation) {\n        if (page && annotation) {\n            page.annotations.remove(annotation);\n            page._pageDictionary._updated = true;\n        }\n    };\n    PdfAnnotation.prototype._drawCloudStyle = function (graphics, brush, pen, radius, overlap, points, isAppearance) {\n        if (_isNullOrUndefined(points) && this._isClockWise(points)) {\n            var sortedPoints = [];\n            for (var i = points.length - 1; i >= 0; i--) {\n                sortedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            points = sortedPoints;\n        }\n        var circles = [];\n        var circleOverlap = 2 * radius * overlap;\n        var previousPoint;\n        if (_isNullOrUndefined(points)) {\n            previousPoint = points[points.length - 1];\n        }\n        else {\n            points = [];\n        }\n        for (var i = 0; i < points.length; i++) {\n            var currentPoint = points[Number.parseInt(i.toString(), 10)];\n            var dx = currentPoint[0] - previousPoint[0];\n            var dy = currentPoint[1] - previousPoint[1];\n            var length_1 = Math.sqrt(dx * dx + dy * dy);\n            dx = dx / length_1;\n            dy = dy / length_1;\n            for (var a = 0; a + 0.1 * circleOverlap < length_1; a += circleOverlap) {\n                var cur = new _CloudStyleArc();\n                cur.point = [previousPoint[0] + a * dx, previousPoint[1] + a * dy];\n                circles.push(cur);\n            }\n            previousPoint = currentPoint;\n        }\n        var previousCurvedStyleArc = circles[circles.length - 1];\n        for (var i = 0; i < circles.length; i++) {\n            var currentCurvedStyleArc = circles[Number.parseInt(i.toString(), 10)];\n            var angle = this._getIntersectionDegrees(previousCurvedStyleArc.point, currentCurvedStyleArc.point, radius);\n            previousCurvedStyleArc.endAngle = angle[0];\n            currentCurvedStyleArc.startAngle = angle[1];\n            previousCurvedStyleArc = currentCurvedStyleArc;\n        }\n        var path = new PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            var startAngle = current.startAngle % 360;\n            var endAngle = current.endAngle % 360;\n            var sweepAngel = 0;\n            if (startAngle > 0 && endAngle < 0) {\n                sweepAngel = (180 - startAngle) + (180 - (endAngle < 0 ? -endAngle : endAngle));\n            }\n            else if (startAngle < 0 && endAngle > 0) {\n                sweepAngel = -startAngle + endAngle;\n            }\n            else if (startAngle > 0 && endAngle > 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = endAngle - startAngle;\n                }\n            }\n            else if (startAngle < 0 && endAngle < 0) {\n                var difference = 0;\n                if (startAngle > endAngle) {\n                    difference = startAngle - endAngle;\n                    sweepAngel = 360 - difference;\n                }\n                else {\n                    sweepAngel = -(startAngle + (-endAngle));\n                }\n            }\n            if (sweepAngel < 0) {\n                sweepAngel = -sweepAngel;\n            }\n            current.endAngle = sweepAngel;\n            path.addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, startAngle, sweepAngel);\n        }\n        path.closeFigure();\n        var tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        var pdfpath;\n        if (isAppearance) {\n            pdfpath = new PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        if (_isNullOrUndefined(brush)) {\n            graphics.drawPath(pdfpath, brush);\n        }\n        var incise = 180 / (Math.PI * 3);\n        path = new PdfPath();\n        for (var i = 0; i < circles.length; i++) {\n            var current = circles[Number.parseInt(i.toString(), 10)];\n            path.addArc(current.point[0] - radius, current.point[1] - radius, 2 * radius, 2 * radius, current.startAngle, current.endAngle + incise);\n        }\n        path.closeFigure();\n        tempPoints = [];\n        if (isAppearance) {\n            for (var i = 0; i < path._points.length; i++) {\n                tempPoints.push([path._points[Number.parseInt(i.toString(), 10)][0], -path._points[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n        if (isAppearance) {\n            pdfpath = new PdfPath();\n            pdfpath._points = tempPoints;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        else {\n            pdfpath = new PdfPath();\n            pdfpath._points = path._points;\n            pdfpath._pathTypes = path._pathTypes;\n        }\n        graphics.drawPath(pdfpath, pen);\n    };\n    PdfAnnotation.prototype._isClockWise = function (points) {\n        var sum = 0;\n        if (_isNullOrUndefined(points)) {\n            for (var i = 0; i < points.length; i++) {\n                var first = points[Number.parseInt(i.toString(), 10)];\n                var second = points[(i + 1) % points.length];\n                sum += (second[0] - first[0]) * (second[1] + first[1]);\n            }\n        }\n        return sum > 0;\n    };\n    PdfAnnotation.prototype._getIntersectionDegrees = function (first, second, radius) {\n        var dx = second[0] - first[0];\n        var dy = second[1] - first[1];\n        var length = Math.sqrt(dx * dx + dy * dy);\n        var a = 0.5 * length / radius;\n        if (a < -1) {\n            a = -1;\n        }\n        else if (a > 1) {\n            a = 1;\n        }\n        var radian = Math.atan2(dy, dx);\n        var cosvalue = Math.acos(a);\n        return [(radian - cosvalue) * (180 / Math.PI), (Math.PI + radian + cosvalue) * (180 / Math.PI)];\n    };\n    PdfAnnotation.prototype._obtainStyle = function (borderPen, rectangle, borderWidth, parameter) {\n        var dash = this.border.dash;\n        if (dash && dash.length > 0) {\n            var dashPattern = [];\n            var isDash = false;\n            for (var i = 0; i < dash.length; i++) {\n                dashPattern[Number.parseInt(i.toString(), 10)] = dash[Number.parseInt(i.toString(), 10)];\n                if (dashPattern[Number.parseInt(i.toString(), 10)] > 0) {\n                    isDash = true;\n                }\n            }\n            if (isDash && this.border.style === PdfBorderStyle.dashed) {\n                borderPen._dashStyle = PdfDashStyle.dash;\n                borderPen._dashPattern = dashPattern;\n            }\n        }\n        if (parameter) {\n            if (parameter instanceof _PaintParameter) {\n                if (!this._isBounds && this._dictionary.has('RD')) {\n                    var array = this._dictionary.getArray('RD');\n                    if (array) {\n                        rectangle[0] = rectangle[0] + array[0];\n                        rectangle[1] = rectangle[1] + borderWidth + array[1];\n                        rectangle[2] = rectangle[2] - (array[0] + array[2]);\n                        rectangle[3] = rectangle[3] - (array[1] + array[3]);\n                    }\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = rectangle[3] - this.border.width;\n                }\n                parameter.bounds = rectangle;\n            }\n            else {\n                if (parameter.intensity !== 0 && parameter.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = parameter.intensity * 5;\n                    rectangle[0] = rectangle[0] + radius + borderWidth;\n                    rectangle[1] = rectangle[1] + radius + borderWidth;\n                    rectangle[2] = rectangle[2] - (2 * radius) - 2 * borderWidth;\n                    rectangle[3] = rectangle[3] - (2 * radius) - 2 * borderWidth;\n                }\n                else {\n                    rectangle[0] = rectangle[0] + borderWidth;\n                    rectangle[1] = rectangle[1] + borderWidth;\n                    rectangle[2] = rectangle[2] - this.border.width;\n                    rectangle[3] = this.bounds.height - this.border.width;\n                }\n            }\n        }\n        else {\n            if (!this._isBounds && this._dictionary && this._dictionary.has('RD')) {\n                var array = this._dictionary.getArray('RD');\n                if (array) {\n                    rectangle[0] = rectangle[0] + array[0];\n                    rectangle[1] = rectangle[1] + borderWidth + array[1];\n                    rectangle[2] = rectangle[2] - (2 * array[2]);\n                    rectangle[3] = rectangle[3] - this.border.width;\n                    rectangle[3] = rectangle[3] - (2 * array[3]);\n                }\n            }\n            else {\n                rectangle[1] = rectangle[1] + borderWidth;\n                rectangle[3] = this.bounds.height - this.border.width;\n            }\n        }\n        return rectangle;\n    };\n    PdfAnnotation.prototype._createRectangleAppearance = function (borderEffect) {\n        var width = this.border.width;\n        var rdArray = this._dictionary.getArray('RD');\n        if (!rdArray && borderEffect !== null && typeof borderEffect !== 'undefined' && borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var cloudRectangle = { x: this.bounds.x - borderEffect.intensity * 5 - width / 2,\n                y: this.bounds.y - borderEffect.intensity * 5 - width / 2,\n                width: this.bounds.width + borderEffect.intensity * 10 + width,\n                height: this.bounds.height + borderEffect.intensity * 10 + width };\n            var radius = borderEffect.intensity * 5;\n            rdArray = [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2];\n            this._dictionary.set('RD', rdArray);\n            this.bounds = cloudRectangle;\n        }\n        if (!this._isBounds && rdArray) {\n            var cloudRectangle = { x: this.bounds.x + rdArray[0],\n                y: this.bounds.y + rdArray[1],\n                width: this.bounds.width - rdArray[2] * 2,\n                height: this.bounds.height - rdArray[3] * 2 };\n            if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                cloudRectangle.x = cloudRectangle.x - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.y = cloudRectangle.y - borderEffect.intensity * 5 - width / 2;\n                cloudRectangle.width = cloudRectangle.width + borderEffect.intensity * 10 + width;\n                cloudRectangle.height = cloudRectangle.height + borderEffect.intensity * 10 + width;\n                var radius = borderEffect.intensity * 5;\n                this._dictionary.set('RD', [radius + width / 2, radius + width / 2, radius + width / 2, radius + width / 2]);\n            }\n            else {\n                delete this._dictionary._map.RD;\n            }\n            this.bounds = cloudRectangle;\n        }\n        var borderWidth = width / 2;\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            template._writeTransformation = false;\n        }\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0 && this.color) {\n            parameter.borderPen = new PdfPen(this._color, width);\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        var rectangle = this._obtainStyle(parameter.borderPen, nativeRectangle, borderWidth, borderEffect);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (borderEffect.intensity !== 0 && borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            this._drawRectangleAppearance(rectangle, graphics, parameter, borderEffect.intensity);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawRectangleAppearance = function (rectangle, graphics, parameter, intensity) {\n        var graphicsPath = new PdfPath();\n        if (_isNullOrUndefined(rectangle) && rectangle.length === 4) {\n            graphicsPath.addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        }\n        var radius = 0;\n        if (_isNullOrUndefined(intensity)) {\n            radius = intensity * 4.25;\n        }\n        if (radius > 0) {\n            var points = [];\n            for (var i = 0; i < graphicsPath._points.length; i++) {\n                var sublist = [graphicsPath._points[Number.parseInt(i.toString(), 10)][0],\n                    -graphicsPath._points[Number.parseInt(i.toString(), 10)][1]];\n                points.push(sublist);\n            }\n            graphicsPath = new PdfPath();\n            graphicsPath.addPolygon(points);\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n        }\n        else {\n            graphics.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createCircleAppearance = function () {\n        var nativeBounds = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeBounds, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        if (this._dictionary.has('BE')) {\n            template._writeTransformation = false;\n        }\n        if (typeof this.color === 'undefined') {\n            this._isTransparentColor = true;\n        }\n        var graphics = template.graphics;\n        var width = this.border.width;\n        var borderPen = new PdfPen(this.color, width);\n        var parameter = new _PaintParameter();\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        if (width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        parameter.borderWidth = width;\n        var borderWidth = width / 2;\n        var rectangle = this._obtainStyle(borderPen, nativeBounds, borderWidth);\n        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this._dictionary.has('BE')) {\n            this._drawCircleAppearance(rectangle, borderWidth, graphics, parameter);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, rectangle[1], rectangle[2] - width, rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n        if (typeof this._opacity !== 'undefined' && this._opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfAnnotation.prototype._drawCircleAppearance = function (rectangle, borderWidth, graphics, parameter) {\n        var radius = 0;\n        if (this._dictionary.has('RD')) {\n            var array = this._dictionary.getArray('RD');\n            if (array && array.length > 0) {\n                radius = array[0];\n            }\n        }\n        if (radius > 0) {\n            var rect = [rectangle[0] + borderWidth,\n                -rectangle[1] - rectangle[3],\n                rectangle[2] - this.border.width,\n                rectangle[3]];\n            var left = rect[0];\n            var top_1 = rect[1];\n            var right = rect[0] + rect[2];\n            var bottom = rect[1] + rect[3];\n            var controlPointList = [];\n            controlPointList.push([right, bottom]);\n            controlPointList.push([left, bottom]);\n            controlPointList.push([left, top_1]);\n            controlPointList.push([right, top_1]);\n            var startPointList = [];\n            startPointList.push([right, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + rect[2] / 2, bottom]);\n            startPointList.push([left, top_1 + (rect[3] / 2)]);\n            startPointList.push([left + (rect[2] / 2), top_1]);\n            var endPointList = [];\n            endPointList.push([left + rect[2] / 2, bottom]);\n            endPointList.push([left, top_1 + (rect[3] / 2)]);\n            endPointList.push([left + (rect[2] / 2), top_1]);\n            endPointList.push([right, top_1 + (rect[3] / 2)]);\n            var points = [];\n            for (var i = 0; i < controlPointList.length; i++) {\n                this._createBezier(startPointList[Number.parseInt(i.toString(), 10)], controlPointList[Number.parseInt(i.toString(), 10)], endPointList[Number.parseInt(i.toString(), 10)], points);\n            }\n            this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, points, false);\n        }\n        else {\n            graphics.drawEllipse(rectangle[0] + borderWidth, -rectangle[1], rectangle[2] - this.border.width, -rectangle[3], parameter.borderPen, parameter.backBrush);\n        }\n    };\n    PdfAnnotation.prototype._createBezier = function (first, second, third, bezierPoints) {\n        bezierPoints.push(first);\n        this._populateBezierPoints(first, second, third, 0, bezierPoints);\n        bezierPoints.push(third);\n    };\n    PdfAnnotation.prototype._populateBezierPoints = function (first, second, third, currentIteration, bezierPoints) {\n        if (currentIteration < 2) {\n            var midPoint1 = this._midPoint(first, second);\n            var midPoint2 = this._midPoint(second, third);\n            var midPoint3 = this._midPoint(midPoint1, midPoint2);\n            currentIteration++;\n            this._populateBezierPoints(first, midPoint1, midPoint3, currentIteration, bezierPoints);\n            bezierPoints.push(midPoint3);\n            this._populateBezierPoints(midPoint3, midPoint2, third, currentIteration, bezierPoints);\n        }\n    };\n    PdfAnnotation.prototype._midPoint = function (first, second) {\n        return [(first[0] + second[0]) / 2, (first[1] + second[1]) / 2];\n    };\n    PdfAnnotation.prototype._getAngle = function (linePoints) {\n        var x1 = linePoints[0];\n        var y1 = linePoints[1];\n        var x2 = linePoints[2];\n        var y2 = linePoints[3];\n        var angle = 0;\n        if (x2 - x1 === 0) {\n            angle = (y2 > y1) ? 90 : 270;\n        }\n        else {\n            var angleRatio = (y2 - y1) / (x2 - x1);\n            var radians = Math.atan(angleRatio);\n            angle = radians * (180 / Math.PI);\n            if ((x2 - x1) < 0 || (y2 - y1) < 0) {\n                angle += 180;\n            }\n            if ((x2 - x1) > 0 && (y2 - y1) < 0) {\n                angle -= 180;\n            }\n            if (angle < 0) {\n                angle += 360;\n            }\n        }\n        return angle;\n    };\n    PdfAnnotation.prototype._getAxisValue = function (value, angle, length) {\n        return [value[0] + Math.cos(angle * this._degreeToRadian) * length,\n            value[1] + Math.sin(angle * this._degreeToRadian) * length];\n    };\n    PdfAnnotation.prototype._drawLineEndStyle = function (axisPoint, graphics, angle, pen, brush, style, length, isBegin) {\n        var arraowAngle;\n        var count;\n        var startPoint;\n        var first;\n        var second;\n        var third;\n        var fourth;\n        var path;\n        switch (style) {\n            case PdfLineEndingStyle.square:\n                graphics.drawRectangle(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.circle:\n                graphics.drawEllipse(axisPoint[0] - (3 * length), -(axisPoint[1] + (3 * length)), (6 * length), (6 * length), pen, brush);\n                break;\n            case PdfLineEndingStyle.openArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new PdfPath();\n                path._pen = pen;\n                path.addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path.addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.closedArrow:\n                arraowAngle = isBegin ? 30 : 150;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? length : (-length)));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.rOpenArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                path = new PdfPath();\n                path._pen = pen;\n                path.addLine(startPoint[0], -startPoint[1], first[0], -first[1]);\n                path.addLine(startPoint[0], -startPoint[1], second[0], -second[1]);\n                graphics._stateControl(pen, null, null);\n                graphics._buildUpPath(path._points, path._pathTypes);\n                graphics._drawGraphicsPath(pen, null, path._fillMode, false);\n                break;\n            case PdfLineEndingStyle.rClosedArrow:\n                arraowAngle = isBegin ? 150 : 30;\n                count = 9 * length;\n                startPoint = this._getAxisValue(axisPoint, angle, (isBegin ? (-length) : length));\n                first = this._getAxisValue(startPoint, (angle + arraowAngle), count);\n                second = this._getAxisValue(startPoint, (angle - arraowAngle), count);\n                graphics.drawPolygon([[startPoint[0], -startPoint[1]], [first[0], -first[1]], [second[0], -second[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.slash:\n                count = 9 * length;\n                first = this._getAxisValue(axisPoint, (angle + 60), count);\n                second = this._getAxisValue(axisPoint, (angle - 120), count);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], first[0], -first[1]);\n                graphics.drawLine(pen, axisPoint[0], -axisPoint[1], second[0], -second[1]);\n                break;\n            case PdfLineEndingStyle.diamond:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, 180, count);\n                second = this._getAxisValue(axisPoint, 90, count);\n                third = this._getAxisValue(axisPoint, 0, count);\n                fourth = this._getAxisValue(axisPoint, -90, count);\n                graphics.drawPolygon([[first[0], -first[1]], [second[0], -second[1]], [third[0], -third[1]], [fourth[0], -fourth[1]]], pen, brush);\n                break;\n            case PdfLineEndingStyle.butt:\n                count = 3 * length;\n                first = this._getAxisValue(axisPoint, (angle + 90), count);\n                second = this._getAxisValue(axisPoint, (angle - 90), count);\n                graphics.drawLine(pen, first[0], -first[1], second[0], -second[1]);\n                break;\n        }\n    };\n    PdfAnnotation.prototype._drawLineStyle = function (start, end, graphics, angle, pen, brush, lineStyle, length) {\n        if (length === 0) {\n            length = 1;\n            pen = null;\n        }\n        this._drawLineEndStyle(start, graphics, angle, pen, brush, lineStyle.begin, length, true);\n        this._drawLineEndStyle(end, graphics, angle, pen, brush, lineStyle.end, length, false);\n    };\n    PdfAnnotation.prototype._obtainFontDetails = function () {\n        var fontFamily = '';\n        var fontSize;\n        var style = PdfFontStyle.regular;\n        if (this._dictionary.has('DS') || this._dictionary.has('DA')) {\n            var fontStyle = void 0;\n            if (this._dictionary.has('DS')) {\n                var collection = this._dictionary.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-size') !== -1) {\n                        if (entry[1].endsWith('pt')) {\n                            fontSize = Number.parseFloat(entry[1].replace('pt', ''));\n                        }\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') !== -1 || collection[Number.parseInt(i.toString(), 10)].indexOf('style') !== -1) {\n                        fontStyle = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                            if (split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontSize = Number.parseFloat(split[Number.parseInt(j.toString(), 10)].replace('pt', ''));\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 1);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = this._dictionary.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                }\n            }\n            if (fontStyle && fontStyle !== '') {\n                var styleArray = [fontStyle];\n                if (fontStyle.includes(':')) {\n                    styleArray = fontStyle.split(':');\n                }\n                else if (fontStyle.includes(',')) {\n                    styleArray = fontStyle.split(',');\n                }\n                if (styleArray) {\n                    styleArray.forEach(function (entry) {\n                        entry = entry.trim();\n                        switch (entry.toLowerCase()) {\n                            case 'bold':\n                                style |= PdfFontStyle.bold;\n                                break;\n                            case 'italic':\n                                style |= PdfFontStyle.italic;\n                                break;\n                            case 'strikeout':\n                                style |= PdfFontStyle.strikeout;\n                                break;\n                            case 'underline':\n                                style |= PdfFontStyle.underline;\n                                break;\n                        }\n                    });\n                }\n            }\n            if (fontFamily) {\n                fontFamily = fontFamily.trim();\n            }\n        }\n        return { name: fontFamily, size: fontSize, style: style };\n    };\n    PdfAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfAnnotation.prototype._getEqualPdfGraphicsUnit = function (measurementUnit, unitString) {\n        var graphicsUnit;\n        switch (measurementUnit) {\n            case PdfMeasurementUnit.inch:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n            case PdfMeasurementUnit.centimeter:\n                graphicsUnit = _PdfGraphicsUnit.centimeter;\n                unitString = 'cm';\n                break;\n            case PdfMeasurementUnit.millimeter:\n                graphicsUnit = _PdfGraphicsUnit.millimeter;\n                unitString = 'mm';\n                break;\n            case PdfMeasurementUnit.pica:\n                graphicsUnit = _PdfGraphicsUnit.pica;\n                unitString = 'p';\n                break;\n            case PdfMeasurementUnit.point:\n                graphicsUnit = _PdfGraphicsUnit.point;\n                unitString = 'pt';\n                break;\n            default:\n                graphicsUnit = _PdfGraphicsUnit.inch;\n                unitString = 'in';\n                break;\n        }\n        return { graphicsUnit: graphicsUnit, unitString: unitString };\n    };\n    PdfAnnotation.prototype._createMeasureDictionary = function (unitString) {\n        var d = new _PdfDictionary();\n        d.set('C', 1);\n        d.set('D', 100);\n        d.set('F', _PdfName.get('D'));\n        d.set('RD', '.');\n        d.set('RT', '');\n        d.set('SS', '');\n        d.set('U', unitString);\n        var a = new _PdfDictionary();\n        a.set('C', 1);\n        a.set('D', 100);\n        a.set('F', _PdfName.get('D'));\n        a.set('RD', '.');\n        a.set('RT', '');\n        a.set('SS', '');\n        a.set('U', 'sq ' + unitString);\n        var x = new _PdfDictionary();\n        if (unitString === 'in') {\n            x.set('C', 0.0138889);\n        }\n        else if (unitString === 'cm') {\n            x.set('C', 0.0352778);\n        }\n        else if (unitString === 'mm') {\n            x.set('C', 0.352778);\n        }\n        else if (unitString === 'pt') {\n            x.set('C', 1);\n        }\n        else if (unitString === 'p') {\n            x.set('C', 0.0833333);\n        }\n        x.set('D', 100);\n        x.set('F', _PdfName.get('D'));\n        x.set('RD', '.');\n        x.set('RT', '');\n        x.set('SS', '');\n        x.set('U', unitString);\n        var measureDictionary = new _PdfDictionary();\n        measureDictionary.set('A', [a]);\n        measureDictionary.set('D', [d]);\n        measureDictionary.set('R', '1 ' + unitString + ' = 1 ' + unitString);\n        measureDictionary.set('Type', _PdfName.get('Measure'));\n        measureDictionary.set('X', [x]);\n        return measureDictionary;\n    };\n    PdfAnnotation.prototype._colorToHex = function (col) {\n        if (col) {\n            return '#' + this._componentToHex(col[0]) + this._componentToHex(col[1]) + this._componentToHex(col[2]);\n        }\n        else {\n            return '#' + this._componentToHex(0) + this._componentToHex(0) + this._componentToHex(0);\n        }\n    };\n    PdfAnnotation.prototype._componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    PdfAnnotation.prototype._getRotatedBounds = function (bounds, rotateAngle) {\n        if (bounds.width > 0 && bounds.height > 0) {\n            var matrix = new _PdfTransformationMatrix();\n            matrix._rotate(rotateAngle);\n            var corners = [];\n            corners.push([bounds.x, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y]);\n            corners.push([bounds.x + bounds.width, bounds.y + bounds.height]);\n            corners.push([bounds.x, bounds.y + bounds.height]);\n            for (var i = 0; i < corners.length; i++) {\n                corners[Number.parseInt(i.toString(), 10)] = matrix._matrix._transform(corners[Number.parseInt(i.toString(), 10)]);\n            }\n            var path = new PdfPath();\n            path.addRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\n            for (var i = 0; i < 4; i++) {\n                path._points[Number.parseInt(i.toString(), 10)] = corners[Number.parseInt(i.toString(), 10)];\n            }\n            var minX = corners[0][0];\n            var maxX = corners[3][0];\n            var minY = corners[0][1];\n            var maxY = corners[3][1];\n            for (var i = 0; i < 4; i++) {\n                if (corners[Number.parseInt(i.toString(), 10)][0] < minX) {\n                    minX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][0] > maxX) {\n                    maxX = corners[Number.parseInt(i.toString(), 10)][0];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] < minY) {\n                    minY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n                if (corners[Number.parseInt(i.toString(), 10)][1] > maxY) {\n                    maxY = corners[Number.parseInt(i.toString(), 10)][1];\n                }\n            }\n            return { x: bounds.x, y: bounds.y, width: Math.round(maxX - minX), height: Math.round(maxY - minY) };\n        }\n        return bounds;\n    };\n    PdfAnnotation.prototype._flattenPopUp = function () {\n        this._flattenPop(this._page, this.color, this.bounds, this.border, this.author, this.subject, this.text);\n    };\n    PdfAnnotation.prototype._flattenPop = function (_page, color, boundsValue, border, author, subject, text) {\n        var clientSize = [0, 0];\n        if (_page && _page.size) {\n            clientSize = _page.size;\n        }\n        var x = clientSize[0] - 180;\n        var annotBounds = boundsValue;\n        var y = (annotBounds.y + 142) < clientSize[1] ? annotBounds.y : clientSize[1] - 142;\n        var bounds = [x, y, 180, 142];\n        if (this._dictionary.has('Popup')) {\n            var dictionary = this._dictionary.get('Popup');\n            if (dictionary) {\n                var rectValue = this._dictionary.getArray('Rect');\n                if (rectValue && rectValue.length === 4) {\n                    var left = rectValue[0];\n                    var top_2 = rectValue[1];\n                    var width = rectValue[2];\n                    var height = rectValue[3];\n                    bounds = [left, top_2, width - left, height - top_2];\n                }\n            }\n        }\n        if (typeof color === 'undefined') {\n            color = [0, 0, 0];\n        }\n        var backBrush = new PdfBrush(color);\n        var borderWidth = border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var track = 0;\n        var aBrush = new PdfBrush(this._getForeColor(color));\n        if (typeof author !== 'undefined' && author !== null && author !== '') {\n            track = this._drawAuthor(author, subject, bounds, backBrush, aBrush, _page, track, border);\n        }\n        else if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 40];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n            track = 40;\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            track = 20;\n            _page.graphics.restore();\n        }\n        var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n            bounds[2] - border.width, bounds[3] - (track + border.width)];\n        this._saveGraphics(_page, PdfBlendMode.hardLight);\n        _page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], new PdfPen([0, 0, 0], 1), new PdfBrush([255, 255, 255]));\n        rect[0] += 11;\n        rect[1] += 5;\n        rect[2] -= 22;\n        _page.graphics.restore();\n        this._saveGraphics(_page, PdfBlendMode.normal);\n        if (typeof text !== 'undefined' && text !== null && text !== '') {\n            _page.graphics.drawString(text, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n        }\n        _page.graphics.restore();\n    };\n    PdfAnnotation.prototype._flattenLoadedPopUp = function () {\n        var content = '';\n        if (this._dictionary.has('Contents')) {\n            content = this._dictionary.get('Contents');\n        }\n        var author = this.author;\n        var subject = this.subject;\n        var pen = new PdfPen([0, 0, 0], 1);\n        if (!this._dictionary.has('Popup')) {\n            this._flattenPop(this._page, this.color, this.bounds, this.border, author, subject, content);\n            this._page.annotations.remove(this);\n        }\n        else {\n            var bounds = this._getRectangleBoundsValue();\n            if (typeof this.color === 'undefined') {\n                this.color = [0, 0, 0];\n            }\n            var backBrush = new PdfBrush(this.color);\n            var borderWidth = this.border.width / 2;\n            var track = 0;\n            var aBrush = new PdfBrush(this._getForeColor(this.color));\n            if (typeof this.author !== 'undefined' && this.author !== null && this.author !== '') {\n                track = this._drawAuthor(this.author, this.subject, bounds, backBrush, aBrush, this._page, track, this.border);\n            }\n            else if (typeof this.subject !== 'undefined' && this.subject !== null && this.subject !== '') {\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 40];\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                this._page.graphics.restore();\n                var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n                contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n                this._saveGraphics(this._page, PdfBlendMode.normal);\n                this._drawSubject(this.subject, contentRect, this._page);\n                track = 40;\n                this._page.graphics.restore();\n            }\n            else {\n                this._saveGraphics(this._page, PdfBlendMode.hardLight);\n                var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - this.border.width, 20];\n                this._page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n                track = 20;\n                this._page.graphics.restore();\n            }\n            this._saveGraphics(this._page, PdfBlendMode.hardLight);\n            var rect = [bounds[0] + borderWidth, bounds[1] + borderWidth + track,\n                bounds[2] - this.border.width, bounds[3] - (track + this.border.width)];\n            this._page.graphics.drawRectangle(rect[0], rect[1], rect[2], rect[3], pen, new PdfBrush([255, 255, 255]));\n            rect[0] += 11;\n            rect[1] += 5;\n            rect[2] -= 22;\n            this._page.graphics.restore();\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            this._page.graphics.restore();\n            //let xmlData: Array<any> = Array<any>();\n            // if (this._dictionary.has('RC')) {\n            //     //xmlData = this.parseXMLData();\n            // }\n            // if (xmlData !== null) {\n            //     // Need to add xml data code\n            // } else {\n            if (typeof content !== 'undefined' && content !== null && content !== '') {\n                this._page.graphics.drawString(content, this._popUpFont, rect, null, new PdfBrush([0, 0, 0]), null);\n            }\n            // }\n            this._page.graphics.restore();\n            this._page.annotations.remove(this);\n        }\n    };\n    PdfAnnotation.prototype._getRectangleBoundsValue = function () {\n        if (this._dictionary.has('Popup')) {\n            var dic = this._dictionary.get('Popup');\n            var rect = dic.getArray('Rect');\n            if (rect !== null) {\n                if (this._page !== null) {\n                    if (rect[1] === 0 && rect[3] === 0) {\n                        rect[1] = rect[1] + rect[3];\n                    }\n                    else {\n                        rect[1] = this._page._size[1] - (rect[1] + rect[3]);\n                    }\n                }\n                else {\n                    rect[1] = (rect[1] - rect[3]);\n                }\n                return rect;\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        }\n        else {\n            return [0, 0, 0, 0];\n        }\n    };\n    PdfAnnotation.prototype._getForeColor = function (color) {\n        var fore = (((color[0] + color[1] + color[2]) / 3) > 128) ? [0, 0, 0] : [255, 255, 255];\n        return fore;\n    };\n    PdfAnnotation.prototype._drawAuthor = function (author, subject, bounds, backBrush, aBrush, _page, trackingHeight, border) {\n        var borderWidth = this.border.width / 2;\n        var pen = new PdfPen([0, 0, 0], 1);\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        var titleRect = [bounds[0] + borderWidth, bounds[1] + borderWidth, bounds[2] - border.width, 20];\n        if (typeof subject !== 'undefined' && subject !== null && subject !== '') {\n            titleRect[3] += 20;\n            trackingHeight = titleRect[3];\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3] / 2];\n            this._saveGraphics(this._page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._authorBoldFont, contentRect, null, aBrush, format);\n            contentRect = [contentRect[0], (contentRect[1] + contentRect[3] - 2), contentRect[2], titleRect[3] / 2];\n            this._drawSubject(subject, contentRect, _page);\n            _page.graphics.restore();\n        }\n        else {\n            this._saveGraphics(_page, PdfBlendMode.hardLight);\n            if (this._isTransparentColor) {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen);\n            }\n            else {\n                _page.graphics.drawRectangle(titleRect[0], titleRect[1], titleRect[2], titleRect[3], pen, backBrush);\n            }\n            _page.graphics.restore();\n            var contentRect = [titleRect[0] + 11, titleRect[1], titleRect[2], titleRect[3]];\n            this._saveGraphics(_page, PdfBlendMode.normal);\n            _page.graphics.drawString(author, this._popUpFont, contentRect, null, aBrush, format);\n            trackingHeight = titleRect[3];\n            _page.graphics.restore();\n        }\n        return trackingHeight;\n    };\n    PdfAnnotation.prototype._drawSubject = function (subject, contentRect, _page) {\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.middle);\n        _page.graphics.drawString(subject, this._authorBoldFont, contentRect, null, new PdfBrush([0, 0, 0]), format);\n    };\n    PdfAnnotation.prototype._saveGraphics = function (_page, blendMode) {\n        _page.graphics.save();\n        _page.graphics.setTransparency(0.8, 0.8, blendMode);\n    };\n    PdfAnnotation.prototype._getBorderColorString = function (color) {\n        return (color[0] / 255).toFixed(3) + ' ' + (color[1] / 255).toFixed(3) + ' ' + (color[2] / 255).toFixed(3) + ' rg ';\n    };\n    PdfAnnotation.prototype._stringToDate = function (date) {\n        var dateFormat = new Date();\n        if (date[0] === 'D' && date[1] === ':') {\n            var year = date.substring(2, 6);\n            var month = date.substring(6, 8);\n            var day = date.substring(8, 10);\n            var hour = date.substring(10, 12);\n            var minute = date.substring(12, 14);\n            var second = date.substring(14, 16);\n            var difference = 0;\n            if (date.length === 23) {\n                var timeZone = date.substring(16, 22);\n                if (timeZone !== '+05\\'30\\'') {\n                    var signature = timeZone[0];\n                    var timeZoneHour = timeZone.substring(1, 3);\n                    var timeZonMinute = timeZone.substring(4, 6);\n                    difference = 5.5 - (signature === '-' ? -1 : 1) * (parseInt(timeZoneHour, 10) + (parseInt(timeZonMinute, 10) / 60));\n                }\n            }\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n            if (difference !== 0) {\n                dateFormat.setTime(dateFormat.getTime() + (difference * 60 * 60 * 1000));\n            }\n        }\n        else if (date.indexOf('/') !== -1) {\n            var list = date.split('/');\n            var year = list[2].split(' ')[0];\n            var month = list[0];\n            if (month !== '10' && month !== '11' && month !== '12') {\n                month = '0' + month;\n            }\n            var day = list[1];\n            var hour = list[2].split(' ')[1].split(':')[0];\n            var minute = list[2].split(' ')[1].split(':')[1];\n            var second = list[2].split(' ')[1].split(':')[2];\n            dateFormat = new Date(year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':' + second);\n        }\n        else {\n            dateFormat = new Date(date);\n        }\n        return dateFormat;\n    };\n    PdfAnnotation.prototype._dateToString = function (dateTime) {\n        var month = (dateTime.getMonth() + 1).toString();\n        if (month !== '10' && month !== '11' && month !== '12') {\n            month = '0' + month;\n        }\n        var date = (dateTime.getDate()).toString();\n        if (Number.parseInt(date) < 10) { // eslint-disable-line\n            date = '0' + date;\n        }\n        var hours = (dateTime.getHours()).toString();\n        if (Number.parseInt(hours) < 10) { // eslint-disable-line\n            hours = '0' + hours;\n        }\n        var minutes = (dateTime.getMinutes()).toString();\n        if (Number.parseInt(minutes) < 10) { // eslint-disable-line\n            minutes = '0' + minutes;\n        }\n        var seconds = (dateTime.getSeconds()).toString();\n        if (Number.parseInt(seconds) < 10) { // eslint-disable-line\n            seconds = '0' + seconds;\n        }\n        return 'D:' + dateTime.getFullYear().toString() + month + date + hours + minutes + seconds + '+05\\'30\\'';\n    };\n    PdfAnnotation.prototype._obtainNativeRectangle = function () {\n        var rect = [this._bounds.x, this._bounds.y, this.bounds.x + this._bounds.width, this.bounds.y + this._bounds.height];\n        var cropBoxOrMediaBox = this._getCropOrMediaBox();\n        if (this._page) {\n            var size = this._page.size;\n            rect[1] = size[1] - rect[3];\n            if (cropBoxOrMediaBox && cropBoxOrMediaBox.length > 2 && (cropBoxOrMediaBox[0] !== 0 || cropBoxOrMediaBox[1] !== 0)) {\n                rect[0] += cropBoxOrMediaBox[0];\n                rect[1] += cropBoxOrMediaBox[1];\n            }\n        }\n        return rect;\n    };\n    PdfAnnotation.prototype._getPoints = function (polygonPoints) {\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        var points = polygonPoints;\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            var modifiedPoints = [];\n            for (var i = 0; i < points.length; i++) {\n                modifiedPoints.push(points[Number.parseInt(i.toString(), 10)]);\n            }\n            for (var j = 0; j < modifiedPoints.length; j = j + 2) {\n                var x = modifiedPoints[Number.parseInt(j.toString(), 10)];\n                var y = modifiedPoints[j + 1];\n                if (cropOrMediaBox) {\n                    points[Number.parseInt(j.toString(), 10)] = x + cropOrMediaBox[0];\n                    if (this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[3] === 0 && cropOrMediaBox[1] > 0) {\n                        points[j + 1] = y + cropOrMediaBox[3];\n                    }\n                    else {\n                        points[j + 1] = y + cropOrMediaBox[1];\n                    }\n                }\n            }\n        }\n        return points;\n    };\n    PdfAnnotation.prototype._getCropOrMediaBox = function () {\n        var cropOrMediaBox;\n        if (this._page) {\n            cropOrMediaBox = this._page.cropBox;\n            if (!cropOrMediaBox || cropOrMediaBox.length === 0) {\n                cropOrMediaBox = this._page.mediaBox;\n            }\n        }\n        if (cropOrMediaBox && cropOrMediaBox[3] < 0) {\n            var y = cropOrMediaBox[1];\n            var height = cropOrMediaBox[3];\n            cropOrMediaBox[3] = y;\n            cropOrMediaBox[1] = height;\n        }\n        return cropOrMediaBox;\n    };\n    PdfAnnotation.prototype._getDocumentLayer = function () {\n        if (this._dictionary.has('OC')) {\n            var reference = this._dictionary.getRaw('OC');\n            var page = this._page;\n            if (reference && page && this._crossReference._document) {\n                var layerCollection = this._crossReference._document.layers;\n                if (layerCollection) {\n                    this._isMatched(layerCollection, reference, page);\n                }\n            }\n        }\n        return this.layer;\n    };\n    PdfAnnotation.prototype._isMatched = function (layerCollection, expectedReference, page) {\n        for (var i = 0; i < layerCollection.count; i++) {\n            var reference = layerCollection.at(i)._referenceHolder;\n            if (reference && reference === expectedReference) {\n                if (layerCollection.at(i).name) {\n                    this._layer = layerCollection.at(i);\n                    break;\n                }\n            }\n            else if (layerCollection.at(i).layers && layerCollection.at(i).layers.count > 0) {\n                this._isMatched(layerCollection.at(i).layers, expectedReference, page);\n            }\n        }\n    };\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n/**\n * Represents the annotations which have comments and review history.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfComment = page.annotations.at(0) as PdfComment;\n * // Gets the comments of annotation\n * let comment : PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfComment = /** @class */ (function (_super) {\n    __extends(PdfComment, _super);\n    function PdfComment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PdfComment.prototype, \"comments\", {\n        /**\n         * Gets the comments of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation comments\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._comments) {\n                return this._comments;\n            }\n            else {\n                return this._comments = new PdfPopupAnnotationCollection(this, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfComment.prototype, \"reviewHistory\", {\n        /**\n         * Gets the review history of the PDF annotation (Read only).\n         *\n         * @returns {PdfPopupAnnotationCollection} Annotation review history.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the comments of the PDF annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.reviewHistory;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._reviewHistory) {\n                return this._reviewHistory;\n            }\n            else {\n                return this._reviewHistory = new PdfPopupAnnotationCollection(this, true);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfComment;\n}(PdfAnnotation));\nexport { PdfComment };\n/**\n * `PdfLineAnnotation` class represents the line annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new line annotation with line points\n * const annotation: PdfLineAnnotation = new PdfLineAnnotation([10, 50, 250, 50]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLineAnnotation, _super);\n    function PdfLineAnnotation(linePoints) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Line'));\n        if (linePoints !== null && typeof linePoints !== 'undefined') {\n            _this.linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.lineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfLineAnnotation.prototype, \"linePoints\", {\n        /**\n         * Gets the line points of the line annotation.\n         *\n         * @returns {number[]} Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line points of the line annotation.\n         * let linePoints : number[] = annotation.linePoints;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._linePoints === 'undefined' && this._dictionary.has('L')) {\n                var points = this._dictionary.getArray('L');\n                if (points) {\n                    this._linePoints = points;\n                }\n            }\n            return this._linePoints;\n        },\n        /**\n         * Sets the line points of the line annotation.\n         *\n         * @param {number[]} value Line points.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line points of the line annotation.\n         * annotation.linePoints = [10, 50, 250, 50];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && (typeof this._linePoints === 'undefined' || _areNotEqual(value, this._linePoints))) {\n                if (value.length === 4) {\n                    this._dictionary.update('L', value);\n                    this._linePoints = value;\n                }\n                else {\n                    throw new Error('Line points length should be 4.');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderExt\", {\n        /**\n         * Gets the line extension of the line annotation.\n         *\n         * @returns {number} Leader line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line extension of the line annotation.\n         * let leaderExt: number = annotation.leaderExt;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderExt === 'undefined' && this._dictionary.has('LLE')) {\n                var leaderExt = this._dictionary.get('LLE');\n                if (typeof leaderExt !== 'undefined') {\n                    this._leaderExt = leaderExt;\n                }\n            }\n            return this._leaderExt;\n        },\n        /**\n         * Sets the line extension of the line annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line extension of the line annotation.\n         * annotation.leaderExt = 4;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLE', value);\n                this._leaderExt = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderLine\", {\n        /**\n         * Gets the leader line of the line annotation.\n         *\n         * @returns {number} Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader line of the line annotation.\n         * let leaderLine: number = annotation.leaderLine;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderLine === 'undefined' && this._dictionary.has('LL')) {\n                var leaderLine = this._dictionary.get('LL');\n                if (typeof leaderLine !== 'undefined') {\n                    this._leaderLine = leaderLine;\n                }\n            }\n            return this._leaderLine;\n        },\n        /**\n         * Sets the leader line of the line annotation.\n         *\n         * @param {number} value Leader line.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader line of the line annotation.\n         * annotation.leaderLine = 5;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value) && this.leaderExt !== 0) {\n                this._dictionary.update('LL', value);\n                this._leaderLine = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the line annotation.\n         *\n         * @returns {PdfAnnotationLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line ending style of the line annotation.\n         * let lineEndingStyle: PdfAnnotationLineEndingStyle = annotation.lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineEndingStyle === 'undefined') {\n                var value = new PdfAnnotationLineEndingStyle();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('LE')) {\n                    var lineStyles = this._dictionary.getArray('LE');\n                    if (lineStyles && Array.isArray(lineStyles)) {\n                        value._begin = _mapLineEndingStyle(lineStyles[0].name);\n                        value._end = _mapLineEndingStyle(lineStyles[1].name);\n                    }\n                }\n                this._lineEndingStyle = value;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfAnnotationLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            var style = this.lineEndingStyle;\n            if (style.begin !== value.begin || style.end !== value.end) {\n                style.begin = value.begin;\n                style.end = value.end;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"leaderOffset\", {\n        /**\n         * Gets the leader offset of the line annotation.\n         *\n         * @returns {number} Leader offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the leader offset value of the line annotation\n         * let leaderOffset: number = annotation.leaderOffset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._leaderOffset === 'undefined' && this._dictionary.has('LLO')) {\n                var leaderOffset = this._dictionary.get('LLO');\n                if (typeof leaderOffset !== 'undefined' && leaderOffset >= 0) {\n                    this._leaderOffset = leaderOffset;\n                }\n            }\n            return this._leaderOffset;\n        },\n        /**\n         * Sets the leader offset of the line annotation.\n         *\n         * @param {number} value Leader line offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the leader offset of the line annotation.\n         * annotation.leaderOffset = 1;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                this._dictionary.update('LLO', value);\n                this._leaderOffset = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"lineIntent\", {\n        /**\n         * Gets the line intent of the line annotation.\n         *\n         * @returns {PdfLineIntent} Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the line intent value of the line annotation\n         * let lineIntent: PdfLineIntent = annotation.lineIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineIntent === 'undefined' && this._dictionary.has('IT')) {\n                var lineIntent = this._dictionary.get('IT');\n                if (lineIntent) {\n                    this._lineIntent = lineIntent.name === 'LineDimension' ? PdfLineIntent.lineDimension : PdfLineIntent.lineArrow;\n                }\n            }\n            return this._lineIntent;\n        },\n        /**\n         * Sets the line intent of the line annotation.\n         *\n         * @param {PdfLineIntent} value Line intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the line intent of the line annotation.\n         * annotation.lineIntent = PdfLineIntent.lineDimension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value !== this.lineIntent) {\n                this._lineIntent = value;\n                this._dictionary.update('IT', _PdfName.get(value === PdfLineIntent.lineDimension ? 'LineDimension' : 'LineArrow'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the line annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the flag to have measurement dictionary of the line annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined') {\n                this._measure = this._dictionary.has('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the line annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the flag to have measurement dictionary of the line annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                    this.caption.cap = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLineAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the line annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfLineAnnotation.prototype._postProcess = function (flatten) {\n        if (typeof this.linePoints === 'undefined' || this.linePoints === null) {\n            throw new Error('Line points cannot be null or undefined');\n        }\n        else {\n            var cropOrMediaBox = this._getCropOrMediaBox();\n            if (cropOrMediaBox && cropOrMediaBox.length > 3 && this.linePoints.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n                this._linePoints[0] += cropOrMediaBox[0];\n                this._linePoints[1] += cropOrMediaBox[1];\n                this._linePoints[2] += cropOrMediaBox[0];\n                this._linePoints[3] += cropOrMediaBox[1];\n                this._dictionary.update('L', this._linePoints);\n            }\n        }\n        if (!this._dictionary.has('Cap')) {\n            this._dictionary.set('Cap', false);\n        }\n        if (!this._dictionary.has('CP')) {\n            this._dictionary.set('CP', _PdfName.get('Inline'));\n        }\n        if (!this._dictionary.has('LE')) {\n            this.lineEndingStyle = new PdfAnnotationLineEndingStyle();\n        }\n        if (!this._dictionary.has('LL')) {\n            this.leaderLine = 0;\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.leaderExt = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this.border.dash === null || typeof this.border.dash === 'undefined') {\n            this.border.dash = [];\n            if (this.border.style === PdfBorderStyle.dashed) {\n                this.border.dash = [3, 1];\n            }\n            else if (this.border.style === PdfBorderStyle.dot) {\n                this.border.dash = [1, 1];\n            }\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createLineMeasureAppearance(flatten);\n        }\n        else {\n            var isUpdated = false;\n            if (this._setAppearance) {\n                this._appearanceTemplate = this._createAppearance();\n                if (this._page._isNew && !(this._flatten || flatten)) {\n                    var boundsArray = this._obtainLineBounds();\n                    var bounds = {\n                        x: boundsArray[0],\n                        y: boundsArray[1], width: boundsArray[2], height: boundsArray[3]\n                    };\n                    this._bounds = bounds;\n                    var updatedBounds = [this._bounds.x,\n                        this._bounds.y,\n                        this._bounds.x + this._bounds.width,\n                        this._bounds.y + this._bounds.height];\n                    this._dictionary.update('Rect', updatedBounds);\n                    isUpdated = true;\n                }\n            }\n            else {\n                var bounds = this._obtainLineBounds();\n                var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n                if (this._page._isNew && this._page._pageSettings && this._setAppearance && !this.flatten) {\n                    rectangleBounds = _updateBounds(this, bounds);\n                }\n                this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n                this._dictionary.update('Rect', rectangleBounds);\n                isUpdated = true;\n            }\n            if (this._dictionary.has('Measure') && !isUpdated) {\n                var boundsArray = this._obtainLineBounds();\n                var bounds = { x: boundsArray[0],\n                    y: boundsArray[1], width: boundsArray[2], height: boundsArray[3] };\n                this._bounds = bounds;\n                var updatedBounds = void 0;\n                if (this._page && this._page._isNew && this._page._pageSettings && !this._setAppearance && !this.flatten) {\n                    updatedBounds = _updateBounds(this);\n                }\n                else {\n                    updatedBounds = [this._bounds.x,\n                        this._bounds.y,\n                        this._bounds.x + this._bounds.width,\n                        this._bounds.y + this._bounds.height];\n                }\n                this._dictionary.update('Rect', updatedBounds);\n                if (this.flatten && !this.measure && this._page && this._page.size && Array.isArray(this._page.size) &&\n                    this._page.size.length >= 2) {\n                    this._bounds = { x: boundsArray[0], y: this._page.size[1] - (boundsArray[1] + boundsArray[3]),\n                        width: boundsArray[2], height: boundsArray[3] };\n                }\n            }\n        }\n    };\n    PdfLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createLineMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n        var appearance;\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference, appearance);\n                this._dictionary.update('AP', reference);\n            }\n        }\n        else if (this.measure && this._setAppearance && !this._dictionary.has('AP')) {\n            var reference = this._crossReference._getNextReference();\n            appearance = new _PdfDictionary(this._crossReference);\n            this._crossReference._cacheMap.set(reference, appearance);\n            this._dictionary.update('AP', reference);\n        }\n        if (appearance && this._appearanceTemplate && this._appearanceTemplate._content) {\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfLineAnnotation.prototype._createLineMeasureAppearance = function (_isFlatten) {\n        var nativeRectangle = [0, 0, 0, 0];\n        var area = this._convertToUnit();\n        var linePoints1 = this._obtainLinePoints();\n        var points = [];\n        for (var j = 0; j < linePoints1.length; j = j + 2) {\n            points.push([linePoints1[Number.parseInt(j.toString(), 10)], (linePoints1[j + 1])]);\n        }\n        var graphicsPath = new PdfPath();\n        graphicsPath._points = points;\n        graphicsPath._pathTypes = [0, 1];\n        var rectPath = graphicsPath._getBounds();\n        this._bounds = { x: rectPath[0], y: rectPath[1], width: rectPath[2], height: rectPath[3] };\n        var borderPen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        nativeRectangle = this._obtainLineBounds();\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, 0);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        parameter.borderPen = borderPen;\n        if (this.border.style === PdfBorderStyle.dashed) {\n            parameter.borderPen._dashStyle = PdfDashStyle.dash;\n            parameter.borderPen._dashPattern = [3, 1];\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            parameter.borderPen._dashStyle = PdfDashStyle.dot;\n            parameter.borderPen._dashPattern = [1, 1];\n        }\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var linePoints = this._obtainLinePoints();\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (typeof linePoints !== 'undefined' && linePoints.length === 4) {\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var fontSize = font.measureString(area.toFixed(2) + ' ' + this._unitString, [0, 0], format, 0, 0);\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            if (this.leaderLine < 0) {\n                leaderLine = -(this.leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = this.leaderLine;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((fontSize[0] / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            var state = void 0;\n            if (this.opacity && this._opacity < 1) {\n                state = graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            if (this.caption.type === PdfLineCaptionType.top || (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n                graphics.drawLine(borderPen, start[0], -start[1], end[0], -end[1]);\n            }\n            else {\n                graphics.drawLine(borderPen, start[0], -start[1], first[0], -first[1]);\n                graphics.drawLine(borderPen, end[0], -end[1], second[0], -second[1]);\n            }\n            if (this.opacity && this._opacity < 1) {\n                graphics.restore(state);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, borderPen, backBrush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(borderPen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n            }\n            else {\n                captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [(-fontSize[0] / 2), 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, template._content);\n            template._content.reference = ref;\n            var nativeRectangle1 = [this.bounds.x,\n                this.bounds.y + this.bounds.height,\n                this.bounds.width,\n                this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            if (this._isBounds && !this.measure) {\n                nativeRectangle = nativeRectangle1;\n                this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            }\n            else {\n                this._dictionary.update('Rect', [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]]);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (typeof _isFlatten !== 'undefined' && !_isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dic = new _PdfDictionary();\n                dic.set('N', ref);\n                dic._updated = true;\n                this._dictionary.set('AP', dic);\n                var measureDictionary = this._createMeasureDictionary(this._unitString);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, measureDictionary);\n                measureDictionary._updated = true;\n                if (this._dictionary.has('Measure')) {\n                    _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n                }\n                this._dictionary.update('Measure', reference);\n            }\n            var lineStyles = [];\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.begin)));\n            lineStyles.push(_PdfName.get(_reverseMapEndingStyle(this.lineEndingStyle.end)));\n            this._dictionary.update('LE', lineStyles);\n            if (this._linePoints !== null) {\n                this._dictionary.update('L', this._linePoints);\n            }\n            else {\n                throw new Error('LinePoints cannot be null');\n            }\n            this._dictionary.update('C', [Number.parseFloat((this.color[0] / 255).toFixed(3)),\n                Number.parseFloat((this.color[1] / 255).toFixed(3)),\n                Number.parseFloat((this.color[2] / 255).toFixed(3))]);\n            var offset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            this._dictionary.update('Subtype', new _PdfName('Line'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            this._dictionary.update('IT', new _PdfName('LineDimension'));\n            this._dictionary.update('LLE', this.leaderExt);\n            this._dictionary.update('LLO', offset);\n            this._dictionary.update('LL', this.leaderLine);\n            this._dictionary.update('CP', _PdfName.get(this.caption.type === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n            this._dictionary.update('Cap', this.caption.cap);\n            var bounds = [nativeRectangle[0],\n                nativeRectangle[1],\n                nativeRectangle[0] + nativeRectangle[2],\n                nativeRectangle[1] + nativeRectangle[3]];\n            this._dictionary.update('Rect', bounds);\n            this._bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._calculateAngle = function (startPointX, startPointY, endPointX, endPointY) {\n        return -(Math.atan2((endPointY - startPointY), (endPointX - startPointX)) * (180 / Math.PI));\n    };\n    PdfLineAnnotation.prototype._calculateLineBounds = function (linePoints, leaderLineExt, leaderLine, leaderOffset, lineStyle, borderWidth) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (linePoints && linePoints.length === 4) {\n            var angle = this._getAngle(linePoints);\n            var leaderLines = 0;\n            var lineAngle = 0;\n            if (leaderLine < 0) {\n                leaderLines = -(leaderLine);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLines = leaderLine;\n                lineAngle = angle;\n            }\n            var x1y1 = [linePoints[0], linePoints[1]];\n            var x2y2 = [linePoints[2], linePoints[3]];\n            if (leaderOffset !== 0) {\n                var offsetPoint1 = this._getAxisValue(x1y1, (lineAngle + 90), leaderOffset);\n                var offsetPoint2 = this._getAxisValue(x2y2, (lineAngle + 90), leaderOffset);\n                linePoints[0] = offsetPoint1[0];\n                linePoints[1] = offsetPoint1[1];\n                linePoints[2] = offsetPoint2[0];\n                linePoints[3] = offsetPoint2[1];\n            }\n            var startingPoint = this._getAxisValue(x1y1, (lineAngle + 90), leaderLines + leaderOffset);\n            var endingPoint = this._getAxisValue(x2y2, (lineAngle + 90), leaderLines + leaderOffset);\n            var beginLineLeader = this._getAxisValue(x1y1, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var endLineLeader = this._getAxisValue(x2y2, (lineAngle + 90), leaderLineExt + leaderLines + leaderOffset);\n            var beginLinePoint = this._getLinePoint(lineStyle.begin, borderWidth);\n            var endLinePoint = this._getLinePoint(lineStyle.end, borderWidth);\n            var widthX = [];\n            var heightY = [];\n            if ((lineAngle >= 45 && lineAngle <= 135) || (lineAngle >= 225 && lineAngle <= 315)) {\n                widthX[0] = beginLinePoint.y;\n                heightY[0] = beginLinePoint.x;\n                widthX[1] = endLinePoint.y;\n                heightY[1] = endLinePoint.x;\n            }\n            else {\n                widthX[0] = beginLinePoint.x;\n                heightY[0] = beginLinePoint.y;\n                widthX[1] = endLinePoint.x;\n                heightY[1] = endLinePoint.y;\n            }\n            var width = Math.max(widthX[0], widthX[1]);\n            var height = Math.max(heightY[0], heightY[1]);\n            if (width === 0) {\n                width = 1;\n            }\n            if (height === 0) {\n                height = 1;\n            }\n            if (startingPoint[0] === Math.min(startingPoint[0], endingPoint[0])) {\n                startingPoint[0] -= width * borderWidth;\n                endingPoint[0] += width * borderWidth;\n                startingPoint[0] = Math.min(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.min(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.max(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.max(endingPoint[0], endLineLeader[0]);\n            }\n            else {\n                startingPoint[0] += width * borderWidth;\n                endingPoint[0] -= width * borderWidth;\n                startingPoint[0] = Math.max(startingPoint[0], linePoints[0]);\n                startingPoint[0] = Math.max(startingPoint[0], beginLineLeader[0]);\n                endingPoint[0] = Math.min(endingPoint[0], linePoints[2]);\n                endingPoint[0] = Math.min(endingPoint[0], endLineLeader[0]);\n            }\n            if (startingPoint[1] === Math.min(startingPoint[1], endingPoint[1])) {\n                startingPoint[1] -= height * borderWidth;\n                endingPoint[1] += height * borderWidth;\n                startingPoint[1] = Math.min(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.min(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.max(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.max(endingPoint[1], endLineLeader[1]);\n            }\n            else {\n                startingPoint[1] += height * borderWidth;\n                endingPoint[1] -= height * borderWidth;\n                startingPoint[1] = Math.max(startingPoint[1], linePoints[1]);\n                startingPoint[1] = Math.max(startingPoint[1], beginLineLeader[1]);\n                endingPoint[1] = Math.min(endingPoint[1], linePoints[3]);\n                endingPoint[1] = Math.min(endingPoint[1], endLineLeader[1]);\n            }\n            bounds = this._getBounds([{ x: startingPoint[0], y: startingPoint[1] }, { x: endingPoint[0], y: endingPoint[1] }]);\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._getLinePoint = function (style, borderWidth) {\n        var point = { x: 0, y: 0 };\n        if (style) {\n            switch (style) {\n                case PdfLineEndingStyle.square:\n                case PdfLineEndingStyle.circle:\n                case PdfLineEndingStyle.diamond:\n                    point.x = 3;\n                    point.y = 3;\n                    break;\n                case PdfLineEndingStyle.openArrow:\n                case PdfLineEndingStyle.closedArrow:\n                    point.x = 1;\n                    point.y = 5;\n                    break;\n                case PdfLineEndingStyle.rOpenArrow:\n                case PdfLineEndingStyle.rClosedArrow:\n                    point.x = 9 + (borderWidth / 2);\n                    point.y = 5 + (borderWidth / 2);\n                    break;\n                case PdfLineEndingStyle.slash:\n                    point.x = 5;\n                    point.y = 9;\n                    break;\n                case PdfLineEndingStyle.butt:\n                    point.x = 1;\n                    point.y = 3;\n                    break;\n                default:\n                    point.x = 0;\n                    point.y = 0;\n                    break;\n            }\n        }\n        return point;\n    };\n    PdfLineAnnotation.prototype._getBounds = function (points) {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (points.length > 0) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; ++i) {\n                var point = points[Number.parseInt(i.toString(), 10)];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds.x = xmin;\n            bounds.y = ymin;\n            bounds.width = xmax - xmin;\n            bounds.height = ymax - ymin;\n        }\n        return bounds;\n    };\n    PdfLineAnnotation.prototype._obtainLineBounds = function () {\n        var bounds = this.bounds;\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var leaderOffset = this._dictionary.has('LLO') ? this.leaderOffset : 0;\n            var leaderExt = this._dictionary.has('LLE') ? this.leaderExt : 0;\n            var leaderLine = this._dictionary.has('LL') ? this.leaderLine : 0;\n            bounds = this._calculateLineBounds(this._linePoints, leaderExt, leaderLine, leaderOffset, this.lineEndingStyle, this.border.width);\n            bounds = { x: bounds.x - 8, y: bounds.y - 8, width: (bounds.width + 2 * 8), height: (bounds.height + 2 * 8) };\n        }\n        return [bounds.x, bounds.y, bounds.width, bounds.height];\n    };\n    PdfLineAnnotation.prototype._createAppearance = function () {\n        var template = new PdfTemplate(this._obtainLineBounds(), this._crossReference);\n        var parameter = new _PaintParameter();\n        _setMatrix(template, 0);\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var pen = new PdfPen(typeof this.color !== 'undefined' ? this._color : [0, 0, 0], this.border.width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n            pen._dashPattern = [3, 1];\n        }\n        else if (this.border.style === PdfBorderStyle.dot) {\n            pen._dashStyle = PdfDashStyle.dot;\n            pen._dashPattern = [1, 1];\n        }\n        parameter.borderPen = pen;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var brush;\n        if (this.innerColor) {\n            brush = new PdfBrush(this._innerColor);\n        }\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        if (!this.text && !this._dictionary.has('Contents')) {\n            this.text = this.subject;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var lineWidth = 0;\n        if (this.caption.cap) {\n            lineWidth = font.measureString(this.text ? this.text : '', [0, 0], format, 0, 0)[0]; //66.71001;\n        }\n        if (typeof this.linePoints !== 'undefined' && this._linePoints.length === 4) {\n            var angle = this._getAngle(this._linePoints);\n            var leaderLine = 0;\n            var lineAngle = 0;\n            var leaderLineValue = this.leaderLine;\n            if (leaderLineValue === null || typeof leaderLineValue === 'undefined') {\n                this._leaderLine = 0;\n                leaderLineValue = 0;\n            }\n            if (leaderLineValue < 0) {\n                leaderLine = -(leaderLineValue);\n                lineAngle = angle + 180;\n            }\n            else {\n                leaderLine = leaderLineValue;\n                lineAngle = angle;\n            }\n            var offset = (typeof this.leaderOffset !== 'undefined') ? (leaderLine + this.leaderOffset) : leaderLine;\n            var startPoint = this._getAxisValue([this._linePoints[0], this._linePoints[1]], (lineAngle + 90), offset);\n            var endPoint = this._getAxisValue([this._linePoints[2], this._linePoints[3]], (lineAngle + 90), offset);\n            var lineDistance = (Math.sqrt(Math.pow((endPoint[0] - startPoint[0]), 2) +\n                Math.pow((endPoint[1] - startPoint[1]), 2)));\n            var centerWidth = lineDistance / 2 - ((lineWidth / 2) + this.border.width);\n            var first = this._getAxisValue(startPoint, angle, centerWidth);\n            var second = this._getAxisValue(endPoint, (angle + 180), centerWidth);\n            var start = (this.lineEndingStyle.begin === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.begin === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(startPoint, angle, this.border.width) :\n                startPoint;\n            var end = (this.lineEndingStyle.end === PdfLineEndingStyle.openArrow ||\n                this.lineEndingStyle.end === PdfLineEndingStyle.closedArrow) ?\n                this._getAxisValue(endPoint, angle, -this.border.width) :\n                endPoint;\n            if (this.opacity && this._opacity < 1) {\n                var state = graphics.save();\n                graphics.setTransparency(this._opacity);\n                this._drawLine(graphics, pen, start, end, first, second);\n                graphics.restore(state);\n            }\n            else {\n                this._drawLine(graphics, pen, start, end, first, second);\n            }\n            this._drawLineStyle(startPoint, endPoint, graphics, angle, pen, brush, this.lineEndingStyle, this.border.width);\n            var leaderExt = (typeof this.leaderExt !== 'undefined' ? this._leaderExt : 0);\n            var beginLineExt = this._getAxisValue(startPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLineExt[0], -beginLineExt[1]);\n            var endLineExt = this._getAxisValue(endPoint, (lineAngle + 90), leaderExt);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLineExt[0], -endLineExt[1]);\n            var beginLeaderLine = this._getAxisValue(startPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, startPoint[0], -startPoint[1], beginLeaderLine[0], -beginLeaderLine[1]);\n            var endLeaderLine = this._getAxisValue(endPoint, (lineAngle - 90), leaderLine);\n            graphics.drawLine(pen, endPoint[0], -endPoint[1], endLeaderLine[0], -endLeaderLine[1]);\n            var midpoint = lineDistance / 2;\n            var centerPoint = this._getAxisValue(startPoint, angle, midpoint);\n            var captionPosition = void 0;\n            var height = font._metrics._getHeight();\n            if (this.caption.type === PdfLineCaptionType.top) {\n                if (this._measure) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 2 * height);\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), height);\n                }\n            }\n            else {\n                if (this._measure) {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), 3 * (height / 2));\n                }\n                else {\n                    captionPosition = this._getAxisValue(centerPoint, (angle + 90), (height / 2));\n                }\n            }\n            graphics.translateTransform(captionPosition[0], -captionPosition[1]);\n            graphics.rotateTransform(-angle);\n            if (this.caption.cap) {\n                graphics.drawString(this.text, font, [(-lineWidth / 2), 0, 0, 0], null, parameter.foreBrush);\n            }\n            graphics.restore();\n            var bounds = this._obtainLineBounds();\n            var rectangleBounds = _fromRectangle({ x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] });\n            this.bounds = { x: rectangleBounds[0], y: rectangleBounds[1], width: rectangleBounds[2], height: rectangleBounds[3] };\n            if ((!this.measure) && (!this._dictionary.has('Measure'))) {\n                this._dictionary.update('Rect', [rectangleBounds[0], rectangleBounds[1], rectangleBounds[2], rectangleBounds[3]]);\n            }\n        }\n        return template;\n    };\n    PdfLineAnnotation.prototype._drawLine = function (graphics, pen, start, end, first, second) {\n        if (typeof this.text === 'undefined' ||\n            this._text === '' ||\n            this.caption.type === PdfLineCaptionType.top ||\n            (!this.caption.cap && this.caption.type === PdfLineCaptionType.inline)) {\n            graphics.drawLine(pen, start[0], -start[1], end[0], -end[1]);\n        }\n        else {\n            graphics.drawLine(pen, start[0], -start[1], first[0], -first[1]);\n            graphics.drawLine(pen, end[0], -end[1], second[0], -second[1]);\n        }\n    };\n    PdfLineAnnotation.prototype._convertToUnit = function () {\n        var points = this._obtainLinePoints();\n        var data = new Array(points.length / 2);\n        var count = 0;\n        for (var j = 0; j < points.length; j = j + 2) {\n            data[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], (points[j + 1])];\n            count++;\n        }\n        var distance = Math.sqrt(Math.pow((data[1][0] - data[0][0]), 2) + Math.pow((data[1][1] - data[0][1]), 2));\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        return (new _PdfUnitConvertor())._convertUnits(distance, _PdfGraphicsUnit.point, value.graphicsUnit);\n    };\n    PdfLineAnnotation.prototype._obtainLinePoints = function () {\n        var points = [];\n        if (this.linePoints) {\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return points;\n    };\n    return PdfLineAnnotation;\n}(PdfComment));\nexport { PdfLineAnnotation };\n/**\n * `PdfCircleAnnotation` class represents the circle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new circle annotation with circle bounds\n * const annotation: PdfCircleAnnotation = new PdfCircleAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfCircleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfCircleAnnotation, _super);\n    function PdfCircleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._measureType = PdfCircleMeasurementType.diameter;\n        _this._unitString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.circleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the circle annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the flag to have measurement dictionary of the circle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the flag to have measurement dictionary of the circle annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined' || this._isLoaded) {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCircleAnnotation.prototype, \"measureType\", {\n        /**\n         * Gets the measurement type of the annotation.\n         *\n         * @returns {PdfCircleMeasurementType} Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Gets the measurement type of the annotation.\n         * let type: PdfCircleMeasurementType = annotation.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Contents')) {\n                var text = this._dictionary.get('Contents');\n                this._unitString = text.substring(text.length - 2);\n                this._unit = _mapMeasurementUnit(this._unitString);\n                var value = text.substring(0, text.length - 2);\n                var converter = new _PdfUnitConvertor();\n                var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, _mapGraphicsUnit(this._unitString));\n                if (radius.toString() === value) {\n                    this._measureType = PdfCircleMeasurementType.radius;\n                }\n                else {\n                    this._measureType = PdfCircleMeasurementType.diameter;\n                }\n            }\n            return this._measureType;\n        },\n        /**\n         * Sets the measurement type of the annotation.\n         *\n         * @param {PdfCircleMeasurementType} value Measurement type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfCircleAnnotation = page.annotations.at(0) as PdfCircleAnnotation;\n         * // Sets the measurement type of the annotation.\n         * annotation.type = PdfCircleMeasurementType.diameter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._measureType = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCircleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfCircleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfCircleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfCircleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n        }\n        else {\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n        }\n    };\n    PdfCircleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createCircleMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary !== null && typeof dictionary !== 'undefined' && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && isFlatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_1 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_1, appearance);\n                this._dictionary.update('AP', reference_1);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfCircleAnnotation.prototype._createCircleMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._convertToUnit();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var color = this.color ? this.color : [0, 0, 0];\n        var borderPen = new PdfPen(color, borderWidth);\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        if (this.innerColor) {\n            parameter.backBrush = new PdfBrush(this._innerColor);\n        }\n        parameter.foreBrush = new PdfBrush(color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.save();\n        graphics.drawEllipse(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(color, this.border.width));\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[3] / 2) - (fontsize[0] / 2);\n            graphics.drawLine(parameter.borderPen, 0, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        else {\n            graphics.save();\n            graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n            var x = (nativeRectangle[2] / 2) + ((nativeRectangle[2] / 4) - (fontsize[0] / 2));\n            graphics.drawLine(parameter.borderPen, nativeRectangle[2] / 2, -nativeRectangle[3] / 2, nativeRectangle[0] + nativeRectangle[2], -nativeRectangle[3] / 2);\n            graphics.translateTransform(x, -(nativeRectangle[3] / 2) - font._metrics._getHeight());\n            graphics.drawString(area.toFixed(2) + ' ' + this._unitString, font, [0, 0, 0, 0], null, parameter.foreBrush);\n            graphics.restore();\n        }\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            graphics._template._content.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, graphics._template._content);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            this._dictionary.update('Subtype', new _PdfName('Circle'));\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' ' + this._unitString);\n            }\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n        }\n        return template;\n    };\n    PdfCircleAnnotation.prototype._convertToUnit = function () {\n        var converter = new _PdfUnitConvertor();\n        var value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n        this._unitString = value.unitString;\n        var radius = converter._convertUnits(this.bounds.width / 2, _PdfGraphicsUnit.point, value.graphicsUnit);\n        if (this._measureType === PdfCircleMeasurementType.diameter) {\n            radius = 2 * radius;\n        }\n        return radius;\n    };\n    return PdfCircleAnnotation;\n}(PdfComment));\nexport { PdfCircleAnnotation };\n/**\n * `PdfEllipseAnnotation` class represents the ellipse annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ellipse annotation with bounds\n * const annotation: PdfEllipseAnnotation = new PdfEllipseAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfEllipseAnnotation = /** @class */ (function (_super) {\n    __extends(PdfEllipseAnnotation, _super);\n    function PdfEllipseAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Circle'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.ellipseAnnotation;\n        return _this;\n    }\n    PdfEllipseAnnotation._load = function (page, dictionary) {\n        var annot = new PdfEllipseAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfEllipseAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfEllipseAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createCircleAppearance();\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfEllipseAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createCircleAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createCircleAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_2 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_2, appearance);\n                this._dictionary.update('AP', reference_2);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    return PdfEllipseAnnotation;\n}(PdfComment));\nexport { PdfEllipseAnnotation };\n/**\n * `PdfSquareAnnotation` class represents the square annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfSquareAnnotation = new PdfSquareAnnotation(10, 10, 100, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSquareAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSquareAnnotation, _super);\n    function PdfSquareAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._unit = PdfMeasurementUnit.centimeter;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.squareAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the square annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the border effect of the square annotation.\n         * let borderEffect : PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the square annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the border effect of the square annotation.\n         * annotation.borderEffect.intensity = 1;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the Square annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the flag to have measurement dictionary of the square annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the flag to have measurement dictionary of the square annotation.\n         * annotation.measure = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                if (!this._isLoaded) {\n                    this._measure = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSquareAnnotation.prototype, \"unit\", {\n        /**\n         * Gets the measurement unit of the annotation.\n         *\n         * @returns {PdfMeasurementUnit} Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the measurement unit of the annotation.\n         * let unit: PdfMeasurementUnit = annotation.unit;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._unit === 'undefined') {\n                this._unit = PdfMeasurementUnit.centimeter;\n                if (this._dictionary.has('Contents')) {\n                    var text = this._dictionary.get('Contents');\n                    this._unitString = text.substring(text.length - 2);\n                    this._unit = _mapMeasurementUnit(this._unitString);\n                }\n            }\n            return this._unit;\n        },\n        /**\n         * Sets the measurement unit of the annotation.\n         *\n         * @param {PdfMeasurementUnit} value Measurement unit.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Sets the measurement unit of the annotation.\n         * annotation.unit = PdfMeasurementUnit.centimeter;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._measure) {\n                if (!this._isLoaded && typeof value !== 'undefined') {\n                    this._unit = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfSquareAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSquareAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSquareAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSquareAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._measure) {\n            this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n        }\n        else {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            this._dictionary.update('Rect', _updateBounds(this));\n            if (typeof this._intensity === 'undefined' &&\n                typeof this._borderEffect !== 'undefined' &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.set('I', this.borderEffect._intensity);\n                if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                    dictionary.set('S', _PdfName.get('C'));\n                }\n                this._dictionary.update('BE', dictionary);\n            }\n        }\n    };\n    PdfSquareAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._dictionary.has('Measure')) {\n                    this._appearanceTemplate = this._createSquareMeasureAppearance(isFlatten);\n                }\n                else {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && !this.measure) {\n            if (this._isLoaded && !this._dictionary.has('Measure')) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n        if (!isFlatten && this._setAppearance && !this.measure) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_3 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_3, appearance);\n                this._dictionary.update('AP', reference_3);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfSquareAnnotation.prototype._createSquareMeasureAppearance = function (_isFlatten) {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var area = this._calculateAreaOfSquare();\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var str = area.toFixed(2) + ' sq ' + this._unitString;\n        var fontsize = font.measureString(str, [0, 0], format, 0, 0);\n        var borderPen = new PdfPen(this.color, borderWidth);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        var nativeRectangle = [this.bounds.x,\n            (this.bounds.y + this.bounds.height),\n            this.bounds.width,\n            this.bounds.height];\n        var appearanceBounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, appearanceBounds);\n        nativeRectangle[1] = nativeRectangle[1] - nativeRectangle[3];\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        var parameter = new _PaintParameter();\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        parameter.borderPen = borderPen;\n        parameter.backBrush = backBrush;\n        parameter.foreBrush = new PdfBrush(this.color);\n        var rect = [nativeRectangle[0],\n            -nativeRectangle[1] - nativeRectangle[3],\n            nativeRectangle[2],\n            nativeRectangle[3]];\n        graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - borderWidth, rect[3] - borderWidth, new PdfPen(this.color, this.border.width));\n        graphics.save();\n        graphics.translateTransform(nativeRectangle[0], -nativeRectangle[1]);\n        var x = (nativeRectangle[2] / 2) - (fontsize[0] / 2);\n        var y = (nativeRectangle[3] / 2) - (fontsize[1] / 2);\n        graphics.translateTransform(x, -y - font._metrics._getHeight());\n        graphics.drawString((area.toFixed(2) + ' sq ' + this._unitString), font, [0, 0, 0, 0], null, parameter.foreBrush);\n        graphics.restore();\n        if ((typeof _isFlatten !== 'undefined' && !_isFlatten) || !this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dic = new _PdfDictionary();\n            var tem = graphics._template._content;\n            tem.dictionary._updated = true;\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, tem);\n            graphics._template._content.reference = ref;\n            dic.set('N', ref);\n            dic._updated = true;\n            this._dictionary.set('AP', dic);\n            var nativeRectangle1 = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n            var size = this._page.size;\n            nativeRectangle1[1] = size[1] - (this.bounds.y + this.bounds.height);\n            nativeRectangle1[2] = (this.bounds.x + this.bounds.width);\n            nativeRectangle1[3] = size[1] - this.bounds.y;\n            if (this._isBounds) {\n                nativeRectangle = nativeRectangle1;\n            }\n            if (this._page._isNew && this._page._pageSettings) {\n                nativeRectangle1 = _updateBounds(this);\n            }\n            this._dictionary.update('Rect', [nativeRectangle1[0], nativeRectangle1[1], nativeRectangle1[2], nativeRectangle1[3]]);\n            if (this._dictionary.has('Measure')) {\n                _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n            }\n            var reference = this._crossReference._getNextReference();\n            var measureDictionary = this._createMeasureDictionary(this._unitString);\n            this._crossReference._cacheMap.set(reference, measureDictionary);\n            measureDictionary._updated = true;\n            this._dictionary.update('Measure', reference);\n            var ds = 'font:' +\n                font._metrics._postScriptName +\n                ' ' +\n                font._size +\n                'pt; color:' +\n                this._colorToHex(this.color);\n            this._dictionary.update('DS', ds);\n            if (this._text && this._text !== '') {\n                this._dictionary.update('Contents', this._text + ' ' + area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            else {\n                this._dictionary.update('Contents', area.toFixed(2) + ' sq ' + this._unitString);\n            }\n            this._dictionary.update('Subject', ('Area Measurement'));\n            if (typeof this.subject === 'undefined') {\n                this._dictionary.update('Subject', ('Area Measurement'));\n            }\n            this._dictionary.update('MeasurementTypes', 129);\n            this._dictionary.update('Subtype', new _PdfName('Square'));\n            this._dictionary.update('IT', new _PdfName('SquareDimension'));\n            var elements = this._dictionary.getArray('Rect');\n            var vertices = new Array(elements.length * 2);\n            vertices[0] = elements[0];\n            vertices[1] = elements[3];\n            vertices[2] = elements[0];\n            vertices[3] = elements[1];\n            vertices[4] = elements[2];\n            vertices[5] = elements[1];\n            vertices[6] = elements[2];\n            vertices[7] = elements[3];\n            this._dictionary.update('Vertices', vertices);\n        }\n        return template;\n    };\n    PdfSquareAnnotation.prototype._calculateAreaOfSquare = function () {\n        var area;\n        var converter = new _PdfUnitConvertor();\n        var value;\n        if (this.bounds.width === this.bounds.height) {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * width;\n        }\n        else {\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var width = converter._convertUnits(this.bounds.width, _PdfGraphicsUnit.point, value.graphicsUnit);\n            value = this._getEqualPdfGraphicsUnit(this.unit, this._unitString);\n            this._unitString = value.unitString;\n            var height = converter._convertUnits(this.bounds.height, _PdfGraphicsUnit.point, value.graphicsUnit);\n            area = width * height;\n        }\n        return area;\n    };\n    return PdfSquareAnnotation;\n}(PdfComment));\nexport { PdfSquareAnnotation };\n/**\n * `PdfRectangleAnnotation` class represents the rectangle annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new square annotation with bounds\n * const annotation: PdfRectangleAnnotation = new PdfRectangleAnnotation(10, 10, 200, 100);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRectangleAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRectangleAnnotation, _super);\n    function PdfRectangleAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Square'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rectangleAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the rectangle annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Gets the border effect of the rectangle annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the rectangle annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRectangleAnnotation = page.annotations.at(0) as PdfRectangleAnnotation;\n         * // Sets the border effect of rectangle annotation.\n         * annotation. borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRectangleAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRectangleAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRectangleAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRectangleAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n        }\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfRectangleAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRectangleAppearance(this.borderEffect);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (isNormalMatrix && this._page && this._page.rotation !== PdfRotationAngle.angle0 ||\n                this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_4 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_4, appearance);\n                this._dictionary.update('AP', reference_4);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfRectangleAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._page.annotations.remove(this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    return PdfRectangleAnnotation;\n}(PdfComment));\nexport { PdfRectangleAnnotation };\n/**\n * `PdfPolygonAnnotation` class represents the polygon annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new polygon annotation with bounds\n * const annotation: PdfPolygonAnnotation = new PdfPolygonAnnotation([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolygonAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolygonAnnotation, _super);\n    function PdfPolygonAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Polygon'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        _this._type = _PdfAnnotationType.polygonAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"borderEffect\", {\n        /**\n         * Gets the border effect of the polygon annotation.\n         *\n         * @returns {PdfBorderEffect} Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the border effect of the polygon annotation.\n         * let borderEffect: PdfBorderEffect = annotation.borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderEffect === 'undefined') {\n                var value = new PdfBorderEffect();\n                value._dictionary = this._dictionary;\n                if (this._dictionary.has('BE')) {\n                    var dictionary = this._dictionary.get('BE');\n                    value._intensity = dictionary.get('I');\n                    value._style = _mapBorderEffectStyle(dictionary.get('S').name);\n                }\n                this._borderEffect = value;\n            }\n            return this._borderEffect;\n        },\n        /**\n         * Sets the border effect of the polygon annotation.\n         *\n         * @param {PdfBorderEffect} value Border effect.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the border effect of the polygon annotation\n         * annotation.borderEffect.style = PdfBorderEffectStyle.cloudy ;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._borderEffect = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolygonAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the polygon annotation.\n         *\n         * @returns {number} Line extension.\n         *  ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Gets the line extension of the polygon annotation\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the polygon annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolygonAnnotation = page.annotations.at(0) as PdfPolygonAnnotation;\n         * // Sets the line extension of the polygon annotation\n         * annotation.lineExtension = 5;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfPolygonAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolygonAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolygonAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolygonAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dic);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var array = [];\n        for (var i = 0; i < this._points.length; i++) {\n            var value = this._points[Number.parseInt(i.toString(), 10)];\n            array.push(value);\n        }\n        this._points = this._getPoints(this._points);\n        if (array[0] !== array[array.length - 2] || array[1] !== array[array.length - 1]) {\n            this._points.push(this._points[0]);\n            this._points.push(this._points[1]);\n        }\n        var polygonBounds = this._getBoundsValue(this._points);\n        var bounds = [polygonBounds.x,\n            polygonBounds.y,\n            polygonBounds.x + polygonBounds.width,\n            polygonBounds.y + polygonBounds.height];\n        this._dictionary.update('Rect', bounds);\n        this._dictionary.update('LLE', this._lineExtension);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n        }\n        this._dictionary.update('Vertices', this._points);\n        if (typeof this._intensity === 'undefined' &&\n            typeof this._borderEffect !== 'undefined' &&\n            this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n            var dic = new _PdfDictionary(this._crossReference);\n            dic.set('I', this.borderEffect._intensity);\n            if (this.borderEffect._style === PdfBorderEffectStyle.cloudy) {\n                dic.set('S', _PdfName.get('C'));\n            }\n            this._dictionary.update('BE', dic);\n        }\n    };\n    PdfPolygonAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolygonAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (this._dictionary.has('AP')) {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box && box.length >= 2) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._page.annotations.remove(this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_5 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_5, appearance);\n                this._dictionary.update('AP', reference_5);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolygonAnnotation.prototype._createPolygonAppearance = function (flatten) {\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.color && this.border.width > 0) {\n                borderPen = new PdfPen(this.color, this.border.width);\n            }\n            var backgroundBrush = void 0;\n            if (this.innerColor) {\n                backgroundBrush = new PdfBrush(this.innerColor);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen || backgroundBrush) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                if (this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                    var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                    var graphicsPath = new PdfPath();\n                    graphicsPath.addPolygon(this._getLinePoints());\n                    this._drawCloudStyle(graphics, backgroundBrush, borderPen, radius, 0.833, graphicsPath._points, false);\n                }\n                else {\n                    graphics.drawPolygon(this._getLinePoints(), borderPen, backgroundBrush);\n                }\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    graphics.restore(state);\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            if (typeof this._borderEffect !== 'undefined' &&\n                typeof this.borderEffect.intensity !== 'undefined' && this.borderEffect.intensity !== 0 &&\n                this._borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                rect.x = boundsValue.x - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.y = boundsValue.y - (this.borderEffect.intensity * 5) - this.border.width;\n                rect.width = boundsValue.width + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n                rect.height = boundsValue.height + (this.borderEffect.intensity * 10) + (2 * this.border.width);\n            }\n            else {\n                rect.x = boundsValue.x - this.border.width;\n                rect.y = boundsValue.y - this.border.width;\n                rect.width = boundsValue.width + (2 * this.border.width);\n                rect.height = boundsValue.height + (2 * this.border.width);\n            }\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && this.color) {\n                parameter.borderPen = new PdfPen(this._color, this.border.width);\n            }\n            if (this.color) {\n                parameter.foreBrush = new PdfBrush(this._color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            if (_isNullOrUndefined(this.borderEffect) && _isNullOrUndefined(this.borderEffect.intensity) &&\n                this.borderEffect.intensity !== 0 && this.borderEffect.style === PdfBorderEffectStyle.cloudy) {\n                var radius = this.borderEffect.intensity * 4 + 0.5 * this.border.width;\n                var graphicsPath = new PdfPath();\n                graphicsPath.addPolygon(this._getLinePoints());\n                this._drawCloudStyle(graphics, parameter.backBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, false);\n            }\n            else {\n                graphics.drawPolygon(this._getLinePoints(), parameter.borderPen, parameter.backBrush);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolygonAnnotation.prototype._getLinePoints = function () {\n        var polygonPoints;\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var pageWidth = pageSize[0];\n        if (this._dictionary.has('Vertices') && !this._isBounds) {\n            var rotation = void 0;\n            if (this._page._pageDictionary.has('Rotate')) {\n                rotation = this._page._pageDictionary.get('Rotate');\n            }\n            if (this._page && this._page.rotation) {\n                if (this._page.rotation === PdfRotationAngle.angle90) {\n                    rotation = 90;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle180) {\n                    rotation = 180;\n                }\n                else if (this._page.rotation === PdfRotationAngle.angle270) {\n                    rotation = 270;\n                }\n            }\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                var points_1 = [];\n                linePoints.forEach(function (value) {\n                    points_1.push(value);\n                });\n                polygonPoints = [];\n                for (var j = 0; j < points_1.length; j = j + 2) {\n                    if (this.flatten) {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], (pageHeight - points_1[j + 1])]);\n                    }\n                    else {\n                        polygonPoints.push([points_1[Number.parseInt(j.toString(), 10)], -points_1[j + 1]]);\n                    }\n                }\n                if (rotation) {\n                    if (rotation === 270) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageWidth - x;\n                        }\n                    }\n                    else if (rotation === 90) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            if (this._page._origin[1] !== 0) {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    (polygonPoints[Number.parseInt(k.toString(), 10)][1] - pageHeight);\n                            }\n                            else {\n                                polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageHeight -\n                                    polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                            }\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = x;\n                        }\n                    }\n                    else if (rotation === 180) {\n                        for (var k = 0; k < polygonPoints.length; k++) {\n                            var x = polygonPoints[Number.parseInt(k.toString(), 10)][0];\n                            polygonPoints[Number.parseInt(k.toString(), 10)][0] = pageWidth - x;\n                            polygonPoints[Number.parseInt(k.toString(), 10)][1] = pageHeight -\n                                polygonPoints[Number.parseInt(k.toString(), 10)][1];\n                        }\n                    }\n                }\n            }\n        }\n        else if (this._points) {\n            var points_2 = [];\n            this._points.forEach(function (value) {\n                points_2.push(value);\n            });\n            polygonPoints = [];\n            for (var j = 0; j < this._points.length; j = j + 2) {\n                if (this.flatten) {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], (pageHeight - points_2[j + 1])]);\n                }\n                else {\n                    polygonPoints.push([points_2[Number.parseInt(j.toString(), 10)], -points_2[j + 1]]);\n                }\n            }\n        }\n        return polygonPoints;\n    };\n    return PdfPolygonAnnotation;\n}(PdfComment));\nexport { PdfPolygonAnnotation };\n/**\n * `PdfPolyLineAnnotation` class represents the polyline annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new poly line annotation with bounds\n * const annotation: PdfPolyLineAnnotation = new PdfPolyLineAnnotation ([100, 300, 150, 200, 300, 200, 350, 300, 300, 400, 150, 400]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPolyLineAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPolyLineAnnotation, _super);\n    function PdfPolyLineAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._beginLine = PdfLineEndingStyle.none;\n        _this._endLine = PdfLineEndingStyle.none;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n        }\n        else {\n            _this._points = [];\n        }\n        _this._type = _PdfAnnotationType.polyLineAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"beginLineStyle\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let beginLineStyle: PdfLineEndingStyle = annotation.beginLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._beginLine = _mapLineEndingStyle(lineStyles[0].name);\n                }\n            }\n            return this._beginLine;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the begin line ending style of the annotation.\n         * annotation.beginLineStyle = PdfLineEndingStyle.slash;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._beginLine) {\n                this._beginLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"endLineStyle\", {\n        /**\n         * Gets the end line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let endLineStyle: PdfLineEndingStyle = annotation.endLineStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('LE')) {\n                var lineStyles = this._dictionary.getArray('LE');\n                if (lineStyles && Array.isArray(lineStyles)) {\n                    this._endLine = _mapLineEndingStyle(lineStyles[1].name);\n                }\n            }\n            return this._endLine;\n        },\n        /**\n         * Sets the end line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the end line ending style of the annotation.\n         * annotation.endLineStyle = PdfLineEndingStyle.square;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._endLine) {\n                this._endLine = value;\n                if (this._dictionary) {\n                    var lineStyle = [];\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                    lineStyle.push(_PdfName.get(_reverseMapEndingStyle(value)));\n                    this._dictionary.update('LE', lineStyle);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPolyLineAnnotation.prototype, \"lineExtension\", {\n        /**\n         * Gets the line extension of the square annotation.\n         *\n         * @returns {number} Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Gets the line extension of annotation.\n         * let lineExtension: number = annotation.lineExtension;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._lineExtension === 'undefined' && this._dictionary.has('LLE')) {\n                var lineExt = this._dictionary.get('LLE');\n                if (typeof lineExt !== 'undefined' && lineExt >= 0) {\n                    this._lineExtension = lineExt;\n                }\n            }\n            return this._lineExtension;\n        },\n        /**\n         * Sets the line extension of the square annotation.\n         *\n         * @param {number} value Line extension.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPolyLineAnnotation = page.annotations.at(0) as PdfPolyLineAnnotation;\n         * // Sets the line extension of the annotation.\n         * annotation.lineExtension = 3;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!Number.isNaN(value)) {\n                if (value >= 0) {\n                    this._dictionary.update('LLE', value);\n                    this._lineExtension = value;\n                }\n                else {\n                    throw new Error('LineExtension should be non negative number');\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPolyLineAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPolyLineAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfPolyLineAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPolyLineAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        if (!this._dictionary.has('LLE')) {\n            this.lineExtension = 0;\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var points = this._getLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        this._polylinePoints = points;\n        this._pathTypes = pathTypes;\n        var path = new PdfPath();\n        path._points = points;\n        path._pathTypes = pathTypes;\n        this._dictionary.update('Vertices', this._points);\n        var lineStyle = [];\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n        lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n        this._dictionary.update('LE', lineStyle);\n        this._dictionary.update('LLE', this._lineExtension);\n        var polyLineBounds = this._getBoundsValue(this._points);\n        var rectangle = [polyLineBounds.x,\n            polyLineBounds.y,\n            polyLineBounds.x + polyLineBounds.width,\n            polyLineBounds.y + polyLineBounds.height];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n            this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._flatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createPolyLineAppearance(isFlatten);\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        var reference = dictionary.getRaw('N');\n                        if (appearanceStream) {\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n        }\n        if (isFlatten) {\n            if (this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else {\n                this._page.annotations.remove(this);\n            }\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_6 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_6, appearance);\n                this._dictionary.update('AP', reference_6);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfPolyLineAnnotation.prototype._createPolyLineAppearance = function (flatten) {\n        var color = this.color ? this.color : [0, 0, 0];\n        if (typeof flatten !== 'undefined' && flatten) {\n            var borderPen = void 0;\n            if (this.border.width > 0) {\n                borderPen = new PdfPen(color, this.border.width);\n            }\n            var graphics = this._page.graphics;\n            if (borderPen) {\n                var state = void 0;\n                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                    state = graphics.save();\n                    graphics.setTransparency(this._opacity);\n                }\n                var points = this._getLinePoints();\n                var pathTypes = [];\n                pathTypes.push(0);\n                if (points && points.length > 0) {\n                    for (var i = 1; i < points.length; i++) {\n                        pathTypes.push(1);\n                    }\n                    var path = new PdfPath();\n                    path._points = points;\n                    path._pathTypes = pathTypes;\n                    graphics.drawPath(path, borderPen);\n                    if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                        graphics.restore(state);\n                    }\n                }\n            }\n            return graphics._template;\n        }\n        else {\n            var boundsValue = void 0;\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            if (typeof this._points === 'undefined' && this._dictionary.has('Vertices')) {\n                this._points = this._dictionary.get('Vertices');\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            else {\n                boundsValue = this._getBoundsValue(this._points);\n            }\n            rect.x = boundsValue.x - this.border.width;\n            rect.y = boundsValue.y - this.border.width;\n            rect.width = boundsValue.width + (2 * this.border.width);\n            rect.height = boundsValue.height + (2 * this.border.width);\n            var appearance = new PdfAppearance(this, [rect.x, rect.y, rect.width, rect.height]);\n            appearance.normal = new PdfTemplate([rect.x, rect.y, rect.width, rect.height], this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            var graphics = appearance.normal.graphics;\n            var parameter = new _PaintParameter();\n            if (this.innerColor) {\n                parameter.backBrush = new PdfBrush(this._innerColor);\n            }\n            if (this.border.width > 0 && color) {\n                parameter.borderPen = new PdfPen(color, this.border.width);\n            }\n            if (color) {\n                parameter.foreBrush = new PdfBrush(color);\n            }\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.save();\n                graphics.setTransparency(this._opacity);\n            }\n            else {\n                graphics.save();\n            }\n            var path = new PdfPath();\n            if (typeof this._polylinePoints !== 'undefined' && this._polylinePoints !== null) {\n                path._points = this._polylinePoints;\n            }\n            else {\n                path._points = this._getLinePoints();\n            }\n            if (typeof this._pathTypes !== 'undefined' && this._polylinePoints !== null) {\n                path._pathTypes = this._pathTypes;\n            }\n            else {\n                this._pathTypes = [];\n                this._pathTypes.push(0);\n                for (var i = 1; i < path._points.length; i++) {\n                    this._pathTypes.push(1);\n                }\n                path._pathTypes = this._pathTypes;\n            }\n            graphics.drawPath(path, parameter.borderPen, parameter.backBrush);\n            if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                graphics.restore();\n            }\n            graphics.restore();\n            if (this._isBounds) {\n                template._content.dictionary._updated = true;\n                var lineStyle = [];\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.beginLineStyle)));\n                lineStyle.push(_PdfName.get(_reverseMapEndingStyle(this.endLineStyle)));\n                this._dictionary.update('LE', lineStyle);\n                this._dictionary.update('LLE', this.lineExtension);\n                this._dictionary.update('Vertices', this._points);\n            }\n            this._dictionary.update('Rect', [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height]);\n            return template;\n        }\n    };\n    PdfPolyLineAnnotation.prototype._getLinePoints = function () {\n        var pageSize = this._page.size;\n        var pageHeight = pageSize[1];\n        var points;\n        if (this._dictionary.has('Vertices') && !this._isBounds && (!this._setAppearance || (this._setAppearance && this.flatten))) {\n            var linePoints = this._dictionary.getArray('Vertices');\n            if (linePoints) {\n                points = [];\n                for (var j = 0; j < linePoints.length; j = j + 2) {\n                    points.push([linePoints[Number.parseInt(j.toString(), 10)], (pageHeight - linePoints[j + 1])]);\n                }\n            }\n        }\n        else if (this._points) {\n            this._points = this._getPoints(this._points);\n            var polyLinepoints_1 = [];\n            this._points.forEach(function (value) {\n                polyLinepoints_1.push(value);\n            });\n            points = [];\n            for (var j = 0; j < polyLinepoints_1.length; j = j + 2) {\n                if (this.flatten) {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], (pageHeight - polyLinepoints_1[j + 1])]);\n                }\n                else {\n                    points.push([polyLinepoints_1[Number.parseInt(j.toString(), 10)], -polyLinepoints_1[j + 1]]);\n                }\n            }\n        }\n        return points;\n    };\n    return PdfPolyLineAnnotation;\n}(PdfComment));\nexport { PdfPolyLineAnnotation };\n/**\n * `PdfAngleMeasurementAnnotation` class represents the angle measurement annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new angle measurement annotation\n * const annotation: PdfAngleMeasurementAnnotation = new PdfAngleMeasurementAnnotation([[100, 700], [150, 650], [100, 600]]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAngleMeasurementAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAngleMeasurementAnnotation, _super);\n    function PdfAngleMeasurementAnnotation(points) {\n        var _this = _super.call(this) || this;\n        _this._linePoints = [];\n        _this._firstIntersectionPoint = [0, 0];\n        _this._secondIntersectionPoint = [0, 0];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('PolyLine'));\n        if (typeof points !== 'undefined' && points.length > 0) {\n            if (points.length > 6) {\n                throw new Error('Points length should not be greater than 3');\n            }\n            _this._pointArray = points;\n            for (var i = 0; i < points.length; i++) {\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][0]);\n                _this._linePoints.push(points[Number.parseInt(i.toString(), 10)][1]);\n            }\n        }\n        _this._type = _PdfAnnotationType.angleMeasurementAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAngleMeasurementAnnotation.prototype, \"measure\", {\n        /**\n         * Gets the flag to have measurement dictionary of the angle measurement annotation.\n         *\n         * @returns {boolean} measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Gets the flag to have measurement dictionary of the angle annotation.\n         * let measure: boolean = annotation.measure;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._measure === 'undefined' && this._dictionary.has('Measure')) {\n                this._measure = this._dictionary.get('Measure');\n            }\n            return this._measure;\n        },\n        /**\n         * Sets the flag to add measurement dictionary to the annotation.\n         *\n         * @param {boolean} value Measure.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAngleMeasurementAnnotation = page.annotations.at(0) as PdfAngleMeasurementAnnotation;\n         * // Sets the flag to add measurement dictionary to the annotation.\n         * annotation.measure = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && !this._isLoaded) {\n                this._measure = value;\n                this.caption.cap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAngleMeasurementAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAngleMeasurementAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAngleMeasurementAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAngleMeasurementAnnotation.prototype._postProcess = function () {\n        if (!this._pointArray) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._appearanceTemplate = this._createAngleMeasureAppearance();\n    };\n    PdfAngleMeasurementAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten && this._setAppearance) {\n                this._appearanceTemplate = this._createAngleMeasureAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createAngleMeasureAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n    };\n    PdfAngleMeasurementAnnotation.prototype._createAngleMeasureAppearance = function () {\n        var borderWidth = this.border.width;\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || (!this._isLoaded && font.size === 1)) {\n            font = this._circleCaptionFont;\n            this._pdfFont = font;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n        var angle = (this._calculateAngle() * (180.0 / Math.PI));\n        if (angle < 0) {\n            angle = -angle;\n        }\n        if (angle > 180) {\n            angle = 360 - angle;\n        }\n        this._dictionary.update('Vertices', this._linePoints);\n        var ds = 'font:' +\n            font._metrics._postScriptName +\n            ' ' +\n            font._size +\n            'pt; color:' +\n            this._colorToHex(this.color);\n        this._dictionary.update('DS', ds);\n        if (this.text === (' ' + angle.toFixed(2) + '°')) {\n            this._dictionary.update('Contents', this.text);\n        }\n        else if (this.text) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (typeof this.subject === 'undefined') {\n            this._dictionary.update('Subject', 'Angle Measurement');\n        }\n        this._dictionary.update('MeasurementTypes', 1152);\n        this._dictionary.update('Subtype', new _PdfName('PolyLine'));\n        this._dictionary.update('IT', new _PdfName('PolyLineAngle'));\n        var measureDictionary = new _PdfDictionary();\n        var d = [];\n        var t = [];\n        var a = [];\n        var x = [];\n        var v = [];\n        measureDictionary.set('Type', _PdfName.get('measureDictionary'));\n        measureDictionary.set('R', '1 in = 1 in');\n        measureDictionary.set('Subtype', 'RL');\n        measureDictionary.set('TargetUnitConversion', 0.1388889);\n        var dDictionary = new _PdfDictionary();\n        dDictionary.set('U', 'in');\n        dDictionary.set('Type', 'NumberFormat');\n        dDictionary.set('C', 1);\n        dDictionary.set('D', 1);\n        dDictionary.set('SS', '');\n        d.push(dDictionary);\n        var tDictionary = new _PdfDictionary();\n        tDictionary.set('U', '°');\n        tDictionary.set('Type', 'NumberFormat');\n        tDictionary.set('C', 1);\n        tDictionary.set('D', 1);\n        tDictionary.set('FD', true);\n        tDictionary.set('SS', '');\n        t.push(tDictionary);\n        var aDictionary = new _PdfDictionary();\n        aDictionary.set('U', 'sq in');\n        aDictionary.set('Type', 'NumberFormat');\n        aDictionary.set('C', 1);\n        aDictionary.set('D', 1);\n        aDictionary.set('FD', true);\n        aDictionary.set('SS', '');\n        a.push(aDictionary);\n        var vDictionary = new _PdfDictionary();\n        vDictionary.set('U', 'cu in');\n        vDictionary.set('Type', 'NumberFormat');\n        vDictionary.set('C', 1);\n        vDictionary.set('D', 1);\n        vDictionary.set('FD', true);\n        vDictionary.set('SS', '');\n        v.push(vDictionary);\n        var xDictionary = new _PdfDictionary();\n        xDictionary.set('U', 'in');\n        xDictionary.set('Type', 'NumberFormat');\n        xDictionary.set('C', 1);\n        xDictionary.set('D', 1);\n        xDictionary.set('SS', '');\n        x.push(xDictionary);\n        measureDictionary.set('D', d);\n        measureDictionary.set('T', t);\n        measureDictionary.set('A', a);\n        measureDictionary.set('X', x);\n        measureDictionary.set('V', v);\n        if (this._dictionary.has('Measure')) {\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'Measure');\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, measureDictionary);\n        measureDictionary._updated = true;\n        this._dictionary.update('Measure', reference);\n        var rectValue = [0, 0, 0, 0];\n        var boundsValue = this._getAngleBoundsValue();\n        var points = this._obtainLinePoints();\n        var pathTypes = [];\n        pathTypes.push(0);\n        for (var i = 1; i < points.length; i++) {\n            pathTypes.push(1);\n        }\n        var graphicspath = new PdfPath();\n        graphicspath.addRectangle(points[1][0] - this._radius, -(points[1][1] + this._radius), 2 * this._radius, 2 * this._radius);\n        var size = font.measureString(angle.toString() + '°', [0, 0], format, 0, 0);\n        var midPoint = [(this._firstIntersectionPoint[0] + this._secondIntersectionPoint[0]) / 2,\n            ((this._firstIntersectionPoint[1] + this._secondIntersectionPoint[1]) / 2)];\n        var center = [points[1][0], -points[1][1]];\n        var x1 = points[1][0] + this._radius * Math.cos((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var y = points[1][1] + this._radius * Math.sin((this._startAngle + (this._sweepAngle / 2)) * (Math.PI / 180.0));\n        var start = [midPoint[0], midPoint[1]];\n        var xDiff = start[0] - center[0];\n        var yDiff = start[1] - center[1];\n        var midpointAngle = ((Math.atan2(yDiff, xDiff)) * (180.0 / Math.PI));\n        var left = false;\n        var right = false;\n        var up = false;\n        var down = false;\n        if (midpointAngle > 0) {\n            if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                up = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        else {\n            midpointAngle = -midpointAngle;\n            if (midpointAngle === 0) {\n                (new PdfPath()).addRectangle(boundsValue[0], boundsValue[1], boundsValue[2], boundsValue[3]);\n            }\n            else if (midpointAngle < 45) {\n                right = true;\n            }\n            else if (midpointAngle >= 45 && midpointAngle < 135) {\n                down = true;\n            }\n            else {\n                left = true;\n            }\n        }\n        if (rectValue[0] === 0 && rectValue[1] === 0 && rectValue[2] === 0 && rectValue[3] === 0) {\n            rectValue = boundsValue;\n            this.bounds = { x: boundsValue[0], y: boundsValue[1], width: boundsValue[2], height: boundsValue[3] };\n        }\n        var path = new PdfPath();\n        path._pathTypes = pathTypes;\n        path._points = points;\n        this._dictionary.set('Rect', [rectValue[0], rectValue[1], rectValue[0] + rectValue[2], rectValue[1] + rectValue[3]]);\n        var appearance = new PdfAppearance(this, boundsValue);\n        appearance.normal = new PdfTemplate(rectValue, this._crossReference);\n        var template = appearance.normal;\n        template._writeTransformation = false;\n        var graphics = appearance.normal.graphics;\n        var width = borderWidth / 2;\n        var pen = new PdfPen(this._color, width);\n        if (this.border.style === PdfBorderStyle.dashed) {\n            pen._dashStyle = PdfDashStyle.dash;\n        }\n        var brush = new PdfBrush(this._color);\n        graphics.save();\n        graphics.drawPath(path, pen);\n        path.addArc(points[1][0] - this._radius, points[1][1] - this._radius, 2 * this._radius, 2 * this._radius, this._startAngle, this._sweepAngle);\n        if (up) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), -(-y + font._metrics._getHeight() + 2), 0, 0], null, brush);\n        }\n        else if (right) {\n            graphics.drawString(angle.toString() + '°', font, [x1 + 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (left) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - size[0] - 2, -(-y + font._metrics._getHeight() / 2), 0, 0], null, brush);\n        }\n        else if (down) {\n            graphics.drawString(angle.toString() + '°', font, [x1 - (size[0] / 2), (y + 2), 0, 0], null, brush);\n        }\n        graphics.restore();\n        graphics._template._content.dictionary._updated = true;\n        var reference1 = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference1, graphics._template._content);\n        graphics._template._content.reference = reference1;\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var appearanceDictionary = new _PdfDictionary();\n        appearanceDictionary.set('N', reference1);\n        appearanceDictionary._updated = true;\n        this._dictionary.set('AP', appearanceDictionary);\n        return template;\n    };\n    PdfAngleMeasurementAnnotation.prototype._getAngleBoundsValue = function () {\n        var points = this._obtainLinePoints();\n        for (var i = 0; i < points.length; i++) {\n            points[Number.parseInt(i.toString(), 10)][1] = -points[Number.parseInt(i.toString(), 10)][1];\n        }\n        var path = new PdfPath();\n        path._points = points;\n        path._pathTypes = [0, 1, 1];\n        return path._getBounds();\n    };\n    PdfAngleMeasurementAnnotation.prototype._obtainLinePoints = function () {\n        var points;\n        var collection;\n        if (this._linePoints) {\n            points = new Array(this._linePoints.length);\n            for (var i = 0; i < this._linePoints.length; i++) {\n                points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n            }\n            collection = new Array(points.length / 2);\n            var count = 0;\n            for (var j = 0; j < points.length; j = j + 2) {\n                collection[Number.parseInt(count.toString(), 10)] = [points[Number.parseInt(j.toString(), 10)], -points[j + 1]];\n                count++;\n            }\n        }\n        return collection;\n    };\n    PdfAngleMeasurementAnnotation.prototype._calculateAngle = function () {\n        var points = [0, 0];\n        if (typeof this._linePoints !== 'undefined' && this._linePoints.length === 0 && this._isLoaded) {\n            if (this._dictionary.has('Vertices')) {\n                this._linePoints = this._dictionary.get('Vertices');\n            }\n        }\n        for (var i = 0; i < this._linePoints.length; i++) {\n            points[Number.parseInt(i.toString(), 10)] = this._linePoints[Number.parseInt(i.toString(), 10)];\n        }\n        var collection = [];\n        for (var j = 0; j < points.length; j = j + 2) {\n            collection.push([points[Number.parseInt(j.toString(), 10)], points[j + 1]]);\n        }\n        var point1 = collection[0];\n        var point2 = collection[1];\n        var point3 = collection[2];\n        var firstLineDistance = Math.sqrt(Math.pow((point2[0] - point1[0]), 2) + Math.pow((point2[1] - point1[1]), 2));\n        var secondLineDistance = Math.sqrt(Math.pow((point2[0] - point3[0]), 2) + Math.pow((point2[1] - point3[1]), 2));\n        this._radius = Math.min(firstLineDistance, secondLineDistance) / 4;\n        var graphicsPath = new PdfPath();\n        graphicsPath._points = collection;\n        graphicsPath._pathTypes = [0, 1, 1];\n        var intersectionPoint1;\n        var intersectionPoint2;\n        var value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point1, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._firstIntersectionPoint[0] === 0 && this._firstIntersectionPoint[1] === 0) {\n            this._firstIntersectionPoint = intersectionPoint2;\n        }\n        intersectionPoint1 = [0, 0];\n        intersectionPoint2 = [0, 0];\n        value = this._findLineCircleIntersectionPoints(point2[0], point2[1], this._radius, point3, point2, intersectionPoint1, intersectionPoint2);\n        intersectionPoint1 = value.first;\n        intersectionPoint2 = value.second;\n        if (this._secondIntersectionPoint[0] === 0 && this._secondIntersectionPoint[1] === 0) {\n            this._secondIntersectionPoint = intersectionPoint2;\n        }\n        var xDiff = this._firstIntersectionPoint[0] - point2[0];\n        var yDiff = this._firstIntersectionPoint[1] - point2[1];\n        var startAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        xDiff = this._secondIntersectionPoint[0] - point2[0];\n        yDiff = this._secondIntersectionPoint[1] - point2[1];\n        var sweepAngle = (Math.atan2(yDiff, xDiff) * (180.0 / Math.PI));\n        startAngle = startAngle > 0 ? startAngle = 360 - startAngle : -startAngle;\n        sweepAngle = sweepAngle > 0 ? sweepAngle = 360 - sweepAngle : -sweepAngle;\n        if (startAngle === 180 && sweepAngle === 0) {\n            this._startAngle = startAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle === 0 && sweepAngle === 180) {\n            this._startAngle = sweepAngle;\n            this._sweepAngle = 180;\n        }\n        else if (startAngle < 180) {\n            if (startAngle > sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n            else if (startAngle + 180 < sweepAngle) {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = (360 - sweepAngle) + startAngle;\n            }\n            else {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n        }\n        else {\n            if (startAngle < sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = sweepAngle - startAngle;\n            }\n            else if (startAngle - 180 > sweepAngle) {\n                this._startAngle = startAngle;\n                this._sweepAngle = (360 - startAngle) + sweepAngle;\n            }\n            else {\n                this._startAngle = sweepAngle;\n                this._sweepAngle = startAngle - sweepAngle;\n            }\n        }\n        return (Math.atan2((point3[0] - point2[0]), (point3[1] - point2[1])) -\n            Math.atan2((point1[0] - point2[0]), (point1[1] - point2[1])));\n    };\n    PdfAngleMeasurementAnnotation.prototype._findLineCircleIntersectionPoints = function (centerX, centerY, radius, point1, point2, intersection1, intersection2) {\n        var dx = point2[0] - point1[0];\n        var dy = point2[1] - point1[1];\n        var a = dx * dx + dy * dy;\n        var b = 2 * (dx * (point1[0] - centerX) + dy * (point1[1] - centerY));\n        var c = (point1[0] - centerX) * (point1[0] - centerX) + (point1[1] - centerY) * (point1[1] - centerY) - radius * radius;\n        var e = b * b - 4 * a * c;\n        if ((a <= 0.0000001) || (e < 0)) {\n            intersection1 = [Number.NaN, Number.NaN];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else if (e === 0) {\n            var t = -b / (2 * a);\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            intersection2 = [Number.NaN, Number.NaN];\n        }\n        else {\n            var t = ((-b + Math.sqrt(e)) / (2 * a));\n            intersection1 = [point1[0] + t * dx, point1[1] + t * dy];\n            t = ((-b - Math.sqrt(e)) / (2 * a));\n            intersection2 = [point1[0] + t * dx, point1[1] + t * dy];\n        }\n        return { first: intersection1, second: intersection2 };\n    };\n    return PdfAngleMeasurementAnnotation;\n}(PdfComment));\nexport { PdfAngleMeasurementAnnotation };\n/**\n * `PdfInkAnnotation` class represents the ink annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new ink annotation with the bounds and ink points\n * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfInkAnnotation, _super);\n    function PdfInkAnnotation(points, linePoints) {\n        var _this = _super.call(this) || this;\n        _this._inkPointsCollection = [];\n        _this._previousCollection = [];\n        _this._isModified = false;\n        _this._isEnableControlPoints = true;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Ink'));\n        if (typeof points !== 'undefined') {\n            _this._points = points;\n            _this.bounds = { x: points[0], y: points[1], width: points[2], height: points[3] };\n        }\n        if (typeof linePoints !== 'undefined') {\n            _this._linePoints = linePoints;\n        }\n        _this._type = _PdfAnnotationType.inkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfInkAnnotation.prototype, \"inkPointsCollection\", {\n        /**\n         * Gets the ink points collection of the annotation.\n         *\n         * @returns {Array<number[]>} Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfInkAnnotation = page.annotations.at(0) as PdfInkAnnotation;\n         * // Get the ink points collection of the annotation\n         * let inkPointsCollection: Array<number[]> = annotation.inkPointsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._inkPointsCollection.length === 0 && this._dictionary.has('InkList')) {\n                var inkList = this._dictionary.get('InkList');\n                if (Array.isArray(inkList) && inkList.length > 0) {\n                    this._inkPointsCollection = inkList;\n                }\n            }\n            return this._inkPointsCollection;\n        },\n        /**\n         * Sets the ink points collection of the annotation.\n         *\n         * @param {Array<number[]>} value Ink points collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * // Create a new ink annotation\n         * const annotation: PdfInkAnnotation = new PdfInkAnnotation([0, 0, 300, 400], [40, 300, 60, 100, 40, 50, 40, 300]);\n         * // Set the ink points collection of the annotation\n         * annotation.inkPointsCollection = [[422, 690, 412, 708, 408, 715, 403, 720, 400, 725], [420, 725, 420, 715, 415, 705, 400, 690, 405, 695]];\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (Array.isArray(value) && value.length > 0 && value !== this._inkPointsCollection) {\n                this._inkPointsCollection = value;\n                this._isModified = true;\n                if (this._isLoaded) {\n                    this._dictionary.update('InkList', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfInkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfInkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfInkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfInkAnnotation.prototype._postProcess = function () {\n        if (typeof this._points === 'undefined' || this._points === null) {\n            throw new Error('Points cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (!this._dictionary.has('C')) {\n            this.color = [0, 0, 0];\n            this._isTransparentColor = true;\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var nativeRectangle = this._addInkPoints();\n        var bounds = [nativeRectangle[0],\n            nativeRectangle[1],\n            nativeRectangle[0] + nativeRectangle[2],\n            nativeRectangle[1] + nativeRectangle[3]];\n        this._dictionary.update('Rect', bounds);\n        if (this._setAppearance) {\n            var appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            var template = appearance.normal;\n            _setMatrix(template, this._getRotationAngle());\n            template._writeTransformation = false;\n            this._appearanceTemplate = this._createInkAppearance(template);\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n    };\n    PdfInkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._isFlatten = isFlatten;\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                if (this._inkPointsCollection.length === 0) {\n                    this._inkPointsCollection = this._obtainInkListCollection();\n                }\n                var rect = this._getInkBoundsValue();\n                var template = new PdfTemplate(rect, this._crossReference);\n                var box = template._content.dictionary.getArray('BBox');\n                var angle = this._getRotationAngle();\n                if (box && angle !== null && typeof angle !== 'undefined') {\n                    template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n                template._writeTransformation = false;\n                this._appearanceTemplate = this._createInkAppearance(template);\n                this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        if (this._inkPointsCollection.length === 0) {\n                            this._inkPointsCollection = this._obtainInkListCollection();\n                        }\n                        var rect = this._getInkBoundsValue();\n                        var template = new PdfTemplate(rect, this._crossReference);\n                        _setMatrix(template, this._getRotationAngle());\n                        template._writeTransformation = false;\n                        this._appearanceTemplate = this._createInkAppearance(template);\n                        this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten &&\n            this._appearanceTemplate &&\n            this._appearanceTemplate._size !== null &&\n            typeof this._appearanceTemplate._size !== 'undefined') {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n        if (isFlatten && !this.flattenPopups && this._dictionary.has('Popup')) {\n            var reference = this._dictionary.getRaw('Popup');\n            if (this._page._pageDictionary.has('Annots')) {\n                var annots = this._page._pageDictionary.getRaw('Annots'); // eslint-disable-line\n                if (annots && Array.isArray(annots) && annots.length > 0) {\n                    var index = annots.indexOf(reference);\n                    if (index >= 0) {\n                        this._page.annotations.removeAt(index);\n                    }\n                }\n            }\n        }\n    };\n    PdfInkAnnotation.prototype._createInkAppearance = function (template) {\n        var graphics = template.graphics;\n        if (this._inkPointsCollection !== null &&\n            this._inkPointsCollection.length > 0 &&\n            this.color !== null &&\n            typeof this._color !== 'undefined') {\n            for (var l = 0; l < this._inkPointsCollection.length; l++) {\n                var isDot = false;\n                if (this._inkPointsCollection[Number.parseInt(l.toString(), 10)].length % 2 === 0) {\n                    var inkPoints = this._inkPointsCollection[Number.parseInt(l.toString(), 10)];\n                    if (inkPoints.length === 2) {\n                        var locx = inkPoints[0] - 0.5;\n                        var locy = inkPoints[1] - 0.5;\n                        var locw = inkPoints[0] + 0.5;\n                        var loch = inkPoints[1] + 0.5;\n                        inkPoints = [locx, locy, locw, loch];\n                        isDot = true;\n                    }\n                    var point = new Array(inkPoints.length / 2);\n                    var count = 0;\n                    for (var j = 0; j < inkPoints.length; j = j + 2) {\n                        point[Number.parseInt(count.toString(), 10)] = [inkPoints[Number.parseInt(j.toString(), 10)], inkPoints[j + 1]];\n                        count++;\n                    }\n                    var pathPointCont = count + (count * 2) - 2;\n                    var pathPoints = new Array(pathPointCont);\n                    if (this._isEnableControlPoints) {\n                        var p1 = [];\n                        var p2 = [];\n                        var value = this._getControlPoints(point, p1, p2);\n                        p1 = value.controlP1;\n                        p2 = value.controlP2;\n                        var index = 0;\n                        for (var i = 0; i < pathPointCont - 1; i = i + 3) {\n                            pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(index.toString(), 10)];\n                            pathPoints[i + 1] = p1[Number.parseInt(index.toString(), 10)];\n                            pathPoints[i + 2] = p2[Number.parseInt(index.toString(), 10)];\n                            index++;\n                        }\n                    }\n                    else {\n                        if (count % 3 === 1) {\n                            pathPointCont = count;\n                            pathPoints = new Array(pathPointCont);\n                            pathPoints = point;\n                        }\n                        else if (count % 3 === 0) {\n                            pathPointCont = count + 1;\n                            pathPoints = new Array(pathPointCont);\n                            for (var i = 0; i < point.length; i++) {\n                                pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(i.toString(), 10)];\n                            }\n                        }\n                        else {\n                            pathPointCont = count + 2;\n                            pathPoints = new Array(pathPointCont);\n                            for (var i = 0; i < point.length; i++) {\n                                pathPoints[Number.parseInt(i.toString(), 10)] = point[Number.parseInt(i.toString(), 10)];\n                            }\n                            pathPoints[pathPointCont - 2] = point[point.length - 2];\n                        }\n                    }\n                    pathPoints[pathPointCont - 1] = point[point.length - 1];\n                    if (pathPoints !== null) {\n                        var pointsCollection = pathPoints;\n                        for (var k = 0; k < pointsCollection.length; k++) {\n                            var point_1 = pointsCollection[Number.parseInt(k.toString(), 10)];\n                            pointsCollection[Number.parseInt(k.toString(), 10)] = [point_1[0], (-point_1[1])];\n                        }\n                        var path1 = new PdfPath();\n                        var path2 = null;\n                        if (isDot) {\n                            var width = point[1][0] - point[0][0];\n                            var height = point[1][1] - point[0][1];\n                            path1.addEllipse(point[0][0] + (0.5), -(point[0][1] + height + (0.5)), width, height);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else if (point.length === 2) {\n                            path1.addLine(point[0][0], -point[0][1], point[1][0], -point[1][1]);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = path1._points;\n                        }\n                        else {\n                            path1._addBezierPoints(pointsCollection);\n                            path2 = new PdfPath();\n                            path2._pathTypes = path1._pathTypes;\n                            path2._points = pointsCollection;\n                        }\n                        var borderPen = new PdfPen(this.color, this.border.width);\n                        if (this._isLoaded) {\n                            borderPen._lineCap = PdfLineCap.round;\n                        }\n                        if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                            var state = graphics.save();\n                            graphics.setTransparency(this._opacity);\n                            graphics.drawPath(path2, borderPen);\n                            graphics.restore(state);\n                        }\n                        else {\n                            graphics.drawPath(path2, borderPen);\n                        }\n                    }\n                }\n            }\n            if (this._isFlatten) {\n                this.bounds = { x: this.bounds.x,\n                    y: (this._page.size[1] - (this.bounds.y + this.bounds.height)),\n                    width: this.bounds.width,\n                    height: this.bounds.height };\n            }\n        }\n        return template;\n    };\n    PdfInkAnnotation.prototype._getControlPoints = function (point, p1, p2) {\n        if (point === null) {\n            throw new Error('pointCollection');\n        }\n        var pointCount = point.length - 1;\n        if (pointCount < 1) {\n            throw new Error('At least two knot PointFs required pointCollection');\n        }\n        if (pointCount === 1) {\n            p1 = [[((2 * point[0][0] + point[1][0]) / 3), ((2 * point[0][1] + point[1][1]) / 3)]];\n            p2 = [[(2 * p1[0][0] - point[0][0]), (2 * p1[0][1] - point[0][1])]];\n        }\n        var rightVector = [];\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][0] + 2 * point[i + 1][0];\n        }\n        rightVector[0] = point[0][0] + 2 * point[1][0];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][0] + point[Number.parseInt(pointCount.toString(), 10)][0]) / 2.0;\n        var xValue = this._getSingleControlPoint(rightVector);\n        for (var i = 1; i < pointCount - 1; ++i) {\n            rightVector[Number.parseInt(i.toString(), 10)] = 4 * point[Number.parseInt(i.toString(), 10)][1] + 2 * point[i + 1][1];\n        }\n        rightVector[0] = point[0][1] + 2 * point[1][1];\n        rightVector[pointCount - 1] = (8 * point[pointCount - 1][1] + point[Number.parseInt(pointCount.toString(), 10)][1]) / 2.0;\n        var yValue = this._getSingleControlPoint(rightVector);\n        p1 = new Array(pointCount);\n        p2 = new Array(pointCount);\n        for (var i = 0; i < pointCount; ++i) {\n            p1[Number.parseInt(i.toString(), 10)] = [xValue[Number.parseInt(i.toString(), 10)], yValue[Number.parseInt(i.toString(), 10)]];\n            if (i < pointCount - 1) {\n                p2[Number.parseInt(i.toString(), 10)] = [2 * point[i + 1][0] - xValue[i + 1], 2 * point[i + 1][1] - yValue[i + 1]];\n            }\n            else {\n                var x = (point[Number.parseInt(pointCount.toString(), 10)][0] + xValue[pointCount - 1]) / 2;\n                var y = (point[Number.parseInt(pointCount.toString(), 10)][1] + yValue[pointCount - 1]) / 2;\n                p2[Number.parseInt(i.toString(), 10)] = [x, y];\n            }\n        }\n        return { controlP1: p1, controlP2: p2 };\n    };\n    PdfInkAnnotation.prototype._getSingleControlPoint = function (rightVector) {\n        var count = rightVector.length;\n        var vector = [];\n        var tmpVector = [];\n        var divisor = 2.0;\n        vector[0] = rightVector[0] / divisor;\n        for (var i = 1; i < count; i++) {\n            tmpVector[Number.parseInt(i.toString(), 10)] = 1 / divisor;\n            divisor = (i < count - 1 ? 4.0 : 3.5) - tmpVector[Number.parseInt(i.toString(), 10)];\n            vector[Number.parseInt(i.toString(), 10)] = (rightVector[Number.parseInt(i.toString(), 10)] - vector[i - 1]) / divisor;\n        }\n        for (var i = 1; i < count; i++) {\n            vector[count - i - 1] -= tmpVector[count - i] * vector[count - i];\n        }\n        return vector;\n    };\n    PdfInkAnnotation.prototype._addInkPoints = function () {\n        var _this = this;\n        var inkCollection = [];\n        if (this._linePoints !== null && (this._previousCollection.length === 0 || this._isModified)) {\n            this._inkPointsCollection.unshift(this._linePoints);\n        }\n        var isEqual = _checkInkPoints(this._inkPointsCollection, this._previousCollection);\n        if (this._inkPointsCollection !== null && !isEqual) {\n            for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                var inkList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)].slice();\n                inkCollection.push(inkList);\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._inkPointsCollection.length > 0 && (!isEqual || this._isModified)) {\n            this._inkPointsCollection.forEach(function (inkList) {\n                _this._previousCollection.push(inkList);\n                _this._isModified = false;\n            });\n        }\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        var containsCropOrMediaBox = false;\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            containsCropOrMediaBox = true;\n            for (var i = 0; i < inkCollection.length; i++) {\n                var inkList = inkCollection[Number.parseInt(i.toString(), 10)];\n                var modifiedInkList = inkList;\n                for (var j = 0; j < inkList.length; j = j + 2) {\n                    var x = inkList[Number.parseInt(j.toString(), 10)];\n                    var y = inkList[j + 1];\n                    x = x + cropOrMediaBox[0];\n                    if (this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[3] === 0 && cropOrMediaBox[1] > 0) {\n                        y = y + cropOrMediaBox[3];\n                    }\n                    else {\n                        y = y + cropOrMediaBox[1];\n                    }\n                    modifiedInkList[Number.parseInt(j.toString(), 10)] = x;\n                    modifiedInkList[j + 1] = y;\n                    inkCollection[Number.parseInt(i.toString(), 10)] = modifiedInkList;\n                }\n            }\n            this._dictionary.update('InkList', inkCollection);\n        }\n        if (this._isEnableControlPoints || containsCropOrMediaBox) {\n            return this._getInkBoundsValue(inkCollection);\n        }\n        else {\n            if (!this._isFlatten) {\n                this._updateInkListCollection(inkCollection);\n            }\n            return [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        }\n    };\n    PdfInkAnnotation.prototype._updateInkListCollection = function (inkCollection) {\n        for (var i = 0; i < inkCollection.length; i++) {\n            var inkList = [];\n            for (var j = 0; j < inkCollection[Number.parseInt(i.toString(), 10)].length; j++) {\n                inkList.push(inkCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]);\n            }\n            this._inkPointsCollection[Number.parseInt(i.toString(), 10)] = inkList;\n        }\n    };\n    PdfInkAnnotation.prototype._getInkBoundsValue = function (inkCollection) {\n        var bounds = [0, 0, 0, 0];\n        if (this._points) {\n            this.bounds = { x: this._points[0], y: this._points[1], width: this._points[2], height: this._points[3] };\n        }\n        bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        var borderWidth = this.border.width;\n        if (this._inkPointsCollection !== null) {\n            if (this._inkPointsCollection.length > 0) {\n                var termsList = [];\n                for (var i = 0; i < this._inkPointsCollection.length; i++) {\n                    var subList = this._inkPointsCollection[Number.parseInt(i.toString(), 10)];\n                    if (subList !== null) {\n                        if (subList.length % 2 === 0) {\n                            for (var j = 0; j < subList.length; j++) {\n                                termsList.push(subList[Number.parseInt(j.toString(), 10)]);\n                            }\n                        }\n                    }\n                }\n                var isTwoPoints = false;\n                if (!this._isLoaded && termsList.length === 2) {\n                    isTwoPoints = true;\n                    termsList.push((termsList[0] + 1));\n                    termsList.push((termsList[1] + 1));\n                }\n                var pointCollection = new Array(termsList.length / 2);\n                var count = 0;\n                for (var j = 0; j < termsList.length; j = j + 2) {\n                    pointCollection[Number.parseInt(count.toString(), 10)] = [termsList[Number.parseInt(j.toString(), 10)],\n                        termsList[j + 1]];\n                    count++;\n                }\n                if (this._isLoaded) {\n                    if (pointCollection.length > 0) {\n                        var xMin = 0;\n                        var yMin = 0;\n                        var xMax = 0;\n                        var yMax = 0;\n                        var first = true;\n                        for (var i = 0; i < pointCollection.length; i++) {\n                            var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                            if (first) {\n                                xMin = point[0];\n                                yMin = point[1];\n                                first = false;\n                            }\n                            else {\n                                if (point[0] < xMin) {\n                                    xMin = point[0];\n                                }\n                                else if (point[0] > xMax) {\n                                    xMax = point[0];\n                                }\n                                if (point[1] < yMin) {\n                                    yMin = point[1];\n                                }\n                                else if (point[1] > yMax) {\n                                    yMax = point[1];\n                                }\n                            }\n                        }\n                        bounds = [xMin, yMin, xMax - xMin, yMax - yMin];\n                        this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n                        if (this._isFlatten || this._setAppearance) {\n                            bounds[0] = this.bounds.x - borderWidth;\n                            bounds[1] = this.bounds.y - borderWidth;\n                            bounds[2] = this.bounds.width + (2 * borderWidth);\n                            bounds[3] = this.bounds.height + (2 * borderWidth);\n                        }\n                    }\n                    else {\n                        if (this._points) {\n                            bounds = this._points;\n                        }\n                        else if (pointCollection.length > 0) {\n                            bounds = this._dictionary.get('Rect');\n                        }\n                        else {\n                            bounds = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n                        }\n                    }\n                }\n                else if (inkCollection) {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints, inkCollection);\n                }\n                else {\n                    bounds = this._calculateInkBounds(pointCollection, bounds, borderWidth, isTwoPoints);\n                }\n                this.bounds = { x: bounds[0], y: bounds[1], width: bounds[2], height: bounds[3] };\n            }\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._calculateInkBounds = function (pointCollection, bounds, borderWidth, isTwoPoints, inkCollection) {\n        if (pointCollection.length > 5) {\n            var xMin = 0;\n            var yMin = 0;\n            var xMax = 0;\n            var yMax = 0;\n            var first = true;\n            for (var i = 0; i < pointCollection.length; i++) {\n                var point = pointCollection[Number.parseInt(i.toString(), 10)];\n                if (first) {\n                    xMin = point[0];\n                    yMin = point[1];\n                    xMax = point[0];\n                    yMax = point[1];\n                    first = false;\n                }\n                else {\n                    if (point[0] < xMin) {\n                        xMin = point[0];\n                    }\n                    else if (point[0] > xMax) {\n                        xMax = point[0];\n                    }\n                    if (point[1] < yMin) {\n                        yMin = point[1];\n                    }\n                    else if (point[1] > yMax) {\n                        yMax = point[1];\n                    }\n                }\n            }\n            var cropOrMediaBox = this._getCropOrMediaBox();\n            if (bounds[2] < xMax) {\n                xMax = bounds[2];\n            }\n            else if (cropOrMediaBox) {\n                xMax = xMax - xMin;\n            }\n            if (bounds[3] < yMax) {\n                yMax = bounds[3];\n            }\n            else if (cropOrMediaBox) {\n                yMax = yMax - yMin;\n            }\n            if (cropOrMediaBox) {\n                xMin = xMin + cropOrMediaBox[0];\n                yMin = yMin + cropOrMediaBox[1];\n            }\n            bounds = [xMin, yMin, xMax, yMax];\n            if (this._isFlatten || this._setAppearance) {\n                var factor = isTwoPoints ? 2 : 3;\n                bounds[0] = bounds[0] - borderWidth;\n                bounds[1] = bounds[1] - borderWidth;\n                bounds[2] = bounds[2] + (factor * borderWidth);\n                bounds[3] = bounds[3] + (factor * borderWidth);\n            }\n        }\n        else {\n            if (typeof this._points === 'undefined' && pointCollection.length > 0) {\n                bounds = this._dictionary.get('Rect');\n            }\n            else {\n                bounds = this._points;\n            }\n        }\n        if (!this._isFlatten && inkCollection) {\n            this._updateInkListCollection(inkCollection);\n        }\n        return bounds;\n    };\n    PdfInkAnnotation.prototype._obtainInkListCollection = function () {\n        var path = [];\n        if (this._dictionary.has('InkList')) {\n            var inkList = this._dictionary.getArray('InkList');\n            var list = [];\n            for (var i = 0; i < inkList.length; i++) {\n                var innerList = inkList[Number.parseInt(i.toString(), 10)];\n                for (var j = 0; j < innerList.length; j++) {\n                    list.push(innerList[Number.parseInt(j.toString(), 10)]);\n                }\n                path.push(list);\n                if (list.length === innerList.length) {\n                    list = [];\n                }\n            }\n        }\n        return path;\n    };\n    return PdfInkAnnotation;\n}(PdfComment));\nexport { PdfInkAnnotation };\n/**\n * `PdfPopupAnnotation` class represents the popup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new popup annotation\n * const annotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfPopupAnnotation, _super);\n    function PdfPopupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfPopupIcon.note;\n        _this._iconString = '';\n        _this._stateModel = PdfAnnotationStateModel.none;\n        _this._state = PdfAnnotationState.none;\n        _this._open = false;\n        _this._isReview = false;\n        _this._isComment = false;\n        _this._comment = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 9 5.0908 cm 7.74 12.616 m -7.74 12.616 l -8.274 12.616 -8.707 12.184 -8.707 11.649 c h f Q 0 G ';\n        _this._commentSecondHalf = '0 i 0.60 w 4 M 1 j 0 J [0 100]1 d  1 0 0 1 9 5.0908 cm 4.1 1.71 m -0.54 -2.29 l  -0.54 1.71 l  -5.5 1.71 l  -5.5 14.42 l  10.5 14.42 l  10.5 1.71 l  4.1 1.71 l -2.33 9.66 m 7.34 9.66 l 7.34 8.83 l -2.33 8.83 l -2.33 9.66 l -2.33 7.28 m 5.88 7.28 l 5.88 6.46 l -2.33 6.46 l -2.33 7.28 l 14.9 23.1235 m -14.9 23.1235 l -14.9 -20.345 l 14.9 -20.345 l 14.9 23.1235 l b ';\n        _this._note = '0 G 0 i 0.61 w 4 M 0 j 0 J []0 d  q 1 0 0 1 16.959 1.3672 cm 0 0 m 0 -0.434 -0.352 -0.785 -0.784 -0.785 c -14.911 -0.785 l -15.345 -0.785 -15.696 -0.434 -15.696 0 c -15.696 17.266 l -15.696 17.699 -15.345 18.051 -14.911 18.051 c -0.784 18.051 l -0.352 18.051 0 17.699 0 17.266 c h b Q q 1 0 0 1 4.4023 13.9243 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4019 11.2207 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4023 8.5176 cm 0 0 m 9.418 0 l S Q q 1 0 0 1 4.4023 5.8135 cm 0 0 m 9.418 0 l S Q ';\n        _this._help = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 12.1465 10.5137 cm -2.146 9.403 m -7.589 9.403 -12.001 4.99 -12.001 -0.453 c -12.001 -5.895 -7.589 -10.309 -2.146 -10.309 c 3.296 -10.309 7.709 -5.895 7.709 -0.453 c 7.709 4.99 3.296 9.403 -2.146 9.403 c h f Q ';\n        _this._helpSecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  1 0 0 1 12.1465 10.5137 cm 0 0 m -0.682 -0.756 -0.958 -1.472 -0.938 -2.302 c -0.938 -2.632 l -3.385 -2.632 l -3.403 -2.154 l -3.459 -1.216 -3.147 -0.259 -2.316 0.716 c -1.729 1.433 -1.251 2.022 -1.251 2.647 c -1.251 3.291 -1.674 3.715 -2.594 3.751 c -3.202 3.751 -3.937 3.531 -4.417 3.2 c -5.041 5.205 l -4.361 5.591 -3.274 5.959 -1.968 5.959 c 0.46 5.959 1.563 4.616 1.563 3.089 c 1.563 1.691 0.699 0.771 0 0 c -2.227 -6.863 m -2.245 -6.863 l -3.202 -6.863 -3.864 -6.146 -3.864 -5.189 c -3.864 -4.196 -3.182 -3.516 -2.227 -3.516 c -1.233 -3.516 -0.589 -4.196 -0.57 -5.189 c -0.57 -6.146 -1.233 -6.863 -2.227 -6.863 c -2.146 9.403 m -7.589 9.403 -12.001 4.99 -12.001 -0.453 c -12.001 -5.895 -7.589 -10.309 -2.146 -10.309 c 3.296 -10.309 7.709 -5.895 7.709 -0.453 c 7.709 4.99 3.296 9.403 -2.146 9.403 c b ';\n        _this._insert = ' 0 i 0.59 w 4 M 0 j 0 J []0 d  1 0 0 1 8.5386 19.8545 cm 0 0 m -8.39 -19.719 l 8.388 -19.719 l h B ';\n        _this._key = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 6.5 12.6729 cm 0.001 5.138 m -2.543 5.138 -4.604 3.077 -4.604 0.534 c -4.604 -1.368 -3.449 -3.001 -1.802 -3.702 c -1.802 -4.712 l -0.795 -5.719 l -1.896 -6.82 l -0.677 -8.039 l -1.595 -8.958 l -0.602 -9.949 l -1.479 -10.829 l -0.085 -12.483 l 1.728 -10.931 l 1.728 -3.732 l 1.737 -3.728 1.75 -3.724 1.76 -3.721 c 3.429 -3.03 4.604 -1.385 4.604 0.534 c 4.604 3.077 2.542 5.138 0.001 5.138 c f Q ';\n        _this._keySecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 6.4995 20 cm 0 0 m -6.205 -12.713 l 6.205 -12.713 l h b Q q 1 0 0 1 1.1909 6.2949 cm 0 0 m 1.278 0 l 1.353 0 1.362 -0.02 1.391 -0.066 c 2.128 -1.363 3.78 -4.275 3.966 -4.713 c 3.985 -4.713 l 3.976 -4.453 3.957 -3.91 3.957 -3.137 c 3.957 -0.076 l 3.957 -0.02 3.976 0 4.041 0 c 4.956 0 l 5.021 0 5.04 -0.029 5.04 -0.084 c 5.04 -6.049 l 5.04 -6.113 5.021 -6.133 4.947 -6.133 c 3.695 -6.133 l 3.621 -6.133 3.611 -6.113 3.574 -6.066 c 3.052 -4.955 1.353 -2.063 0.971 -1.186 c 0.961 -1.186 l 0.999 -1.68 0.999 -2.146 1.008 -3.025 c 1.008 -6.049 l 1.008 -6.104 0.989 -6.133 0.933 -6.133 c 0.009 -6.133 l -0.046 -6.133 -0.075 -6.123 -0.075 -6.049 c -0.075 -0.066 l -0.075 -0.02 -0.056 0 0 0 c f Q q 1 0 0 1 9.1367 3.0273 cm 0 0 m 0.075 0 0.215 -0.008 0.645 -0.008 c 1.4 -0.008 2.119 0.281 2.119 1.213 c 2.119 1.969 1.633 2.381 0.737 2.381 c 0.354 2.381 0.075 2.371 0 2.361 c h -1.146 3.201 m -1.146 3.238 -1.129 3.268 -1.082 3.268 c -0.709 3.275 0.02 3.285 0.729 3.285 c 2.613 3.285 3.248 2.314 3.258 1.232 c 3.258 -0.27 2.007 -0.914 0.607 -0.914 c 0.327 -0.914 0.057 -0.914 0 -0.904 c 0 -2.789 l 0 -2.836 -0.019 -2.865 -0.074 -2.865 c -1.082 -2.865 l -1.119 -2.865 -1.146 -2.846 -1.146 -2.799 c h f Q ';\n        _this._newParagraph = '1 0.819611 0 rg 0 G 0 i 0.58 w 4 M 0 j 0 J []0 d ';\n        _this._newParagraphSecondHalf = ' 0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 6.4995 20 cm 0 0 m -6.205 -12.713 l 6.205 -12.713 l h b Q q 1 0 0 1 1.1909 6.2949 cm 0 0 m 1.278 0 l 1.353 0 1.362 -0.02 1.391 -0.066 c 2.128 -1.363 3.78 -4.275 3.966 -4.713 c 3.985 -4.713 l 3.976 -4.453 3.957 -3.91 3.957 -3.137 c 3.957 -0.076 l 3.957 -0.02 3.976 0 4.041 0 c 4.956 0 l 5.021 0 5.04 -0.029 5.04 -0.084 c 5.04 -6.049 l 5.04 -6.113 5.021 -6.133 4.947 -6.133 c 3.695 -6.133 l 3.621 -6.133 3.611 -6.113 3.574 -6.066 c 3.052 -4.955 1.353 -2.063 0.971 -1.186 c 0.961 -1.186 l 0.999 -1.68 0.999 -2.146 1.008 -3.025 c 1.008 -6.049 l 1.008 -6.104 0.989 -6.133 0.933 -6.133 c 0.009 -6.133 l -0.046 -6.133 -0.075 -6.123 -0.075 -6.049 c -0.075 -0.066 l -0.075 -0.02 -0.056 0 0 0 c f Q q 1 0 0 1 9.1367 3.0273 cm 0 0 m 0.075 0 0.215 -0.008 0.645 -0.008 c 1.4 -0.008 2.119 0.281 2.119 1.213 c 2.119 1.969 1.633 2.381 0.737 2.381 c 0.354 2.381 0.075 2.371 0 2.361 c h -1.146 3.201 m -1.146 3.238 -1.129 3.268 -1.082 3.268 c -0.709 3.275 0.02 3.285 0.729 3.285 c 2.613 3.285 3.248 2.314 3.258 1.232 c 3.258 -0.27 2.007 -0.914 0.607 -0.914 c 0.327 -0.914 0.057 -0.914 0 -0.904 c 0 -2.789 l 0 -2.836 -0.019 -2.865 -0.074 -2.865 c -1.082 -2.865 l -1.119 -2.865 -1.146 -2.846 -1.146 -2.799 c h f Q ';\n        _this._paragraph = 'q 1 1 1 rg 0 i 1 w 4 M 1 j 0 J []0 d 1 0 0 1 19.6973 10.0005 cm 0 0 m 0 -5.336 -4.326 -9.662 -9.663 -9.662 c -14.998 -9.662 -19.324 -5.336 -19.324 0 c -19.324 5.335 -14.998 9.662 -9.663 9.662 c -4.326 9.662 0 5.335 0 0 c h f Q ';\n        _this._paragraphSecondHalf = '0 G 0 i 0.59 w 4 M 1 j 0 J []0 d  q 1 0 0 1 19.6973 10.0005 cm 0 0 m 0 -5.336 -4.326 -9.662 -9.663 -9.662 c -14.998 -9.662 -19.324 -5.336 -19.324 0 c -19.324 5.335 -14.998 9.662 -9.663 9.662 c -4.326 9.662 0 5.335 0 0 c h S Q q 1 0 0 1 11.6787 2.6582 cm 0 0 m -1.141 0 l -1.227 0 -1.244 0.052 -1.227 0.139 c -0.656 1.157 -0.52 2.505 -0.52 3.317 c -0.52 3.594 l -2.833 3.783 -5.441 4.838 -5.441 8.309 c -5.441 10.778 -3.714 12.626 -0.57 13.024 c -0.535 13.508 -0.381 14.129 -0.242 14.389 c -0.207 14.44 -0.174 14.475 -0.104 14.475 c 1.088 14.475 l 1.156 14.475 1.191 14.458 1.175 14.372 c 1.105 14.095 0.881 13.127 0.881 12.402 c 0.881 9.431 0.932 7.324 0.95 4.06 c 0.95 2.298 0.708 0.813 0.189 0.07 c 0.155 0.034 0.103 0 0 0 c b Q ';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Text'));\n        if (typeof text !== 'undefined') {\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.popupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"open\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has open or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the boolean flag indicating whether annotation has open or not.\n         * let open: boolean =  annotation.open;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Open')) {\n                this._open = this._dictionary.get('Open');\n            }\n            return this._open;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has open or not.\n         *\n         * @param {boolean} value Open.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the boolean flag indicating whether annotation has open or not.\n         * annotation.open = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._open = value;\n                this._dictionary.update('Open', this._open);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the popup annotation.\n         *\n         * @returns {PdfPopupIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the icon type of the popup annotation.\n         * let icon: PdfPopupIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapPopupIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the popup annotation.\n         *\n         * @param {PdfPopupIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the icon type of the popup annotation.\n         * annotation.icon = PdfPopupIcon.newParagraph;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"stateModel\", {\n        /**\n         * Gets the state model of the popup annotation.\n         *\n         * @returns {PdfAnnotationStateModel} Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state model of the popup annotation.\n         * let stateModel: PdfAnnotationStateModel = annotation.stateModel;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('StateModel')) {\n                this._stateModel = _mapAnnotationStateModel(this._dictionary.get('StateModel'));\n            }\n            return this._stateModel;\n        },\n        /**\n         * Sets the state model of the popup annotation.\n         *\n         * @param {PdfAnnotationStateModel} value Annotation State Model.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state model of the popup annotation.\n         * annotation.stateModel = PdfAnnotationStateModel.marked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._stateModel = value;\n                this._dictionary.update('StateModel', _reverseMapAnnotationStateModel(this._stateModel));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPopupAnnotation.prototype, \"state\", {\n        /**\n         * Gets the state of the popup annotation.\n         *\n         * @returns {PdfAnnotationState} Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Gets the state of the popup annotation.\n         * let state: PdfAnnotationState = annotation.state;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('State')) {\n                this._state = _mapAnnotationState(this._dictionary.get('State'));\n            }\n            return this._state;\n        },\n        /**\n         * Sets the state of the popup annotation.\n         *\n         * @param {PdfAnnotationState} value Annotation State.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfPopupAnnotation = page.annotations.at(0) as PdfPopupAnnotation;\n         * // Sets the state of the popup annotation.\n         * annotation.state = PdfAnnotationState.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._state = value;\n                this._dictionary.update('State', _reverseMapAnnotationState(this._state));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPopupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfPopupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('IRT')) {\n            annot._isReview = _checkReview(dictionary);\n            if (!annot._isReview) {\n                annot._isComment = _checkComment(dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfPopupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfPopupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        var rectangle = [this.bounds.x, this.bounds.y, (this.bounds.x + this.bounds.width),\n            (this.bounds.y + this.bounds.height)];\n        this._dictionary.update('Rect', rectangle);\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createPopupAppearance();\n            if (this._appearanceTemplate) {\n                if (this._dictionary.has('AP')) {\n                    _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                }\n                var dictionary = new _PdfDictionary();\n                this._appearanceTemplate._content.dictionary._updated = true;\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                this._appearanceTemplate._content.reference = reference;\n                dictionary.set('N', reference);\n                dictionary._updated = true;\n                this._dictionary.set('AP', dictionary);\n            }\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfPopupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!this._appearanceTemplate && this._isFlattenPopups && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (appearanceStream) {\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                    if (this._appearanceTemplate !== null) {\n                        var state = this._page.graphics.save();\n                        if (this.opacity < 1) {\n                            this._page.graphics.setTransparency(this.opacity);\n                        }\n                        this._page.graphics.drawTemplate(this._appearanceTemplate, this.bounds);\n                        this._page.graphics.restore(state);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createPopupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            var reference = dictionary.getRaw('N');\n                            if (appearanceStream) {\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups && this.flatten) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        if (isFlatten) {\n            this._removeAnnotation(this._page, this);\n        }\n    };\n    PdfPopupAnnotation.prototype._createPopupAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var graphics = template.graphics;\n        graphics._sw._clear();\n        if (this.opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this.opacity);\n        }\n        switch (this.icon) {\n            case PdfPopupIcon.comment:\n                graphics._sw._write(this._comment);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._commentSecondHalf);\n                break;\n            case PdfPopupIcon.paragraph:\n                graphics._sw._write(this._paragraph);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._paragraphSecondHalf);\n                break;\n            case PdfPopupIcon.help:\n                graphics._sw._write(this._help);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._helpSecondHalf);\n                break;\n            case PdfPopupIcon.note:\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._note);\n                break;\n            case PdfPopupIcon.insert:\n                graphics._sw._write('0 G ');\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._insert);\n                break;\n            case PdfPopupIcon.key:\n                graphics._sw._write(this._key);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._keySecondHalf);\n                break;\n            case PdfPopupIcon.newParagraph:\n                graphics._sw._write(this._newParagraph);\n                graphics._sw._setColorSpace(this.color, _PdfColorSpace.rgb, false);\n                graphics._sw._write(this._newParagraphSecondHalf);\n                break;\n        }\n        if (this.opacity < 1) {\n            graphics.restore();\n        }\n        return template;\n    };\n    PdfPopupAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfPopupIcon.note:\n                this._iconString = 'Note';\n                break;\n            case PdfPopupIcon.comment:\n                this._iconString = 'Comment';\n                break;\n            case PdfPopupIcon.help:\n                this._iconString = 'Help';\n                break;\n            case PdfPopupIcon.insert:\n                this._iconString = 'Insert';\n                break;\n            case PdfPopupIcon.key:\n                this._iconString = 'Key';\n                break;\n            case PdfPopupIcon.newParagraph:\n                this._iconString = 'NewParagraph';\n                break;\n            case PdfPopupIcon.paragraph:\n                this._iconString = 'Paragraph';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfPopupAnnotation;\n}(PdfComment));\nexport { PdfPopupAnnotation };\n/**\n * `PdfFileLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new file link annotation\n * let annotation: PdfFileLinkAnnotation = new PdfFileLinkAnnotation(10, 40, 30, 30, \"image.png\");\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFileLinkAnnotation, _super);\n    function PdfFileLinkAnnotation(x, y, width, height, fileName) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined' && fileName !== null) {\n            _this._fileName = fileName;\n        }\n        _this._type = _PdfAnnotationType.fileLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfFileLinkAnnotation.prototype, \"action\", {\n        /**\n         * Gets the action of the annotation.\n         *\n         * @returns {string} Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Gets the action of the annotation.\n         * let action: string = annotation.action;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._action === 'undefined' && this._dictionary.has('A')) {\n                var dictionary = this._dictionary.get('A');\n                if (dictionary && dictionary.has('Next')) {\n                    var action = dictionary.get('Next');\n                    if (Array.isArray(action)) {\n                        for (var i = 0; i < action.length; i++) {\n                            var reference = action[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var actionDictionary = this._crossReference._fetch(reference);\n                                if (actionDictionary.has('JS')) {\n                                    this._action = actionDictionary.get('JS');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return this._action;\n        },\n        /**\n         * Sets the action of the annotation.\n         *\n         * @param {string} value Action.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFileLinkAnnotation = page.annotations.at(0) as PdfFileLinkAnnotation;\n         * // Sets the action of the annotation.\n         * annotation.action = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value === 'string') {\n                this._action = value;\n            }\n            if (this._isLoaded && typeof value === 'string') {\n                if (this.action !== value && this._dictionary.has('A')) {\n                    var dictionary = this._dictionary.get('A');\n                    if (dictionary && dictionary.has('Next')) {\n                        var action = dictionary.get('Next');\n                        if (Array.isArray(action)) {\n                            for (var i = 0; i < action.length; i++) {\n                                var reference = action[Number.parseInt(i.toString(), 10)];\n                                if (reference && reference instanceof _PdfReference) {\n                                    var actionDictionary = this._crossReference._fetch(reference);\n                                    if (actionDictionary.has('JS')) {\n                                        actionDictionary.update('JS', value);\n                                        this._action = value;\n                                        this._dictionary._updated = true;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFileLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFileLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfFileLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfFileLinkAnnotation.prototype._addAction = function () {\n        var _this = this;\n        if (this._dictionary.has('A')) {\n            var action = this._dictionary.get('A');\n            if (action) {\n                if (typeof this._action !== 'undefined' && this._action !== null && action.has('Next')) {\n                    var nextAction = action.get('Next');\n                    if (Array.isArray(nextAction) && nextAction.length > 0) {\n                        nextAction.forEach(function (reference) {\n                            if (reference && reference instanceof _PdfReference && reference._isNew) {\n                                _this._crossReference._cacheMap.delete(reference);\n                            }\n                        });\n                    }\n                }\n                if (action.has('F')) {\n                    _removeDuplicateReference(action, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'A');\n        }\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('Launch'));\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('Filespec'));\n        fileDictionary.set('UF', this._fileName);\n        if (typeof this._action !== 'undefined' && this._action !== null) {\n            var actionDictionary = new _PdfDictionary();\n            actionDictionary.set('Type', _PdfName.get('Action'));\n            actionDictionary.set('S', _PdfName.get('JavaScript'));\n            actionDictionary.set('JS', this._action);\n            var ref = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(ref, actionDictionary);\n            actionDictionary._updated = true;\n            dictionary.set('Next', [ref]);\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, fileDictionary);\n        fileDictionary._updated = true;\n        dictionary.set('F', reference);\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n    };\n    PdfFileLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfFileLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfFileLinkAnnotation };\n/**\n * `PdfUriAnnotation` class represents the URI annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new URI annotation\n * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100, ‘http://www.google.com’);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(x, y, width, height, uri) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof uri !== 'undefined' && uri !== null) {\n            _this._uri = uri;\n        }\n        _this._type = _PdfAnnotationType.uriAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        /**\n         * Gets the uri of the annotation.\n         *\n         * @returns {string} Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfUriAnnotation = page.annotations.at(0) as PdfUriAnnotation;\n         * // Gets the uri of the annotation.\n         * let uri: string = annotation.uri;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._uri === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._uri = linkDict.get('URI');\n                }\n            }\n            return this._uri;\n        },\n        /**\n         * Sets the uri of the annotation.\n         *\n         * @param {string} value Uri.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new URI annotation\n         * let annotation: PdfUriAnnotation = new PdfUriAnnotation(100, 150, 200, 100);\n         * // Sets the uri of the annotation\n         * annotation.uri = ‘http://www.google.com’;\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A') && value !== this.uri) {\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict.has('URI')) {\n                        this._uri = value;\n                        linkDict.update('URI', value);\n                        this._dictionary._updated = true;\n                    }\n                }\n                else {\n                    this._uri = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUriAnnotation._load = function (page, dictionary) {\n        var annot = new PdfUriAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfUriAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfUriAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        this._addAction();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfUriAnnotation.prototype._addAction = function () {\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._uri !== 'undefined') {\n            dictionary.set('URI', this._uri);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n    };\n    PdfUriAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfUriAnnotation;\n}(PdfAnnotation));\nexport { PdfUriAnnotation };\n/**\n * `PdfDocumentLinkAnnotation` class represents the document link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new document link annotation\n * let annotation: PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(100, 150, 40, 60);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.documentLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        /**\n         * Gets the destination of the annotation.\n         *\n         * @returns {PdfDestination} Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the destination of the annotation.\n         * let destination: PdfDestination =annotation.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._destination) {\n                this.destination = this._obtainDestination();\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination of the annotation.\n         *\n         * @param {PdfDestination} value Destination.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                this._destination = value;\n                if (this._isLoaded) {\n                    this._destination._initializePrimitive();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfDocumentLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfDocumentLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfDocumentLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._addDocument();\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfDocumentLinkAnnotation.prototype._obtainDestination = function () {\n        if (this._dictionary.has('Dest')) {\n            var array = this._dictionary.get('Dest'); // eslint-disable-line\n            var holder = void 0;\n            if (typeof array === 'string') {\n                array = this._getDestination(array);\n            }\n            if (array && array[0] instanceof _PdfReference) {\n                holder = array[0];\n            }\n            if ((typeof holder === 'undefined' || holder === null) && array && typeof array[0] === 'number') {\n                var pageNumber = array[0];\n                var page = this._crossReference._document.getPage(pageNumber);\n                if (page) {\n                    var mode = array[1];\n                    if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var top_3 = array[3];\n                        var zoom = array[4];\n                        var topValue = (typeof top_3 !== 'undefined' && top_3 !== null) ? (page.size[1] - top_3) : 0;\n                        var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                        this._destination = new PdfDestination(page, [leftValue, topValue]);\n                        if (typeof zoom !== 'undefined' && zoom !== null) {\n                            this._destination.zoom = zoom;\n                        }\n                        if ((typeof left === 'undefined' && left === null) || (typeof top_3 === 'undefined' && top_3 === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    else {\n                        this._destination = new PdfDestination(page);\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                }\n            }\n            if (holder) {\n                var index = _getPageIndex(this._crossReference._document, this._crossReference._fetch(holder));\n                if (index >= 0) {\n                    var page = this._crossReference._document.getPage(index);\n                    if (page && array[1] instanceof _PdfName) {\n                        var mode = array[1];\n                        if (mode) {\n                            if (mode.name === 'XYZ') {\n                                var left = array[2];\n                                var top_4 = array[3];\n                                var zoom = array[4];\n                                var topValue = (typeof top_4 !== 'undefined' && top_4 !== null) ? (page.size[1] - top_4) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left === 'undefined' && left === null) || (typeof top_4 === 'undefined' && top_4 === null)\n                                    || (typeof zoom === 'undefined' && zoom === null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._destination = new PdfDestination();\n                    var zoom = array[4];\n                    var mode = array[1];\n                    if (typeof zoom !== 'undefined' && zoom !== null) {\n                        this._destination.zoom = zoom;\n                    }\n                    if (mode.name === 'Fit') {\n                        this._destination.mode = PdfDestinationMode.fitToPage;\n                    }\n                    else if (mode.name === 'XYZ') {\n                        var left = array[2];\n                        var topValue = array[3];\n                        if ((typeof left === 'undefined' && left === null) || (typeof topValue === 'undefined' && topValue === null)\n                            || (typeof zoom === 'undefined' && zoom === null)) {\n                            this._destination._setValidation(false);\n                        }\n                    }\n                    this._destination._index = index;\n                }\n            }\n        }\n        else if (this._dictionary.has('A') && !this._destination) {\n            var action = this._dictionary.get('A');\n            if (action.has('D')) {\n                var reference = action.get('D'); // eslint-disable-line\n                if (reference !== null && typeof reference !== 'undefined') {\n                    var referenceArray = void 0; // eslint-disable-line\n                    if (Array.isArray(reference)) {\n                        referenceArray = reference;\n                    }\n                    else if (reference && reference instanceof _PdfReference) {\n                        var referenceValue = this._crossReference._fetch(reference); // eslint-disable-line\n                        if (Array.isArray(referenceValue)) {\n                            referenceArray = referenceValue;\n                        }\n                    }\n                    else if (typeof reference === 'string') {\n                        referenceArray = this._getDestination(reference);\n                    }\n                    if (referenceArray && (referenceArray[0] instanceof _PdfReference || typeof referenceArray[0] === 'number')) {\n                        var document_1 = this._crossReference._document;\n                        var index = void 0;\n                        if (referenceArray[0] instanceof _PdfReference) {\n                            index = _getPageIndex(document_1, this._crossReference._fetch(referenceArray[0]));\n                        }\n                        else {\n                            index = referenceArray[0];\n                        }\n                        var page = document_1.getPage(index);\n                        if (page) {\n                            var mode = referenceArray[1];\n                            if (mode.name === 'FitBH' || mode.name === 'FitH') {\n                                var top_5 = referenceArray[2];\n                                var topValue = (typeof top_5 !== 'undefined' && top_5 !== null) ? (page.size[1] - top_5) : 0;\n                                this._destination = new PdfDestination(page, [0, topValue]);\n                                if (typeof top_5 === 'undefined' || top_5 === null) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'XYZ') {\n                                var left = referenceArray[2];\n                                var top_6 = referenceArray[3];\n                                var zoom = referenceArray[4];\n                                var topValue = (typeof top_6 !== 'undefined' && top_6 !== null) ? (page.size[1] - top_6) : 0;\n                                var leftValue = (typeof left !== 'undefined' && left !== null) ? left : 0;\n                                this._destination = new PdfDestination(page, [leftValue, topValue]);\n                                if (typeof zoom !== 'undefined' && zoom !== null) {\n                                    this._destination.zoom = zoom;\n                                }\n                                if ((typeof left !== 'undefined' && left !== null) || (typeof top_6 !== 'undefined' && top_6 !== null)\n                                    || (typeof zoom !== 'undefined' && zoom !== null)) {\n                                    this._destination._setValidation(false);\n                                }\n                            }\n                            else if (mode.name === 'FitR') {\n                                if (referenceArray.length === 6) {\n                                    var left = referenceArray[2];\n                                    var bottom = referenceArray[3];\n                                    var right = referenceArray[4];\n                                    var top_7 = referenceArray[5];\n                                    this._destination = new PdfDestination(page, [left, bottom, right, top_7]);\n                                }\n                            }\n                            else if (mode.name === 'Fit') {\n                                this._destination = new PdfDestination(page);\n                                this._destination.mode = PdfDestinationMode.fitToPage;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this._destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._getDestination = function (name) {\n        var document = this._crossReference._document;\n        var destinationArray; // eslint-disable-line\n        if (document) {\n            destinationArray = this._getNamedDestination(document, name);\n        }\n        return destinationArray;\n    };\n    PdfDocumentLinkAnnotation.prototype._getNamedDestination = function (document, result) {\n        var destination; // eslint-disable-line\n        var catalog = document._catalog;\n        if (catalog && catalog._catalogDictionary && catalog._catalogDictionary.has('Names')) {\n            var names = catalog._catalogDictionary.get('Names');\n            if (names && names.has('Dests')) {\n                var kids = names.get('Dests');\n                if (kids) {\n                    var ref = this._getNamedObjectFromTree(kids, result);\n                    destination = this._extractDestination(ref, document);\n                }\n            }\n        }\n        return destination;\n    };\n    PdfDocumentLinkAnnotation.prototype._extractDestination = function (ref, document) {\n        var dict; // eslint-disable-line\n        var destinationArray; // eslint-disable-line\n        if (ref && ref instanceof _PdfReference) {\n            dict = document._crossReference._fetch(ref);\n        }\n        if (dict) {\n            if (dict instanceof _PdfDictionary && dict.has('D')) {\n                destinationArray = dict.getRaw('D');\n            }\n            else if (Array.isArray(dict)) {\n                destinationArray = dict;\n            }\n        }\n        return destinationArray ? destinationArray : ref;\n    };\n    PdfDocumentLinkAnnotation.prototype._getNamedObjectFromTree = function (kids, name) {\n        var found = false;\n        var currentDictionary = kids;\n        var reference;\n        while (!found && currentDictionary) {\n            if (currentDictionary && currentDictionary.has('Kids')) {\n                currentDictionary = this._getProperKid(currentDictionary, name);\n            }\n            else if (currentDictionary && currentDictionary.has('Names')) {\n                reference = this._findName(currentDictionary, name);\n                found = true;\n            }\n        }\n        return reference;\n    };\n    PdfDocumentLinkAnnotation.prototype._findName = function (current, name) {\n        var names = current.get('Names'); // eslint-disable-line\n        var halfLength = names.length / 2;\n        var lowerIndex = 0;\n        var topIndex = halfLength - 1;\n        var half = 0;\n        var found = false;\n        var destinationReference;\n        while (!found) {\n            half = Math.floor((lowerIndex + topIndex) / 2);\n            if (lowerIndex > topIndex) {\n                break;\n            }\n            var result = names[Number.parseInt(half.toString(), 10) * 2]; // eslint-disable-line\n            if (result && result instanceof _PdfReference) {\n                result = current._crossReference._fetch(result);\n            }\n            var cmp = this._stringCompare(name, result);\n            if (cmp > 0) {\n                lowerIndex = half + 1;\n            }\n            else if (cmp < 0) {\n                topIndex = half - 1;\n            }\n            else {\n                found = true;\n                break;\n            }\n        }\n        if (found) {\n            destinationReference = names[half * 2 + 1];\n        }\n        return destinationReference;\n    };\n    PdfDocumentLinkAnnotation.prototype._getProperKid = function (kids, name) {\n        var kidsArray; // eslint-disable-line\n        var kid;\n        if (kids && kids.has('Kids')) {\n            kidsArray = kids.getRaw('Kids');\n        }\n        if (kidsArray && Array.isArray(kidsArray) && kidsArray.length !== 0) {\n            kidsArray = kids.getArray('Kids');\n            for (var i = 0; i < kidsArray.length; i++) {\n                kid = kidsArray[Number.parseInt(i.toString(), 10)];\n                if (this._checkLimits(kid, name)) {\n                    break;\n                }\n            }\n        }\n        return kid;\n    };\n    PdfDocumentLinkAnnotation.prototype._checkLimits = function (kid, result) {\n        var found = false;\n        if (kid && kid.has('Limits')) {\n            var limits = kid.get('Limits'); // eslint-disable-line\n            var lowerLimit = limits[0];\n            var higherLimit = limits[1];\n            var lowCompare = this._stringCompare(lowerLimit, result);\n            var highCompare = this._stringCompare(higherLimit, result);\n            if (lowCompare === 0 || highCompare === 0) {\n                found = true;\n            }\n            else if (lowCompare < 0 && highCompare > 0) {\n                found = true;\n            }\n        }\n        return found;\n    };\n    PdfDocumentLinkAnnotation.prototype._stringCompare = function (limits, result) {\n        var byteArray = _stringToBytes(limits);\n        var byteArray1 = _stringToBytes(result);\n        var commonSize = Math.min(byteArray.length, byteArray1.length);\n        var resultValue = 0;\n        for (var i = 0; i < commonSize; i++) {\n            var byte = byteArray[Number.parseInt(i.toString(), 10)];\n            var byte1 = byteArray1[Number.parseInt(i.toString(), 10)];\n            resultValue = byte - byte1;\n            if (resultValue !== 0) {\n                break;\n            }\n        }\n        if (resultValue === 0) {\n            resultValue = byteArray.length - byteArray1.length;\n        }\n        return resultValue;\n    };\n    PdfDocumentLinkAnnotation.prototype._addDocument = function () {\n        if (this.destination) {\n            this._dictionary.set('Dest', this.destination._array);\n        }\n    };\n    PdfDocumentLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        else if (this._destination) {\n            this._dictionary.update('Dest', this._destination._array);\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfDocumentLinkAnnotation };\n/**\n * `PdfTextWebLinkAnnotation` class represents the link annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new PDF string format\n * const format: PdfStringFormat = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n * // Create a new standard font\n * const font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n * // Get the text size\n * let size: number[] = font.measureString(\"Syncfusion Site\", format, [0, 0], 0, 0);\n * // Create a new text web link annotation\n * let annot: PdfTextWebLinkAnnotation = new PdfTextWebLinkAnnotation(50, 40, size[0], size[1], [0, 0, 0], [165, 42, 42], 1);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextWebLinkAnnotation, _super);\n    function PdfTextWebLinkAnnotation(x, y, width, height, brushColor, penColor, penWidth, text) {\n        var _this = _super.call(this) || this;\n        _this._isActionAdded = false;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Link'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._textWebLink = typeof text !== 'undefined' && text !== null ? text : '';\n        if (typeof brushColor !== 'undefined' && brushColor !== null) {\n            _this._brush = new PdfBrush(brushColor);\n        }\n        if (typeof penColor !== 'undefined' && penColor !== null) {\n            _this._pen = new PdfPen(penColor, penWidth ? penWidth : 1);\n        }\n        _this._type = _PdfAnnotationType.textWebLinkAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextWebLinkAnnotation.prototype, \"url\", {\n        /**\n         * Gets the url of the annotation.\n         *\n         * @returns {string} Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Gets the URL of the annotation.\n         * let url: string = annotation.url;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._url === 'undefined' && this._dictionary.has('A')) {\n                var linkDict = this._dictionary.get('A');\n                if (linkDict.has('URI')) {\n                    this._url = linkDict.get('URI');\n                }\n            }\n            return this._url;\n        },\n        /**\n         * Sets the url of the annotation.\n         *\n         * @param {string} value Url.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextWebLinkAnnotation = page.annotations.at(0) as PdfTextWebLinkAnnotation;\n         * // Sets the URL of the annotation.\n         * annotation.url = ‘http://www.syncfusion.com’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                if (this._isLoaded && this._dictionary.has('A')) {\n                    var linkSource = this._dictionary._get('A'); // eslint-disable-line\n                    var linkDict = this._dictionary.get('A');\n                    if (linkDict && linkDict.has('URI')) {\n                        this._url = value;\n                        linkDict.update('URI', value);\n                        if (!(linkSource instanceof _PdfReference)) {\n                            this._dictionary._updated = linkDict._updated;\n                        }\n                    }\n                }\n                else {\n                    this._url = value;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLinkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextWebLinkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextWebLinkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextWebLinkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        if (!this._isActionAdded) {\n            this._addAction();\n            this._isActionAdded = true;\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfTextWebLinkAnnotation.prototype._addAction = function () {\n        var rect = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        if (typeof this.font === 'undefined' || this.font === null) {\n            this.font = this._lineCaptionFont;\n        }\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        this._page.graphics.drawString(this._textWebLink, this.font, rect, this._pen, this._brush, format);\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', _PdfName.get('Action'));\n        dictionary.set('S', _PdfName.get('URI'));\n        if (typeof this._url !== 'undefined') {\n            dictionary.set('URI', this._url);\n        }\n        dictionary._updated = true;\n        this._dictionary.set('A', dictionary);\n        this._dictionary.update('Border', [0, 0, 0]);\n    };\n    PdfTextWebLinkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfTextWebLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfTextWebLinkAnnotation };\n/**\n * `PdfAttachmentAnnotation` class represents the attachment annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new attachment annotation\n * const annotation: PdfAttachmentAnnotation = new PdfAttachmentAnnotation(300, 200, 30, 30, \"Nature.jpg\", imageData);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAttachmentAnnotation = /** @class */ (function (_super) {\n    __extends(PdfAttachmentAnnotation, _super);\n    function PdfAttachmentAnnotation(x, y, width, height, fileName, data) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfAttachmentIcon.pushPin;\n        _this._iconString = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FileAttachment'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        if (typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        _this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n        _this._type = _PdfAnnotationType.fileAttachmentAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfAttachmentAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the attachment annotation.\n         *\n         * @returns {PdfAttachmentIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Gets the icon type of the attachment annotation.\n         * let icon: PdfAttachmentIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapAttachmentIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the attachment annotation.\n         *\n         * @param {PdfAttachmentIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfAttachmentAnnotation = page.annotations.at(0) as PdfAttachmentAnnotation;\n         * // Sets the icon type of the attachment annotation.\n         * annotation.icon = PdfAttachmentIcon.pushPin;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get(this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAttachmentAnnotation._load = function (page, dictionary) {\n        var annot = new PdfAttachmentAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfAttachmentAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfAttachmentAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n        this._addAttachment();\n    };\n    PdfAttachmentAnnotation.prototype._addAttachment = function () {\n        if (this._dictionary.has('FS')) {\n            var fileSpecification = this._dictionary.get('FS');\n            if (fileSpecification && fileSpecification.has('EF')) {\n                var embeddedFile = fileSpecification.get('EF');\n                if (embeddedFile && embeddedFile.has('F')) {\n                    _removeDuplicateReference(embeddedFile, this._crossReference, 'F');\n                }\n            }\n            _removeDuplicateReference(this._dictionary, this._crossReference, 'FS');\n        }\n        var fileSpectDictionary = new _PdfDictionary();\n        fileSpectDictionary.set('Type', _PdfName.get('Filespec'));\n        fileSpectDictionary.set('Desc', this._fileName);\n        fileSpectDictionary.set('F', this._fileName);\n        fileSpectDictionary.set('UF', this._fileName);\n        var fileDictionary = new _PdfDictionary();\n        fileDictionary.set('Type', _PdfName.get('EmbeddedFile'));\n        var paramsDictionary = new _PdfDictionary();\n        var dateTime = new Date();\n        paramsDictionary.set('CreationDate', dateTime.toTimeString());\n        paramsDictionary.set('ModDate', new Date().toTimeString());\n        paramsDictionary.set('Size', this._stream.length);\n        fileDictionary.set('Params', paramsDictionary);\n        this._stream.dictionary = new _PdfDictionary();\n        this._stream.dictionary = fileDictionary;\n        fileDictionary._crossReference = this._crossReference;\n        var char1 = this._crossReference._newLine.charCodeAt(0);\n        var char2 = this._crossReference._newLine.charCodeAt(1);\n        var buffer = [char1, char2, 37, 80, 68, 70, 45];\n        fileDictionary._crossReference._writeObject(this._stream, buffer);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._stream);\n        fileDictionary._updated = true;\n        var efileDictionary = new _PdfDictionary();\n        efileDictionary.set('F', reference);\n        fileSpectDictionary.set('EF', efileDictionary);\n        var fsReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(fsReference, fileSpectDictionary);\n        fileSpectDictionary._updated = true;\n        this._dictionary.update('FS', fsReference);\n    };\n    PdfAttachmentAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isLoaded) {\n            this._postProcess();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    PdfAttachmentAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfAttachmentIcon.pushPin:\n                this._iconString = 'PushPin';\n                break;\n            case PdfAttachmentIcon.tag:\n                this._iconString = 'Tag';\n                break;\n            case PdfAttachmentIcon.graph:\n                this._iconString = 'Graph';\n                break;\n            case PdfAttachmentIcon.paperClip:\n                this._iconString = 'Paperclip';\n                break;\n        }\n        return this._iconString;\n    };\n    return PdfAttachmentAnnotation;\n}(PdfComment));\nexport { PdfAttachmentAnnotation };\n/**\n * `Pdf3DAnnotation` class represents the 3D annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: Pdf3DAnnotation = page.annotations.at(0) as Pdf3DAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar Pdf3DAnnotation = /** @class */ (function (_super) {\n    __extends(Pdf3DAnnotation, _super);\n    /**\n     * Initializes a new instance of the `Pdf3DAnnotation` class.\n     *\n     * @private\n     */\n    function Pdf3DAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.movieAnnotation;\n        return _this;\n    }\n    Pdf3DAnnotation._load = function (page, dictionary) {\n        var annot = new Pdf3DAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    Pdf3DAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    Pdf3DAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return Pdf3DAnnotation;\n}(PdfAnnotation));\nexport { Pdf3DAnnotation };\n/**\n * `PdfTextMarkupAnnotation` class represents the text markup annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new text markup annotation\n * let annotation: PdfTextMarkupAnnotation = new PdfTextMarkupAnnotation('Text markup', 50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextMarkupAnnotation = /** @class */ (function (_super) {\n    __extends(PdfTextMarkupAnnotation, _super);\n    function PdfTextMarkupAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textMarkupType = PdfTextMarkupAnnotationType.highlight;\n        _this._quadPoints = new Array(8);\n        _this._boundsCollection = [];\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        if (typeof text !== 'undefined') {\n            _this._text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.textMarkupAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the text markup annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds: {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._bounds = _calculateBounds(this._dictionary, this._page);\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the text markup annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {x: 10, y: 10, width: 150, height: 5};\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                if (this._isLoaded) {\n                    if ((value.x !== this.bounds.x) || (value.y !== this.bounds.y) ||\n                        (value.width !== this.bounds.width) || (value.height !== this.bounds.height)) {\n                        var size = this._page.size;\n                        if (size) {\n                            var y = size[1] - (value.y + value.height);\n                            var height = y + value.height;\n                            this._dictionary.update('Rect', [value.x, y, value.x + value.width, height]);\n                            this._bounds = value;\n                            this._isChanged = true;\n                        }\n                    }\n                }\n                else {\n                    this._bounds = value;\n                    var nativeRectangle = this._obtainNativeRectangle();\n                    this._dictionary.update('Rect', _fromRectangle({ x: nativeRectangle[0], y: nativeRectangle[1], width: nativeRectangle[2], height: nativeRectangle[3] }));\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the textMarkUp Color type of the attachment annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined' && this._dictionary.has('C')) {\n                this._textMarkUpColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the textMarkUp Color type of the attachment annotation.\n         * annotation.textMarkUpColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.color;\n                if (!this._isLoaded ||\n                    typeof extColor === 'undefined' ||\n                    (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._color = value;\n                    this._textMarkUpColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"textMarkupType\", {\n        /**\n         * Gets the markup type of the annotation.\n         *\n         * @returns {PdfTextMarkupAnnotationType} Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup type of the annotation.\n         * let textMarkupType: PdfTextMarkupAnnotationType = annotation.textMarkupType;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Subtype')) {\n                var text = this._dictionary.get('Subtype');\n                this._textMarkupType = _mapMarkupAnnotationType(text.name);\n            }\n            return this._textMarkupType;\n        },\n        /**\n         * Sets the markup type of the annotation.\n         *\n         * @param {PdfTextMarkupAnnotationType} value Markup type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup type of the annotation.\n         * annotation.textMarkupType = PdfTextMarkupAnnotationType.squiggly;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._textMarkupType = value;\n                this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(value)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextMarkupAnnotation.prototype, \"boundsCollection\", {\n        /**\n         * Gets the markup bounds collection of the annotation.\n         *\n         * @returns {Array<number[]>} Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as  PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation =  page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Gets the markup bounds collection of the annotation.\n         * let boundsCollection : Array<number[]> = annotation.boundsCollection;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var collection = [];\n                if (this._dictionary.has('QuadPoints')) {\n                    var points = this._dictionary.getArray('QuadPoints');\n                    if (points && points.length > 0) {\n                        var count = points.length / 8;\n                        for (var i = 0; i < count; i++) {\n                            var x = points[4 + (i * 8)] - points[i * 8];\n                            var y = points[5 + (i * 8)] - points[1 + (i * 8)];\n                            var height = Math.sqrt((x * x) + (y * y));\n                            x = points[6 + (i * 8)] - points[4 + (i * 8)];\n                            y = points[7 + (i * 8)] - points[5 + (i * 8)];\n                            var width = Math.sqrt((x * x) + (y * y));\n                            var rect = [points[i * 8], this._page.size[1] - points[1 + (i * 8)], width, height];\n                            collection.push(rect);\n                        }\n                    }\n                }\n                return collection;\n            }\n            return this._boundsCollection;\n        },\n        /**\n         * Sets the markup bounds collection of the annotation.\n         *\n         * @param {Array<number[]>} value Markup bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfTextMarkupAnnotation = page.annotations.at(0) as PdfTextMarkupAnnotation;\n         * // Sets the markup bounds collection of the  annotation.\n         * annotation.boundsCollection = [[50, 50, 100, 100], [201, 101, 61, 31], [101, 401, 61, 31]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded && typeof value !== 'undefined') {\n                if (value.length > 0) {\n                    this._quadPoints = new Array((value.length * 8));\n                    for (var i = 0; i < value.length; i++) {\n                        this._boundsCollection.push(value[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                else {\n                    this._quadPoints = new Array(8);\n                    this._boundsCollection = value;\n                }\n                this._isChanged = true;\n            }\n            if (this._isLoaded && typeof value !== 'undefined') {\n                var isChanged = false;\n                if (this.boundsCollection.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this.boundsCollection[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n                if (isChanged) {\n                    this._quadPoints = new Array((value.length * 8));\n                    var pageHeight = this._page.size[1];\n                    for (var i = 0; i < value.length; i++) {\n                        this._quadPoints[0 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[1 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[2 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[3 + (Number.parseInt(i.toString(), 10) * 8)] = pageHeight -\n                            value[Number.parseInt(i.toString(), 10)][1];\n                        this._quadPoints[4 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0];\n                        this._quadPoints[5 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[1 + (i * 8)] -\n                            value[Number.parseInt(i.toString(), 10)][3];\n                        this._quadPoints[6 + (Number.parseInt(i.toString(), 10) * 8)] = value[Number.parseInt(i.toString(), 10)][0] +\n                            value[Number.parseInt(i.toString(), 10)][2];\n                        this._quadPoints[7 + (Number.parseInt(i.toString(), 10) * 8)] = this._quadPoints[5 +\n                            (Number.parseInt(i.toString(), 10) * 8)];\n                    }\n                    this._dictionary.update('QuadPoints', this._quadPoints);\n                    this._isChanged = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextMarkupAnnotation._load = function (page, dictionary) {\n        var annot = new PdfTextMarkupAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfTextMarkupAnnotation.prototype._obtainNativeRectangle = function () {\n        var nativeRectangle = [this._bounds.x, this._bounds.y + this._bounds.height, this._bounds.width, this._bounds.height];\n        var cropOrMediaBox;\n        if (this._page) {\n            var size = this._page.size;\n            nativeRectangle[1] = size[1] - nativeRectangle[1];\n            cropOrMediaBox = this._getCropOrMediaBox();\n        }\n        if (cropOrMediaBox) {\n            if (cropOrMediaBox[3] < 0) {\n                var yCrop = cropOrMediaBox[1];\n                var heightCrop = cropOrMediaBox[3];\n                cropOrMediaBox[1] = heightCrop;\n                cropOrMediaBox[3] = yCrop;\n            }\n            if (cropOrMediaBox.length > 2 && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n                nativeRectangle[0] += cropOrMediaBox[0];\n                if (this._page && this._page._pageDictionary.has('MediaBox') && !this._page._pageDictionary.has('CropBox') && cropOrMediaBox[1] > 0 && cropOrMediaBox[3] === 0) {\n                    nativeRectangle[1] += cropOrMediaBox[3];\n                }\n                else {\n                    nativeRectangle[1] += cropOrMediaBox[1];\n                }\n            }\n        }\n        return nativeRectangle;\n    };\n    PdfTextMarkupAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfTextMarkupAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            dictionary.set('W', this.border.width);\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var size = this._page.size;\n        this._dictionary.update('Subtype', _PdfName.get(_reverseMarkupAnnotationType(this._textMarkupType)));\n        if (this._isChanged) {\n            this._setQuadPoints(size);\n            this._dictionary.update('Rect', _updateBounds(this));\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createMarkupAppearance();\n            if (!this._isLoaded && this._boundsCollection.length > 1 && this._isChanged) {\n                var native = this._obtainNativeRectangle();\n                this._dictionary.update('Rect', [native[0], native[1], native[0] + native[2], native[1] + native[3]]);\n            }\n            if (this._dictionary.has('AP')) {\n                _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n            }\n            var dictionary = new _PdfDictionary();\n            this._appearanceTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            this._appearanceTemplate._content.reference = reference;\n            dictionary.set('N', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        if (typeof this._text !== 'undefined' && this._text !== null) {\n            this._dictionary.set('Contents', this._text);\n        }\n        this._isChanged = false;\n    };\n    PdfTextMarkupAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createMarkupAppearance();\n                if (!isFlatten) {\n                    if (this._dictionary.has('AP')) {\n                        _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n                    }\n                    var dictionary = new _PdfDictionary();\n                    this._appearanceTemplate._content.dictionary._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n                    this._appearanceTemplate._content.reference = reference;\n                    dictionary.set('N', reference);\n                    dictionary._updated = true;\n                    this._dictionary.set('AP', dictionary);\n                }\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createMarkupAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isNormalMatrix && this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary, this._appearanceTemplate)) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (!this._dictionary.has('AP') && this._appearanceTemplate) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n    };\n    PdfTextMarkupAnnotation.prototype._createMarkupAppearance = function () {\n        var width = 0;\n        var height = 0;\n        var rectangle;\n        if (this.boundsCollection.length > 1) {\n            var pdfPath = new PdfPath();\n            for (var i = 0; i < this.boundsCollection.length; i++) {\n                var bounds = [];\n                bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                pdfPath.addRectangle(bounds[0], bounds[1], bounds[2], bounds[3]);\n            }\n            var rect = pdfPath._getBounds();\n            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n            this.bounds = rectangle;\n            width = rectangle.width;\n            height = rectangle.height;\n        }\n        else {\n            if (this._dictionary.has('QuadPoints')) {\n                var quadPoints = this._dictionary.get('QuadPoints');\n                if (this._quadPoints !== null) {\n                    for (var i = 0; i < (quadPoints.length / 8); i++) {\n                        if (this._isLoaded) {\n                            var point = new Array();\n                            var j = 0;\n                            for (var k = 0; k < quadPoints.length;) {\n                                var x1 = quadPoints[Number.parseInt(k.toString(), 10)];\n                                var y1 = quadPoints[k + 1];\n                                point[Number.parseInt(j.toString(), 10)] = [x1, y1];\n                                k = k + 2;\n                                j++;\n                            }\n                            var path = new PdfPath();\n                            path._addLines(point);\n                            var rect = path._getBounds();\n                            rectangle = { x: rect[0], y: rect[1], width: rect[2], height: rect[3] };\n                            width = rectangle.width;\n                            height = rectangle.height;\n                        }\n                        else {\n                            var x = Math.floor(quadPoints[4 + (i * 8)]) - Math.floor(quadPoints[0 + (i * 8)]);\n                            var y = Math.floor(quadPoints[5 + (i * 8)]) - Math.floor(quadPoints[1 + (i * 8)]);\n                            height = Math.sqrt((x * x) + (y * y));\n                            x = Math.floor(quadPoints[6 + (i * 8)]) - Math.floor(quadPoints[4 + (i * 8)]);\n                            y = Math.floor(quadPoints[7 + (i * 8)]) - Math.floor(quadPoints[5 + (i * 8)]);\n                            width = Math.sqrt((x * x) + (y * y));\n                            this.bounds = { x: this.bounds.x, y: this.bounds.y, width: width, height: height };\n                        }\n                    }\n                }\n            }\n        }\n        var nativeRectangle = [0, 0, width, height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var graphics = template.graphics;\n        if (typeof this.opacity !== 'undefined') {\n            graphics.setTransparency(this.opacity, this.opacity, PdfBlendMode.multiply);\n        }\n        if (this.textMarkUpColor) {\n            var pdfPen = new PdfPen(this.textMarkUpColor, this.border.width);\n            var brush = new PdfBrush(this.textMarkUpColor);\n            var x1 = 0;\n            var y1 = 0;\n            var w1 = 0;\n            var h1 = 0;\n            if (this.boundsCollection.length > 1) {\n                for (var i = 0; i < this.boundsCollection.length; i++) {\n                    var bounds = [];\n                    bounds[0] = this.boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                    bounds[1] = this.boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    bounds[2] = this.boundsCollection[Number.parseInt(i.toString(), 10)][2];\n                    bounds[3] = this.boundsCollection[Number.parseInt(i.toString(), 10)][3];\n                    if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                        graphics.drawRectangle(bounds[0] - rectangle.x, bounds[1] - rectangle.y, bounds[2], bounds[3], brush);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - ((bounds[3] / 2) / 3));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                        x1 = bounds[0] - rectangle.x;\n                        y1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        w1 = bounds[2] + (bounds[0] - rectangle.x);\n                        h1 = (bounds[1] - rectangle.y) + (bounds[3] - (bounds[3] / 2));\n                        graphics.drawLine(pdfPen, x1, y1, w1, h1);\n                    }\n                    else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                        pdfPen._width = bounds[3] * 0.02;\n                        graphics.save();\n                        graphics.translateTransform(bounds[0] - rectangle.x, (bounds[1] - rectangle.y));\n                        graphics.setClip([0, 0, bounds[2], bounds[3]]);\n                        graphics.drawPath(this._drawSquiggly(bounds[2], bounds[3]), pdfPen);\n                        graphics.restore();\n                    }\n                }\n            }\n            else {\n                if (this.textMarkupType === PdfTextMarkupAnnotationType.highlight) {\n                    graphics.drawRectangle(0, 0, width, height, brush);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.underline) {\n                    graphics.drawLine(pdfPen, 0, height - ((height / 2) / 3), width, height - ((height / 2) / 3));\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.strikeOut) {\n                    graphics.drawLine(pdfPen, 0, height / 2, width, height / 2);\n                }\n                else if (this.textMarkupType === PdfTextMarkupAnnotationType.squiggly) {\n                    pdfPen._width = height * 0.02;\n                    graphics.drawPath(this._drawSquiggly(Math.round(width), Math.round(height)), pdfPen);\n                }\n                if (this._isLoaded) {\n                    var defaultRect = [rectangle.x, rectangle.y, rectangle.x + rectangle.width, rectangle.y + rectangle.height];\n                    var rect = this._setAppearance ? _updateBounds(this) : defaultRect;\n                    this._dictionary.update('Rect', rect);\n                }\n            }\n        }\n        return template;\n    };\n    PdfTextMarkupAnnotation.prototype._drawSquiggly = function (width, height) {\n        if (Math.floor(width) % 2 !== 0 || Math.round(width) > width) {\n            width = Math.floor(width) + 1;\n        }\n        var path = new PdfPath();\n        var pathPoints = new Array();\n        var pathPointsCount = Math.ceil((width / height) * 16);\n        var length = width / (pathPointsCount / 2);\n        var location = parseFloat(((length + length) * 0.6).toFixed(2));\n        var zigZag = location;\n        var x = 0;\n        for (var i = 0; i < pathPointsCount; i++) {\n            var y = ((height - location) + zigZag) - (height * 0.02);\n            var temp = [x, parseFloat(y.toFixed(2))];\n            pathPoints.push(temp);\n            if (zigZag === 0) {\n                zigZag = location;\n            }\n            else {\n                zigZag = 0;\n            }\n            x = x + length;\n        }\n        path._addLines(pathPoints);\n        return path;\n    };\n    PdfTextMarkupAnnotation.prototype._setQuadPoints = function (pageSize) {\n        var textQuadLocation = [];\n        var pageHeight = pageSize[1];\n        var margins;\n        if (this._page && this._page._isNew && this._page._pageSettings && this._page._pageSettings.margins) {\n            var margin = this._page._pageSettings.margins;\n            margins = { left: margin.left, top: margin.top, right: margin.right, bottom: margin.bottom };\n        }\n        else {\n            margins = { left: 0, top: 0, right: 0, bottom: 0 };\n        }\n        if (this.bounds.x !== 0 && this.bounds.y !== 0 && this.bounds.width !== 0 && this.bounds.height !== 0) {\n            this._boundsCollection[0] = [this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height];\n        }\n        var noofRect = this._quadPoints.length / 8;\n        var cropOrMediaBox = this._getMediaOrCropBox(this._page);\n        var isContainscropOrMediaBox = false;\n        if (!this._isLoaded && cropOrMediaBox && cropOrMediaBox.length > 3 && !this.flatten) {\n            var cropOrMediaBoxX = cropOrMediaBox[0];\n            var cropOrMediaBoxY = cropOrMediaBox[1];\n            if (cropOrMediaBoxX !== 0 || cropOrMediaBoxY !== 0) {\n                for (var i = 0; i < noofRect; i++) {\n                    var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0] + margins.left + cropOrMediaBoxX;\n                    var locationY = cropOrMediaBoxY + margins.top;\n                    textQuadLocation[0 + (i * 8)] = locationX + margins.left;\n                    textQuadLocation[1 + (i * 8)] = (pageHeight - (-locationY)) - margins.top -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) +\n                        margins.left;\n                    textQuadLocation[3 + (i * 8)] = (pageHeight - (-locationY)) - margins.top -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                    textQuadLocation[4 + (i * 8)] = locationX + margins.left;\n                    textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] -\n                        this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n                    textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) +\n                        margins.left;\n                    textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n                }\n                isContainscropOrMediaBox = true;\n            }\n        }\n        if (!isContainscropOrMediaBox) {\n            for (var i = 0; i < noofRect; i++) {\n                var locationX = this._boundsCollection[Number.parseInt(i.toString(), 10)][0];\n                var locationY = this._boundsCollection[Number.parseInt(i.toString(), 10)][1];\n                textQuadLocation[0 + (i * 8)] = locationX + margins.left;\n                textQuadLocation[1 + (i * 8)] = (pageHeight - locationY) - margins.top;\n                textQuadLocation[2 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) + margins.left;\n                textQuadLocation[3 + (i * 8)] = (pageHeight - locationY) - margins.top;\n                textQuadLocation[4 + (i * 8)] = locationX + margins.left;\n                textQuadLocation[5 + (i * 8)] = (textQuadLocation[1 + (i * 8)] -\n                    this._boundsCollection[Number.parseInt(i.toString(), 10)][3]);\n                textQuadLocation[6 + (i * 8)] = (locationX + this._boundsCollection[Number.parseInt(i.toString(), 10)][2]) + margins.left;\n                textQuadLocation[7 + (i * 8)] = textQuadLocation[5 + (i * 8)];\n            }\n        }\n        this._points = textQuadLocation;\n        this._dictionary.set('QuadPoints', this._points);\n    };\n    return PdfTextMarkupAnnotation;\n}(PdfComment));\nexport { PdfTextMarkupAnnotation };\n/**\n * `PdfWatermarkAnnotation` class represents the watermark annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new water mark annotation\n * const annotation: PdfWatermarkAnnotation = new PdfWatermarkAnnotation('Water Mark', 50, 100, 100, 50);\n * // Set the color of the annotation\n * annotation.color = [0, 0, 0];\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWatermarkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWatermarkAnnotation, _super);\n    function PdfWatermarkAnnotation(text, x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._watermarkText = '';\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Watermark'));\n        if (typeof text !== 'undefined') {\n            _this._watermarkText = text;\n            _this.text = text;\n        }\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.watermarkAnnotation;\n        return _this;\n    }\n    PdfWatermarkAnnotation._load = function (page, dictionary) {\n        var annot = new PdfWatermarkAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfWatermarkAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfWatermarkAnnotation.prototype._postProcess = function () {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (typeof this.color === 'undefined') {\n            this.color = [0, 0, 0];\n        }\n        this._appearanceTemplate = this._createWatermarkAppearance();\n        this._dictionary.update('Rect', _updateBounds(this));\n        if (typeof this.opacity !== 'undefined' && this._opacity !== 1.0) {\n            this._dictionary.set('CA', this._opacity);\n        }\n    };\n    PdfWatermarkAnnotation.prototype._createWatermarkAppearance = function () {\n        var font = this._obtainFont();\n        if ((typeof font === 'undefined' || font === null) || ((!this._isLoaded || (this._page && this._page._isDuplicate)) && font.size === 1)) {\n            font = this._lineCaptionFont;\n            this._pdfFont = font;\n        }\n        this._rotateAngle = this._getRotationAngle();\n        if (typeof this.rotationAngle !== 'undefined' && this._rotate !== PdfRotationAngle.angle0 || this._rotateAngle !== PdfRotationAngle.angle0) {\n            if (this._rotateAngle === 0) {\n                this._rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this._rotateAngle);\n        }\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance = new PdfAppearance(this, nativeRectangle);\n        appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        var template = appearance.normal;\n        _setMatrix(template, this._rotateAngle);\n        var graphics = appearance.normal.graphics;\n        var width = this.border.width / 2;\n        var format = new PdfStringFormat(PdfTextAlignment.left, PdfVerticalAlignment.top);\n        var borderPen = new PdfPen(this.color, width);\n        var backBrush;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this._innerColor);\n        }\n        if (this._isLoaded) {\n            if (this._dictionary.has('Contents')) {\n                this._watermarkText = this._dictionary.get('Contents');\n            }\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        else {\n            this._dictionary.update('Contents', this._watermarkText);\n        }\n        if (typeof this._watermarkText !== 'undefined') {\n            graphics.drawString(this._watermarkText, font, [0, 0, 0, 0], borderPen, backBrush, format);\n        }\n        if (this._dictionary.has('AP')) {\n            var dictionary_1 = this._dictionary.get('AP'); // eslint-disable-line\n            if (dictionary_1 && dictionary_1 instanceof _PdfDictionary) {\n                _removeDuplicateReference(dictionary_1, this._crossReference, 'N');\n            }\n        }\n        var dictionary = new _PdfDictionary();\n        graphics._template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, graphics._template._content);\n        graphics._template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        return template;\n    };\n    PdfWatermarkAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (!isFlatten) {\n                this._appearanceTemplate = this._createWatermarkAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess();\n            if (!this._appearanceTemplate) {\n                if (isFlatten) {\n                    if (!this._dictionary.has('AP')) {\n                        this._appearanceTemplate = this._createWatermarkAppearance();\n                    }\n                    else {\n                        var dictionary = this._dictionary.get('AP');\n                        if (dictionary && dictionary.has('N')) {\n                            var appearanceStream = dictionary.get('N');\n                            if (appearanceStream) {\n                                var reference = dictionary.getRaw('N');\n                                if (reference) {\n                                    appearanceStream.reference = reference;\n                                }\n                                this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n    };\n    return PdfWatermarkAnnotation;\n}(PdfAnnotation));\nexport { PdfWatermarkAnnotation };\n/**\n * `PdfRubberStampAnnotation` class represents the rubber stamp annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new rubber stamp annotation\n * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRubberStampAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRubberStampAnnotation, _super);\n    function PdfRubberStampAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._icon = PdfRubberStampAnnotationIcon.draft;\n        _this._stampWidth = 0;\n        _this._iconString = '';\n        _this.rotateAngle = 0;\n        _this._alterRotateBounds = true;\n        _this._stampAppearanceFont = new PdfStandardFont(PdfFontFamily.helvetica, 20, PdfFontStyle.italic | PdfFontStyle.bold);\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Stamp'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.rubberStampAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"icon\", {\n        /**\n         * Gets the icon type of the rubber stamp annotation.\n         *\n         * @returns {PdfRubberStampAnnotationIcon} Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Gets the icon type of the rubber stamp annotation.\n         * let icon: PdfRubberStampAnnotationIcon = annotation.icon;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Name')) {\n                this._icon = _mapRubberStampIcon(this._dictionary.get('Name').name);\n            }\n            return this._icon;\n        },\n        /**\n         * Sets the icon type of the rubber stamp annotation.\n         *\n         * @param {PdfRubberStampAnnotationIcon} value Annotation icon.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n         * // Sets the icon type of the rubber stamp annotation.\n         * annotation.icon = PdfRubberStampAnnotationIcon.completed;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._icon = value;\n                this._dictionary.update('Name', _PdfName.get('#' + this._obtainIconName(this._icon)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"appearance\", {\n        /**\n         * Get the appearance of the rubber stamp annotation. (Read only)\n         *\n         * @returns {PdfAppearance} Returns the appearance of the annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Create a new rubber stamp annotation\n         * const annotation: PdfRubberStampAnnotation = new PdfRubberStampAnnotation(50, 100, 100, 50);\n         * // Get the appearance of the annotation\n         * let appearance: PdfAppearance = annotation.appearance;\n         * // Access the normal template of the appearance\n         * let template: PdfTemplate = appearance.normal;\n         * // Create new image object by using JPEG image data as Base64 string format\n         * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n         * // Draw the image as the custom appearance for the annotation\n         * template.graphics.drawImage(image, 0, 0, 100, 50);\n         * // Add annotation to the page\n         * page.annotations.add(annotation);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                return null;\n            }\n            if (typeof this._appearance === 'undefined') {\n                var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n                this._appearance = new PdfAppearance(this, nativeRectangle);\n                this._appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n            }\n            return this._appearance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create an appearance template for a rubber stamp annotation.\n     *\n     * @returns {PdfTemplate} Returns the appearance template of the annotation.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the first page\n     * let page: PdfPage = document.getPage(0) as PdfPage;\n     * // Get the first annotation of the page\n     * let annotation: PdfRubberStampAnnotation = page.annotations.at(0) as PdfRubberStampAnnotation;\n     * // Gets the appearance template of the annotation.\n     * let template: PdfTemplate = annotation.createTemplate();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfRubberStampAnnotation.prototype.createTemplate = function () {\n        var template;\n        if (this._isLoaded) {\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        template = new PdfTemplate();\n                        template._isExported = true;\n                        var templateDictionary = appearanceStream.dictionary;\n                        var matrix = templateDictionary.getArray('Matrix');\n                        var bounds = templateDictionary.getArray('BBox');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            if (bounds && bounds.length > 3) {\n                                var rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                template._size = [rectangle[2], rectangle[3]];\n                                template._templateOriginalSize = [rect.width, rect.height];\n                            }\n                        }\n                        else if (bounds) {\n                            templateDictionary.update('Matrix', [1, 0, 0, 1, -bounds[0], -bounds[1]]);\n                            template._size = [bounds[2], bounds[3]];\n                        }\n                        template._exportStream(dictionary, this._crossReference);\n                    }\n                }\n            }\n            else {\n                template = this._createRubberStampAppearance();\n            }\n        }\n        return template;\n    };\n    Object.defineProperty(PdfRubberStampAnnotation.prototype, \"_innerTemplateBounds\", {\n        get: function () {\n            var innerBounds;\n            if (this._isLoaded) {\n                innerBounds = this._obtainInnerBounds();\n                innerBounds.x = this.bounds.x;\n                innerBounds.y = this.bounds.y;\n            }\n            return innerBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRubberStampAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRubberStampAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRubberStampAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRubberStampAnnotation.prototype._postProcess = function () {\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        if (this._dictionary.has('AP') && this._isLoaded && !this._isRotated) {\n            this._parseStampAppearance();\n        }\n        else {\n            this._appearanceTemplate = this._createRubberStampAppearance();\n        }\n    };\n    PdfRubberStampAnnotation.prototype._transformBBox = function (bBoxValue, matrix) {\n        var xCoordinate = [];\n        var yCoordinate = [];\n        var point1 = this._transformPoint(bBoxValue.x, bBoxValue.y + bBoxValue.height, matrix);\n        xCoordinate[0] = point1[0];\n        yCoordinate[0] = point1[1];\n        var point2 = this._transformPoint(bBoxValue.x + bBoxValue.width, bBoxValue.y, matrix);\n        xCoordinate[1] = point2[0];\n        yCoordinate[1] = point2[1];\n        var point3 = this._transformPoint(bBoxValue.x, bBoxValue.y, matrix);\n        xCoordinate[2] = point3[0];\n        yCoordinate[2] = point3[1];\n        var point4 = this._transformPoint(bBoxValue.x + bBoxValue.width, bBoxValue.y + bBoxValue.height, matrix);\n        xCoordinate[3] = point4[0];\n        yCoordinate[3] = point4[1];\n        var rect = [this._minValue(xCoordinate), this._minValue(yCoordinate),\n            this._maxValue(xCoordinate), this._maxValue(yCoordinate)];\n        return rect;\n    };\n    PdfRubberStampAnnotation.prototype._transformPoint = function (x, y, matrix) {\n        var point = [];\n        point[0] = x * matrix[0] + y * matrix[2] + matrix[4];\n        point[1] = x * matrix[1] + y * matrix[3] + matrix[5];\n        return point;\n    };\n    PdfRubberStampAnnotation.prototype._minValue = function (values) {\n        var minimum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] < minimum) {\n                minimum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return minimum;\n    };\n    PdfRubberStampAnnotation.prototype._maxValue = function (values) {\n        var maximum = values[0];\n        for (var i = 1; i < values.length; i++) {\n            if (values[Number.parseInt(i.toString(), 10)] > maximum) {\n                maximum = values[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        return maximum;\n    };\n    PdfRubberStampAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        var isTransformBBox = false;\n        if (this._isLoaded && (this._setAppearance || isFlatten || this._isExport)) {\n            if ((!isFlatten && !this._isExport) || this._setAppearance || this._isRotated) {\n                this._appearanceTemplate = this._createRubberStampAppearance();\n            }\n            if (!this._appearanceTemplate && (this._isExport || isFlatten) && this._dictionary.has('AP')) {\n                isTransformBBox = this._parseStampAppearance();\n            }\n        }\n        else {\n            if (!(this._isImported && this._dictionary.has('AP'))) {\n                this._postProcess();\n            }\n            if ((!this._appearanceTemplate) && (isFlatten || this._isImported)) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createRubberStampAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isTransformBBox) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isTransformBBox);\n            }\n            else {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n    };\n    PdfRubberStampAnnotation.prototype._parseStampAppearance = function () {\n        var isTransformBBox = false;\n        var dictionary = this._dictionary.get('AP');\n        if (dictionary && dictionary.has('N')) {\n            var appearanceStream = dictionary.get('N');\n            if (appearanceStream) {\n                var reference = dictionary.getRaw('N');\n                if (reference) {\n                    appearanceStream.reference = reference;\n                }\n                var isStamp = false;\n                if (this._type === _PdfAnnotationType.rubberStampAnnotation) {\n                    var isRotated = false;\n                    var size = void 0;\n                    var rect = void 0;\n                    if (appearanceStream) {\n                        isRotated = (this._page.rotation === PdfRotationAngle.angle0 &&\n                            this.rotationAngle === PdfRotationAngle.angle0);\n                        if (!isRotated) {\n                            isRotated = (this._page.rotation !== PdfRotationAngle.angle0 &&\n                                this.rotationAngle === PdfRotationAngle.angle0);\n                        }\n                    }\n                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    isStamp = true;\n                    isTransformBBox = isRotated ? true : false;\n                    if (isTransformBBox) {\n                        var matrix = appearanceStream.dictionary.getArray('Matrix');\n                        if (matrix) {\n                            var mMatrix = [];\n                            for (var i = 0; i < matrix.length; i++) {\n                                var value = matrix[Number.parseInt(i.toString(), 10)];\n                                mMatrix[Number.parseInt(i.toString(), 10)] = value;\n                            }\n                            var bounds = appearanceStream.dictionary.getArray('BBox');\n                            if (bounds && bounds.length > 3) {\n                                rect = _toRectangle(bounds);\n                                var rectangle = this._transformBBox(rect, mMatrix);\n                                size = [rectangle[2], rectangle[3]];\n                                this._appearanceTemplate._size = size;\n                            }\n                            else {\n                                size = [rect.width, rect.height];\n                            }\n                        }\n                    }\n                    else if (rect) {\n                        size = [rect.width, rect.height];\n                    }\n                }\n                if (!isStamp) {\n                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                }\n            }\n        }\n        return isTransformBBox;\n    };\n    PdfRubberStampAnnotation.prototype._createRubberStampAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var appearance;\n        if (this._appearance) {\n            appearance = this._appearance;\n            if (!this._dictionary.has('Name')) {\n                this._dictionary.update('Name', _PdfName.get('#23CustomStamp'));\n            }\n        }\n        else {\n            this._iconString = this._obtainIconName(this.icon);\n            this._dictionary.update('Name', _PdfName.get('#23' + this._iconString));\n            appearance = new PdfAppearance(this, nativeRectangle);\n            appearance.normal = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var template = appearance.normal;\n        if (this._alterRotateBounds && typeof this._rotate !== 'undefined' && (this._rotate !== PdfRotationAngle.angle0 || this._getRotationAngle() !== 0)) {\n            this.rotateAngle = this._getRotationAngle();\n            if (this.rotateAngle === 0) {\n                this.rotateAngle = this.rotationAngle * 90;\n            }\n            this.bounds = this._getRotatedBounds(this.bounds, this.rotateAngle);\n        }\n        else {\n            this.rotateAngle = this._getRotationAngle();\n        }\n        _setMatrix(template, this.rotateAngle);\n        if (!this._appearance) {\n            this._drawStampAppearance(template);\n        }\n        if (this._dictionary.has('AP')) {\n            _removeDuplicateReference(this._dictionary.get('AP'), this._crossReference, 'N');\n        }\n        var dictionary = new _PdfDictionary();\n        template._content.dictionary._updated = true;\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, template._content);\n        template._content.reference = reference;\n        dictionary.set('N', reference);\n        dictionary._updated = true;\n        this._dictionary.set('AP', dictionary);\n        this._dictionary.set('Border', [this.border.hRadius, this.border.vRadius, this.border.width]);\n        this._dictionary.update('Rect', _updateBounds(this));\n        return template;\n    };\n    PdfRubberStampAnnotation.prototype._drawStampAppearance = function (template) {\n        var stringFormat = new PdfStringFormat();\n        stringFormat.alignment = PdfTextAlignment.center;\n        stringFormat.lineAlignment = PdfVerticalAlignment.middle;\n        var backBrush = new PdfBrush(this._obtainBackGroundColor());\n        var borderPen = new PdfPen(this._obtainBorderColor(), this.border.width);\n        var graphics = template.graphics;\n        graphics.save();\n        graphics.scaleTransform(template._size[0] / (this._stampWidth + 4), (template._size[1] / 28));\n        var rubberFont = this._stampAppearanceFont;\n        this._drawRubberStamp(graphics, borderPen, backBrush, rubberFont, stringFormat);\n        graphics.restore();\n    };\n    PdfRubberStampAnnotation.prototype._obtainIconName = function (icon) {\n        switch (icon) {\n            case PdfRubberStampAnnotationIcon.approved:\n                this._iconString = 'Approved';\n                this._stampWidth = 126;\n                break;\n            case PdfRubberStampAnnotationIcon.asIs:\n                this._iconString = 'AsIs';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.confidential:\n                this._iconString = 'Confidential';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.departmental:\n                this._iconString = 'Departmental';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.draft:\n                this._iconString = 'Draft';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.experimental:\n                this._iconString = 'Experimental';\n                this._stampWidth = 176;\n                break;\n            case PdfRubberStampAnnotationIcon.expired:\n                this._iconString = 'Expired';\n                this._stampWidth = 116;\n                break;\n            case PdfRubberStampAnnotationIcon.final:\n                this._iconString = 'Final';\n                this._stampWidth = 90;\n                break;\n            case PdfRubberStampAnnotationIcon.forComment:\n                this._iconString = 'ForComment';\n                this._stampWidth = 166;\n                break;\n            case PdfRubberStampAnnotationIcon.forPublicRelease:\n                this._iconString = 'ForPublicRelease';\n                this._stampWidth = 240;\n                break;\n            case PdfRubberStampAnnotationIcon.notApproved:\n                this._iconString = 'NotApproved';\n                this._stampWidth = 186;\n                break;\n            case PdfRubberStampAnnotationIcon.notForPublicRelease:\n                this._iconString = 'NotForPublicRelease';\n                this._stampWidth = 290;\n                break;\n            case PdfRubberStampAnnotationIcon.sold:\n                this._iconString = 'Sold';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.topSecret:\n                this._iconString = 'TopSecret';\n                this._stampWidth = 146;\n                break;\n            case PdfRubberStampAnnotationIcon.completed:\n                this._iconString = 'Completed';\n                this._stampWidth = 136;\n                break;\n            case PdfRubberStampAnnotationIcon.void:\n                this._iconString = 'Void';\n                this._stampWidth = 75;\n                break;\n            case PdfRubberStampAnnotationIcon.informationOnly:\n                this._iconString = 'InformationOnly';\n                this._stampWidth = 230;\n                break;\n            case PdfRubberStampAnnotationIcon.preliminaryResults:\n                this._iconString = 'PreliminaryResults';\n                this._stampWidth = 260;\n                break;\n        }\n        return this._iconString;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBackGroundColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 251;\n            green = 222;\n            blue = 221;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 229;\n            green = 238;\n            blue = 222;\n            color = [red, green, blue];\n        }\n        else {\n            red = 219;\n            green = 227;\n            blue = 240;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._obtainBorderColor = function () {\n        var color = [];\n        var red;\n        var green;\n        var blue;\n        if (this._icon === PdfRubberStampAnnotationIcon.notApproved ||\n            this._icon === PdfRubberStampAnnotationIcon.void) {\n            red = 151;\n            green = 23;\n            blue = 15;\n            color = [red, green, blue];\n        }\n        else if (this._icon === PdfRubberStampAnnotationIcon.approved ||\n            this._icon === PdfRubberStampAnnotationIcon.final ||\n            this._icon === PdfRubberStampAnnotationIcon.completed) {\n            red = 73;\n            green = 110;\n            blue = 38;\n            color = [red, green, blue];\n        }\n        else {\n            red = 24;\n            green = 37;\n            blue = 100;\n            color = [red, green, blue];\n        }\n        return color;\n    };\n    PdfRubberStampAnnotation.prototype._drawRubberStamp = function (graphics, pen, brush, font, format) {\n        graphics.drawRoundedRectangle(2, 1, this._stampWidth, 26, 3, pen, brush);\n        var pdfBrush = new PdfBrush(this._obtainBorderColor());\n        graphics.drawString(this._iconString.toUpperCase(), font, [(this._stampWidth / 2) + 1, 15, 0, 0], null, pdfBrush, format);\n    };\n    PdfRubberStampAnnotation.prototype._obtainInnerBounds = function () {\n        var bounds = { x: 0, y: 0, width: 0, height: 0 };\n        if (this._dictionary && this._dictionary.has('AP')) {\n            var appearanceDictionary = this._dictionary.get('AP');\n            if (appearanceDictionary && appearanceDictionary.has('N')) {\n                var normalAppearance = appearanceDictionary.get('N');\n                if (normalAppearance && typeof normalAppearance.dictionary !== 'undefined') {\n                    var normalAppearanceDictionary = normalAppearance.dictionary;\n                    if (normalAppearanceDictionary.has('BBox')) {\n                        var values = normalAppearanceDictionary.getArray('BBox');\n                        if (values && values.length === 4) {\n                            bounds = _toRectangle(values);\n                        }\n                    }\n                }\n            }\n        }\n        return bounds;\n    };\n    return PdfRubberStampAnnotation;\n}(PdfComment));\nexport { PdfRubberStampAnnotation };\n/**\n * `PdfSoundAnnotation` class represents the sound annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfSoundAnnotation = page.annotations.at(0) as PdfSoundAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSoundAnnotation = /** @class */ (function (_super) {\n    __extends(PdfSoundAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfSoundAnnotation` class.\n     *\n     * @private\n     */\n    function PdfSoundAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.soundAnnotation;\n        return _this;\n    }\n    PdfSoundAnnotation._load = function (page, dictionary) {\n        var annot = new PdfSoundAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfSoundAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfSoundAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfSoundAnnotation;\n}(PdfComment));\nexport { PdfSoundAnnotation };\n/**\n * `PdfFreeTextAnnotation` class represents the free text annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new free text annotation\n * const annotation: PdfFreeTextAnnotation = new PdfFreeTextAnnotation(50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFreeTextAnnotation = /** @class */ (function (_super) {\n    __extends(PdfFreeTextAnnotation, _super);\n    function PdfFreeTextAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._intentString = '';\n        _this._markUpFont = new PdfStandardFont(PdfFontFamily.helvetica, 7, PdfFontStyle.regular);\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._cropBoxValueX = 0;\n        _this._cropBoxValueY = 0;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('FreeText'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._isContentUpdated = false;\n        _this._type = _PdfAnnotationType.freeTextAnnotation;\n        _this._parsedXMLData = [];\n        return _this;\n    }\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"calloutLines\", {\n        /**\n         * Gets the callout lines of the free text annotation.\n         *\n         * @returns {Array<number[]>} Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation= page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the callout lines of the free text annotation.\n         * let calloutLines: Array<number[]> = annotation.calloutLines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._calloutLines === 'undefined') {\n                this._calloutLines = this._getCalloutLinePoints();\n            }\n            return this._calloutLines;\n        },\n        /**\n         * Sets the callout lines of the free text annotation.\n         *\n         * @param {Array<number[]>} value Callout lines.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the callout lines of the free text annotation.\n         * annotation.calloutLines = [[100, 450], [100, 200], [100, 150]];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isLoaded) {\n                this._calloutLines = value;\n            }\n            var isChanged = false;\n            if (this._isLoaded && value.length >= 2) {\n                if (this._calloutLines.length === value.length) {\n                    for (var i = 0; i < value.length; i++) {\n                        var values = value[Number.parseInt(i.toString(), 10)];\n                        for (var j = 0; j < values.length; j++) {\n                            if (value[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)] !==\n                                this._calloutLines[Number.parseInt(i.toString(), 10)][Number.parseInt(j.toString(), 10)]) {\n                                isChanged = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    isChanged = true;\n                }\n            }\n            if (isChanged) {\n                var pageHeight = this._page.size[1];\n                var lines = [];\n                for (var i = 0; i < value.length; i++) {\n                    if (i < value.length) {\n                        lines.push(value[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                        lines.push((pageHeight + this._cropBoxValueY) - value[Number.parseInt(i.toString(), 10)][1]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                this._calloutLines = value;\n                this._dictionary.update('CL', lines);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"lineEndingStyle\", {\n        /**\n         * Gets the line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the Line ending style of the annotation.\n         * let lineEndingStyle: PdfLineEndingStyle = annotation.lineEndingStyle;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                this._lineEndingStyle = this._obtainLineEndingStyle();\n            }\n            else if (typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = PdfLineEndingStyle.none;\n            }\n            return this._lineEndingStyle;\n        },\n        /**\n         * Sets the line ending style of the line annotation.\n         *\n         * @param {PdfLineEndingStyle} value Line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the line ending style of the line annotation.\n         * annotation.lineEndingStyle = PdfLineEndingStyle.closedArrow;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._dictionary.update('LE', _PdfName.get(_reverseMapEndingStyle(value)));\n            }\n            this._lineEndingStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textMarkUpColor\", {\n        /**\n         * Gets the text markup color of the annotation.\n         *\n         * @returns {number[]} Text markup color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text markup color of the annotation.\n         * let textMarkUpColor: number[] = annotation.textMarkUpColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textMarkUpColor === 'undefined') {\n                var color = void 0;\n                if (this._dictionary.has('TextColor')) {\n                    this._textMarkUpColor = _parseColor(this._dictionary.getArray('TextColor'));\n                    return this._textMarkUpColor;\n                }\n                if (this._dictionary.has('DS')) {\n                    var collections = this._dictionary.get('DS').split(';');\n                    for (var i = 0; i < collections.length; i++) {\n                        if (collections[Number.parseInt(i.toString(), 10)].indexOf('color') !== -1) {\n                            color = collections[Number.parseInt(i.toString(), 10)].split(':')[1];\n                            if (color.startsWith('#')) {\n                                color = color.substring(1);\n                            }\n                            this._textMarkUpColor = _convertToColor(color);\n                            return this._textMarkUpColor;\n                        }\n                    }\n                }\n                if (!this._textMarkUpColor && this._dictionary.has('RC')) {\n                    var rcBrush = void 0;\n                    var rcColor = [];\n                    if (this._parsedXMLData.length > 0 && this._parsedXMLData[3]) {\n                        rcBrush = this._parsedXMLData[3];\n                        rcColor = rcBrush._color;\n                        this._textMarkUpColor = rcColor;\n                    }\n                }\n            }\n            return this._textMarkUpColor;\n        },\n        /**\n         * Sets the text markup color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text markup color of the annotation.\n         * annotation.textMarkUpColor = [200, 200, 200];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._textMarkUpColor = value;\n                this._updateStyle(this.font, value, this.textAlignment);\n            }\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            else if (this._dictionary.has('RC')) {\n                var rcAlignment = void 0;\n                if (this._parsedXMLData.length > 0 && this._parsedXMLData[1]) {\n                    rcAlignment = this._parsedXMLData[1];\n                    this._textAlignment = rcAlignment;\n                }\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._font) {\n                this._font = this._obtainFont();\n                if ((this._font === null || typeof this._font === 'undefined') || (!this._isLoaded && this._font.size === 1)) {\n                    this._font = this._markUpFont;\n                }\n            }\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n            this._isContentUpdated = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('DA')) {\n                this._borderColor = this._obtainColor();\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [150, 150, 150];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                this._borderColor = value;\n                this._dictionary.update('DA', this._getBorderColorString(this.borderColor));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"annotationIntent\", {\n        /**\n         * Gets the intent of the annotation.\n         *\n         * @returns {PdfAnnotationIntent} Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Gets the intent of the annotation.\n         * let annotationIntent: PdfAnnotationIntent = annotation.annotationIntent;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('IT')) {\n                this._annotationIntent = _mapAnnotationIntent(this._dictionary.get('IT').name);\n            }\n            else {\n                this._annotationIntent = PdfAnnotationIntent.none;\n            }\n            return this._annotationIntent;\n        },\n        /**\n         * Sets the intent of the annotation.\n         *\n         * @param {PdfAnnotationIntent} value Annotation intent.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfFreeTextAnnotation = page.annotations.at(0) as PdfFreeTextAnnotation;\n         * // Sets the intent of the annotation.\n         * annotation.annotationIntent = PdfAnnotationIntent.freeTextTypeWriter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._annotationIntent = value;\n                if (value === PdfAnnotationIntent.none) {\n                    this._dictionary.update('Subj', 'Text Box');\n                }\n                else {\n                    this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFreeTextAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFreeTextAnnotation._load = function (page, dictionary) {\n        var annot = new PdfFreeTextAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        if (dictionary.has('RC')) {\n            annot._parsedXMLData = annot._parseMarkupLanguageData(dictionary.get('RC'));\n        }\n        return annot;\n    };\n    PdfFreeTextAnnotation.prototype._setPaddings = function (paddings) {\n        this._paddings = paddings;\n    };\n    PdfFreeTextAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfFreeTextAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (!this._dictionary.has('C')) {\n            this._isTransparentColor = true;\n        }\n        var cropOrMediaBox = this._getCropOrMediaBox();\n        if (cropOrMediaBox && cropOrMediaBox.length > 3 && typeof cropOrMediaBox[0] === 'number' && typeof cropOrMediaBox[1] === 'number' && (cropOrMediaBox[0] !== 0 || cropOrMediaBox[1] !== 0)) {\n            this._cropBoxValueX = cropOrMediaBox[0];\n            this._cropBoxValueY = cropOrMediaBox[1];\n        }\n        if (isFlatten || this._setAppearance) {\n            this._appearanceTemplate = this._createAppearance();\n        }\n        if (!isFlatten) {\n            this._dictionary.update('Rect', _updateBounds(this));\n            this._saveFreeTextDictionary();\n        }\n    };\n    PdfFreeTextAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._isLoaded) {\n            if (this._setAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                this._appearanceTemplate = this._createAppearance();\n            }\n            if (!this._appearanceTemplate && isFlatten && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    var appearanceStream = dictionary.get('N');\n                    if (appearanceStream) {\n                        var reference = dictionary.getRaw('N');\n                        if (reference) {\n                            appearanceStream.reference = reference;\n                        }\n                        this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                    }\n                }\n            }\n        }\n        else {\n            this._postProcess(isFlatten);\n            if (!this._appearanceTemplate && isFlatten) {\n                if (!this._dictionary.has('AP')) {\n                    this._appearanceTemplate = this._createAppearance();\n                }\n                else {\n                    var dictionary = this._dictionary.get('AP');\n                    if (dictionary && dictionary.has('N')) {\n                        var appearanceStream = dictionary.get('N');\n                        if (appearanceStream) {\n                            var reference = dictionary.getRaw('N');\n                            if (reference) {\n                                appearanceStream.reference = reference;\n                            }\n                            this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            if (this._isLoaded) {\n                this._flattenLoadedPopUp();\n            }\n            else {\n                this._flattenPopUp();\n            }\n        }\n        if (isFlatten && this._appearanceTemplate) {\n            var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n            if (!this._appearanceTemplate._content.dictionary.has('Matrix') && !this._isLoaded) {\n                var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                if (box) {\n                    this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                }\n            }\n            if (isNormalMatrix && typeof this._page.rotation !== 'undefined' && this._page.rotation !== PdfRotationAngle.angle0) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._appearanceTemplate && !this._dictionary.has('AP')) {\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (this._dictionary.has('AP')) {\n                if (this._isValidTemplateMatrix(this._appearanceTemplate._content.dictionary, this.bounds, this._appearanceTemplate)) {\n                    this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n                }\n            }\n        }\n        else if (isFlatten) {\n            this._page.annotations.remove(this);\n        }\n        if (this._dictionary.has('RC') && this._isContentUpdated) {\n            this._updateStyle(this.font, this._textMarkUpColor, this.textAlignment);\n        }\n        if (!isFlatten && this._setAppearance) {\n            var appearance = void 0;\n            if (this._dictionary.has('AP')) {\n                appearance = this._dictionary.get('AP');\n            }\n            else {\n                var reference_7 = this._crossReference._getNextReference();\n                appearance = new _PdfDictionary(this._crossReference);\n                this._crossReference._cacheMap.set(reference_7, appearance);\n                this._dictionary.update('AP', reference_7);\n            }\n            _removeDuplicateReference(appearance, this._crossReference, 'N');\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._appearanceTemplate._content);\n            appearance.update('N', reference);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._isValidTemplateMatrix = function (dictionary, bounds, appearanceTemplate) {\n        var isValidMatrix = true;\n        var pointF = bounds;\n        if (dictionary && dictionary.has('Matrix')) {\n            var box = dictionary.getArray('BBox');\n            var matrix = dictionary.getArray('Matrix');\n            if (matrix && box && matrix.length > 3 && box.length > 2) {\n                if (typeof matrix[0] !== 'undefined' &&\n                    typeof matrix[1] !== 'undefined' &&\n                    typeof matrix[2] !== 'undefined' &&\n                    typeof matrix[3] !== 'undefined') {\n                    if (matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 1) {\n                        if (typeof box[0] !== 'undefined' &&\n                            typeof box[1] !== 'undefined' &&\n                            typeof box[2] !== 'undefined' &&\n                            typeof box[3] !== 'undefined') {\n                            if (Math.round(box[0]) !== Math.round(-(matrix[4])) && Math.round(box[1]) !== Math.round(-(matrix[5])) ||\n                                box[0] === 0 && Math.round(-(matrix[4])) === 0) {\n                                var graphics = this._page.graphics;\n                                var state = graphics.save();\n                                if (typeof this.opacity !== 'undefined' && this._opacity < 1) {\n                                    graphics.setTransparency(this._opacity);\n                                }\n                                pointF.x -= box[0];\n                                pointF.y += box[1];\n                                graphics.drawTemplate(appearanceTemplate, pointF);\n                                graphics.restore(state);\n                                this._page.annotations.remove(this);\n                                isValidMatrix = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return isValidMatrix;\n    };\n    PdfFreeTextAnnotation.prototype._createAppearance = function () {\n        var template;\n        var borderWidth = this.border.width / 2;\n        var nativeRectangle = this._obtainAppearanceBounds();\n        var rotationAngle = this.rotate;\n        if (rotationAngle === 0 || rotationAngle === 90 || rotationAngle === 180 || rotationAngle === 270) {\n            this._isAllRotation = false;\n        }\n        if (rotationAngle > 0 && this._isAllRotation) {\n            template = new PdfTemplate([0, 0, nativeRectangle[2], nativeRectangle[3]], this._crossReference);\n        }\n        else {\n            template = new PdfTemplate(nativeRectangle, this._crossReference);\n        }\n        var box = template._content.dictionary.getArray('BBox');\n        var angle = this._getRotationAngle();\n        if (box && angle !== null && typeof angle !== 'undefined') {\n            template._content.dictionary.set('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n        }\n        var parameter = new _PaintParameter();\n        var text = this._obtainText();\n        template._writeTransformation = false;\n        var graphics = template.graphics;\n        var alignment = this._obtainTextAlignment();\n        var borderColor = this._obtainColor();\n        var borderPen = new PdfPen(borderColor, this.border.width);\n        if (this.border.width > 0) {\n            parameter.borderPen = borderPen;\n        }\n        var rectangle = this._obtainStyle(borderPen, nativeRectangle, borderWidth, parameter);\n        if (this.color) {\n            parameter.foreBrush = new PdfBrush(this._color);\n        }\n        if (this.textMarkUpColor) {\n            parameter.backBrush = new PdfBrush(this._textMarkUpColor);\n        }\n        parameter.borderWidth = this.border.width;\n        if (this.calloutLines && this._calloutLines.length >= 2) {\n            this._drawCallOuts(graphics, borderPen);\n            if (this._isLoaded && typeof this._lineEndingStyle === 'undefined') {\n                this._lineEndingStyle = this.lineEndingStyle;\n            }\n            if (this._lineEndingStyle !== PdfLineEndingStyle.none) {\n                var linePoints = this._obtainLinePoints();\n                var angle_1 = this._getAngle(linePoints);\n                var endPoint = this._getAxisValue([linePoints[2], linePoints[3]], 90, 0);\n                this._drawLineEndStyle(endPoint, graphics, angle_1, borderPen, parameter.foreBrush, this.lineEndingStyle, this.border.width, false);\n            }\n            if (!this._dictionary.has('RD')) {\n                rectangle = [this.bounds.x,\n                    -((this._page.size[1] - (this.bounds.y + this.bounds.height))),\n                    this.bounds.width,\n                    -this.bounds.height];\n            }\n            else {\n                rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            }\n            rectangle[0] = rectangle[0] + this._cropBoxValueX;\n            rectangle[1] = rectangle[1] - this._cropBoxValueY;\n            this._calculateRectangle(rectangle);\n            parameter.bounds = rectangle;\n        }\n        else {\n            rectangle = [rectangle[0], -rectangle[1], rectangle[2], -rectangle[3]];\n            parameter.bounds = rectangle;\n        }\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [rectangle[0] - outerRectangle[0], (-(rectangle[1])) - outerRectangle[1], rectangle[2] - outerRectangle[2],\n            (((-rectangle[1]) - outerRectangle[1]) + (-rectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < value.length; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.update('RD', value);\n        if (this.opacity && this._opacity < 1) {\n            graphics.save();\n            graphics.setTransparency(this._opacity);\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.save();\n        }\n        this._drawFreeTextRectangle(graphics, parameter, rectangle, alignment);\n        if (text) {\n            this._drawFreeMarkUpText(graphics, parameter, rectangle, text, alignment);\n        }\n        if (this.opacity && this._opacity < 1) {\n            graphics.restore();\n        }\n        if (this.rotationAngle && this._rotate !== PdfRotationAngle.angle0) {\n            graphics.restore();\n        }\n        var bounds = this._obtainAppearanceBounds();\n        if (this.flatten) {\n            this._bounds = { x: bounds[0], y: (this._page.size[1] - (bounds[1] + bounds[3])), width: bounds[2], height: bounds[3] };\n        }\n        this._dictionary.set('Rect', [bounds[0], bounds[1], bounds[0] + bounds[2], bounds[1] + bounds[3]]);\n        return template;\n    };\n    PdfFreeTextAnnotation.prototype._calculateRectangle = function (innerRectangle) {\n        var outerRectangle = this._obtainAppearanceBounds();\n        var value = [innerRectangle[0] - outerRectangle[0],\n            (-(innerRectangle[1])) - outerRectangle[1], innerRectangle[2] - outerRectangle[2],\n            (((-innerRectangle[1]) - outerRectangle[1]) + (-innerRectangle[3])) - outerRectangle[3]];\n        for (var i = 0; i < 4; i++) {\n            if (value[Number.parseInt(i.toString(), 10)] < 0) {\n                value[Number.parseInt(i.toString(), 10)] = -value[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._dictionary.set('RD', value);\n    };\n    PdfFreeTextAnnotation.prototype._obtainAnnotationIntent = function (_annotationIntent) {\n        switch (_annotationIntent) {\n            case PdfAnnotationIntent.freeTextCallout:\n                this._intentString = 'FreeTextCallout';\n                break;\n            case PdfAnnotationIntent.freeTextTypeWriter:\n                this._intentString = 'FreeTextTypeWriter';\n                break;\n        }\n        return this._intentString;\n    };\n    PdfFreeTextAnnotation.prototype._obtainFont = function () {\n        var fontData = this._obtainFontDetails();\n        if (!fontData.size && this._dictionary.has('RC')) {\n            var rcFont = void 0;\n            if (this._parsedXMLData.length > 0 && this._parsedXMLData[0]) {\n                rcFont = this._parsedXMLData[0];\n            }\n            if (rcFont instanceof PdfStandardFont) {\n                var font = rcFont;\n                fontData.size = font.size;\n                fontData.style = font.style;\n                fontData.name = font._fontFamily.toString();\n            }\n            else if (rcFont instanceof PdfCjkStandardFont) {\n                var font = rcFont;\n                fontData.size = font.size;\n                fontData.style = font.style;\n                fontData.name = font._fontFamily.toString();\n            }\n        }\n        return _mapFont(fontData.name, fontData.size, fontData.style, this);\n    };\n    PdfFreeTextAnnotation.prototype._updateStyle = function (font, color, alignment) {\n        var ds = 'font:' +\n            font._metrics._name +\n            ' ' +\n            font.size +\n            'pt;style:' + _reverseMapPdfFontStyle(font.style) +\n            ';color:' +\n            this._colorToHex(color);\n        this._dictionary.update('DS', ds);\n        var body = '<?xml version=\"1.0\"?><body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font:'\n            + font._metrics._name + ' ' + font.size + 'pt;font-weight:'\n            + (font.isBold ? 'bold' : 'normal') + ';color:' + this._colorToHex(color) + '\"><p dir=\"ltr\">';\n        var textAlignment;\n        var alignmentText;\n        if (alignment !== null && typeof alignment !== 'undefined') {\n            switch (alignment) {\n                case PdfTextAlignment.left:\n                    alignmentText = 'left';\n                    break;\n                case PdfTextAlignment.center:\n                    alignmentText = 'center';\n                    break;\n                case PdfTextAlignment.right:\n                    alignmentText = 'right';\n                    break;\n                case PdfTextAlignment.justify:\n                    alignmentText = 'justify';\n                    break;\n            }\n            if (alignmentText) {\n                textAlignment = 'text-align:' + alignmentText + ';';\n            }\n        }\n        var decorationText = '';\n        var textDecoration;\n        var italic = 'font-style:italic';\n        var bold = 'font-style:bold';\n        if (font.isUnderline) {\n            decorationText = font.isStrikeout ? 'text-decoration:word line-through' : 'text-decoration:word';\n            if (font.isItalic) {\n                decorationText += ';' + italic;\n            }\n            else if (font.isBold) {\n                decorationText += ';' + bold;\n            }\n        }\n        else if (font.isStrikeout) {\n            decorationText = 'text-decoration:line-through';\n            if (font.isItalic) {\n                decorationText += ';' + italic;\n            }\n            else if (font.isBold) {\n                decorationText += ';' + bold;\n            }\n        }\n        else {\n            if (font.isItalic) {\n                decorationText += italic;\n            }\n            else if (font.isBold) {\n                decorationText += bold;\n            }\n        }\n        if (decorationText !== '') {\n            textDecoration = '<span style = \"' + textAlignment + decorationText + '\">' + (this.text ? this._getXmlFormattedString(this.text) : '') + '</span>';\n        }\n        else {\n            textDecoration = '<span style = \"' + textAlignment + '\">' + (this.text ? this._getXmlFormattedString(this.text) : '') + '</span>';\n        }\n        this._dictionary.update('RC', body + textDecoration + '</p></body>');\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeMarkUpText = function (graphics, parameter, rectangle, text, alignment) {\n        var isRotation = false;\n        var angle = this.rotate;\n        if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n            rectangle = [-rectangle[1], rectangle[0], -rectangle[3], rectangle[2]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n            rectangle = [-(rectangle[2] + rectangle[0]), -rectangle[1], rectangle[2], -rectangle[3]];\n        }\n        else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n            rectangle = [(rectangle[1] + rectangle[3]), -(rectangle[0] + rectangle[2]), -rectangle[3], rectangle[2]];\n        }\n        else if (angle === 0 && !this._isAllRotation) {\n            rectangle = [rectangle[0], (rectangle[1] + rectangle[3]), rectangle[2], rectangle[3]];\n        }\n        if ((typeof this._font === 'undefined' || this._font === null) || (!this._isLoaded && this._font.size === 1)) {\n            this._font = this._markUpFont;\n        }\n        if (angle > 0 && this._isAllRotation) {\n            isRotation = true;\n            var bounds_1 = this.bounds;\n            var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n            var textSize = this._font.measureString(text, [0, 0], format, 0, 0);\n            if (angle > 0 && angle <= 91) {\n                graphics.translateTransform(textSize[1], -bounds_1.height);\n            }\n            else if (angle > 91 && angle <= 181) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -(bounds_1.height - textSize[1]));\n            }\n            else if (angle > 181 && angle <= 271) {\n                graphics.translateTransform(bounds_1.width - textSize[1], -textSize[1]);\n            }\n            else if (angle > 271 && angle < 360) {\n                graphics.translateTransform(textSize[1], -textSize[1]);\n            }\n            graphics.rotateTransform(angle);\n            parameter.bounds = [0, 0, parameter.bounds[2], parameter.bounds[3]];\n        }\n        var bounds = [rectangle[0], rectangle[1], rectangle[2], rectangle[3]];\n        if (this._paddings && !this._isLoaded) {\n            var left = this._paddings._left;\n            var top_8 = this._paddings._top;\n            var right = this._paddings._right + this._paddings._left;\n            var bottom = this._paddings._top + this._paddings._bottom;\n            if (parameter.borderWidth > 0) {\n                var first_1 = rectangle[0] + (parameter.borderWidth + left);\n                var second_1 = rectangle[1] + (parameter.borderWidth + top_8);\n                var third = rectangle[2] - ((parameter.borderWidth * 2) + right);\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                else {\n                    forth = -rectangle[3] - ((parameter.borderWidth * 2) + bottom);\n                }\n                rectangle = [first_1, second_1, third, forth];\n            }\n            else {\n                var first_2 = rectangle[0] + left;\n                var second_2 = rectangle[1] + top_8;\n                var third = rectangle[2] - right;\n                var forth = void 0;\n                if (rectangle[3] > 0) {\n                    forth = rectangle[3] - bottom;\n                }\n                else {\n                    forth = -rectangle[3] - bottom;\n                }\n                rectangle = [first_2, second_2, third, forth];\n            }\n        }\n        else if (parameter.borderWidth > 0) {\n            rectangle = [rectangle[0] + (parameter.borderWidth * 1.5),\n                rectangle[1] + (parameter.borderWidth * 1.5),\n                rectangle[2] - (parameter.borderWidth * 3),\n                (rectangle[3] > 0) ? (rectangle[3] - (parameter.borderWidth * 3)) : (-rectangle[3] - (parameter.borderWidth * 3))];\n        }\n        var first = this._font._metrics._getHeight() > ((rectangle[3] > 0) ? rectangle[3] : -rectangle[3]);\n        var second = this._font._metrics._getHeight() <= ((bounds[3] > 0) ? bounds[3] : -bounds[3]);\n        var checkPaddingWithFontHeight = first && second;\n        this._drawFreeTextAnnotation(graphics, parameter, text, this._font, checkPaddingWithFontHeight ? bounds : rectangle, true, alignment, isRotation);\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextRectangle = function (graphics, parameter, rectangle, alignment) {\n        var isRotation = false;\n        if (this._dictionary.has('BE')) {\n            for (var i = 0; i < rectangle.length; i++) {\n                if (rectangle[Number.parseInt(i.toString(), 10)] < 0) {\n                    rectangle[Number.parseInt(i.toString(), 10)] = -rectangle[Number.parseInt(i.toString(), 10)];\n                }\n            }\n            this._drawAppearance(graphics, parameter, rectangle);\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n            }\n        }\n        else {\n            if (this.rotationAngle === PdfRotationAngle.angle90 && !this._isAllRotation) {\n                graphics.rotateTransform(-90);\n                parameter.bounds = [-rectangle[1], rectangle[2] + rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle180 && !this._isAllRotation) {\n                graphics.rotateTransform(-180);\n                parameter.bounds = [-(rectangle[2] + rectangle[0]), -(rectangle[3] + rectangle[1]), rectangle[2], rectangle[3]];\n            }\n            else if (this.rotationAngle === PdfRotationAngle.angle270 && !this._isAllRotation) {\n                graphics.rotateTransform(-270);\n                parameter.bounds = [rectangle[1] + rectangle[3], -rectangle[0], -rectangle[3], -rectangle[2]];\n            }\n            if (parameter.borderWidth > 0 && !this._isAllRotation) {\n                rectangle = parameter.bounds;\n            }\n            this._drawFreeTextAnnotation(graphics, parameter, '', this._font, rectangle, false, alignment, isRotation);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawAppearance = function (graphics, parameter, rectangle) {\n        var graphicsPath = new PdfPath();\n        graphicsPath.addRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3]);\n        if (this._dictionary.has('BE')) {\n            var dictionary = this._dictionary.get('BE');\n            if (dictionary && dictionary.has('I')) {\n                var value = dictionary.get('I');\n                var radius = value === 1 ? 4 : 9;\n                this._drawCloudStyle(graphics, parameter.foreBrush, parameter.borderPen, radius, 0.833, graphicsPath._points, true);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawFreeTextAnnotation = function (g, parameter, text, font, rectangle, isSkipDrawRectangle, alignment, isRotation) {\n        if (!isSkipDrawRectangle) {\n            g.drawRectangle(rectangle[0], rectangle[1], rectangle[2], rectangle[3], parameter.borderPen, parameter.foreBrush);\n        }\n        else {\n            var format = new PdfStringFormat();\n            format.lineAlignment = PdfVerticalAlignment.top;\n            format.alignment = alignment;\n            format.lineSpacing = 0;\n            if (isRotation) {\n                g.drawString(text, font, parameter.bounds, null, parameter.backBrush, format);\n            }\n            else {\n                g.drawString(text, font, rectangle, null, parameter.backBrush, format);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getCalloutLinePoints = function () {\n        if (this._dictionary.has('CL')) {\n            var calloutLinepoints = this._dictionary.getArray('CL');\n            if (calloutLinepoints) {\n                this._calloutLines = [];\n                for (var i = 0; i < calloutLinepoints.length; i = i + 2) {\n                    var points = [calloutLinepoints[Number.parseInt(i.toString(), 10)],\n                        this._page.size[1] - calloutLinepoints[i + 1]];\n                    this._calloutLines.push(points);\n                }\n            }\n        }\n        return this._calloutLines;\n    };\n    PdfFreeTextAnnotation.prototype._obtainAppearanceBounds = function () {\n        var bounds = [0, 0, 0, 0];\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var path = new PdfPath();\n            var pointArray = [];\n            var length_2 = this._calloutLines.length === 2 ? 2 : 3;\n            for (var i = 0; i < length_2; i++) {\n                pointArray.push([0, 0]);\n            }\n            if (this._calloutLines.length >= 2) {\n                this._obtainCallOutsNative();\n                for (var i = 0; i < this._calloutLines.length; i++) {\n                    if (i < 3) {\n                        pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                            this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            if (pointArray.length > 0) {\n                if (this.lineEndingStyle !== PdfLineEndingStyle.none) {\n                    this._expandAppearance(pointArray);\n                }\n                path._addLines(pointArray);\n            }\n            path.addRectangle((this.bounds.x + this._cropBoxValueX) - 2, ((this._page.size[1] + this._cropBoxValueY) - (this.bounds.y + this.bounds.height)) - 2, this.bounds.width + (2 * 2), this.bounds.height + (2 * 2));\n            bounds = path._getBounds();\n        }\n        else {\n            bounds = [this.bounds.x + this._cropBoxValueX,\n                ((this._page.size[1] + this._cropBoxValueY) - (this.bounds.y + this.bounds.height)),\n                this.bounds.width,\n                this.bounds.height];\n        }\n        return bounds;\n    };\n    PdfFreeTextAnnotation.prototype._obtainCallOutsNative = function () {\n        if (this.calloutLines && this._calloutLines.length > 0) {\n            var size = this._page.size;\n            this._calloutsClone = [];\n            for (var i = 0; i < this._calloutLines.length; i++) {\n                this._calloutsClone.push([this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX,\n                    (size[1] + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]]);\n            }\n        }\n    };\n    PdfFreeTextAnnotation.prototype._obtainLinePoints = function () {\n        var pageHeight = this._page.size[1];\n        return [this.calloutLines[1][0] + this._cropBoxValueX,\n            (pageHeight + this._cropBoxValueY) - this.calloutLines[1][1],\n            this.calloutLines[0][0] + this._cropBoxValueX,\n            (pageHeight + this._cropBoxValueY) - this.calloutLines[0][1]];\n    };\n    PdfFreeTextAnnotation.prototype._obtainLineEndingStyle = function () {\n        var lineEndingStyle = PdfLineEndingStyle.square;\n        if (this._dictionary.has('LE')) {\n            lineEndingStyle = _mapLineEndingStyle(this._dictionary.get('LE').name, lineEndingStyle);\n        }\n        return lineEndingStyle;\n    };\n    PdfFreeTextAnnotation.prototype._obtainText = function () {\n        var text = '';\n        var isContent = this._dictionary.has('Contents');\n        if (isContent) {\n            var markUpText = this._dictionary.get('Contents');\n            if (markUpText) {\n                text = markUpText;\n            }\n            if (text && text !== '') {\n                this._text = text;\n            }\n            return text;\n        }\n        else if (this._dictionary.has('RC') && !isContent && text === null) {\n            text = this._rcText;\n            return text;\n        }\n        return text;\n    };\n    PdfFreeTextAnnotation.prototype._obtainTextAlignment = function () {\n        var textAlignment = PdfTextAlignment.left;\n        var hasAlignment;\n        if (this._dictionary.has('Q')) {\n            var value = this._dictionary.get('Q');\n            if (typeof value !== 'undefined') {\n                textAlignment = value;\n                hasAlignment = true;\n            }\n        }\n        else if (this._dictionary.has('RC')) {\n            if (this._parsedXMLData.length > 0 && this._parsedXMLData[1]) {\n                var rcAlignment = this._parsedXMLData[1];\n                textAlignment = rcAlignment;\n                hasAlignment = true;\n            }\n        }\n        if (!hasAlignment && this._dictionary.has('DS')) {\n            var value = this._dictionary.get('DS');\n            var collections = value.split(';');\n            for (var i = 0; i < collections.length; i++) {\n                if (collections[Number.parseInt(i.toString(), 10)].indexOf('text-align') !== -1) {\n                    switch (collections[Number.parseInt(i.toString(), 10)]) {\n                        case 'left':\n                            textAlignment = PdfTextAlignment.left;\n                            break;\n                        case 'right':\n                            textAlignment = PdfTextAlignment.right;\n                            break;\n                        case 'center':\n                            textAlignment = PdfTextAlignment.center;\n                            break;\n                        case 'justify':\n                            textAlignment = PdfTextAlignment.justify;\n                            break;\n                    }\n                }\n            }\n        }\n        return textAlignment;\n    };\n    PdfFreeTextAnnotation.prototype._obtainColor = function () {\n        var color;\n        if (this._isLoaded) {\n            if (this._dictionary.has('DA')) {\n                var entry = this._dictionary.get('DA');\n                if (Array.isArray(entry) && entry.length > 0) {\n                    color = [entry[0], entry[1], entry[2]];\n                }\n                else if (typeof entry === 'string') {\n                    this._da = new _PdfDefaultAppearance(entry);\n                    color = this._da.color;\n                }\n            }\n            else if (this._dictionary.has('MK')) {\n                var mkDict = this._mkDictionary;\n                if (mkDict && mkDict.has('BC')) {\n                    color = _parseColor(mkDict.getArray('BC'));\n                }\n            }\n            else {\n                color = [0, 0, 0];\n            }\n        }\n        else {\n            color = this._borderColor ? this._borderColor : [0, 0, 0];\n        }\n        return color;\n    };\n    PdfFreeTextAnnotation.prototype._expandAppearance = function (pointArray) {\n        var pointY = pointArray[0][1];\n        var pointX = pointArray[0][0];\n        if (!this._isLoaded) {\n            pointY = this._page.size[1] - pointY;\n        }\n        if (pointY > this.bounds.y) {\n            if (this.lineEndingStyle !== PdfLineEndingStyle.openArrow) {\n                pointArray[0][1] -= (this.border.width * 11);\n            }\n        }\n        else {\n            pointArray[0][1] += (this.border.width * 11);\n        }\n        if (pointX <= this.bounds.x) {\n            pointArray[0][0] -= (this.border.width * 11);\n        }\n        else {\n            pointArray[0][0] += (this.border.width * 11);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._drawCallOuts = function (graphics, borderPen) {\n        var path = new PdfPath();\n        var pointArray = [];\n        var length = this._calloutLines.length === 2 ? 2 : 3;\n        for (var i = 0; i < length; i++) {\n            pointArray.push([0, 0]);\n        }\n        if (this._calloutLines.length >= 2) {\n            this._obtainCallOutsNative();\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                pointArray[Number.parseInt(i.toString(), 10)] = [this._calloutsClone[Number.parseInt(i.toString(), 10)][0],\n                    -this._calloutsClone[Number.parseInt(i.toString(), 10)][1]];\n            }\n        }\n        if (pointArray.length > 0) {\n            path._addLines(pointArray);\n        }\n        graphics.drawPath(path, borderPen);\n    };\n    PdfFreeTextAnnotation.prototype._saveFreeTextDictionary = function () {\n        if ((typeof this.font === 'undefined' || this.font === null) || (!this._isLoaded && this.font.size === 1)) {\n            this.font = this._markUpFont;\n        }\n        if (typeof this.text === 'string' && this.text !== null) {\n            this._dictionary.update('Contents', this.text);\n        }\n        if (this._isLoaded) {\n            this._textAlignment = this.textAlignment;\n        }\n        this._dictionary.update('Q', this._textAlignment);\n        if (this.annotationIntent === PdfAnnotationIntent.none) {\n            this._dictionary.update('Subj', 'Text Box');\n        }\n        else {\n            this._dictionary.update('IT', _PdfName.get(this._obtainAnnotationIntent(this._annotationIntent)));\n        }\n        this._updateStyle(this.font, this.textMarkUpColor, this._textAlignment);\n        this._dictionary.update('DA', this._getBorderColorString(this.borderColor ? this._borderColor : [0, 0, 0]));\n        if (this._calloutLines && this._calloutLines.length >= 2) {\n            var pageHeight = this._page.size[1];\n            var lines = [];\n            for (var i = 0; i < this._calloutLines.length && i < 3; i++) {\n                lines.push(this._calloutLines[Number.parseInt(i.toString(), 10)][0] + this._cropBoxValueX);\n                lines.push((pageHeight + this._cropBoxValueY) - this._calloutLines[Number.parseInt(i.toString(), 10)][1]);\n            }\n            this._dictionary.update('CL', lines);\n        }\n        if (this._setAppearance) {\n            var rect = this._obtainAppearanceBounds();\n            this._dictionary.update('Rect', [rect[0], rect[1], rect[0] + rect[2], rect[1] + rect[3]]);\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getXmlFormattedString = function (markupText) {\n        markupText = markupText.replace('&', '&amp;');\n        markupText = markupText.replace('<', '&lt;');\n        markupText = markupText.replace('>', '&gt;');\n        return markupText;\n    };\n    PdfFreeTextAnnotation.prototype._parseMarkupLanguageData = function (rcContent) {\n        var _this = this;\n        var fontStyle = PdfFontStyle.regular;\n        var fontCollection = []; // eslint-disable-line\n        var brush = null;\n        var fontName = '';\n        var content = rcContent;\n        var contentText = this._dictionary.has('Contents') ? this._dictionary.get('Contents') : '';\n        var hasSymbol = false;\n        var xdocument; // eslint-disable-line\n        hasSymbol = contentText.split('').some(function (char) { return _this._isSymbol(char); });\n        if (!hasSymbol) {\n            if (content !== null && typeof content !== 'undefined') {\n                xdocument = (new DOMParser()).parseFromString(content, 'text/xml');\n                var root = xdocument.documentElement;\n                var nameSpaceURI = (root && root.namespaceURI) || '';\n                if (root) {\n                    var styleMap = this._collectStyles(root);\n                    if (styleMap.size > 0) {\n                        var input = this._extractStylesToInput(styleMap);\n                        var fontDetails = this._getFontDetails(input, this.font.size, this.textAlignment, fontStyle, brush); // eslint-disable-line\n                        var _a = this._updateFontProperties(fontDetails, fontName, fontStyle, brush), updatedFontName = _a.fontName, updatedFontStyle = _a.fontStyle, updatedBrush = _a.brush;\n                        var obtainFont = _mapFont(updatedFontName, this.font._size, updatedFontStyle, this);\n                        fontCollection = this._fontCollection(fontCollection, obtainFont, nameSpaceURI, this._textAlignment, updatedBrush);\n                    }\n                }\n            }\n        }\n        this._parsedXMLData = fontCollection;\n        return fontCollection;\n    };\n    PdfFreeTextAnnotation.prototype._collectStyles = function (root, styleMap) {\n        if (styleMap === void 0) { styleMap = new Map(); }\n        if (!root) {\n            return styleMap;\n        }\n        var nodeStyle = null;\n        try {\n            nodeStyle = window.getComputedStyle(root);\n        }\n        catch (error) {\n            return styleMap;\n        }\n        styleMap.set(root.tagName.toLowerCase(), nodeStyle);\n        var childNode = root.firstElementChild;\n        while (childNode) {\n            this._collectStyles(childNode, styleMap);\n            childNode = childNode.nextElementSibling;\n        }\n        return styleMap;\n    };\n    PdfFreeTextAnnotation.prototype._extractStylesToInput = function (styleMap) {\n        var input = [];\n        styleMap.forEach(function (styleValue) {\n            if (styleValue && styleValue.length > 0) { // Check if styleValue is valid\n                for (var i = 0; i < styleValue.length; i++) {\n                    var propertyName = styleValue.item(Number.parseInt(i.toString(), 10));\n                    if (propertyName !== null && propertyName !== undefined) {\n                        var propertyValue = styleValue.getPropertyValue(propertyName);\n                        input.push(propertyName + \": \" + propertyValue);\n                    }\n                }\n            }\n        });\n        return input;\n    };\n    PdfFreeTextAnnotation.prototype._isSymbol = function (char) {\n        var code = char.charCodeAt(0);\n        if (char === '_' || char === '+' || char === '-' || char === '*' || char === '=') {\n            return false;\n        }\n        return ((code >= 0x20A0 && code <= 0x20CF) ||\n            (code >= 0x2200 && code <= 0x22FF) ||\n            (code >= 0x2A00 && code <= 0x2AFF) ||\n            (code >= 0x2100 && code <= 0x214F) ||\n            (code >= 0x2300 && code <= 0x23FF) ||\n            (code === 0x2B50));\n    };\n    PdfFreeTextAnnotation.prototype._updateFontProperties = function (fontDetails, fontName, fontStyle, brush) {\n        var _this = this;\n        fontDetails.forEach(function (value, property) {\n            switch (property) {\n                case 'font-family':\n                    fontName = value;\n                    break;\n                case 'font-size':\n                    _this.font._size = parseFloat(value);\n                    break;\n                case 'font-style':\n                case 'font-weight':\n                case 'text-decoration':\n                    fontStyle = _this._obtainFontStyle(value, property);\n                    break;\n                case 'text-align':\n                    _this._textAlignment = _this._parseTextAlignment(value);\n                    break;\n                case 'color':\n                    brush = value;\n                    break;\n                case 'xfa-spacerun':\n                    _this._rcText = value;\n                    break;\n            }\n        });\n        return { fontName: fontName, fontStyle: fontStyle, brush: brush };\n    };\n    PdfFreeTextAnnotation.prototype._obtainFontStyle = function (value, property) {\n        var styleValue = parseFloat(value);\n        switch (property) {\n            case 'font-style':\n                return styleValue === 0 ? PdfFontStyle.regular :\n                    styleValue === 1 ? PdfFontStyle.bold :\n                        styleValue === 2 ? PdfFontStyle.italic :\n                            styleValue === 8 ? PdfFontStyle.strikeout :\n                                styleValue === 4 ? PdfFontStyle.underline : PdfFontStyle.regular;\n            case 'font-weight':\n                return styleValue === 1 ? PdfFontStyle.bold : PdfFontStyle.regular;\n            case 'text-decoration':\n                return styleValue === 8 ? PdfFontStyle.strikeout :\n                    styleValue === 4 ? PdfFontStyle.underline : PdfFontStyle.regular;\n            default:\n                return PdfFontStyle.regular;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._parseTextAlignment = function (value) {\n        var alignmentValue = parseFloat(value);\n        switch (alignmentValue) {\n            case 0: return PdfTextAlignment.left;\n            case 1: return PdfTextAlignment.center;\n            case 2: return PdfTextAlignment.right;\n            case 3: return PdfTextAlignment.justify;\n            default: return PdfTextAlignment.left;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._getFontDetails = function (input, fontSize, textAlignment, fontStyle, brush) {\n        var _this = this;\n        var fontDetails = new Map(); // eslint-disable-line\n        input.forEach(function (element) {\n            var _a = element.split(':').map(function (item) { return item.trim(); }), property = _a[0], value = _a[1];\n            if (property && value) {\n                switch (property.toLowerCase()) {\n                    case 'font':\n                        _this._parseFont(value, fontDetails);\n                        break;\n                    case 'font-size':\n                        fontSize = _this._parseFontSize(value);\n                        fontDetails.set('font-size', fontSize);\n                        break;\n                    case 'font-weight':\n                        fontStyle = _this._parseFontWeight(value, fontStyle);\n                        fontDetails.set('font-weight', fontStyle);\n                        break;\n                    case 'font-family':\n                        fontDetails.set('font-family', _this._parseFontFamily(value));\n                        break;\n                    case 'color':\n                        brush = new PdfBrush(_this._rgbStringToArray(value));\n                        fontDetails.set('color', brush);\n                        break;\n                    case 'font-style':\n                        fontStyle = _this._parseFontStyle(value, fontStyle);\n                        fontDetails.set('font-style', fontStyle);\n                        break;\n                    case 'text-decoration':\n                        fontStyle = _this._parseTextDecoration(value, fontStyle);\n                        fontDetails.set('text-decoration', fontStyle);\n                        break;\n                    case 'text-align':\n                        textAlignment = _this._parseTextAlign(value);\n                        fontDetails.set('text-align', textAlignment);\n                        break;\n                    case 'xfa-spacerun':\n                        _this._rcText = value.length > 1 && value.includes('yes') ? _this._rcText + ' ' : _this._rcText;\n                        fontDetails.set('xfa-spacerun', _this._rcText);\n                        break;\n                }\n            }\n        });\n        return fontDetails;\n    };\n    PdfFreeTextAnnotation.prototype._parseFont = function (value, fontDetails) {\n        var fontParts = value.split(' ').map(function (item) { return item.trim(); });\n        var fontName = '';\n        fontParts.forEach(function (part) {\n            if (part && !part.endsWith('pt')) {\n                fontName += part + ' ';\n            }\n            else if (part.endsWith('pt')) {\n                fontDetails.set('font-size', parseFloat(part.replace('pt', '').replace(',', '.').trim()));\n            }\n        });\n        fontDetails.set('font-family', fontName.trim().replace(/['\",]/g, ''));\n    };\n    PdfFreeTextAnnotation.prototype._parseFontSize = function (value) {\n        if (value.endsWith('pt')) {\n            return parseFloat(value.replace('pt', '').replace(',', '.').trim());\n        }\n        return 0;\n    };\n    PdfFreeTextAnnotation.prototype._parseFontWeight = function (value, fontStyle) {\n        if (value.includes('bold')) {\n            fontStyle |= PdfFontStyle.bold;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseFontFamily = function (value) {\n        return value.replace(/^'+|'+$/g, '').trim();\n    };\n    PdfFreeTextAnnotation.prototype._parseFontStyle = function (value, fontStyle) {\n        if (value.includes('normal') || value.includes('regular')) {\n            return PdfFontStyle.regular;\n        }\n        if (value.includes('underline')) {\n            return PdfFontStyle.underline;\n        }\n        if (value.includes('strikeout')) {\n            return PdfFontStyle.strikeout;\n        }\n        if (value.includes('italic')) {\n            return PdfFontStyle.italic;\n        }\n        if (value.includes('bold')) {\n            return PdfFontStyle.bold;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseTextDecoration = function (value, fontStyle) {\n        if (value.includes('word')) {\n            return PdfFontStyle.underline;\n        }\n        if (value.includes('line-through')) {\n            return PdfFontStyle.strikeout;\n        }\n        return fontStyle;\n    };\n    PdfFreeTextAnnotation.prototype._parseTextAlign = function (value) {\n        switch (value.trim().toLowerCase()) {\n            case 'left': return PdfTextAlignment.left;\n            case 'right': return PdfTextAlignment.right;\n            case 'center': return PdfTextAlignment.center;\n            case 'justify': return PdfTextAlignment.justify;\n            default: return PdfTextAlignment.left;\n        }\n    };\n    PdfFreeTextAnnotation.prototype._rgbStringToArray = function (rgbString) {\n        var regex = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\n        var match = rgbString.match(regex);\n        if (match) {\n            var r = parseInt(match[1], 10);\n            var g = parseInt(match[2], 10);\n            var b = parseInt(match[3], 10);\n            return [r, g, b];\n        }\n        else {\n            throw new Error('Invalid RGB string format');\n        }\n    };\n    PdfFreeTextAnnotation.prototype._fontCollection = function (fontCollection, font, nameSpaceUri, alignment, brush) {\n        return fontCollection.concat([font, alignment, nameSpaceUri, brush]);\n    };\n    return PdfFreeTextAnnotation;\n}(PdfComment));\nexport { PdfFreeTextAnnotation };\n/**\n * `PdfRedactionAnnotation` class represents the redaction annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Create a new redaction annotation\n * const annotation: PdfRedactionAnnotation = new PdfRedactionAnnotation (50, 100, 100, 50);\n * // Add annotation to the page\n * page.annotations.add(annotation);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRedactionAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRedactionAnnotation, _super);\n    function PdfRedactionAnnotation(x, y, width, height) {\n        var _this = _super.call(this) || this;\n        _this._textAlignment = PdfTextAlignment.left;\n        _this._dictionary = new _PdfDictionary();\n        _this._dictionary.update('Type', _PdfName.get('Annot'));\n        _this._dictionary.update('Subtype', _PdfName.get('Redact'));\n        if (typeof x !== 'undefined' && typeof y !== 'undefined' && typeof width !== 'undefined' && typeof height !== 'undefined') {\n            _this.bounds = { x: x, y: y, width: width, height: height };\n        }\n        _this._type = _PdfAnnotationType.redactionAnnotation;\n        return _this;\n    }\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"repeatText\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @returns {boolean} repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the boolean flag indicating whether annotation has repeat text or not.\n         * let repeatText: boolean = annotation. repeatText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._repeat === 'undefined' && this._dictionary.has('Repeat')) {\n                this._repeat = this._dictionary.get('Repeat');\n            }\n            return this._repeat;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has repeat text or not.\n         *\n         * @param {boolean} value repeat text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the boolean flag indicating whether annotation has repeat text or not.\n         * annotation.repeatText = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._repeat) {\n                this._repeat = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Repeat', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.justify;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n            this._textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"textColor\", {\n        /**\n         * Gets the text color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the text color of the annotation.\n         * let textColor : number[] = annotation.textColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textColor === 'undefined' && this._dictionary.has('C')) {\n                this._textColor = _parseColor(this._dictionary.getArray('C'));\n            }\n            return this._textColor;\n        },\n        /**\n         * Sets the text color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the text color of the annotation.\n         * annotation.textColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.textColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._textColor = value;\n                    this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._borderColor === 'undefined' && this._dictionary.has('OC')) {\n                this._borderColor = _parseColor(this._dictionary.getArray('OC'));\n            }\n            return this._borderColor;\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value R, G, B color values in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255, 255, 255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined' && value.length === 3) {\n                var extColor = this.borderColor;\n                if (!this._isLoaded || typeof extColor === 'undefined' || (extColor[0] !== value[0] || extColor[1] !== value[1] || extColor[2] !== value[2])) {\n                    this._borderColor = value;\n                    this._dictionary.update('OC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                        Number.parseFloat((value[1] / 255).toFixed(3)),\n                        Number.parseFloat((value[2] / 255).toFixed(3))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"overlayText\", {\n        /**\n         * Gets the overlay text of the annotation.\n         *\n         * @returns {string} overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the overlay text of the annotation.\n         * let overlayText: string =annotation.overlayText;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._overlayText === 'undefined' && this._dictionary.has('OverlayText')) {\n                this._overlayText = this._dictionary.get('OverlayText');\n            }\n            return this._overlayText;\n        },\n        /**\n         * Sets the overlay text of the annotation.\n         *\n         * @param {string} value overlay text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the overlay text of the annotation.\n         * annotation.overlayText = ‘syncfusion’;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string') {\n                this._dictionary.update('OverlayText', value);\n                this._overlayText = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRedactionAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the annotation.\n         *\n         * @returns {PdfFont} font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Gets the font of the annotation.\n         * let font: PdfFont = annotation.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the font of the annotation.\n         *\n         * @param {PdfFont} value font.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfRedactionAnnotation = page.annotations.at(0) as PdfRedactionAnnotation;\n         * // Sets the font of the annotation.\n         * annotation.font = new PdfStandardFont(PdfFontFamily.helvetica, 10, PdfFontStyle.regular);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRedactionAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRedactionAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRedactionAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRedactionAnnotation.prototype._postProcess = function (isFlatten) {\n        if (typeof this.bounds === 'undefined' || this.bounds === null) {\n            throw new Error('Bounds cannot be null or undefined');\n        }\n        var borderWidth;\n        if (this._dictionary.has('BS')) {\n            borderWidth = this.border.width;\n        }\n        else {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.set('Type', _PdfName.get('Border'));\n            this._dictionary.set('BS', dictionary);\n        }\n        if (typeof borderWidth === 'undefined') {\n            borderWidth = 1;\n        }\n        if (this._setAppearance) {\n            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n        }\n        this._dictionary.update('Rect', _updateBounds(this));\n    };\n    PdfRedactionAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (!this._isImported) {\n            if (this._isLoaded) {\n                this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n            }\n            else {\n                this._postProcess(isFlatten);\n                if (!this._appearanceTemplate) {\n                    if (isFlatten) {\n                        if (!this._dictionary.has('AP')) {\n                            this._appearanceTemplate = this._createRedactionAppearance(isFlatten);\n                        }\n                        else {\n                            var dictionary = this._dictionary.get('AP');\n                            if (dictionary && dictionary.has('N')) {\n                                var appearanceStream = dictionary.get('N');\n                                if (appearanceStream) {\n                                    var reference = dictionary.getRaw('N');\n                                    if (reference) {\n                                        appearanceStream.reference = reference;\n                                    }\n                                    this._appearanceTemplate = new PdfTemplate(appearanceStream, this._crossReference);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (isFlatten && this._appearanceTemplate) {\n                var isNormalMatrix = this._validateTemplateMatrix(this._appearanceTemplate._content.dictionary);\n                if (!this._appearanceTemplate._content.dictionary.has('Matrix')) {\n                    var box = this._appearanceTemplate._content.dictionary.getArray('BBox');\n                    if (box) {\n                        this._appearanceTemplate._content.dictionary.update('Matrix', [1, 0, 0, 1, -box[0], -box[1]]);\n                    }\n                }\n                this._flattenAnnotationTemplate(this._appearanceTemplate, isNormalMatrix);\n            }\n            else if (isFlatten) {\n                this._page.annotations.remove(this);\n            }\n        }\n    };\n    PdfRedactionAnnotation.prototype._createRedactionAppearance = function (isFlatten) {\n        var normalTemplate = this._createNormalAppearance();\n        if (isFlatten) {\n            if (this._isLoaded && this._page !== null) {\n                this._page.annotations.remove(this);\n            }\n        }\n        else {\n            var borderTemplate = this._createBorderAppearance();\n            if (this._dictionary.has('AP')) {\n                var appearance = this._dictionary.get('AP');\n                if (appearance && appearance instanceof _PdfDictionary) {\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    _removeDuplicateReference(appearance, this._crossReference, 'R');\n                }\n            }\n            var dictionary = new _PdfDictionary(this._crossReference);\n            borderTemplate._content.dictionary._updated = true;\n            var reference1 = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference1, borderTemplate._content);\n            borderTemplate._content.reference = reference1;\n            dictionary.set('N', reference1);\n            normalTemplate._content.dictionary._updated = true;\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, normalTemplate._content);\n            normalTemplate._content.reference = reference;\n            dictionary.set('R', reference);\n            dictionary._updated = true;\n            this._dictionary.set('AP', dictionary);\n        }\n        return normalTemplate;\n    };\n    PdfRedactionAnnotation.prototype._createBorderAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var actualWidth = this.border.width;\n        var pen;\n        if (this.border.width > 0 && this.borderColor) {\n            pen = new PdfPen(this.borderColor, actualWidth);\n        }\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - actualWidth, rect[3] - actualWidth, pen, null);\n        }\n        return template;\n    };\n    PdfRedactionAnnotation.prototype._createNormalAppearance = function () {\n        var nativeRectangle = [0, 0, this.bounds.width, this.bounds.height];\n        var template = new PdfTemplate(nativeRectangle, this._crossReference);\n        _setMatrix(template, this._getRotationAngle());\n        var width = this.border.width / 2;\n        var graphics = template.graphics;\n        var parameter = new _PaintParameter();\n        var borderPen;\n        if (this.textColor && this.border.width > 0) {\n            borderPen = new PdfPen(this.textColor, this.border.width);\n        }\n        var backBrush;\n        var textcolor;\n        if (this.innerColor) {\n            backBrush = new PdfBrush(this.innerColor);\n        }\n        if (this.textColor) {\n            textcolor = new PdfBrush(this.textColor);\n        }\n        else {\n            textcolor = new PdfBrush([128, 128, 128]);\n        }\n        parameter.backBrush = backBrush;\n        parameter.borderWidth = width;\n        var widths = this.border.width;\n        var rect = [nativeRectangle[0], nativeRectangle[1], nativeRectangle[2], nativeRectangle[3]];\n        if (this.opacity < 1) {\n            var state = graphics.save();\n            graphics.setTransparency(this.opacity);\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n            graphics.restore(state);\n        }\n        else {\n            graphics.drawRectangle(rect[0] + width, rect[1] + width, rect[2] - widths, rect[3] - widths, borderPen, backBrush);\n        }\n        graphics.restore();\n        if (this.overlayText && _isNullOrUndefined(this.overlayText) && this._overlayText !== '') {\n            var col = 0;\n            var row = 0;\n            if (typeof this.font === 'undefined' || this.font === null) {\n                this.font = this._lineCaptionFont;\n            }\n            var y = 0;\n            var x = 0;\n            var diff = 0;\n            var rectangle = void 0;\n            if (this._isLoaded) {\n                this._textAlignment = this.textAlignment;\n            }\n            var format = new PdfStringFormat(this._textAlignment, PdfVerticalAlignment.top);\n            var textsize = this.font.measureString(this.overlayText, [0, 0], format, 0, 0);\n            if (this._isLoaded && typeof this._repeat === 'undefined') {\n                this._repeat = this.repeatText;\n            }\n            if (this._repeat) {\n                if (textsize[0] <= 0) {\n                    textsize[0] = 1;\n                }\n                col = this.bounds.width / textsize[0];\n                row = Math.floor(this.bounds.height / this.font._size);\n                diff = Math.abs(this.bounds.width - (Math.floor(col) * textsize[0]));\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                for (var i = 1; i < col; i++) {\n                    for (var j = 0; j < row; j++) {\n                        rectangle = [x, y, 0, 0];\n                        graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, null);\n                        y = y + this.font._size;\n                    }\n                    x = x + textsize[0];\n                    y = 0;\n                }\n            }\n            else {\n                diff = Math.abs(this.bounds.width - textsize[0]);\n                if (this._textAlignment === PdfTextAlignment.center) {\n                    x = diff / 2;\n                }\n                if (this._textAlignment === PdfTextAlignment.right) {\n                    x = diff;\n                }\n                rectangle = [x, 0, this.bounds.width - this.border.width, this.bounds.height - this.border.width];\n                graphics.drawString(this.overlayText, this.font, rectangle, null, textcolor, format);\n            }\n        }\n        return template;\n    };\n    return PdfRedactionAnnotation;\n}(PdfAnnotation));\nexport { PdfRedactionAnnotation };\n/**\n * `PdfRichMediaAnnotation` class represents the rich media annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfRichMediaAnnotation = page.annotations.at(0) as PdfRichMediaAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRichMediaAnnotation = /** @class */ (function (_super) {\n    __extends(PdfRichMediaAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfRichMediaAnnotation` class.\n     *\n     * @private\n     */\n    function PdfRichMediaAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._type = _PdfAnnotationType.richMediaAnnotation;\n        return _this;\n    }\n    PdfRichMediaAnnotation._load = function (page, dictionary) {\n        var annot = new PdfRichMediaAnnotation();\n        annot._isLoaded = true;\n        annot._initialize(page, dictionary);\n        return annot;\n    };\n    PdfRichMediaAnnotation.prototype._initialize = function (page, dictionary) {\n        _super.prototype._initialize.call(this, page, dictionary);\n    };\n    PdfRichMediaAnnotation.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (typeof this.flattenPopups !== 'undefined' && this.flattenPopups) {\n            this._flattenPopUp();\n        }\n        if (isFlatten) {\n            var appearanceStream = void 0;\n            if (this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var template = new PdfTemplate(appearanceStream, this._crossReference);\n                var isNormalMatrix = this._validateTemplateMatrix(template._content.dictionary);\n                this._flattenAnnotationTemplate(template, isNormalMatrix);\n            }\n            else {\n                this._removeAnnotation(this._page, this);\n            }\n        }\n    };\n    return PdfRichMediaAnnotation;\n}(PdfAnnotation));\nexport { PdfRichMediaAnnotation };\n/**\n * `PdfWidgetAnnotation` class represents the widget annotation objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Access the annotation at index 0\n * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PdfWidgetAnnotation, _super);\n    /**\n     * Initializes a new instance of the `PdfWidgetAnnotation` class.\n     *\n     * @private\n     */\n    function PdfWidgetAnnotation() {\n        var _this = _super.call(this) || this;\n        _this._isAutoResize = false;\n        _this._visibility = PdfFormFieldVisibility.visible;\n        _this._isFont = false;\n        _this._isTransparentBackColor = false;\n        _this._isTransparentBorderColor = false;\n        _this._isWidget = true;\n        _this._type = _PdfAnnotationType.widgetAnnotation;\n        return _this;\n    }\n    /**\n     * Parse an existing widget annotation.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @returns {PdfWidgetAnnotation} Widget.\n     */\n    PdfWidgetAnnotation._load = function (dictionary, crossReference) {\n        var widget = new PdfWidgetAnnotation();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        return widget;\n    };\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"page\", {\n        /**\n         * Gets the page object (Read only).\n         *\n         * @returns {PdfPage} page object.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the page object.\n         * let page: PdfPage = item.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._getPage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"color\", {\n        /**\n         * Gets the fore color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the fore color of the annotation.\n         * let color: number[] = annotation.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._color === 'undefined' && this._defaultAppearance) {\n                this._color = this._da.color;\n            }\n            return this._color;\n        },\n        /**\n         * Sets the fore color of the annotation.\n         *\n         * @param {number[]} value Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the fore color of the annotation.\n         * annotation.color = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.color === 'undefined' || this._color !== value) {\n                this._color = value;\n            }\n            var isNew = false;\n            if (!this._defaultAppearance) {\n                this._da = new _PdfDefaultAppearance('');\n                isNew = true;\n            }\n            if (isNew || this._da.color !== value) {\n                this._da.color = value;\n                this._dictionary.update('DA', this._da.toString());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the back color of the annotation\n         * let backColor: number[] = field.itemAt(0).backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the text box field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the background color of the field item\n         * field.itemAt(0).backColor = [255, 0, 0];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBackColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BG'));\n            }\n            else {\n                return !this._isTransparentBackColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_hasBorderColor\", {\n        get: function () {\n            if (this._isLoaded) {\n                var mkDictionary = this._mkDictionary;\n                return (mkDictionary && mkDictionary.has('BC'));\n            }\n            else {\n                return !this._isTransparentBorderColor;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"borderColor\", {\n        /**\n         * Gets the border color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the border color of the annotation.\n         * let borderColor: number[] = annotation.borderColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBorderColor();\n        },\n        /**\n         * Sets the border color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the border color of the annotation.\n         * annotation.borderColor = [255,255,255];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBorderColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"rotate\", {\n        /**\n         * Gets the rotation angle of the annotation.\n         *\n         * @returns {number} Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the rotation angle of the annotation.\n         * let rotate: number = annotation.rotate;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._rotationAngle === 'undefined') {\n                if (this._mkDictionary && this._mkDictionary.has('R')) {\n                    this._rotationAngle = this._mkDictionary.get('R');\n                }\n                else if (this._dictionary.has('R')) {\n                    this._rotationAngle = this._dictionary.get('R');\n                }\n            }\n            return this._rotationAngle;\n        },\n        /**\n         * Sets the rotation angle of the annotation.\n         *\n         * @param {number} value Rotation angle as number.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the rotation angle of the annotation.\n         * annotation.rotate = 90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this.rotate === 'undefined' || this._rotationAngle !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('R', value);\n                this._rotationAngle = value;\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"highlightMode\", {\n        /**\n         * Gets the highlight mode of the annotation.\n         *\n         * @returns {PdfHighlightMode} Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the highlight mode of the annotation.\n         * let highlightMode: PdfHighlightMode = annotation.highlightMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._highlightMode === 'undefined' && this._dictionary.has('H')) {\n                var mode = this._dictionary.get('H');\n                this._highlightMode = _mapHighlightMode(mode.name);\n            }\n            return this._highlightMode;\n        },\n        /**\n         * Sets the highlight mode of the annotation.\n         *\n         * @param {PdfHighlightMode} value Highlight mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the highlight mode of the annotation.\n         * annotation.highlightMode = PdfHighlightMode.noHighlighting;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._highlightMode !== value) {\n                this._dictionary.update('H', _reverseMapHighlightMode(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"bounds\", {\n        /**\n         * Gets the bounds of the annotation.\n         *\n         * @returns {{x: number, y: number, width: number, height: number}} Bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the bounds of the annotation.\n         * let bounds : {x: number, y: number, width: number, height: number} = annotation.bounds;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && typeof this._bounds === 'undefined') {\n                this._bounds = _calculateBounds(this._dictionary, this._getPage());\n            }\n            if (typeof this._bounds === 'undefined' || this._bounds === null) {\n                this._bounds = { x: 0, y: 0, width: 0, height: 0 };\n            }\n            return this._bounds;\n        },\n        /**\n         * Sets the bounds of the annotation.\n         *\n         * @param {{x: number, y: number, width: number, height: number}} value Bounds\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the bounds of the annotation.\n         * annotation.bounds = {0, 0, 50, 50};\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value.x === 0 && value.y === 0 && value.width === 0 && value.height === 0) {\n                throw new Error('Cannot set empty bounds');\n            }\n            this._bounds = value;\n            if (this._page && this._page._isNew && this._page._pageSettings) {\n                this._dictionary.update('Rect', _updateBounds(this));\n            }\n            else {\n                this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._getPage()));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"textAlignment\", {\n        /**\n         * Gets the text alignment of the annotation.\n         *\n         * @returns {PdfTextAlignment} Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the text alignment of the annotation.\n         * let textAlignment: PdfTextAlignment = annotation.textAlignment;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._textAlignment === 'undefined' && this._dictionary.has('Q')) {\n                this._textAlignment = this._dictionary.get('Q');\n            }\n            return this._textAlignment;\n        },\n        /**\n         * Sets the text alignment of the annotation.\n         *\n         * @param {PdfTextAlignment} value Text alignment.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Sets the text alignment of the annotation.\n         * annotation.textAlignment = PdfTextAlignment.left;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._textAlignment === 'undefined' || this._textAlignment !== value) {\n                this._dictionary.update('Q', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"visibility\", {\n        /**\n         * Gets the visibility.\n         *\n         * @returns {PdfFormFieldVisibility} Field visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the visibility.\n         * let visibility: PdfFormFieldVisibility = field.itemAt(0).visibility;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var value;\n            if (this._isLoaded) {\n                value = PdfFormFieldVisibility.visible;\n                var flag = PdfAnnotationFlag.default;\n                if (this._hasFlags) {\n                    flag = this.flags;\n                    var flagValue = 3;\n                    if ((flag & PdfAnnotationFlag.hidden) === PdfAnnotationFlag.hidden) {\n                        flagValue = 0;\n                    }\n                    if ((flag & PdfAnnotationFlag.noView) === PdfAnnotationFlag.noView) {\n                        flagValue = 1;\n                    }\n                    if ((flag & PdfAnnotationFlag.print) !== PdfAnnotationFlag.print) {\n                        flagValue &= 2;\n                    }\n                    switch (flagValue) {\n                        case 0:\n                            value = PdfFormFieldVisibility.hidden;\n                            break;\n                        case 1:\n                            value = PdfFormFieldVisibility.hiddenPrintable;\n                            break;\n                        case 2:\n                            value = PdfFormFieldVisibility.visibleNotPrintable;\n                            break;\n                        case 3:\n                            value = PdfFormFieldVisibility.visible;\n                            break;\n                    }\n                }\n                else {\n                    value = PdfFormFieldVisibility.visibleNotPrintable;\n                }\n            }\n            else {\n                return this._visibility;\n            }\n            return value;\n        },\n        /**\n         * Sets the visibility.\n         *\n         * @param {PdfFormFieldVisibility} value Visibility option.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the form field at index 0\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Sets the visibility.\n         * let field.itemAt(0).visibility = PdfFormFieldVisibility.hiddenPrintable;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isLoaded) {\n                _updateVisibility(this._dictionary, value);\n                this._dictionary._updated = true;\n            }\n            else {\n                switch (value) {\n                    case PdfFormFieldVisibility.hidden:\n                        this.flags = PdfAnnotationFlag.hidden;\n                        break;\n                    case PdfFormFieldVisibility.hiddenPrintable:\n                        this.flags = PdfAnnotationFlag.noView | PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visible:\n                        this.flags = PdfAnnotationFlag.print;\n                        break;\n                    case PdfFormFieldVisibility.visibleNotPrintable:\n                        this.flags = PdfAnnotationFlag.default;\n                        break;\n                }\n                this._visibility = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"font\", {\n        /**\n         * Gets the font of the item.\n         *\n         * @returns {PdfFont} font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Gets the font of the item.\n         * let font: PdfFont = item.font;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._pdfFont) {\n                var fontName = void 0;\n                if (this._crossReference) {\n                    var form = this._crossReference._document.form;\n                    var fontData = this._obtainFontDetails();\n                    if (form && form._dictionary.has('DR')) {\n                        var resources = form._dictionary.get('DR');\n                        if (resources.has('Font')) {\n                            var fonts = resources.get('Font');\n                            if (fonts.has(fontData.name)) {\n                                var fontDictionary = fonts.get(fontData.name);\n                                if (fontDictionary && fontData.name && fontDictionary.has('BaseFont')) {\n                                    var baseFont = fontDictionary.get('BaseFont');\n                                    var textFontStyle = PdfFontStyle.regular;\n                                    if (baseFont) {\n                                        fontName = baseFont.name;\n                                        textFontStyle = _getFontStyle(baseFont.name);\n                                        if (fontName.includes('-')) {\n                                            fontName = fontName.substring(0, fontName.indexOf('-'));\n                                        }\n                                        this._pdfFont = _mapFont(fontName, fontData.size, textFontStyle, this);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((this._pdfFont === null || typeof this._pdfFont === 'undefined') || (!this._isLoaded && this._pdfFont.size === 1)) {\n                this._pdfFont = this._circleCaptionFont;\n            }\n            return this._pdfFont;\n        },\n        /**\n         * Sets the font of the item.\n         *\n         * @param {PdfFont} value font.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the form field at index 0\n         * let field: PdfTextBoxField = document.form.fieldAt(0) as PdfTextBoxField;\n         * // Get the first item of the field\n         * let item: PdfWidgetAnnotation = field.itemAt(0);\n         * // Set the font of the item.\n         * item.font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.bold);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value && value instanceof PdfFont) {\n                this._pdfFont = value;\n                this._initializeFont(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_defaultAppearance\", {\n        get: function () {\n            if (typeof this._da === 'undefined' && this._dictionary.has('DA')) {\n                var da = this._dictionary.get('DA');\n                if (da && da !== '') {\n                    this._da = new _PdfDefaultAppearance(da);\n                }\n            }\n            return this._da;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWidgetAnnotation.prototype, \"_mkDictionary\", {\n        get: function () {\n            var value;\n            if (this._dictionary.has('MK')) {\n                value = this._dictionary.get('MK');\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfWidgetAnnotation.prototype._create = function (page, bounds, field) {\n        this._page = page;\n        this._crossReference = page._crossReference;\n        this._ref = this._crossReference._getNextReference();\n        this._dictionary = new _PdfDictionary(this._crossReference);\n        this._crossReference._cacheMap.set(this._ref, this._dictionary);\n        this._dictionary._currentObj = this;\n        this._dictionary.objId = this._ref.toString();\n        this._dictionary.update('Type', _PdfName.get('Annot'));\n        this._dictionary.update('Subtype', _PdfName.get('Widget'));\n        this.flags |= PdfAnnotationFlag.print;\n        this._dictionary.update('P', page._ref);\n        page._addWidget(this._ref);\n        this.border = new PdfAnnotationBorder();\n        this.bounds = bounds;\n        if (field) {\n            this._field = field;\n            this._dictionary.update('Parent', this._field._ref);\n        }\n        return this._dictionary;\n    };\n    PdfWidgetAnnotation.prototype._doPostProcess = function (isFlatten, recreateAppearance) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (recreateAppearance === void 0) { recreateAppearance = false; }\n        if (isFlatten || recreateAppearance) {\n            var appearanceStream = void 0;\n            if (recreateAppearance || (isFlatten && !this._dictionary.has('AP'))) {\n                //appearanceStream = this._createAppearance();\n            }\n            if (!appearanceStream && this._dictionary.has('AP')) {\n                var dictionary = this._dictionary.get('AP');\n                if (dictionary && dictionary.has('N')) {\n                    appearanceStream = dictionary.get('N');\n                    var reference = dictionary.getRaw('N');\n                    if (reference && appearanceStream) {\n                        appearanceStream.reference = reference;\n                    }\n                }\n            }\n            if (appearanceStream) {\n                var bounds = void 0;\n                if (isFlatten) {\n                    var template = new PdfTemplate(appearanceStream, this._crossReference);\n                    var page = this._getPage();\n                    if (page) {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        if (page.rotation === PdfRotationAngle.angle90) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(90);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle180) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(-180);\n                        }\n                        else if (page.rotation === PdfRotationAngle.angle270) {\n                            graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                            graphics.rotateTransform(270);\n                        }\n                        bounds = { x: this.bounds.x, y: this.bounds.y, width: template._size[0], height: template._size[1] };\n                        graphics.drawTemplate(template, bounds);\n                        graphics.restore();\n                    }\n                }\n                else {\n                    var appearance = void 0;\n                    if (this._dictionary.has('AP')) {\n                        appearance = this._dictionary.get('AP');\n                    }\n                    else {\n                        var reference_8 = this._crossReference._getNextReference();\n                        appearance = new _PdfDictionary(this._crossReference);\n                        this._crossReference._cacheMap.set(reference_8, appearance);\n                        this._dictionary.update('AP', reference_8);\n                    }\n                    _removeDuplicateReference(appearance, this._crossReference, 'N');\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, appearanceStream);\n                    appearance.update('N', reference);\n                }\n            }\n            this._dictionary._updated = false;\n        }\n    };\n    PdfWidgetAnnotation.prototype._initializeFont = function (font) {\n        this._pdfFont = font;\n        var document;\n        if (this._crossReference) {\n            document = this._crossReference._document;\n            var resource = void 0;\n            if (document) {\n                if (document.form._dictionary.has('DR')) {\n                    resource = document.form._dictionary.get('DR');\n                }\n                else {\n                    resource = new _PdfDictionary(this._crossReference);\n                }\n            }\n            var fontDict = void 0;\n            var isReference = false;\n            if (resource.has('Font')) {\n                var obj = resource.getRaw('Font'); // eslint-disable-line\n                if (obj && obj instanceof _PdfReference) {\n                    isReference = true;\n                    fontDict = this._crossReference._fetch(obj);\n                }\n                else if (obj instanceof _PdfDictionary) {\n                    fontDict = obj;\n                }\n            }\n            if (!fontDict) {\n                fontDict = new _PdfDictionary(this._crossReference);\n                resource.update('Font', fontDict);\n            }\n            var keyName = _PdfName.get(_getNewGuidString());\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            if (font instanceof PdfTrueTypeFont) {\n                if (this._pdfFont._pdfFontInternals) {\n                    this._crossReference._cacheMap.set(reference, this._pdfFont._pdfFontInternals);\n                }\n            }\n            else if (this._pdfFont._dictionary) {\n                this._crossReference._cacheMap.set(reference, this._pdfFont._dictionary);\n            }\n            fontDict.update(keyName.name, reference);\n            resource._updated = true;\n            document.form._dictionary.update('DR', resource);\n            document.form._dictionary._updated = true;\n            this._fontName = keyName.name;\n            var defaultAppearance = new _PdfDefaultAppearance();\n            defaultAppearance.fontName = this._fontName;\n            defaultAppearance.fontSize = this._pdfFont._size;\n            defaultAppearance.color = this.color ? this.color : [0, 0, 0];\n            this._dictionary.update('DA', defaultAppearance.toString());\n            if (isReference) {\n                resource._updated = true;\n            }\n            this._isFont = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._getPage = function () {\n        if (!this._page) {\n            var document_2;\n            if (this._crossReference) {\n                document_2 = this._crossReference._document;\n            }\n            var page = void 0;\n            if (this._dictionary.has('P')) {\n                var ref = this._dictionary.getRaw('P');\n                if (ref && document_2) {\n                    for (var i = 0; i < document_2.pageCount; i++) {\n                        var entry = document_2.getPage(i);\n                        if (entry && entry._ref === ref) {\n                            page = entry;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!page && document_2 && this._ref) {\n                page = _findPage(document_2, this._ref);\n            }\n            this._page = page;\n        }\n        return this._page;\n    };\n    PdfWidgetAnnotation.prototype._beginSave = function () {\n        if (!this._isLoaded && !this._page._isNew) {\n            var value = this._bounds;\n            this._dictionary.update('Rect', _getUpdatedBounds([value.x, value.y, value.width, value.height], this._page));\n        }\n    };\n    PdfWidgetAnnotation.prototype._parseBackColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBackColor) || (!this._isLoaded && !this._isTransparentBackColor)) {\n            if (typeof this._backColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BG')) {\n                    var colorArray = dictionary.getArray('BG');\n                    if (colorArray) {\n                        this._backColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._backColor === 'undefined' || this._backColor === null) {\n                this._backColor = [255, 255, 255];\n            }\n            value = this._backColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._parseBorderColor = function () {\n        var value;\n        if ((this._isLoaded && this._hasBorderColor) || (!this._isLoaded && !this._isTransparentBorderColor)) {\n            if (typeof this._borderColor === 'undefined') {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('BC')) {\n                    var colorArray = dictionary.getArray('BC');\n                    if (colorArray) {\n                        this._borderColor = _parseColor(colorArray);\n                    }\n                }\n            }\n            if (typeof this._borderColor === 'undefined' || this._borderColor === null) {\n                this._borderColor = [0, 0, 0];\n            }\n            value = this._borderColor;\n        }\n        return value;\n    };\n    PdfWidgetAnnotation.prototype._updateBackColor = function (value, setAppearance) {\n        if (setAppearance === void 0) { setAppearance = false; }\n        var isChanged = false;\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBackColor = true;\n            if (this._dictionary.has('BG')) {\n                delete this._dictionary._map.BG;\n                isChanged = true;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BG')) {\n                delete mkDictionary._map.BG;\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        else {\n            this._isTransparentBackColor = false;\n            if (typeof this.backColor === 'undefined' || this._backColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BG', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._backColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n                isChanged = true;\n            }\n        }\n        if (setAppearance && isChanged && this._field) {\n            this._field._setAppearance = true;\n        }\n    };\n    PdfWidgetAnnotation.prototype._updateBorderColor = function (value) {\n        if (value.length === 4 && value[3] !== 255) {\n            this._isTransparentBorderColor = true;\n            if (this._dictionary.has('BC')) {\n                delete this._dictionary._map.BC;\n            }\n            var mkDictionary = this._mkDictionary;\n            if (mkDictionary && mkDictionary.has('BC')) {\n                delete mkDictionary._map.BC;\n                if (this._dictionary.has('BS')) {\n                    var bsDictionary = this._dictionary.get('BS');\n                    if (bsDictionary && bsDictionary.has('W')) {\n                        delete bsDictionary._map.W;\n                    }\n                }\n                this._dictionary._updated = true;\n            }\n        }\n        else {\n            this._isTransparentBorderColor = false;\n            if (typeof this.borderColor === 'undefined' || this.borderColor !== value) {\n                if (typeof this._mkDictionary === 'undefined') {\n                    this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n                }\n                this._mkDictionary.update('BC', [Number.parseFloat((value[0] / 255).toFixed(3)),\n                    Number.parseFloat((value[1] / 255).toFixed(3)),\n                    Number.parseFloat((value[2] / 255).toFixed(3))]);\n                this._borderColor = [value[0], value[1], value[2]];\n                this._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfWidgetAnnotation;\n}(PdfAnnotation));\nexport { PdfWidgetAnnotation };\n/**\n * `PdfStateItem` class represents the check box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access check box field\n * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n * // Access first item of check box field\n * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n * // Sets the check box style as check\n * item.style = PdfCheckBoxStyle.check;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStateItem = /** @class */ (function (_super) {\n    __extends(PdfStateItem, _super);\n    /**\n     * Initializes a new instance of the `PdfStateItem` class.\n     *\n     * @private\n     */\n    function PdfStateItem() {\n        return _super.call(this) || this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfStateItem} Widget.\n     */\n    PdfStateItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfStateItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfStateItem.prototype, \"checked\", {\n        /**\n         * Gets the flag to indicate whether the field item is checked or not.\n         *\n         * @returns {boolean} Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the flag to indicate whether the field item is checked or not.\n         * let checked: boolean = item.checked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return _checkField(this._dictionary);\n        },\n        /**\n         * Sets the flag to indicate whether the field item is checked or not.\n         *\n         * @param {boolean} value Checked or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.checked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.checked !== value) {\n                if (this._field) {\n                    this._setCheckedStatus(value);\n                    this._field._setAppearance = true;\n                }\n                this._dictionary.update('AS', _PdfName.get(value ? 'Yes' : 'Off'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStateItem.prototype, \"style\", {\n        /**\n         * Gets the style of annotation.\n         *\n         * @returns {PdfCheckBoxStyle} Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Gets the style of the annotation\n         * let style: PdfCheckBoxStyle = item.style;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded) {\n                var dictionary = this._mkDictionary;\n                if (dictionary && dictionary.has('CA')) {\n                    this._style = _stringToStyle(dictionary.get('CA'));\n                }\n                else {\n                    this._style = PdfCheckBoxStyle.check;\n                }\n            }\n            return this._style;\n        },\n        /**\n         * Sets the style of annotation.\n         *\n         * @param {PdfCheckBoxStyle} value Style of annotation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access check box field\n         * let field: PdfCheckBoxField = document.form.fieldAt(0) as PdfCheckBoxField;\n         * // Access first item of check box field\n         * let item: PdfStateItem = field.itemAt(0) as PdfStateItem;\n         * // Sets the style of the annotation\n         * item.style = PdfCheckBoxStyle.check;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this.style !== value) {\n                this._style = value;\n                var dictionary = this._mkDictionary;\n                if (!dictionary) {\n                    dictionary = new _PdfDictionary(this._crossReference);\n                    this._dictionary.update('MK', dictionary);\n                }\n                dictionary.update('CA', _styleToString(value));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfStateItem.prototype._setCheckedStatus = function (value) {\n        var check = value;\n        var fieldValue = this._getItemValue(this._dictionary);\n        this._unCheckOthers(this, fieldValue, value);\n        if (check) {\n            if (!fieldValue) {\n                fieldValue = 'Yes';\n            }\n            this._field._dictionary.update('V', fieldValue);\n            this._dictionary.update('AS', _PdfName.get(fieldValue));\n            this._dictionary.update('V', _PdfName.get(fieldValue));\n        }\n        else if (this._field._dictionary) {\n            if (this._field._dictionary.has('V')) {\n                var v = this._field._dictionary.get('V');\n                if (v && v.name === fieldValue) {\n                    delete this._field._dictionary._map.V;\n                }\n            }\n            this._field._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    PdfStateItem.prototype._unCheckOthers = function (child, value, isChecked) {\n        if (!this._field._isUpdating) {\n            this._field._isUpdating = true;\n            var count = this._field.itemsCount;\n            for (var i = 0; i < count; ++i) {\n                var item = this._field.itemAt(i);\n                if (item) {\n                    if (item !== child) {\n                        item.checked = ((this._getItemValue(item._dictionary) === value) && isChecked);\n                    }\n                    else if (!item.checked) {\n                        item.checked = true;\n                    }\n                }\n            }\n        }\n    };\n    PdfStateItem.prototype._getItemValue = function (dictionary) {\n        var itemValue = '';\n        if (dictionary && dictionary.has('AS')) {\n            var asValue = dictionary.get('AS');\n            if (asValue && asValue.name !== 'Off') {\n                itemValue = 'Off';\n            }\n        }\n        if (itemValue === '') {\n            if (dictionary && dictionary.has('AP')) {\n                var apDictionary = dictionary.get('AP');\n                if (apDictionary && apDictionary.has('N')) {\n                    var normalAppearance = apDictionary.get('N');\n                    var keyList_1 = [];\n                    normalAppearance.forEach(function (key, value) {\n                        keyList_1.push(key);\n                    });\n                    if (keyList_1.length > 0) {\n                        for (var i = 0; i < keyList_1.length; i++) {\n                            var key = keyList_1[Number.parseInt(i.toString(), 10)];\n                            if (key && key !== 'Off') {\n                                itemValue = key;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return itemValue;\n    };\n    PdfStateItem.prototype._doPostProcess = function () {\n        var style = this.checked ? _PdfCheckFieldState.checked : _PdfCheckFieldState.unchecked;\n        var template = _getStateTemplate(style, this);\n        if (template) {\n            var page = this._getPage();\n            if (page) {\n                var graphics = page.graphics;\n                graphics.save();\n                if (page.rotation === PdfRotationAngle.angle90) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(90);\n                }\n                else if (page.rotation === PdfRotationAngle.angle180) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(-180);\n                }\n                else if (page.rotation === PdfRotationAngle.angle270) {\n                    graphics.translateTransform(graphics._size[0], graphics._size[1]);\n                    graphics.rotateTransform(270);\n                }\n                graphics._sw._setTextRenderingMode(_TextRenderingMode.fill);\n                graphics.drawTemplate(template, this.bounds);\n                graphics.restore();\n            }\n        }\n        this._dictionary._updated = false;\n    };\n    PdfStateItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value) {\n            value = (field && field.checked) ? 'Yes' : 'Off';\n        }\n        this._dictionary.update('AS', _PdfName.get(value));\n    };\n    PdfStateItem.prototype._setField = function (field) {\n        this._field = field;\n        this._field._stringFormat = new PdfStringFormat(this.textAlignment, PdfVerticalAlignment.middle);\n        this._field._addToKid(this);\n    };\n    return PdfStateItem;\n}(PdfWidgetAnnotation));\nexport { PdfStateItem };\n/**\n * `PdfRadioButtonListItem` class represents the radio button field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new radio button list field\n * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n * // Create and add first item\n * let first: PdfRadioButtonListItem = field.add('1-9', {x: 100, y: 140, width: 20, height: 20});\n * // Create and add second item\n * let second: PdfRadioButtonListItem = new PdfRadioButtonListItem('10-49', {x: 100, y: 170, width: 20, height: 20}, page);\n * field.add(second);\n * // Create and add third item\n * let third: PdfRadioButtonListItem = new PdfRadioButtonListItem('50-59', {x: 100, y: 200, width: 20, height: 20}, field);\n * field.add(third);\n * // Sets selected index of the radio button list field\n * field.selectedIndex = 0;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfRadioButtonListItem = /** @class */ (function (_super) {\n    __extends(PdfRadioButtonListItem, _super);\n    function PdfRadioButtonListItem(value, bounds, item) {\n        var _this = _super.call(this) || this;\n        if (item && value && bounds) {\n            if (item instanceof PdfField) {\n                _this._initializeItem(value, bounds, item.page, item);\n            }\n            else {\n                _this._initializeItem(value, bounds, item);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfRadioButtonListItem} Widget.\n     */\n    PdfRadioButtonListItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfRadioButtonListItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not.\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"value\", {\n        /**\n         * Gets the value of the radio button list field item\n         *\n         * @returns {string} Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Gets the value of the radio button list field item\n         * let value: string = item.value;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoaded && !this._optionValue) {\n                this._optionValue = _getItemValue(this._dictionary);\n            }\n            return this._optionValue;\n        },\n        /**\n         * Sets the value of the radio button list field item\n         *\n         * @param {string} option Value of the radio button list field item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfRadioButtonListField = new PdfRadioButtonListField(page, 'Age');\n         * // Access first list field item\n         * let item: PdfRadioButtonListItem = field.itemAt(0);\n         * // Sets the value of the radio button list field item\n         * item.value = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (option) {\n            this._optionValue = option;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadioButtonListItem.prototype, \"backColor\", {\n        /**\n         * Gets the back color of the annotation.\n         *\n         * @returns {number[]} Color as R, G, B color array in between 0 to 255.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfWidgetAnnotation = page.annotations.at(0) as PdfWidgetAnnotation;\n         * // Gets the back color of the annotation\n         * let backColor: number[] = annotation.backColor;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._parseBackColor();\n        },\n        /**\n         * Sets the back color of the annotation.\n         *\n         * @param {number[]} value Array with R, G, B, A color values in between 0 to 255. For optional A (0-254), it signifies transparency.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Access the radio button list field\n         * let field: PdfRadioButtonListField = form.fieldAt(0) as PdfRadioButtonListField;\n         * // Sets the back color of the radio button list item\n         * field.itemAt(0).backColor = [255, 255, 255];\n         * // Sets the background color of the field item to transparent\n         * field.itemAt(1).backColor = [0, 0, 0, 0];\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._updateBackColor(value, true);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfRadioButtonListItem.prototype._initializeItem = function (value, bounds, page, field) {\n        this._optionValue = value;\n        this._page = page;\n        this._create(this._page, bounds, this._field);\n        this.textAlignment = PdfTextAlignment.left;\n        this._dictionary.update('MK', new _PdfDictionary(this._crossReference));\n        this._mkDictionary.update('BC', [0, 0, 0]);\n        this._mkDictionary.update('BG', [1, 1, 1]);\n        this.style = PdfCheckBoxStyle.circle;\n        this._dictionary.update('DA', '/TiRo 0 Tf 0 0 0 rg');\n        if (field) {\n            this._setField(field);\n            this._dictionary.update('Parent', field._ref);\n        }\n    };\n    PdfRadioButtonListItem.prototype._postProcess = function (value) {\n        var field = this._field;\n        if (!value && field && field.selectedIndex !== -1) {\n            value = field.itemAt(field.selectedIndex).value;\n        }\n        if (this.value === value) {\n            this._dictionary.update('AS', _PdfName.get(this.value));\n        }\n        else {\n            this._dictionary.update('AS', _PdfName.get('Off'));\n        }\n    };\n    return PdfRadioButtonListItem;\n}(PdfStateItem));\nexport { PdfRadioButtonListItem };\n/**\n * `PdfListBoxItem` class represents the list and combo box field item objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Gets the first page of the document\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Access the PDF form\n * let form: PdfForm = document.form;\n * // Create a new list box field\n * let field: PdfListBoxField = new PdfListBoxField(page, 'list1', {x: 100, y: 60, width: 100, height: 50});\n * // Add list items to the field.\n * field.addItem(new PdfListFieldItem('English', 'English'));\n * field.addItem(new PdfListFieldItem('French', 'French'));\n * field.addItem(new PdfListFieldItem('German', 'German'));\n * // Sets the selected index\n * field.selectedIndex = 2;\n * // Sets the flag indicates whether the list box allows multiple selections.\n * field.multiSelect = true;\n * // Add the field into PDF form\n * form.add(field);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfListFieldItem = /** @class */ (function (_super) {\n    __extends(PdfListFieldItem, _super);\n    function PdfListFieldItem(text, value, field) {\n        var _this = _super.call(this) || this;\n        if (text && value) {\n            _this._initializeItem(text, value, field);\n        }\n        return _this;\n    }\n    /**\n     * Parse an existing item of the field.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Widget dictionary.\n     * @param {_PdfCrossReference} crossReference PDF cross reference.\n     * @param {PdfField} field Field object.\n     * @returns {PdfListFieldItem} Widget.\n     */\n    PdfListFieldItem._load = function (dictionary, crossReference, field) {\n        var widget = new PdfListFieldItem();\n        widget._isLoaded = true;\n        widget._dictionary = dictionary;\n        widget._crossReference = crossReference;\n        widget._field = field;\n        return widget;\n    };\n    Object.defineProperty(PdfListFieldItem.prototype, \"text\", {\n        /**\n         * Gets the text of the annotation.\n         *\n         * @returns {string} Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the text of the list field item\n         * let text: string = item.text;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._text === 'undefined' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                this._text = this._field._options[Number.parseInt(this._index.toString(), 10)][1];\n            }\n            return this._text;\n        },\n        /**\n         * Sets the text of the annotation.\n         *\n         * @param {string} value Text.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Sets the text of the list field item\n         * item.text = '1-9';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof value === 'string' &&\n                typeof this._field !== 'undefined' &&\n                (this._field instanceof PdfListBoxField || this._field instanceof PdfComboBoxField)) {\n                if (value !== this._field._options[Number.parseInt(this._index.toString(), 10)][1]) {\n                    this._field._options[Number.parseInt(this._index.toString(), 10)][1] = value;\n                    this._text = value;\n                    this._field._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListFieldItem.prototype, \"selected\", {\n        /**\n         * Gets the flag to indicate whether the field item is selected or not (Read only).\n         *\n         * @returns {boolean} Selected or not.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Gets the first page of the document\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Access the PDF form\n         * let form: PdfForm = document.form;\n         * // Create a new radio button list field\n         * let field: PdfListBoxField = form.fieldAt(0) as PdfListBoxField;\n         * // Access first list field item\n         * let item: PdfListFieldItem = field.itemAt(0);\n         * // Gets the flag to indicate whether the field item is selected or not.\n         * let selected: boolean = item.selected;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index === this._field.selectedIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListFieldItem.prototype._initializeItem = function (text, value, field) {\n        this._text = text;\n        this._value = value;\n        if (field && field instanceof PdfListBoxField) {\n            field._addToOptions(this, field);\n        }\n    };\n    return PdfListFieldItem;\n}(PdfStateItem));\nexport { PdfListFieldItem };\n/**\n * `PdfAnnotationCaption` class represents the caption text and properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Create and set annotation caption values\n * annotation.caption = new PdfAnnotationCaption(true, PdfLineCaptionType.inline, [10, 10]);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCaption = /** @class */ (function () {\n    function PdfAnnotationCaption(cap, type, offset) {\n        this._cap = typeof cap !== 'undefined' ? cap : false;\n        this._type = typeof type !== 'undefined' ? type : PdfLineCaptionType.inline;\n        this._offset = typeof offset !== 'undefined' ? offset : [0, 0];\n    }\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"cap\", {\n        /**\n         * Gets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @returns {boolean} Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the boolean flag indicating whether annotation has caption or not.\n         * let cap: boolean = annotation.caption.cap;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._cap;\n        },\n        /**\n         * Sets the boolean flag indicating whether annotation has caption or not.\n         *\n         * @param {boolean} value Caption.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the boolean flag indicating whether annotation has caption or not.\n         * annotation.caption.cap = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._cap) {\n                this._cap = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Cap', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"type\", {\n        /**\n         * Gets the caption type of the annotation.\n         *\n         * @returns {PdfLineCaptionType} Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the caption type of the annotation.\n         * let type: PdfLineCaptionType = annotation.caption.type;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._type;\n        },\n        /**\n         * Sets the caption type of the annotation.\n         *\n         * @param {PdfLineCaptionType} value Caption type.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the caption type of the annotation.\n         * annotation.caption.type = PdfLineCaptionType.inline;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._type) {\n                this._type = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CP', _PdfName.get(value === PdfLineCaptionType.top ? 'Top' : 'Inline'));\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationCaption.prototype, \"offset\", {\n        /**\n         * Gets the offset position of the annotation.\n         *\n         * @returns {Array<number>} Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the offset position of the annotation.\n         * let offset: Array<number> = annotation.caption.offset;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._offset;\n        },\n        /**\n         * Sets the offset position of the annotation.\n         *\n         * @param {Array<number>} value Caption offset.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Sets the offset position of the annotation.\n         * annotation.caption.offset = [10, 10];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (_areNotEqual(value, this._offset)) {\n                this._offset = value;\n                if (this._dictionary) {\n                    this._dictionary.update('CO', value);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCaption;\n}());\nexport { PdfAnnotationCaption };\n/**\n * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n * annotation.lineEndingStyle = new PdfAnnotationLineEndingStyle(PdfLineEndingStyle.openArrow, PdfLineEndingStyle.closeArrow);\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationLineEndingStyle = /** @class */ (function () {\n    function PdfAnnotationLineEndingStyle(begin, end) {\n        this._begin = typeof begin !== 'undefined' ? begin : PdfLineEndingStyle.none;\n        this._end = typeof end !== 'undefined' ? end : PdfLineEndingStyle.none;\n    }\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"begin\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} Begin line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the begin line ending style of the annotation.\n         * let begin: PdfLineEndingStyle = annotation.lineEndingStyle.begin;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._begin;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value Begin line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._begin) {\n                this._begin = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(value)), _PdfName.get(_reverseMapEndingStyle(this._end))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationLineEndingStyle.prototype, \"end\", {\n        /**\n         * Gets the begin line ending style of the annotation.\n         *\n         * @returns {PdfLineEndingStyle} End line ending style.\n         * `PdfAnnotationLineEndingStyle` class represents the line ending styles of annotations.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the end line ending style of the annotation.\n         * let end: PdfLineEndingStyle = annotation.lineEndingStyle.end;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._end;\n        },\n        /**\n         * Sets the begin line ending style of the annotation.\n         *\n         * @param {PdfLineEndingStyle} value End line ending style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the `PdfAnnotationLineEndingStyle` class.\n         * let lineEndingStyle = new PdfAnnotationLineEndingStyle();\n         * // Sets the begin line ending style of the annotation.\n         * lineEndingStyle.begin = PdfLineEndingStyle.openArrow;\n         * // Sets the end line ending style of the annotation.\n         * lineEndingStyle.end = PdfLineEndingStyle.closeArrow;\n         * // Sets the line ending style to the annotation\n         * annotation.lineEndingStyle = lineEndingStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._end) {\n                this._end = value;\n                if (this._dictionary) {\n                    this._dictionary.update('LE', [_PdfName.get(_reverseMapEndingStyle(this._begin)), _PdfName.get(_reverseMapEndingStyle(value))]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationLineEndingStyle;\n}());\nexport { PdfAnnotationLineEndingStyle };\n/**\n * `PdfInteractiveBorder` class represents the border of the field.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the PDF form field\n * let field: PdfField = document.form.fieldAt(0);\n * // Gets the width of the field border.\n * let width: number = field.border.width;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfInteractiveBorder = /** @class */ (function () {\n    function PdfInteractiveBorder(width, style, dash) {\n        this._width = typeof width !== 'undefined' ? width : 1;\n        this._style = typeof style !== 'undefined' ? style : PdfBorderStyle.solid;\n        if (typeof dash !== 'undefined' && Array.isArray(dash)) {\n            this._dash = dash;\n        }\n    }\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the field border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the width of the annotation border.\n         * let width: number = field.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the field border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"style\", {\n        /**\n         * Gets the border line style of the field border.\n         *\n         * @returns {PdfBorderStyle} Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the border line style of the annotation border.\n         * let style: PdfBorderStyle = field.border.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the border line style of the field border.\n         *\n         * @param {PdfBorderStyle} value Border style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfInteractiveBorder.prototype, \"dash\", {\n        /**\n         * Gets the dash pattern of the field border.\n         *\n         * @returns {Array<number>} Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Gets the dash pattern of the field border.\n         * let dash: Array<number> = field.border.dash;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._dash;\n        },\n        /**\n         * Sets the dash pattern of the field border.\n         *\n         * @param {Array<number>} value Dash pattern.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the PDF form field\n         * let field: PdfField = document.form.fieldAt(0);\n         * // Initializes a new instance of the `PdfInteractiveBorder` class.\n         * let border: PdfInteractiveBorder = new PdfInteractiveBorder();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * field.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (typeof this._dash === 'undefined' || _areNotEqual(value, this._dash)) {\n                this._dash = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    bs.update('D', this._dash);\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfInteractiveBorder;\n}());\nexport { PdfInteractiveBorder };\n/**\n * `PdfAnnotationBorder` class represents the border properties of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n * //Sets the width of the annotation border.\n * border.width = 10;\n * //Sets the style of the annotation border.\n * border.style = PdfBorderStyle.dashed;\n * //Sets the dash pattern of the annotation border.\n * border.dash = [1, 2, 1];\n * // Sets the border to the PDF form field\n * annotation.border = border;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationBorder = /** @class */ (function (_super) {\n    __extends(PdfAnnotationBorder, _super);\n    function PdfAnnotationBorder(width, hRadius, vRadius, style, dash) {\n        var _this = _super.call(this, width, style, dash) || this;\n        _this._hRadius = typeof hRadius !== 'undefined' ? hRadius : 0;\n        _this._vRadius = typeof vRadius !== 'undefined' ? vRadius : 0;\n        return _this;\n    }\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"width\", {\n        /**\n         * Gets the width of the annotation border.\n         *\n         * @returns {number} border width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the width of the annotation border.\n         * let width: number = annotation.border.width;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._width;\n        },\n        /**\n         * Sets the width of the annotation border.\n         *\n         * @param {number} value width.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._width) {\n                this._width = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                    var bs = this._dictionary.has('BS') ? this._dictionary.get('BS') : new _PdfDictionary(this._crossReference);\n                    bs.update('Type', _PdfName.get('Border'));\n                    bs.update('W', this._width);\n                    bs.update('S', _mapBorderStyle(this._style));\n                    if (this._dash) {\n                        bs.update('D', this._dash);\n                    }\n                    this._dictionary.update('BS', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"hRadius\", {\n        /**\n         * Gets the horizontal radius of the annotation border.\n         *\n         * @returns {number} horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the horizontal radius of the annotation border.\n         * let hRadius: number = annotation.border.hRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hRadius;\n        },\n        /**\n         * Sets the horizontal radius of the annotation border.\n         *\n         * @param {number} value horizontal radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the horizontal radius of the annotation border.\n         * border.hRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._hRadius) {\n                this._hRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationBorder.prototype, \"vRadius\", {\n        /**\n         * Gets the vertical radius of the annotation border.\n         *\n         * @returns {number} vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Gets the vertical radius of the annotation border.\n         * let vRadius: number = annotation.border.vRadius;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._vRadius;\n        },\n        /**\n         * Sets the vertical radius of the annotation border.\n         *\n         * @param {number} value vertical radius.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfLineAnnotation = page.annotations.at(0) as PdfLineAnnotation;\n         * // Initializes a new instance of the ` PdfAnnotationBorder ` class.\n         * let border: PdfAnnotationBorder = new PdfAnnotationBorder ();\n         * //Sets the width of the annotation border.\n         * border.width = 10;\n         * // Sets the vertical radius of the annotation border.\n         * border.vRadius = 2;\n         * //Sets the style of the annotation border.\n         * border.style = PdfBorderStyle.dashed;\n         * //Sets the dash pattern of the annotation border.\n         * border.dash = [1, 2, 1];\n         * // Sets the border to the PDF form field\n         * annotation.border = border;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._vRadius) {\n                this._vRadius = value;\n                if (this._dictionary) {\n                    this._dictionary.update('Border', [this._hRadius, this._vRadius, this._width]);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationBorder;\n}(PdfInteractiveBorder));\nexport { PdfAnnotationBorder };\n/**\n * `PdfBorderEffect` class represents the border effects of annotations.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the first page\n * let page: PdfPage = document.getPage(0) as PdfPage;\n * // Get the first annotation of the page\n * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n * // Initializes a new instance of the `PdfBorderEffect` class.\n * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n * // Sets the intensity of the annotation border.\n * borderEffect.intensity = 2;\n * // Sets the effect style of the annotation border.\n * borderEffect.style = PdfBorderEffectStyle.cloudy;\n * // Sets border effect to the annotation.\n * annotation.borderEffect = borderEffect;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBorderEffect = /** @class */ (function () {\n    function PdfBorderEffect(dictionary) {\n        this._intensity = 0;\n        if (typeof dictionary !== 'undefined' && dictionary !== null) {\n            if (dictionary.has('BE')) {\n                var borderEffect = this._dictionary.get('BE');\n                if (borderEffect) {\n                    if (borderEffect.has('I')) {\n                        this._intensity = borderEffect.get('I');\n                    }\n                    if (borderEffect.has('S')) {\n                        this._style = this._getBorderEffect(borderEffect.get('S'));\n                    }\n                }\n            }\n        }\n        else {\n            this._dictionary = new _PdfDictionary();\n            this._dictionary.set('I', this._intensity);\n            this._dictionary.set('S', this._styleToEffect(this._style));\n        }\n    }\n    Object.defineProperty(PdfBorderEffect.prototype, \"intensity\", {\n        /**\n         * Gets the intensity of the annotation border.\n         *\n         * @returns {number} intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._intensity;\n        },\n        /**\n         * Sets the intensity of the annotation border.\n         *\n         * @param {number} value intensity.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._intensity) {\n                this._intensity = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ? this._dictionary.get('BE') : new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorderEffect.prototype, \"style\", {\n        /**\n         * Gets the effect style of the annotation border.\n         *\n         * @returns {PdfBorderEffectStyle} effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Gets the intensity of the annotation border.\n         * let intensity: number = annotation.borderEffect.intensity;\n         * // Gets the effect style of the annotation border.\n         * let style: PdfBorderEffectStyle = annotation.borderEffect.style;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the effect style of the annotation border.\n         *\n         * @param {PdfBorderEffectStyle} value effect style.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the first page\n         * let page: PdfPage = document.getPage(0) as PdfPage;\n         * // Get the first annotation of the page\n         * let annotation: PdfSquareAnnotation = page.annotations.at(0) as PdfSquareAnnotation;\n         * // Initializes a new instance of the `PdfBorderEffect` class.\n         * let borderEffect: PdfBorderEffect = new PdfBorderEffect();\n         * // Sets the intensity of the annotation border.\n         * borderEffect.intensity = 2;\n         * // Sets the effect style of the annotation border.\n         * borderEffect.style = PdfBorderEffectStyle.cloudy;\n         * // Sets border effect to the annotation.\n         * annotation.borderEffect = borderEffect;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._style) {\n                this._style = value;\n                if (this._dictionary) {\n                    var bs = this._dictionary.has('BE') ?\n                        this._dictionary.get('BE') :\n                        new _PdfDictionary(this._crossReference);\n                    bs.update('I', this._intensity);\n                    bs.update('S', this._styleToEffect(this._style));\n                    this._dictionary.update('BE', bs);\n                    this._dictionary._updated = true;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBorderEffect.prototype._getBorderEffect = function (value) {\n        if (value === '/C') {\n            return PdfBorderEffectStyle.cloudy;\n        }\n        else {\n            return PdfBorderEffectStyle.solid;\n        }\n    };\n    PdfBorderEffect.prototype._styleToEffect = function (value) {\n        if (value === PdfBorderEffectStyle.cloudy) {\n            return 'C';\n        }\n        else {\n            return 'S';\n        }\n    };\n    return PdfBorderEffect;\n}());\nexport { PdfBorderEffect };\nvar _PaintParameter = /** @class */ (function () {\n    function _PaintParameter() {\n        this.borderWidth = 1;\n    }\n    return _PaintParameter;\n}());\nexport { _PaintParameter };\nvar _CloudStyleArc = /** @class */ (function () {\n    function _CloudStyleArc() {\n        this.startAngle = 0;\n        this.endAngle = 0;\n    }\n    return _CloudStyleArc;\n}());\n","import { _PdfDictionary, _PdfReference } from './../pdf-primitives';\nimport { _checkReview, _isNullOrUndefined } from './../utils';\nimport { PdfLineAnnotation, PdfCircleAnnotation, PdfEllipseAnnotation, PdfAngleMeasurementAnnotation, PdfRectangleAnnotation, PdfSquareAnnotation, PdfPolyLineAnnotation, PdfPolygonAnnotation, PdfInkAnnotation, PdfPopupAnnotation, PdfAttachmentAnnotation, Pdf3DAnnotation, PdfFileLinkAnnotation, PdfWatermarkAnnotation, PdfRubberStampAnnotation, PdfSoundAnnotation, PdfFreeTextAnnotation, PdfRedactionAnnotation, PdfRichMediaAnnotation, PdfTextMarkupAnnotation, PdfDocumentLinkAnnotation, PdfTextWebLinkAnnotation, PdfUriAnnotation, PdfComment } from './annotation';\nimport { PdfAnnotationFlag } from './../enumerator';\n/**\n * The class provides methods and properties to handle the collection of `PdfAnnotation`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation coolection from first page\n * let annotations: PdfAnnotationCollection = document.getPage(0).annotations;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    /**\n     * Represents a annotation collection.\n     *\n     * @private\n     * @param {Array<_PdfReference>} array Annotation references.\n     * @param {_PdfCrossReference} xref Cross reference object.\n     * @param {PdfPage} page PDF page object.\n     */\n    function PdfAnnotationCollection(array, xref, page) {\n        this._isExport = false;\n        if (_isNullOrUndefined(array)) {\n            this._annotations = array;\n        }\n        else {\n            this._annotations = [];\n        }\n        this._page = page;\n        this._crossReference = xref;\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @returns {number} Number of annotations.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation count\n         * let count: number = page.annotations.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._annotations.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfAnnotation` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfAnnotation} Annotation at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access the annotation at index 0\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        if (!this._parsedAnnotations.has(index)) {\n            var dictionary = this._annotations[Number.parseInt(index.toString(), 10)];\n            if (dictionary && dictionary instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(dictionary);\n            }\n            if (dictionary && dictionary instanceof _PdfDictionary) {\n                var annotation = this._parseAnnotation(dictionary);\n                if (annotation) {\n                    annotation._ref = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._parsedAnnotations.set(index, annotation);\n                }\n            }\n        }\n        return this._parsedAnnotations.get(index);\n    };\n    /**\n     * Add a new `PdfAnnotation` into the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to add.\n     * @returns {number} Annotation index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add a new annotation into the collection\n     * page.annotations.add(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        if (typeof annotation === 'undefined' || annotation === null) {\n            throw Error('annotation cannot be null or undefined');\n        }\n        if (annotation._isLoaded) {\n            throw Error('cannot add an existing annotation');\n        }\n        annotation._initialize(this._page);\n        var reference;\n        if (typeof annotation._ref !== 'undefined' && annotation._ref._isNew) {\n            reference = annotation._ref;\n        }\n        else {\n            reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, annotation._dictionary);\n            annotation._ref = reference;\n        }\n        var index = this._annotations.length;\n        this._annotations.push(reference);\n        this._parsedAnnotations.set(index, annotation);\n        var isAdded = false;\n        if (this._page && this._page._pageDictionary.has('Annots')) {\n            var collection = this._page._pageDictionary.get('Annots');\n            if (collection !== null && typeof collection !== 'undefined' && collection.indexOf(reference) === -1) {\n                collection.push(reference);\n                this._page._pageDictionary.set('Annots', collection);\n                isAdded = true;\n            }\n        }\n        if (!isAdded) {\n            this._page._pageDictionary.set('Annots', this._annotations);\n        }\n        this._page._pageDictionary._updated = true;\n        if (annotation && annotation instanceof PdfComment) {\n            this._addCommentsAndReview(annotation, annotation._dictionary.get('F'));\n        }\n        this._updateCustomAppearanceResource(annotation);\n        return index;\n    };\n    /**\n     * Remove an annotation from the collection.\n     *\n     * @param {PdfAnnotation} annotation Annotation to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Access first annotation from the PDF page\n     * let annotation: PdfAnnotation = page.annotations.at(0);\n     * // Remove an annotation from the collection\n     * page.annotations.remove(annotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.remove = function (annotation) {\n        if (annotation && annotation._ref) {\n            var index = this._annotations.lastIndexOf(annotation._ref);\n            if (index > -1) {\n                this.removeAt(index);\n            }\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index.\n     *\n     * @param {number} index Annotation index.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Remove an annotation from the collection\n     * page.annotations.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfAnnotationCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._annotations.length) {\n            throw Error('Index out of range.');\n        }\n        var reference = this._annotations[Number.parseInt(index.toString(), 10)];\n        if (reference && this._page) {\n            var array = this._page._getProperty('Annots');\n            var actualIndex = array.indexOf(reference);\n            if (actualIndex > -1) {\n                array.splice(actualIndex, 1);\n            }\n            this._page._pageDictionary.set('Annots', array);\n            this._page._pageDictionary._updated = true;\n            if (this._annotations.indexOf(reference) > -1) {\n                this._annotations.splice(index, 1);\n            }\n            if (this._parsedAnnotations.has(index)) {\n                this._parsedAnnotations.delete(index);\n                this._reorderParsedAnnotations(index);\n            }\n            var crossReference = this._page._crossReference;\n            if (crossReference && crossReference._cacheMap.has(reference)) {\n                crossReference._cacheMap.delete(reference);\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedAnnotations.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedAnnotations = result;\n    };\n    PdfAnnotationCollection.prototype._updateCustomAppearanceResource = function (annotation) {\n        if (annotation && annotation instanceof PdfRubberStampAnnotation && typeof annotation._appearance !== 'undefined') {\n            annotation._appearance.normal.graphics._processResources(annotation._crossReference);\n        }\n    };\n    PdfAnnotationCollection.prototype._addCommentsAndReview = function (annotation, flag) {\n        this._updateChildReference(annotation, annotation.comments, flag);\n        this._updateChildReference(annotation, annotation.reviewHistory, flag);\n    };\n    PdfAnnotationCollection.prototype._updateChildReference = function (annotation, collection, flag) {\n        if (collection && collection.count > 0) {\n            if (flag !== 30) {\n                for (var i = 0; i < collection.count; i++) {\n                    var childAnnotation = collection._collection[Number.parseInt(i.toString(), 10)];\n                    if (childAnnotation && !childAnnotation._dictionary.has('IRT')) {\n                        if (i === 0 || !collection._isReview) {\n                            childAnnotation._dictionary.update('IRT', annotation._ref);\n                        }\n                        else {\n                            childAnnotation._dictionary.update('IRT', collection._collection[i - 1]._ref);\n                        }\n                        if (collection._isReview) {\n                            childAnnotation._isReview = true;\n                        }\n                        else {\n                            childAnnotation._isComment = true;\n                        }\n                        this.add(childAnnotation);\n                    }\n                }\n            }\n            else {\n                throw new Error('Could not add comments/reviews to the review');\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._parseAnnotation = function (dictionary) {\n        var annot;\n        if (dictionary && dictionary.has('Subtype') && this._page !== null && typeof this._page !== 'undefined') {\n            var key = dictionary.get('Subtype');\n            var size = dictionary.get('Rect');\n            if (key) {\n                var link = void 0;\n                switch (key.name) {\n                    case 'Line':\n                        annot = PdfLineAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Circle':\n                        if (dictionary.has('Measure')) {\n                            annot = PdfCircleAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            var width = size[2] - size[0];\n                            var height = size[3] - size[1];\n                            if (width === height) {\n                                annot = PdfCircleAnnotation._load(this._page, dictionary);\n                            }\n                            else {\n                                annot = PdfEllipseAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        break;\n                    case 'Square':\n                        if (size[2] === size[3]) {\n                            annot = PdfSquareAnnotation._load(this._page, dictionary);\n                        }\n                        else {\n                            annot = PdfRectangleAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Polygon':\n                        annot = PdfPolygonAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'PolyLine':\n                        if (dictionary.has('Measure') && dictionary.has('IT')) {\n                            var type = dictionary.get('IT');\n                            if (type && type.name === 'PolyLineAngle') {\n                                annot = PdfAngleMeasurementAnnotation._load(this._page, dictionary);\n                            }\n                        }\n                        if (!annot) {\n                            annot = PdfPolyLineAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'Ink':\n                        annot = PdfInkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Popup':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Text':\n                        annot = PdfPopupAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Link':\n                        if (dictionary.has('A')) {\n                            link = dictionary.get('A');\n                        }\n                        if (link && link.has('S')) {\n                            var type = link.get('S').name;\n                            if (type) {\n                                var isTextWebLink = this._hasValidBorder(dictionary.getArray('Border'));\n                                if (type === 'URI') {\n                                    annot = isTextWebLink ?\n                                        PdfTextWebLinkAnnotation._load(this._page, dictionary) :\n                                        this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'Launch') {\n                                    annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                                }\n                                else if (type === 'GoToR') {\n                                    annot = this._getLinkAnnotation(dictionary);\n                                }\n                                else if (type === 'GoTo') {\n                                    annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                                }\n                            }\n                        }\n                        else if (key.name === 'Link') {\n                            annot = PdfDocumentLinkAnnotation._load(this._page, dictionary);\n                        }\n                        break;\n                    case 'FileAttachment':\n                        annot = PdfAttachmentAnnotation._load(this._page, dictionary);\n                        break;\n                    case '3D':\n                        annot = Pdf3DAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'FreeText':\n                        annot = PdfFreeTextAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Redact':\n                        annot = PdfRedactionAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'RichMedia':\n                        annot = PdfRichMediaAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Watermark':\n                        annot = PdfWatermarkAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Stamp':\n                        annot = PdfRubberStampAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Sound':\n                        annot = PdfSoundAnnotation._load(this._page, dictionary);\n                        break;\n                    case 'Highlight':\n                    case 'Squiggly':\n                    case 'StrikeOut':\n                    case 'Underline':\n                        annot = PdfTextMarkupAnnotation._load(this._page, dictionary);\n                        break;\n                }\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._getLinkAnnotation = function (dictionary) {\n        var annot;\n        if (this._page) {\n            if (dictionary && dictionary.has('A')) {\n                var remote = dictionary.get('A');\n                if (remote && remote.has('S')) {\n                    var link = remote.get('S');\n                    if (link && link.name === 'GoToR' && remote.has('F')) {\n                        annot = PdfFileLinkAnnotation._load(this._page, dictionary);\n                    }\n                    else if (link && link.name === 'URI') {\n                        annot = PdfUriAnnotation._load(this._page, dictionary);\n                    }\n                }\n            }\n            else {\n                annot = PdfUriAnnotation._load(this._page, dictionary);\n            }\n        }\n        return annot;\n    };\n    PdfAnnotationCollection.prototype._hasValidBorder = function (border) {\n        if (typeof border === 'undefined' || border === null) {\n            return false;\n        }\n        for (var i = 0; i < border.length; i++) {\n            var val = 0;\n            var value = border[Number.parseInt(i.toString(), 10)];\n            if (value !== null && typeof value !== 'undefined') {\n                val = value;\n            }\n            if (val > 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PdfAnnotationCollection.prototype._doPostProcess = function (isFlatten) {\n        var index = 0;\n        while (index < this.count) {\n            var annotation = this.at(index);\n            if (annotation) {\n                var flattenValue = annotation.flatten || isFlatten;\n                annotation._isExport = this._isExport;\n                if (flattenValue && this._annotations.lastIndexOf(annotation._ref) === -1) {\n                    index++;\n                }\n                annotation._doPostProcess(flattenValue);\n                if (!flattenValue) {\n                    index++;\n                }\n            }\n            else {\n                index++;\n            }\n        }\n    };\n    PdfAnnotationCollection.prototype._reArrange = function (ref, tabIndex, index) {\n        if (this._annotations) {\n            if (tabIndex > this._annotations.length) {\n                tabIndex = 0;\n            }\n            if (index >= this._annotations.length) {\n                index = this._annotations.indexOf(ref);\n            }\n            var annotationDictionary = this._crossReference.\n                _fetch(this._annotations[Number.parseInt(index.toString(), 10)]);\n            if (annotationDictionary && annotationDictionary.has('Parent')) {\n                var parentReference = annotationDictionary.getRaw('Parent');\n                if ((parentReference && parentReference === ref) || ref ===\n                    this._annotations[Number.parseInt(index.toString(), 10)]) {\n                    var temp = this._annotations[Number.parseInt(index.toString(), 10)];\n                    this._annotations[Number.parseInt(index.toString(), 10)] = this._annotations[Number.parseInt(tabIndex.toString(), 10)];\n                    this._annotations[Number.parseInt(tabIndex.toString(), 10)] = temp;\n                }\n            }\n        }\n        return this._annotations;\n    };\n    PdfAnnotationCollection.prototype._clear = function () {\n        this._annotations = [];\n        this._parsedAnnotations = new Map();\n        this._comments = [];\n    };\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n/**\n * Represents the collection of `PdfPopupAnnotation`\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access annotation collection from first page\n * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n * // Gets the comments of annotation\n * let comments: PdfPopupAnnotationCollection = annotation.comments;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPopupAnnotationCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPopupAnnotationCollection` class\n     *\n     * @private\n     * @param {PdfAnnotation} annotation Annotation reference\n     * @param {boolean} isReview Boolean flag to set review\n     */\n    function PdfPopupAnnotationCollection(annotation, isReview) {\n        this._collection = [];\n        if (annotation) {\n            this._annotation = annotation;\n        }\n        this._isReview = isReview;\n        if (annotation && this._annotation._isLoaded || annotation._page) {\n            this._page = annotation._page;\n            this._parentDictionary = annotation._dictionary;\n            if (this._annotation._isLoaded) {\n                this._parseCommentsOrReview();\n            }\n        }\n    }\n    Object.defineProperty(PdfPopupAnnotationCollection.prototype, \"count\", {\n        /**\n         * Gets the annotation count (Read only).\n         *\n         * @private\n         * @returns {number} Number of annotations\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access annotation collection from first page\n         * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n         * // Gets the comments of annotation\n         * let comments: PdfPopupAnnotationCollection = annotation.comments;\n         * // Gets the count of comments\n         * let count: number = comments.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the popup annotation at the specified index.\n     *\n     * @private\n     * @param {number} index Index of the annotation\n     * @returns {number} Annotation at the specified index\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.at = function (index) {\n        if (index < 0 || index >= this._collection.length) {\n            throw Error('Index out of range.');\n        }\n        return this._collection[Number.parseInt(index.toString(), 10)];\n    };\n    /**\n     * Add a new popup annotation into the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to add\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create a new popup annotation\n     * const popupAnnotation: PdfPopupAnnotation = new PdfPopupAnnotation('Test popup annotation', 10, 40, 30, 30);\n     * popupAnnotation.author = 'Syncfusion';\n     * // Add a new popup annotation into the collection\n     * annotation.comments.add(popupAnnotation);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.add = function (annotation) {\n        if (this._annotation._dictionary.get('F') === 30) {\n            throw new Error('Could not add comments/reviews to the review');\n        }\n        annotation._dictionary.update('F', ((this._annotation.flags === PdfAnnotationFlag.locked) ? 128 : (this._isReview ? 30 : 28)));\n        if (this._annotation && (this._annotation._isLoaded || (this._page && this._annotation._ref))) {\n            this._page.annotations.add(annotation);\n            var length_1 = this._collection.length;\n            if (length_1 === 0 || !this._isReview) {\n                annotation._dictionary.update('IRT', this._annotation._ref);\n            }\n            else {\n                annotation._dictionary.update('IRT', this._collection[Number.parseInt((length_1 - 1).toString(), 10)]._ref);\n            }\n            if (this._isReview) {\n                annotation._isReview = true;\n            }\n            else {\n                annotation._isComment = true;\n            }\n        }\n        this._collection.push(annotation);\n    };\n    /**\n     * Remove an annotation from the collection\n     *\n     * @param {PdfPopupAnnotation} annotation Annotation to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Gets the first comment\n     * let comment: PdfPopupAnnotation = comments.at(0);\n     * // Remove the comment\n     * comments.remove(comment);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.remove = function (annotation) {\n        var index = this._collection.indexOf(annotation);\n        if (index > -1) {\n            this.removeAt(index);\n        }\n    };\n    /**\n     * Remove an annotation from the collection at the specified index\n     *\n     * @param {number} index Annotation index to remove\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access annotation collection from first page\n     * let annotations: PdfRectangleAnnotation = document.getPage(0).annotations;\n     * // Gets the comments of annotation\n     * let comments: PdfPopupAnnotationCollection = annotation.comments;\n     * // Remove the first comment\n     * comments.removeAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPopupAnnotationCollection.prototype.removeAt = function (index) {\n        if (index > -1 && index < this._collection.length) {\n            var annotation = this._collection[Number.parseInt(index.toString(), 10)];\n            if (this._isReview && index < this._collection.length - 1) {\n                var nextAnnotation = this._collection[Number.parseInt((index + 1).toString(), 10)];\n                var previous = annotation._dictionary._get('IRT');\n                nextAnnotation._dictionary.set('IRT', previous);\n                nextAnnotation._dictionary._updated = true;\n            }\n            this._collection.splice(index, 1);\n            this._page.annotations.remove(annotation);\n        }\n        else {\n            throw new Error('Index out of range.');\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseCommentsOrReview = function () {\n        if (this._isReview) {\n            this._parseReview();\n        }\n        else {\n            this._parseComments();\n        }\n    };\n    PdfPopupAnnotationCollection.prototype._parseReview = function () {\n        var collection;\n        if (this._page) {\n            collection = this._page.annotations;\n        }\n        var map = new Map();\n        map.set(this._annotation._ref, this._annotation);\n        if (collection && collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var reference = annotation._dictionary._get('IRT');\n                if (annotation._isReview && reference && map.has(reference)) {\n                    this._collection.push(annotation);\n                    map.set(annotation._ref, annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else if (collection) {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var reference = dictionary._get('IRT');\n                        if (annotation._isReview && reference && map.has(reference)) {\n                            this._collection.push(annotation);\n                            map.set(annotation._ref, annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n        map.clear();\n    };\n    PdfPopupAnnotationCollection.prototype._parseComments = function () {\n        var collection;\n        if (this._page) {\n            collection = this._page.annotations;\n        }\n        if (collection && collection._comments && collection._comments.length > 0) {\n            var remaining = [];\n            for (var i = 0; i < collection._comments.length; i++) {\n                var annotation = collection._comments[Number.parseInt(i.toString(), 10)];\n                var dictionary = annotation._dictionary;\n                var isReview = _checkReview(dictionary);\n                var reference = dictionary._get('IRT');\n                if (reference && reference === this._annotation._ref && !isReview) {\n                    this._collection.push(annotation);\n                }\n                else {\n                    remaining.push(annotation);\n                }\n            }\n            if (remaining.length > 0) {\n                collection._comments = remaining;\n            }\n            else {\n                collection._comments = [];\n            }\n        }\n        else if (collection) {\n            var count = collection.count;\n            for (var i = 0; i < count; i++) {\n                var annotation = collection.at(i);\n                if (annotation && annotation instanceof PdfPopupAnnotation) {\n                    var dictionary = annotation._dictionary;\n                    if (annotation._dictionary.has('IRT')) {\n                        var isReview = _checkReview(dictionary);\n                        var reference = dictionary._get('IRT');\n                        if (reference && reference === this._annotation._ref && !isReview) {\n                            this._collection.push(annotation);\n                        }\n                        else {\n                            collection._comments.push(annotation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfPopupAnnotationCollection;\n}());\nexport { PdfPopupAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDestinationMode, PdfRotationAngle, PdfTextStyle } from './enumerator';\nimport { PdfDestination } from './pdf-page';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _checkRotation, _getPageIndex, _isNullOrUndefined, _obtainDestination, _parseColor } from './utils';\n/**\n * Represents a base class for all bookmark objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmarkBase = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfBookmarkBase` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Outline dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmarkBase(dictionary, crossReference) {\n        this._bookMarkList = [];\n        this._isExpanded = false;\n        this._isLoadedBookmark = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n    }\n    Object.defineProperty(PdfBookmarkBase.prototype, \"count\", {\n        /**\n         * Gets the bookmark count (Read only).\n         *\n         * @returns {number} Number of bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Get bookmark count\n         * let bookmarkCount: number = bookmarks.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._isLoadedBookmark && this._bookMarkList.length === 0) {\n                this._reproduceTree();\n            }\n            return this._bookMarkList.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmarkBase.prototype, \"isExpanded\", {\n        /**\n         * Gets the boolean flag indicating whether the bookmark is expanded or not.\n         *\n         * @returns {boolean} whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the boolean flag indicating whether the bookmark is expanded or not\n         * let isExpanded: boolean = bookmark.isExpanded;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary && this._dictionary.has('Count')) {\n                return (this._dictionary.get('Count') >= 0);\n            }\n            else {\n                return this._isExpanded;\n            }\n        },\n        /**\n         * Sets the boolean flag indicating whether the bookmark is expanded or not.\n         *\n         * @param {boolean} value whether the bookmark is expanded or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the boolean flag indicating whether the bookmark is expanded or not\n         * bookmark.isExpanded = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isExpanded = value;\n            if (this.count > 0 && this._dictionary) {\n                this._dictionary.update('Count', value ? this._bookMarkList.length : (-this._bookMarkList.length));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfBookmark` at the specified index.\n     *\n     * @param {number} index Bookmark index.\n     * @returns {PdfBookmark} Bookmark at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.at = function (index) {\n        var bookmark;\n        if (index < 0 || index >= this.count) {\n            throw Error('Index out of range.');\n        }\n        if (_isNullOrUndefined(this._bookMarkList) && this._bookMarkList.length > 0 && index < this._bookMarkList.length) {\n            bookmark = this._bookMarkList[Number.parseInt(index.toString(), 10)];\n        }\n        return bookmark;\n    };\n    /**\n     * Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     *\n     * @param {PdfBookmark} outline Bookmark.\n     * @returns {boolean} whether the bookmark is present or not.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Get the bookmark at the specified index\n     * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n     * // Gets the boolean flag indicating whether `PdfBookmark` is present or not.\n     * let isPresent: boolean = bookmarks.contains(bookmark);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.contains = function (outline) {\n        return this._bookMarkList.indexOf(outline) !== -1;\n    };\n    PdfBookmarkBase.prototype.add = function (title, index) {\n        var bookmark;\n        if (this._dictionary) {\n            var dictionary = new _PdfDictionary(this._crossReference);\n            dictionary.update('Parent', this._reference);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, dictionary);\n            bookmark = new PdfBookmark(dictionary, this._crossReference);\n            bookmark._reference = reference;\n            bookmark.title = title;\n            if (typeof index === 'undefined') {\n                if (this.count === 0) {\n                    this._dictionary.update('First', reference);\n                    this._dictionary.update('Last', reference);\n                }\n                else {\n                    var last = this.at(this.count - 1);\n                    this._dictionary.update('Last', reference);\n                    if (last && last._reference) {\n                        dictionary.update('Prev', last._reference);\n                        last._dictionary.update('Next', reference);\n                    }\n                }\n                this._bookMarkList.push(bookmark);\n            }\n            else {\n                if (index < 0 || index > this.count) {\n                    throw new Error('Index out of range');\n                }\n                if (this.count === 0) {\n                    this._dictionary.update('First', reference);\n                    this._dictionary.update('Last', reference);\n                    this._bookMarkList.push(bookmark);\n                }\n                else if (index === this.count) {\n                    var last = this.at(this.count - 1);\n                    this._dictionary.update('Last', reference);\n                    if (last && last._reference) {\n                        dictionary.update('Prev', last._reference);\n                        last._dictionary.update('Next', reference);\n                    }\n                    this._bookMarkList.push(bookmark);\n                }\n                else if (index === 0) {\n                    var first = this.at(0);\n                    this._dictionary.update('First', reference);\n                    if (first && first._reference) {\n                        dictionary.update('Next', first._reference);\n                        first._dictionary.update('Prev', reference);\n                    }\n                    this._updateBookmarkList(index, bookmark);\n                }\n                else {\n                    var next = this.at(index);\n                    var prev = this.at(index - 1);\n                    if (prev && prev._reference && next && next._reference) {\n                        dictionary.update('Prev', prev._reference);\n                        prev._dictionary.update('Next', reference);\n                        next._dictionary.update('Prev', reference);\n                        dictionary.update('Next', next._reference);\n                    }\n                    this._updateBookmarkList(index, bookmark);\n                }\n            }\n            this._updateCount();\n        }\n        return bookmark;\n    };\n    PdfBookmarkBase.prototype.remove = function (value) {\n        if (typeof value === 'string') {\n            for (var i = this._bookMarkList.length - 1; i >= 0; i--) {\n                var bookmark = this.at(i);\n                if (bookmark.title === value) {\n                    this.remove(i);\n                }\n                else if (bookmark.count > 0) {\n                    bookmark.remove(value);\n                }\n            }\n        }\n        else {\n            if (value >= 0 && value < this.count) {\n                if (this.count === 1) {\n                    this._removeFirst(this._dictionary);\n                    this._removeLast(this._dictionary);\n                    this._removeCount(this._dictionary);\n                    this._bookMarkList = [];\n                }\n                else {\n                    if (value === 0) {\n                        var next = this.at(value + 1);\n                        if (this._dictionary && next && next._reference) {\n                            this._removePrevious(next._dictionary);\n                            this._dictionary.update('First', next._reference);\n                        }\n                    }\n                    else if (value === this.count - 1) {\n                        var prev = this.at(value - 1);\n                        if (this._dictionary && prev && prev._reference) {\n                            this._removeNext(prev._dictionary);\n                            this._dictionary.update('Last', prev._reference);\n                        }\n                    }\n                    else {\n                        var prev = this.at(value - 1);\n                        var next = this.at(value + 1);\n                        if (prev && prev._reference && next && next._reference) {\n                            prev._dictionary.update('Next', next._reference);\n                            next._dictionary.update('Prev', prev._reference);\n                        }\n                    }\n                    this._updateBookmarkList(value);\n                    if (this._dictionary) {\n                        this._updateCount();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Removes all the bookmark from the collection.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Get the bookmarks\n     * let bookmarks: PdfBookmarkBase = document.bookmarks;\n     * // Remove all the bookmark from the collection.\n     * bookmarks.clear();\n     * // Get count after removal of all outlines.\n     * let count: number = bookmarks.count;\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfBookmarkBase.prototype.clear = function () {\n        this._removeFirst(this._dictionary);\n        this._removeLast(this._dictionary);\n        this._removeCount(this._dictionary);\n        this._bookMarkList = [];\n    };\n    PdfBookmarkBase.prototype._removeFirst = function (dictionary) {\n        if (dictionary && dictionary.has('First')) {\n            delete dictionary._map.First;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeLast = function (dictionary) {\n        if (dictionary && dictionary.has('Last')) {\n            delete dictionary._map.Last;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeNext = function (dictionary) {\n        if (dictionary && dictionary.has('Next')) {\n            delete dictionary._map.Next;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removePrevious = function (dictionary) {\n        if (dictionary && dictionary.has('Prev')) {\n            delete dictionary._map.Prev;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._removeCount = function (dictionary) {\n        if (dictionary && dictionary.has('Count')) {\n            delete dictionary._map.Count;\n            dictionary._updated = true;\n        }\n    };\n    PdfBookmarkBase.prototype._updateBookmarkList = function (index, bookmark) {\n        var updatedList = [];\n        if (typeof bookmark === 'undefined') {\n            for (var i = 0; i < this.count; i++) {\n                var entry = this._bookMarkList[Number.parseInt(i.toString(), 10)];\n                if (i !== index) {\n                    updatedList.push(entry);\n                }\n                else {\n                    var reference = entry._reference;\n                    if (reference && this._crossReference._cacheMap.has(reference)) {\n                        this._crossReference._cacheMap.get(reference)._updated = false;\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < this.count; i++) {\n                if (i === index) {\n                    updatedList.push(bookmark);\n                }\n                updatedList.push(this._bookMarkList[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this._bookMarkList = updatedList;\n    };\n    PdfBookmarkBase.prototype._updateCount = function () {\n        if (this.isExpanded || !this._dictionary.has('Count')) {\n            this._dictionary.update('Count', this._bookMarkList.length);\n        }\n        else {\n            this._dictionary.update('Count', -this._bookMarkList.length);\n        }\n    };\n    PdfBookmarkBase.prototype._reproduceTree = function () {\n        var firstBookmark = this._getBookmark(this);\n        var isBookmark = (firstBookmark) ? true : false;\n        while (isBookmark && firstBookmark._dictionary) {\n            this._bookMarkList.push(firstBookmark);\n            firstBookmark = firstBookmark._next;\n            isBookmark = (firstBookmark) ? true : false;\n        }\n    };\n    PdfBookmarkBase.prototype._getBookmark = function (bookmarkBase, isFirst) {\n        if (isFirst === void 0) { isFirst = true; }\n        var bookmarkBaseDictionary = bookmarkBase._dictionary;\n        var bookMark;\n        if (bookmarkBaseDictionary && bookmarkBaseDictionary.has(isFirst ? 'First' : 'Last')) {\n            var reference = bookmarkBaseDictionary._get(isFirst ? 'First' : 'Last');\n            if (_isNullOrUndefined(reference)) {\n                var bookMarkDictionary = this._crossReference._fetch(reference);\n                if (bookMarkDictionary) {\n                    bookMark = new PdfBookmark(bookMarkDictionary, this._crossReference);\n                    bookMark._reference = reference;\n                }\n            }\n        }\n        return bookMark;\n    };\n    return PdfBookmarkBase;\n}());\nexport { PdfBookmarkBase };\n/**\n * Represents a bookmark in a PDF document\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBookmark = /** @class */ (function (_super) {\n    __extends(PdfBookmark, _super);\n    /**\n     * Initializes a new instance of the `PdfBookmark` class.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Bookmark dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference.\n     *\n     */\n    function PdfBookmark(dictionary, crossReference) {\n        var _this = _super.call(this, dictionary, crossReference) || this;\n        if (_this._dictionary && !_this._dictionary.has('Dest') && _this._dictionary.has('A')) {\n            var actionDictionary = _this._dictionary.get('A');\n            if (actionDictionary && actionDictionary.has('D')) {\n                var destinationArray = actionDictionary.getRaw('D'); // eslint-disable-line\n                _this._dictionary.update('Dest', destinationArray);\n            }\n        }\n        _this._isLoadedBookmark = true;\n        return _this;\n    }\n    Object.defineProperty(PdfBookmark.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the destination\n         * let destination: PdfDestination = bookmark.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._destination) {\n                var namedDestination = this._obtainNamedDestination();\n                if (namedDestination === null || typeof namedDestination === 'undefined') {\n                    this._destination = _obtainDestination(this._dictionary, 'Dest');\n                }\n            }\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Set the destination\n         * bookmark.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"namedDestination\", {\n        /**\n         * Gets the named destination.\n         *\n         * @returns {PdfNamedDestination} Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._namedDestination === null || typeof this._namedDestination === 'undefined') {\n                this._namedDestination = this._obtainNamedDestination();\n            }\n            return this._namedDestination;\n        },\n        /**\n         * Sets the named destination.\n         *\n         * @param {PdfNamedDestination} value Named destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._namedDestination !== value && this._dictionary) {\n                this._namedDestination = value;\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('D', value.title);\n                dictionary.update('S', _PdfName.get('GoTo'));\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                this._dictionary.update('A', reference);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"title\", {\n        /**\n         * Gets the bookmark title.\n         *\n         * @returns {string} Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark title\n         * let bookmarkTitle: string = bookmark.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._title === null || typeof this._title === 'undefined') {\n                if (this._dictionary && this._dictionary.has('Title')) {\n                    this._title = this._dictionary.get('Title');\n                }\n                else {\n                    this._title = '';\n                }\n            }\n            return this._title;\n        },\n        /**\n         * Sets the bookmark title.\n         *\n         * @param {string} value Bookmark title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the bookmark title\n         * bookmark.title = 'Syncfusion';\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._title = value;\n            if (this._dictionary) {\n                this._dictionary.update('Title', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"color\", {\n        /**\n         * Gets the bookmark color.\n         *\n         * @returns {number[]} Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the bookmark color\n         * let color: number[] = bookmark.color;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._color === null || typeof this._color === 'undefined') {\n                if (this._dictionary && this._dictionary.has('C')) {\n                    this._color = _parseColor(this._dictionary.getArray('C'));\n                }\n            }\n            return (this._color) ? this._color : [0, 0, 0];\n        },\n        /**\n         * Sets the bookmark color.\n         *\n         * @param {number[]} value Bookmark color.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the bookmark color\n         * bookmark.color = [255, 0, 0];\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._color = value;\n            if (this._dictionary) {\n                this._dictionary.update('C', [Number.parseFloat((value[0] / 255).toFixed(7)),\n                    Number.parseFloat((value[1] / 255).toFixed(7)),\n                    Number.parseFloat((value[2] / 255).toFixed(7))]);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"textStyle\", {\n        /**\n         * Gets the text style.\n         *\n         * @returns {PdfTextStyle} Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the textStyle\n         * let textStyle: PdfTextStyle = bookmark.textStyle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._textStyle === null || typeof this._textStyle === 'undefined') {\n                this._textStyle = this._obtainTextStyle();\n            }\n            return this._textStyle;\n        },\n        /**\n         * Sets the text style.\n         *\n         * @param {PdfTextStyle} value Text style.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Sets the textStyle\n         * bookmark.textStyle = PdfTextStyle.italic;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._textStyle = value;\n            this._updateTextStyle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBookmark.prototype, \"_next\", {\n        get: function () {\n            var nextBookmark;\n            if (this._dictionary && this._dictionary.has('Next')) {\n                var reference = this._dictionary._get('Next');\n                if (_isNullOrUndefined(reference)) {\n                    var dictionary = this._crossReference._fetch(reference);\n                    if (dictionary) {\n                        nextBookmark = new PdfBookmark(dictionary, this._crossReference);\n                        nextBookmark._reference = reference;\n                    }\n                }\n            }\n            return nextBookmark;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfBookmark.prototype._updateTextStyle = function (value) {\n        if (value === PdfTextStyle.regular) {\n            if (this._dictionary && this._dictionary.has('F')) {\n                delete this._dictionary._map.F;\n            }\n        }\n        else if (this._dictionary) {\n            this._dictionary.update('F', value);\n        }\n    };\n    PdfBookmark.prototype._obtainTextStyle = function () {\n        var style = PdfTextStyle.regular;\n        if (this._dictionary && this._dictionary.has('F')) {\n            var flag = this._dictionary.get('F');\n            var flagValue = 0;\n            if (typeof flag !== 'undefined' && flag !== null) {\n                flagValue = flag;\n            }\n            style |= flagValue;\n        }\n        return style;\n    };\n    PdfBookmark.prototype._obtainNamedDestination = function () {\n        var document = this._crossReference._document;\n        var destinationCollection;\n        if (document) {\n            destinationCollection = document._destinationCollection;\n        }\n        var destination; // eslint-disable-line\n        var namedDestination;\n        if (destinationCollection) {\n            var dictionary = this._dictionary;\n            if (dictionary) {\n                if (dictionary.has('A')) {\n                    var action = dictionary.get('A');\n                    if (action && action.has('D')) {\n                        destination = action.get('D');\n                    }\n                }\n                else if (dictionary.has('Dest')) {\n                    destination = dictionary.get('Dest');\n                }\n            }\n            if (destination) {\n                var value = void 0;\n                if (destination instanceof _PdfName) {\n                    value = destination.name;\n                }\n                else if (typeof destination === 'string') {\n                    value = destination;\n                }\n                if (value) {\n                    var namedDestinations = destinationCollection._namedDestinations;\n                    for (var i = 0; i < namedDestinations.length; i++) {\n                        namedDestination = namedDestinations[Number.parseInt(i.toString(), 10)];\n                        if (namedDestination._title === value) {\n                            destination = namedDestination;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return namedDestination;\n    };\n    return PdfBookmark;\n}(PdfBookmarkBase));\nexport { PdfBookmark };\n/**\n * Represents a named destination in a PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Get the bookmarks\n * let bookmarks: PdfBookmarkBase = document.bookmarks;\n * // Gets the bookmark at the specified index\n * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n * // Gets the named destination\n * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfNamedDestination = /** @class */ (function () {\n    function PdfNamedDestination(element, crossReference) {\n        if (typeof element === 'string') {\n            this._initialize();\n            this.title = element;\n        }\n        else {\n            this._dictionary = element;\n            this._crossReference = crossReference;\n        }\n    }\n    Object.defineProperty(PdfNamedDestination.prototype, \"destination\", {\n        /**\n         * Gets the destination.\n         *\n         * @returns {PdfDestination} Page destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the destination\n         * let destination: PdfDestination = namedDestination.destination;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destination;\n        },\n        /**\n         * Sets the destination.\n         *\n         * @param {PdfDestination} value destination.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the destination\n         * namedDestination.destination = new PdfDestination(page, [100, 200]);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value) {\n                value._parent = this;\n                this._destination = value;\n                this._destination._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNamedDestination.prototype, \"title\", {\n        /**\n         * Gets the title.\n         *\n         * @returns {string} title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Gets the title\n         * let title: string = namedDestination.title;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._title;\n        },\n        /**\n         * Sets the title.\n         *\n         * @param {string} value title.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get the bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Gets the bookmark at the specified index\n         * let bookmark: PdfBookmark = bookmarks.at(0) as PdfBookmark;\n         * // Gets the named destination\n         * let namedDestination: PdfNamedDestination = bookmark.namedDestination;\n         * // Set the title\n         * namedDestination.title = 'Syncfusion';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._title && this._dictionary) {\n                this._title = value;\n                this._dictionary.update('Title', value);\n                this._dictionary._updated = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfNamedDestination.prototype._initialize = function () {\n        this._dictionary = new _PdfDictionary();\n        this._dictionary.update('S', _PdfName.get('GoTo'));\n    };\n    return PdfNamedDestination;\n}());\nexport { PdfNamedDestination };\nvar _PdfNamedDestinationCollection = /** @class */ (function () {\n    function _PdfNamedDestinationCollection(dictionary, crossReference) {\n        this._namedDestinations = [];\n        if (dictionary) {\n            this._dictionary = dictionary;\n        }\n        if (crossReference) {\n            this._crossReference = crossReference;\n        }\n        if (dictionary && dictionary.has('Dests')) {\n            var destination = dictionary.get('Dests');\n            if (destination) {\n                if (destination.has('Names')) {\n                    this._addCollection(destination);\n                }\n                else if (destination.has('Kids')) {\n                    var destinationArray = destination.getArray('Kids'); // eslint-disable-line\n                    for (var i = 0; i < destinationArray.length; i++) {\n                        this._findDestination(destinationArray[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n    }\n    _PdfNamedDestinationCollection.prototype._findDestination = function (destination) {\n        if (destination) {\n            if (destination.has('Names')) {\n                this._addCollection(destination);\n            }\n            else if (destination.has('Kids')) {\n                var kids = destination.getArray('Kids'); // eslint-disable-line\n                if (kids && Array.isArray(kids) && kids.length > 0) {\n                    for (var i = 0; i < kids.length; i++) {\n                        this._findDestination(kids[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n    };\n    _PdfNamedDestinationCollection.prototype._addCollection = function (destination) {\n        var elements = destination.getRaw('Names'); // eslint-disable-line\n        var ref; // eslint-disable-line\n        var dictionary;\n        if (elements && elements instanceof _PdfReference) {\n            ref = this._crossReference._fetch(elements);\n        }\n        if (ref && Array.isArray(ref) && ref.length > 0) {\n            elements = ref;\n        }\n        if (elements && Array.isArray(elements) && elements.length > 0) {\n            for (var i = 1; i < elements.length; i = i + 2) {\n                var reference = elements[i]; // eslint-disable-line\n                if (reference && reference instanceof _PdfReference) {\n                    var destinationArray = this._crossReference._fetch(reference); // eslint-disable-line\n                    if (destinationArray && Array.isArray(destinationArray) && destinationArray.length > 0) {\n                        dictionary = new _PdfDictionary();\n                        dictionary.update('D', destinationArray);\n                    }\n                    else {\n                        dictionary = this._crossReference._fetch(reference);\n                    }\n                }\n                else if ((dictionary === null || typeof dictionary === 'undefined') && Array.isArray(reference)) {\n                    dictionary = new _PdfDictionary();\n                    dictionary.update('D', reference);\n                }\n                if (dictionary) {\n                    var namedDestination = new PdfNamedDestination(dictionary, this._crossReference);\n                    var value = elements[i - 1];\n                    var destinationObject = void 0;\n                    var destinationArray = void 0; // eslint-disable-line\n                    if (value) {\n                        namedDestination._title = value;\n                        if (dictionary.has('D')) {\n                            destinationArray = dictionary.get('D');\n                            destinationObject = new PdfDestination();\n                            var reference_1 = destinationArray[0];\n                            if (reference_1 && destinationArray && destinationArray[0] instanceof _PdfReference) {\n                                var pageDictionary = this._crossReference._fetch(reference_1);\n                                var loadedDocument = this._crossReference._document;\n                                var index = void 0;\n                                if (loadedDocument && pageDictionary) {\n                                    index = _getPageIndex(loadedDocument, pageDictionary);\n                                    if (typeof index !== 'undefined' && index !== null && index >= 0) {\n                                        destinationObject._index = index;\n                                        destinationObject.page = loadedDocument.getPage(index);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (destinationArray[1] instanceof _PdfName) {\n                        var left = void 0;\n                        var height = void 0;\n                        var zoom = void 0;\n                        var mode = destinationArray[1].name;\n                        var page = destinationObject.page;\n                        switch (mode) {\n                            case 'Fit':\n                                destinationObject._destinationMode = PdfDestinationMode.fitToPage;\n                                break;\n                            case 'XYZ':\n                                destinationObject._destinationMode = PdfDestinationMode.location;\n                                if (destinationArray.length > 2) {\n                                    left = destinationArray[2];\n                                }\n                                if (destinationArray.length > 3) {\n                                    height = destinationArray[3];\n                                }\n                                if (destinationArray.length > 4) {\n                                    zoom = destinationArray[4];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    var leftValue = (left === null || typeof left === 'undefined') ? 0 : left;\n                                    destinationObject._location = [leftValue, topValue];\n                                    if (page.rotation !== PdfRotationAngle.angle0) {\n                                        topValue = _checkRotation(page, height, left);\n                                    }\n                                    destinationObject._zoom = (typeof zoom !== 'undefined' && zoom !== null) ? zoom : 0;\n                                    if (left === null || height === null || zoom === null || typeof left === 'undefined'\n                                        || typeof height === 'undefined' || typeof zoom === 'undefined') {\n                                        destinationObject._isValid = false;\n                                    }\n                                }\n                                break;\n                            case 'FitH':\n                            case 'FitBH':\n                                destinationObject._destinationMode = PdfDestinationMode.fitH;\n                                if (destinationArray.length >= 3) {\n                                    height = destinationArray[2];\n                                }\n                                if (page) {\n                                    var size = page.size;\n                                    var topValue = (height === null || typeof height === 'undefined') ? 0 : size[1] - height;\n                                    destinationObject._location = [0, topValue];\n                                }\n                                if (height === null || typeof height === 'undefined') {\n                                    destinationObject._isValid = false;\n                                }\n                                break;\n                            case 'FitR':\n                                destinationObject._destinationMode = PdfDestinationMode.fitR;\n                                break;\n                        }\n                    }\n                    destinationObject._parent = namedDestination;\n                    namedDestination._destination = destinationObject;\n                    this._namedDestinations.push(namedDestination);\n                }\n            }\n        }\n    };\n    return _PdfNamedDestinationCollection;\n}());\nexport { _PdfNamedDestinationCollection };\n","import { _PdfDictionary, _PdfReference, _PdfName } from './pdf-primitives';\nimport { _getInheritableProperty, _isNullOrUndefined } from './utils';\nimport { PdfAnnotationCollection } from './annotations/annotation-collection';\nimport { PdfGraphics } from './graphics/pdf-graphics';\nimport { _PdfBaseStream, _PdfContentStream } from './base-stream';\nimport { PdfRotationAngle, PdfDestinationMode, PdfFormFieldsTabOrder, PdfPageOrientation } from './enumerator';\nimport { PdfNamedDestination } from './pdf-outline';\nimport { PdfTemplate } from './graphics/pdf-template';\n/**\n * Represents a page loaded from the PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function () {\n    /**\n     * Represents a loaded page of the PDF document.\n     *\n     * @private\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     * @param {number} pageIndex page index.\n     * @param {_PdfDictionary} dictionary page Dictionary.\n     * @param {_PdfReference} reference page reference.\n     */\n    function PdfPage(crossReference, pageIndex, dictionary, reference) {\n        this._isAnnotationParsed = false;\n        this._isNew = false;\n        this._isDuplicate = false;\n        this._pageIndex = pageIndex;\n        this._pageDictionary = dictionary;\n        this._crossReference = crossReference;\n        this._ref = reference;\n    }\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets the collection of the page's annotations (Read only).\n         *\n         * @returns {PdfAnnotationCollection} Annotation collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the annotation collection\n         * let annotations: PdfAnnotationCollection = page.annotations;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._annotations === 'undefined') {\n                if (this._pageDictionary && this._pageDictionary.has('Annots')) {\n                    var annots = this._getProperty('Annots');\n                    if (_isNullOrUndefined(annots) && Array.isArray(annots)) {\n                        var widgets_1;\n                        if (this._crossReference._document._catalog._catalogDictionary.has('AcroForm')) {\n                            widgets_1 = this._crossReference._document.form._parseWidgetReferences();\n                        }\n                        if (widgets_1 && widgets_1.length > 0) {\n                            var validAnnotations_1 = [];\n                            annots.forEach(function (entry) {\n                                if (widgets_1.indexOf(entry) === -1) {\n                                    validAnnotations_1.push(entry);\n                                }\n                            });\n                            this._annotations = new PdfAnnotationCollection(validAnnotations_1, this._crossReference, this);\n                        }\n                        else {\n                            this._annotations = new PdfAnnotationCollection(annots, this._crossReference, this);\n                        }\n                    }\n                }\n                if (typeof this._annotations === 'undefined') {\n                    this._annotations = new PdfAnnotationCollection([], this._crossReference, this);\n                }\n            }\n            return this._annotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the page (Read only).\n         *\n         * @returns {number[]} Page width and height as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._size === 'undefined') {\n                var mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n                var cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n                var width = 0;\n                var height = 0;\n                var rotate = this._pageDictionary && this._pageDictionary.has('Rotate')\n                    ? _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent')\n                    : 0;\n                if (cBox && rotate !== null && typeof rotate !== 'undefined') {\n                    width = cBox[2] - cBox[0];\n                    height = cBox[3] - cBox[1];\n                    var isValidCropBox = !(mBox && (mBox[2] - mBox[0]) < width);\n                    if (!(((rotate === 0 || rotate === 180) && (width < height)) ||\n                        ((rotate === 90 || rotate === 270) && (width > height) || isValidCropBox)) && (rotate === 0 && mBox)) {\n                        width = mBox[2] - mBox[0];\n                        height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                    }\n                }\n                else if (mBox) {\n                    width = mBox[2] - mBox[0];\n                    height = mBox[3] !== 0 ? mBox[3] - mBox[1] : mBox[1];\n                }\n                else {\n                    this._pageDictionary.update('MediaBox', [0, 0, 612, 792]);\n                    width = 612;\n                    height = 792;\n                }\n                this._size = [Math.abs(width), Math.abs(height)];\n            }\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page (Read only).\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the rotation angle of the page\n         * let rotation: PdfRotationAngle = page.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var angle = 0;\n            if (typeof this._rotation === 'undefined') {\n                angle = _getInheritableProperty(this._pageDictionary, 'Rotate', false, true, 'Parent');\n                if (angle < 0) {\n                    angle += 360;\n                }\n                this._rotation = (typeof angle !== 'undefined') ? ((angle / 90) % 4) : PdfRotationAngle.angle0;\n            }\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page\n         *\n         * @param {PdfRotationAngle} value rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the rotation angle of the PDF page\n         * page.rotate = PdfRotationAngle.angle90;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (!this._isNew) {\n                this._rotation = value;\n                var rotate = Math.floor(this._rotation) * 90;\n                if (rotate >= 360) {\n                    rotate = rotate % 360;\n                }\n                this._pageDictionary.update('Rotate', rotate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"tabOrder\", {\n        /**\n         * Gets the tab order of a PDF form field.\n         *\n         * @returns {PdfFormFieldsTabOrder} tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the tab order of a PDF form field.\n         * let tabOrder: PdfFormFieldsTabOrder = page.tabOrder;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._obtainTabOrder();\n        },\n        /**\n         * Sets the tab order of a PDF form field.\n         *\n         * @param {PdfFormFieldsTabOrder} value tab order.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Sets the tab order of a PDF form field.\n         * page.tabOrder = PdfFormFieldsTabOrder.row;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._tabOrder = value;\n            var tabs = '';\n            if (this._tabOrder !== PdfFormFieldsTabOrder.none) {\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    tabs = 'R';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    tabs = 'C';\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.structure) {\n                    tabs = 'S';\n                }\n            }\n            this._pageDictionary.update('Tabs', _PdfName.get(tabs));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"cropBox\", {\n        /**\n         * Gets the bounds that define the area intended for display or printing in the PDF viewer application (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the cropBox of the PDF page as number array\n         * let cropBox: number[] = page.cropBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = _getInheritableProperty(this._pageDictionary, 'CropBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._cBox === 'undefined') {\n                this._cBox = [0, 0, 0, 0];\n            }\n            return this._cBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"mediaBox\", {\n        /**\n         * Gets the size that specify the width and height of the page (Read only).\n         *\n         * @returns {number[]} Page size as number array.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the mediaBox of the PDF page as number array\n         * let mediaBox: number[] = page.mediaBox;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = _getInheritableProperty(this._pageDictionary, 'MediaBox', false, true, 'Parent', 'P');\n            }\n            if (typeof this._mBox === 'undefined') {\n                this._mBox = [0, 0, 0, 0];\n            }\n            return this._mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page (Read only).\n         *\n         * @returns {PdfPageOrientation} Page orientation.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the orientation of the PDF page\n         * let orientation: number[] = page.orientation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._orientation === 'undefined') {\n                if (typeof this.size !== 'undefined') {\n                    var size = this.size;\n                    if (size[0] > size[1]) {\n                        this._orientation = PdfPageOrientation.landscape;\n                    }\n                    else {\n                        this._orientation = PdfPageOrientation.portrait;\n                    }\n                }\n            }\n            return this._orientation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"_origin\", {\n        get: function () {\n            if (typeof this._o === 'undefined' || (this._o[0] === 0 && this._o[1] === 0)) {\n                this._o = [this.mediaBox[0], this._mBox[1]];\n            }\n            return this._o;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Gets the graphics of the page (Read only).\n         *\n         * @returns {PdfGraphics} Page graphics.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the graphics of the PDF page\n         * let graphics: PdfGraphics = page.graphics;\n         * //Create a new pen.\n         * let pen: PdfPen = new PdfPen([0, 0, 0], 1);\n         * //Draw line on the page graphics.\n         * graphics.drawLine(pen, 10, 10, 100, 100);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._g === 'undefined' || this._needInitializeGraphics) {\n                this._parseGraphics();\n            }\n            return this._g;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._addWidget = function (reference) {\n        var annots;\n        if (this._pageDictionary.has('Annots')) {\n            var annotsRef = this._pageDictionary.getRaw('Annots'); // eslint-disable-line\n            annots = this._getProperty('Annots');\n            if (annotsRef && annotsRef instanceof _PdfReference) {\n                delete this._pageDictionary._map.Annots;\n                this._pageDictionary.update('Annots', annots);\n            }\n        }\n        if (annots && Array.isArray(annots)) {\n            annots.push(reference);\n        }\n        else {\n            this._pageDictionary.update('Annots', [reference]);\n        }\n        this._pageDictionary._updated = true;\n    };\n    PdfPage.prototype._getProperty = function (key, getArray) {\n        if (getArray === void 0) { getArray = false; }\n        var value = _getInheritableProperty(this._pageDictionary, key, getArray, false); // eslint-disable-line\n        if (!Array.isArray(value)) {\n            return value;\n        }\n        if (value.length === 1 || !(value[0] instanceof _PdfDictionary)) {\n            return value[0];\n        }\n        return _PdfDictionary.merge(this._crossReference, value);\n    };\n    PdfPage.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._contents.push(contentReference);\n        this._pageDictionary.set('Contents', this._contents);\n        this._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n    };\n    PdfPage.prototype._loadContents = function () {\n        var contents = this._pageDictionary.getRaw('Contents'); // eslint-disable-line\n        var ref;\n        if (contents !== null && typeof contents !== 'undefined' && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._contents = contents;\n        }\n        else {\n            this._contents = [];\n        }\n    };\n    PdfPage.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this.size;\n        var mbox = this.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._pageDictionary.has('CropBox')) {\n            cbox = this.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._g = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this);\n                }\n                else {\n                    this._g = new PdfGraphics(size, stream, this._crossReference, this);\n                    this._g._cropBox = cbox;\n                }\n            }\n            else {\n                this._g = new PdfGraphics(size, stream, this._crossReference, this);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._g = new PdfGraphics([width, height], stream, this._crossReference, this);\n        }\n        else {\n            this._g = new PdfGraphics(size, stream, this._crossReference, this);\n        }\n        if (this._pageDictionary.has('MediaBox')) {\n            this._g._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._g.save();\n        var origin = this._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._g._initializeCoordinates();\n        }\n        else {\n            this._g._initializeCoordinates(this);\n        }\n        //Need to code - set transparency group\n        if (!this._isNew) {\n            var rotation = this.rotation;\n            if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._pageDictionary.has('Rotate'))) {\n                var rotate = void 0;\n                if (this._pageDictionary.has('Rotate')) {\n                    rotate = this._pageDictionary.get('Rotate');\n                }\n                else {\n                    rotate = rotation * 90;\n                }\n                var clip = this._g._clipBounds;\n                if (rotate === 90) {\n                    this._g.translateTransform(0, size[1]);\n                    this._g.rotateTransform(-90);\n                    this._g._clipBounds = [clip[0], clip[1], size[0], size[1]];\n                }\n                else if (rotate === 180) {\n                    this._g.translateTransform(size[0], size[1]);\n                    this._g.rotateTransform(-180);\n                }\n                else if (rotate === 270) {\n                    this._g.translateTransform(size[0], 0);\n                    this._g.rotateTransform(-270);\n                    this._g._clipBounds = [clip[0], clip[1], size[1], size[0]];\n                }\n            }\n        }\n        if (this._isNew && this._pageSettings) {\n            var clipBounds = this._getActualBounds(this._pageSettings);\n            this._g._clipTranslateMargins(clipBounds);\n        }\n        this._needInitializeGraphics = false;\n    };\n    PdfPage.prototype._getActualBounds = function (pageSettings) {\n        var actualSize = pageSettings._getActualSize();\n        return [pageSettings.margins.left, pageSettings.margins.top, actualSize[0], actualSize[1]];\n    };\n    PdfPage.prototype._fetchResources = function () {\n        if (typeof this._resourceObject === 'undefined') {\n            if (this._pageDictionary && this._pageDictionary.has('Resources')) {\n                var obj = this._pageDictionary.getRaw('Resources'); // eslint-disable-line\n                if (obj !== null && typeof obj !== 'undefined' && obj instanceof _PdfReference) {\n                    this._hasResourceReference = true;\n                    this._resourceObject = this._crossReference._fetch(obj);\n                }\n                else if (obj && obj instanceof _PdfDictionary) {\n                    this._resourceObject = obj;\n                }\n            }\n            else {\n                this._resourceObject = new _PdfDictionary(this._crossReference);\n                this._pageDictionary.update('Resources', this._resourceObject);\n            }\n        }\n        return this._resourceObject;\n    };\n    PdfPage.prototype._getCropOrMediaBox = function () {\n        var box;\n        if (this._pageDictionary) {\n            if (this._pageDictionary.has('CropBox')) {\n                box = this._pageDictionary.getArray('CropBox');\n            }\n            else if (this._pageDictionary.has('MediaBox')) {\n                box = this._pageDictionary.getArray('MediaBox');\n            }\n        }\n        return box;\n    };\n    PdfPage.prototype._beginSave = function () {\n        if (typeof this._graphicsState !== 'undefined') {\n            this.graphics.restore(this._graphicsState);\n            this._graphicsState = null;\n            this._needInitializeGraphics = true;\n        }\n    };\n    PdfPage.prototype._destroy = function () {\n        this._pageDictionary = undefined;\n        this._size = undefined;\n        this._mBox = undefined;\n        this._cBox = undefined;\n        this._o = undefined;\n        this._g = undefined;\n        this._graphicsState = undefined;\n        this._contents = undefined;\n    };\n    PdfPage.prototype._obtainTabOrder = function () {\n        if (this._pageDictionary && this._pageDictionary.has('Tabs')) {\n            var tabOrder = this._pageDictionary.get('Tabs');\n            if (tabOrder === _PdfName.get('R')) {\n                this._tabOrder = PdfFormFieldsTabOrder.row;\n            }\n            else if (tabOrder === _PdfName.get('C')) {\n                this._tabOrder = PdfFormFieldsTabOrder.column;\n            }\n            else if (tabOrder === _PdfName.get('S')) {\n                this._tabOrder = PdfFormFieldsTabOrder.structure;\n            }\n            else if (tabOrder === _PdfName.get('W')) {\n                this._tabOrder = PdfFormFieldsTabOrder.widget;\n            }\n        }\n        if (this._tabOrder === null || typeof this._tabOrder === 'undefined') {\n            this._tabOrder = PdfFormFieldsTabOrder.none;\n        }\n        return this._tabOrder;\n    };\n    PdfPage.prototype._removeAnnotation = function (reference) {\n        if (this._pageDictionary && this._pageDictionary.has('Annots')) {\n            var annots = this._getProperty('Annots');\n            if (_isNullOrUndefined(annots) && Array.isArray(annots)) {\n                var index = annots.indexOf(reference);\n                if (index >= 0) {\n                    annots.splice(index, 1);\n                }\n                this._pageDictionary.set('Annots', annots);\n                this._pageDictionary._updated = true;\n            }\n        }\n    };\n    Object.defineProperty(PdfPage.prototype, \"_contentTemplate\", {\n        get: function () {\n            this._fetchResources();\n            var targetArray = this._combineContent();\n            var targetStream = new _PdfContentStream(Array.from(targetArray));\n            var template = new PdfTemplate(targetStream, this._crossReference);\n            template._content.dictionary.set('Resources', this._resourceObject);\n            if (this.cropBox[0] > 0 || this.cropBox[1] > 0) {\n                template._content.dictionary.set('BBox', this.cropBox);\n                template._size = [this.cropBox[0], this.cropBox[1]];\n            }\n            else if (this.mediaBox[0] > 0 || this.mediaBox[1] > 0) {\n                template._content.dictionary.set('BBox', this.mediaBox);\n                template._size = [this.mediaBox[0], this.mediaBox[1]];\n            }\n            else {\n                template._content.dictionary.set('BBox', [0, 0, this.size[0], this.size[1]]);\n                template._size = [this.size[0], this.size[1]];\n            }\n            return template;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPage.prototype._combineIntoSingleArray = function (arrays) {\n        var totalLength = arrays.reduce(function (length, arr) { return length + arr.length; }, 0);\n        var targetArray = new Uint8Array(totalLength);\n        var offset = 0;\n        arrays.forEach(function (sourceArray) {\n            targetArray.set(sourceArray, offset);\n            offset += sourceArray.length;\n        });\n        return targetArray;\n    };\n    PdfPage.prototype._combineContent = function () {\n        var list = [];\n        var array;\n        this._loadContents();\n        var count = this._contents.length;\n        list.push(new Uint8Array([32, 113, 32, 10]));\n        for (var i = 0; i < count; i++) {\n            var reference = this._contents[Number.parseInt(i.toString(), 10)];\n            var base = this._crossReference._fetch(reference); // eslint-disable-line\n            if (base) {\n                if (base instanceof _PdfContentStream) {\n                    array = new Uint8Array(base._bytes);\n                }\n                else if (base instanceof _PdfBaseStream) {\n                    array = base.getBytes();\n                }\n                if (array) {\n                    list.push(array);\n                    list.push(new Uint8Array([13, 10]));\n                }\n            }\n        }\n        list.push(new Uint8Array([32, 81, 32, 10]));\n        list.push(new Uint8Array([13, 10]));\n        var targetArray = this._combineIntoSingleArray(list);\n        return targetArray;\n    };\n    return PdfPage;\n}());\nexport { PdfPage };\n/**\n * `PdfDestination` class represents the PDF destination.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the annotation at index 0\n * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n * // Initializes a new instance of the `PdfDestination` class.\n * let destination: PdfDestination = new PdfDestination();\n * // Sets the zoom factor.\n * destination.zoom = 20;\n * // Sets the page where the destination is situated.\n * destination.page = page;\n * // Sets the mode of the destination.\n * destination.mode = PdfDestinationMode.fitToPage;\n * // Sets the location of the destination.\n * destination.location = [20, 20];\n * // Sets the bounds of the destination.\n * destination.destinationBounds = [20, 20, 100, 50];\n * // Sets destination to  document link annotation.\n * annotation.destination = destination;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(page, location) {\n        this._location = [0, 0];\n        this._destinationMode = PdfDestinationMode.location;\n        this._zoom = 0;\n        this._isValid = true;\n        this._index = 0;\n        this._destinationBounds = [0, 0, 0, 0];\n        this._array = Array(); // eslint-disable-line\n        if (typeof page !== 'undefined' && page !== null) {\n            if (page.rotation === PdfRotationAngle.angle180) {\n                this._location = [page.graphics._size[0], this._location[1]];\n            }\n            else if (page.rotation === PdfRotationAngle.angle90) {\n                this._location = [0, 0];\n            }\n            else if (page.rotation === PdfRotationAngle.angle270) {\n                this._location = [page.graphics._size[0], 0];\n            }\n            else {\n                this._location = [0, this._location[1]];\n            }\n            this._page = page;\n            this._index = page._pageIndex;\n        }\n        if (typeof location !== 'undefined' && location.length === 2) {\n            this._location = location;\n        }\n        if (typeof location !== 'undefined' && location.length === 4) {\n            this._location = [location[0], location[1]];\n            this._destinationBounds = location;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        /**\n         * Gets the zoom factor.\n         *\n         * @returns {number} zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = page.annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the zoom factor of the destination.\n         * let zoom: number = annot.destination.zoom;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * Sets the zoom factor.\n         *\n         * @param {number} value zoom.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._zoom) {\n                this._zoom = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets the page where the destination is situated.\n         *\n         * @returns {PdfPage} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page of the destination.\n         * let page: PdfPage = annot.destination.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        /**\n         * Sets the page where the destination is situated.\n         *\n         * @param {PdfPage} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._page) {\n                this._page = value;\n                this._initializePrimitive();\n                this._index = value._pageIndex;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"pageIndex\", {\n        /**\n         * Gets the page index of bookmark destination (Read only).\n         *\n         * @returns {number} index.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the page index of the destination.\n         * let pageIndex: number = annot.destination.pageIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets the mode of the destination.\n         *\n         * @returns {PdfDestinationMode} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * //Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the mode of the destination.\n         * let mode: PdfDestinationMode = annot.destination.mode;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationMode;\n        },\n        /**\n         * Sets the mode of the destination.\n         *\n         * @param {PdfDestinationMode} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationMode) {\n                this._destinationMode = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets the location of the destination.\n         *\n         * @returns {number[]} page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the location of the destination.\n         * let location: number[] = annot.destination.location;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._location;\n        },\n        /**\n         * Sets the location of the destination.\n         *\n         * @param {number[]} value page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._location) {\n                this._location = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"destinationBounds\", {\n        /**\n         * Gets the bounds of the destination.\n         *\n         * @returns {number[]} bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets the bounds of the destination.\n         * let destinationBounds: number[] = annot.destination.destinationBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._destinationBounds;\n        },\n        /**\n         * Sets the bounds of the destination.\n         *\n         * @param {number[]} value bounds.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annotation: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Initializes a new instance of the `PdfDestination` class.\n         * let destination: PdfDestination = new PdfDestination();\n         * // Sets the zoom factor.\n         * destination.zoom = 20;\n         * // Sets the page where the destination is situated.\n         * destination.page = page;\n         * // Sets the mode of the destination.\n         * destination.mode = PdfDestinationMode.fitToPage;\n         * // Sets the location of the destination.\n         * destination.location = [20, 20];\n         * // Sets the bounds of the destination.\n         * destination.destinationBounds = [20, 20, 100, 50];\n         * // Sets destination to  document link annotation.\n         * annotation.destination = destination;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value !== this._destinationBounds) {\n                this._destinationBounds = value;\n                this._initializePrimitive();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"isValid\", {\n        /**\n         * Gets a value indicating whether this instance is valid (Read only).\n         *\n         * @returns {boolean} value indicating whether this instance is valid.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the annotation at index 0\n         * let annot: PdfDocumentLinkAnnotation = document.getPage(0).annotations.at(0) as PdfDocumentLinkAnnotation;\n         * // Gets a value indicating whether this instance is valid.\n         * let isValid: boolean = annot.destination.isValid;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isValid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDestination.prototype._setValidation = function (value) {\n        this._isValid = value;\n    };\n    PdfDestination.prototype._initializePrimitive = function () {\n        this._array = [];\n        var page = this._page;\n        if (page && page._pageDictionary) {\n            var element = page._pageDictionary;\n            if (typeof element !== 'undefined' && element !== null) {\n                this._array.push(this._page._ref);\n            }\n            switch (this._destinationMode) {\n                case PdfDestinationMode.location:\n                    this._array.push(_PdfName.get('XYZ'));\n                    if (typeof page !== 'undefined' && page !== null) {\n                        this._array.push(this._location[0]);\n                        this._array.push(this._page.graphics._size[1] - this._location[1]);\n                    }\n                    else {\n                        this._array.push(0);\n                        this._array.push(0);\n                    }\n                    this._array.push(this._zoom);\n                    break;\n                case PdfDestinationMode.fitToPage:\n                    this._array.push(_PdfName.get('Fit'));\n                    break;\n                case PdfDestinationMode.fitR:\n                    this._array.push(_PdfName.get('FitR'));\n                    this._array.push(this._destinationBounds[0]);\n                    this._array.push(this._destinationBounds[1]);\n                    this._array.push(this._destinationBounds[2]);\n                    this._array.push(this._destinationBounds[3]);\n                    break;\n                case PdfDestinationMode.fitH:\n                    this._array.push(_PdfName.get('FitH'));\n                    this._array.push((typeof page !== 'undefined' && page !== null) ? page._size[1] - this._location[1] : 0);\n                    break;\n            }\n            if (this._parent) {\n                this._parent._dictionary.set(this._parent instanceof PdfNamedDestination ? 'D' : 'Dest', this._array);\n                this._parent._dictionary._updated = true;\n            }\n        }\n    };\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { _ImageFormat } from './../../enumerator';\nvar _ImageDecoder = /** @class */ (function () {\n    function _ImageDecoder() {\n        this._format = _ImageFormat.unknown;\n        this._height = 0;\n        this._width = 0;\n        this._bitsPerComponent = 8;\n        this._position = 0;\n        this._noOfComponents = -1;\n    }\n    _ImageDecoder.prototype._reset = function () {\n        this._position = 0;\n    };\n    _ImageDecoder.prototype._getBuffer = function (index) {\n        return this._stream[Number.parseInt(index.toString(), 10)];\n    };\n    _ImageDecoder.prototype._read = function (buffer, offset, count, stream) {\n        if (stream && Array.isArray(stream)) {\n            var result = 0;\n            if (count <= stream.length && stream.length - offset >= count) {\n                for (var i = 0; i < count; i++) {\n                    buffer[Number.parseInt(i.toString(), 10)] = stream[Number.parseInt(offset.toString(), 10)];\n                    offset++;\n                    result++;\n                }\n            }\n            return { 'outputBuffer': buffer, 'offset': offset, 'length': result };\n        }\n        else {\n            for (var index = offset; index < count; index++) {\n                var position = this._position;\n                buffer[Number.parseInt(index.toString(), 10)] = this._getBuffer(position);\n                this._position++;\n            }\n        }\n    };\n    _ImageDecoder.prototype._readString = function (length) {\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += String.fromCharCode(this._readByte());\n        }\n        return result;\n    };\n    _ImageDecoder.prototype._seek = function (length) {\n        this._position += length;\n    };\n    _ImageDecoder.prototype._readByte = function () {\n        if (this._position < this._stream.byteLength) {\n            var value = this._getBuffer(this._position);\n            this._position += 1;\n            return value;\n        }\n        else {\n            throw new Error('Error decoding JPEG image. Invalid offset.');\n        }\n    };\n    _ImageDecoder.prototype._toUnsigned16 = function (value) {\n        value = value & 0xFFFF;\n        return value < 0 ? (value + 0x10000) : value;\n    };\n    _ImageDecoder.prototype._readUnsigned32 = function (offset) {\n        var i1 = this._getBuffer(offset + 3);\n        var i2 = this._getBuffer(offset + 2);\n        var i3 = this._getBuffer(offset + 1);\n        var i4 = this._getBuffer(offset);\n        return i1 | (i2 << 8) | (i3 << 16) | (i4 << 24);\n    };\n    return _ImageDecoder;\n}());\nexport { _ImageDecoder };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nvar _JpegDecoder = /** @class */ (function (_super) {\n    __extends(_JpegDecoder, _super);\n    /**\n     * Initializes a new instance of the `_JpegDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _JpegDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._initialize();\n        return _this;\n    }\n    Object.defineProperty(_JpegDecoder.prototype, \"_imageDataAsNumberArray\", {\n        get: function () {\n            return this._imageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _JpegDecoder.prototype._initialize = function () {\n        this._format = _ImageFormat.jpeg;\n        this._readHeader();\n        this._reset();\n        this._imageData = new Uint8Array(this._stream.byteLength);\n        this._read(this._imageData, 0, this._imageData.byteLength);\n    };\n    _JpegDecoder.prototype._readHeader = function () {\n        this._reset();\n        var imgData = new Uint8Array(this._stream.byteLength);\n        this._read(imgData, 0, imgData.byteLength);\n        var i = 4;\n        var length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n        var isLengthExceed = false;\n        while (i < imgData.byteLength) {\n            i += length;\n            if (i < imgData.byteLength) {\n                if (this._getBuffer(i + 1) === 192) {\n                    this._height = this._getBuffer(i + 5) * 256 + this._getBuffer(i + 6);\n                    this._width = this._getBuffer(i + 7) * 256 + this._getBuffer(i + 8);\n                    this._noOfComponents = this._getBuffer(i + 9);\n                    if (this._width !== 0 && this._height !== 0) {\n                        return;\n                    }\n                }\n                else {\n                    i += 2;\n                    length = this._getBuffer(i) * 256 + this._getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this._reset();\n            this._seek(2);\n            this._readExceededJpegImage();\n        }\n    };\n    _JpegDecoder.prototype._getImageDictionary = function () {\n        var data = []; // eslint-disable-line\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var tempString = '';\n        var decodedString = '';\n        for (var i = 0; i < this._imageDataAsNumberArray.byteLength; i++) {\n            tempString += ' ' + String.fromCharCode(this._getBuffer(i));\n        }\n        for (var i = 0; i < tempString.length; i++) {\n            if (i % 2 !== 0) {\n                decodedString += tempString[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = false;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        dictionary.set('Filter', new _PdfName('DCTDecode'));\n        dictionary.set('ColorSpace', new _PdfName(this._getColorSpace()));\n        dictionary.set('DecodeParms', this._getDecodeParams());\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        return this._imageStream;\n    };\n    _JpegDecoder.prototype._getColorSpace = function () {\n        if (this._noOfComponents === 1) {\n            return 'DeviceGray';\n        }\n        else if (this._noOfComponents === 4) {\n            return 'DeviceCMYK';\n        }\n        return 'DeviceRGB';\n    };\n    _JpegDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('BlackIs1', true);\n        decodeParams.set('K', -1);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _JpegDecoder.prototype._skipStream = function () {\n        var length = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n        this._seek(2);\n        if (length < 2) {\n            throw new Error('Error decoding JPEG image');\n        }\n        else if (length > 0) {\n            this._seek(length - 2);\n        }\n    };\n    _JpegDecoder.prototype._readExceededJpegImage = function () {\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this._getMarker();\n            switch (marker) {\n                case 0x00C0:\n                case 0x00C1:\n                case 0x00C2:\n                case 0x00C3:\n                case 0x00C5:\n                case 0x00C6:\n                case 0x00C7:\n                case 0x00C9:\n                case 0x00CA:\n                case 0x00CB:\n                case 0x00CD:\n                case 0x00CE:\n                case 0x00CF:\n                    this._seek(3);\n                    this._height = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._width = this._getBuffer(this._position) << 8 | this._getBuffer(this._position + 1);\n                    this._seek(2);\n                    this._noOfComponents = this._getBuffer(this._position);\n                    this._seek(1);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this._skipStream();\n                    break;\n            }\n        }\n    };\n    _JpegDecoder.prototype._getMarker = function () {\n        var skippedByte = 0;\n        var marker = this._readByte();\n        while (marker !== 255) {\n            skippedByte++;\n            marker = this._readByte();\n        }\n        do {\n            marker = this._readByte();\n        } while (marker === 255);\n        if (skippedByte !== 0) {\n            throw new Error('Error decoding JPEG image');\n        }\n        return this._toUnsigned16(marker);\n    };\n    return _JpegDecoder;\n}(_ImageDecoder));\nexport { _JpegDecoder };\n","export var _InflaterState;\n(function (_InflaterState) {\n    _InflaterState[_InflaterState[\"readingHeader\"] = 0] = \"readingHeader\";\n    _InflaterState[_InflaterState[\"readingBFinal\"] = 1] = \"readingBFinal\";\n    _InflaterState[_InflaterState[\"readingBType\"] = 2] = \"readingBType\";\n    _InflaterState[_InflaterState[\"readingNlCodes\"] = 3] = \"readingNlCodes\";\n    _InflaterState[_InflaterState[\"readingNdCodes\"] = 4] = \"readingNdCodes\";\n    _InflaterState[_InflaterState[\"readingCodes\"] = 5] = \"readingCodes\";\n    _InflaterState[_InflaterState[\"readingClCodes\"] = 6] = \"readingClCodes\";\n    _InflaterState[_InflaterState[\"readingTcBefore\"] = 7] = \"readingTcBefore\";\n    _InflaterState[_InflaterState[\"readingTcAfter\"] = 8] = \"readingTcAfter\";\n    _InflaterState[_InflaterState[\"decodeTop\"] = 9] = \"decodeTop\";\n    _InflaterState[_InflaterState[\"iLength\"] = 10] = \"iLength\";\n    _InflaterState[_InflaterState[\"fLength\"] = 11] = \"fLength\";\n    _InflaterState[_InflaterState[\"dCode\"] = 12] = \"dCode\";\n    _InflaterState[_InflaterState[\"unCompressedAligning\"] = 13] = \"unCompressedAligning\";\n    _InflaterState[_InflaterState[\"unCompressedByte1\"] = 14] = \"unCompressedByte1\";\n    _InflaterState[_InflaterState[\"unCompressedByte2\"] = 15] = \"unCompressedByte2\";\n    _InflaterState[_InflaterState[\"unCompressedByte3\"] = 16] = \"unCompressedByte3\";\n    _InflaterState[_InflaterState[\"unCompressedByte4\"] = 17] = \"unCompressedByte4\";\n    _InflaterState[_InflaterState[\"decodeUnCompressedBytes\"] = 18] = \"decodeUnCompressedBytes\";\n    _InflaterState[_InflaterState[\"srFooter\"] = 19] = \"srFooter\";\n    _InflaterState[_InflaterState[\"rFooter\"] = 20] = \"rFooter\";\n    _InflaterState[_InflaterState[\"vFooter\"] = 21] = \"vFooter\";\n    _InflaterState[_InflaterState[\"done\"] = 22] = \"done\";\n})(_InflaterState || (_InflaterState = {}));\nexport var _BlockType;\n(function (_BlockType) {\n    _BlockType[_BlockType[\"unCompressedType\"] = 0] = \"unCompressedType\";\n    _BlockType[_BlockType[\"staticType\"] = 1] = \"staticType\";\n    _BlockType[_BlockType[\"dynamicType\"] = 2] = \"dynamicType\";\n})(_BlockType || (_BlockType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ImageDecoder } from './image-decoder';\nimport { _PdfStream } from './../../base-stream';\nimport { _PdfDictionary, _PdfName } from './../../pdf-primitives';\nimport { _ImageFormat } from './../../enumerator';\nimport { _bytesToString, _toUnsigned, _toSigned32 } from './../../utils';\nimport { _DeflateStream } from './../../compression/deflate-stream';\n/* eslint-disable */\nvar _PngDecoder = /** @class */ (function (_super) {\n    __extends(_PngDecoder, _super);\n    /**\n     * Initializes a new instance of the `_PngDecoder` class.\n     *\n     * @private\n     * @param {Uint8Array} stream byte array.\n     */\n    function _PngDecoder(stream) {\n        var _this = _super.call(this) || this;\n        _this._stream = stream;\n        _this._format = _ImageFormat.png;\n        _this._isRedGreenBlue = false;\n        _this._isDecode = false;\n        _this._shades = false;\n        _this._ideateDecode = true;\n        _this._colors = 0;\n        _this._bitsPerPixel = 0;\n        _this._idatLength = 0;\n        _this._inputBands = 0;\n        _this._position = 8;\n        _this._initialize();\n        return _this;\n    }\n    _PngDecoder.prototype._initialize = function () {\n        var header;\n        var result = this._hasValidChunkType(header);\n        while (result.hasValidChunk) {\n            header = result.type;\n            switch (header) {\n                case _PngChunkTypes.iHDR:\n                    this._readHeader();\n                    break;\n                case _PngChunkTypes.iDAT:\n                    this._readImageData();\n                    break;\n                case _PngChunkTypes.sRGB:\n                    this._isRedGreenBlue = true;\n                    this._ignoreChunk();\n                    break;\n                case _PngChunkTypes.pLTE:\n                    this._readPhotoPlate();\n                    break;\n                case _PngChunkTypes.iEND:\n                    this._decodeImageData();\n                    break;\n                case _PngChunkTypes.tRNS:\n                    this._readTransparency();\n                    break;\n                case _PngChunkTypes.tEXt:\n                case _PngChunkTypes.iTXt:\n                case _PngChunkTypes.zTXt:\n                case _PngChunkTypes.hIST:\n                case _PngChunkTypes.sBIT:\n                case _PngChunkTypes.iCCP:\n                case _PngChunkTypes.pHYs:\n                case _PngChunkTypes.tIME:\n                case _PngChunkTypes.bKGD:\n                case _PngChunkTypes.gAMA:\n                case _PngChunkTypes.cHRM:\n                case _PngChunkTypes.unknown:\n                    this._ignoreChunk();\n                    break;\n                default:\n                    break;\n            }\n            result = this._hasValidChunkType(header);\n        }\n    };\n    _PngDecoder.prototype._hasValidChunkType = function (type) {\n        type = _PngChunkTypes.unknown;\n        if (this._position + 8 <= this._stream.byteLength) {\n            this._currentChunkLength = this._readUnsigned32(this._position);\n            this._seek(4);\n            var chunk = this._readString(4);\n            var header = this._getChunkType(chunk);\n            if (typeof header !== 'undefined' && header !== null) {\n                type = header;\n                return { 'type': type, 'hasValidChunk': true };\n            }\n            if (this._stream.byteLength === this._position) {\n                return { 'type': type, 'hasValidChunk': false };\n            }\n            else {\n                return { 'type': type, 'hasValidChunk': true };\n            }\n        }\n        else {\n            return { 'type': type, 'hasValidChunk': false };\n        }\n    };\n    _PngDecoder.prototype._ignoreChunk = function () {\n        if (this._currentChunkLength > 0) {\n            this._seek(this._currentChunkLength + 4);\n        }\n    };\n    _PngDecoder.prototype._readHeader = function () {\n        this._header = new _PngHeader();\n        this._header._width = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._height = this._readUnsigned32(this._position);\n        this._seek(4);\n        this._header._bitDepth = this._readByte();\n        this._header._colorType = this._readByte();\n        this._header._compression = this._readByte();\n        this._header._filter = this._getFilterType(this._readByte());\n        this._header._interlace = this._readByte();\n        this._colors = (this._header._colorType === 3 || (this._header._colorType & 2) === 0) ? 1 : 3;\n        this._width = this._header._width;\n        this._height = this._header._height;\n        this._bitsPerComponent = this._header._bitDepth;\n        this._setBitsPerPixel();\n        this._seek(4);\n    };\n    _PngDecoder.prototype._setBitsPerPixel = function () {\n        this._bitsPerPixel = this._header._bitDepth === 16 ? 2 : 1;\n        if (this._header._colorType === 0) {\n            this._idatLength = Number.parseInt(((this._bitsPerComponent * this._width + 7) / 8).toString(), 10) * this._height;\n            this._inputBands = 1;\n        }\n        else if (this._header._colorType === 2) {\n            this._idatLength = this._width * this._height * 3;\n            this._inputBands = 3;\n            this._bitsPerPixel *= 3;\n        }\n        else if (this._header._colorType === 3) {\n            if (this._header._interlace === 1 || this._header._interlace === 0) {\n                this._idatLength = Number.parseInt(((this._header._bitDepth * this._width + 7) / 8).toString(), 10) * this._height;\n            }\n            this._inputBands = 1;\n            this._bitsPerPixel = 1;\n        }\n        else if (this._header._colorType === 4) {\n            this._idatLength = this._width * this._height;\n            this._inputBands = 2;\n            this._bitsPerPixel *= 2;\n        }\n        else if (this._header._colorType === 6) {\n            this._idatLength = this._width * 3 * this._height;\n            this._inputBands = 4;\n            this._bitsPerPixel *= 4;\n        }\n    };\n    _PngDecoder.prototype._readImageData = function () {\n        if (!this._encodedStream || this._encodedStream.length === 0) {\n            this._encodedStream = [];\n        }\n        if (this._currentChunkLength <= this._stream.byteLength && this._stream.byteLength - this._position >= this._currentChunkLength) {\n            for (var i = 0; i < this._currentChunkLength; i++) {\n                this._encodedStream.push(this._readByte());\n            }\n        }\n        this._seek(4);\n    };\n    _PngDecoder.prototype._readPhotoPlate = function () {\n        if (this._header._colorType === 3) {\n            this._colorSpace = [];\n            this._colorSpace.push(_PdfName.get('Indexed'));\n            this._colorSpace.push(this._getPngColorSpace());\n            this._colorSpace.push(this._currentChunkLength / 3 - 1);\n            var buffer = new Uint8Array(this._currentChunkLength);\n            this._read(buffer, 0, this._currentChunkLength);\n            this._colorSpace.push(_bytesToString(buffer));\n            this._seek(4);\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._readTransparency = function () {\n        if (this._header._colorType === 3) {\n            var alpha = new Uint8Array(this._currentChunkLength);\n            this._read(alpha, 0, this._currentChunkLength);\n            this._seek(4);\n            this._alpha = [];\n            for (var i = 0; i < alpha.length; i++) {\n                this._alpha.push(alpha[Number.parseInt(i.toString(), 10)]);\n                var sh = alpha[Number.parseInt(i.toString(), 10)] & 0xff;\n                if (sh !== 0 && sh !== 255) {\n                    this._shades = true;\n                }\n            }\n        }\n        else {\n            this._ignoreChunk();\n        }\n    };\n    _PngDecoder.prototype._getPngColorSpace = function () {\n        if (!this._isRedGreenBlue) {\n            if ((this._header._colorType & 2) === 0) {\n                return _PdfName.get('DeviceGray');\n            }\n            else {\n                return _PdfName.get('DeviceRGB');\n            }\n        }\n        else {\n            var colorspace = [];\n            var calRGB = new _PdfDictionary();\n            var whitePoint = [1, 1, 1];\n            var gammaArray = [2.2, 2.2, 2.2];\n            calRGB.set('Gamma', gammaArray);\n            if (this._isRedGreenBlue) {\n                var wpX = 0.3127;\n                var wpY = 0.329;\n                var redX = 0.64;\n                var redY = 0.33;\n                var greenX = 0.3;\n                var greenY = 0.6;\n                var bX = 0.15;\n                var bY = 0.06;\n                var t = wpY * ((greenX - bX) * redY - (redX - bX) * greenY + (redX - greenX) * bY);\n                var alphaY = redY * ((greenX - bX) * wpY - (wpX - bX) * greenY + (wpX - greenX) * bY) / t;\n                var alphaX = alphaY * redX / redY;\n                var alphaZ = alphaY * ((1 - redX) / redY - 1);\n                var blueY = -greenY * ((redX - bX) * wpY - (wpX - bX) * redY + (wpX - redX) * bY) / t;\n                var blueX = blueY * greenX / greenY;\n                var blueZ = blueY * ((1 - greenX) / greenY - 1);\n                var colorY = bY * ((redX - greenX) * wpY - (wpX - greenX) * wpY + (wpX - redX) * greenY) / t;\n                var colorX = colorY * bX / bY;\n                var colorZ = colorY * ((1 - bX) / bY - 1);\n                var whiteX = alphaX + blueX + colorX;\n                var whiteY = 1;\n                var whiteZ = alphaZ + blueZ + colorZ;\n                whitePoint = [whiteX, whiteY, whiteZ];\n                calRGB.set('Matrix', [alphaX, alphaY, alphaZ, blueX, blueY, blueZ, colorX, colorY, colorZ]);\n            }\n            calRGB.set('WhitePoint', whitePoint);\n            colorspace.push(_PdfName.get('CalRGB'));\n            colorspace.push(calRGB);\n            return colorspace;\n        }\n    };\n    _PngDecoder.prototype._decodeImageData = function () {\n        var header = this._header;\n        this._isDecode = (header._interlace === 1) || (header._bitDepth === 16) || ((header._colorType & 4) !== 0) || this._shades;\n        if (this._isDecode) {\n            if ((header._colorType & 4) !== 0 || this._shades) {\n                this._maskData = Array(this._width * this._height).fill(0);\n            }\n            if (this._encodedStream) {\n                this._dataStream = this._getDeflatedData(this._encodedStream);\n                this._dataStreamOffset = 0;\n            }\n            if (this._idatLength > 0) {\n                this._decodedImageData = Array(this._idatLength).fill(0);\n            }\n            this._readDecodeData();\n            if (this._decodedImageData && this._decodedImageData.length === 0 && this._shades) {\n                this._ideateDecode = false;\n                this._decodedImageData = this._encodedStream;\n            }\n        }\n        else {\n            this._ideateDecode = false;\n            this._decodedImageData = this._encodedStream;\n        }\n    };\n    _PngDecoder.prototype._getDeflatedData = function (data) {\n        var idatData = data.slice(2, data.length - 4);\n        var deflateStream = new _DeflateStream(idatData, 0, true);\n        var buffer = Array(4096).fill(0);\n        var numRead = 0;\n        var outputData = [];\n        do {\n            var result = deflateStream._read(buffer, 0, buffer.length);\n            numRead = result.count;\n            buffer = result.data;\n            for (var i = 0; i < numRead; i++) {\n                outputData.push(buffer[Number.parseInt(i.toString(), 10)]);\n            }\n        } while (numRead > 0);\n        return outputData;\n    };\n    _PngDecoder.prototype._readDecodeData = function () {\n        if (this._header._interlace !== 1) {\n            this._decodeData(0, 0, 1, 1, this._width, this._height);\n        }\n        else {\n            this._decodeData(0, 0, 8, 8, Math.floor((this._width + 7) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(4, 0, 8, 8, Math.floor((this._width + 3) / 8), Math.floor((this._height + 7) / 8));\n            this._decodeData(0, 4, 4, 8, Math.floor((this._width + 3) / 4), Math.floor((this._height + 3) / 8));\n            this._decodeData(2, 0, 4, 4, Math.floor((this._width + 1) / 4), Math.floor((this._height + 3) / 4));\n            this._decodeData(0, 2, 2, 4, Math.floor((this._width + 1) / 2), Math.floor((this._height + 1) / 4));\n            this._decodeData(1, 0, 2, 2, Math.floor(this._width / 2), Math.floor((this._height + 1) / 2));\n            this._decodeData(0, 1, 1, 2, this._width, Math.floor(this._height / 2));\n        }\n    };\n    _PngDecoder.prototype._decodeData = function (xOffset, yOffset, xStep, yStep, width, height) {\n        if ((width === 0) || (height === 0)) {\n            return;\n        }\n        else {\n            var bytesPerRow = Math.floor((this._inputBands * width * this._header._bitDepth + 7) / 8);\n            var current = Array(bytesPerRow).fill(0);\n            var prior = Array(bytesPerRow).fill(0);\n            for (var sourceY = 0, destinationY = yOffset; sourceY < height; sourceY++, destinationY += yStep) {\n                var filter = this._dataStream[this._dataStreamOffset];\n                this._dataStreamOffset = this._dataStreamOffset + 1;\n                this._dataStreamOffset = this._readStream(this._dataStream, this._dataStreamOffset, current, bytesPerRow);\n                switch (this._getFilterType(filter)) {\n                    case _PngFilterTypes.none:\n                        break;\n                    case _PngFilterTypes.sub:\n                        this._decompressSub(current, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.up:\n                        this._decompressUp(current, prior, bytesPerRow);\n                        break;\n                    case _PngFilterTypes.average:\n                        this._decompressAverage(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    case _PngFilterTypes.paeth:\n                        this._decompressPaeth(current, prior, bytesPerRow, this._bitsPerPixel);\n                        break;\n                    default:\n                        throw new Error('Unknown PNG filter');\n                }\n                this._processPixels(current, xOffset, xStep, destinationY, width);\n                var tmp = prior;\n                prior = current;\n                current = tmp;\n            }\n        }\n    };\n    _PngDecoder.prototype._readStream = function (stream, streamOffset, data, count) {\n        var result = this._read(data, streamOffset, count, stream);\n        data = result.outputBuffer;\n        streamOffset = result.offset;\n        var n = result.length;\n        if (n <= 0) {\n            throw new Error('Insufficient data');\n        }\n        return streamOffset;\n    };\n    _PngDecoder.prototype._decompressSub = function (data, count, bitsPerPixel) {\n        for (var i = bitsPerPixel; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (data[i - bitsPerPixel] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressUp = function (data, pData, count) {\n        for (var i = 0; i < count; i++) {\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((data[Number.parseInt(i.toString(), 10)] & 0xff)\n                + (pData[Number.parseInt(i.toString(), 10)] & 0xff), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressAverage = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((val) + pr / 2), 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(Math.floor((val + Math.floor((pp + pr) / 2))), 8);\n        }\n    };\n    _PngDecoder.prototype._decompressPaeth = function (data, pData, count, bitsPerPixel) {\n        var val;\n        var pp;\n        var pr;\n        var prp;\n        for (var i = 0; i < bitsPerPixel; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned(val + pr, 8);\n        }\n        for (var i = bitsPerPixel; i < count; i++) {\n            val = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            pp = data[i - bitsPerPixel] & 0xff;\n            pr = pData[Number.parseInt(i.toString(), 10)] & 0xff;\n            prp = pData[i - bitsPerPixel] & 0xff;\n            data[Number.parseInt(i.toString(), 10)] = _toUnsigned((val + this._paethPredictor(pp, pr, prp)), 8);\n        }\n    };\n    _PngDecoder.prototype._paethPredictor = function (a, b, c) {\n        var p = a + b - c;\n        var pa = Math.abs(p - a);\n        var pb = Math.abs(p - b);\n        var pc = Math.abs(p - c);\n        if ((pa <= pb) && (pa <= pc)) {\n            return a;\n        }\n        else if (pb <= pc) {\n            return b;\n        }\n        else {\n            return c;\n        }\n    };\n    _PngDecoder.prototype._processPixels = function (data, x, step, y, width) {\n        var sourceX = 0;\n        var destX = 0;\n        var size = 0;\n        var pixel = this._getPixel(data);\n        if (this._header._colorType === 0 || this._header._colorType === 3 || this._header._colorType === 4) {\n            size = 1;\n        }\n        else if (this._header._colorType === 2 || this._header._colorType === 6) {\n            size = 3;\n        }\n        if (this._decodedImageData && this._decodedImageData.length > 0) {\n            destX = x;\n            var depth = (this._header._bitDepth === 16) ? 8 : this._header._bitDepth;\n            var yStep = Math.floor((size * width * depth + 7) / 8);\n            for (sourceX = 0; sourceX < width; sourceX++) {\n                this._decodedImageData = this._setPixel(this._decodedImageData, pixel, this._inputBands * sourceX, size, destX, y, this._header._bitDepth, yStep);\n                destX += step;\n            }\n        }\n        var shades = (this._header._colorType & 4) !== 0 || this._shades;\n        if (shades) {\n            if ((this._header._colorType & 4) !== 0) {\n                if (this._header._bitDepth === 16) {\n                    for (var i = 0; i < width; ++i) {\n                        var temp = i * this._inputBands + size;\n                        var unsigned = _toUnsigned(pixel[Number.parseInt(temp.toString(), 10)], 32);\n                        pixel[Number.parseInt(temp.toString(), 10)] = _toSigned32(unsigned >> 8);\n                    }\n                }\n                var yStep = width;\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    this._maskData = this._setPixel(this._maskData, pixel, this._inputBands * sourceX + size, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n            else {\n                var yStep = width;\n                var dt = [0];\n                destX = x;\n                for (sourceX = 0; sourceX < width; sourceX++) {\n                    var index = pixel[Number.parseInt(sourceX.toString(), 10)];\n                    if (index < this._alpha.length) {\n                        dt[0] = this._alpha[Number.parseInt(index.toString(), 10)];\n                    }\n                    else {\n                        dt[0] = 255;\n                    }\n                    this._maskData = this._setPixel(this._maskData, dt, 0, 1, destX, y, 8, yStep);\n                    destX += step;\n                }\n            }\n        }\n    };\n    _PngDecoder.prototype._getPixel = function (data) {\n        if (this._header._bitDepth === 8) {\n            var pixel = Array(data.length).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] & 0xff;\n            }\n            return pixel;\n        }\n        else if (this._header._bitDepth === 16) {\n            var pixel = Array(Math.floor(data.length / 2)).fill(0);\n            for (var i = 0; i < pixel.length; ++i) {\n                pixel[Number.parseInt(i.toString(), 10)] = ((data[i * 2] & 0xff) << 8) + (data[i * 2 + 1] & 0xff);\n            }\n            return pixel;\n        }\n        else {\n            var pixel = Array(Math.floor((data.length * 8) / this._header._bitDepth)).fill(0);\n            var index = 0;\n            var p = Math.floor(8 / this._header._bitDepth);\n            var mask = (1 << this._header._bitDepth) - 1;\n            for (var n = 0; n < data.length; ++n) {\n                for (var i = p - 1; i >= 0; --i) {\n                    var hb = this._header._bitDepth * i;\n                    var d = data[Number.parseInt(n.toString(), 10)];\n                    pixel[index++] = ((hb < 1) ? d : _toSigned32(_toUnsigned(d, 32) >> hb)) & mask;\n                }\n            }\n            return pixel;\n        }\n    };\n    _PngDecoder.prototype._setPixel = function (imageData, data, offset, size, x, y, bitDepth, bpr) {\n        if (bitDepth === 8) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned(data[i + offset], 8);\n            }\n        }\n        else if (bitDepth === 16) {\n            var position = bpr * y + size * x;\n            for (var i = 0; i < size; ++i) {\n                imageData[position + i] = _toUnsigned((data[i + offset] >> 8), 8);\n            }\n        }\n        else {\n            var position = Math.floor((bpr * y + x) / (8 / bitDepth));\n            var t = data[Number.parseInt(offset.toString(), 10)]\n                << Number.parseInt((8 - bitDepth * (x % (8 / bitDepth)) - bitDepth).toString(), 10);\n            imageData[Number.parseInt(position.toString(), 10)] = imageData[Number.parseInt(position.toString(), 10)] | _toUnsigned(t, 8);\n        }\n        return imageData;\n    };\n    _PngDecoder.prototype._getImageDictionary = function () {\n        var data = [];\n        this._imageStream = new _PdfStream(data, new _PdfDictionary());\n        this._imageStream.isImageStream = true;\n        var decodedString = '';\n        for (var i = 0; i < this._decodedImageData.length; i++) {\n            decodedString += String.fromCharCode(this._decodedImageData[Number.parseInt(i.toString(), 10)]);\n        }\n        this._imageStream.data = [decodedString];\n        this._imageStream._isCompress = this._isDecode && this._ideateDecode;\n        var dictionary = new _PdfDictionary();\n        dictionary.set('Type', new _PdfName('XObject'));\n        dictionary.set('Subtype', new _PdfName('Image'));\n        dictionary.set('Width', this._width);\n        dictionary.set('Height', this._height);\n        if (this._bitsPerComponent === 16) {\n            dictionary.set('BitsPerComponent', 8);\n        }\n        else {\n            dictionary.set('BitsPerComponent', this._bitsPerComponent);\n        }\n        if (!this._isDecode || !this._ideateDecode) {\n            dictionary.set('Filter', new _PdfName('FlateDecode'));\n        }\n        if ((this._header._colorType & 2) === 0) {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n        }\n        else {\n            dictionary.set('ColorSpace', _PdfName.get('DeviceRGB'));\n        }\n        if (!this._isDecode || this._shades && !this._ideateDecode) {\n            dictionary.set('DecodeParms', this._getDecodeParams());\n        }\n        this._imageStream.dictionary = dictionary;\n        this._imageStream.bytes = new Uint8Array(this._imageStream.data[0].length);\n        for (var i = 0; i < this._imageStream.data[0].length; i++) {\n            this._imageStream.bytes[Number.parseInt(i.toString(), 10)] = this._imageStream.data[0].charCodeAt(i);\n        }\n        this._imageStream.end = this._imageStream.bytes.length;\n        this._imageStream.dictionary._updated = true;\n        this._setMask();\n        return this._imageStream;\n    };\n    _PngDecoder.prototype._setMask = function () {\n        if (this._maskData && this._maskData.length > 0) {\n            this._maskStream = new _PdfStream(this._maskData, new _PdfDictionary());\n            this._maskStream._isCompress = this._isDecode && this._ideateDecode;\n            var dictionary = new _PdfDictionary();\n            dictionary.set('Type', new _PdfName('XObject'));\n            dictionary.set('Subtype', new _PdfName('Image'));\n            dictionary.set('Width', this._width);\n            dictionary.set('Height', this._height);\n            if (this._bitsPerComponent === 16) {\n                dictionary.set('BitsPerComponent', 8);\n            }\n            else {\n                dictionary.set('BitsPerComponent', this._bitsPerComponent);\n            }\n            dictionary.set('ColorSpace', _PdfName.get('DeviceGray'));\n            this._maskStream.dictionary = dictionary;\n            this._maskStream.bytes = new Uint8Array(this._maskData);\n            this._maskStream.end = this._maskStream.bytes.length;\n            this._maskStream.dictionary._updated = true;\n        }\n    };\n    _PngDecoder.prototype._getDecodeParams = function () {\n        var decodeParams = new _PdfDictionary();\n        decodeParams.set('Columns', this._width);\n        decodeParams.set('Colors', this._colors);\n        decodeParams.set('Predictor', 15);\n        decodeParams.set('BitsPerComponent', this._bitsPerComponent);\n        return decodeParams;\n    };\n    _PngDecoder.prototype._getChunkType = function (chunk) {\n        switch (chunk) {\n            case 'IHDR':\n                return _PngChunkTypes.iHDR;\n            case 'PLTE':\n                return _PngChunkTypes.pLTE;\n            case 'IDAT':\n                return _PngChunkTypes.iDAT;\n            case 'IEND':\n                return _PngChunkTypes.iEND;\n            case 'bKGD':\n                return _PngChunkTypes.bKGD;\n            case 'cHRM':\n                return _PngChunkTypes.cHRM;\n            case 'gAMA':\n                return _PngChunkTypes.gAMA;\n            case 'hIST':\n                return _PngChunkTypes.hIST;\n            case 'pHYs':\n                return _PngChunkTypes.pHYs;\n            case 'sBIT':\n                return _PngChunkTypes.sBIT;\n            case 'tEXt':\n                return _PngChunkTypes.tEXt;\n            case 'tIME':\n                return _PngChunkTypes.tIME;\n            case 'tRNS':\n                return _PngChunkTypes.tRNS;\n            case 'zTXt':\n                return _PngChunkTypes.zTXt;\n            case 'sRGB':\n                return _PngChunkTypes.sRGB;\n            case 'iCCP':\n                return _PngChunkTypes.iCCP;\n            case 'iTXt':\n                return _PngChunkTypes.iTXt;\n            case 'Unknown':\n                return _PngChunkTypes.unknown;\n            default:\n                return null;\n        }\n    };\n    _PngDecoder.prototype._getFilterType = function (type) {\n        switch (type) {\n            case 1:\n                return _PngFilterTypes.sub;\n            case 2:\n                return _PngFilterTypes.up;\n            case 3:\n                return _PngFilterTypes.average;\n            case 4:\n                return _PngFilterTypes.paeth;\n            default:\n                return _PngFilterTypes.none;\n        }\n    };\n    return _PngDecoder;\n}(_ImageDecoder));\nexport { _PngDecoder };\nvar _PngHeader = /** @class */ (function () {\n    function _PngHeader() {\n        this._width = 0;\n        this._height = 0;\n        this._colorType = 0;\n        this._compression = 0;\n        this._bitDepth = 0;\n        this._interlace = 0;\n        this._filter = _PngFilterTypes.none;\n    }\n    return _PngHeader;\n}());\nvar _PngChunkTypes;\n(function (_PngChunkTypes) {\n    _PngChunkTypes[_PngChunkTypes[\"iHDR\"] = 0] = \"iHDR\";\n    _PngChunkTypes[_PngChunkTypes[\"pLTE\"] = 1] = \"pLTE\";\n    _PngChunkTypes[_PngChunkTypes[\"iDAT\"] = 2] = \"iDAT\";\n    _PngChunkTypes[_PngChunkTypes[\"iEND\"] = 3] = \"iEND\";\n    _PngChunkTypes[_PngChunkTypes[\"bKGD\"] = 4] = \"bKGD\";\n    _PngChunkTypes[_PngChunkTypes[\"cHRM\"] = 5] = \"cHRM\";\n    _PngChunkTypes[_PngChunkTypes[\"gAMA\"] = 6] = \"gAMA\";\n    _PngChunkTypes[_PngChunkTypes[\"hIST\"] = 7] = \"hIST\";\n    _PngChunkTypes[_PngChunkTypes[\"pHYs\"] = 8] = \"pHYs\";\n    _PngChunkTypes[_PngChunkTypes[\"sBIT\"] = 9] = \"sBIT\";\n    _PngChunkTypes[_PngChunkTypes[\"tEXt\"] = 10] = \"tEXt\";\n    _PngChunkTypes[_PngChunkTypes[\"tIME\"] = 11] = \"tIME\";\n    _PngChunkTypes[_PngChunkTypes[\"tRNS\"] = 12] = \"tRNS\";\n    _PngChunkTypes[_PngChunkTypes[\"zTXt\"] = 13] = \"zTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"sRGB\"] = 14] = \"sRGB\";\n    _PngChunkTypes[_PngChunkTypes[\"iCCP\"] = 15] = \"iCCP\";\n    _PngChunkTypes[_PngChunkTypes[\"iTXt\"] = 16] = \"iTXt\";\n    _PngChunkTypes[_PngChunkTypes[\"unknown\"] = 17] = \"unknown\";\n})(_PngChunkTypes || (_PngChunkTypes = {}));\nvar _PngFilterTypes;\n(function (_PngFilterTypes) {\n    _PngFilterTypes[_PngFilterTypes[\"none\"] = 0] = \"none\";\n    _PngFilterTypes[_PngFilterTypes[\"sub\"] = 1] = \"sub\";\n    _PngFilterTypes[_PngFilterTypes[\"up\"] = 2] = \"up\";\n    _PngFilterTypes[_PngFilterTypes[\"average\"] = 3] = \"average\";\n    _PngFilterTypes[_PngFilterTypes[\"paeth\"] = 4] = \"paeth\";\n})(_PngFilterTypes || (_PngFilterTypes = {}));\n","import { _copyRange } from './../utils';\nvar _DecompressedOutput = /** @class */ (function () {\n    function _DecompressedOutput() {\n        this._end = 0;\n        this._usedBytes = 0;\n        this._dOutput = Array(_DecompressedOutput._dOutSize).fill(0);\n        this._end = 0;\n        this._usedBytes = 0;\n    }\n    Object.defineProperty(_DecompressedOutput.prototype, \"_unusedBytes\", {\n        get: function () {\n            return _DecompressedOutput._dOutSize - this._usedBytes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _DecompressedOutput.prototype._write = function (b) {\n        this._dOutput[this._end++] = b;\n        this._end &= _DecompressedOutput._dOutMask;\n        ++this._usedBytes;\n    };\n    _DecompressedOutput.prototype._writeLD = function (length, distance) {\n        this._usedBytes += length;\n        var copyStart = (this._end - distance) & _DecompressedOutput._dOutMask;\n        var border = _DecompressedOutput._dOutSize - length;\n        if (copyStart <= border && this._end < border) {\n            if (length <= distance) {\n                _copyRange(this._dOutput, this._end, this._dOutput, copyStart, copyStart + length);\n                this._end += length;\n            }\n            else {\n                while (length-- > 0) {\n                    this._dOutput[this._end++] = this._dOutput[copyStart++];\n                }\n            }\n        }\n        else {\n            while (length-- > 0) {\n                this._dOutput[this._end++] = this._dOutput[copyStart++];\n                this._end &= _DecompressedOutput._dOutMask;\n                copyStart &= _DecompressedOutput._dOutMask;\n            }\n        }\n    };\n    _DecompressedOutput.prototype._copyFrom = function (input, length) {\n        length = Math.min(Math.min(length, _DecompressedOutput._dOutSize - this._usedBytes), input._bytes);\n        var copied;\n        var tailLen = _DecompressedOutput._dOutSize - this._end;\n        if (length > tailLen) {\n            copied = input._copyTo(this._dOutput, this._end, tailLen);\n            if (copied === tailLen) {\n                copied += input._copyTo(this._dOutput, 0, length - tailLen);\n            }\n        }\n        else {\n            copied = input._copyTo(this._dOutput, this._end, length);\n        }\n        this._end = (this._end + copied) & _DecompressedOutput._dOutMask;\n        this._usedBytes += copied;\n        return copied;\n    };\n    _DecompressedOutput.prototype._copyTo = function (output, offset, length) {\n        var end;\n        if (length > this._usedBytes) {\n            end = this._end;\n            length = this._usedBytes;\n        }\n        else {\n            end = (this._end - this._usedBytes + length) & _DecompressedOutput._dOutMask;\n        }\n        var copied = length;\n        var tailLen = length - end;\n        var sourceStart = _DecompressedOutput._dOutSize - tailLen;\n        if (tailLen > 0) {\n            for (var i = 0; i < tailLen && i + sourceStart < this._dOutput.length && i + offset < output.length; i++) {\n                output[offset + i] = this._dOutput[sourceStart + i];\n            }\n            var sourceStartIndex_1 = _DecompressedOutput._dOutSize - tailLen;\n            _copyRange(output, offset, this._dOutput, sourceStartIndex_1, sourceStartIndex_1 + tailLen);\n            offset += tailLen;\n            length = end;\n        }\n        sourceStart = end - length;\n        var sourceStartIndex = end - length;\n        _copyRange(output, offset, this._dOutput, sourceStartIndex, end);\n        this._usedBytes -= copied;\n        return { 'count': copied, 'data': output };\n    };\n    _DecompressedOutput._dOutSize = 32768;\n    _DecompressedOutput._dOutMask = 32767;\n    return _DecompressedOutput;\n}());\nexport { _DecompressedOutput };\n","import { _toUnsigned } from './../utils';\nvar _InBuffer = /** @class */ (function () {\n    function _InBuffer() {\n        this._bBuffer = 0;\n        this._bInBuffer = 0;\n        this._begin = 0;\n        this._end = 0;\n    }\n    Object.defineProperty(_InBuffer.prototype, \"_bytes\", {\n        get: function () {\n            return (this._end - this._begin) + Math.floor(this._bInBuffer / 8);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _InBuffer.prototype._needsInput = function () {\n        return this._begin === this._end;\n    };\n    _InBuffer.prototype._availableBits = function (count) {\n        if (this._bInBuffer < count) {\n            if (this._needsInput()) {\n                return false;\n            }\n            this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n            this._bInBuffer += 8;\n            if (this._bInBuffer < count) {\n                if (this._needsInput()) {\n                    return false;\n                }\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return true;\n    };\n    _InBuffer.prototype._load16Bits = function () {\n        if (this._bInBuffer < 8) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        else if (this._bInBuffer < 16) {\n            if (this._begin < this._end) {\n                this._bBuffer |= _toUnsigned(this._buffer[this._begin++], 32) << this._bInBuffer;\n                this._bInBuffer += 8;\n            }\n        }\n        return this._bBuffer;\n    };\n    _InBuffer.prototype._getBitMask = function (count) {\n        return (_toUnsigned(1, 32) << count) - 1;\n    };\n    _InBuffer.prototype._getBits = function (count) {\n        if (!this._availableBits(count)) {\n            return -1;\n        }\n        var result = this._bBuffer & this._getBitMask(count);\n        this._bBuffer >>= count;\n        this._bInBuffer -= count;\n        return result;\n    };\n    _InBuffer.prototype._copyTo = function (output, offset, length) {\n        var bitBuffer = 0;\n        while (this._bInBuffer > 0 && length > 0) {\n            output[offset++] = _toUnsigned(this._bBuffer, 8);\n            this._bBuffer >>= 8;\n            this._bInBuffer -= 8;\n            length--;\n            bitBuffer++;\n        }\n        if (length === 0) {\n            return bitBuffer;\n        }\n        var avail = this._end - this._begin;\n        if (length > avail) {\n            length = avail;\n        }\n        for (var i = 0; i < length && i + this._begin < this._buffer.length && i + offset < output.length; i++) {\n            output[offset + i] = this._buffer[this._begin + i];\n        }\n        this._begin += length;\n        return bitBuffer + length;\n    };\n    _InBuffer.prototype._setInput = function (buffer, offset, length) {\n        this._buffer = buffer;\n        this._begin = offset;\n        this._end = offset + length;\n    };\n    _InBuffer.prototype._skipBits = function (n) {\n        this._bBuffer >>= n;\n        this._bInBuffer -= n;\n    };\n    _InBuffer.prototype._skipByteBoundary = function () {\n        this._bBuffer >>= this._bInBuffer % 8;\n        this._bInBuffer = this._bInBuffer - (this._bInBuffer % 8);\n    };\n    return _InBuffer;\n}());\nexport { _InBuffer };\n","import { _toUnsigned, _toSigned16 } from './../utils';\nvar _HuffmanTree = /** @class */ (function () {\n    function _HuffmanTree() {\n    }\n    _HuffmanTree.prototype._load = function (code) {\n        this._clArray = code;\n        this._initialize();\n    };\n    _HuffmanTree.prototype._loadTree = function (isLengthTree) {\n        this._clArray = isLengthTree ? this._getLengthTree() : this._getDepthTree();\n        this._initialize();\n    };\n    _HuffmanTree.prototype._initialize = function () {\n        if (this._clArray.length === _HuffmanTree._maxLengthTree) {\n            this._tBits = 9;\n        }\n        else {\n            this._tBits = 7;\n        }\n        this._tMask = (1 << this._tBits) - 1;\n        this._createTable();\n    };\n    _HuffmanTree.prototype._getLengthTree = function () {\n        var lTree = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i <= 143; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        for (var i = 144; i <= 255; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(9, 8);\n        }\n        for (var i = 256; i <= 279; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(7, 8);\n        }\n        for (var i = 280; i <= 287; i++) {\n            lTree[Number.parseInt(i.toString(), 10)] = _toUnsigned(8, 8);\n        }\n        return lTree;\n    };\n    _HuffmanTree.prototype._getDepthTree = function () {\n        return Array(_HuffmanTree._maxDepthTree).fill(5);\n    };\n    _HuffmanTree.prototype._calculateHashCode = function () {\n        var bit = Array(17).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            bit[this._clArray[Number.parseInt(i.toString(), 10)]]++;\n        }\n        bit[0] = 0;\n        var next = Array(17).fill(0);\n        var temp = 0;\n        for (var bits = 1; bits <= 16; bits++) {\n            temp = (temp + bit[bits - 1]) << 1;\n            next[Number.parseInt(bits.toString(), 10)] = temp;\n        }\n        var code = Array(_HuffmanTree._maxLengthTree).fill(0);\n        for (var i = 0; i < this._clArray.length; i++) {\n            var len = this._clArray[Number.parseInt(i.toString(), 10)];\n            if (len > 0) {\n                code[Number.parseInt(i.toString(), 10)] = this._bitReverse(next[Number.parseInt(len.toString(), 10)], len);\n                next[Number.parseInt(len.toString(), 10)]++;\n            }\n        }\n        return code;\n    };\n    _HuffmanTree.prototype._bitReverse = function (code, length) {\n        var newcode = 0;\n        do {\n            newcode |= code & 1;\n            newcode <<= 1;\n            code >>= 1;\n        } while (--length > 0);\n        return newcode >> 1;\n    };\n    _HuffmanTree.prototype._createTable = function () {\n        var codeArray = this._calculateHashCode();\n        this._table = Array(1 << this._tBits).fill(0);\n        this._left = Array(2 * this._clArray.length).fill(0);\n        this._right = Array(2 * this._clArray.length).fill(0);\n        var avail = _toSigned16(this._clArray.length);\n        for (var ch = 0; ch < this._clArray.length; ch++) {\n            var len = this._clArray[Number.parseInt(ch.toString(), 10)];\n            if (len > 0) {\n                var start = codeArray[Number.parseInt(ch.toString(), 10)];\n                if (len <= this._tBits) {\n                    var i = 1 << len;\n                    if (start >= i) {\n                        throw new Error('Invalid Data.');\n                    }\n                    var l = 1 << (this._tBits - len);\n                    for (var j = 0; j < l; j++) {\n                        this._table[Number.parseInt(start.toString(), 10)] = _toSigned16(ch);\n                        start += i;\n                    }\n                }\n                else {\n                    var ofBits = len - this._tBits;\n                    var bitMask = 1 << this._tBits;\n                    var index = start & ((1 << this._tBits) - 1);\n                    var array = this._table;\n                    do {\n                        var value = _toSigned16(array[Number.parseInt(index.toString(), 10)]);\n                        if (value === 0) {\n                            array[Number.parseInt(index.toString(), 10)] = _toSigned16(-avail);\n                            value = _toSigned16(-avail);\n                            avail++;\n                        }\n                        if (value > 0) {\n                            throw new Error('Invalid Data.');\n                        }\n                        if ((start & bitMask) === 0) {\n                            array = this._left;\n                        }\n                        else {\n                            array = this._right;\n                        }\n                        index = -value;\n                        bitMask <<= 1;\n                        ofBits--;\n                    } while (ofBits !== 0);\n                    array[Number.parseInt(index.toString(), 10)] = _toSigned16(ch);\n                }\n            }\n        }\n    };\n    _HuffmanTree.prototype._getNextSymbol = function (input) {\n        var bitBuffer = input._load16Bits();\n        if (input._bInBuffer === 0) {\n            return -1;\n        }\n        var symbol = this._table[bitBuffer & this._tMask];\n        if (symbol < 0) {\n            var mask = _toUnsigned((1 << this._tBits), 32);\n            do {\n                symbol = -symbol;\n                if ((bitBuffer & mask) === 0) {\n                    symbol = this._left[Number.parseInt(symbol.toString(), 10)];\n                }\n                else {\n                    symbol = this._right[Number.parseInt(symbol.toString(), 10)];\n                }\n                mask <<= 1;\n            } while (symbol < 0);\n        }\n        var codeLength = this._clArray[Number.parseInt(symbol.toString(), 10)];\n        if (codeLength <= 0) {\n            throw new Error('Invalid Data.');\n        }\n        if (codeLength > input._bInBuffer) {\n            return -1;\n        }\n        input._skipBits(codeLength);\n        return symbol;\n    };\n    _HuffmanTree._maxLengthTree = 288;\n    _HuffmanTree._maxDepthTree = 32;\n    _HuffmanTree._nCLength = 19;\n    return _HuffmanTree;\n}());\nexport { _HuffmanTree };\n","import { _InflaterState, _BlockType } from './enum';\nimport { _DecompressedOutput } from './decompressed-output';\nimport { _InBuffer } from './in-buffer';\nimport { _HuffmanTree } from './huffman-tree';\nimport { _toUnsigned, _copyRange } from './../utils';\n/* eslint-disable */\nvar _Inflater = /** @class */ (function () {\n    function _Inflater() {\n        this._extraLengthBits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n        this._staticDistanceTreeTable = [0x00, 0x10, 0x08, 0x18, 0x04, 0x14, 0x0c, 0x1c, 0x02, 0x12, 0x0a, 0x1a, 0x06, 0x16, 0x0e, 0x1e,\n            0x01, 0x11, 0x09, 0x19, 0x05, 0x15, 0x0d, 0x1d, 0x03, 0x13, 0x0b, 0x1b, 0x07, 0x17, 0x0f, 0x1f];\n        this._lengthBase = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115,\n            131, 163, 195, 227, 258];\n        this._distanceBasePosition = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049,\n            3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];\n        this._codeOrder = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        this._bfinal = 0;\n        this._bLength = 0;\n        this._blBuffer = [0, 0, 0, 0];\n        this._blockType = _BlockType.unCompressedType;\n        this._caSize = 0;\n        this._clCodeCount = 0;\n        this._extraBits = 0;\n        this._lengthCode = 0;\n        this._length = 0;\n        this._llCodeCount = 0;\n        this._output = new _DecompressedOutput();\n        this._input = new _InBuffer();\n        this._loopCounter = 0;\n        this._codeList = Array(_HuffmanTree._maxLengthTree + _HuffmanTree._maxDepthTree).fill(0);\n        this._cltcl = Array(_HuffmanTree._nCLength).fill(0);\n        this._inflaterState = _InflaterState.readingBFinal;\n    }\n    Object.defineProperty(_Inflater.prototype, \"_finished\", {\n        get: function () {\n            return this._inflaterState === _InflaterState.done || this._inflaterState === _InflaterState.vFooter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _Inflater.prototype._setInput = function (inputBytes, offset, length) {\n        this._input._setInput(inputBytes, offset, length);\n    };\n    _Inflater.prototype._inflate = function (bytes, offset, length) {\n        var i = 0;\n        do {\n            var result = this._output._copyTo(bytes, offset, length);\n            var copied = result.count;\n            bytes = result.data;\n            if (copied > 0) {\n                offset += copied;\n                i += copied;\n                length -= copied;\n            }\n            if (length === 0) {\n                break;\n            }\n        } while (!this._finished && this._decode());\n        return { 'count': i, 'data': bytes };\n    };\n    _Inflater.prototype._decode = function () {\n        var eob = false;\n        var result = false;\n        if (this._finished) {\n            return true;\n        }\n        if (this._inflaterState === _InflaterState.readingBFinal) {\n            if (!this._input._availableBits(1)) {\n                return false;\n            }\n            this._bfinal = this._input._getBits(1);\n            this._inflaterState = _InflaterState.readingBType;\n        }\n        if (this._inflaterState === _InflaterState.readingBType) {\n            if (!this._input._availableBits(2)) {\n                this._inflaterState = _InflaterState.readingBType;\n                return false;\n            }\n            this._blockType = this._getBlockType(this._input._getBits(2));\n            if (this._blockType === _BlockType.dynamicType) {\n                this._inflaterState = _InflaterState.readingNlCodes;\n            }\n            else if (this._blockType === _BlockType.staticType) {\n                this._llTree = new _HuffmanTree();\n                this._llTree._loadTree(true);\n                this._distanceTree = new _HuffmanTree();\n                this._distanceTree._loadTree(false);\n                this._inflaterState = _InflaterState.decodeTop;\n            }\n            else if (this._blockType === _BlockType.unCompressedType) {\n                this._inflaterState = _InflaterState.unCompressedAligning;\n            }\n        }\n        if (this._blockType === _BlockType.dynamicType) {\n            if (this._getInflaterStateValue(this._inflaterState) < this._getInflaterStateValue(_InflaterState.decodeTop)) {\n                result = this._decodeDynamicBlockHeader();\n            }\n            else {\n                var returnedValue = this._decodeBlock(eob);\n                result = returnedValue.result;\n                eob = returnedValue.eob;\n                this._output = returnedValue.output;\n            }\n        }\n        else if (this._blockType === _BlockType.staticType) {\n            var returnedValue = this._decodeBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        else if (this._blockType === _BlockType.unCompressedType) {\n            var returnedValue = this._decodeUncompressedBlock(eob);\n            result = returnedValue.result;\n            eob = returnedValue.eob;\n            this._output = returnedValue.output;\n        }\n        if (eob && (this._bfinal !== 0)) {\n            this._inflaterState = _InflaterState.done;\n        }\n        return result;\n    };\n    _Inflater.prototype._decodeUncompressedBlock = function (endBlock) {\n        endBlock = false;\n        while (true) {\n            switch (this._inflaterState) {\n                case _InflaterState.unCompressedAligning:\n                    this._input._skipByteBoundary();\n                    this._inflaterState = _InflaterState.unCompressedByte1;\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.unCompressedByte1:\n                case _InflaterState.unCompressedByte2:\n                case _InflaterState.unCompressedByte3:\n                case _InflaterState.unCompressedByte4:\n                    if (!this._unCompressedByte()) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.decodeUnCompressedBytes:\n                    this._bLength -= this._output._copyFrom(this._input, this._bLength);\n                    if (this._bLength === 0) {\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        endBlock = true;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (this._output._unusedBytes === 0) {\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    return { 'result': false, 'eob': endBlock, 'output': this._output };\n                default:\n                    break;\n            }\n        }\n    };\n    _Inflater.prototype._unCompressedByte = function () {\n        var bits = this._input._getBits(8);\n        if (bits < 0) {\n            return false;\n        }\n        var inflaterstate = this._getInflaterStateValue(this._inflaterState);\n        var unCompressedByte = this._getInflaterStateValue(_InflaterState.unCompressedByte1);\n        this._blBuffer[inflaterstate - unCompressedByte] = _toUnsigned(bits, 8);\n        if (this._inflaterState === _InflaterState.unCompressedByte4) {\n            this._bLength = this._blBuffer[0] + (this._blBuffer[1]) * 256;\n            if (_toUnsigned(this._bLength, 16) !== _toUnsigned((~(this._blBuffer[2] + (this._blBuffer[3]) * 256)), 16)) {\n                throw new Error('Ivalid block length.');\n            }\n        }\n        this._inflaterState = this._getInflaterState(this._getInflaterStateValue(this._inflaterState) + 1);\n        return true;\n    };\n    _Inflater.prototype._decodeBlock = function (endBlock) {\n        endBlock = false;\n        var fb = this._output._unusedBytes;\n        while (fb > 258) {\n            var symbol = void 0;\n            var dCodeResult = void 0;\n            var fLengthResult = void 0;\n            var inLengthResult = void 0;\n            switch (this._inflaterState) {\n                case _InflaterState.decodeTop:\n                    symbol = this._llTree._getNextSymbol(this._input);\n                    if (symbol < 0) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    if (symbol < 256) {\n                        this._output._write(_toUnsigned(symbol, 8));\n                        --fb;\n                    }\n                    else if (symbol === 256) {\n                        endBlock = true;\n                        this._inflaterState = _InflaterState.readingBFinal;\n                        return { 'result': true, 'eob': endBlock, 'output': this._output };\n                    }\n                    else {\n                        symbol -= 257;\n                        if (symbol < 8) {\n                            symbol += 3;\n                            this._extraBits = 0;\n                        }\n                        else if (symbol === 28) {\n                            symbol = 258;\n                            this._extraBits = 0;\n                        }\n                        else {\n                            if (symbol < 0 || symbol >= this._extraLengthBits.length) {\n                                throw new Error('Invalid data.');\n                            }\n                            this._extraBits = this._extraLengthBits[Number.parseInt(symbol.toString(), 10)];\n                        }\n                        this._length = symbol;\n                        inLengthResult = this._inLength(fb);\n                        fb = inLengthResult.fb;\n                        if (!inLengthResult.value) {\n                            return { 'result': false, 'eob': endBlock, 'output': this._output };\n                        }\n                    }\n                    break;\n                case _InflaterState.iLength:\n                    inLengthResult = this._inLength(fb);\n                    fb = inLengthResult.fb;\n                    if (!inLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.fLength:\n                    fLengthResult = this._fLength(fb);\n                    fb = fLengthResult.fb;\n                    if (!fLengthResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                case _InflaterState.dCode:\n                    dCodeResult = this._dcode(fb);\n                    fb = dCodeResult.fb;\n                    if (!dCodeResult.value) {\n                        return { 'result': false, 'eob': endBlock, 'output': this._output };\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return { 'result': true, 'eob': endBlock, 'output': this._output };\n    };\n    _Inflater.prototype._inLength = function (fb) {\n        if (this._extraBits > 0) {\n            this._inflaterState = _InflaterState.iLength;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            if (this._length < 0 || this._length >= this._lengthBase.length) {\n                throw new Error('Invalid data.');\n            }\n            this._length = this._lengthBase[this._length] + bits;\n        }\n        this._inflaterState = _InflaterState.fLength;\n        var fLengthResult = this._fLength(fb);\n        fb = fLengthResult.fb;\n        if (!fLengthResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._fLength = function (fb) {\n        if (this._blockType === _BlockType.dynamicType) {\n            this._distanceCode = this._distanceTree._getNextSymbol(this._input);\n        }\n        else {\n            this._distanceCode = this._input._getBits(5);\n            if (this._distanceCode >= 0) {\n                this._distanceCode = this._staticDistanceTreeTable[this._distanceCode];\n            }\n        }\n        if (this._distanceCode < 0) {\n            return { 'value': false, 'fb': fb };\n        }\n        this._inflaterState = _InflaterState.dCode;\n        var dCodeResult = this._dcode(fb);\n        fb = dCodeResult.fb;\n        if (!dCodeResult.value) {\n            return { 'value': false, 'fb': fb };\n        }\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._dcode = function (fb) {\n        var offset;\n        if (this._distanceCode > 3) {\n            this._extraBits = (this._distanceCode - 2) >> 1;\n            var bits = this._input._getBits(this._extraBits);\n            if (bits < 0) {\n                return { 'value': false, 'fb': fb };\n            }\n            offset = this._distanceBasePosition[this._distanceCode] + bits;\n        }\n        else {\n            offset = this._distanceCode + 1;\n        }\n        this._output._writeLD(this._length, offset);\n        fb -= this._length;\n        this._inflaterState = _InflaterState.decodeTop;\n        return { 'value': true, 'fb': fb };\n    };\n    _Inflater.prototype._decodeDynamicBlockHeader = function () {\n        switch (this._inflaterState) {\n            case _InflaterState.readingNlCodes:\n                this._llCodeCount = this._input._getBits(5);\n                if (this._llCodeCount < 0) {\n                    return false;\n                }\n                this._llCodeCount += 257;\n                this._inflaterState = _InflaterState.readingNdCodes;\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingNdCodes:\n                if (!this._readingNDCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingCodes:\n                if (!this._readingCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingClCodes:\n                if (!this._readingCLCodes()) {\n                    return false;\n                }\n                break;\n            case _InflaterState.readingTcBefore:\n            case _InflaterState.readingTcAfter:\n                if (!this._readingTCBefore()) {\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        var literalTreeCodeLength = Array(_HuffmanTree._maxLengthTree).fill(0);\n        _copyRange(literalTreeCodeLength, 0, this._codeList, 0, this._llCodeCount);\n        var distanceTreeCodeLength = Array(_HuffmanTree._maxDepthTree).fill(0);\n        _copyRange(distanceTreeCodeLength, 0, this._codeList, this._llCodeCount, this._llCodeCount + this._dCodeCount);\n        this._llTree = new _HuffmanTree();\n        this._llTree._load(literalTreeCodeLength);\n        this._distanceTree = new _HuffmanTree();\n        this._distanceTree._load(distanceTreeCodeLength);\n        this._inflaterState = _InflaterState.decodeTop;\n        return true;\n    };\n    _Inflater.prototype._readingNDCodes = function () {\n        this._dCodeCount = this._input._getBits(5);\n        if (this._dCodeCount < 0) {\n            return false;\n        }\n        this._dCodeCount += 1;\n        this._inflaterState = _InflaterState.readingCodes;\n        if (!this._readingCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCodes = function () {\n        this._clCodeCount = this._input._getBits(4);\n        if (this._clCodeCount < 0) {\n            return false;\n        }\n        this._clCodeCount += 4;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingClCodes;\n        if (!this._readingCLCodes()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingCLCodes = function () {\n        while (this._loopCounter < this._clCodeCount) {\n            var bits = this._input._getBits(3);\n            if (bits < 0) {\n                return false;\n            }\n            this._cltcl[this._codeOrder[this._loopCounter]] = _toUnsigned(bits, 8);\n            ++this._loopCounter;\n        }\n        for (var i = this._clCodeCount; i < this._codeOrder.length; i++) {\n            this._cltcl[this._codeOrder[Number.parseInt(i.toString(), 10)]] = 0;\n        }\n        this._clTree = new _HuffmanTree();\n        this._clTree._load(this._cltcl);\n        this._caSize = this._llCodeCount + this._dCodeCount;\n        this._loopCounter = 0;\n        this._inflaterState = _InflaterState.readingTcBefore;\n        if (!this._readingTCBefore()) {\n            return false;\n        }\n        return true;\n    };\n    _Inflater.prototype._readingTCBefore = function () {\n        while (this._loopCounter < this._caSize) {\n            if (this._inflaterState === _InflaterState.readingTcBefore) {\n                this._lengthCode = this._clTree._getNextSymbol(this._input);\n                if (this._lengthCode < 0) {\n                    return false;\n                }\n            }\n            if (this._lengthCode <= 15) {\n                this._codeList[this._loopCounter++] = _toUnsigned(this._lengthCode, 8);\n            }\n            else {\n                if (!this._input._availableBits(7)) {\n                    this._inflaterState = _InflaterState.readingTcAfter;\n                    return false;\n                }\n                var repeatCount = void 0;\n                if (this._lengthCode === 16) {\n                    if (this._loopCounter === 0) {\n                        throw new Error('Invalid data.');\n                    }\n                    var previousCode = _toUnsigned(this._codeList[this._loopCounter - 1], 8);\n                    repeatCount = this._input._getBits(2) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = previousCode;\n                    }\n                }\n                else if (this._lengthCode === 17) {\n                    repeatCount = this._input._getBits(3) + 3;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n                else {\n                    repeatCount = this._input._getBits(7) + 11;\n                    if (this._loopCounter + repeatCount > this._caSize) {\n                        throw new Error('Invalid data.');\n                    }\n                    for (var j = 0; j < repeatCount; j++) {\n                        this._codeList[this._loopCounter++] = 0;\n                    }\n                }\n            }\n            this._inflaterState = _InflaterState.readingTcBefore;\n        }\n        return true;\n    };\n    _Inflater.prototype._getBlockType = function (type) {\n        if (type === _BlockType.unCompressedType) {\n            return _BlockType.unCompressedType;\n        }\n        else if (type === _BlockType.staticType) {\n            return _BlockType.staticType;\n        }\n        else {\n            return _BlockType.dynamicType;\n        }\n    };\n    _Inflater.prototype._getInflaterState = function (value) {\n        switch (value) {\n            case 0:\n                return _InflaterState.readingHeader;\n            case 2:\n                return _InflaterState.readingBFinal;\n            case 3:\n                return _InflaterState.readingBType;\n            case 4:\n                return _InflaterState.readingNlCodes;\n            case 5:\n                return _InflaterState.readingNdCodes;\n            case 6:\n                return _InflaterState.readingCodes;\n            case 7:\n                return _InflaterState.readingClCodes;\n            case 8:\n                return _InflaterState.readingTcBefore;\n            case 9:\n                return _InflaterState.readingTcAfter;\n            case 10:\n                return _InflaterState.decodeTop;\n            case 11:\n                return _InflaterState.iLength;\n            case 12:\n                return _InflaterState.fLength;\n            case 13:\n                return _InflaterState.dCode;\n            case 15:\n                return _InflaterState.unCompressedAligning;\n            case 16:\n                return _InflaterState.unCompressedByte1;\n            case 17:\n                return _InflaterState.unCompressedByte2;\n            case 18:\n                return _InflaterState.unCompressedByte3;\n            case 19:\n                return _InflaterState.unCompressedByte4;\n            case 20:\n                return _InflaterState.decodeUnCompressedBytes;\n            case 21:\n                return _InflaterState.srFooter;\n            case 22:\n                return _InflaterState.rFooter;\n            case 23:\n                return _InflaterState.vFooter;\n            case 24:\n                return _InflaterState.done;\n            default:\n                return _InflaterState.readingHeader;\n        }\n    };\n    _Inflater.prototype._getInflaterStateValue = function (state) {\n        switch (state) {\n            case _InflaterState.readingHeader:\n                return 0;\n            case _InflaterState.readingBFinal:\n                return 2;\n            case _InflaterState.readingBType:\n                return 3;\n            case _InflaterState.readingNlCodes:\n                return 4;\n            case _InflaterState.readingNdCodes:\n                return 5;\n            case _InflaterState.readingCodes:\n                return 6;\n            case _InflaterState.readingClCodes:\n                return 7;\n            case _InflaterState.readingTcBefore:\n                return 8;\n            case _InflaterState.readingTcAfter:\n                return 9;\n            case _InflaterState.decodeTop:\n                return 10;\n            case _InflaterState.iLength:\n                return 11;\n            case _InflaterState.fLength:\n                return 12;\n            case _InflaterState.dCode:\n                return 13;\n            case _InflaterState.unCompressedAligning:\n                return 15;\n            case _InflaterState.unCompressedByte1:\n                return 16;\n            case _InflaterState.unCompressedByte2:\n                return 17;\n            case _InflaterState.unCompressedByte3:\n                return 18;\n            case _InflaterState.unCompressedByte4:\n                return 19;\n            case _InflaterState.decodeUnCompressedBytes:\n                return 20;\n            case _InflaterState.srFooter:\n                return 21;\n            case _InflaterState.rFooter:\n                return 22;\n            case _InflaterState.vFooter:\n                return 23;\n            case _InflaterState.done:\n                return 24;\n            default:\n                return 0;\n        }\n    };\n    return _Inflater;\n}());\nexport { _Inflater };\n","import { _isNullOrUndefined } from '../utils';\nimport { _Inflater } from './inflater';\nvar _DeflateStream = /** @class */ (function () {\n    function _DeflateStream(data, offset, leaveOpen) {\n        if (_isNullOrUndefined(data)) {\n            this._data = data;\n        }\n        else {\n            this._data = [];\n        }\n        if (_isNullOrUndefined(leaveOpen)) {\n            this._leaveOpen = leaveOpen;\n        }\n        this._offset = offset;\n        this._inflater = new _Inflater();\n        this._buffer = Array(8192).fill(0);\n    }\n    _DeflateStream.prototype._read = function (array, offset, count) {\n        var length;\n        var cOffset = offset;\n        var rCount = count;\n        while (true) { // eslint-disable-line\n            var inflateResult = this._inflater._inflate(array, cOffset, rCount);\n            length = inflateResult.count;\n            array = inflateResult.data;\n            cOffset += length;\n            rCount -= length;\n            if (rCount === 0) {\n                break;\n            }\n            if (this._inflater._finished) {\n                break;\n            }\n            var result = this._readBytes();\n            var bytes = result.count;\n            this._buffer = result.buffer;\n            if (bytes === 0) {\n                break;\n            }\n            this._inflater._setInput(this._buffer, 0, bytes);\n        }\n        return { count: count - rCount, data: array };\n    };\n    _DeflateStream.prototype._readBytes = function () {\n        if (_isNullOrUndefined(this._offset) && this._offset >= this._data.length) {\n            return { buffer: [], count: 0 };\n        }\n        else {\n            var count = 0;\n            for (var i = 0; i < this._buffer.length && i + this._offset < this._data.length; i++) {\n                this._buffer[Number.parseInt(i.toString(), 10)] = this._data[this._offset + i];\n                count++;\n            }\n            this._offset += count;\n            return { buffer: this._buffer, count: count };\n        }\n    };\n    return _DeflateStream;\n}());\nexport { _DeflateStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary } from './pdf-primitives';\nimport { _byteArrayToHexString, _bytesToString, _isNullOrUndefined } from './utils';\nvar _PdfBaseStream = /** @class */ (function () {\n    function _PdfBaseStream() {\n        this._isCompress = true;\n        this._isImage = false;\n    }\n    _PdfBaseStream.prototype.getByte = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getBytes = function (length) {\n        return null;\n    };\n    Object.defineProperty(_PdfBaseStream.prototype, \"length\", {\n        get: function () {\n            throw new Error('Abstract getter `length` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isEmpty\", {\n        get: function () {\n            throw new Error('Abstract getter `isEmpty` accessed');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfBaseStream.prototype, \"isDataLoaded\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfBaseStream.prototype.peekByte = function () {\n        var peekedByte = this.getByte();\n        if (peekedByte !== -1) {\n            this.offset--;\n        }\n        return peekedByte;\n    };\n    _PdfBaseStream.prototype.peekBytes = function (length) {\n        var bytes = this.getBytes(length);\n        this.offset -= bytes.length;\n        return bytes;\n    };\n    _PdfBaseStream.prototype.getUnsignedInteger16 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        if (b0 === -1 || b1 === -1) {\n            return -1;\n        }\n        return (b0 << 8) + b1;\n    };\n    _PdfBaseStream.prototype.getInt32 = function () {\n        var b0 = this.getByte();\n        var b1 = this.getByte();\n        var b2 = this.getByte();\n        var b3 = this.getByte();\n        return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    };\n    _PdfBaseStream.prototype.getByteRange = function (begin, end) {\n        return null;\n    };\n    _PdfBaseStream.prototype.makeSubStream = function (start, length, dictionary) {\n        return null;\n    };\n    _PdfBaseStream.prototype.readBlock = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.reset = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.moveStart = function () {\n        return null;\n    };\n    _PdfBaseStream.prototype.getString = function (isHex, bytes) {\n        if (isHex === void 0) { isHex = false; }\n        if (typeof bytes === 'undefined' || bytes === null) {\n            bytes = this.getBytes();\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            return _bytesToString(bytes);\n        }\n    };\n    _PdfBaseStream.prototype.skip = function (n) {\n        this.offset += n || 1;\n    };\n    _PdfBaseStream.prototype.getBaseStreams = function () {\n        return null;\n    };\n    return _PdfBaseStream;\n}());\nexport { _PdfBaseStream };\nvar _PdfStream = /** @class */ (function (_super) {\n    __extends(_PdfStream, _super);\n    function _PdfStream(arrayBuffer, dictionary, start, length) {\n        var _this = _super.call(this) || this;\n        _this.isImageStream = false;\n        _this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n        if (typeof start !== 'undefined') {\n            _this.start = start;\n        }\n        else {\n            _this.start = 0;\n        }\n        _this.position = _this.start;\n        _this.end = start + length || _this.bytes.length;\n        _this.dictionary = dictionary;\n        return _this;\n    }\n    Object.defineProperty(_PdfStream.prototype, \"position\", {\n        /**\n         * Gets the position of the stream.\n         *\n         * @returns {number} offset position.\n         */\n        get: function () {\n            return this.offset;\n        },\n        /**\n         * Sets the position of the stream.\n         *\n         * @param {number} value offset position.\n         */\n        set: function (value) {\n            this.offset = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"length\", {\n        /**\n         * Gets the length of the stream (Read only).\n         *\n         * @returns {number} length.\n         */\n        get: function () {\n            return this.end - this.start;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"isEmpty\", {\n        /**\n         * Gets a value indicating whether the stream is empty (Read only).\n         *\n         * @returns {boolean} stream empty or not.\n         */\n        get: function () {\n            return this.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfStream.prototype, \"data\", {\n        /**\n         * Gets the data of the stream.\n         *\n         * @returns {string[]} data of the stream.\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        /**\n         * Sets the data of the stream.\n         *\n         * @param {string[]} value data.\n         */\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfStream.prototype.getByte = function () {\n        if (this.position >= this.end) {\n            return -1;\n        }\n        return this.bytes[this.position++];\n    };\n    _PdfStream.prototype.getBytes = function (length) {\n        var bytes = this.bytes;\n        var position = this.position;\n        var strEnd = this.end;\n        if (!length) {\n            return bytes.subarray(position, strEnd);\n        }\n        var end = position + length;\n        if (end > strEnd) {\n            end = strEnd;\n        }\n        this.position = end;\n        return bytes.subarray(position, end);\n    };\n    _PdfStream.prototype.getByteRange = function (begin, end) {\n        if (begin < 0) {\n            begin = 0;\n        }\n        if (end > this.end) {\n            end = this.end;\n        }\n        return this.bytes.subarray(begin, end);\n    };\n    _PdfStream.prototype.reset = function () {\n        this.position = this.start;\n    };\n    _PdfStream.prototype.moveStart = function () {\n        this.start = this.position;\n    };\n    _PdfStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (dictionary === void 0) { dictionary = null; }\n        return new _PdfStream(this.bytes.buffer, dictionary, start, length);\n    };\n    _PdfStream.prototype.readBlock = function () {\n        throw new Error('Abstract method `readBlock` called');\n    };\n    _PdfStream.prototype._clearStream = function () {\n        if (this.dictionary !== null && typeof this.dictionary !== 'undefined' && this.dictionary.has('Filter')) {\n            delete this.dictionary._map.Filter;\n        }\n        this._isCompress = true;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._write = function (text) {\n        this.bytes = new Uint8Array(text.length);\n        for (var i = 0; i < text.length; i++) {\n            this.bytes[Number.parseInt(i.toString(), 10)] = text.charCodeAt(i);\n        }\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    _PdfStream.prototype._writeBytes = function (data) {\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text = text + String.fromCharCode(data[Number.parseInt(i.toString(), 10)]);\n        }\n        this.bytes = new Uint8Array(data);\n        this.end = this.bytes.length;\n        this.dictionary._updated = true;\n    };\n    return _PdfStream;\n}(_PdfBaseStream));\nexport { _PdfStream };\nvar _PdfContentStream = /** @class */ (function (_super) {\n    __extends(_PdfContentStream, _super);\n    function _PdfContentStream(bytes) {\n        var _this = _super.call(this) || this;\n        if (_isNullOrUndefined(bytes)) {\n            _this._bytes = bytes;\n        }\n        else {\n            _this._bytes = [];\n        }\n        _this.dictionary = new _PdfDictionary();\n        _this.dictionary._updated = true;\n        return _this;\n    }\n    Object.defineProperty(_PdfContentStream.prototype, \"length\", {\n        get: function () {\n            return this._bytes.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfContentStream.prototype.write = function (data) {\n        if (typeof data === 'string') {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data.charCodeAt(i));\n            }\n        }\n        else {\n            for (var i = 0; i < data.length; i++) {\n                this._bytes.push(data[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n        this.dictionary._updated = true;\n    };\n    _PdfContentStream.prototype.getString = function (isHex) {\n        if (isHex === void 0) { isHex = false; }\n        var bytes = new Uint8Array(this._bytes);\n        if (typeof bytes === 'undefined' || bytes === null || typeof bytes.length === 'undefined') {\n            throw new Error('Invalid argument for bytesToString');\n        }\n        if (isHex) {\n            return _byteArrayToHexString(bytes);\n        }\n        else {\n            var len = bytes.length;\n            var max = 8192;\n            if (len < max) {\n                return String.fromCharCode.apply(null, bytes);\n            }\n            var stringBuffer = [];\n            for (var i = 0; i < len; i += max) {\n                stringBuffer.push(String.fromCharCode.apply(null, bytes.subarray(i, Math.min(i + max, len))));\n            }\n            return stringBuffer.join('');\n        }\n    };\n    return _PdfContentStream;\n}(_PdfBaseStream));\nexport { _PdfContentStream };\nvar _PdfNullStream = /** @class */ (function (_super) {\n    __extends(_PdfNullStream, _super);\n    function _PdfNullStream() {\n        return _super.call(this, new Uint8Array(0)) || this;\n    }\n    return _PdfNullStream;\n}(_PdfStream));\nexport { _PdfNullStream };\n","import { _TokenType } from './enumerator';\nvar _ContentParser = /** @class */ (function () {\n    function _ContentParser(contentStream) {\n        this._recordCollection = [];\n        this._operands = [];\n        this._lexer = new _ContentLexer(contentStream);\n    }\n    _ContentParser.prototype._readContent = function () {\n        this._parseObject(_TokenType.eof);\n        return this._recordCollection;\n    };\n    _ContentParser.prototype._parseObject = function (tokenType) {\n        var symbol;\n        while ((symbol = this._getNextToken()) !== _TokenType.eof) { // eslint-disable-line\n            if (symbol === tokenType || symbol === _TokenType.none) {\n                return;\n            }\n            switch (symbol) {\n                case _TokenType.comment:\n                    break;\n                case _TokenType.number:\n                    if (this._lexer._operatorParams === '-') {\n                        this._operands.push('0');\n                    }\n                    else {\n                        this._operands.push(this._lexer._operatorParams);\n                    }\n                    break;\n                case _TokenType.real:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.string:\n                case _TokenType.hexString:\n                case _TokenType.unicodeHexString:\n                case _TokenType.unicodeString:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.name:\n                    this._operands.push(this._lexer._operatorParams);\n                    break;\n                case _TokenType.operator:\n                    this._createRecord();\n                    this._operands = [];\n                    break;\n                case _TokenType.beginArray:\n                    break;\n                case _TokenType.endArray:\n                    throw new Error('Error while parsing content');\n            }\n        }\n    };\n    _ContentParser.prototype._createRecord = function () {\n        var operand = this._lexer._operatorParams;\n        var record = new _PdfRecord(operand, this._operands);\n        record._splittedText = this._lexer._text;\n        this._recordCollection.push(record);\n    };\n    _ContentParser.prototype._getNextToken = function () {\n        return this._lexer._getNextToken();\n    };\n    return _ContentParser;\n}());\nexport { _ContentParser };\nvar _ContentLexer = /** @class */ (function () {\n    function _ContentLexer(data) {\n        this._tokenType = _TokenType.none;\n        this._currentCharacter = '\\0';\n        this._nextCharacter = '\\0';\n        this._offset = 0;\n        this._text = [];\n        this._data = data instanceof Uint8Array ? data : new Uint8Array(data);\n    }\n    _ContentLexer.prototype._getNextToken = function () {\n        this._operatorParams = '';\n        var value = this._moveToNextChar();\n        switch (value) {\n            case '%':\n                return this._tokenType = this._getComment();\n            case '/':\n                return this._tokenType = this._getName();\n            case '[':\n            case '(':\n                return this._tokenType = this._getLiteralString();\n            case '+':\n            case '-':\n                return this._tokenType = this._getNumber();\n            case '<':\n                return this._tokenType = this._getEncodedDecimalString();\n            case '.':\n                return this._tokenType = this._getNumber();\n            case '\"':\n            case '\\'':\n                return this._tokenType = this._getOperator();\n        }\n        if (!isNaN(parseInt(value, 10))) {\n            return this._tokenType = this._getNumber();\n        }\n        if ((/[a-zA-Z]/).test(value)) {\n            return this._tokenType = this._getOperator();\n        }\n        if (value === String.fromCharCode(65535)) {\n            return this._tokenType = _TokenType.eof;\n        }\n        return this._tokenType = _TokenType.none;\n    };\n    _ContentLexer.prototype._getComment = function () {\n        this._operatorParams = '';\n        var value;\n        var flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        while (flag) {\n            flag = (value = this._consumeValue()) !== '\\x0A' && value !== String.fromCharCode(65535);\n        }\n        return _TokenType.comment;\n    };\n    _ContentLexer.prototype._getName = function () {\n        this._operatorParams = '';\n        var flag = false;\n        while (!flag) {\n            var value = this._consumeValue();\n            switch (value) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                case '%':\n                case '(':\n                case ')':\n                case '<':\n                case '>':\n                case '[':\n                case ']':\n                case '/':\n                    flag = true;\n                    return _TokenType.name;\n                default:\n                    break;\n            }\n        }\n        return _TokenType.none;\n    };\n    _ContentLexer.prototype._getNumber = function () {\n        var value = this._currentCharacter;\n        if (value === '+' || value === '-') {\n            this._operatorParams += this._currentCharacter;\n            value = this._getNextChar();\n        }\n        while (!isNaN(parseInt(value, 10)) || value === '.') {\n            if (!isNaN(parseInt(value, 10))) {\n                this._operatorParams += this._currentCharacter;\n            }\n            else if (value === '.') {\n                if (this._operatorParams.includes('.')) {\n                    break;\n                }\n                else {\n                    this._operatorParams += this._currentCharacter;\n                }\n            }\n            value = this._getNextChar();\n        }\n        return _TokenType.number;\n    };\n    _ContentLexer.prototype._getOperator = function () {\n        this._operatorParams = '';\n        var value = this._currentCharacter;\n        while (this._isOperator(value)) {\n            value = this._consumeValue();\n        }\n        return _TokenType.operator;\n    };\n    _ContentLexer.prototype._isOperator = function (value) {\n        if ((/[a-zA-Z]/).test(value)) {\n            return true;\n        }\n        switch (value) {\n            case '*':\n            case '\\'':\n            case '\\\"': // eslint-disable-line\n            case '1':\n            case '0':\n                return true;\n        }\n        return false;\n    };\n    _ContentLexer.prototype._getLiteralString = function () {\n        this._operatorParams = '';\n        var beginChar = this._currentCharacter;\n        var literal;\n        var value = this._consumeValue();\n        var flag = true;\n        var index = 0;\n        var char = '';\n        this._text = [];\n        while (flag) {\n            if (beginChar === '(') {\n                literal = this._getLiteralStringValue(value);\n                this._operatorParams += literal;\n                value = this._getNextChar();\n                flag = false;\n                break;\n            }\n            else {\n                if (value === '(') {\n                    if (char !== '') {\n                        this._text[Number.parseInt(index.toString(), 10)] = char.slice(0, -1);\n                        char = '';\n                        index++;\n                    }\n                    value = this._consumeValue();\n                    literal = this._getLiteralStringValue(value);\n                    this._text[Number.parseInt(index.toString(), 10)] = '(' + literal;\n                    index++;\n                    this._operatorParams += literal;\n                    value = this._getNextChar();\n                    char += value;\n                    continue;\n                }\n                else if (value === ']') {\n                    flag = false;\n                    value = this._consumeValue();\n                    break;\n                }\n                else if (value === '>') {\n                    this._text[Number.parseInt(index.toString(), 10)] = '<' + char;\n                    index++;\n                    char = '';\n                }\n                else if (value === '<') {\n                    if (char !== '') {\n                        this._text[Number.parseInt(index.toString(), 10)] = char.slice(0, -1);\n                        index++;\n                    }\n                    char = '';\n                }\n                value = this._consumeValue();\n                char += value;\n            }\n        }\n        return _TokenType.string;\n    };\n    _ContentLexer.prototype._getEncodedDecimalString = function () {\n        var startChar = '<';\n        var endChar = '>';\n        var space = ' ';\n        var parentLevel = 0;\n        var value = this._consumeValue();\n        var flag = true;\n        while (flag) {\n            if (value === startChar) {\n                parentLevel++;\n                value = this._consumeValue();\n            }\n            else if (value === endChar) {\n                if (parentLevel === 0) {\n                    this._consumeValue();\n                    flag = false;\n                    break;\n                }\n                else if (parentLevel === 1) {\n                    value = this._consumeValue();\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    if (parentLevel === 1 && value === space) {\n                        flag = false;\n                        break;\n                    }\n                }\n                else {\n                    if (value === '>') {\n                        parentLevel--;\n                    }\n                    value = this._consumeValue();\n                }\n            }\n            else {\n                value = this._consumeValue();\n                if (value === String.fromCharCode(65535)) {\n                    flag = false;\n                    break;\n                }\n            }\n        }\n        return _TokenType.hexString;\n    };\n    _ContentLexer.prototype._getLiteralStringValue = function (value) {\n        var parenthesesCount = 0;\n        var literal = '';\n        var flag = true;\n        while (flag) {\n            if (value === '\\\\') {\n                literal += value;\n                value = this._getNextChar();\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === '(') {\n                parenthesesCount++;\n                literal += value;\n                value = this._getNextChar();\n                continue;\n            }\n            if (value === ')' && parenthesesCount !== 0) {\n                literal += value;\n                value = this._getNextChar();\n                parenthesesCount--;\n                continue;\n            }\n            if (value === ')' && parenthesesCount === 0) {\n                literal += value;\n                flag = false;\n                return literal;\n            }\n            literal += value;\n            value = this._getNextChar();\n        }\n        return literal;\n    };\n    _ContentLexer.prototype._consumeValue = function () {\n        this._operatorParams += this._currentCharacter;\n        return this._getNextChar();\n    };\n    _ContentLexer.prototype._moveToNextChar = function () {\n        while (this._currentCharacter !== String.fromCharCode(65535)) {\n            switch (this._currentCharacter) {\n                case '\\0':\n                case '\\t':\n                case '\\x0A':\n                case '\\f':\n                case '\\x0D':\n                case '\\b':\n                case ' ':\n                    this._getNextChar();\n                    break;\n                default:\n                    return this._currentCharacter;\n            }\n        }\n        return this._currentCharacter;\n    };\n    _ContentLexer.prototype._getNextChar = function () {\n        if (this._data.length <= this._offset) {\n            if (this._nextCharacter === 'Q' || (this._currentCharacter === 'D' && this._nextCharacter === 'o')) {\n                this._currentCharacter = this._nextCharacter;\n                this._nextCharacter = String.fromCharCode(65535);\n                return this._currentCharacter;\n            }\n            this._currentCharacter = String.fromCharCode(65535);\n            this._nextCharacter = String.fromCharCode(65535);\n        }\n        else {\n            this._currentCharacter = this._nextCharacter;\n            this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n            if (this._currentCharacter === '\\x0D') {\n                if (this._nextCharacter === '\\x0A') {\n                    this._currentCharacter = this._nextCharacter;\n                    if (this._data.length <= this._offset) {\n                        this._nextCharacter = String.fromCharCode(65535);\n                    }\n                    else {\n                        this._nextCharacter = String.fromCharCode(this._data[this._offset++]);\n                    }\n                }\n                else {\n                    this._currentCharacter = '\\x0A';\n                }\n            }\n        }\n        return this._currentCharacter;\n    };\n    return _ContentLexer;\n}());\nexport { _ContentLexer };\nvar _PdfRecord = /** @class */ (function () {\n    function _PdfRecord(operator, operands) {\n        this._operator = operator;\n        this._operands = operands;\n    }\n    return _PdfRecord;\n}());\nexport { _PdfRecord };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfBaseStream, _PdfStream } from './base-stream';\nvar _PdfDecodeStream = /** @class */ (function (_super) {\n    __extends(_PdfDecodeStream, _super);\n    function _PdfDecodeStream(maybeMinBufferLength) {\n        var _this = _super.call(this) || this;\n        _this._rawMinBufferLength = maybeMinBufferLength || 0;\n        _this.offset = 0;\n        _this.bufferLength = 0;\n        _this.eof = false;\n        _this.buffer = new Uint8Array(0);\n        _this.minBufferLength = 512;\n        if (maybeMinBufferLength) {\n            while (_this.minBufferLength < maybeMinBufferLength) {\n                _this.minBufferLength *= 2;\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(_PdfDecodeStream.prototype, \"isEmpty\", {\n        get: function () {\n            while (!this.eof && this.bufferLength === 0) {\n                this.readBlock();\n            }\n            return this.bufferLength === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfDecodeStream.prototype.ensureBuffer = function (requested) {\n        var buffer = this.buffer;\n        if (requested <= buffer.byteLength) {\n            return buffer;\n        }\n        var size = this.minBufferLength;\n        while (size < requested) {\n            size *= 2;\n        }\n        var buffer2 = new Uint8Array(size);\n        buffer2.set(buffer);\n        this.buffer = buffer2;\n        return this.buffer;\n    };\n    _PdfDecodeStream.prototype.getByte = function () {\n        var position = this.offset;\n        while (this.bufferLength <= position) {\n            if (this.eof) {\n                return -1;\n            }\n            this.readBlock();\n        }\n        return this.buffer[this.offset++];\n    };\n    _PdfDecodeStream.prototype.getBytes = function (length) {\n        var position = this.offset;\n        var end;\n        if (length) {\n            this.ensureBuffer(position + length);\n            end = position + length;\n            while (!this.eof && this.bufferLength < end) {\n                this.readBlock();\n            }\n            var bufEnd = this.bufferLength;\n            if (end > bufEnd) {\n                end = bufEnd;\n            }\n        }\n        else {\n            while (!this.eof) {\n                this.readBlock();\n            }\n            end = this.bufferLength;\n        }\n        this.offset = end;\n        return this.buffer.subarray(position, end);\n    };\n    _PdfDecodeStream.prototype.reset = function () {\n        this.offset = 0;\n    };\n    _PdfDecodeStream.prototype.makeSubStream = function (start, length, dictionary) {\n        if (length === undefined) {\n            while (!this.eof) {\n                this.readBlock();\n            }\n        }\n        else {\n            var end = start + length;\n            while (this.bufferLength <= end && !this.eof) {\n                this.readBlock();\n            }\n        }\n        return new _PdfStream(this.buffer, dictionary, start, length);\n    };\n    _PdfDecodeStream.prototype.getBaseStreams = function () {\n        return this.stream ? this.stream.getBaseStreams() : null;\n    };\n    _PdfDecodeStream.prototype.moveStart = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    _PdfDecodeStream.prototype.getByteRange = function (begin, end) {\n        throw new Error('Invalid call from decode stream. begin: ' + begin + ', end: ' + end);\n    };\n    _PdfDecodeStream.prototype.readBlock = function () {\n        throw new Error('Invalid call from decode stream');\n    };\n    return _PdfDecodeStream;\n}(_PdfBaseStream));\nexport { _PdfDecodeStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nvar _PdfDecryptStream = /** @class */ (function (_super) {\n    __extends(_PdfDecryptStream, _super);\n    function _PdfDecryptStream(stream, maybeLength, cipher) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this._chunkSize = 512;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        _this._cipher = cipher;\n        _this._nextChunk = null;\n        _this._initialized = false;\n        return _this;\n    }\n    _PdfDecryptStream.prototype.readBlock = function () {\n        var chunk;\n        if (this._initialized) {\n            chunk = this._nextChunk;\n        }\n        else {\n            chunk = this.stream.getBytes(this._chunkSize);\n            this._initialized = true;\n        }\n        if (!chunk || chunk.length === 0) {\n            this.eof = true;\n            return;\n        }\n        this._nextChunk = this.stream.getBytes(this._chunkSize);\n        var hasMoreData = this._nextChunk && this._nextChunk.length > 0;\n        chunk = this._cipher._decryptBlock(chunk, !hasMoreData);\n        var bufferLength = this.bufferLength;\n        var n = chunk.length;\n        var buffer = this.ensureBuffer(bufferLength + n);\n        for (var i = 0; i < n; i++) {\n            buffer[bufferLength++] = chunk[Number.parseInt(i.toString(), 10)];\n        }\n        this.bufferLength = bufferLength;\n    };\n    return _PdfDecryptStream;\n}(_PdfDecodeStream));\nexport { _PdfDecryptStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { FormatError } from './utils';\nvar codeLenCodeMap = new Int32Array([\n    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15\n]);\nvar lengthDecode = new Int32Array([\n    0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a,\n    0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f,\n    0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073,\n    0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102\n]);\nvar distDecode = new Int32Array([\n    0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d,\n    0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1,\n    0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01,\n    0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001\n]);\nvar fixedLitCodeTab = [\n    new Int32Array([\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0,\n        0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0,\n        0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0,\n        0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8,\n        0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8,\n        0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8,\n        0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4,\n        0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4,\n        0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4,\n        0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc,\n        0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec,\n        0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc,\n        0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2,\n        0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2,\n        0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2,\n        0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca,\n        0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea,\n        0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da,\n        0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6,\n        0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6,\n        0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6,\n        0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce,\n        0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee,\n        0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de,\n        0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe,\n        0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1,\n        0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1,\n        0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1,\n        0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1,\n        0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9,\n        0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9,\n        0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9,\n        0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9,\n        0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5,\n        0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5,\n        0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5,\n        0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5,\n        0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd,\n        0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed,\n        0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd,\n        0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd,\n        0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3,\n        0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3,\n        0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3,\n        0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3,\n        0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb,\n        0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb,\n        0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db,\n        0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb,\n        0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7,\n        0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7,\n        0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7,\n        0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7,\n        0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf,\n        0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef,\n        0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df,\n        0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff\n    ]),\n    9\n];\nvar fixedDistCodeTab = [\n    new Int32Array([\n        0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c,\n        0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000,\n        0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d,\n        0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000\n    ]),\n    5\n];\nvar _PdfFlateStream = /** @class */ (function (_super) {\n    __extends(_PdfFlateStream, _super);\n    function _PdfFlateStream(stream, maybeLength) {\n        var _this = _super.call(this, maybeLength) || this;\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var cmf = stream.getByte();\n        var flg = stream.getByte();\n        if ((cmf & 0x0f) !== 0x08) {\n            throw new FormatError(\"Unknown compression method in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (((cmf << 8) + flg) % 31 !== 0) {\n            throw new FormatError(\"Bad flag check in flate stream: \" + cmf + \", \" + flg);\n        }\n        if (flg & 0x20) {\n            throw new FormatError(\"Bad flag bit set in flate stream: \" + cmf + \", \" + flg);\n        }\n        _this.codeSize = 0;\n        _this.codeBuffer = 0;\n        return _this;\n    }\n    _PdfFlateStream.prototype.getBits = function (bits) {\n        var stream = this.stream;\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < bits) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        b = codeBuffer & ((1 << bits) - 1);\n        this.codeBuffer = codeBuffer >> bits;\n        this.codeSize = codeSize -= bits;\n        return b;\n    };\n    _PdfFlateStream.prototype.getCode = function (table) {\n        var stream = this.stream;\n        var codes = table[0];\n        var maxLen = table[1];\n        var codeSize = this.codeSize;\n        var codeBuffer = this.codeBuffer;\n        var b;\n        while (codeSize < maxLen) {\n            b = stream.getByte();\n            codeBuffer |= b << codeSize;\n            codeSize += 8;\n        }\n        var code = codes[codeBuffer & ((1 << maxLen) - 1)];\n        var codeLen = code >> 16;\n        var codeVal = code & 0xffff;\n        if (!(codeLen < 1 || codeSize < codeLen)) {\n            this.codeBuffer = codeBuffer >> codeLen;\n            this.codeSize = codeSize - codeLen;\n        }\n        return codeVal;\n    };\n    _PdfFlateStream.prototype.generateHuffmanTable = function (lengths) {\n        var n = lengths.length;\n        var maximumLength = 0;\n        var i;\n        for (i = 0; i < n; ++i) {\n            if (lengths[i] > maximumLength) { // eslint-disable-line\n                maximumLength = lengths[i]; // eslint-disable-line\n            }\n        }\n        var size = 1 << maximumLength;\n        var codes = new Int32Array(size);\n        for (var len = 1, code = 0, skip = 2; len <= maximumLength; ++len, code <<= 1, skip <<= 1) {\n            for (var val = 0; val < n; ++val) {\n                if (lengths[val] === len) { // eslint-disable-line\n                    var code2 = 0;\n                    var t = code;\n                    for (i = 0; i < len; ++i) {\n                        code2 = (code2 << 1) | (t & 1);\n                        t >>= 1;\n                    }\n                    for (i = code2; i < size; i += skip) {\n                        codes[i] = (len << 16) | val; // eslint-disable-line\n                    }\n                    ++code;\n                }\n            }\n        }\n        return [codes, maximumLength];\n    };\n    _PdfFlateStream.prototype.readBlock = function () {\n        var buffer;\n        var length;\n        var stream = this.stream;\n        var hdr = this.getBits(3);\n        if (hdr & 1) {\n            this.eof = true;\n        }\n        hdr >>= 1;\n        if (hdr === 0) {\n            var b = stream.getByte();\n            var blockLen = b;\n            b = stream.getByte();\n            blockLen |= b << 8;\n            b = stream.getByte();\n            var check = b;\n            b = stream.getByte();\n            check |= b << 8;\n            if (!(check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0))) {\n                this.codeBuffer = 0;\n                this.codeSize = 0;\n                var bufferLength = this.bufferLength;\n                var end = bufferLength + blockLen;\n                buffer = this.ensureBuffer(end);\n                this.bufferLength = end;\n                if (blockLen === 0) {\n                    if (stream.peekByte() === -1) {\n                        this.eof = true;\n                    }\n                }\n                else {\n                    var block = stream.getBytes(blockLen);\n                    buffer.set(block, bufferLength);\n                    if (block.length < blockLen) {\n                        this.eof = true;\n                    }\n                }\n                return;\n            }\n        }\n        var litCodeTable;\n        var distCodeTable;\n        if (hdr === 1) {\n            litCodeTable = fixedLitCodeTab;\n            distCodeTable = fixedDistCodeTab;\n        }\n        else if (hdr === 2) {\n            var numLitCodes = this.getBits(5) + 257;\n            var numDistCodes = this.getBits(5) + 1;\n            var numCodeLenCodes = this.getBits(4) + 4;\n            var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n            var i = void 0;\n            for (i = 0; i < numCodeLenCodes; ++i) {\n                codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3); // eslint-disable-line\n            }\n            var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n            length = 0;\n            i = 0;\n            var codes = numLitCodes + numDistCodes;\n            var codeLengths = new Uint8Array(codes);\n            var bitsLength = void 0;\n            var bitsOffset = void 0;\n            var what = void 0;\n            while (i < codes) {\n                var code = this.getCode(codeLenCodeTab);\n                if (code === 16) {\n                    bitsLength = 2;\n                    bitsOffset = 3;\n                    what = length;\n                }\n                else if (code === 17) {\n                    bitsLength = 3;\n                    bitsOffset = 3;\n                    what = length = 0;\n                }\n                else if (code === 18) {\n                    bitsLength = 7;\n                    bitsOffset = 11;\n                    what = length = 0;\n                }\n                else {\n                    codeLengths[i++] = length = code;\n                    continue;\n                }\n                var repeatLength = this.getBits(bitsLength) + bitsOffset;\n                while (repeatLength-- > 0) {\n                    codeLengths[i++] = what;\n                }\n            }\n            litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n            distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n        }\n        buffer = this.buffer;\n        var limit = buffer ? buffer.length : 0;\n        var position = this.bufferLength;\n        while (true) { // eslint-disable-line\n            var code1 = this.getCode(litCodeTable);\n            if (code1 < 256) {\n                if (position + 1 >= limit) {\n                    buffer = this.ensureBuffer(position + 1);\n                    limit = buffer.length;\n                }\n                buffer[position++] = code1;\n                continue;\n            }\n            if (code1 === 256) {\n                this.bufferLength = position;\n                return;\n            }\n            code1 -= 257;\n            code1 = lengthDecode[code1]; // eslint-disable-line\n            var code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            length = (code1 & 0xffff) + code2;\n            code1 = this.getCode(distCodeTable);\n            code1 = distDecode[code1]; // eslint-disable-line\n            code2 = code1 >> 16;\n            if (code2 > 0) {\n                code2 = this.getBits(code2);\n            }\n            var dist = (code1 & 0xffff) + code2;\n            if (position + length >= limit) {\n                buffer = this.ensureBuffer(position + length);\n                limit = buffer.length;\n            }\n            for (var k = 0; k < length; ++k, ++position) {\n                buffer[position] = buffer[position - dist]; // eslint-disable-line\n            }\n        }\n    };\n    return _PdfFlateStream;\n}(_PdfDecodeStream));\nexport { _PdfFlateStream };\n","import { _PdfDictionary, _PdfReferenceSet, _PdfReferenceSetCache, _PdfReference, _isName } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar _PdfCatalog = /** @class */ (function () {\n    function _PdfCatalog(xref) {\n        this._crossReference = xref;\n        this._catalogDictionary = xref._getCatalogObj();\n        if (!(this._catalogDictionary instanceof _PdfDictionary)) {\n            throw new FormatError('Catalog object is not a dictionary.');\n        }\n        else {\n            this._catalogDictionary.isCatalog = true;\n        }\n        this._topPagesDictionary = this._catalogDictionary.get('Pages');\n        this.pageKidsCountCache = new _PdfReferenceSetCache();\n        this.pageIndexCache = new _PdfReferenceSetCache();\n    }\n    Object.defineProperty(_PdfCatalog.prototype, \"version\", {\n        get: function () {\n            var value;\n            if (this._catalogDictionary.has('Version')) {\n                var version = this._catalogDictionary.get('Version');\n                if (version) {\n                    value = version.name;\n                }\n            }\n            return value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"pageCount\", {\n        get: function () {\n            var obj = this._topPagesDictionary.get('Count');\n            if (typeof obj === 'undefined' || !Number.isInteger(obj)) {\n                throw new FormatError('Invalid page count');\n            }\n            return obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_PdfCatalog.prototype, \"acroForm\", {\n        get: function () {\n            var form;\n            if (this._catalogDictionary.has('AcroForm')) {\n                form = this._catalogDictionary.get('AcroForm');\n            }\n            if (form === null || typeof form === 'undefined') {\n                form = this._createForm();\n            }\n            return form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* eslint-disable */\n    _PdfCatalog.prototype._createForm = function () {\n        var form = new _PdfDictionary(this._crossReference);\n        var ref = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(ref, form);\n        this._catalogDictionary.set('AcroForm', ref);\n        this._catalogDictionary._updated = true;\n        this._crossReference._allowCatalog = true;\n        form._updated = true;\n        return form;\n    };\n    _PdfCatalog.prototype.getPageDictionary = function (pageIndex) {\n        var nodesToVisit = [this._topPagesDictionary];\n        var visitedNodes = new _PdfReferenceSet();\n        var pagesRef = this._catalogDictionary.getRaw('Pages');\n        if (pagesRef && pagesRef instanceof _PdfReference) {\n            visitedNodes.put(pagesRef);\n        }\n        var xref = this._crossReference;\n        var pageKidsCountCache = this.pageKidsCountCache;\n        var pageIndexCache = this.pageIndexCache;\n        var currentPageIndex = 0;\n        while (nodesToVisit.length > 0) {\n            var currentNode = nodesToVisit.pop();\n            if (currentNode !== null && typeof currentNode !== 'undefined' && currentNode instanceof _PdfReference) {\n                var count_1 = pageKidsCountCache.get(currentNode);\n                if (count_1 >= 0 && currentPageIndex + count_1 <= pageIndex) {\n                    currentPageIndex += count_1;\n                    continue;\n                }\n                if (visitedNodes.has(currentNode)) {\n                    throw new FormatError('Pages tree contains circular reference.');\n                }\n                visitedNodes.put(currentNode);\n                var obj = xref._fetch(currentNode);\n                if (obj && obj instanceof _PdfDictionary) {\n                    var type = obj.getRaw('Type');\n                    if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                        type = xref._fetch(type);\n                    }\n                    if (_isName(type, 'Page') || !obj.has('Kids')) {\n                        if (!pageKidsCountCache.has(currentNode)) {\n                            pageKidsCountCache.put(currentNode, 1);\n                        }\n                        if (!pageIndexCache.has(currentNode)) {\n                            pageIndexCache.put(currentNode, currentPageIndex);\n                        }\n                        if (currentPageIndex === pageIndex) {\n                            return { dictionary: obj, reference: currentNode };\n                        }\n                        currentPageIndex++;\n                        continue;\n                    }\n                }\n                nodesToVisit.push(obj);\n                continue;\n            }\n            if (!(currentNode instanceof _PdfDictionary)) {\n                throw new FormatError('Page dictionary kid reference points to wrong type of object.');\n            }\n            var objId = currentNode.objId;\n            var count = currentNode.get('Count');\n            if (count !== null && typeof count !== 'undefined' && count instanceof _PdfReference) {\n                count = xref._fetch(count);\n            }\n            if (count !== null && typeof count !== 'undefined' && Number.isInteger(count) && count >= 0) {\n                if (objId && !pageKidsCountCache.has(objId)) {\n                    pageKidsCountCache.set(objId, count);\n                }\n                if (currentPageIndex + count <= pageIndex) {\n                    currentPageIndex += count;\n                    continue;\n                }\n            }\n            var kids = currentNode.getRaw('Kids');\n            if (kids !== null && typeof kids !== 'undefined' && kids instanceof _PdfReference) {\n                kids = xref._fetch(kids);\n            }\n            if (!Array.isArray(kids)) {\n                var type = currentNode.getRaw('Type');\n                if (type !== null && typeof type !== 'undefined' && type instanceof _PdfReference) {\n                    type = xref._fetch(type);\n                }\n                if (_isName(type, 'Page') || !currentNode.has('Kids')) {\n                    if (currentPageIndex === pageIndex) {\n                        return { dictionary: currentNode, reference: null };\n                    }\n                    currentPageIndex++;\n                    continue;\n                }\n                throw new FormatError('Page dictionary kids object is not an array.');\n            }\n            for (var last = kids.length - 1; last >= 0; last--) {\n                nodesToVisit.push(kids[last]);\n            }\n        }\n        throw new Error(\"Page index \" + pageIndex + \" not found.\");\n    };\n    _PdfCatalog.prototype._destroy = function () {\n        if (this._catalogDictionary) {\n            this._catalogDictionary = undefined;\n        }\n        if (this._topPagesDictionary) {\n            this._topPagesDictionary = undefined;\n        }\n        if (this.pageIndexCache) {\n            this.pageIndexCache.clear();\n            this.pageIndexCache = undefined;\n        }\n        if (this.pageKidsCountCache) {\n            this.pageKidsCountCache.clear();\n            this.pageKidsCountCache = undefined;\n        }\n    };\n    return _PdfCatalog;\n}());\nexport { _PdfCatalog };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDecodeStream } from './decode-stream';\nimport { _PdfDictionary } from './pdf-primitives';\nimport { FormatError } from './utils';\nvar PdfPredictorStream = /** @class */ (function (_super) {\n    __extends(PdfPredictorStream, _super);\n    function PdfPredictorStream(stream, maybeLength, params) {\n        var _this = _super.call(this, maybeLength) || this;\n        if (!(params instanceof _PdfDictionary)) {\n            return stream;\n        }\n        var predictor = (_this.predictor = params.get('Predictor') || 1);\n        if (predictor <= 1) {\n            return stream;\n        }\n        if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n            throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        if (predictor === 2) {\n            _this.readBlock = _this.readBlockTiff;\n        }\n        else {\n            _this.readBlock = _this.readBlockPng;\n        }\n        _this.stream = stream;\n        _this.dictionary = stream.dictionary;\n        var colors = (_this.colors = params.get('Colors') || 1);\n        var bits = (_this.bits = params.get('BPC', 'BitsPerComponent') || 8);\n        var columns = (_this.columns = params.get('Columns') || 1);\n        _this.pixBytes = (colors * bits + 7) >> 3;\n        _this.rowBytes = (columns * colors * bits + 7) >> 3;\n        return _this;\n    }\n    PdfPredictorStream.prototype.readBlockTiff = function () {\n        var rowBytes = this.rowBytes;\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var bits = this.bits;\n        var colors = this.colors;\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var inbuf = 0;\n        var outbuf = 0;\n        var inbits = 0;\n        var outbits = 0;\n        var position = bufferLength;\n        var i;\n        if (bits === 1 && colors === 1) {\n            for (i = 0; i < rowBytes; ++i) {\n                var c = rawBytes[i] ^ inbuf; // eslint-disable-line\n                c ^= c >> 1;\n                c ^= c >> 2;\n                c ^= c >> 4;\n                inbuf = (c & 1) << 7;\n                buffer[position++] = c;\n            }\n        }\n        else if (bits === 8) {\n            for (i = 0; i < colors; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; ++i) {\n                buffer[position] = buffer[position - colors] + rawBytes[i]; // eslint-disable-line\n                position++;\n            }\n        }\n        else if (bits === 16) {\n            var bytesPerPixel = colors * 2;\n            for (i = 0; i < bytesPerPixel; ++i) {\n                buffer[position++] = rawBytes[i]; // eslint-disable-line\n            }\n            for (; i < rowBytes; i += 2) {\n                var sum = ((rawBytes[i] & 0xff) << 8) + // eslint-disable-line\n                    (rawBytes[i + 1] & 0xff) +\n                    ((buffer[position - bytesPerPixel] & 0xff) << 8) +\n                    (buffer[position - bytesPerPixel + 1] & 0xff);\n                buffer[position++] = (sum >> 8) & 0xff;\n                buffer[position++] = sum & 0xff;\n            }\n        }\n        else {\n            var compArray = new Uint8Array(colors + 1);\n            var bitMask = (1 << bits) - 1;\n            var j = 0;\n            var k = bufferLength;\n            var columns = this.columns;\n            for (i = 0; i < columns; ++i) {\n                for (var kk = 0; kk < colors; ++kk) {\n                    if (inbits < bits) {\n                        inbuf = (inbuf << 8) | (rawBytes[j++] & 0xff);\n                        inbits += 8;\n                    }\n                    compArray[kk] = (compArray[kk] + (inbuf >> (inbits - bits))) & bitMask; // eslint-disable-line\n                    inbits -= bits;\n                    outbuf = (outbuf << bits) | compArray[kk]; // eslint-disable-line\n                    outbits += bits;\n                    if (outbits >= 8) {\n                        buffer[k++] = (outbuf >> (outbits - 8)) & 0xff;\n                        outbits -= 8;\n                    }\n                }\n            }\n            if (outbits > 0) {\n                buffer[k++] = (outbuf << (8 - outbits)) + (inbuf & ((1 << (8 - outbits)) - 1));\n            }\n        }\n        this.bufferLength += rowBytes;\n    };\n    PdfPredictorStream.prototype.readBlockPng = function () {\n        var rowBytes = this.rowBytes;\n        var pixBytes = this.pixBytes;\n        var predictor = this.stream.getByte();\n        var rawBytes = this.stream.getBytes(rowBytes);\n        this.eof = !rawBytes.length;\n        if (this.eof) {\n            return;\n        }\n        var bufferLength = this.bufferLength;\n        var buffer = this.ensureBuffer(bufferLength + rowBytes);\n        var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n        if (prevRow.length === 0) {\n            prevRow = new Uint8Array(rowBytes);\n        }\n        var i;\n        var j = bufferLength;\n        var up;\n        var c;\n        switch (predictor) {\n            case 0:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                break;\n            case 1:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (buffer[j - pixBytes] + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 2:\n                for (i = 0; i < rowBytes; ++i) {\n                    buffer[j++] = (prevRow[i] + rawBytes[i]) & 0xff; // eslint-disable-line\n                }\n                break;\n            case 3:\n                for (i = 0; i < pixBytes; ++i) {\n                    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i]; // eslint-disable-line\n                }\n                for (; i < rowBytes; ++i) {\n                    buffer[j] = (((prevRow[i] + buffer[j - pixBytes]) >> 1) + rawBytes[i]) & 0xff; // eslint-disable-line\n                    j++;\n                }\n                break;\n            case 4:\n                for (i = 0; i < pixBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    c = rawBytes[i]; // eslint-disable-line\n                    buffer[j++] = up + c;\n                }\n                for (; i < rowBytes; ++i) {\n                    up = prevRow[i]; // eslint-disable-line\n                    var upLeft = prevRow[i - pixBytes];\n                    var left = buffer[j - pixBytes];\n                    var p = left + up - upLeft;\n                    var pa = p - left;\n                    if (pa < 0) {\n                        pa = -pa;\n                    }\n                    var pb = p - up;\n                    if (pb < 0) {\n                        pb = -pb;\n                    }\n                    var pc = p - upLeft;\n                    if (pc < 0) {\n                        pc = -pc;\n                    }\n                    c = rawBytes[i]; // eslint-disable-line\n                    if (pa <= pb && pa <= pc) {\n                        buffer[j++] = left + c;\n                    }\n                    else if (pb <= pc) {\n                        buffer[j++] = up + c;\n                    }\n                    else {\n                        buffer[j++] = upLeft + c;\n                    }\n                }\n                break;\n            default:\n                throw new FormatError(\"Unsupported predictor: \" + predictor);\n        }\n        this.bufferLength += rowBytes;\n    };\n    return PdfPredictorStream;\n}(_PdfDecodeStream));\nexport { PdfPredictorStream };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _isName, _PdfName } from './../pdf-primitives';\nimport { FormatError, _stringToBytes, _areArrayEqual, _bytesToString } from './../utils';\nimport { _PdfDecryptStream } from './../decrypt-stream';\nvar _PdfEncryptor = /** @class */ (function () {\n    function _PdfEncryptor(dictionary, id, password) {\n        if (password === void 0) { password = ''; }\n        this._isUserPassword = true;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = true;\n        this._defaultPasswordBytes = new Uint8Array([0x28, 0xbf, 0x4e, 0x5e, 0x4e, 0x75, 0x8a, 0x41, 0x64, 0x00, 0x4e, 0x56, 0xff,\n            0xfa, 0x01, 0x08, 0x2e, 0x2e, 0x00, 0xb6, 0xd0, 0x68, 0x3e, 0x80, 0x2f, 0x0c, 0xa9, 0xfe, 0x64, 0x53, 0x69, 0x7a]);\n        var filter = dictionary.get('Filter');\n        if (!_isName(filter, 'Standard')) {\n            throw new FormatError('unknown encryption method');\n        }\n        this._filterName = filter.name;\n        this._dictionary = dictionary;\n        var algorithm = dictionary.get('V');\n        if (!Number.isInteger(algorithm) || (algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5)) {\n            throw new FormatError('unsupported encryption algorithm');\n        }\n        this._algorithm = algorithm;\n        var keyLength = dictionary.get('Length');\n        if (!keyLength) {\n            if (algorithm <= 3) {\n                keyLength = 40;\n            }\n            else {\n                var cfDictionary = dictionary.get('CF');\n                var streamCryptoName = dictionary.get('StmF');\n                if (cfDictionary && streamCryptoName) {\n                    cfDictionary.suppressEncryption = true;\n                    var handlerDictionary = cfDictionary.get(streamCryptoName.name);\n                    keyLength = (handlerDictionary && handlerDictionary.get('Length')) || 128;\n                    if (keyLength < 40) {\n                        keyLength <<= 3;\n                    }\n                }\n            }\n        }\n        if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n            throw new FormatError('invalid key length');\n        }\n        var ownerPassword = _stringToBytes(dictionary.get('O'), false, true).subarray(0, 32);\n        var userPassword = _stringToBytes(dictionary.get('U'), false, true).subarray(0, 32);\n        var flag = dictionary.get('P');\n        var revision = dictionary.get('R');\n        this._encryptMetaData = (algorithm === 4 || algorithm === 5) && dictionary.get('EncryptMetadata') !== false;\n        var fileIdBytes = _stringToBytes(id, false, true);\n        var passwordBytes;\n        if (password) {\n            if (revision === 6) {\n                password = encodeURIComponent(password);\n            }\n            passwordBytes = _stringToBytes(password, false, true);\n        }\n        var encryptionKey;\n        if (algorithm !== 5) {\n            encryptionKey = this._prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n            if (encryptionKey) {\n                this._isUserPassword = true;\n                if (password) {\n                    var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                    var ownerEncryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                    if (ownerEncryptionKey && _areArrayEqual(ownerEncryptionKey, encryptionKey)) {\n                        this._hasUserPasswordOnly = true;\n                    }\n                }\n            }\n        }\n        else {\n            var ownerValidationKey = _stringToBytes(dictionary.get('O'), false, true);\n            var ownerValidationSalt = ownerValidationKey.subarray(32, 40);\n            var ownerKeySalt = ownerValidationKey.subarray(40, 48);\n            var userValidationKey = _stringToBytes(dictionary.get('U'), false, true);\n            var uBytes = userValidationKey.subarray(0, 48);\n            var userValidationSalt = userValidationKey.subarray(32, 40);\n            var userKeySalt = userValidationKey.subarray(40, 48);\n            var ownerEncryption = _stringToBytes(dictionary.get('OE'), false, true);\n            var userEncryption = _stringToBytes(dictionary.get('UE'), false, true);\n            var algorithm_1;\n            if (revision === 6) {\n                algorithm_1 = new _AdvancedEncryption();\n            }\n            else {\n                algorithm_1 = new _BasicEncryption();\n            }\n            var p = void 0;\n            if (passwordBytes) {\n                p = passwordBytes.subarray(0, Math.min(127, passwordBytes.length));\n            }\n            else {\n                p = new Uint8Array([]);\n            }\n            if (algorithm_1._checkUserPassword(p, userValidationSalt, userPassword)) {\n                encryptionKey = this._createEncryptionKey(true, p, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = true;\n                if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                    this._hasUserPasswordOnly = true;\n                }\n            }\n            else if (password.length && algorithm_1._checkOwnerPassword(p, ownerValidationSalt, uBytes, ownerPassword)) {\n                encryptionKey = this._createEncryptionKey(false, passwordBytes, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm_1);\n                this._isUserPassword = false;\n            }\n        }\n        if (!encryptionKey) {\n            if (password) {\n                var decodedPassword = this._decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n                encryptionKey = this._prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flag, revision, keyLength, this._encryptMetaData);\n                this._isUserPassword = false;\n            }\n            else {\n                throw new Error('Cannot open an encrypted document. The password is invalid.');\n            }\n        }\n        if (algorithm >= 4) {\n            var cipherDictionary = dictionary.get('CF');\n            if (cipherDictionary) {\n                cipherDictionary.suppressEncryption = true;\n                if (cipherDictionary.has('StdCF')) {\n                    var standardCryptFilter = cipherDictionary.get('StdCF');\n                    if (standardCryptFilter && standardCryptFilter.has('AuthEvent')) {\n                        var event_1 = standardCryptFilter.get('AuthEvent');\n                        if (event_1 && event_1.name === 'EFOpen') {\n                            this._encryptOnlyAttachment = true;\n                        }\n                    }\n                }\n            }\n            this._cipherDictionary = cipherDictionary;\n            this._stream = dictionary.get('StmF') || _PdfName.get('Identity');\n            this._string = dictionary.get('StrF') || _PdfName.get('Identity');\n            this._eff = dictionary.get('EFF') || this._stream;\n        }\n        if (!encryptionKey && !this._encryptOnlyAttachment) {\n            throw new Error('Cannot open an encrypted document. The password is invalid.');\n        }\n        this._encryptionKey = encryptionKey;\n    }\n    Object.defineProperty(_PdfEncryptor.prototype, \"_md5\", {\n        get: function () {\n            if (typeof this._messageDigest === 'undefined') {\n                this._messageDigest = new _MD5();\n            }\n            return this._messageDigest;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _PdfEncryptor.prototype._createEncryptionKey = function (isUserKey, password, ownerKeySalt, uBytes, userKeySalt, ownerEncryption, userEncryption, algorithm) {\n        if (isUserKey) {\n            return algorithm._getUserKey(password, userKeySalt, userEncryption);\n        }\n        else {\n            return algorithm._getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n        }\n    };\n    _PdfEncryptor.prototype._prepareKeyData = function (id, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetaData) {\n        var hashData = new Uint8Array(40 + ownerPassword.length + id.length);\n        var i = 0;\n        var j = 0;\n        var n;\n        if (password) {\n            n = Math.min(32, password.length);\n            for (; i < n; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n            }\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        for (j = 0, n = ownerPassword.length; j < n; ++j) {\n            hashData[i++] = ownerPassword[Number.parseInt(j.toString(), 10)];\n        }\n        hashData[i++] = flags & 0xff;\n        hashData[i++] = (flags >> 8) & 0xff;\n        hashData[i++] = (flags >> 16) & 0xff;\n        hashData[i++] = (flags >>> 24) & 0xff;\n        for (j = 0, n = id.length; j < n; ++j) {\n            hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n        }\n        if (revision >= 4 && !encryptMetaData) {\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n            hashData[i++] = 0xff;\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, keyLengthInBytes);\n            }\n        }\n        var encryptionKey = hash.subarray(0, keyLengthInBytes);\n        var cipher;\n        var checkData;\n        if (revision >= 3) {\n            for (i = 0; i < 32; ++i) {\n                hashData[Number.parseInt(i.toString(), 10)] = this._defaultPasswordBytes[Number.parseInt(i.toString(), 10)];\n            }\n            for (j = 0, n = id.length; j < n; ++j) {\n                hashData[i++] = id[Number.parseInt(j.toString(), 10)];\n            }\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._md5.hash(hashData, 0, i));\n            n = encryptionKey.length;\n            var derivedKey = new Uint8Array(n);\n            for (j = 1; j <= 19; ++j) {\n                for (var k = 0; k < n; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = encryptionKey[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                checkData = cipher._encryptBlock(checkData);\n            }\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(encryptionKey);\n            checkData = cipher._encryptBlock(this._defaultPasswordBytes);\n            for (j = 0, n = checkData.length; j < n; ++j) {\n                if (userPassword[Number.parseInt(j.toString(), 10)] !== checkData[Number.parseInt(j.toString(), 10)]) {\n                    return null;\n                }\n            }\n        }\n        return encryptionKey;\n    };\n    _PdfEncryptor.prototype._decodeUserPassword = function (password, ownerPassword, revision, keyLength) {\n        var hashData = new Uint8Array(32);\n        var i = 0;\n        var j = 0;\n        var n = Math.min(32, password.length);\n        for (; i < n; ++i) {\n            hashData[Number.parseInt(i.toString(), 10)] = password[Number.parseInt(i.toString(), 10)];\n        }\n        while (i < 32) {\n            hashData[i++] = this._defaultPasswordBytes[j++];\n        }\n        var hash = this._md5.hash(hashData, 0, i);\n        var keyLengthInBytes = keyLength >> 3;\n        if (revision >= 3) {\n            for (j = 0; j < 50; ++j) {\n                hash = this._md5.hash(hash, 0, hash.length);\n            }\n        }\n        var cipher;\n        var userPassword;\n        if (revision >= 3) {\n            userPassword = ownerPassword;\n            var derivedKey = new Uint8Array(keyLengthInBytes);\n            for (j = 19; j >= 0; j--) {\n                for (var k = 0; k < keyLengthInBytes; ++k) {\n                    derivedKey[Number.parseInt(k.toString(), 10)] = hash[Number.parseInt(k.toString(), 10)] ^ j;\n                }\n                cipher = new _NormalCipherFour(derivedKey);\n                userPassword = cipher._encryptBlock(userPassword);\n            }\n        }\n        else {\n            cipher = new _NormalCipherFour(hash.subarray(0, keyLengthInBytes));\n            userPassword = cipher._encryptBlock(ownerPassword);\n        }\n        return userPassword;\n    };\n    _PdfEncryptor.prototype._createCipherTransform = function (objectNumber, generationNumber) {\n        if (this._algorithm === 4 || this._algorithm === 5) {\n            var stringCipher = this._buildCipherConstructor(this._cipherDictionary, this._string, objectNumber, generationNumber, this._encryptionKey);\n            var streamCipher = this._buildCipherConstructor(this._cipherDictionary, this._stream, objectNumber, generationNumber, this._encryptionKey);\n            return new _CipherTransform(stringCipher, streamCipher);\n        }\n        var key = this._buildObjectKey(objectNumber, generationNumber, this._encryptionKey, false);\n        return new _CipherTransform(new _NormalCipherFour(key), new _NormalCipherFour(key));\n    };\n    _PdfEncryptor.prototype._buildCipherConstructor = function (cipherDictionary, name, objectNumber, generationNumber, key) {\n        var cryptFilter = cipherDictionary.get(name.name);\n        var cfm;\n        if (cryptFilter) {\n            cfm = cryptFilter.get('CFM');\n        }\n        if (!cfm) {\n            return new _NullCipher();\n        }\n        switch (cfm.name) {\n            case 'None':\n                return new _NullCipher();\n            case 'AESV2':\n                return new _AdvancedEncryption128Cipher(this._buildObjectKey(objectNumber, generationNumber, key, true));\n            case 'AESV3':\n                return new _AdvancedEncryption256Cipher(key);\n            case 'V2':\n                return new _NormalCipherFour(this._buildObjectKey(objectNumber, generationNumber, key, false));\n        }\n        throw new FormatError('Unknown cryptography method');\n    };\n    _PdfEncryptor.prototype._buildObjectKey = function (objectNumber, generationNumber, encryptionKey, isAdvancedEncryption) {\n        if (isAdvancedEncryption === void 0) { isAdvancedEncryption = false; }\n        var key = new Uint8Array(encryptionKey.length + 9);\n        var i;\n        for (i = 0; i < encryptionKey.length; ++i) {\n            key[Number.parseInt(i.toString(), 10)] = encryptionKey[Number.parseInt(i.toString(), 10)];\n        }\n        key[i++] = objectNumber & 0xff;\n        key[i++] = (objectNumber >> 8) & 0xff;\n        key[i++] = (objectNumber >> 16) & 0xff;\n        key[i++] = generationNumber & 0xff;\n        key[i++] = (generationNumber >> 8) & 0xff;\n        if (isAdvancedEncryption) {\n            key[i++] = 0x73;\n            key[i++] = 0x41;\n            key[i++] = 0x6c;\n            key[i++] = 0x54;\n        }\n        var hash = this._md5.hash(key, 0, i);\n        return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    };\n    return _PdfEncryptor;\n}());\nexport { _PdfEncryptor };\nvar _MD5 = /** @class */ (function () {\n    function _MD5() {\n        this._r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9,\n            14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,\n            6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n        this._k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983,\n            1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632,\n            643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501,\n            -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353,\n            -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651,\n            -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744,\n            -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n    }\n    _MD5.prototype.hash = function (data, offset, length) {\n        var h0 = 1732584193;\n        var h1 = -271733879;\n        var h2 = -1732584194;\n        var h3 = 271733878;\n        var paddedLength = (length + 72) & ~63;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j = 0;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = (length << 3) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        var w = new Int32Array(16);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j, i += 4) {\n                w[Number.parseInt(j.toString(), 10)] = padded[Number.parseInt(i.toString(), 10)] |\n                    (padded[i + 1] << 8) |\n                    (padded[i + 2] << 16) |\n                    (padded[i + 3] << 24);\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = void 0;\n            var f = void 0;\n            for (j = 0; j < 64; ++j) {\n                if (j < 16) {\n                    e = (b & c) | (~b & d);\n                    f = j;\n                }\n                else if (j < 32) {\n                    e = (d & b) | (~d & c);\n                    f = (5 * j + 1) & 15;\n                }\n                else if (j < 48) {\n                    e = b ^ c ^ d;\n                    f = (3 * j + 5) & 15;\n                }\n                else {\n                    e = c ^ (b | ~d);\n                    f = (7 * j) & 15;\n                }\n                var previous = d;\n                var current = (a + e + this._k[Number.parseInt(j.toString(), 10)] + w[Number.parseInt(f.toString(), 10)]) | 0;\n                var rotate = this._r[Number.parseInt(j.toString(), 10)];\n                d = c;\n                c = b;\n                b = (b + ((current << rotate) | (current >>> (32 - rotate)))) | 0;\n                a = previous;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n        }\n        return new Uint8Array([h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >>> 24) & 0xFF, h1 & 0xFF,\n            (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >>> 24) & 0xFF, h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF,\n            (h2 >>> 24) & 0xFF, h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >>> 24) & 0xFF\n        ]);\n    };\n    return _MD5;\n}());\nexport { _MD5 };\nvar _Sha256 = /** @class */ (function () {\n    function _Sha256() {\n    }\n    _Sha256.prototype._rotateRight = function (x, n) {\n        return (x >>> n) | (x << (32 - n));\n    };\n    _Sha256.prototype._sigma = function (x) {\n        return this._rotateRight(x, 2) ^ this._rotateRight(x, 13) ^ this._rotateRight(x, 22);\n    };\n    _Sha256.prototype._sigmaPrime = function (x) {\n        return this._rotateRight(x, 6) ^ this._rotateRight(x, 11) ^ this._rotateRight(x, 25);\n    };\n    _Sha256.prototype._littleSigma = function (x) {\n        return this._rotateRight(x, 7) ^ this._rotateRight(x, 18) ^ (x >>> 3);\n    };\n    _Sha256.prototype._littleSigmaPrime = function (x) {\n        return this._rotateRight(x, 17) ^ this._rotateRight(x, 19) ^ (x >>> 10);\n    };\n    _Sha256.prototype._hash = function (data, offset, length) {\n        var h0 = 0x6a09e667;\n        var h1 = 0xbb67ae85;\n        var h2 = 0x3c6ef372;\n        var h3 = 0xa54ff53a;\n        var h4 = 0x510e527f;\n        var h5 = 0x9b05688c;\n        var h6 = 0x1f83d9ab;\n        var h7 = 0x5be0cd19;\n        var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98,\n            0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6,\n            0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3,\n            0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e,\n            0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116,\n            0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814,\n            0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n        var paddedLength = Math.ceil((length + 9) / 64) * 64;\n        var padded = new Uint8Array(paddedLength);\n        var i = 0;\n        var j;\n        for (; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 8;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Uint32Array(64);\n        for (i = 0; i < paddedLength;) {\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                    (padded[i + 1] << 16) |\n                    (padded[i + 2] << 8) |\n                    padded[i + 3];\n                i += 4;\n            }\n            for (j = 16; j < 64; ++j) {\n                w[Number.parseInt(j.toString(), 10)] = (this._littleSigmaPrime(w[j - 2]) +\n                    w[j - 7] +\n                    this._littleSigma(w[j - 15]) + w[j - 16]) | 0;\n            }\n            var a = h0;\n            var b = h1;\n            var c = h2;\n            var d = h3;\n            var e = h4;\n            var f = h5;\n            var g = h6;\n            var h = h7;\n            var t1 = void 0;\n            var t2 = void 0;\n            for (j = 0; j < 64; ++j) {\n                t1 = h +\n                    this._sigmaPrime(e) +\n                    ((e & f) ^ (~e & g)) +\n                    k[Number.parseInt(j.toString(), 10)] +\n                    w[Number.parseInt(j.toString(), 10)];\n                t2 = this._sigma(a) + ((a & b) ^ (a & c) ^ (b & c));\n                h = g;\n                g = f;\n                f = e;\n                e = (d + t1) | 0;\n                d = c;\n                c = b;\n                b = a;\n                a = (t1 + t2) | 0;\n            }\n            h0 = (h0 + a) | 0;\n            h1 = (h1 + b) | 0;\n            h2 = (h2 + c) | 0;\n            h3 = (h3 + d) | 0;\n            h4 = (h4 + e) | 0;\n            h5 = (h5 + f) | 0;\n            h6 = (h6 + g) | 0;\n            h7 = (h7 + h) | 0;\n        }\n        return new Uint8Array([(h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, (h0) & 0xFF, (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF,\n            (h1 >> 8) & 0xFF, (h1) & 0xFF, (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, (h2) & 0xFF, (h3 >> 24) & 0xFF,\n            (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, (h3) & 0xFF, (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, (h4) & 0xFF,\n            (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, (h5) & 0xFF, (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF,\n            (h6) & 0xFF, (h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, (h7) & 0xFF\n        ]);\n    };\n    return _Sha256;\n}());\nexport { _Sha256 };\nvar _Sha512 = /** @class */ (function () {\n    function _Sha512() {\n        this._k = [new _Word64(0x428a2f98, 0xd728ae22), new _Word64(0x71374491, 0x23ef65cd),\n            new _Word64(0xb5c0fbcf, 0xec4d3b2f), new _Word64(0xe9b5dba5, 0x8189dbbc),\n            new _Word64(0x3956c25b, 0xf348b538), new _Word64(0x59f111f1, 0xb605d019),\n            new _Word64(0x923f82a4, 0xaf194f9b), new _Word64(0xab1c5ed5, 0xda6d8118),\n            new _Word64(0xd807aa98, 0xa3030242), new _Word64(0x12835b01, 0x45706fbe),\n            new _Word64(0x243185be, 0x4ee4b28c), new _Word64(0x550c7dc3, 0xd5ffb4e2),\n            new _Word64(0x72be5d74, 0xf27b896f), new _Word64(0x80deb1fe, 0x3b1696b1),\n            new _Word64(0x9bdc06a7, 0x25c71235), new _Word64(0xc19bf174, 0xcf692694),\n            new _Word64(0xe49b69c1, 0x9ef14ad2), new _Word64(0xefbe4786, 0x384f25e3),\n            new _Word64(0x0fc19dc6, 0x8b8cd5b5), new _Word64(0x240ca1cc, 0x77ac9c65),\n            new _Word64(0x2de92c6f, 0x592b0275), new _Word64(0x4a7484aa, 0x6ea6e483),\n            new _Word64(0x5cb0a9dc, 0xbd41fbd4), new _Word64(0x76f988da, 0x831153b5),\n            new _Word64(0x983e5152, 0xee66dfab), new _Word64(0xa831c66d, 0x2db43210),\n            new _Word64(0xb00327c8, 0x98fb213f), new _Word64(0xbf597fc7, 0xbeef0ee4),\n            new _Word64(0xc6e00bf3, 0x3da88fc2), new _Word64(0xd5a79147, 0x930aa725),\n            new _Word64(0x06ca6351, 0xe003826f), new _Word64(0x14292967, 0x0a0e6e70),\n            new _Word64(0x27b70a85, 0x46d22ffc), new _Word64(0x2e1b2138, 0x5c26c926),\n            new _Word64(0x4d2c6dfc, 0x5ac42aed), new _Word64(0x53380d13, 0x9d95b3df),\n            new _Word64(0x650a7354, 0x8baf63de), new _Word64(0x766a0abb, 0x3c77b2a8),\n            new _Word64(0x81c2c92e, 0x47edaee6), new _Word64(0x92722c85, 0x1482353b),\n            new _Word64(0xa2bfe8a1, 0x4cf10364), new _Word64(0xa81a664b, 0xbc423001),\n            new _Word64(0xc24b8b70, 0xd0f89791), new _Word64(0xc76c51a3, 0x0654be30),\n            new _Word64(0xd192e819, 0xd6ef5218), new _Word64(0xd6990624, 0x5565a910),\n            new _Word64(0xf40e3585, 0x5771202a), new _Word64(0x106aa070, 0x32bbd1b8),\n            new _Word64(0x19a4c116, 0xb8d2d0c8), new _Word64(0x1e376c08, 0x5141ab53),\n            new _Word64(0x2748774c, 0xdf8eeb99), new _Word64(0x34b0bcb5, 0xe19b48a8),\n            new _Word64(0x391c0cb3, 0xc5c95a63), new _Word64(0x4ed8aa4a, 0xe3418acb),\n            new _Word64(0x5b9cca4f, 0x7763e373), new _Word64(0x682e6ff3, 0xd6b2b8a3),\n            new _Word64(0x748f82ee, 0x5defb2fc), new _Word64(0x78a5636f, 0x43172f60),\n            new _Word64(0x84c87814, 0xa1f0ab72), new _Word64(0x8cc70208, 0x1a6439ec),\n            new _Word64(0x90befffa, 0x23631e28), new _Word64(0xa4506ceb, 0xde82bde9),\n            new _Word64(0xbef9a3f7, 0xb2c67915), new _Word64(0xc67178f2, 0xe372532b),\n            new _Word64(0xca273ece, 0xea26619c), new _Word64(0xd186b8c7, 0x21c0c207),\n            new _Word64(0xeada7dd6, 0xcde0eb1e), new _Word64(0xf57d4f7f, 0xee6ed178),\n            new _Word64(0x06f067aa, 0x72176fba), new _Word64(0x0a637dc5, 0xa2c898a6),\n            new _Word64(0x113f9804, 0xbef90dae), new _Word64(0x1b710b35, 0x131c471b),\n            new _Word64(0x28db77f5, 0x23047d84), new _Word64(0x32caab7b, 0x40c72493),\n            new _Word64(0x3c9ebe0a, 0x15c9bebc), new _Word64(0x431d67c4, 0x9c100d4c),\n            new _Word64(0x4cc5d4be, 0xcb3e42b6), new _Word64(0x597f299c, 0xfc657e2a),\n            new _Word64(0x5fcb6fab, 0x3ad6faec), new _Word64(0x6c44198c, 0x4a475817)];\n    }\n    _Sha512.prototype._sigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(28);\n        buffer.assign(x);\n        buffer.rotateRight(34);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(39);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._sigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(14);\n        buffer.assign(x);\n        buffer.rotateRight(18);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.rotateRight(41);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigma = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(1);\n        buffer.assign(x);\n        buffer.rotateRight(8);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(7);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._littleSigmaPrime = function (result, x, buffer) {\n        result.assign(x);\n        result.rotateRight(19);\n        buffer.assign(x);\n        buffer.rotateRight(61);\n        result.xor(buffer);\n        buffer.assign(x);\n        buffer.shiftRight(6);\n        result.xor(buffer);\n    };\n    _Sha512.prototype._hash = function (data, offset, length, isMode384) {\n        if (isMode384 === void 0) { isMode384 = false; }\n        var h0;\n        var h1;\n        var h2;\n        var h3;\n        var h4;\n        var h5;\n        var h6;\n        var h7;\n        if (isMode384) {\n            h0 = new _Word64(0xcbbb9d5d, 0xc1059ed8);\n            h1 = new _Word64(0x629a292a, 0x367cd507);\n            h2 = new _Word64(0x9159015a, 0x3070dd17);\n            h3 = new _Word64(0x152fecd8, 0xf70e5939);\n            h4 = new _Word64(0x67332667, 0xffc00b31);\n            h5 = new _Word64(0x8eb44a87, 0x68581511);\n            h6 = new _Word64(0xdb0c2e0d, 0x64f98fa7);\n            h7 = new _Word64(0x47b5481d, 0xbefa4fa4);\n        }\n        else {\n            h0 = new _Word64(0x6a09e667, 0xf3bcc908);\n            h1 = new _Word64(0xbb67ae85, 0x84caa73b);\n            h2 = new _Word64(0x3c6ef372, 0xfe94f82b);\n            h3 = new _Word64(0xa54ff53a, 0x5f1d36f1);\n            h4 = new _Word64(0x510e527f, 0xade682d1);\n            h5 = new _Word64(0x9b05688c, 0x2b3e6c1f);\n            h6 = new _Word64(0x1f83d9ab, 0xfb41bd6b);\n            h7 = new _Word64(0x5be0cd19, 0x137e2179);\n        }\n        var paddedLength = Math.ceil((length + 17) / 128) * 128;\n        var padded = new Uint8Array(paddedLength);\n        var i;\n        for (i = 0; i < length; ++i) {\n            padded[Number.parseInt(i.toString(), 10)] = data[offset++];\n        }\n        padded[i++] = 0x80;\n        var n = paddedLength - 16;\n        while (i < n) {\n            padded[i++] = 0;\n        }\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = 0;\n        padded[i++] = (length >>> 29) & 0xff;\n        padded[i++] = (length >> 21) & 0xff;\n        padded[i++] = (length >> 13) & 0xff;\n        padded[i++] = (length >> 5) & 0xff;\n        padded[i++] = (length << 3) & 0xff;\n        var w = new Array(80);\n        for (i = 0; i < 80; i++) {\n            w[Number.parseInt(i.toString(), 10)] = new _Word64(0, 0);\n        }\n        var a = new _Word64(0, 0);\n        var b = new _Word64(0, 0);\n        var c = new _Word64(0, 0);\n        var d = new _Word64(0, 0);\n        var e = new _Word64(0, 0);\n        var f = new _Word64(0, 0);\n        var g = new _Word64(0, 0);\n        var h = new _Word64(0, 0);\n        var t1 = new _Word64(0, 0);\n        var t2 = new _Word64(0, 0);\n        var buffer1 = new _Word64(0, 0);\n        var buffer2 = new _Word64(0, 0);\n        var buffer3;\n        for (i = 0; i < paddedLength;) {\n            var j = void 0;\n            for (j = 0; j < 16; ++j) {\n                w[Number.parseInt(j.toString(), 10)].high =\n                    (padded[Number.parseInt(i.toString(), 10)] << 24) |\n                        (padded[i + 1] << 16) |\n                        (padded[i + 2] << 8) |\n                        padded[i + 3];\n                w[Number.parseInt(j.toString(), 10)].low =\n                    (padded[i + 4] << 24) |\n                        (padded[i + 5] << 16) |\n                        (padded[i + 6] << 8) |\n                        padded[i + 7];\n                i += 8;\n            }\n            for (j = 16; j < 80; ++j) {\n                buffer3 = w[Number.parseInt(j.toString(), 10)];\n                this._littleSigmaPrime(buffer3, w[j - 2], buffer2);\n                buffer3.add(w[j - 7]);\n                this._littleSigma(buffer1, w[j - 15], buffer2);\n                buffer3.add(buffer1);\n                buffer3.add(w[j - 16]);\n            }\n            a.assign(h0);\n            b.assign(h1);\n            c.assign(h2);\n            d.assign(h3);\n            e.assign(h4);\n            f.assign(h5);\n            g.assign(h6);\n            h.assign(h7);\n            for (j = 0; j < 80; ++j) {\n                t1.assign(h);\n                this._sigmaPrime(buffer1, e, buffer2);\n                t1.add(buffer1);\n                buffer1.assign(e);\n                buffer1.and(f);\n                buffer2.assign(e);\n                buffer2.not();\n                buffer2.and(g);\n                buffer1.xor(buffer2);\n                t1.add(buffer1);\n                t1.add(this._k[Number.parseInt(j.toString(), 10)]);\n                t1.add(w[Number.parseInt(j.toString(), 10)]);\n                this._sigma(t2, a, buffer2);\n                buffer1.assign(a);\n                buffer1.and(b);\n                buffer2.assign(a);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                buffer2.assign(b);\n                buffer2.and(c);\n                buffer1.xor(buffer2);\n                t2.add(buffer1);\n                buffer3 = h;\n                h = g;\n                g = f;\n                f = e;\n                d.add(t1);\n                e = d;\n                d = c;\n                c = b;\n                b = a;\n                buffer3.assign(t1);\n                buffer3.add(t2);\n                a = buffer3;\n            }\n            h0.add(a);\n            h1.add(b);\n            h2.add(c);\n            h3.add(d);\n            h4.add(e);\n            h5.add(f);\n            h6.add(g);\n            h7.add(h);\n        }\n        var result;\n        if (!isMode384) {\n            result = new Uint8Array(64);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n            h6.copyTo(result, 48);\n            h7.copyTo(result, 56);\n        }\n        else {\n            result = new Uint8Array(48);\n            h0.copyTo(result, 0);\n            h1.copyTo(result, 8);\n            h2.copyTo(result, 16);\n            h3.copyTo(result, 24);\n            h4.copyTo(result, 32);\n            h5.copyTo(result, 40);\n        }\n        return result;\n    };\n    return _Sha512;\n}());\nexport { _Sha512 };\nvar _Word64 = /** @class */ (function () {\n    function _Word64(high, low) {\n        this.high = high | 0;\n        this.low = low | 0;\n    }\n    _Word64.prototype.and = function (word) {\n        this.high &= word.high;\n        this.low &= word.low;\n    };\n    _Word64.prototype.or = function (word) {\n        this.high |= word.high;\n        this.low |= word.low;\n    };\n    _Word64.prototype.not = function () {\n        this.high = ~this.high;\n        this.low = ~this.low;\n    };\n    _Word64.prototype.xor = function (word) {\n        this.high ^= word.high;\n        this.low ^= word.low;\n    };\n    _Word64.prototype.shiftRight = function (places) {\n        if (places >= 32) {\n            this.low = (this.high >>> (places - 32)) | 0;\n            this.high = 0;\n        }\n        else {\n            this.low = (this.low >>> places) | (this.high << (32 - places));\n            this.high = (this.high >>> places) | 0;\n        }\n    };\n    _Word64.prototype.shiftLeft = function (places) {\n        if (places >= 32) {\n            this.high = this.low << (places - 32);\n            this.low = 0;\n        }\n        else {\n            this.high = (this.high << places) | (this.low >>> (32 - places));\n            this.low <<= places;\n        }\n    };\n    _Word64.prototype.rotateRight = function (places) {\n        var low;\n        var high;\n        if (places & 32) {\n            high = this.low;\n            low = this.high;\n        }\n        else {\n            low = this.low;\n            high = this.high;\n        }\n        places &= 31;\n        this.low = (low >>> places) | (high << (32 - places));\n        this.high = (high >>> places) | (low << (32 - places));\n    };\n    _Word64.prototype.add = function (word) {\n        var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n        var highAdd = (this.high >>> 0) + (word.high >>> 0);\n        if (lowAdd > 0xffffffff) {\n            highAdd += 1;\n        }\n        this.low = lowAdd | 0;\n        this.high = highAdd | 0;\n    };\n    _Word64.prototype.copyTo = function (bytes, offset) {\n        bytes[Number.parseInt(offset.toString(), 10)] = (this.high >>> 24) & 0xff;\n        bytes[offset + 1] = (this.high >> 16) & 0xff;\n        bytes[offset + 2] = (this.high >> 8) & 0xff;\n        bytes[offset + 3] = this.high & 0xff;\n        bytes[offset + 4] = (this.low >>> 24) & 0xff;\n        bytes[offset + 5] = (this.low >> 16) & 0xff;\n        bytes[offset + 6] = (this.low >> 8) & 0xff;\n        bytes[offset + 7] = this.low & 0xff;\n    };\n    _Word64.prototype.assign = function (word) {\n        this.high = word.high;\n        this.low = word.low;\n    };\n    return _Word64;\n}());\nexport { _Word64 };\nvar _EncryptionKey = /** @class */ (function () {\n    function _EncryptionKey() {\n    }\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha256\", {\n        get: function () {\n            if (typeof this._sha256Obj === 'undefined') {\n                this._sha256Obj = new _Sha256();\n            }\n            return this._sha256Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_EncryptionKey.prototype, \"_sha512\", {\n        get: function () {\n            if (typeof this._sha512Obj === 'undefined') {\n                this._sha512Obj = new _Sha512();\n            }\n            return this._sha512Obj;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return _EncryptionKey;\n}());\nexport { _EncryptionKey };\n// PDF17 encryption support\nvar _BasicEncryption = /** @class */ (function (_super) {\n    __extends(_BasicEncryption, _super);\n    function _BasicEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _BasicEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _BasicEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._sha256._hash(hashData, 0, hashData.length);\n        return _areArrayEqual(result, userPassword);\n    };\n    _BasicEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _BasicEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._sha256._hash(hashData, 0, hashData.length);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    return _BasicEncryption;\n}(_EncryptionKey));\nexport { _BasicEncryption };\n// PDF20 encryption support\nvar _AdvancedEncryption = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption, _super);\n    function _AdvancedEncryption() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _AdvancedEncryption.prototype._checkOwnerPassword = function (password, ownerValidationSalt, userBytes, ownerPassword) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerValidationSalt, password.length);\n        hashData.set(userBytes, password.length + ownerValidationSalt.length);\n        var result = this._hash(password, hashData, userBytes);\n        return _areArrayEqual(result, ownerPassword);\n    };\n    _AdvancedEncryption.prototype._checkUserPassword = function (password, userValidationSalt, userPassword) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userValidationSalt, password.length);\n        var result = this._hash(password, hashData, new Uint8Array([]));\n        return _areArrayEqual(result, userPassword);\n    };\n    _AdvancedEncryption.prototype._getOwnerKey = function (password, ownerKeySalt, userBytes, ownerEncryption) {\n        var hashData = new Uint8Array(password.length + 56);\n        hashData.set(password, 0);\n        hashData.set(ownerKeySalt, password.length);\n        hashData.set(userBytes, password.length + ownerKeySalt.length);\n        var key = this._hash(password, hashData, userBytes);\n        return (new _AdvancedEncryption256Cipher(key))._decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._getUserKey = function (password, userKeySalt, userEncryption) {\n        var hashData = new Uint8Array(password.length + 8);\n        hashData.set(password, 0);\n        hashData.set(userKeySalt, password.length);\n        var key = this._hash(password, hashData, new Uint8Array([]));\n        var cipher = new _AdvancedEncryption256Cipher(key);\n        return cipher._decryptBlock(userEncryption, false, new Uint8Array(16));\n    };\n    _AdvancedEncryption.prototype._hash = function (password, input, userBytes) {\n        var data = this._sha256._hash(input, 0, input.length).subarray(0, 32);\n        var encrypted = new Uint8Array([0]);\n        var i = 0;\n        while (i < 64 || encrypted[encrypted.length - 1] > i - 32) {\n            var combinedLength = password.length + data.length + userBytes.length;\n            var combinedArray = new Uint8Array(combinedLength);\n            var writeOffset = 0;\n            combinedArray.set(password, writeOffset);\n            writeOffset += password.length;\n            combinedArray.set(data, writeOffset);\n            writeOffset += data.length;\n            combinedArray.set(userBytes, writeOffset);\n            var k1 = new Uint8Array(combinedLength * 64);\n            for (var j = 0, pos = 0; j < 64; j++) {\n                k1.set(combinedArray, pos);\n                pos += combinedLength;\n            }\n            var cipher = new _AdvancedEncryption128Cipher(data.subarray(0, 16));\n            encrypted = cipher._encrypt(k1, data.subarray(16, 32));\n            var remainder = 0;\n            for (var z = 0; z < 16; z++) {\n                remainder *= 256 % 3;\n                remainder %= 3;\n                remainder += (encrypted[Number.parseInt(z.toString(), 10)] >>> 0) % 3;\n                remainder %= 3;\n            }\n            if (remainder === 2) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length);\n            }\n            else if (remainder === 1) {\n                data = this._sha512._hash(encrypted, 0, encrypted.length, true);\n            }\n            else if (remainder === 0) {\n                data = this._sha256._hash(encrypted, 0, encrypted.length);\n            }\n            i++;\n        }\n        return data.subarray(0, 32);\n    };\n    return _AdvancedEncryption;\n}(_EncryptionKey));\nexport { _AdvancedEncryption };\nvar _Cipher = /** @class */ (function () {\n    function _Cipher() {\n    }\n    return _Cipher;\n}());\nexport { _Cipher };\nvar _NormalCipherFour = /** @class */ (function (_super) {\n    __extends(_NormalCipherFour, _super);\n    function _NormalCipherFour(key) {\n        var _this = _super.call(this) || this;\n        _this._a = 0;\n        _this._b = 0;\n        var s = new Uint8Array(256);\n        for (var i = 0; i < 256; ++i) {\n            s[Number.parseInt(i.toString(), 10)] = i;\n        }\n        var keyLength = key.length;\n        for (var i = 0, j = 0; i < 256; ++i) {\n            var buffer = s[Number.parseInt(i.toString(), 10)];\n            j = (j + buffer + key[i % keyLength]) & 0xff;\n            s[Number.parseInt(i.toString(), 10)] = s[Number.parseInt(j.toString(), 10)];\n            s[Number.parseInt(j.toString(), 10)] = buffer;\n        }\n        _this._s = s;\n        return _this;\n    }\n    _NormalCipherFour.prototype._encryptBlock = function (data) {\n        var a = this._a;\n        var b = this._b;\n        var s = this._s;\n        var n = data.length;\n        var output = new Uint8Array(n);\n        for (var i = 0; i < n; ++i) {\n            a = (a + 1) & 0xff;\n            var first = s[Number.parseInt(a.toString(), 10)];\n            b = (b + first) & 0xff;\n            var second = s[Number.parseInt(b.toString(), 10)];\n            s[Number.parseInt(a.toString(), 10)] = second;\n            s[Number.parseInt(b.toString(), 10)] = first;\n            output[Number.parseInt(i.toString(), 10)] = data[Number.parseInt(i.toString(), 10)] ^ s[(first + second) & 0xff];\n        }\n        this._a = a;\n        this._b = b;\n        return output;\n    };\n    _NormalCipherFour.prototype._decryptBlock = function (data) {\n        return this._encryptBlock(data);\n    };\n    _NormalCipherFour.prototype._encrypt = function (data) {\n        return this._encryptBlock(data);\n    };\n    return _NormalCipherFour;\n}(_Cipher));\nexport { _NormalCipherFour };\nvar _AdvancedEncryptionBaseCipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryptionBaseCipher, _super);\n    function _AdvancedEncryptionBaseCipher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._buffer = new Uint8Array(16);\n        _this._position = 0;\n        _this._s = new Uint8Array([\n            0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b,\n            0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0,\n            0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26,\n            0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,\n            0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2,\n            0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0,\n            0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed,\n            0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,\n            0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f,\n            0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5,\n            0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec,\n            0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,\n            0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14,\n            0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c,\n            0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d,\n            0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,\n            0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f,\n            0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e,\n            0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11,\n            0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,\n            0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f,\n            0xb0, 0x54, 0xbb, 0x16\n        ]);\n        _this._inverseS = new Uint8Array([\n            0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e,\n            0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87,\n            0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32,\n            0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,\n            0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49,\n            0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16,\n            0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50,\n            0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,\n            0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05,\n            0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02,\n            0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41,\n            0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,\n            0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8,\n            0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89,\n            0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b,\n            0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,\n            0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59,\n            0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d,\n            0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d,\n            0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,\n            0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63,\n            0x55, 0x21, 0x0c, 0x7d\n        ]);\n        _this._mix = new Uint32Array([\n            0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,\n            0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45,\n            0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb,\n            0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381,\n            0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf,\n            0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,\n            0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28,\n            0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012,\n            0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec,\n            0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e,\n            0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd,\n            0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,\n            0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89,\n            0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b,\n            0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815,\n            0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f,\n            0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa,\n            0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8,\n            0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36,\n            0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c,\n            0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,\n            0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea,\n            0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4,\n            0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e,\n            0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360,\n            0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502,\n            0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,\n            0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd,\n            0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3,\n            0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621,\n            0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f,\n            0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55,\n            0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,\n            0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844,\n            0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba,\n            0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480,\n            0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce,\n            0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67,\n            0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929,\n            0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713,\n            0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,\n            0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f,\n            0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3\n        ]);\n        return _this;\n    }\n    Object.defineProperty(_AdvancedEncryptionBaseCipher.prototype, \"_mixCol\", {\n        get: function () {\n            if (typeof this._mixC === 'undefined') {\n                this._mixC = new Uint8Array(256);\n                for (var i = 0; i < 256; i++) {\n                    if (i < 128) {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = i << 1;\n                    }\n                    else {\n                        this._mixC[Number.parseInt(i.toString(), 10)] = (i << 1) ^ 0x1b;\n                    }\n                }\n            }\n            return this._mixC;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _AdvancedEncryptionBaseCipher.prototype._decrypt = function (input, key) {\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n            t = state[13];\n            state[13] = state[9];\n            state[9] = state[5];\n            state[5] = state[1];\n            state[1] = t;\n            t = state[14];\n            u = state[10];\n            state[14] = state[6];\n            state[10] = state[2];\n            state[6] = t;\n            state[2] = u;\n            t = state[15];\n            u = state[11];\n            v = state[7];\n            state[15] = state[3];\n            state[11] = t;\n            state[7] = u;\n            state[3] = v;\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = this._mix[state[Number.parseInt(j.toString(), 10)]];\n                var s1 = this._mix[state[j + 1]];\n                var s2 = this._mix[state[j + 2]];\n                var s3 = this._mix[state[j + 3]];\n                t = s0 ^ (s1 >>> 8) ^ (s1 << 24) ^ (s2 >>> 16) ^ (s2 << 16) ^ (s3 >>> 24) ^ (s3 << 8);\n                state[Number.parseInt(j.toString(), 10)] = (t >>> 24) & 0xff;\n                state[j + 1] = (t >> 16) & 0xff;\n                state[j + 2] = (t >> 8) & 0xff;\n                state[j + 3] = t & 0xff;\n            }\n        }\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = this._inverseS[state[Number.parseInt(j.toString(), 10)]];\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encryptBlock = function (input, key) {\n        var s = this._s;\n        var t;\n        var u;\n        var v;\n        var state = new Uint8Array(16);\n        state.set(input);\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(j.toString(), 10)];\n        }\n        for (var i = 1; i < this._cyclesOfRepetition; i++) {\n            for (var j = 0; j < 16; ++j) {\n                state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n            }\n            v = state[1];\n            state[1] = state[5];\n            state[5] = state[9];\n            state[9] = state[13];\n            state[13] = v;\n            v = state[2];\n            u = state[6];\n            state[2] = state[10];\n            state[6] = state[14];\n            state[10] = v;\n            state[14] = u;\n            v = state[3];\n            u = state[7];\n            t = state[11];\n            state[3] = state[15];\n            state[7] = v;\n            state[11] = u;\n            state[15] = t;\n            for (var j = 0; j < 16; j += 4) {\n                var s0 = state[j + 0];\n                var s1 = state[j + 1];\n                var s2 = state[j + 2];\n                var s3 = state[j + 3];\n                t = s0 ^ s1 ^ s2 ^ s3;\n                state[j + 0] ^= t ^ this._mixCol[s0 ^ s1];\n                state[j + 1] ^= t ^ this._mixCol[s1 ^ s2];\n                state[j + 2] ^= t ^ this._mixCol[s2 ^ s3];\n                state[j + 3] ^= t ^ this._mixCol[s3 ^ s0];\n            }\n            for (var j = 0, k = i * 16; j < 16; ++j, ++k) {\n                state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n            }\n        }\n        for (var j = 0; j < 16; ++j) {\n            state[Number.parseInt(j.toString(), 10)] = s[state[Number.parseInt(j.toString(), 10)]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n            state[Number.parseInt(j.toString(), 10)] ^= key[Number.parseInt(k.toString(), 10)];\n        }\n        return state;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlockHelper = function (data, finalize) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        var iv = this._iv;\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            var plain = this._decrypt(buffer, this._key);\n            for (var j = 0; j < 16; ++j) {\n                plain[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            iv = buffer;\n            result.push(plain);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        if (finalize) {\n            var lastBlock = result[result.length - 1];\n            var length_1 = lastBlock[15];\n            if (length_1 <= 16) {\n                for (var i = 15, ii = 16 - length_1; i >= ii; --i) {\n                    if (lastBlock[Number.parseInt(i.toString(), 10)] !== length_1) {\n                        length_1 = 0;\n                        break;\n                    }\n                }\n                outputLength -= length_1;\n                result[result.length - 1] = lastBlock.subarray(0, 16 - length_1);\n            }\n        }\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    _AdvancedEncryptionBaseCipher.prototype._decryptBlock = function (data, finalize, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        if (iv) {\n            this._iv = iv;\n        }\n        else {\n            for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n                buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            }\n            if (bufferLength < 16) {\n                this._bufferLength = bufferLength;\n                return new Uint8Array(0);\n            }\n            this._iv = buffer;\n            data = data.subarray(16);\n        }\n        this._buffer = new Uint8Array(16);\n        this._bufferLength = 0;\n        this._decryptBlock = this._decryptBlockHelper;\n        return this._decryptBlock(data, finalize);\n    };\n    _AdvancedEncryptionBaseCipher.prototype._encrypt = function (data, iv) {\n        var sourceLength = data.length;\n        var buffer = this._buffer;\n        var bufferLength = this._position;\n        var result = [];\n        if (!iv) {\n            iv = new Uint8Array(16);\n        }\n        for (var i = 0; i < sourceLength; ++i) {\n            buffer[Number.parseInt(bufferLength.toString(), 10)] = data[Number.parseInt(i.toString(), 10)];\n            ++bufferLength;\n            if (bufferLength < 16) {\n                continue;\n            }\n            for (var j = 0; j < 16; ++j) {\n                buffer[Number.parseInt(j.toString(), 10)] ^= iv[Number.parseInt(j.toString(), 10)];\n            }\n            var cipher = this._encryptBlock(buffer, this._key);\n            iv = cipher;\n            result.push(cipher);\n            buffer = new Uint8Array(16);\n            bufferLength = 0;\n        }\n        this._buffer = buffer;\n        this._bufferLength = bufferLength;\n        this._iv = iv;\n        if (result.length === 0) {\n            return new Uint8Array(0);\n        }\n        var outputLength = 16 * result.length;\n        var output = new Uint8Array(outputLength);\n        for (var i = 0, j = 0; i < result.length; ++i, j += 16) {\n            output.set(result[Number.parseInt(i.toString(), 10)], j);\n        }\n        return output;\n    };\n    return _AdvancedEncryptionBaseCipher;\n}(_Cipher));\nexport { _AdvancedEncryptionBaseCipher };\nvar _AdvancedEncryption128Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption128Cipher, _super);\n    function _AdvancedEncryption128Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 10;\n        _this._keySize = 160;\n        _this._key = new Uint8Array([\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,\n            0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6,\n            0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72,\n            0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc,\n            0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10,\n            0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e,\n            0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5,\n            0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94,\n            0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02,\n            0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d,\n            0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d,\n            0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f,\n            0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb,\n            0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c,\n            0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a,\n            0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd,\n            0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a,\n            0x74, 0xe8, 0xcb, 0x8d\n        ]);\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption128Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 176;\n        var s = this._s;\n        var rcon = this._key;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        for (var j = 16, i = 1; j < count; ++i) {\n            var t1 = result[j - 3];\n            var t2 = result[j - 2];\n            var t3 = result[j - 1];\n            var t4 = result[j - 4];\n            t1 = s[Number.parseInt(t1.toString(), 10)];\n            t2 = s[Number.parseInt(t2.toString(), 10)];\n            t3 = s[Number.parseInt(t3.toString(), 10)];\n            t4 = s[Number.parseInt(t4.toString(), 10)];\n            t1 ^= rcon[Number.parseInt(i.toString(), 10)];\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 16];\n                result[j + 1] = t2 ^= result[j - 15];\n                result[j + 2] = t3 ^= result[j - 14];\n                result[j + 3] = t4 ^= result[j - 13];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption128Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption128Cipher };\nvar _AdvancedEncryption256Cipher = /** @class */ (function (_super) {\n    __extends(_AdvancedEncryption256Cipher, _super);\n    function _AdvancedEncryption256Cipher(key) {\n        var _this = _super.call(this) || this;\n        _this._cyclesOfRepetition = 14;\n        _this._keySize = 224;\n        _this._key = _this._expandKey(key);\n        return _this;\n    }\n    _AdvancedEncryption256Cipher.prototype._expandKey = function (cipherKey) {\n        var count = 240;\n        var s = this._s;\n        var result = new Uint8Array(count);\n        result.set(cipherKey);\n        var r = 1;\n        var t1;\n        var t2;\n        var t3;\n        var t4;\n        for (var j = 32, i = 1; j < count; ++i) {\n            if (j % 32 === 16) {\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n            }\n            else if (j % 32 === 0) {\n                t1 = result[j - 3];\n                t2 = result[j - 2];\n                t3 = result[j - 1];\n                t4 = result[j - 4];\n                t1 = s[Number.parseInt(t1.toString(), 10)];\n                t2 = s[Number.parseInt(t2.toString(), 10)];\n                t3 = s[Number.parseInt(t3.toString(), 10)];\n                t4 = s[Number.parseInt(t4.toString(), 10)];\n                t1 ^= r;\n                r = r << 1;\n                if (r >= 256) {\n                    r = (r ^ 0x1b) & 0xff;\n                }\n            }\n            for (var n = 0; n < 4; ++n) {\n                result[Number.parseInt(j.toString(), 10)] = t1 ^= result[j - 32];\n                result[j + 1] = t2 ^= result[j - 31];\n                result[j + 2] = t3 ^= result[j - 30];\n                result[j + 3] = t4 ^= result[j - 29];\n                j += 4;\n            }\n        }\n        return result;\n    };\n    return _AdvancedEncryption256Cipher;\n}(_AdvancedEncryptionBaseCipher));\nexport { _AdvancedEncryption256Cipher };\nvar _NullCipher = /** @class */ (function (_super) {\n    __extends(_NullCipher, _super);\n    function _NullCipher() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    _NullCipher.prototype._decryptBlock = function (data) {\n        return data;\n    };\n    _NullCipher.prototype._encrypt = function (data) {\n        return data;\n    };\n    return _NullCipher;\n}(_Cipher));\nexport { _NullCipher };\nvar _CipherTransform = /** @class */ (function () {\n    function _CipherTransform(stringCipher, streamCipher) {\n        this._stringCipher = stringCipher;\n        this._streamCipher = streamCipher;\n    }\n    _CipherTransform.prototype.createStream = function (stream, length) {\n        return new _PdfDecryptStream(stream, length, this._streamCipher);\n    };\n    _CipherTransform.prototype.decryptString = function (s) {\n        var stringBytes = _stringToBytes(s, false, true);\n        var decryptedBytes = this._stringCipher._decryptBlock(stringBytes, true);\n        return _bytesToString(decryptedBytes);\n    };\n    _CipherTransform.prototype.encryptString = function (s) {\n        if (this._stringCipher instanceof _AdvancedEncryptionBaseCipher) {\n            var length_2 = s.length;\n            var pad = 16 - (length_2 % 16);\n            s += String.fromCharCode(pad).repeat(pad);\n            var iv = new Uint8Array(16);\n            if (typeof crypto !== 'undefined') {\n                crypto.getRandomValues(iv);\n            }\n            else {\n                for (var i = 0; i < 16; i++) {\n                    iv[Number.parseInt(i.toString(), 10)] = Math.floor(256 * Math.random());\n                }\n            }\n            var data = this._stringCipher._encrypt(_stringToBytes(s, false, true), iv);\n            var buffer = new Uint8Array(16 + data.length);\n            buffer.set(iv);\n            buffer.set(data, 16);\n            return _bytesToString(buffer);\n        }\n        return _bytesToString(this._stringCipher._encrypt(_stringToBytes(s, false, true)));\n    };\n    return _CipherTransform;\n}());\nexport { _CipherTransform };\n","import { _PdfCommand, _PdfName, _PdfDictionary, _isCommand, _PdfReference, _isName } from './pdf-primitives';\nimport { _isWhiteSpace, FormatError, ParserEndOfFileException, _decodeText } from './utils';\nimport { _PdfNullStream } from './base-stream';\nimport { PdfPredictorStream } from './predictor-stream';\nimport { _PdfFlateStream } from './flate-stream';\nimport { _CipherTransform } from './security/encryptor';\nvar maxCacheLength = 1000;\nvar maxNumberLength = 5552;\nvar endOfFile = 'EOF';\nvar specialChars = [\n    1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n];\nvar _PdfLexicalOperator = /** @class */ (function () {\n    function _PdfLexicalOperator(stream) {\n        this.stream = stream;\n        this.nextChar();\n        this.stringBuffer = [];\n        this._hexStringNumber = 0;\n        this.beginInlineImagePosition = -1;\n    }\n    _PdfLexicalOperator.prototype.nextChar = function () {\n        return (this.currentChar = this.stream.getByte());\n    };\n    _PdfLexicalOperator.prototype.peekChar = function () {\n        return this.stream.peekByte();\n    };\n    _PdfLexicalOperator.prototype.getNumber = function () {\n        var ch = this.currentChar;\n        var eNotation = false;\n        var divideBy = 0;\n        var sign = 0;\n        if (ch === 0x2d) {\n            sign = -1;\n            ch = this.nextChar();\n            if (ch === 0x2d) {\n                ch = this.nextChar();\n            }\n        }\n        else if (ch === 0x2b) {\n            sign = 1;\n            ch = this.nextChar();\n        }\n        if (ch === 0x0a || ch === 0x0d) {\n            do {\n                ch = this.nextChar();\n            } while (ch === 0x0a || ch === 0x0d);\n        }\n        if (ch === 0x2e) {\n            divideBy = 10;\n            ch = this.nextChar();\n        }\n        if (ch < 0x30 || ch > 0x39) {\n            if (_isWhiteSpace(ch) || ch === -1) {\n                if (divideBy === 10 && sign === 0) {\n                    return 0;\n                }\n                if (divideBy === 0 && sign === -1) {\n                    return 0;\n                }\n            }\n            throw new FormatError(\"Invalid number: \" + String.fromCharCode(ch) + \" (charCode \" + ch + \")\");\n        }\n        sign = sign || 1;\n        var baseValue = ch - 0x30;\n        var powerValue = 0;\n        var powerValueSign = 1;\n        ch = this.nextChar();\n        while (ch >= 0) {\n            if (ch >= 0x30 && ch <= 0x39) {\n                var currentDigit = ch - 0x30;\n                if (eNotation) {\n                    powerValue = powerValue * 10 + currentDigit;\n                }\n                else {\n                    if (divideBy !== 0) {\n                        divideBy *= 10;\n                    }\n                    baseValue = baseValue * 10 + currentDigit;\n                }\n            }\n            else if (ch === 0x2e) {\n                if (divideBy === 0) {\n                    divideBy = 1;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === 0x2d) {\n                ch = this.nextChar();\n                continue;\n            }\n            else if (ch === 0x45 || ch === 0x65) {\n                ch = this.peekChar();\n                if (ch === 0x2b || ch === 0x2d) {\n                    powerValueSign = ch === 0x2d ? -1 : 1;\n                    this.nextChar();\n                }\n                else if (ch < 0x30 || ch > 0x39) {\n                    break;\n                }\n                eNotation = true;\n            }\n            else {\n                break;\n            }\n            ch = this.nextChar();\n        }\n        if (divideBy !== 0) {\n            baseValue /= divideBy;\n        }\n        if (eNotation) {\n            baseValue *= Math.pow(10, (powerValueSign * powerValue));\n        }\n        return sign * baseValue;\n    };\n    _PdfLexicalOperator.prototype.getString = function () {\n        var numParen = 1;\n        var done = false;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.nextChar();\n        while (true) { // eslint-disable-line\n            var charBuffered = false;\n            switch (ch | 0) {\n                case -1:\n                    done = true;\n                    break;\n                case 0x28:\n                    ++numParen;\n                    stringBuffer.push('(');\n                    break;\n                case 0x29:\n                    if (--numParen === 0) {\n                        this.nextChar();\n                        done = true;\n                    }\n                    else {\n                        stringBuffer.push(')');\n                    }\n                    break;\n                case 0x5c:\n                    ch = this.nextChar();\n                    switch (ch) {\n                        case -1:\n                            done = true;\n                            break;\n                        case 0x6e:\n                            stringBuffer.push('\\n');\n                            break;\n                        case 0x72:\n                            stringBuffer.push('\\r');\n                            break;\n                        case 0x74:\n                            stringBuffer.push('\\t');\n                            break;\n                        case 0x62:\n                            stringBuffer.push('\\b');\n                            break;\n                        case 0x66:\n                            stringBuffer.push('\\f');\n                            break;\n                        case 0x5c:\n                        case 0x28:\n                        case 0x29:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                            var x = ch & 0x0f; // eslint-disable-line\n                            ch = this.nextChar();\n                            charBuffered = true;\n                            if (ch >= 0x30 && ch <= 0x37) {\n                                x = (x << 3) + (ch & 0x0f);\n                                ch = this.nextChar();\n                                if (ch >= 0x30 && ch <= 0x37) {\n                                    charBuffered = false;\n                                    x = (x << 3) + (ch & 0x0f);\n                                }\n                            }\n                            stringBuffer.push(String.fromCharCode(x));\n                            break;\n                        case 0x0d:\n                            if (this.peekChar() === 0x0a) {\n                                this.nextChar();\n                            }\n                            break;\n                        case 0x0a:\n                            break;\n                        default:\n                            stringBuffer.push(String.fromCharCode(ch));\n                            break;\n                    }\n                    break;\n                default:\n                    stringBuffer.push(String.fromCharCode(ch));\n                    break;\n            }\n            if (done) {\n                break;\n            }\n            if (!charBuffered) {\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getName = function () {\n        var ch;\n        var previousCh;\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            if (ch === 0x23) {\n                ch = this.nextChar();\n                if (specialChars[ch]) { // eslint-disable-line\n                    stringBuffer.push('#');\n                    break;\n                }\n                var x = this._toHexDigit(ch);\n                if (x !== -1) {\n                    previousCh = ch;\n                    ch = this.nextChar();\n                    var x2 = this._toHexDigit(ch);\n                    if (x2 === -1) {\n                        stringBuffer.push('#', String.fromCharCode(previousCh));\n                        if (specialChars[ch]) { // eslint-disable-line\n                            break;\n                        }\n                        stringBuffer.push(String.fromCharCode(ch));\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((x << 4) | x2));\n                }\n                else {\n                    stringBuffer.push('#', String.fromCharCode(ch));\n                }\n            }\n            else {\n                stringBuffer.push(String.fromCharCode(ch));\n            }\n            ch = this.nextChar();\n        }\n        return _PdfName.get(stringBuffer.join(''));\n    };\n    _PdfLexicalOperator.prototype.getHexString = function () {\n        var stringBuffer = this.stringBuffer;\n        stringBuffer.length = 0;\n        var ch = this.currentChar;\n        var isFirstHex = true;\n        var firstDigit;\n        var secondDigit;\n        this._hexStringNumber = 0;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                break;\n            }\n            else if (ch === 0x3e) {\n                this.nextChar();\n                break;\n            }\n            else if (specialChars[ch] === 1) { // eslint-disable-line\n                ch = this.nextChar();\n                continue;\n            }\n            else {\n                if (isFirstHex) {\n                    firstDigit = this._toHexDigit(ch);\n                    if (firstDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                }\n                else {\n                    secondDigit = this._toHexDigit(ch);\n                    if (secondDigit === -1) {\n                        ch = this.nextChar();\n                        continue;\n                    }\n                    stringBuffer.push(String.fromCharCode((firstDigit << 4) | secondDigit));\n                }\n                isFirstHex = !isFirstHex;\n                ch = this.nextChar();\n            }\n        }\n        return stringBuffer.join('');\n    };\n    _PdfLexicalOperator.prototype.getObject = function () {\n        var comment = false;\n        var ch = this.currentChar;\n        while (true) { // eslint-disable-line\n            if (ch < 0) {\n                return endOfFile;\n            }\n            if (comment) {\n                if (ch === 0x0a || ch === 0x0d) {\n                    comment = false;\n                }\n            }\n            else if (ch === 0x25) {\n                comment = true;\n            }\n            else if (specialChars[ch] !== 1) { // eslint-disable-line\n                break;\n            }\n            ch = this.nextChar();\n        }\n        switch (ch | 0) {\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x2b:\n            case 0x2d:\n            case 0x2e:\n                return this.getNumber();\n            case 0x28:\n                return this.getString();\n            case 0x2f:\n                return this.getName();\n            case 0x5b:\n                this.nextChar();\n                return _PdfCommand.get('[');\n            case 0x5d:\n                this.nextChar();\n                return _PdfCommand.get(']');\n            case 0x3c:\n                ch = this.nextChar();\n                if (ch === 0x3c) {\n                    this.nextChar();\n                    return _PdfCommand.get('<<');\n                }\n                return this.getHexString();\n            case 0x3e:\n                ch = this.nextChar();\n                if (ch === 0x3e) {\n                    this.nextChar();\n                    return _PdfCommand.get('>>');\n                }\n                return _PdfCommand.get('>');\n            case 0x7b:\n                this.nextChar();\n                return _PdfCommand.get('{');\n            case 0x7d:\n                this.nextChar();\n                return _PdfCommand.get('}');\n            case 0x29:\n                this.nextChar();\n                throw new FormatError(\"Illegal character: \" + ch);\n        }\n        var str = String.fromCharCode(ch);\n        if (ch < 0x20 || ch > 0x7f) {\n            var nextCh = this.peekChar();\n            if (nextCh >= 0x20 && nextCh <= 0x7f) {\n                this.nextChar();\n                return _PdfCommand.get(str);\n            }\n        }\n        ch = this.nextChar();\n        while (ch >= 0 && !specialChars[ch]) { // eslint-disable-line\n            var possibleCommand = str + String.fromCharCode(ch);\n            if (str.length === 128) {\n                throw new FormatError(\"Command token too long: \" + str.length);\n            }\n            str = possibleCommand;\n            ch = this.nextChar();\n        }\n        if (str === 'true') {\n            return true;\n        }\n        if (str === 'false') {\n            return false;\n        }\n        if (str === 'null') {\n            return null;\n        }\n        if (str === 'BI') {\n            this.beginInlineImagePosition = this.stream.position;\n        }\n        return _PdfCommand.get(str);\n    };\n    _PdfLexicalOperator.prototype.peekObj = function () {\n        var streamPos = this.stream.position;\n        var currentChar = this.currentChar;\n        var beginInlineImagePosition = this.beginInlineImagePosition;\n        var nextObj; // eslint-disable-line\n        try {\n            nextObj = this.getObject();\n        }\n        catch (ex) { } // eslint-disable-line\n        this.stream.position = streamPos;\n        this.currentChar = currentChar;\n        this.beginInlineImagePosition = beginInlineImagePosition;\n        return nextObj;\n    };\n    _PdfLexicalOperator.prototype.skipToNextLine = function () {\n        var ch = this.currentChar;\n        while (ch >= 0) {\n            if (ch === 0x0d) {\n                ch = this.nextChar();\n                if (ch === 0x0a) {\n                    this.nextChar();\n                }\n                break;\n            }\n            else if (ch === 0x0a) {\n                this.nextChar();\n                break;\n            }\n            ch = this.nextChar();\n        }\n    };\n    _PdfLexicalOperator.prototype._toHexDigit = function (ch) {\n        if (ch >= 0x30 && ch <= 0x39) {\n            return ch & 0x0f;\n        }\n        if ((ch >= 0x41 && ch <= 0x46) || (ch >= 0x61 && ch <= 0x66)) {\n            return (ch & 0x0f) + 9;\n        }\n        return -1;\n    };\n    return _PdfLexicalOperator;\n}());\nexport { _PdfLexicalOperator };\nvar _PdfParser = /** @class */ (function () {\n    function _PdfParser(lexicalOperator, xref, allowStreams, recoveryMode, encryptor) {\n        if (allowStreams === void 0) { allowStreams = false; }\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        this._isColorSpace = false;\n        this._isPassword = false;\n        this.lexicalOperator = lexicalOperator;\n        this.xref = xref;\n        this.allowStreams = allowStreams;\n        this.recoveryMode = recoveryMode;\n        this.imageCache = new Map();\n        this._encryptor = encryptor;\n        this.refill();\n    }\n    _PdfParser.prototype.refill = function () {\n        this.first = this.lexicalOperator.getObject();\n        this.second = this.lexicalOperator.getObject();\n    };\n    _PdfParser.prototype.shift = function () {\n        if (this.second instanceof _PdfCommand && this.second.command === 'ID') {\n            this.first = this.second;\n            this.second = null;\n        }\n        else {\n            this.first = this.second;\n            this.second = this.lexicalOperator.getObject();\n        }\n    };\n    _PdfParser.prototype.tryShift = function () {\n        try {\n            this.shift();\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    _PdfParser.prototype.getObject = function (arguement1, arguement2, arguement3) {\n        var cipherTransform;\n        var first = this.first; // eslint-disable-line\n        this.shift();\n        if (first instanceof _PdfCommand) {\n            switch (first.command) {\n                case 'BI':\n                    if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                        return this.makeInlineImage(arguement1, arguement2, arguement3);\n                    }\n                    else if (arguement1 instanceof _CipherTransform) {\n                        return this.makeInlineImage(arguement1);\n                    }\n                    else {\n                        return this.makeInlineImage();\n                    }\n                case '[':\n                    var array = []; // eslint-disable-line\n                    while (!_isCommand(this.first, ']') && this.first !== endOfFile) {\n                        var entry = void 0; // eslint-disable-line\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                            entry = this.getObject(arguement1, arguement2, arguement3);\n                        }\n                        else if (arguement1 instanceof _CipherTransform) {\n                            cipherTransform = arguement1;\n                            entry = this.getObject(arguement1);\n                        }\n                        else {\n                            entry = this.getObject(arguement1);\n                        }\n                        if (array.length === 0 && _isName(entry, 'Indexed')) {\n                            this._isColorSpace = true;\n                        }\n                        entry = _decodeText(entry, this._isColorSpace, this._isPassword);\n                        array.push(entry);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return array;\n                        }\n                        throw new ParserEndOfFileException('End of file inside array.');\n                    }\n                    this._isColorSpace = false;\n                    this.shift();\n                    return array;\n                case '<<':\n                    var dictionary = new _PdfDictionary(this.xref); // eslint-disable-line\n                    while (!_isCommand(this.first, '>>') && this.first !== endOfFile) {\n                        if (!(this.first instanceof _PdfName)) {\n                            this.shift();\n                            continue;\n                        }\n                        var key = this.first.name;\n                        if (key === 'U' || key === 'O' || key === 'ID') {\n                            this._isPassword = true;\n                        }\n                        this.shift();\n                        var isEnd = this._checkEnd();\n                        if (isEnd) {\n                            break;\n                        }\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                        }\n                        var value = void 0; // eslint-disable-line\n                        if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                            value = this.getObject(arguement1, arguement2, arguement3);\n                        }\n                        else if (arguement1 instanceof _CipherTransform) {\n                            value = this.getObject(arguement1);\n                        }\n                        else {\n                            value = this.getObject();\n                        }\n                        value = _decodeText(value, this._isColorSpace, this._isPassword);\n                        this._isPassword = false;\n                        dictionary.set(key, value);\n                    }\n                    if (this.first === endOfFile) {\n                        if (this.recoveryMode) {\n                            return dictionary;\n                        }\n                        throw new ParserEndOfFileException('End of file inside dictionary.');\n                    }\n                    if (_isCommand(this.second, 'stream')) {\n                        if (this.allowStreams === true) {\n                            if (arguement1 instanceof _CipherTransform) {\n                                cipherTransform = arguement1;\n                            }\n                            else if (arguement3 && typeof arguement2 === 'number') {\n                                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n                            }\n                            if (typeof arguement2 === 'boolean' && arguement2) {\n                                return this.makeStream(dictionary, cipherTransform, arguement2);\n                            }\n                            else {\n                                return this.makeStream(dictionary, cipherTransform);\n                            }\n                        }\n                        else {\n                            return dictionary;\n                        }\n                    }\n                    this.shift();\n                    return dictionary;\n                default:\n                    return first;\n            }\n        }\n        if (Number.isInteger(first)) {\n            if (Number.isInteger(this.first) && _isCommand(this.second, 'R')) {\n                var ref = _PdfReference.get(first, this.first);\n                this.shift();\n                this.shift();\n                return ref;\n            }\n            return first;\n        }\n        if (typeof first === 'string') {\n            if (arguement1 instanceof _CipherTransform) {\n                cipherTransform = arguement1;\n            }\n            else if (typeof arguement1 === 'number' && typeof arguement2 === 'number') {\n                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n            }\n            if (cipherTransform) {\n                return cipherTransform.decryptString(first);\n            }\n            return first;\n        }\n        return first;\n    };\n    _PdfParser.prototype.findDiscreteDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var foundEnd = false;\n        var b;\n        var markerLength;\n        b = stream.getByte();\n        while (b !== -1) {\n            if (b !== 0xff) {\n                b = stream.getByte();\n                continue;\n            }\n            switch (stream.getByte()) {\n                case 0x00:\n                    break;\n                case 0xff:\n                    stream.skip(-1);\n                    break;\n                case 0xd9:\n                    foundEnd = true;\n                    break;\n                case 0xc0:\n                case 0xc1:\n                case 0xc2:\n                case 0xc3:\n                case 0xc5:\n                case 0xc6:\n                case 0xc7:\n                case 0xc9:\n                case 0xca:\n                case 0xcb:\n                case 0xcd:\n                case 0xce:\n                case 0xcf:\n                case 0xc4:\n                case 0xcc:\n                case 0xda:\n                case 0xdb:\n                case 0xdc:\n                case 0xdd:\n                case 0xde:\n                case 0xdf:\n                case 0xe0:\n                case 0xe1:\n                case 0xe2:\n                case 0xe3:\n                case 0xe4:\n                case 0xe5:\n                case 0xe6:\n                case 0xe7:\n                case 0xe8:\n                case 0xe9:\n                case 0xea:\n                case 0xeb:\n                case 0xec:\n                case 0xed:\n                case 0xee:\n                case 0xef:\n                case 0xfe:\n                    markerLength = stream.getUnsignedInteger16();\n                    if (markerLength > 2) {\n                        stream.skip(markerLength - 2);\n                    }\n                    else {\n                        stream.skip(-2);\n                    }\n                    break;\n            }\n            if (foundEnd) {\n                break;\n            }\n            b = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (b === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        while ((ch = stream.getByte()) !== -1) { // eslint-disable-line\n            if (ch === 0x7e) {\n                var tildePos = stream.position;\n                ch = stream.peekByte();\n                while (_isWhiteSpace(ch)) {\n                    stream.skip();\n                    ch = stream.peekByte();\n                }\n                if (ch === 0x3e) {\n                    stream.skip();\n                    break;\n                }\n                if (stream.position > tildePos) {\n                    var maybeEI = stream.peekBytes(2);\n                    if (maybeEI[0] === 0x45 && maybeEI[1] === 0x49) {\n                        break;\n                    }\n                }\n            }\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.findHexDecodeInlineStreamEnd = function (stream) {\n        var startPos = stream.position;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (ch === 0x3e) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n        var length = stream.position - startPos;\n        if (ch === -1) {\n            stream.skip(-length);\n            return this.findDefaultInlineStreamEnd(stream);\n        }\n        this.inlineStreamSkipEI(stream);\n        return length;\n    };\n    _PdfParser.prototype.inlineStreamSkipEI = function (stream) {\n        var state = 0;\n        var ch;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else if (state === 2) {\n                break;\n            }\n            ch = stream.getByte();\n        }\n    };\n    _PdfParser.prototype.makeInlineImage = function (arguement1, arguement2, arguement3) {\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream;\n        var dictionary = new _PdfDictionary(this.xref);\n        var dictLength;\n        var cipherTransform;\n        if (arguement3) {\n            if (arguement1 instanceof _CipherTransform) {\n                cipherTransform = arguement1;\n            }\n            else {\n                cipherTransform = this._encryptor._createCipherTransform(arguement1, arguement2);\n            }\n        }\n        while (!_isCommand(this.first, 'ID') && this.first !== endOfFile) {\n            if (!(this.first instanceof _PdfName)) {\n                throw new FormatError('Dictionary key must be a name object');\n            }\n            var key = this.first.name;\n            this.shift();\n            if (this.first.name === endOfFile) {\n                break;\n            }\n            if (arguement1 instanceof _CipherTransform) {\n                dictionary.set(key, this.getObject(arguement1));\n            }\n            else {\n                dictionary.set(key, this.getObject(arguement1, arguement2, arguement3));\n            }\n        }\n        if (lexicalOperator.beginInlineImagePosition !== -1) {\n            dictLength = stream.position - lexicalOperator.beginInlineImagePosition;\n        }\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var filterName;\n        if (filter instanceof _PdfName) {\n            filterName = filter.name;\n        }\n        else if (Array.isArray(filter)) {\n            var reference = filter[0]; // eslint-disable-line\n            var filterZero = (reference !== null && typeof reference !== 'undefined' && reference instanceof _PdfReference) ?\n                this.xref._fetch(reference) :\n                reference;\n            if (filterZero) {\n                filterName = filterZero.name;\n            }\n        }\n        var startPos = stream.position;\n        var length;\n        switch (filterName) {\n            case 'DCT':\n            case 'DCTDecode':\n                length = this.findDiscreteDecodeInlineStreamEnd(stream);\n                break;\n            case 'A85':\n            case 'ASCII85Decode':\n                length = this.findDecodeInlineStreamEnd(stream);\n                break;\n            case 'AHx':\n            case 'ASCIIHexDecode':\n                length = this.findHexDecodeInlineStreamEnd(stream);\n                break;\n            default:\n                length = this.findDefaultInlineStreamEnd(stream);\n        }\n        var imageStream = stream.makeSubStream(startPos, length, dictionary); // eslint-disable-line\n        var cacheKey;\n        if (length < maxCacheLength && dictLength < maxNumberLength) {\n            var imageBytes = imageStream.getBytes();\n            imageStream.reset();\n            var initialStreamPos = stream.position;\n            stream.position = lexicalOperator.beginInlineImagePosition;\n            var dictBytes = stream.getBytes(dictLength);\n            stream.position = initialStreamPos;\n            cacheKey = this._computeMaxNumber(imageBytes) + '_' + this._computeMaxNumber(dictBytes);\n            var cacheEntry = this.imageCache.get(cacheKey);\n            if (cacheEntry !== undefined) {\n                this.second = _PdfCommand.get('EI');\n                this.shift();\n                cacheEntry.reset();\n                return cacheEntry;\n            }\n        }\n        if (cipherTransform) {\n            imageStream = cipherTransform.createStream(imageStream, length);\n        }\n        imageStream = this.filter(imageStream, dictionary, length);\n        imageStream.dictionary = dictionary;\n        if (cacheKey !== undefined) {\n            this.imageCache.set(cacheKey, imageStream);\n        }\n        this.second = _PdfCommand.get('EI');\n        this.shift();\n        return imageStream;\n    };\n    _PdfParser.prototype._computeMaxNumber = function (bytes) {\n        var bytesLength = bytes.length;\n        var a = 1;\n        var b = 0;\n        for (var i = 0; i < bytesLength; ++i) {\n            a += bytes[i] & 0xff; // eslint-disable-line\n            b += a;\n        }\n        return (b % 65521 << 16) | a % 65521;\n    };\n    _PdfParser.prototype.makeStream = function (dictionary, cipherTransform, makeFilter) {\n        if (makeFilter === void 0) { makeFilter = false; }\n        var lexicalOperator = this.lexicalOperator;\n        var stream = lexicalOperator.stream; // eslint-disable-line\n        lexicalOperator.skipToNextLine();\n        var startPosition = stream.position - 1;\n        var length = dictionary.get('Length');\n        if (!Number.isInteger(length)) {\n            length = 0;\n        }\n        stream.position = startPosition + length;\n        lexicalOperator.nextChar();\n        if (this.tryShift() && _isCommand(this.second, 'endstream')) {\n            this.shift();\n        }\n        else {\n            var endStreamSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d]);\n            var actualLength = this._findStreamLength(startPosition, endStreamSignature);\n            if (actualLength < 0) {\n                var end = endStreamSignature.length - 1;\n                var truncatedSignature = endStreamSignature.slice(0, end);\n                var maybeLength = this._findStreamLength(startPosition, truncatedSignature);\n                if (maybeLength >= 0) {\n                    var lastByte = stream.peekBytes(end + 1)[end]; // eslint-disable-line\n                    if (_isWhiteSpace(lastByte)) {\n                        actualLength = maybeLength;\n                    }\n                }\n                if (actualLength < 0) {\n                    throw new FormatError('Missing endstream command.');\n                }\n            }\n            length = actualLength;\n            lexicalOperator.nextChar();\n            this.shift();\n            this.shift();\n        }\n        this.shift();\n        stream = stream.makeSubStream(startPosition, length, dictionary);\n        if (!makeFilter) {\n            if (cipherTransform) {\n                stream = cipherTransform.createStream(stream, length);\n            }\n            stream = this.filter(stream, dictionary, length);\n        }\n        stream.dictionary = dictionary;\n        return stream;\n    };\n    _PdfParser.prototype.filter = function (stream, dictionary, length) {\n        var filter = dictionary.get('F', 'Filter'); // eslint-disable-line\n        var params = dictionary.get('DP', 'DecodeParms'); // eslint-disable-line\n        if (filter instanceof _PdfName) {\n            return this.makeFilter(stream, filter.name, length, params);\n        }\n        var maybeLength = length;\n        if (Array.isArray(filter)) {\n            var filterArray = filter; // eslint-disable-line\n            var paramsArray = params; // eslint-disable-line\n            for (var i = 0; i < filterArray.length; ++i) {\n                var reference = filterArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                filter = reference instanceof _PdfReference ? this.xref._fetch(reference) : reference;\n                if (!(filter instanceof _PdfName)) {\n                    throw new FormatError(\"Bad filter name '\" + filter + \"'\");\n                }\n                params = null;\n                if (Array.isArray(paramsArray) && i in paramsArray) {\n                    var ref = paramsArray[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                    params = ref instanceof _PdfReference ? this.xref._fetch(ref) : ref;\n                }\n                stream = this.makeFilter(stream, filter.name, maybeLength, params);\n                maybeLength = null;\n            }\n        }\n        return stream;\n    };\n    _PdfParser.prototype.makeFilter = function (stream, name, maybeLength, params) {\n        if (maybeLength === 0) {\n            return new _PdfNullStream();\n        }\n        try {\n            if (name === 'Fl' || name === 'FlateDecode') {\n                if (params) {\n                    return new PdfPredictorStream(new _PdfFlateStream(stream, maybeLength), maybeLength, params);\n                }\n                return new _PdfFlateStream(stream, maybeLength);\n            }\n            return stream;\n        }\n        catch (ex) {\n            return new _PdfNullStream();\n        }\n    };\n    _PdfParser.prototype._findStreamLength = function (startPosition, signature) {\n        var stream = this.lexicalOperator.stream;\n        stream.position = startPosition;\n        var length = 2048;\n        var signatureLength = signature.length;\n        while (stream.position < stream.end) {\n            var scanBytes = stream.peekBytes(length);\n            var scanLength = scanBytes.length - signatureLength;\n            if (scanLength <= 0) {\n                break;\n            }\n            var position = 0;\n            while (position < scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return stream.position - startPosition;\n                }\n                position++;\n            }\n            stream.position += scanLength;\n        }\n        return -1;\n    };\n    _PdfParser.prototype.findDefaultInlineStreamEnd = function (stream) {\n        var startPosition = stream.position;\n        var n = 10;\n        var state = 0;\n        var ch;\n        var endImagePosition;\n        ch = stream.getByte();\n        while (ch !== -1) {\n            if (state === 0) {\n                state = ch === 0x45 ? 1 : 0;\n            }\n            else if (state === 1) {\n                state = ch === 0x49 ? 2 : 0;\n            }\n            else {\n                if (state !== 2) {\n                    throw new Error('findDefaultInlineStreamEnd - invalid state.');\n                }\n                if (ch === 0x20 || ch === 0xa || ch === 0xd) {\n                    endImagePosition = stream.position;\n                    var followingBytes = stream.peekBytes(n);\n                    for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n                        ch = followingBytes[i]; // eslint-disable-line\n                        if (ch === 0x0 && followingBytes[i + 1] !== 0x0) {\n                            continue;\n                        }\n                        if (ch !== 0xa && ch !== 0xd && (ch < 0x20 || ch > 0x7f)) {\n                            state = 0;\n                            break;\n                        }\n                    }\n                    if (state !== 2) {\n                        ch = stream.getByte();\n                        continue;\n                    }\n                    if (state === 2) {\n                        break;\n                    }\n                }\n                else {\n                    state = 0;\n                }\n            }\n            ch = stream.getByte();\n        }\n        if (ch === -1) {\n            if (typeof endImagePosition !== 'undefined') {\n                stream.skip(-(stream.position - endImagePosition));\n            }\n        }\n        var endOffset = 4;\n        stream.skip(-endOffset);\n        ch = stream.peekByte();\n        stream.skip(endOffset);\n        if (!_isWhiteSpace(ch)) {\n            endOffset--;\n        }\n        return stream.position - endOffset - startPosition;\n    };\n    _PdfParser.prototype._checkEnd = function () {\n        if (this.first === endOfFile) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return _PdfParser;\n}());\nexport { _PdfParser };\n/* eslint-disable */\nvar _Linearization = /** @class */ (function () {\n    function _Linearization(stream) {\n        this.isValid = false;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        var dictionary = parser.getObject();\n        this.isValid = Number.isInteger(obj1) && Number.isInteger(obj2) && _isCommand(obj3, 'obj') && typeof dictionary !== 'undefined';\n        if (this.isValid) {\n            var obj = dictionary.get('Linearized');\n            this.isValid = typeof obj !== 'undefined' && obj > 0;\n        }\n        if (this.isValid) {\n            var length_1 = this.getInt(dictionary, 'L');\n            if (length_1 !== stream.length) {\n                throw new Error('The L parameter in the linearization dictionary ' + 'does not equal the stream length.');\n            }\n            this.length = length_1;\n            this.hints = this.getHints(dictionary);\n            this.objectNumberFirst = this.getInt(dictionary, 'O');\n            this.endFirst = this.getInt(dictionary, 'E');\n            this.pageCount = this.getInt(dictionary, 'N');\n            this.mainXRefEntriesOffset = this.getInt(dictionary, 'T');\n            this.pageFirst = dictionary.has('P') ? this.getInt(dictionary, 'P', true) : 0;\n        }\n    }\n    _Linearization.prototype.getInt = function (dictionary, name, allowZeroValue) {\n        if (allowZeroValue === void 0) { allowZeroValue = false; }\n        var obj = dictionary.get(name);\n        if (typeof obj !== 'undefined' && Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n            return obj;\n        }\n        throw new Error(\"The '\" + name + \"' parameter in the linearization \" + 'dictionary is invalid.');\n    };\n    _Linearization.prototype.getHints = function (dictionary) {\n        var hints = dictionary.getArray('H');\n        var hintsLength = hints.length;\n        if (hints && (hintsLength === 2 || hintsLength === 4)) {\n            for (var index = 0; index < hintsLength; index++) {\n                var hint = hints[index];\n                if (!(Number.isInteger(hint) && hint > 0)) {\n                    throw new Error(\"Hint (\" + index + \") in the linearization dictionary is invalid.\");\n                }\n            }\n            return hints;\n        }\n        throw new Error('Hint array in the linearization dictionary is invalid.');\n    };\n    return _Linearization;\n}());\nexport { _Linearization };\n/* eslint-enable */\n","import { _PdfStream } from './base-stream';\nimport { _PdfDictionary, _PdfReferenceSet, _isCommand, _PdfReference, _PdfName } from './pdf-primitives';\nimport { BaseException, FormatError, _escapePdfName, _bytesToString, ParserEndOfFileException, _numberToString, _stringToPdfString, _stringToBigEndianBytes, _getSize, _compressStream } from './utils';\nimport { _PdfParser, _PdfLexicalOperator } from './pdf-parser';\nimport { _PdfBaseStream } from './base-stream';\nimport { PdfCrossReferenceType } from './enumerator';\nimport { _MD5, _PdfEncryptor } from './security/encryptor';\nvar _PdfCrossReference = /** @class */ (function () {\n    function _PdfCrossReference(document, password) {\n        this._version = '';\n        this._newLine = '\\r\\n';\n        this._password = password;\n        this._document = document;\n        this._stream = document._stream;\n        this._entries = [];\n        this._crossReferencePosition = Object.create(null);\n        this._cacheMap = new Map(); // eslint-disable-line\n        this._offsetReference = new Map(); // eslint-disable-line\n        this._pendingRefs = new _PdfReferenceSet();\n        this._offsets = [];\n    }\n    _PdfCrossReference.prototype._setStartXRef = function (startXRef) {\n        this._startXRefQueue = [startXRef];\n        this._prevStartXref = startXRef;\n        if (typeof this._prevXRefOffset === 'undefined' || this._prevXRefOffset === null) {\n            this._prevXRefOffset = startXRef;\n        }\n    };\n    _PdfCrossReference.prototype._parse = function (recoveryMode) {\n        var trailerDictionary;\n        if (!recoveryMode) {\n            trailerDictionary = this._readXRef();\n        }\n        else {\n            trailerDictionary = this._indexObjects();\n        }\n        trailerDictionary.assignXref(this);\n        var entrySize = trailerDictionary.get('Size');\n        if (this._entries.length < entrySize || this._entries.length === entrySize) {\n            this._nextReferenceNumber = entrySize;\n        }\n        else if (this._entries.length > entrySize) {\n            this._nextReferenceNumber = this._entries.length > 0 ? this._entries.length : 1;\n        }\n        this._trailer = trailerDictionary;\n        var encrypt = trailerDictionary.get('Encrypt');\n        if (encrypt) {\n            this._document._isEncrypted = true;\n            this._ids = trailerDictionary.get('ID');\n            this._permissionFlags = encrypt.get('P');\n            var fileId = this._ids && this._ids.length ? this._ids[0] : '';\n            encrypt.suppressEncryption = true;\n            this._encrypt = new _PdfEncryptor(encrypt, fileId, this._password);\n            this._document._isUserPassword = this._encrypt._isUserPassword;\n            this._document._encryptOnlyAttachment = this._encrypt._encryptOnlyAttachment;\n            if (this._document.fileStructure.isIncrementalUpdate) {\n                this._document.fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n            }\n            else {\n                this._document.fileStructure.crossReferenceType = PdfCrossReferenceType.table;\n            }\n            if (this._encrypt._encryptOnlyAttachment) {\n                this._document._hasUserPasswordOnly = true;\n                this._document._encryptMetaData = false;\n            }\n            else {\n                this._document._hasUserPasswordOnly = this._encrypt._hasUserPasswordOnly;\n                this._document._encryptMetaData = encrypt.has('EncryptMetadata') ? encrypt.get('EncryptMetadata') : true;\n            }\n        }\n        var hasRoot = false;\n        var root;\n        try {\n            root = trailerDictionary.get('Root');\n        }\n        catch (e) {\n            throw new BaseException('Invalid cross reference', 'XRefParseException');\n        }\n        if (root) {\n            try {\n                var pagesEntry = root.get('Pages');\n                if (pagesEntry) {\n                    this._root = root;\n                    hasRoot = true;\n                }\n            }\n            catch (ex) {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n        if (!hasRoot) {\n            if (!recoveryMode) {\n                throw new BaseException('Invalid cross reference', 'XRefParseException');\n            }\n            else {\n                throw new BaseException('Invalid cross reference', 'InvalidXRef');\n            }\n        }\n    };\n    _PdfCrossReference.prototype._getEntry = function (i) {\n        var xrefEntry = this._entries[i]; // eslint-disable-line\n        if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n            return xrefEntry;\n        }\n        return null;\n    };\n    _PdfCrossReference.prototype._fetch = function (ref, suppressEncryption) {\n        var entry; // eslint-disable-line\n        if (!(ref instanceof _PdfReference)) {\n            throw new Error('ref object is not a reference');\n        }\n        var objectNumber = ref.objectNumber;\n        var cacheEntry = this._cacheMap.get(ref); // eslint-disable-line\n        if (typeof cacheEntry !== 'undefined') {\n            if (cacheEntry instanceof _PdfDictionary && !cacheEntry.objId) {\n                cacheEntry.objId = objectNumber;\n            }\n            return cacheEntry;\n        }\n        var xrefEntry = this._getEntry(objectNumber);\n        if (xrefEntry === null) {\n            this._cacheMap.set(ref, xrefEntry);\n            return xrefEntry;\n        }\n        if (this._pendingRefs.has(ref)) {\n            this._pendingRefs.remove(ref);\n            throw new Error('circular reference');\n        }\n        this._pendingRefs.put(ref);\n        try {\n            if (xrefEntry.uncompressed) {\n                entry = this._fetchUncompressed(ref, xrefEntry, suppressEncryption);\n            }\n            else {\n                entry = this._fetchCompressed(ref, xrefEntry);\n            }\n            this._pendingRefs.remove(ref);\n        }\n        catch (ex) {\n            this._pendingRefs.remove(ref);\n            throw ex;\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchUncompressed = function (reference, xrefEntry, makeFilter) {\n        var generationNumber = reference.generationNumber;\n        var objectNumber = reference.objectNumber;\n        if (xrefEntry.gen !== generationNumber) {\n            throw new BaseException(\"Inconsistent generation in XRef: \" + reference, 'XRefEntryException');\n        }\n        var stream = this._stream.makeSubStream(xrefEntry.offset + this._stream.start, undefined);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, false, this._encrypt);\n        var obj1 = parser.getObject();\n        var obj2 = parser.getObject();\n        var obj3 = parser.getObject();\n        if (obj1 !== objectNumber || obj2 !== generationNumber || typeof obj3 === 'undefined') {\n            throw new BaseException(\"Bad (uncompressed) XRef entry: \" + reference, 'XRefEntryException');\n        }\n        var entry; // eslint-disable-line\n        if (this._encrypt && !makeFilter) {\n            entry = parser.getObject(reference.objectNumber, reference.generationNumber, true);\n        }\n        else {\n            entry = parser.getObject(null, makeFilter);\n        }\n        if (!(entry instanceof _PdfBaseStream)) {\n            this._cacheMap.set(reference, entry);\n        }\n        if (entry instanceof _PdfDictionary) {\n            entry.objId = reference.toString();\n        }\n        else if (entry instanceof _PdfBaseStream) {\n            entry.dictionary.objId = reference.toString();\n        }\n        return entry;\n    };\n    _PdfCrossReference.prototype._fetchCompressed = function (ref, xrefEntry) {\n        var tableOffset = xrefEntry.offset;\n        var stream = this._fetch(_PdfReference.get(tableOffset, 0));\n        if (typeof stream === 'undefined') {\n            throw new FormatError('bad ObjStm stream');\n        }\n        var first = stream.dictionary.get('First');\n        var n = stream.dictionary.get('N');\n        var gen = ref.generationNumber;\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n            throw new FormatError('invalid first and n parameters for ObjStm stream');\n        }\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n        var nums = new Array(n);\n        var offsets = new Array(n);\n        for (var i = 0; i < n; ++i) {\n            var value = parser.getObject();\n            if (!Number.isInteger(value)) {\n                throw new FormatError(\"invalid object number in the ObjStm stream: \" + value);\n            }\n            var offset = parser.getObject();\n            if (!Number.isInteger(offset)) {\n                throw new FormatError(\"invalid object offset in the ObjStm stream: \" + offset);\n            }\n            nums[i] = value; // eslint-disable-line\n            offsets[i] = offset; // eslint-disable-line\n        }\n        var start = (stream.start || 0) + first;\n        var entries = new Array(n); // eslint-disable-line\n        for (var i = 0; i < n; ++i) {\n            var length_1 = (i < n - 1 ? (offsets[i + 1] - offsets[i]) : undefined); // eslint-disable-line\n            if (length_1 < 0) {\n                throw new FormatError('Invalid offset in the ObjStm stream.');\n            }\n            parser = new _PdfParser(new _PdfLexicalOperator(stream.makeSubStream(start + offsets[i], length_1, stream.dictionary)), this, true); // eslint-disable-line\n            var obj = parser.getObject(); // eslint-disable-line\n            entries[i] = obj; // eslint-disable-line\n            if (obj instanceof _PdfBaseStream) {\n                continue;\n            }\n            var value = nums[i]; // eslint-disable-line\n            var entry = this._entries[value]; // eslint-disable-line\n            if (entry && entry.offset === tableOffset && entry.gen === i) {\n                var objId = value + \" \" + gen;\n                this._cacheMap.set(_PdfReference.get(value, gen), obj);\n                if (obj instanceof _PdfDictionary) {\n                    obj.objId = objId;\n                }\n            }\n        }\n        var result = entries[xrefEntry.gen]; // eslint-disable-line\n        if (typeof result === 'undefined') {\n            throw new BaseException(\"Bad (compressed) XRef entry: \" + ref, 'XRefEntryException');\n        }\n        return result;\n    };\n    _PdfCrossReference.prototype._readXRef = function (recoveryMode) {\n        if (recoveryMode === void 0) { recoveryMode = false; }\n        var stream = this._stream;\n        var startXRefParsedCache = new Set();\n        try {\n            while (this._startXRefQueue.length) {\n                var startXRef = this._startXRefQueue[0];\n                if (this._prevStartXref < startXRef) {\n                    this._prevStartXref = startXRef;\n                }\n                if (startXRefParsedCache.has(startXRef)) {\n                    this._startXRefQueue.shift();\n                    continue;\n                }\n                startXRefParsedCache.add(startXRef);\n                stream.position = startXRef + stream.start;\n                var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true);\n                var obj = parser.getObject(); // eslint-disable-line\n                var dictionary = void 0;\n                if (_isCommand(obj, 'xref')) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.table;\n                    }\n                    dictionary = this._processXRefTable(parser);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    obj = dictionary.get('XRefStm');\n                    if (Number.isInteger(obj)) {\n                        var position = obj; // eslint-disable-line\n                        if (!(position in this._crossReferencePosition)) {\n                            this._crossReferencePosition[position] = 1; // eslint-disable-line\n                            this._startXRefQueue.push(position);\n                        }\n                    }\n                }\n                else if (Number.isInteger(obj)) {\n                    if (typeof this._document._fileStructure._crossReferenceType === 'undefined') {\n                        this._document._fileStructure._crossReferenceType = PdfCrossReferenceType.stream;\n                    }\n                    var gen = parser.getObject();\n                    var command = parser.getObject();\n                    obj = parser.getObject();\n                    if (typeof gen === 'undefined' ||\n                        !Number.isInteger(gen) ||\n                        !_isCommand(command, 'obj') ||\n                        !(obj instanceof _PdfBaseStream)) {\n                        throw new FormatError('Invalid cross reference stream');\n                    }\n                    dictionary = this._processXRefStream(obj);\n                    if (!this._topDictionary) {\n                        this._topDictionary = dictionary;\n                    }\n                    if (!dictionary) {\n                        throw new FormatError('Failed to read XRef stream');\n                    }\n                }\n                else {\n                    throw new FormatError('Invalid XRef stream header');\n                }\n                obj = dictionary.get('Prev');\n                if (Number.isInteger(obj)) {\n                    this._startXRefQueue.push(obj);\n                }\n                else if (obj instanceof _PdfReference) {\n                    this._startXRefQueue.push(obj.objectNumber);\n                }\n                this._startXRefQueue.shift();\n            }\n            return this._topDictionary;\n        }\n        catch (e) {\n            this._startXRefQueue.shift();\n        }\n        if (recoveryMode) {\n            return undefined;\n        }\n        throw new BaseException('Invalid cross reference', 'XRefParseException');\n    };\n    _PdfCrossReference.prototype._readToken = function (data, offset) {\n        var lf = 0xa;\n        var cr = 0xd;\n        var lt = 0x3c;\n        var token = '';\n        var ch = data[offset]; // eslint-disable-line\n        while (ch !== lf && ch !== cr && ch !== lt) {\n            if (++offset >= data.length) {\n                break;\n            }\n            token += String.fromCharCode(ch);\n            ch = data[offset]; // eslint-disable-line\n        }\n        return token;\n    };\n    _PdfCrossReference.prototype._skipUntil = function (data, offset, what) {\n        var length = what.length;\n        var dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n            var i = 0;\n            while (i < length && data[offset + i] === what[i]) { // eslint-disable-line\n                ++i;\n            }\n            if (i >= length) {\n                break;\n            }\n            offset++;\n            skipped++;\n        }\n        return skipped;\n    };\n    _PdfCrossReference.prototype._indexObjects = function () {\n        var tab = 0x9;\n        var lf = 0xa;\n        var cr = 0xd;\n        var space = 0x20;\n        var percent = 0x25;\n        var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n        var endobjRegExp = /\\bendobj[\\b\\s]$/;\n        var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s<])$/;\n        var checkContentLength = 25;\n        var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n        var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n        var objBytes = new Uint8Array([111, 98, 106]);\n        var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n        this._entries.length = 0;\n        this._cacheMap.clear();\n        var stream = this._stream;\n        stream.position = 0;\n        var buffer = stream.getBytes();\n        var length = buffer.length;\n        var position = stream.start;\n        var trailers = [];\n        var crossReferencePosition = [];\n        while (position < length) {\n            var ch = buffer[position]; // eslint-disable-line\n            if (ch === tab || ch === lf || ch === cr || ch === space) {\n                ++position;\n                continue;\n            }\n            if (ch === percent) {\n                do {\n                    ++position;\n                    if (position >= length) {\n                        break;\n                    }\n                    ch = buffer[position]; // eslint-disable-line\n                } while (ch !== lf && ch !== cr);\n                continue;\n            }\n            var token = this._readToken(buffer, position);\n            var m = void 0; // eslint-disable-line\n            if (token.startsWith('xref') && (token.length === 4 || /\\s/.test(token[4]))) {\n                position += this._skipUntil(buffer, position, trailerBytes);\n                trailers.push(position);\n                position += this._skipUntil(buffer, position, startxrefBytes);\n            }\n            else {\n                m = objRegExp.exec(token);\n                if (m) {\n                    var objectNumber = Number.parseInt(m[1]) | 0; // eslint-disable-line\n                    var gen = Number.parseInt(m[2]) | 0; // eslint-disable-line\n                    var contentLength = void 0;\n                    var startPos = position + token.length;\n                    var updateEntries = false;\n                    if (!this._entries[objectNumber]) { // eslint-disable-line\n                        updateEntries = true;\n                    }\n                    else if (this._entries[objectNumber].gen === gen) { // eslint-disable-line\n                        try {\n                            var subStream = stream.makeSubStream(startPos, stream.length - startPos);\n                            var lexicalOperator = new _PdfLexicalOperator(subStream);\n                            var parser = new _PdfParser(lexicalOperator, null);\n                            parser.getObject();\n                            updateEntries = true;\n                        }\n                        catch (ex) {\n                            updateEntries = !(ex instanceof ParserEndOfFileException);\n                        }\n                    }\n                    if (updateEntries) {\n                        var info = new _PdfObjectInformation();\n                        info.offset = position - stream.start;\n                        info.gen = gen;\n                        info.uncompressed = true;\n                        this._entries[objectNumber] = info; // eslint-disable-line\n                    }\n                    while (startPos < buffer.length) {\n                        var endPos = startPos + this._skipUntil(buffer, startPos, objBytes) + 4;\n                        contentLength = endPos - position;\n                        var checkPos = Math.max(endPos - checkContentLength, startPos);\n                        var tokenStr = _bytesToString(buffer.subarray(checkPos, endPos));\n                        if (endobjRegExp.test(tokenStr)) {\n                            break;\n                        }\n                        else {\n                            var objToken = nestedObjRegExp.exec(tokenStr); // eslint-disable-line\n                            if (objToken && objToken[1]) {\n                                contentLength -= objToken[1].length;\n                                break;\n                            }\n                        }\n                        startPos = endPos;\n                    }\n                    var content = buffer.subarray(position, position + contentLength);\n                    var xrefTagOffset = this._skipUntil(content, 0, xrefBytes);\n                    if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n                        crossReferencePosition.push(position - stream.start);\n                        this._crossReferencePosition[position - stream.start] = 1;\n                    }\n                    position += contentLength;\n                }\n                else if (token.startsWith('trailer') && (token.length === 7 || /\\s/.test(token[7]))) {\n                    trailers.push(position);\n                    position += this._skipUntil(buffer, position, startxrefBytes);\n                }\n                else {\n                    position += token.length + 1;\n                }\n            }\n        }\n        for (var i = 0; i < crossReferencePosition.length; ++i) {\n            this._startXRefQueue.push(crossReferencePosition[i]); // eslint-disable-line\n            this._readXRef(true);\n        }\n        var trailerDict;\n        for (var i = 0; i < trailers.length; ++i) {\n            stream.position = trailers[i]; // eslint-disable-line\n            var parser = new _PdfParser(new _PdfLexicalOperator(stream), this, true, true);\n            var obj = parser.getObject(); // eslint-disable-line\n            if (!_isCommand(obj, 'trailer')) {\n                continue;\n            }\n            var dictionary = parser.getObject(); // eslint-disable-line\n            if (!(dictionary instanceof _PdfDictionary)) {\n                continue;\n            }\n            try {\n                var rootDict = dictionary.get('Root'); // eslint-disable-line\n                if (!(rootDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesDict = rootDict.get('Pages'); // eslint-disable-line\n                if (!(pagesDict instanceof _PdfDictionary)) {\n                    continue;\n                }\n                var pagesCount = pagesDict.get('Count');\n                if (typeof pagesCount === 'undefined' || !Number.isInteger(pagesCount)) {\n                    continue;\n                }\n            }\n            catch (ex) {\n                continue;\n            }\n            if (dictionary.has('ID')) {\n                return dictionary;\n            }\n            trailerDict = dictionary;\n        }\n        if (trailerDict) {\n            return trailerDict;\n        }\n        if (this._topDictionary) {\n            return this._topDictionary;\n        }\n        throw new BaseException('Invalid PDF structure.', 'InvalidPDFException');\n    };\n    _PdfCrossReference.prototype._processXRefTable = function (parser) {\n        if (typeof this._tableState === 'undefined') {\n            var tableState = new _PdfCrossTableState();\n            tableState.entryNum = 0;\n            tableState.streamPos = parser.lexicalOperator.stream.position;\n            tableState.parserBuf1 = parser.first;\n            tableState.parserBuf2 = parser.second;\n            this._tableState = tableState;\n        }\n        var obj = this._readXRefTable(parser);\n        if (!_isCommand(obj, 'trailer')) {\n            throw new FormatError('Invalid XRef table: could not find trailer dictionary');\n        }\n        var topDictionary = parser.getObject(); // eslint-disable-line\n        var dictionary;\n        if (topDictionary) {\n            if (topDictionary instanceof _PdfDictionary) {\n                dictionary = topDictionary;\n            }\n            else if (topDictionary instanceof _PdfBaseStream && topDictionary.dictionary) {\n                dictionary = topDictionary.dictionary;\n            }\n        }\n        if (!dictionary) {\n            throw new FormatError('Invalid cross reference: could not parse trailer dictionary');\n        }\n        this._tableState = undefined;\n        return dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefTable = function (parser) {\n        var stream = parser.lexicalOperator.stream;\n        stream.position = this._tableState.streamPos;\n        parser.first = this._tableState.parserBuf1;\n        parser.second = this._tableState.parserBuf2;\n        var obj; // eslint-disable-line\n        while (true) { // eslint-disable-line\n            if (typeof this._tableState.firstEntryNum === 'undefined' || typeof this._tableState.entryCount === 'undefined') {\n                obj = parser.getObject();\n                if (_isCommand(obj, 'trailer')) {\n                    break;\n                }\n                this._tableState.firstEntryNum = obj;\n                this._tableState.entryCount = parser.getObject();\n            }\n            var first = this._tableState.firstEntryNum;\n            var count = this._tableState.entryCount;\n            if (!Number.isInteger(first) || !Number.isInteger(count)) {\n                throw new FormatError('Invalid cross reference: wrong types in subsection header');\n            }\n            for (var i = this._tableState.entryNum; i < count; i++) {\n                this._tableState.streamPos = stream.position;\n                this._tableState.entryNum = i;\n                this._tableState.parserBuf1 = parser.first;\n                this._tableState.parserBuf2 = parser.second;\n                var entry = new _PdfObjectInformation();\n                entry.offset = parser.getObject();\n                entry.gen = parser.getObject();\n                var type = parser.getObject();\n                if (type) {\n                    switch (type.command) {\n                        case 'f':\n                            entry.free = true;\n                            break;\n                        case 'n':\n                            entry.uncompressed = true;\n                            break;\n                    }\n                }\n                if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n                    throw new FormatError(\"Invalid entry in cross reference subsection: \" + first + \", \" + count);\n                }\n                if (i === 0 && entry.free && first === 1) {\n                    first = 0;\n                }\n                if (!this._entries[i + first]) {\n                    this._entries[i + first] = entry;\n                }\n            }\n            this._tableState.entryNum = 0;\n            this._tableState.streamPos = stream.position;\n            this._tableState.parserBuf1 = parser.first;\n            this._tableState.parserBuf2 = parser.second;\n            this._tableState.firstEntryNum = undefined;\n            this._tableState.entryCount = undefined;\n        }\n        if (this._entries[0] && !this._entries[0].free) {\n            throw new FormatError('Invalid XRef table: unexpected first object');\n        }\n        return obj;\n    };\n    _PdfCrossReference.prototype._processXRefStream = function (stream) {\n        if (typeof this._streamState === 'undefined') {\n            var streamParameters = stream.dictionary;\n            var streamState = new _PdfStreamState();\n            var index = streamParameters.getArray('Index');\n            if (!index) {\n                index = [0, streamParameters.get('Size')];\n            }\n            streamState.entryRanges = index;\n            streamState.byteWidths = streamParameters.getArray('W');\n            streamState.entryNum = 0;\n            streamState.streamPos = stream.position;\n            this._streamState = streamState;\n        }\n        this._readXRefStream(stream);\n        this._streamState = undefined;\n        return stream.dictionary;\n    };\n    _PdfCrossReference.prototype._readXRefStream = function (stream) {\n        stream.position = this._streamState.streamPos;\n        var typeFieldWidth = this._streamState.byteWidths[0];\n        var offsetFieldWidth = this._streamState.byteWidths[1];\n        var generationFieldWidth = this._streamState.byteWidths[2];\n        var entryRanges = this._streamState.entryRanges;\n        while (entryRanges.length > 0) {\n            var first = entryRanges[0];\n            var n = entryRanges[1];\n            if (!Number.isInteger(first) || !Number.isInteger(n)) {\n                throw new FormatError(\"Invalid XRef range fields: \" + first + \", \" + n);\n            }\n            if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n                throw new FormatError(\"Invalid XRef entry fields length: \" + first + \", \" + n);\n            }\n            for (var i = this._streamState.entryNum; i < n; ++i) {\n                this._streamState.entryNum = i;\n                this._streamState.streamPos = stream.position;\n                var type = 0;\n                var offset = 0;\n                var generation = 0;\n                for (var j = 0; j < typeFieldWidth; ++j) {\n                    var typeByte = stream.getByte();\n                    if (typeByte === -1) {\n                        throw new FormatError('invalid cross reference byte width type.');\n                    }\n                    type = (type << 8) | typeByte;\n                }\n                if (typeFieldWidth === 0) {\n                    type = 1;\n                }\n                for (var j = 0; j < offsetFieldWidth; ++j) {\n                    var offsetByte = stream.getByte();\n                    if (offsetByte === -1) {\n                        throw new FormatError('invalid cross reference byte width offset.');\n                    }\n                    offset = (offset << 8) | offsetByte;\n                }\n                for (var j = 0; j < generationFieldWidth; ++j) {\n                    var generationByte = stream.getByte();\n                    if (generationByte === -1) {\n                        throw new FormatError('invalid cross reference byte width generation.');\n                    }\n                    generation = (generation << 8) | generationByte;\n                }\n                var entry = new _PdfObjectInformation();\n                entry.offset = offset;\n                entry.gen = generation;\n                switch (type) {\n                    case 0:\n                        entry.free = true;\n                        break;\n                    case 1:\n                        entry.uncompressed = true;\n                        break;\n                    case 2:\n                        break;\n                    default:\n                        throw new FormatError(\"Invalid XRef entry type: \" + type);\n                }\n                if (!this._entries[first + i]) {\n                    this._entries[first + i] = entry;\n                }\n            }\n            this._streamState.entryNum = 0;\n            this._streamState.streamPos = stream.position;\n            entryRanges.splice(0, 2);\n        }\n    };\n    _PdfCrossReference.prototype._getCatalogObj = function () {\n        return this._root;\n    };\n    _PdfCrossReference.prototype._save = function () {\n        var buffer = [37, 80, 68, 70, 45];\n        this._writeString(\"\" + this._version + this._newLine, buffer);\n        buffer.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n        this._writeString(this._newLine, buffer);\n        if (!this._document.fileStructure.isIncrementalUpdate) {\n            this._currentLength = 0;\n            var objectCollection = new _PdfMainObjectCollection(this);\n            this._writeObjectCollection(objectCollection._mainObjectCollection, buffer);\n            var stream = new _PdfStream(buffer);\n            this._stream = stream;\n            this._document._stream = stream;\n            var array = new Uint8Array(this._stream.length);\n            array.set(this._stream.bytes);\n            array.set(buffer, 0);\n            return array;\n        }\n        else {\n            this._currentLength = this._stream.length;\n            var buffer_1 = [37, 80, 68, 70, 45];\n            this._writeString(\"\" + this._version + this._newLine, buffer_1);\n            buffer_1.push(0x25, 0x83, 0x92, 0xfa, 0xfe);\n            this._writeString(this._newLine, buffer_1);\n            if (this._document._fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n                this._saveAsStream(this._currentLength, buffer_1);\n            }\n            else {\n                this._saveAsTable(this._currentLength, buffer_1);\n            }\n            var array = new Uint8Array(this._stream.length + buffer_1.length);\n            array.set(this._stream.bytes);\n            array.set(buffer_1, this._stream.length);\n            return array;\n        }\n    };\n    _PdfCrossReference.prototype._saveAsStream = function (currentLength, buffer) {\n        var _this = this;\n        var objectStreamCollection = new Map();\n        this._indexes = [];\n        this._indexes.push(0, 1);\n        this._cacheMap.forEach(function (value, key) {\n            var dictionary;\n            if (value instanceof _PdfBaseStream) {\n                dictionary = value.dictionary;\n            }\n            if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                var cipher = void 0;\n                if (_this._encrypt) {\n                    cipher = _this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                }\n                _this._updatedDictionary(currentLength, key, buffer, value, cipher);\n            }\n        });\n        this._cacheMap.forEach(function (value, key) {\n            if (value instanceof _PdfDictionary) {\n                if (value._updated && (!value.isCatalog || _this._allowCatalog)) {\n                    _this._writeArchiveStream(objectStreamCollection, key, value);\n                }\n            }\n            else if (value instanceof _PdfBaseStream) {\n                var dictionary = value.dictionary;\n                if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                    _this._updatedDictionary(currentLength, key, buffer, value);\n                }\n            }\n        });\n        this._objectStream = undefined;\n        this._objectStreamCollection = objectStreamCollection;\n        this._writeXrefStream(buffer);\n    };\n    _PdfCrossReference.prototype._updatedDictionary = function (currentLength, key, buffer, value, // eslint-disable-line\n    cipher) {\n        this._indexes.push(key.objectNumber, 1);\n        this._offsets.push(currentLength + buffer.length);\n        this._writeObject(value, buffer, key, cipher);\n        value._updated = false;\n    };\n    _PdfCrossReference.prototype._writeXrefStream = function (buffer) {\n        var _this = this;\n        this._objectStreamCollection.forEach(function (value, key) {\n            value._save(buffer, _this._currentLength);\n            for (var i = 0; i < value._collection.length; i++) {\n                _this._indexes.push(value._collection[Number.parseInt(i.toString(), 10)]);\n            }\n            _this._indexes.push(key.objectNumber, 1);\n        });\n        var formatValue = Math.max(_getSize(this._currentLength + buffer.length), _getSize(this._nextReferenceNumber));\n        var newRef = this._getNextReference();\n        this._indexes.push(newRef.objectNumber, 1);\n        var newStartXref = this._currentLength + buffer.length;\n        var newXref = new _PdfDictionary(this);\n        newXref.set('Type', _PdfName.get('XRef'));\n        newXref.set('Index', this._indexes);\n        newXref.set('W', [1, formatValue, 1]);\n        this._copyTrailer(newXref);\n        if (this._ids && this._ids.length > 0) {\n            newXref.update('ID', [this._ids[0], this._computeMessageDigest(newStartXref)]);\n        }\n        var newXrefData = [];\n        this._writeLong(0, 1, newXrefData);\n        this._writeLong(0, formatValue, newXrefData);\n        this._writeLong(-1, 1, newXrefData);\n        if (this._offsets.length > 0) {\n            for (var index = 0; index < this._offsets.length; index++) {\n                this._writeLong(1, 1, newXrefData);\n                this._writeLong(this._offsets[index], formatValue, newXrefData); // eslint-disable-line\n                this._writeLong(0, 1, newXrefData);\n            }\n        }\n        if (this._objectStreamCollection.size > 0) {\n            this._objectStreamCollection.forEach(function (value, key) {\n                for (var index = 0; index < value._length; index++) {\n                    _this._writeLong(2, 1, newXrefData);\n                    _this._writeLong(key.objectNumber, formatValue, newXrefData);\n                    _this._writeLong(index, 1, newXrefData);\n                }\n                _this._writeLong(1, 1, newXrefData);\n                _this._writeLong(value._archiveOffset, formatValue, newXrefData);\n                _this._writeLong(0, 1, newXrefData);\n            });\n        }\n        this._writeLong(1, 1, newXrefData);\n        this._writeLong(newStartXref, formatValue, newXrefData);\n        this._writeLong(0, 1, newXrefData);\n        newXref.set('Length', newXrefData.length);\n        var newXrefStream = new _PdfStream(newXrefData, newXref, 0, newXrefData.length);\n        var cipher;\n        if (this._encrypt) {\n            cipher = this._encrypt._createCipherTransform(newRef.objectNumber, newRef.generationNumber);\n        }\n        this._writeObject(newXrefStream, buffer, newRef, cipher, true);\n        this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._saveAsTable = function (currentLength, buffer) {\n        var _this = this;\n        var tempBuffer = '';\n        this._cacheMap.forEach(function (value, key) {\n            var dictionary;\n            if (value instanceof _PdfDictionary) {\n                dictionary = value;\n            }\n            else if (value instanceof _PdfBaseStream) {\n                dictionary = value.dictionary;\n            }\n            if (dictionary && dictionary._updated && (!dictionary.isCatalog || _this._allowCatalog)) {\n                var offsetString = _this._processString((currentLength + buffer.length).toString(), 10);\n                var genString = _this._processString(key.generationNumber.toString(), 5);\n                tempBuffer += key.objectNumber + \" 1\" + _this._newLine + offsetString + \" \" + genString + \" n\" + _this._newLine;\n                _this._writeObject(value, buffer, key);\n            }\n        });\n        var newStartXref = buffer.length + currentLength;\n        this._writeString(\"xref\" + this._newLine + \"0 1\" + this._newLine + \"0000000000 65535 f\" + this._newLine, buffer);\n        this._writeXref(buffer, tempBuffer, newStartXref);\n    };\n    _PdfCrossReference.prototype._writeXref = function (buffer, tempBuffer, newStartXref) {\n        this._writeString(tempBuffer, buffer);\n        this._writeString(\"trailer\" + this._newLine, buffer);\n        var newXref = new _PdfDictionary(this);\n        this._copyTrailer(newXref);\n        this._writeDictionary(newXref, buffer, this._newLine);\n        this._writeString(\"startxref\" + this._newLine + newStartXref + this._newLine + \"%%EOF\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeXrefTable = function (buffer) {\n        var _this = this;\n        var tempBuffer = '';\n        var collection = this._getSortedReferences(this._offsetReference); // eslint-disable-line\n        collection.forEach(function (value, key) {\n            var offsetString = _this._processString(value.toString(), 10);\n            var genString = _this._processString(key.generationNumber ? '0' : '', 5);\n            if (value !== 0) {\n                tempBuffer += offsetString + \" \" + genString + \" n\" + _this._newLine;\n            }\n            else {\n                tempBuffer += offsetString + \" \" + genString + \" f\" + _this._newLine;\n            }\n        });\n        var newStartXref = buffer.length;\n        var xrefHeader = \"xref\" + this._newLine;\n        var xrefEntry = \"0 \" + (collection.size + 1) + this._newLine;\n        var initialEntry = \"0000000000 65535 f\" + this._newLine;\n        this._writeString(xrefHeader + xrefEntry + initialEntry, buffer);\n        this._writeXref(buffer, tempBuffer, newStartXref);\n    };\n    _PdfCrossReference.prototype._processString = function (value, length) {\n        while (value.length < length) {\n            value = '0' + value;\n        }\n        return value;\n    };\n    _PdfCrossReference.prototype._copyTrailer = function (newXref) {\n        var reference = this._getNextReference();\n        newXref.set('Size', reference.objectNumber);\n        if (this._document.fileStructure.isIncrementalUpdate) {\n            newXref.set('Prev', this._prevXRefOffset);\n        }\n        var root = this._trailer.getRaw('Root'); // eslint-disable-line\n        if (typeof root !== 'undefined' && root !== null) {\n            newXref.set('Root', root);\n        }\n        var info = this._trailer.getRaw('Info'); // eslint-disable-line\n        if (typeof info !== 'undefined' && info !== null) {\n            newXref.set('Info', info);\n        }\n        var encrypt = this._trailer.getRaw('Encrypt'); // eslint-disable-line\n        if (typeof encrypt !== 'undefined' && encrypt !== null) {\n            newXref.set('Encrypt', encrypt);\n        }\n    };\n    _PdfCrossReference.prototype._computeMessageDigest = function (size) {\n        var _this = this;\n        var time = Math.floor(Date.now() / 1000);\n        var buffer = [time.toString(), '', size.toString()];\n        var info = this._trailer.getRaw('Info');\n        var crossReferenceInfo = new _PdfDictionary();\n        if (info && info instanceof _PdfDictionary) {\n            info.forEach(function (key, value) {\n                if (value && typeof value === 'string') {\n                    crossReferenceInfo.set(key, _stringToPdfString(value));\n                }\n            });\n        }\n        crossReferenceInfo.forEach(function (key, value) {\n            buffer.push(value);\n        });\n        var array = [];\n        buffer.forEach(function (str) {\n            _this._writeString(str, array);\n        });\n        return _bytesToString((new _MD5().hash(new Uint8Array(array))));\n    };\n    _PdfCrossReference.prototype._getNextReference = function () {\n        var reference = new _PdfReference(this._nextReferenceNumber++, 0);\n        reference._isNew = true;\n        return reference;\n    };\n    _PdfCrossReference.prototype._writeObject = function (obj, // eslint-disable-line\n    buffer, reference, transform, isCrossReference) {\n        var _this = this;\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(reference.objectNumber + \" \" + reference.generationNumber + \" obj\" + this._newLine, buffer);\n        }\n        if (obj instanceof _PdfDictionary) {\n            this._writeDictionary(obj, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (obj instanceof _PdfBaseStream) {\n            this._writeStream(obj, buffer, transform, isCrossReference);\n        }\n        else if (Array.isArray(obj) && obj.length > 0) {\n            this._writeString('[ ', buffer);\n            obj.forEach(function (value, index) {\n                if (value instanceof _PdfReference) {\n                    _this._writeString(value.objectNumber + \" \" + value.generationNumber + \" R\", buffer);\n                }\n                else if (Array.isArray(value)) {\n                    _this._writeString('[ ', buffer);\n                    value.forEach(function (nestedValue) {\n                        if (nestedValue instanceof _PdfReference) {\n                            _this._writeString(nestedValue.objectNumber + \" \" + nestedValue.generationNumber + \" R\", buffer);\n                        }\n                        else if (nestedValue instanceof _PdfName) {\n                            _this._writeString(\"/\" + nestedValue.name, buffer);\n                        }\n                        else {\n                            _this._writeString(nestedValue + \" \", buffer);\n                        }\n                    });\n                    _this._writeString(']', buffer);\n                }\n                else if (value instanceof _PdfName) {\n                    _this._writeString(\"/\" + value.name, buffer);\n                }\n                else if (value instanceof _PdfDictionary) {\n                    _this._writeDictionary(value, buffer, _this._newLine, transform, isCrossReference);\n                }\n                else {\n                    _this._writeString(value + \"\\n\", buffer);\n                }\n                if (index < obj.length - 1) {\n                    _this._writeString(' ', buffer);\n                }\n            });\n            this._writeString(']', buffer);\n            this._writeString('\\n', buffer);\n        }\n        else if (typeof obj === 'number') {\n            this._writeString(obj + \"\\n\", buffer);\n        }\n        if (reference && reference instanceof _PdfReference) {\n            this._writeString(\"endobj\" + this._newLine, buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeDictionary = function (dictionary, buffer, spaceChar, transform, isCrossReference) {\n        var _this = this;\n        if (dictionary._currentObj) {\n            dictionary._currentObj._beginSave();\n        }\n        if (dictionary._isFont) {\n            this._writeFontDictionary(dictionary);\n        }\n        this._writeString(\"<<\" + spaceChar, buffer);\n        dictionary.forEach(function (key, value) {\n            _this._writeString(\"/\" + _escapePdfName(key) + \" \", buffer);\n            _this._writeValue(value, buffer, transform, isCrossReference);\n            _this._writeString(spaceChar, buffer);\n        });\n        this._writeString(\">>\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeFontDictionary = function (dictionary) {\n        if (dictionary.has('DescendantFonts')) {\n            var fonts = dictionary.get('DescendantFonts'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('DescendantFonts', [reference]);\n        }\n        if (dictionary.has('ToUnicode')) {\n            var fonts = dictionary.get('ToUnicode'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('ToUnicode', reference);\n        }\n        if (dictionary.has('FontFile2')) {\n            var fonts = dictionary.get('FontFile2'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontFile2', reference);\n        }\n        if (dictionary.has('FontDescriptor')) {\n            var fonts = dictionary.get('FontDescriptor'); // eslint-disable-line\n            var reference = this._getNextReference();\n            this._cacheMap.set(reference, fonts);\n            dictionary.update('FontDescriptor', reference);\n        }\n    };\n    _PdfCrossReference.prototype._writeStream = function (stream, buffer, transform, isCrossReference) {\n        var value;\n        var streamBuffer = [];\n        if (!isCrossReference) {\n            if (stream._isCompress && !stream._isImage) {\n                value = _compressStream(stream);\n            }\n            else {\n                value = stream.getString();\n            }\n            if (transform) {\n                value = transform.encryptString(value);\n            }\n        }\n        else {\n            value = stream.getString();\n        }\n        this._writeString(value, streamBuffer);\n        stream.dictionary.update('Length', streamBuffer.length);\n        this._writeDictionary(stream.dictionary, buffer, this._newLine, transform, isCrossReference);\n        this._writeString(\"stream\" + this._newLine, buffer);\n        this._writeBytes(streamBuffer, buffer);\n        this._writeString(this._newLine + \"endstream\" + this._newLine, buffer);\n    };\n    _PdfCrossReference.prototype._writeValue = function (value, buffer, transform, isCrossReference) {\n        if (value instanceof _PdfName) {\n            if (value.name.indexOf(' ') !== -1) {\n                value.name = value.name.replace(/ /g, '#20'); // eslint-disable-line\n            }\n            this._writeString(\"/\" + value.name, buffer);\n        }\n        else if (value instanceof _PdfReference) {\n            this._writeString(value.toString() + \" R\", buffer);\n        }\n        else if (Array.isArray(value)) {\n            this._writeString('[', buffer);\n            var first = true;\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var val = value_1[_i];\n                if (!first) {\n                    this._writeString(' ', buffer);\n                }\n                else {\n                    first = false;\n                }\n                this._writeValue(val, buffer, transform, isCrossReference);\n            }\n            this._writeString(']', buffer);\n        }\n        else if (typeof value === 'string') {\n            if (!isCrossReference && transform) {\n                value = transform.encryptString(value);\n            }\n            var isUnicode = false;\n            for (var i = 0; i < value.length; i++) {\n                if (value.charCodeAt([i]) > 255) {\n                    isUnicode = true;\n                    break;\n                }\n            }\n            if (isUnicode) {\n                this._writeUnicodeString(value, buffer);\n            }\n            else {\n                this._writeString(\"(\" + this._escapeString(value) + \")\", buffer);\n            }\n        }\n        else if (typeof value === 'number') {\n            this._writeString(_numberToString(value), buffer);\n        }\n        else if (typeof value === 'boolean') {\n            this._writeString(value.toString(), buffer);\n        }\n        else if (value instanceof _PdfDictionary) {\n            this._writeDictionary(value, buffer, this._newLine, transform, isCrossReference);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._writeStream(value, buffer, transform, isCrossReference);\n        }\n        else if (value === null) {\n            this._writeString('null', buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeUnicodeString = function (value, buffer) {\n        var byteValues = _stringToBigEndianBytes(value);\n        byteValues.unshift(254, 255);\n        var data = [];\n        for (var i = 0; i < byteValues.length; i++) {\n            var byte = byteValues[Number.parseInt(i.toString(), 10)];\n            switch (byte) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(byte);\n                    break;\n                default:\n                    data.push(byte);\n                    break;\n            }\n        }\n        buffer.push('('.charCodeAt(0) & 0xff);\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[Number.parseInt(i.toString(), 10)] & 0xff);\n        }\n        buffer.push(')'.charCodeAt(0) & 0xff);\n    };\n    _PdfCrossReference.prototype._writeString = function (value, buffer) {\n        for (var i = 0; i < value.length; i++) {\n            buffer.push(value.charCodeAt(i) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._writeBytes = function (data, buffer) {\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i]); // eslint-disable-line\n        }\n    };\n    _PdfCrossReference.prototype._writeLong = function (value, count, buffer) {\n        for (var i = count - 1; i >= 0; --i) {\n            buffer.push(value >> (i << 3) & 0xff);\n        }\n    };\n    _PdfCrossReference.prototype._escapeString = function (value) {\n        return value.replace(/([()\\\\\\n\\r])/g, function (substring) {\n            if (substring === '\\n') {\n                return '\\\\n';\n            }\n            else if (substring === '\\r') {\n                return '\\\\r';\n            }\n            return \"\\\\\" + substring;\n        });\n    };\n    _PdfCrossReference.prototype._destroy = function () {\n        this._entries = undefined;\n        if (this._pendingRefs) {\n            this._pendingRefs.clear();\n            this._pendingRefs = undefined;\n        }\n        if (this._cacheMap) {\n            this._cacheMap.clear();\n        }\n        if (this._offsetReference) {\n            this._offsetReference.clear();\n        }\n        if (this._objectStreamCollection) {\n            this._objectStreamCollection.clear();\n        }\n        this._offsets = [];\n        this._startXRefQueue = [];\n        this._root = undefined;\n        this._startXRefQueue = undefined;\n        this._stream = undefined;\n        this._streamState = undefined;\n        this._tableState = undefined;\n        this._topDictionary = undefined;\n        this._trailer = undefined;\n        this._version = undefined;\n        this._crossReferencePosition = undefined;\n    };\n    _PdfCrossReference.prototype._writeObjectCollection = function (objectCollection, buffer) {\n        var _this = this;\n        var objectStreamCollection = new Map();\n        this._indexes = [];\n        this._indexes.push(0, 1);\n        objectCollection.forEach(function (value, key) {\n            _this._writeObjectToBuffer(key, value, buffer, objectStreamCollection);\n        });\n        if (this._cacheMap.size > objectCollection.size) {\n            this._cacheMap.forEach(function (value, key) {\n                if (!objectCollection.has(key)) {\n                    _this._writeObjectToBuffer(key, value, buffer, objectStreamCollection);\n                }\n            });\n        }\n        if (this._document.fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n            this._objectStream = undefined;\n            this._objectStreamCollection = objectStreamCollection;\n            this._writeXrefStream(buffer);\n        }\n        else {\n            this._writeXrefTable(buffer);\n        }\n    };\n    _PdfCrossReference.prototype._writeArchiveStream = function (objectStreamCollection, key, value) {\n        if (typeof this._objectStream === 'undefined' || this._objectStream._length === 100) {\n            var archiveObj = new _PdfArchievedStream(this);\n            objectStreamCollection.set(archiveObj._reference, archiveObj);\n            this._objectStream = archiveObj;\n        }\n        this._objectStream._writeObject(key, value);\n    };\n    _PdfCrossReference.prototype._writeObjectToBuffer = function (key, value, buffer, // eslint-disable-line\n    objectStreamCollection) {\n        var cipher;\n        if (value instanceof _PdfDictionary && value.isCatalog) {\n            this._writeToBuffer(buffer, key, value);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var type = value.get('Filter');\n            var typeIsFilter = type && type.name === 'Standard';\n            if (this._document.fileStructure._crossReferenceType === PdfCrossReferenceType.stream) {\n                if (!typeIsFilter) {\n                    this._writeArchiveStream(objectStreamCollection, key, value);\n                }\n                else {\n                    this._writeToBuffer(buffer, key, value);\n                }\n            }\n            else {\n                this._offsetReference.set(key, buffer.length);\n                this._indexes.push(key.objectNumber, 1);\n                this._writeObject(value, buffer, key);\n            }\n        }\n        else {\n            if (value instanceof _PdfBaseStream) {\n                var dictionary = value.dictionary;\n                if (dictionary && dictionary._updated && !dictionary.isCatalog) {\n                    if (this._encrypt) {\n                        cipher = this._encrypt._createCipherTransform(key.objectNumber, key.generationNumber);\n                    }\n                    dictionary._updated = false;\n                }\n            }\n            else if ((!Array.isArray(value) || value.length === 0) && typeof value !== 'number') {\n                return;\n            }\n            this._writeToBuffer(buffer, key, value, cipher);\n        }\n    };\n    _PdfCrossReference.prototype._writeToBuffer = function (buffer, key, value, cipher) {\n        this._offsets.push(buffer.length);\n        this._offsetReference.set(key, buffer.length);\n        this._indexes.push(key.objectNumber, 1);\n        this._writeObject(value, buffer, key, cipher);\n    };\n    _PdfCrossReference.prototype._getSortedReferences = function (collection) {\n        var entriesArray = []; // eslint-disable-line\n        collection.forEach(function (value, key) {\n            entriesArray.push([key, value]);\n        });\n        entriesArray.sort(function (a, b) {\n            return a[0].objectNumber - b[0].objectNumber;\n        });\n        var sortedCollection = new Map(); // eslint-disable-line\n        var lastObjectNumber = 1;\n        for (var _i = 0, entriesArray_1 = entriesArray; _i < entriesArray_1.length; _i++) {\n            var _a = entriesArray_1[_i], key = _a[0], value = _a[1];\n            var currentObjectNumber = key.objectNumber;\n            while (lastObjectNumber < currentObjectNumber) {\n                sortedCollection.set({ objectNumber: lastObjectNumber }, 0);\n                lastObjectNumber++;\n            }\n            sortedCollection.set(key, value);\n            lastObjectNumber = currentObjectNumber + 1;\n        }\n        return sortedCollection;\n    };\n    return _PdfCrossReference;\n}());\nexport { _PdfCrossReference };\nvar _PdfObjectInformation = /** @class */ (function () {\n    function _PdfObjectInformation() {\n    }\n    return _PdfObjectInformation;\n}());\nvar _PdfCrossTableState = /** @class */ (function () {\n    function _PdfCrossTableState() {\n    }\n    return _PdfCrossTableState;\n}());\nvar _PdfStreamState = /** @class */ (function () {\n    function _PdfStreamState() {\n    }\n    return _PdfStreamState;\n}());\nvar _PdfArchievedStream = /** @class */ (function () {\n    function _PdfArchievedStream(crossReference) {\n        this._indexes = '';\n        this._length = 0;\n        this._crossReference = crossReference;\n        this._reference = crossReference._getNextReference();\n        this._archiveXRef = '';\n        this._updatedStream = [];\n        this._collection = [];\n    }\n    _PdfArchievedStream.prototype._writeObject = function (key, value) {\n        this._archiveXRef += key.objectNumber + \" \" + this._updatedStream.length + this._crossReference._newLine;\n        this._collection.push(key.objectNumber, 1);\n        this._crossReference._writeObject(value, this._updatedStream);\n        this._length++;\n    };\n    _PdfArchievedStream.prototype._save = function (buffer, currentLength) {\n        var data = [];\n        this._crossReference._writeString(this._archiveXRef, data);\n        this._crossReference._writeBytes(this._updatedStream, data);\n        var newDict = new _PdfDictionary(this._crossReference);\n        newDict.set('Type', _PdfName.get('ObjStm'));\n        newDict.set('N', this._length);\n        newDict.set('First', this._archiveXRef.length);\n        newDict.set('Length', data.length);\n        var archiveStream = new _PdfStream(data, newDict, 0, data.length);\n        this._archiveOffset = currentLength + buffer.length;\n        var cipher;\n        if (this._crossReference._encrypt) {\n            cipher = this._crossReference._encrypt._createCipherTransform(this._reference.objectNumber, this._reference.generationNumber);\n        }\n        this._crossReference._writeObject(archiveStream, buffer, this._reference, cipher);\n    };\n    return _PdfArchievedStream;\n}());\nvar _PdfMainObjectCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `_PdfMainObjectCollection` class.\n     *\n     * @private\n     * @param { _PdfCrossReference } collection - The cross-reference collection containing the PDF objects.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Create a new object collection instance\n     * let mainObjectCollection = new _PdfMainObjectCollection(document._crossReference);\n     * // Access the main object collection\n     * let objects = mainObjectCollection._mainObjectCollection;\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     */\n    function _PdfMainObjectCollection(collection) {\n        var _this = this;\n        this._pointer = 0;\n        if (!(collection._cacheMap instanceof Map)) {\n            throw new Error('Expected _cacheMap to be a Map.');\n        }\n        this._reference = [];\n        this._cache = collection._cacheMap;\n        this._mainObjectCollection = new Map(); // eslint-disable-line\n        var foundCatalog = false;\n        this._crossReference = collection;\n        this._cache.forEach(function (value, key) {\n            if (!foundCatalog && value instanceof _PdfDictionary && value.isCatalog) {\n                _this._addToMainObjectCollection(key, value);\n                foundCatalog = true;\n            }\n        });\n        this._parseObjectCollection();\n    }\n    _PdfMainObjectCollection.prototype._parseObjectCollection = function () {\n        var _this = this;\n        var _loop_1 = function () {\n            var collection = new Map(); // eslint-disable-line\n            var currentIndex = 0;\n            this_1._mainObjectCollection.forEach(function (value, key) {\n                if (currentIndex === _this._pointer) {\n                    collection.set(key, value);\n                    _this._parse(key, value);\n                }\n                currentIndex++;\n            });\n            this_1._pointer++;\n        };\n        var this_1 = this;\n        while (this._pointer < this._mainObjectCollection.size) {\n            _loop_1();\n        }\n        this._addReferencesToMainCollection();\n        return this._mainObjectCollection;\n    };\n    _PdfMainObjectCollection.prototype._addToMainObjectCollection = function (key, value) {\n        this._reference.push(key);\n        this._mainObjectCollection.set(key, value);\n    };\n    _PdfMainObjectCollection.prototype._parseFetchValue = function (reference) {\n        var fetchvalue = this._crossReference._fetch(reference); // eslint-disable-line\n        this._parse(reference, fetchvalue);\n    };\n    _PdfMainObjectCollection.prototype._parse = function (key, value) {\n        var _this = this;\n        if (value instanceof _PdfDictionary) {\n            this._parseDictionary(value);\n        }\n        else if (value instanceof _PdfBaseStream) {\n            this._parseStream(key, value);\n        }\n        else if (value instanceof _PdfReference) {\n            this._parseFetchValue(value);\n        }\n        else if (Array.isArray(value) && value.length > 0) {\n            var isPdfReferenceArray = value.every(function (value) { return value instanceof _PdfReference; }); // eslint-disable-line\n            if (isPdfReferenceArray) {\n                value.forEach(function (ref) { return _this._parseFetchValue(ref); }); // eslint-disable-line\n            }\n            else {\n                value.forEach(function (item) {\n                    if (item instanceof _PdfReference) {\n                        _this._parseFetchValue(item);\n                    }\n                });\n                if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n                    this._addToMainObjectCollection(key, value);\n                }\n            }\n        }\n        else if (typeof value === 'number') {\n            if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n                this._addToMainObjectCollection(key, value);\n            }\n        }\n    };\n    _PdfMainObjectCollection.prototype._addReferencesToMainCollection = function () {\n        var _this = this;\n        var objectsToWrite = []; // eslint-disable-line\n        this._cache.forEach(function (value, key) {\n            if (!_this._mainObjectCollection.has(key)) {\n                objectsToWrite.push({ key: key, value: value });\n            }\n        });\n        objectsToWrite.forEach(function (_a) {\n            var key = _a.key, value = _a.value;\n            _this._addToMainObjectCollection(key, value);\n        });\n    };\n    _PdfMainObjectCollection.prototype._parseDictionary = function (element) {\n        var _this = this;\n        element.forEach(function (key, value) {\n            var processReference = function (ref) {\n                if (!_this._mainObjectCollection.has(ref) && _this._reference.indexOf(ref) === -1) {\n                    var fetchValue = _this._crossReference._fetch(ref); // eslint-disable-line\n                    if (fetchValue instanceof _PdfReference) {\n                        fetchValue = _this._crossReference._fetch(fetchValue);\n                    }\n                    if (fetchValue instanceof _PdfBaseStream) {\n                        _this._parseStream(ref, fetchValue);\n                    }\n                    else {\n                        _this._addToMainObjectCollection(ref, fetchValue);\n                    }\n                }\n            };\n            if (value instanceof _PdfReference) {\n                processReference(value);\n            }\n            else if (Array.isArray(value)) {\n                value.forEach(function (item) {\n                    if (item instanceof _PdfReference) {\n                        processReference(item);\n                    }\n                    else if (item instanceof _PdfDictionary) {\n                        _this._parseDictionary(item);\n                    }\n                });\n            }\n            else if (value instanceof _PdfDictionary) {\n                _this._parseDictionary(value);\n            }\n        });\n    };\n    _PdfMainObjectCollection.prototype._parseStream = function (key, element) {\n        this._parseDictionary(element.dictionary);\n        if (this._reference.indexOf(key) === -1 && !this._mainObjectCollection.has(key)) {\n            var type = element.dictionary.get('Type');\n            var subtype = element.dictionary.get('Subtype');\n            var isUpdated = element.dictionary._updated;\n            var uncompressedValue = void 0;\n            if (isUpdated || (type && (type.name === 'XObject' || type.name === 'Metadata') &&\n                (subtype.name === 'Form' || subtype.name === 'XML'))) {\n                uncompressedValue = this._crossReference._fetch(key);\n            }\n            else {\n                uncompressedValue = this._crossReference._fetch(key, true);\n                uncompressedValue._isCompress = false;\n            }\n            this._addToMainObjectCollection(key, uncompressedValue);\n        }\n    };\n    return _PdfMainObjectCollection;\n}());\n","import { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { PdfField, PdfTextBoxField, PdfButtonField, PdfCheckBoxField, PdfRadioButtonListField, PdfComboBoxField, PdfListBoxField, PdfSignatureField } from './field';\nimport { _getInheritableProperty, _getPageIndex, _isNullOrUndefined } from './../utils';\nimport { PdfFormFieldsTabOrder, _FieldFlag, _SignatureFlag } from './../enumerator';\nimport { PdfPage } from './../pdf-page';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfWidgetAnnotation } from './../annotations/annotation';\n/**\n * Represents a PDF form.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the form of the PDF document\n * let form: PdfForm = document.form;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfForm = /** @class */ (function () {\n    /**\n     * Represents a loaded from the PDF document.\n     *\n     * @private\n     * @param {_PdfDictionary} dictionary Form dictionary.\n     * @param {_PdfCrossReference} crossReference Cross reference object.\n     */\n    function PdfForm(dictionary, crossReference) {\n        this._isDefaultAppearance = false;\n        this._hasKids = false;\n        this._setAppearance = false;\n        this._exportEmptyFields = false;\n        this._fieldCollection = [];\n        this._signFlag = _SignatureFlag.none;\n        this._isNeedAppearances = false;\n        this._dictionary = dictionary;\n        this._crossReference = crossReference;\n        this._parsedFields = new Map();\n        this._fields = [];\n        this._createFields();\n    }\n    Object.defineProperty(PdfForm.prototype, \"count\", {\n        /**\n         * Gets the fields count (Read only).\n         *\n         * @returns {number} Fields count.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the fields count\n         * let count: number = form.count;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fields.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"needAppearances\", {\n        /**\n         *  Gets a value indicating whether need appearances (Read only).\n         *\n         * @returns {boolean} Need appearances.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets the boolean flag indicating need appearances\n         * let needAppearances: number = form.needAppearances;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary.has('NeedAppearances')) {\n                this._needAppearances = this._dictionary.get('NeedAppearances');\n            }\n            return this._needAppearances;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"exportEmptyFields\", {\n        /**\n         *  Gets a value indicating whether allow to export empty fields or not.\n         *\n         * @returns {boolean} Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Gets a value indicating whether allow to export empty fields or not.\n         * let exportEmptyFields: boolean = form.exportEmptyFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportEmptyFields;\n        },\n        /**\n         *  Sets a value indicating whether allow to export empty fields or not.\n         *\n         * @param {boolean} value Export empty fields.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Sets a value indicating whether allow to export empty fields or not.\n         * form.exportEmptyFields = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportEmptyFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfForm.prototype, \"_signatureFlag\", {\n        get: function () {\n            return this._signFlag;\n        },\n        set: function (value) {\n            if (value !== this._signFlag) {\n                this._signFlag = value;\n                this._dictionary.update('SigFlags', value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfField` at the specified index.\n     *\n     * @param {number} index Field index.\n     * @returns {PdfField} Loaded PDF form field at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.fieldAt = function (index) {\n        if (index < 0 || index >= this._fields.length) {\n            throw Error('Index out of range.');\n        }\n        var field;\n        if (this._parsedFields.has(index)) {\n            field = this._parsedFields.get(index);\n            this._isNeedAppearances = true;\n        }\n        else {\n            var dictionary = void 0;\n            var ref = this._fields[index]; // eslint-disable-line\n            if (ref && ref instanceof _PdfReference) {\n                dictionary = this._crossReference._fetch(ref);\n            }\n            if (dictionary) {\n                field = this._parseFields(dictionary, ref);\n                this._parsedFields.set(index, field);\n                if (field && field instanceof PdfField) {\n                    field._annotationIndex = index;\n                }\n            }\n        }\n        return field;\n    };\n    PdfForm.prototype._parseFields = function (dictionary, reference) {\n        var field;\n        if (dictionary) {\n            var key = _getInheritableProperty(dictionary, 'FT', false, true, 'Parent');\n            var fieldFlags = 0;\n            var flag = _getInheritableProperty(dictionary, 'Ff', false, true, 'Parent');\n            if (typeof flag !== 'undefined') {\n                fieldFlags = flag;\n            }\n            if (key) {\n                switch (key.name.toLowerCase()) {\n                    case 'tx':\n                        field = PdfTextBoxField._load(this, dictionary, this._crossReference, reference);\n                        break;\n                    case 'btn':\n                        if ((fieldFlags & _FieldFlag.pushButton) !== 0) {\n                            field = PdfButtonField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                            field = PdfRadioButtonListField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else {\n                            field = PdfCheckBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        break;\n                    case 'ch':\n                        if ((fieldFlags & _FieldFlag.combo) !== 0) {\n                            field = PdfComboBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        else {\n                            field = PdfListBoxField._load(this, dictionary, this._crossReference, reference);\n                        }\n                        break;\n                    case 'sig':\n                        field = PdfSignatureField._load(this, dictionary, this._crossReference, reference);\n                        break;\n                }\n            }\n        }\n        return field;\n    };\n    /**\n     * Add a new `PdfField`.\n     *\n     * @param {PdfField} field Field object to add.\n     * @returns {number} Field index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Add a new form field\n     * let index: number = document.form.add(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.add = function (field) {\n        this._fields.push(field._ref);\n        this._dictionary.update('Fields', this._fields);\n        this._parsedFields.set(this._fields.length - 1, field);\n        field._form = this;\n        this._crossReference._root._updated = true;\n        if (field instanceof PdfSignatureField) {\n            field._form._signatureFlag = _SignatureFlag.signatureExists | _SignatureFlag.appendOnly;\n        }\n        this._isNeedAppearances = true;\n        return (this._fields.length - 1);\n    };\n    /**\n     * Remove the specified PDF form field.\n     *\n     * @param {PdfField} field Field object to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access the loaded form field\n     * let field: PdfField = document.form.fieldAt(3);\n     * // Remove the form field\n     * document.form.removeField(field);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeField = function (field) {\n        var index = this._fields.indexOf(field._ref);\n        if (index >= 0) {\n            this.removeFieldAt(index);\n        }\n    };\n    /**\n     * Remove the PDF form field from specified index.\n     *\n     * @param {number} index Field index to remove.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Remove the form field from the specified index\n     * document.form.removeFieldAt(3);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.removeFieldAt = function (index) {\n        var field = this.fieldAt(index);\n        if (field) {\n            if (field._kidsCount > 0) {\n                for (var i = field._kidsCount - 1; i >= 0; i--) {\n                    var item = field.itemAt(i);\n                    var page = void 0;\n                    if (item) {\n                        page = item._getPage();\n                        if (page) {\n                            page._removeAnnotation(item._ref);\n                        }\n                    }\n                }\n            }\n            else if (field._dictionary.has('Subtype') && field._dictionary.get('Subtype').name === 'Widget') {\n                var page = field.page;\n                if (page) {\n                    page._removeAnnotation(field._ref);\n                }\n            }\n            this._parsedFields.delete(index);\n            this._reorderParsedAnnotations(index);\n        }\n        this._fields.splice(index, 1);\n        var document = this._crossReference._document;\n        var catalog = document._catalog;\n        if (this._fields.length === 0 && document && catalog && catalog._catalogDictionary) {\n            catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n        this._dictionary.set('Fields', this._fields);\n        this._dictionary._updated = true;\n    };\n    PdfForm.prototype._reorderParsedAnnotations = function (index) {\n        var result = new Map();\n        this._parsedFields.forEach(function (value, key) {\n            if (key > index) {\n                result.set(key - 1, value);\n            }\n            else {\n                result.set(key, value);\n            }\n        });\n        this._parsedFields = result;\n    };\n    /**\n     * Sets the flag to indicate the new appearance creation\n     * If true, appearance will not be created. Default appearance has been considered.\n     * If false, new appearance stream has been created from field values and updated as normal appearance.\n     *\n     * @param {boolean} value Set default appearance.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Set boolean flag to create a new appearance stream for form fields.\n     * document.form.setDefaultAppearance(false);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfForm.prototype.setDefaultAppearance = function (value) {\n        this._setAppearance = !value;\n        this._needAppearances = value;\n        this._isDefaultAppearance = value;\n    };\n    PdfForm.prototype.orderFormFields = function (tabOrder) {\n        var _this = this;\n        if (tabOrder === null || typeof tabOrder === 'undefined') {\n            this.orderFormFields(new Map());\n        }\n        else {\n            var tab = void 0;\n            var document_1 = this._crossReference._document;\n            var value = void 0;\n            if (tabOrder && tabOrder instanceof Map) {\n                var setTabOrder = true;\n                if (tabOrder.size > 0) {\n                    this._tabCollection = tabOrder;\n                }\n                else {\n                    setTabOrder = false;\n                    this._tabCollection = tabOrder;\n                }\n                var fieldCollection = new Map();\n                this._fieldCollection = this._getFields();\n                if (_isNullOrUndefined(this._fieldCollection) && this._fieldCollection.length > 0) {\n                    var page = this._fieldCollection[0].page;\n                    if (page && document_1) {\n                        for (var i = 0; i < this._fieldCollection.length; i++) {\n                            var field = this._fieldCollection[Number.parseInt(i.toString(), 10)];\n                            if (field.page) {\n                                var index = _getPageIndex(document_1, this._sortItemByPageIndex(field, true)._pageDictionary);\n                                if (index >= 0) {\n                                    if (fieldCollection.has(index)) {\n                                        value = fieldCollection.get(index);\n                                        value.push(field);\n                                    }\n                                    else {\n                                        value = [];\n                                        value.push(field);\n                                        fieldCollection.set(index, value);\n                                    }\n                                    var page_1 = document_1.getPage(index);\n                                    if (!this._tabCollection.has(index)) {\n                                        this._tabCollection.set(index, page_1.tabOrder);\n                                    }\n                                    if (setTabOrder) {\n                                        page_1.tabOrder = this._tabCollection.get(index);\n                                    }\n                                }\n                            }\n                        }\n                        var fieldsCount_1 = 0;\n                        fieldCollection.forEach(function (value, key) {\n                            _this._tabOrder = _this._tabCollection.get(key);\n                            if (_this._tabOrder !== PdfFormFieldsTabOrder.structure) {\n                                var fields = value;\n                                fields.sort(function (pdfField1, pdfField2) {\n                                    return _this._compareFields(pdfField1, pdfField2);\n                                });\n                                for (var j = 0; j < fields.length; j++) {\n                                    var fieldIndex = _this._fieldCollection.indexOf(fields[Number.parseInt(j.toString(), 10)]);\n                                    if (fieldIndex !== -1 && fieldIndex !== fieldsCount_1 + j) {\n                                        var field = _this._fieldCollection[Number.parseInt(fieldIndex.toString(), 10)];\n                                        _this._fieldCollection.splice(fieldIndex, 1);\n                                        _this._fieldCollection.splice(fieldsCount_1 + j, 0, field);\n                                    }\n                                }\n                            }\n                            fieldsCount_1 += value.length;\n                        });\n                    }\n                }\n            }\n            else {\n                this._tabOrder = tabOrder;\n                tab = this._getOrder(this._tabOrder);\n                this._fieldCollection = this._getFields();\n                this._fieldCollection.sort(function (pdfField1, pdfField2) {\n                    return _this._compareFields(pdfField1, pdfField2);\n                });\n            }\n            this._parsedFields.clear();\n            for (var i = 0; i < this._fieldCollection.length; i++) {\n                this._parsedFields.set(Number.parseInt(i.toString(), 10), this._fieldCollection[Number.parseInt(i.toString(), 10)]);\n                this._fields[Number.parseInt(i.toString(), 10)] = this._fieldCollection[Number.parseInt(i.toString(), 10)]._ref;\n                if (tab) {\n                    this._fieldCollection[Number.parseInt(i.toString(), 10)].page._pageDictionary.update('Tabs', tab);\n                }\n            }\n            this._dictionary.update('Fields', this._fields);\n        }\n    };\n    PdfForm.prototype._createFields = function () {\n        var fields; // eslint-disable-line\n        if (this._dictionary.has('Fields')) {\n            fields = this._dictionary.get('Fields');\n        }\n        var hasNoKids = false;\n        var count = 0;\n        var nodes = []; // eslint-disable-line\n        while (typeof fields !== 'undefined' && fields !== null) {\n            for (; count < fields.length; count++) {\n                var ref = fields[count]; // eslint-disable-line\n                var fieldDictionary = void 0;\n                if (ref && ref instanceof _PdfReference) {\n                    fieldDictionary = this._crossReference._fetch(ref);\n                }\n                var fieldFlags = 0;\n                var flag = _getInheritableProperty(fieldDictionary, 'Ff', false, true, 'Parent');\n                if (typeof flag !== 'undefined') {\n                    fieldFlags = flag;\n                }\n                var fieldKids = void 0;\n                if (fieldDictionary && fieldDictionary.has('Kids')) {\n                    fieldKids = fieldDictionary.get('Kids');\n                    if (typeof fieldKids !== 'undefined' && fieldKids.length > 0) {\n                        for (var i = 0; i < fieldKids.length; i++) {\n                            var reference = fieldKids[Number.parseInt(i.toString(), 10)];\n                            if (reference && reference instanceof _PdfReference) {\n                                var kidsDict = this._crossReference._fetch(reference);\n                                if (typeof kidsDict !== 'undefined' && !kidsDict.has('Parent')) {\n                                    kidsDict.update('Parent', ref);\n                                }\n                            }\n                            else if ((fieldFlags & _FieldFlag.radio) !== 0) {\n                                hasNoKids = true;\n                            }\n                        }\n                    }\n                }\n                if (typeof fieldKids === 'undefined') {\n                    if (fieldDictionary) {\n                        if (this._fields.indexOf(ref) === -1) {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n                else {\n                    var isNode = (!fieldDictionary.has('FT')) || this._isNode(fieldKids);\n                    if (isNode) {\n                        nodes.push({ fields: fields, count: count });\n                        this._hasKids = true;\n                        count = -1;\n                        fields = fieldKids;\n                    }\n                    else {\n                        if (hasNoKids && (fieldFlags & _FieldFlag.radio) !== 0) {\n                            continue;\n                        }\n                        else {\n                            this._fields.push(ref);\n                        }\n                    }\n                }\n            }\n            if (nodes.length === 0) {\n                break;\n            }\n            var entry = nodes.pop(); // eslint-disable-line\n            fields = entry.fields;\n            count = entry.count + 1;\n        }\n    };\n    PdfForm.prototype._isNode = function (kids) {\n        var isNode = false;\n        if (_isNullOrUndefined(kids) && kids.length > 0) {\n            var entry = kids[0]; // eslint-disable-line\n            var dictionary = void 0;\n            if (_isNullOrUndefined(entry)) {\n                if (entry instanceof _PdfDictionary) {\n                    dictionary = entry;\n                }\n                else if (entry instanceof _PdfReference) {\n                    dictionary = this._crossReference._fetch(entry);\n                }\n            }\n            if (dictionary && dictionary.has('Subtype')) {\n                var subtype = dictionary.get('Subtype');\n                if (subtype && subtype.name !== 'Widget') {\n                    isNode = true;\n                }\n            }\n        }\n        return isNode;\n    };\n    PdfForm.prototype._parseWidgetReferences = function () {\n        var _this = this;\n        if (typeof this._widgetReferences === 'undefined' && this.count > 0) {\n            this._widgetReferences = [];\n            this._fields.forEach(function (fieldReference) {\n                var dictionary = _this._crossReference._fetch(fieldReference);\n                if (dictionary) {\n                    if (dictionary.has('Kids')) {\n                        var fieldKids = dictionary.get('Kids');\n                        if (fieldKids && fieldKids.length > 0) {\n                            fieldKids.forEach(function (kidReference) {\n                                var kidDictionary;\n                                if (kidReference && kidReference instanceof _PdfDictionary) {\n                                    kidDictionary = kidReference;\n                                }\n                                else if (kidReference && kidReference instanceof _PdfReference) {\n                                    kidDictionary = _this._crossReference._fetch(kidReference);\n                                }\n                                if (kidDictionary && kidDictionary.has('Subtype')) {\n                                    var subtype = kidDictionary.get('Subtype');\n                                    if (subtype && subtype.name === 'Widget') {\n                                        _this._widgetReferences.push(kidReference);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else {\n                        _this._widgetReferences.push(fieldReference);\n                    }\n                }\n            });\n        }\n        return this._widgetReferences;\n    };\n    PdfForm.prototype._doPostProcess = function (isFlatten, pageToImport) {\n        for (var i = this.count - 1; i >= 0; i--) {\n            var field = this.fieldAt(i);\n            if (field && !field._isLoaded && typeof field._tabIndex !== 'undefined' && field._tabIndex >= 0) {\n                var page = field._page;\n                if (page &&\n                    page._pageDictionary.has('Annots') &&\n                    (page.tabOrder === PdfFormFieldsTabOrder.manual || this._tabOrder === PdfFormFieldsTabOrder.manual)) {\n                    var annots = page._pageDictionary.get('Annots');\n                    var annotationCollection = new PdfAnnotationCollection(annots, this._crossReference, page);\n                    page._annotations = annotationCollection;\n                    for (var i_1 = 0; i_1 < field.itemsCount; i_1++) {\n                        var item = field.itemAt(i_1);\n                        if (item && item instanceof PdfWidgetAnnotation) {\n                            var index = annots.indexOf(item._ref);\n                            if (index < 0) {\n                                index = field._annotationIndex;\n                            }\n                            if (index >= 0) {\n                                var annotations = page.annotations._reArrange(field._ref, field._tabIndex, index);\n                                page._pageDictionary.update('Annots', annotations);\n                                page._pageDictionary._updated = true;\n                            }\n                        }\n                    }\n                }\n            }\n            if (field && ((pageToImport && field.page === pageToImport) || !pageToImport)) {\n                if (pageToImport) {\n                    field._isImport = true;\n                }\n                field._doPostProcess(isFlatten || field.flatten);\n                if (!isFlatten && field.flatten || (isFlatten && pageToImport && field.page === pageToImport)) {\n                    this.removeFieldAt(i);\n                }\n            }\n        }\n    };\n    PdfForm.prototype._getFieldIndex = function (name) {\n        var index = -1;\n        if (this.count > 0) {\n            if (!this._fieldNames) {\n                this._fieldNames = [];\n            }\n            if (!this._indexedFieldNames) {\n                this._indexedFieldNames = [];\n            }\n            if (!this._actualFieldNames) {\n                this._actualFieldNames = [];\n            }\n            if (!this._indexedActualFieldNames) {\n                this._indexedActualFieldNames = [];\n            }\n            for (var i = 0; i < this.count; i++) {\n                var field = this.fieldAt(i);\n                if (field) {\n                    var fieldName = field.name;\n                    if (fieldName) {\n                        this._fieldNames.push(fieldName);\n                        this._indexedFieldNames.push(fieldName.split('[')[0]);\n                    }\n                    var actualName = field.actualName;\n                    if (actualName) {\n                        this._actualFieldNames.push(actualName);\n                        this._indexedActualFieldNames.push(actualName.split('[')[0]);\n                    }\n                }\n            }\n            var nameIndex = this._fieldNames.indexOf(name);\n            if (nameIndex !== -1) {\n                index = nameIndex;\n            }\n            else {\n                nameIndex = this._indexedFieldNames.indexOf(name);\n                if (nameIndex !== -1) {\n                    index = nameIndex;\n                }\n                else {\n                    nameIndex = this._actualFieldNames.indexOf(name);\n                    if (nameIndex !== -1) {\n                        index = nameIndex;\n                    }\n                    else {\n                        nameIndex = this._indexedActualFieldNames.indexOf(name);\n                        if (nameIndex !== -1) {\n                            index = nameIndex;\n                        }\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    PdfForm.prototype._getFields = function () {\n        var fields = [];\n        for (var i = 0; i < this._fields.length; i++) {\n            var field = this.fieldAt(i);\n            if (field && field instanceof PdfField) {\n                fields.push(field);\n            }\n        }\n        return fields;\n    };\n    PdfForm.prototype._getOrder = function (tabOrder) {\n        if (tabOrder !== PdfFormFieldsTabOrder.none) {\n            var tabs = '';\n            if (tabOrder === PdfFormFieldsTabOrder.row) {\n                tabs = 'R';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.column) {\n                tabs = 'C';\n            }\n            else if (tabOrder === PdfFormFieldsTabOrder.structure) {\n                tabs = 'S';\n            }\n            return _PdfName.get(tabs);\n        }\n        return null;\n    };\n    PdfForm.prototype._compareFields = function (field1, field2) {\n        var result = 0;\n        var xdiff;\n        var index;\n        var page1 = field1.page;\n        var page2 = field2.page;\n        if (page1 && !page1._isNew && page1 instanceof PdfPage && page2 && !page2._isNew && page2 instanceof PdfPage) {\n            var page1Index = this._sortItemByPageIndex(field1, false)._pageIndex;\n            var page2Index = this._sortItemByPageIndex(field2, false)._pageIndex;\n            var rectangle1 = void 0;\n            if (field1._dictionary.has('Kids')) {\n                rectangle1 = this._getItemRectangle(field1);\n            }\n            else {\n                rectangle1 = this._getRectangle(field1._dictionary);\n            }\n            var rectangle2 = void 0;\n            if (field2._dictionary.has('Kids')) {\n                rectangle2 = this._getItemRectangle(field2);\n            }\n            else {\n                rectangle2 = this._getRectangle(field2._dictionary);\n            }\n            var firstHeight = rectangle1[3] - rectangle1[1];\n            var secondHeight = rectangle2[3] - rectangle2[1];\n            if (rectangle1 && rectangle1.length >= 2 && rectangle2 && rectangle2.length >= 2) {\n                var x1 = rectangle1[0];\n                var y1 = rectangle1[1];\n                var x2 = rectangle2[0];\n                var y2 = rectangle2[1];\n                if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                    typeof y1 === 'number' && typeof y2 === 'number') {\n                    index = page1Index - page2Index;\n                    if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            var isValid = xdiff === -1 && y1 > y2 && (y1 - firstHeight / 2) < y2;\n                            isValid = isValid || (xdiff === 1 && y2 > y1 && (y2 - secondHeight / 2) < y1);\n                            if (isValid) {\n                                xdiff = 0;\n                            }\n                        }\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                        xdiff = this._compare(x1, x2);\n                        if (index !== 0) {\n                            result = index;\n                        }\n                        else if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                    else if (this._tabOrder === PdfFormFieldsTabOrder.manual ||\n                        this._tabOrder === PdfFormFieldsTabOrder.none ||\n                        this._tabOrder === PdfFormFieldsTabOrder.structure ||\n                        this._tabOrder === PdfFormFieldsTabOrder.widget) {\n                        if (field1 instanceof PdfField && field2 instanceof PdfField) {\n                            var field1Index = field1.tabIndex;\n                            var field2Index = field2.tabIndex;\n                            xdiff = this._compare(field1Index, field2Index);\n                            if (index !== 0) {\n                                result = index;\n                            }\n                            else {\n                                result = xdiff;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._getRectangle = function (dictionary) {\n        var rect;\n        if (dictionary && dictionary.has('Rect')) {\n            rect = dictionary.getArray('Rect');\n        }\n        return rect;\n    };\n    PdfForm.prototype._getItemRectangle = function (field) {\n        var result;\n        var dictionary = field._dictionary;\n        if (dictionary.has('Kids')) {\n            var kids = dictionary.getArray('Kids');\n            if (_isNullOrUndefined(kids) && kids.length >= 1) {\n                if (kids.length === 1) {\n                    result = this._getRectangle(kids[0]);\n                }\n                else {\n                    if (field && field.itemsCount > 1) {\n                        result = this._getRectangle(field.itemAt(0)._dictionary);\n                    }\n                    else {\n                        result = this._getRectangle(kids[0]);\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._compare = function (x, y) {\n        if (x > y) {\n            return 1;\n        }\n        else if (x < y) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    };\n    PdfForm.prototype._compareKidsElement = function (x, y) {\n        var xDictionary = this._crossReference._fetch(x);\n        var yDictionary = this._crossReference._fetch(y);\n        var xRect = this._getRectangle(xDictionary);\n        var yRect = this._getRectangle(yDictionary);\n        var result;\n        if (xRect && xRect.length >= 2 && yRect && yRect.length >= 2) {\n            var x1 = xRect[0];\n            var y1 = xRect[1];\n            var x2 = yRect[0];\n            var y2 = yRect[1];\n            if (typeof x1 === 'number' && typeof x2 === 'number' &&\n                typeof y1 === 'number' && typeof y2 === 'number') {\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(y2, y1);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(x1, x2);\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(x1, x2);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        result = this._compare(y2, y1);\n                    }\n                }\n                else {\n                    result = 0;\n                }\n                return result;\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._sortItemByPageIndex = function (field, hasPageTabOrder) {\n        var page = field.page;\n        var tabOrder = this._tabOrder;\n        this._tabOrder = hasPageTabOrder ? field.page.tabOrder : tabOrder;\n        this._sortFieldItems(field);\n        if (field._isLoaded && field._kidsCount > 1) {\n            page = field.itemAt(0).page;\n        }\n        this._tabOrder = tabOrder;\n        if (typeof page === 'undefined') {\n            page = field.page;\n        }\n        return page;\n    };\n    PdfForm.prototype._sortFieldItems = function (field) {\n        var _this = this;\n        if (field._isLoaded && (field instanceof PdfTextBoxField ||\n            field instanceof PdfListBoxField ||\n            field instanceof PdfCheckBoxField ||\n            field instanceof PdfRadioButtonListField)) {\n            var collection = field._parseItems(); // eslint-disable-line\n            collection.sort(function (item1, item2) {\n                return _this._compareFieldItem(item1, item2);\n            });\n            field._parsedItems.clear();\n            for (var i = 0; i < collection.length; i++) {\n                field._parsedItems.set(i, collection[Number.parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    PdfForm.prototype._compareFieldItem = function (item1, item2) {\n        var result = 0;\n        if (typeof item1 !== 'undefined' && typeof item2 !== 'undefined') {\n            var page1 = item1.page;\n            var page2 = item2.page;\n            var array1 = this._getRectangle(item1._dictionary);\n            var array2 = this._getRectangle(item2._dictionary);\n            if (array1 && array2) {\n                var x1 = array1[0];\n                var y1 = array1[1];\n                var x2 = array2[0];\n                var y2 = array2[1];\n                var xdiff = void 0;\n                if (this._tabOrder === PdfFormFieldsTabOrder.row) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(y2, y1);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(x1, x2);\n                        }\n                    }\n                }\n                else if (this._tabOrder === PdfFormFieldsTabOrder.column) {\n                    xdiff = this._compare(page1._pageIndex, page2._pageIndex);\n                    if (xdiff !== 0) {\n                        result = xdiff;\n                    }\n                    else {\n                        xdiff = this._compare(x1, x2);\n                        if (xdiff !== 0) {\n                            result = xdiff;\n                        }\n                        else {\n                            result = this._compare(y2, y1);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    PdfForm.prototype._clear = function () {\n        this._fields = [];\n        this._parsedFields = new Map();\n    };\n    return PdfForm;\n}());\nexport { PdfForm };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _PdfDictionary, _PdfName, _PdfReference } from './../pdf-primitives';\nimport { _PdfParser, _PdfLexicalOperator } from '../pdf-parser';\nimport { _PdfStream } from '../base-stream';\nimport { _PdfCommand } from './../pdf-primitives';\nimport { _ExportHelper } from './xfdf-document';\nimport { PdfUriAnnotation, PdfRubberStampAnnotation, PdfFileLinkAnnotation, PdfTextWebLinkAnnotation, PdfRectangleAnnotation, PdfDocumentLinkAnnotation } from './../annotations/annotation';\nimport { _bytesToString, _getNewGuidString, _byteArrayToHexString, _stringToBytes, _isNullOrUndefined } from './../utils';\nimport { PdfCheckBoxField, PdfComboBoxField, PdfListBoxField, PdfRadioButtonListField, PdfTextBoxField } from './../form/field';\nimport { _StringTokenizer } from './../fonts/string-layouter';\nimport { _PdfFlateStream } from '../flate-stream';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\nvar _FdfDocument = /** @class */ (function (_super) {\n    __extends(_FdfDocument, _super);\n    function _FdfDocument(fileName) {\n        var _this = _super.call(this) || this;\n        _this._annotationObjects = new Map(); // eslint-disable-line\n        _this._specialCharacters = 'âãÏÓ';\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _FdfDocument.prototype._exportAnnotations = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = true;\n        this._exportAnnotationData(document, document.pageCount);\n        return this._save();\n    };\n    _FdfDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _FdfDocument.prototype._save = function () {\n        var _this = this;\n        var objectID = 0;\n        var objectArray = [];\n        if (!this._isAnnotationExport) {\n            if (this._asPerSpecification) {\n                this.fdfString += '%FDF-1.2\\n%' + this._specialCharacters + '\\r\\n1 0 obj\\r<</FDF<</F(';\n                this.fdfString += this._fileName + ')';\n                this.fdfString += '/Fields[';\n            }\n            else {\n                this.fdfString += '%FDF-1.2\\n';\n            }\n            var form = this._document.form;\n            if (form !== null && typeof form !== 'undefined') {\n                this._exportEmptyFields = form.exportEmptyFields;\n                var count = this._document.form.count;\n                for (var i = 0; i < count; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    var value = this._exportFormFieldsData(field);\n                    if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField\n                        || field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                        objectID++;\n                    }\n                    if (!this._asPerSpecification) {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V ';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '<' + this._stringToHexString((Array.isArray(value) ? value[0] : value)) + '>';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '<' + this._stringToHexString(value[Number.parseInt(j.toString(), 10)]) + '>';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += ' >>endobj\\n';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += objectID + ' 0 obj<</T <' + this._stringToHexString(field.name) + '> /V /';\n                            this.fdfString += value + ' >>endobj\\n';\n                        }\n                    }\n                    else {\n                        if (field instanceof PdfTextBoxField || field instanceof PdfListBoxField || field instanceof PdfComboBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V';\n                            if (typeof value === 'string' || (Array.isArray(value) && value.length === 1)) {\n                                this.fdfString += '(' + (Array.isArray(value) ? value[0] : value) + ')';\n                            }\n                            else if (Array.isArray(value)) {\n                                this.fdfString += '[';\n                                for (var j = 0; j < value.length; j++) {\n                                    this.fdfString += '(' + value[Number.parseInt(j.toString(), 10)] + ')';\n                                    if (j !== value.length - 1) {\n                                        this.fdfString += ' ';\n                                    }\n                                }\n                                this.fdfString += ']';\n                            }\n                            this.fdfString += '>>';\n                        }\n                        else if (field instanceof PdfRadioButtonListField || field instanceof PdfCheckBoxField) {\n                            objectArray.push(objectID);\n                            this.fdfString += '<</T(' + field.name + ')/V/' + value + '>>';\n                        }\n                    }\n                }\n            }\n            if (this._asPerSpecification) {\n                this.fdfString += ']';\n                this.fdfString += '/ID[]/UF(' + this._fileName + ')>>/Type/Catalog>>\\rendobj\\rtrailer\\r\\n<</Root 1 0 R>>\\r\\n';\n                this.fdfString += '%%EOF\\r\\n';\n            }\n            else {\n                this.fdfString += (this._table.size + 1) + ' 0 obj<</F <' + this._stringToHexString(this._fileName) + '>  /Fields [';\n                for (var i = 0; i < this._table.size; i++) {\n                    var field = this._document.form.fieldAt(i);\n                    if (field !== null && typeof field !== 'undefined' && field.export) {\n                        this.fdfString += objectArray[Number.parseInt(i.toString(), 10)] + ' 0 R ';\n                    }\n                }\n                this.fdfString += ']>>endobj\\n';\n                this.fdfString += (objectArray.length + 2) + ' 0 obj<</Version /1.4 /FDF ' + (objectArray.length + 1) + ' 0 R>>endobj\\n';\n                this.fdfString += 'trailer\\n<</Root ' + (objectArray.length + 2) + ' 0 R>>';\n            }\n        }\n        var arrayBuffer = new ArrayBuffer(this.fdfString.length * 1);\n        var result = new Uint8Array(arrayBuffer);\n        result.forEach(function (val, i) {\n            result[i] = _this.fdfString.charCodeAt(i); // eslint-disable-line\n        });\n        return result;\n    };\n    _FdfDocument.prototype._importAnnotations = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        this._isAnnotationImport = true;\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, true, false);\n        this._readFdfData(parser);\n        if (_isNullOrUndefined(this._annotationObjects) && this._annotationObjects.size > 0) {\n            this._annotationObjects.clear();\n        }\n        if (_isNullOrUndefined(this._table) && this._table.size > 0) {\n            this._table.clear();\n        }\n    };\n    _FdfDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._checkFdf(_bytesToString(data));\n        var stream = new _PdfStream(data);\n        var parser = new _PdfParser(new _PdfLexicalOperator(stream), null, false, false);\n        this._readFdfData(parser);\n    };\n    _FdfDocument.prototype._readFdfData = function (parser) {\n        var _this = this;\n        var token = parser.getObject(); // eslint-disable-line\n        if (this._isAnnotationImport) {\n            var key = '';\n            while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                if (token instanceof _PdfDictionary) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token instanceof _PdfStream || token instanceof _PdfFlateStream) {\n                    this._table.set(key, token);\n                    key = '';\n                }\n                else if (token !== null && Number.isInteger(token) && token !== 0) {\n                    if (parser.first >= 0) {\n                        key = token.toString() + ' ' + parser.first.toString();\n                    }\n                }\n                else if (token instanceof _PdfCommand && token.command !== null && typeof token.command !== 'undefined' &&\n                    token.command === 'trailer') {\n                    key = token.command;\n                }\n                token = parser.getObject();\n            }\n            this._annotationObjects = this._parseAnnotationData();\n            this._annotationObjects.forEach(function (value, key) {\n                var dictionary = value;\n                dictionary._crossReference = _this._crossReference;\n                dictionary._updated = true;\n                if (dictionary && dictionary.has('Page')) {\n                    var pageNumber = dictionary.get('Page');\n                    if (pageNumber !== null && typeof pageNumber !== 'undefined') {\n                        var pageIndex = pageNumber;\n                        if (pageIndex < _this._document.pageCount) {\n                            var page = _this._document.getPage(pageIndex);\n                            var pageDictionary = page._pageDictionary;\n                            if (pageDictionary) {\n                                var annotations = page.annotations;\n                                var annotation = annotations._parseAnnotation(dictionary);\n                                if (annotation !== null && typeof annotation !== 'undefined') {\n                                    annotation._isImported = true;\n                                    var reference = _this._crossReference._getNextReference();\n                                    _this._crossReference._cacheMap.set(reference, dictionary);\n                                    if (dictionary.has('NM') || dictionary.has('IRT')) {\n                                        _this._addReferenceToGroup(reference, dictionary);\n                                    }\n                                    annotation._ref = reference;\n                                    var index = annotations._annotations.length;\n                                    annotations._annotations.push(reference);\n                                    if (annotations._comments && annotations._comments.length > 0) {\n                                        annotations._comments = [];\n                                    }\n                                    pageDictionary.set('Annots', annotations._annotations);\n                                    pageDictionary._updated = true;\n                                    annotations._parsedAnnotations.set(index, annotation);\n                                    _this._handlePopup(annotations, reference, dictionary, pageDictionary);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            if (this._groupHolders && this._groupHolders.length > 0) {\n                for (var i = 0; i < this._groupHolders.length; i++) {\n                    var dictionary = this._groupHolders[Number.parseInt(i.toString(), 10)];\n                    if (dictionary && dictionary.has('IRT')) {\n                        var inReplyTo = dictionary.get('IRT');\n                        if (inReplyTo) {\n                            if (this._groupReferences && this._groupReferences.has(inReplyTo)) {\n                                dictionary.update('IRT', this._groupReferences.get(inReplyTo));\n                            }\n                            else {\n                                delete dictionary._map.IRT;\n                            }\n                        }\n                    }\n                }\n            }\n            this._groupHolders = [];\n            this._groupReferences = new Map();\n        }\n        else {\n            token = parser.getObject();\n            if (!this._asPerSpecification) {\n                token = parser.getObject();\n                if (token instanceof _PdfCommand && token.command !== null) {\n                    token = token.command;\n                }\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary) {\n                        var t = token.getArray('T');\n                        var v = void 0;\n                        if (token._map.V instanceof _PdfName) {\n                            v = token.getArray('V').name;\n                        }\n                        else {\n                            v = token.getArray('V');\n                        }\n                        if (t !== null && t !== undefined && t.length > 0) {\n                            this._table.set(t, v);\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            else {\n                while (token !== null && typeof token !== 'undefined' && token !== 'EOF') {\n                    if (token instanceof _PdfDictionary && token !== null && token._map.FDF !== null && token._map.FDF !== undefined) {\n                        token = token._map.FDF;\n                        if (token instanceof _PdfDictionary && token._map.Fields !== null && token._map.Fields !== undefined) {\n                            token = token._map.Fields;\n                            if (token !== null && token !== undefined) {\n                                for (var i = 0; i < token.length; i++) {\n                                    var field = token[Number.parseInt(i.toString(), 10)];\n                                    if (field instanceof _PdfDictionary && field !== null && field !== undefined) {\n                                        var t = field.getArray('T');\n                                        var v = void 0;\n                                        if (field._map.V instanceof _PdfName) {\n                                            v = field.getArray('V').name;\n                                        }\n                                        else {\n                                            v = field.getArray('V');\n                                        }\n                                        if (t !== null && t !== undefined && t.length > 0) {\n                                            this._table.set(t, v);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    token = parser.getObject();\n                }\n            }\n            this._importField();\n        }\n    };\n    _FdfDocument.prototype._parseAnnotationData = function () {\n        var objects = new Map(); // eslint-disable-line\n        var mappedObjects = new Map(); // eslint-disable-line  \n        objects = this._table;\n        if (objects !== null && typeof objects !== 'undefined' && objects.size > 0 && objects.has('trailer')) {\n            var trailer = objects.get('trailer');\n            if (trailer instanceof _PdfDictionary && trailer !== null && typeof trailer !== 'undefined' && trailer.has('Root')) {\n                var holder = trailer.getRaw('Root');\n                if (holder !== null && typeof holder !== 'undefined') {\n                    var rootKey = holder.objectNumber.toString() + ' ' + holder.generationNumber.toString();\n                    if (objects.has(rootKey)) {\n                        var root = objects.get(rootKey);\n                        if (root !== null && typeof root !== 'undefined' && root.has('FDF')) {\n                            var fdf = root.get('FDF');\n                            if (fdf !== null && typeof fdf !== 'undefined' && fdf.has('Annots')) {\n                                var annots = fdf.get('Annots');\n                                if (annots !== null && typeof annots !== 'undefined' && annots.length > 0) {\n                                    for (var i = 0; i < annots.length; i++) {\n                                        var annot = annots[Number.parseInt(i.toString(), 10)];\n                                        var key = annot.objectNumber.toString() + ' ' + annot.generationNumber.toString();\n                                        if (objects.has(key)) {\n                                            annot = objects.get(key);\n                                            mappedObjects.set(key, annot);\n                                            objects.delete(key);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    objects.delete(rootKey);\n                }\n            }\n            objects.delete('trailer');\n        }\n        return mappedObjects;\n    };\n    _FdfDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var index = form._getFieldIndex(key);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field) {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        if (Array.isArray(value)) {\n                            param = value;\n                        }\n                        else {\n                            param.push(value);\n                        }\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    //#region Export Annotations\n    _FdfDocument.prototype._exportAnnotationData = function (document, pageCount) {\n        var genNumber = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace;\n        var startDictionary = '<<' + '/';\n        this.fdfString += '%FDF-1.2' + '\\r\\n';\n        var index = 2;\n        var annot = new Array();\n        var appearance = this.exportAppearance;\n        for (var i = 0; i < pageCount; i++) {\n            var page = document.getPage(i);\n            if (page !== null && typeof page !== 'undefined' && page.annotations.count > 0) {\n                for (var k = 0; k < page.annotations.count; k++) {\n                    var annotation = page.annotations.at(k);\n                    if (annotation !== null && typeof annotation !== 'undefined' && !(annotation instanceof PdfFileLinkAnnotation ||\n                        annotation instanceof PdfTextWebLinkAnnotation || annotation instanceof PdfDocumentLinkAnnotation ||\n                        annotation instanceof PdfUriAnnotation)) {\n                        if (annotation instanceof PdfRubberStampAnnotation || annotation instanceof PdfRectangleAnnotation) {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, true);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                        else {\n                            var value = this._exportAnnotation(annotation, this.fdfString, index, annot, i, appearance);\n                            index = value.index;\n                            annot = value.annot;\n                        }\n                    }\n                }\n            }\n        }\n        if (index !== 2) {\n            var root = '1' + genNumber;\n            this.fdfString += root + 'obj' + '\\r\\n' + startDictionary + 'FDF' + startDictionary + 'Annots' + '[';\n            for (var i = 0; i < annot.length - 1; i++) {\n                this.fdfString += annot[Number.parseInt(i.toString(), 10)] + genNumber + 'R' + ' ';\n            }\n            this.fdfString += annot[annot.length - 1] + genNumber + 'R' + ']' + '/' + 'F' + '(' + this._fileName + ')' + '/' + 'UF' + '(';\n            this.fdfString += this._fileName + ')>>' + '/' + 'Type' + '/' + 'Catalog' + '>>' + '\\r\\n' + 'endobj' + '\\r\\n';\n            this.fdfString += 'trailer' + '\\r\\n' + startDictionary + 'Root' + ' ' + root + 'R' + '>>' + '\\r\\n' + '%%EOF' + '\\r\\n';\n        }\n    };\n    _FdfDocument.prototype._exportAnnotation = function (annotation, fdfString, index, annot, pageIndex, appearance) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var dictionary = annotation._dictionary;\n        var startObject = _StringTokenizer._whiteSpace + '0' + _StringTokenizer._whiteSpace + 'obj' + '\\r\\n';\n        var endObject = '\\r\\n' + 'endobj' + '\\r\\n';\n        this._annotationID = index.toString();\n        this.fdfString += index + startObject + '<<';\n        var list = new Map(); // eslint-disable-line\n        var streamReference = new Array();\n        annot.push(this._annotationID);\n        dictionary.set('Page', pageIndex);\n        var annotValue = this._getEntries(list, streamReference, index, dictionary, this.fdfString, appearance);\n        index = annotValue.index;\n        list = annotValue.list;\n        streamReference = annotValue.streamReference;\n        delete dictionary._map.Page;\n        this.fdfString += '>>' + endObject;\n        var _loop_1 = function () {\n            var keys = Array();\n            list.forEach(function (key, value) {\n                keys.push(value);\n            });\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[Number.parseInt(i.toString(), 10)];\n                if (list.get(key) instanceof _PdfDictionary || list.get(key) instanceof _PdfStream ||\n                    list.get(key) instanceof _PdfFlateStream) {\n                    if (list.get(key) instanceof _PdfDictionary) {\n                        dictionary = list.get(key);\n                    }\n                    else {\n                        dictionary = list.get(key).dictionary;\n                    }\n                    if (dictionary !== null && typeof dictionary !== 'undefined') {\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Type')) {\n                            var type = dictionary.get('Type');\n                            if (type !== null && typeof type !== 'undefined' && type.name === 'Annot') {\n                                annot.push(key.toString());\n                                dictionary.set('Page', pageIndex);\n                            }\n                        }\n                        this_1.fdfString += key + startObject + '<<';\n                        var value = this_1._getEntries(list, streamReference, index, dictionary, this_1.fdfString, appearance);\n                        list = value.list;\n                        streamReference = value.streamReference;\n                        index = value.index;\n                        if (dictionary instanceof _PdfDictionary && dictionary.has('Page')) {\n                            delete dictionary._map.Page;\n                        }\n                        this_1.fdfString += '>>';\n                        if (streamReference !== null && typeof streamReference !== 'undefined' && streamReference.indexOf(key) !== -1) {\n                            this_1._appendStream(list.get(key), this_1.fdfString);\n                        }\n                        this_1.fdfString += endObject;\n                    }\n                }\n                list.delete(key);\n            }\n        };\n        var this_1 = this;\n        while (list.size > 0) {\n            _loop_1();\n        }\n        index++;\n        helper.index = index;\n        helper.annot = annot;\n        return helper;\n    };\n    _FdfDocument.prototype._appendStream = function (value, fdfString) {\n        var stream = value; // eslint-disable-line\n        this.fdfString = fdfString;\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            if (value instanceof _PdfFlateStream) {\n                stream = value.stream;\n            }\n            else {\n                stream = value;\n            }\n        }\n        if (value instanceof _PdfFlateStream || value instanceof _PdfStream) {\n            var byteArray = stream.getBytes();\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            var compressString = sw.getCompressedString;\n            this.fdfString += 'stream' + '\\r\\n';\n            this.fdfString += compressString;\n            this.fdfString += '\\r\\n' + 'endstream';\n        }\n    };\n    _FdfDocument.prototype._getEntries = function (list, // eslint-disable-line\n    streamReference, index, dictionary, fdfString, hasAppearance) {\n        var _this = this;\n        var flag = false;\n        var helper = new _FdfHelper();\n        this.fdfString = fdfString;\n        var listDictionary = list; // eslint-disable-line\n        dictionary.forEach(function (key, value) {\n            if (!((!hasAppearance && key === 'AP'))) {\n                if (key !== 'P') {\n                    _this.fdfString += '/' + key;\n                }\n                if (key === 'Sound' || key === 'F' || hasAppearance) {\n                    flag = true;\n                }\n                var primitive = value; // eslint-disable-line\n                if (typeof primitive === 'string') {\n                    _this.fdfString += '(' + _this._getFormattedString(primitive) + ')';\n                }\n                else if (primitive instanceof _PdfName) {\n                    _this.fdfString += '/' + primitive.name;\n                }\n                else if (primitive instanceof Array) {\n                    primitive = primitive; // eslint-disable-line\n                    var value_1 = _this._appendArray(primitive, _this.fdfString, index, flag, listDictionary, streamReference);\n                    listDictionary = value_1.list;\n                    streamReference = value_1.streamReference;\n                    index = value_1.index;\n                }\n                else if (typeof primitive === 'number') {\n                    _this.fdfString += ' ' + primitive.toString();\n                }\n                else if (typeof primitive === 'boolean') {\n                    _this.fdfString += ' ' + ((primitive) ? 'true' : 'false');\n                }\n                else if (primitive instanceof _PdfDictionary) {\n                    _this.fdfString += '<<';\n                    primitive = primitive;\n                    var value_2 = _this._getEntries(listDictionary, streamReference, index, primitive, _this.fdfString, hasAppearance);\n                    listDictionary = value_2.list;\n                    streamReference = value_2.streamReference;\n                    index = value_2.index;\n                    _this.fdfString += '>>';\n                }\n                else if (primitive instanceof _PdfReference) {\n                    var pageNumber = dictionary.get('Page');\n                    if (key === 'Parent') {\n                        _this.fdfString += ' ' + _this._annotationID + ' 0 R';\n                        _this.fdfString += '/Page ' + pageNumber;\n                    }\n                    else if (key === 'IRT') {\n                        if (_this._crossReference && _this._crossReference._fetch && primitive) {\n                            var inReplyToDictionary = _this._crossReference._fetch(primitive);\n                            if (inReplyToDictionary && inReplyToDictionary.has('NM')) {\n                                var input = inReplyToDictionary.get('NM');\n                                if (input !== null && typeof input !== 'undefined') {\n                                    _this.fdfString += '(' + _this._getFormattedString(input) + ')';\n                                }\n                            }\n                        }\n                    }\n                    else if (key !== 'P') {\n                        var holder = primitive;\n                        if (holder !== null && typeof holder !== 'undefined') {\n                            index++;\n                            _this.fdfString += ' ' + index + ' 0 R';\n                            if (flag) {\n                                streamReference.push(index);\n                            }\n                            listDictionary.set(index, dictionary.get(key));\n                        }\n                    }\n                }\n                flag = false;\n            }\n        });\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendArray = function (array, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        this.fdfString += '[';\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (_isNullOrUndefined(array) && array.length > 0) {\n            var count = array.length;\n            for (var i = 0; i < count; i++) {\n                var element = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (i !== 0 && (typeof element === 'number' || element instanceof _PdfReference || typeof element === 'boolean')) {\n                    this.fdfString += ' ';\n                }\n                var value = this._appendElement(element, this.fdfString, index, flag, listDictionary, streamReference);\n                listDictionary = value.list;\n                streamReference = value.streamReference;\n                index = value.index;\n            }\n        }\n        this.fdfString += ']';\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._appendElement = function (element, // eslint-disable-line\n    fdfString, index, flag, list, // eslint-disable-line\n    streamReference) {\n        this.fdfString = fdfString;\n        var helper = new _FdfHelper();\n        var listDictionary = list; // eslint-disable-line\n        if (typeof element === 'number') {\n            this.fdfString += (element).toString();\n        }\n        else if (element instanceof _PdfName) {\n            this.fdfString += (element.name.toString());\n        }\n        else if (element instanceof Array) {\n            element = element; // eslint-disable-line\n            var value = this._appendArray(element, this.fdfString, index, flag, listDictionary, streamReference);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n        }\n        else if (element instanceof _PdfDictionary) {\n            this.fdfString += '<<';\n            element = element;\n            var value = this._getEntries(listDictionary, streamReference, index, element, this.fdfString, flag);\n            listDictionary = value.list;\n            streamReference = value.streamReference;\n            index = value.index;\n            this.fdfString += '>>';\n        }\n        helper.list = listDictionary;\n        helper.streamReference = streamReference;\n        helper.index = index;\n        return helper;\n    };\n    _FdfDocument.prototype._getFormattedString = function (value) {\n        var result = '';\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charCodeAt(i);\n            if (c === 40 || c === 41) {\n                result += '\\'';\n            }\n            result += String.fromCharCode(c);\n        }\n        return result;\n    };\n    //#endregion\n    _FdfDocument.prototype._checkFdf = function (element) {\n        if (element.includes(this._specialCharacters) || element.includes('Ã¢Ã£Ã\\u008fÃ\\u0093')) {\n            this._asPerSpecification = true;\n        }\n        if (element.startsWith('%')) {\n            var token = element.substring(1, 5);\n            if (token !== 'FDF-') { // eslint-disable-line\n                throw new Error('Invalid FDF file.');\n            }\n        }\n    };\n    _FdfDocument.prototype._stringToHexString = function (text) {\n        var hexString = '';\n        if (text !== null && typeof text !== 'undefined' && text.length > 0) {\n            var bytesValue = _stringToBytes(text);\n            hexString = _byteArrayToHexString(bytesValue);\n        }\n        return hexString;\n    };\n    return _FdfDocument;\n}(_ExportHelper));\nexport { _FdfDocument };\nvar _FdfHelper = /** @class */ (function () {\n    function _FdfHelper() {\n    }\n    return _FdfHelper;\n}());\nexport { _FdfHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _XmlWriter } from './xml-writer';\nimport { _bytesToString, _getNewGuidString } from './../utils';\nimport { _ExportHelper } from './xfdf-document';\nvar _XmlDocument = /** @class */ (function (_super) {\n    __extends(_XmlDocument, _super);\n    function _XmlDocument(fileName) {\n        var _this = _super.call(this) || this;\n        if (fileName !== null && typeof fileName !== 'undefined') {\n            _this._fileName = fileName;\n        }\n        return _this;\n    }\n    _XmlDocument.prototype._exportAnnotations = function () {\n        throw new Error('Method not implemented.');\n    };\n    _XmlDocument.prototype._exportFormFields = function (document) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        this._format = 'XML';\n        this._key = _getNewGuidString();\n        return this._save();\n    };\n    _XmlDocument.prototype._save = function () {\n        var writer = new _XmlWriter();\n        writer._writeStartDocument();\n        if (this._asPerSpecification) {\n            writer._writeStartElement('fields');\n            writer._writeAttributeString('xfdf', 'http://ns.adobe.com/xfdf-transition/', 'xmlns', null);\n        }\n        else {\n            writer._writeStartElement('Fields');\n        }\n        var form = this._document.form;\n        if (form !== null && typeof form !== 'undefined') {\n            this._exportEmptyFields = form.exportEmptyFields;\n            var count = this._document.form.count;\n            for (var i = 0; i < count; i++) {\n                var field = this._document.form.fieldAt(i);\n                if (field !== null && typeof field !== 'undefined' && field.export) {\n                    this._exportFormFieldData(field);\n                }\n            }\n            this._writeFormFieldData(writer, this._asPerSpecification);\n        }\n        var result = writer._save();\n        writer._destroy();\n        return result;\n    };\n    _XmlDocument.prototype._writeFormFieldData = function (writer, isAcrobat) {\n        if (isAcrobat === void 0) { isAcrobat = false; }\n        if (isAcrobat) {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    var text = key.replace(/ /g, '');\n                    writer._writeStartElement(text.toString());\n                    writer._writeAttributeString('original', key.toString(), 'xfdf', null);\n                }\n                else {\n                    writer._writeStartElement(key.toString());\n                }\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        else {\n            this._table.forEach(function (value, key) {\n                if (key.includes(' ')) {\n                    key = key.replace(/ /g, '_x0020_');\n                }\n                writer._writeStartElement(key.toString());\n                writer._writeString(value.toString());\n                writer._writeEndElement();\n            });\n        }\n        writer._writeEndElement();\n    };\n    _XmlDocument.prototype._importFormData = function (document, data) {\n        this._document = document;\n        this._crossReference = document._crossReference;\n        this._isAnnotationExport = false;\n        var value = _bytesToString(data);\n        value = value.replace(/(\\r\\n|\\n|\\r)/gm, '');\n        value = value.replace(/[^\\x20-\\x7E]/g, '');\n        this._xmlDocument = (new DOMParser()).parseFromString(value, 'text/xml');\n        this._checkXml(this._xmlDocument);\n        this._xmlImport = true;\n        this._parseFormData(this._xmlDocument.documentElement);\n        this._xmlImport = false;\n    };\n    _XmlDocument.prototype._parseFormData = function (root) {\n        var child = root.childNodes;\n        if (child !== null && typeof child !== 'undefined' && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                var childNode = child.item(i);\n                if (childNode !== null && typeof childNode !== 'undefined' && childNode.nodeType === 1) {\n                    var element = childNode;\n                    var text = '';\n                    if (element.attributes !== null && typeof element.attributes !== 'undefined' && element.attributes.length > 0) {\n                        var attribute = element.attributes.item(0); // eslint-disable-line\n                        if (attribute !== null && typeof attribute !== 'undefined' && attribute.name === 'xfdf:original') {\n                            text = attribute.value;\n                        }\n                    }\n                    else {\n                        text = element.tagName;\n                    }\n                    var v = element.textContent;\n                    if (text !== null && text !== undefined && text.length > 0) {\n                        this._table.set(text, v);\n                    }\n                }\n            }\n        }\n        this._importField();\n    };\n    _XmlDocument.prototype._importField = function () {\n        var _this = this;\n        var form = this._document.form;\n        var count = form.count;\n        if (count) {\n            this._table.forEach(function (value, key) {\n                var textValue;\n                if (_this._table.size > 0 && _this._table.has(key)) {\n                    textValue = _this._table.get(key);\n                }\n                var text = key.toString();\n                if (text.indexOf('_x0020_') !== -1) {\n                    text = text.replace(/_x0020_/g, ' ');\n                }\n                var index = form._getFieldIndex(text);\n                if (index !== -1 && index < count) {\n                    var field = form.fieldAt(index);\n                    if (field && field !== null && typeof field !== 'undefined') {\n                        if (textValue && textValue !== '') {\n                            field._dictionary.update('RV', textValue);\n                        }\n                        var param = [];\n                        param.push(value);\n                        _this._importFieldData(field, param);\n                    }\n                }\n            });\n        }\n    };\n    _XmlDocument.prototype._checkXml = function (xmlDocument) {\n        if (xmlDocument.getElementsByTagName('parsererror').length > 0) {\n            throw new Error('Invalid XML file.');\n        }\n    };\n    return _XmlDocument;\n}(_ExportHelper));\nexport { _XmlDocument };\n","/**\n * `PdfFileStructure` class represents the internal structure of the PDF file.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access the internal file structure of the PDF document\n * let fileStructure: PdfFileStructure = document.fileStructure;\n * // Set the cross reference type\n * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFileStructure = /** @class */ (function () {\n    function PdfFileStructure() {\n        this._incrementalUpdate = true;\n    }\n    Object.defineProperty(PdfFileStructure.prototype, \"crossReferenceType\", {\n        /**\n         * Gets the cross reference type of the PDF document.\n         *\n         * @returns {PdfCrossReferenceType} - Returns the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._crossReferenceType;\n        },\n        /**\n         * Sets the cross reference type of the PDF document.\n         *\n         * @param {PdfCrossReferenceType} value - Specifies the cross reference type of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the cross reference type\n         * fileStructure.crossReferenceType = PdfCrossReferenceType.stream;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._crossReferenceType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFileStructure.prototype, \"isIncrementalUpdate\", {\n        /**\n         * Gets the boolean flag indicating whether the update is incremental.\n         *\n         * @returns { boolean } - Returns true if the PDF document supports incremental updates, otherwise false\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the incremental update\n         * let incrementalUpdate: boolean = fileStructure.isIncrementalUpdate;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._incrementalUpdate;\n        },\n        /**\n         * Sets the boolean flag indicating whether the update is incremental.\n         *\n         * @param {boolean} value - If `true`, enables incremental updates for the PDF document; otherwise, disables it.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Set the incremental updates\n         * fileStructure.isIncrementalUpdate = false;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._incrementalUpdate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFileStructure;\n}());\nexport { PdfFileStructure };\n","/**\n * `PdfPageImportOptions` class represents to customize the support of import PDF pages\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Options to customize the support of import PDF pages.\n * let options: PdfPageImportOptions = new PdfPageImportOptions();\n * // Sets the target page index to import\n * options.targetIndex = 1;\n * // Sets the rotation angle of the page to import\n * options.rotation = PdfRotationAngle.angle180;\n * // Sets the boolean value indicating whether the optimize resources while import pages or not\n * options.optimizeResources = true;\n * // Copy the first page and add it as second page with page rotation\n * document.importPage(0, options);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageImportOptions = /** @class */ (function () {\n    function PdfPageImportOptions() {\n        this._optimizeResources = true;\n        this._groupFormFields = false;\n    }\n    Object.defineProperty(PdfPageImportOptions.prototype, \"targetIndex\", {\n        /**\n         * Gets the target page index to import\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the target page index to import\n         * let targetIndex: number = options.targetIndex;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._targetIndex;\n        },\n        /**\n         * Sets the target page index to import\n         *\n         * @param {number} value Target page index to import.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the target page index to import\n         * options.targetIndex = 1;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._targetIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the page to import\n         *\n         * @returns {PdfRotationAngle} Page rotation angle.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the rotation angle of the page to import\n         * let rotation: PdfRotationAngle = options.rotation;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the page to import\n         *\n         * @param {PdfRotationAngle} value Page rotation angle.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the rotation angle of the page to import\n         * options.rotation = PdfRotationAngle.angle270;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"optimizeResources\", {\n        /**\n         * Gets the boolean value indicating whether the optimize resources while import pages or not\n         *\n         * @returns {boolean} Indicates resource optimization.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the boolean value indicating whether the optimize resources while import pages or not\n         * let resource: optimizeResources = options.optimizeResources;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._optimizeResources;\n        },\n        /**\n         * Sets the boolean value indicating whether the optimize resources while import pages or not\n         *\n         * @param {boolean} value Indicates resource optimization.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the boolean value indicating whether the optimize resources while import pages or not\n         * options.optimizeResources = true;\n         * // Copy the first page and add it as second page with page rotation\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._optimizeResources = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageImportOptions.prototype, \"groupFormFields\", {\n        /**\n         * Gets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         *\n         * @returns {boolean} value Indicates form fields grouping.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Gets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         * let groupFormfields: number = options.groupFormFields;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._groupFormFields;\n        },\n        /**\n         * Sets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         *\n         * @param {boolean} value Indicates form fields grouping\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Options to customize the support of import PDF pages.\n         * let options: PdfPageImportOptions = new PdfPageImportOptions();\n         * // Sets the boolean value indicating whether the form fields are grouped or not while importing pages.\n         * options.groupFormFields = true;\n         * // Copy the first page and add it as second page.\n         * document.importPage(0, options);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._groupFormFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageImportOptions;\n}());\nexport { PdfPageImportOptions };\n","import { PdfWidgetAnnotation } from './annotations/annotation';\nimport { PdfPageOrientation } from './enumerator';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfButtonField, PdfCheckBoxField, PdfComboBoxField, PdfListField, PdfRadioButtonListField, PdfSignatureField, PdfTextBoxField } from './form/field';\nimport { PdfPageSettings } from './pdf-document';\nimport { PdfNamedDestination } from './pdf-outline';\nimport { PdfDestination } from './pdf-page';\nimport { PdfPageImportOptions } from './pdf-page-import-options';\nimport { _PdfDictionary, _PdfName, _PdfReference } from './pdf-primitives';\nimport { _getItemValue } from './utils';\nimport { _PdfBaseStream, _PdfContentStream, _PdfStream } from './base-stream';\nvar _PdfMergeHelper = /** @class */ (function () {\n    function _PdfMergeHelper(crossReference, destination, source, pageReference, options) {\n        this._namedDestinations = []; // eslint-disable-line\n        this._bookmarks = []; // eslint-disable-line\n        this._fields = []; // eslint-disable-line\n        this._pageReference = new Map();\n        this._bookmarksPageLinkReference = new Map();\n        this._destination = []; // eslint-disable-line\n        this._newList = new Map();\n        this._annotationLayer = new Map();\n        this._isLayersPresent = false;\n        this._fieldNames = [];\n        this._options = new PdfPageImportOptions();\n        this._kidsReference = []; // eslint-disable-line\n        this._formFieldsCollection = new Map();\n        this._formFields = [];\n        this._isDuplicatePage = false;\n        this._fieldCount = 0;\n        this._crossReference = crossReference;\n        this._destinationDocument = destination;\n        this._sourceDocument = source;\n        this._pageReference = pageReference;\n        if (typeof options !== 'undefined') {\n            this._options = options;\n        }\n        this._copier = new _PdfCopier(this._crossReference, this._sourceDocument._crossReference);\n    }\n    _PdfMergeHelper.prototype._importPages = function (page, index, layers, isCopiedPage, options, isSplitDocument) {\n        var _this = this;\n        var template;\n        var newPage;\n        var pageDictionary = page._pageDictionary;\n        this._isDuplicatePage = isCopiedPage;\n        if (!options) {\n            this._options.rotation = page.rotation;\n        }\n        else {\n            this._options.rotation = options.rotation;\n        }\n        if (typeof index === 'number') {\n            newPage = this._insertNewPage(page, index);\n        }\n        else if (this._isDuplicatePage) {\n            newPage = this._insertNewPage(page, page._pageIndex + 1);\n        }\n        else {\n            newPage = this._insertNewPage(page);\n        }\n        if ((isCopiedPage || isSplitDocument) && this._options.optimizeResources) {\n            var newContents_1 = []; // eslint-disable-line\n            pageDictionary.forEach(function (key, value) {\n                if (key === 'Contents' && newContents_1.length === 0) {\n                    var contents = value; // eslint-disable-line\n                    if (contents instanceof _PdfReference) {\n                        var pageContent = isSplitDocument ? _this._copier._copy(contents) : contents; // eslint-disable-line\n                        newPage._pageDictionary.update(key, pageContent);\n                    }\n                    else if (contents instanceof Array) {\n                        for (var i = 0; i < contents.length; i++) {\n                            var newContent = isSplitDocument ? (_this._copier._copy(contents[Number.parseInt(i.toString(), 10)])) : // eslint-disable-line\n                                contents[Number.parseInt(i.toString(), 10)];\n                            newContents_1.push(newContent);\n                        }\n                        newPage._pageDictionary.update(key, newContents_1);\n                    }\n                }\n                else if (key === 'Resources' && value) {\n                    var resourceValue = isSplitDocument ? _this._copier._copy(value) : value; // eslint-disable-line\n                    if (resourceValue) {\n                        newPage._pageDictionary.update(key, resourceValue);\n                    }\n                }\n                else if (key !== 'Resources' && key !== 'MediaBox' && key !== 'CropBox' && key !== 'Parent' && key !== 'Annots'\n                    && key !== 'Contents' && key !== 'Rotate') {\n                    newPage._pageDictionary.update(key, value);\n                }\n            });\n        }\n        else {\n            template = page._contentTemplate;\n            newPage.graphics.drawTemplate(template, { x: 0, y: 0, width: template._size[0], height: template._size[1] });\n            template._content.dictionary.update('Resources', this._copier._copy(pageDictionary.getRaw('Resources')));\n            this._pageReference.set(pageDictionary, newPage);\n            if (!isCopiedPage) {\n                this._bookmarksPageLinkReference.set(page._ref, newPage._pageIndex);\n            }\n        }\n        if (pageDictionary.has('Annots')) {\n            this._importAnnotation(page, newPage);\n            if (typeof this._options !== 'undefined' && this._options.groupFormFields && this._sourceDocument._catalog._catalogDictionary.has('AcroForm')) {\n                this._formFieldsGroupingSupport(this._sourceDocument.form, page, newPage);\n            }\n            else if (this._sourceDocument._catalog._catalogDictionary.has('AcroForm')) {\n                this._importFormField(page, this._sourceDocument.form, newPage, this._sourceDocument._crossReference);\n            }\n        }\n        if (!isCopiedPage) {\n            var bookMarkMap = this._sourceDocument._parseBookmarkDestination();\n            if (bookMarkMap && bookMarkMap.has(page)) {\n                var bookmarks = bookMarkMap.get(page);\n                for (var i = 0; i < bookmarks.length; i++) {\n                    this._bookmarks.push(bookmarks[Number.parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if ((!isCopiedPage && layers) || !this._options.optimizeResources) {\n            this._mergeLayer(newPage._pageDictionary, pageDictionary, this._sourceDocument._crossReference);\n        }\n        newPage._pageDictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._importAnnotation = function (page, newPage) {\n        var array = []; // eslint-disable-line\n        var dest; // eslint-disable-line\n        var isDestination = false;\n        var oldCollection = page.annotations;\n        var count = oldCollection.count;\n        for (var i = 0; i < count; i++) {\n            var annotationReference = oldCollection._annotations[Number.parseInt(i.toString(), 10)];\n            if (annotationReference) {\n                var annotationDictionary = this._sourceDocument._crossReference._fetch(annotationReference);\n                if (annotationDictionary) {\n                    if (annotationDictionary.has('Dest')) {\n                        dest = [];\n                        var destinationArray = annotationDictionary.get('Dest'); // eslint-disable-line\n                        var destination = annotationDictionary._get('Dest'); // eslint-disable-line\n                        if (destinationArray instanceof Array) {\n                            var destArray = destinationArray; // eslint-disable-line\n                            for (var j = 0; j < destArray.length; j++) {\n                                dest.push(destArray[Number.parseInt(j.toString(), 10)]);\n                            }\n                            isDestination = true;\n                        }\n                        else if (destination instanceof _PdfReference) {\n                            dest.push(destination);\n                        }\n                    }\n                    if (dest && dest.length > 0) {\n                        this._destination.push(dest);\n                    }\n                    if (annotationDictionary.has('OC')) {\n                        var reference = annotationDictionary.getRaw('OC'); // eslint-disable-line\n                        if (reference instanceof _PdfReference) {\n                            this._annotationLayer.set(i, reference);\n                        }\n                    }\n                    var copiedAnnotationReference = this._copier._copy(annotationReference);\n                    var copiedAnnotationDictionary = this._destinationDocument._crossReference.\n                        _fetch(copiedAnnotationReference);\n                    if (isDestination) {\n                        copiedAnnotationDictionary.update('Dest', dest);\n                    }\n                    copiedAnnotationDictionary.update('P', newPage._ref);\n                    this._crossReference._cacheMap.set(copiedAnnotationReference, copiedAnnotationDictionary);\n                    array.push(copiedAnnotationReference);\n                }\n            }\n            isDestination = false;\n            dest = [];\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._formFieldsGroupingSupport = function (form, oldPage, newPage) {\n        var array = [];\n        var fieldNames = [];\n        var kidsArray = [];\n        var formFields;\n        var drEntry = form._dictionary.get('DR');\n        if (form._dictionary.has('DR')) {\n            drEntry = form._dictionary.get('DR');\n        }\n        if (newPage._pageDictionary.has('Annots')) {\n            array = newPage._pageDictionary.get('Annots');\n        }\n        if (oldPage._pageDictionary.has('Annots')) {\n            kidsArray = oldPage._pageDictionary.get('Annots');\n        }\n        if (!this._isDuplicatePage) {\n            formFields = this._destinationDocument.form;\n            this._fieldCount = formFields.count;\n            for (var k = 0; k < this._fieldCount; k++) {\n                fieldNames.push(formFields.fieldAt(k).name);\n            }\n        }\n        for (var i = 0; i < form.count; i++) {\n            var field = form.fieldAt(i);\n            var formField = void 0;\n            var destinationKids = [];\n            var sourceKids = field._dictionary.get('Kids');\n            if (fieldNames.indexOf(field.name) !== -1 || this._isDuplicatePage) {\n                if (!this._isDuplicatePage) {\n                    formField = formFields.fieldAt(fieldNames.indexOf(field.name));\n                    if (formField._dictionary.get('Kids')) {\n                        destinationKids = formField._dictionary.get('Kids');\n                    }\n                }\n                else {\n                    formField = field;\n                    destinationKids = sourceKids;\n                }\n                field._isDuplicatePage = true;\n                if ((field instanceof PdfSignatureField && formField instanceof PdfSignatureField) || !(field instanceof\n                    PdfSignatureField)) {\n                    if (sourceKids !== undefined && sourceKids.length > 0) {\n                        for (var j = 0; j < sourceKids.length; j++) {\n                            var fieldItem = field.itemAt(j); // eslint-disable-line\n                            if (fieldItem.page === oldPage) {\n                                formField._page = newPage;\n                                array = this._groupFormFieldsKids(formField, field, kidsArray, destinationKids, sourceKids, newPage._ref, array, j, i, drEntry, fieldItem);\n                            }\n                        }\n                    }\n                    else {\n                        array = this._groupFormFieldsKids(formField, field, kidsArray, destinationKids, sourceKids, newPage._ref, array, 0, i, drEntry);\n                    }\n                }\n            }\n            else {\n                array = this._insertFormFields(i, form._crossReference, field, form, newPage._ref, array, kidsArray);\n            }\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._groupFormFieldsKids = function (destinationField, field, kidsArray, destKids, oldKids, ref, array, index, fieldIndex, drEntry, widget) {\n        if (field._dictionary.has('Kids') && destinationField._dictionary.has('Kids')) {\n            if (kidsArray.indexOf(oldKids[Number.parseInt(index.toString(), 10)]) !== -1) {\n                var oldDictionary = field._crossReference._fetch(oldKids[Number.parseInt(index.toString(), 10)]);\n                var dictionary = this._copier._copyDictionary(oldDictionary, !this._isDuplicatePage);\n                dictionary.update('P', ref);\n                var reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                array.push(reference);\n                dictionary.update('Parent', destinationField._ref);\n                destKids.push(reference);\n                dictionary._updated = true;\n                destinationField._dictionary._updated = true;\n                if (!this._isDuplicatePage) {\n                    if ((destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof PdfComboBoxField) && dictionary.has('AS')) {\n                        delete dictionary._map.AS;\n                    }\n                    this._createAppearance(destinationField, field, oldDictionary, dictionary, drEntry, widget);\n                }\n            }\n        }\n        else if (field._dictionary.has('Kids') && !destinationField._dictionary.has('Kids') || this._isDuplicatePage) {\n            var fieldDictionary = this._copier._copyDictionary(destinationField._dictionary, !this._isDuplicatePage);\n            this._updateFieldsWithKids(destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, destinationField._dictionary);\n        }\n        else if ((!field._dictionary.has('Kids') && destinationField._dictionary.has('Kids'))) {\n            var fieldDict = this._copier._copyDictionary(field._dictionary);\n            this._updateFieldDictionary(fieldDict, ref, destinationField._ref);\n            var reference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(reference, fieldDict);\n            destKids.push(reference);\n            array.push(reference);\n            destinationField._dictionary._updated = true;\n            this._createAppearance(destinationField, field, field._dictionary, fieldDict, drEntry, widget);\n        }\n        else if (!field._dictionary.has('Kids') && !destinationField._dictionary.has('Kids')) {\n            var fieldDictionary = this._copier._copyDictionary(destinationField._dictionary);\n            var formFieldDict = this._copier._copyDictionary(field._dictionary, !this._isDuplicatePage);\n            this._removeFieldDictionary(formFieldDict, ['Parent', 'FT', 'T', 'Ff']);\n            formFieldDict.update('P', ref);\n            this._updateFieldsWithKids(destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, formFieldDict);\n        }\n        return array;\n    };\n    _PdfMergeHelper.prototype._updateFieldsWithKids = function (destinationField, field, fieldDictionary, index, fieldIndex, ref, oldKids, array, drEntry, formFieldDictionary) {\n        var newFieldReference = this._crossReference._getNextReference();\n        var newFieldDict = this._createNewFieldDictionary(fieldDictionary, destinationField._dictionary);\n        newFieldDict.objId = newFieldReference.toString();\n        this._crossReference._cacheMap.set(newFieldReference, newFieldDict);\n        var newField = this._destinationDocument.form._parseFields(newFieldDict, newFieldReference);\n        destinationField._dictionary.update('Parent', newFieldReference);\n        newField._dictionary._updated = true;\n        this._updateFieldDictionary(fieldDictionary, ref, newFieldReference);\n        this._destinationDocument.form._dictionary._updated = true;\n        var oldDictionary;\n        if (oldKids !== undefined && oldKids.length > 0) {\n            oldDictionary = field._crossReference._fetch(oldKids[Number.parseInt(index.toString(), 10)]);\n        }\n        else {\n            oldDictionary = formFieldDictionary;\n        }\n        var dictionary = this._copier._copyDictionary(oldDictionary, !this._isDuplicatePage);\n        if ((destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof PdfComboBoxField) && dictionary.has('AS')) {\n            delete dictionary._map.AS;\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, dictionary);\n        dictionary.update('P', ref);\n        array.push(reference);\n        dictionary.update('Parent', newField._ref);\n        var kidsElement = [];\n        kidsElement.push(destinationField._ref);\n        kidsElement.push(reference);\n        dictionary._updated = true;\n        destinationField._dictionary._updated = true;\n        newFieldDict.update('Kids', kidsElement);\n        newField._kids = kidsElement;\n        this._formFieldsCollection.set(fieldIndex, newFieldReference);\n        this._destinationDocument.form._parsedFields.set(fieldIndex, newField);\n        if (!this._isDuplicatePage) {\n            this._createAppearance(newField, field, oldDictionary, dictionary, drEntry);\n        }\n        newFieldDict._updated = true;\n    };\n    _PdfMergeHelper.prototype._removeFieldDictionary = function (dictionary, keys) {\n        keys.forEach(function (key) {\n            if (dictionary.has(key)) {\n                delete dictionary._map[key]; // eslint-disable-line\n            }\n        });\n        return dictionary;\n    };\n    _PdfMergeHelper.prototype._updateFieldDictionary = function (dictionary, pageRef, parentRef) {\n        dictionary = this._removeFieldDictionary(dictionary, ['Parent', 'FT', 'T', 'Ff']);\n        dictionary.update('P', pageRef);\n        dictionary.update('Parent', parentRef);\n        dictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._createNewFieldDictionary = function (fieldDictionary, destDictionary) {\n        var newFieldDict = new _PdfDictionary(this._crossReference);\n        ['Parent', 'FT', 'T', 'V', 'Ff', 'TU', 'Opt', 'I'].forEach(function (key) {\n            if (fieldDictionary.has(key)) {\n                newFieldDict.update(key, fieldDictionary.get(key));\n                delete fieldDictionary._map[key]; // eslint-disable-line\n                delete destDictionary._map[key]; // eslint-disable-line\n            }\n        });\n        return newFieldDict;\n    };\n    _PdfMergeHelper.prototype._getItemStyle = function (item, field) {\n        var mkDictionary = item._dictionary.get('MK');\n        if (mkDictionary && mkDictionary.has('CA')) {\n            item._styleText = mkDictionary.get('CA').charAt(0);\n        }\n        else {\n            item._styleText = (field instanceof PdfRadioButtonListField) ? 'l' : '4';\n        }\n    };\n    _PdfMergeHelper.prototype._createAppearance = function (destinationField, field, oldDictionary, dictionary, drEntry, widget) {\n        var previousIndex = destinationField._kidsCount - 1;\n        var itemValue;\n        if (destinationField instanceof PdfCheckBoxField) {\n            var item = destinationField.itemAt(previousIndex);\n            item._enableGrouping = true;\n            this._getItemStyle(item, destinationField);\n            if (field instanceof PdfRadioButtonListField) {\n                item._dictionary.update('AS', _PdfName.get('Off'));\n                itemValue = _getItemValue(oldDictionary);\n            }\n            else {\n                item._postProcess(destinationField.checked ? 'Yes' : 'Off');\n            }\n            destinationField._drawAppearance(item, itemValue);\n        }\n        else if (destinationField instanceof PdfRadioButtonListField) {\n            var item = destinationField.itemAt(previousIndex);\n            this._getItemStyle(item, destinationField);\n            if (item._dictionary.has('AS')) {\n                item._postProcess(item._dictionary.get('AS').name);\n            }\n            else {\n                item._postProcess('Off');\n            }\n            item._enableGrouping = true;\n            destinationField._enableGrouping = true;\n            destinationField._drawAppearance(item);\n        }\n        else if (destinationField instanceof PdfListField) {\n            var item = destinationField.itemAt(previousIndex);\n            if (typeof widget !== 'undefined') {\n                item.rotationAngle = widget.rotationAngle;\n            }\n            if (item && !destinationField._checkFieldFlag(item._dictionary)) {\n                item._enableGrouping = true;\n                var template = destinationField._createAppearance(item);\n                destinationField._addAppearance(item._dictionary, template, 'N');\n                item._dictionary._updated = true;\n            }\n        }\n        else if (destinationField instanceof PdfTextBoxField || destinationField instanceof PdfButtonField || destinationField instanceof\n            PdfSignatureField) {\n            var widgetAnnotation = PdfWidgetAnnotation._load(dictionary, this._crossReference);\n            if (typeof widget !== 'undefined' && widget !== null && destinationField instanceof PdfSignatureField) {\n                destinationField._createAppearance(widget, false);\n            }\n            else {\n                widgetAnnotation.setAppearance(true);\n                widgetAnnotation._enableGrouping = true;\n                var pdfFont = void 0;\n                if (typeof widget !== 'undefined' && widget !== null) {\n                    pdfFont = this._obtainFont(widget._dictionary, drEntry);\n                }\n                else {\n                    pdfFont = this._obtainFont(dictionary, drEntry);\n                }\n                widgetAnnotation._pdfFont = pdfFont;\n                if (destinationField instanceof PdfSignatureField) {\n                    destinationField._createAppearance(widgetAnnotation, false);\n                }\n                else {\n                    destinationField._postProcess(false, widgetAnnotation);\n                }\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._obtainFont = function (item, formDictionary) {\n        var fontFamily = '';\n        var fontSize = 8;\n        var pdfFont;\n        if (item && (item.has('DS') || item.has('DA'))) {\n            if (item.has('DS')) {\n                var collection = item.get('DS').split(';');\n                for (var i = 0; i < collection.length; i++) {\n                    var entry = collection[Number.parseInt(i.toString(), 10)].split(':');\n                    if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-family') !== -1) {\n                        fontFamily = entry[1];\n                    }\n                    else if (collection[Number.parseInt(i.toString(), 10)].indexOf('font-style') === -1 && collection[Number.parseInt(i.toString(), 10)].indexOf('font') !== -1) {\n                        var name_1 = entry[1];\n                        var split = name_1.split(' ');\n                        for (var j = 0; j < split.length; j++) {\n                            if (split[Number.parseInt(j.toString(), 10)] !== '' && !split[Number.parseInt(j.toString(), 10)].endsWith('pt')) {\n                                fontFamily += split[Number.parseInt(j.toString(), 10)] + ' ';\n                            }\n                        }\n                        while (fontFamily !== ' ' && fontFamily.endsWith(' ')) {\n                            fontFamily = fontFamily.substring(0, fontFamily.length - 2);\n                        }\n                        if (fontFamily.indexOf(',') !== -1) {\n                            fontFamily = fontFamily.split(',')[0];\n                        }\n                    }\n                }\n            }\n            else {\n                var value = item.get('DA');\n                if (value && value !== '' && value.indexOf('Tf') !== -1) {\n                    var textCollection = value.split(' ');\n                    for (var i = 0; i < textCollection.length; i++) {\n                        if (textCollection[Number.parseInt(i.toString(), 10)].indexOf('Tf') !== -1) {\n                            fontFamily = textCollection[i - 2];\n                            while (fontFamily !== '' && fontFamily.length > 1 && fontFamily[0] === '/') {\n                                fontFamily = fontFamily.substring(1);\n                            }\n                            fontSize = Number.parseFloat(textCollection[i - 1]);\n                        }\n                    }\n                    if (fontSize === 0) {\n                        fontSize = 8;\n                    }\n                }\n            }\n        }\n        fontFamily = fontFamily.trim();\n        var fontStyle = PdfFontStyle.regular;\n        var baseFontName;\n        if (typeof formDictionary != 'undefined' && formDictionary.has('Font')) {\n            var dictionary = formDictionary.get('Font').get(fontFamily);\n            if (typeof dictionary !== 'undefined') {\n                baseFontName = dictionary.get('BaseFont').name;\n                fontStyle = this._getFontStyle(baseFontName);\n            }\n        }\n        switch (fontFamily) {\n            case 'Helv':\n                pdfFont = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, fontStyle);\n                break;\n            case 'Courier':\n            case 'Cour':\n                pdfFont = new PdfStandardFont(PdfFontFamily.courier, fontSize, fontStyle);\n                break;\n            case 'Symb':\n                pdfFont = new PdfStandardFont(PdfFontFamily.symbol, fontSize, fontStyle);\n                break;\n            case 'TiRo':\n            case 'TiIt':\n                pdfFont = new PdfStandardFont(PdfFontFamily.timesRoman, fontSize, fontStyle);\n                break;\n            case 'ZaDb':\n                pdfFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, fontSize, fontStyle);\n                break;\n            default:\n                pdfFont = new PdfStandardFont(PdfFontFamily.helvetica, fontSize, fontStyle);\n                break;\n        }\n        return pdfFont;\n    };\n    _PdfMergeHelper.prototype._getFontStyle = function (fontStyle) {\n        var style = PdfFontStyle.regular;\n        if (fontStyle.includes('Bold')) {\n            style = PdfFontStyle.bold;\n        }\n        else if (fontStyle.includes('Italic')) {\n            style = PdfFontStyle.italic;\n        }\n        return style;\n    };\n    _PdfMergeHelper.prototype._importFormField = function (page, pdfForm, newPage, crossReference) {\n        var form = this._destinationDocument.form;\n        var array = [];\n        if (newPage && newPage._pageDictionary && newPage._pageDictionary.has('Annots')) {\n            array = newPage._pageDictionary.get('Annots');\n        }\n        var kidsArray = [];\n        var widgetArray = [];\n        if (this._destinationDocument.form._dictionary.has('Fields')) {\n            var formFields = this._destinationDocument.form;\n            this._fieldCount = formFields.count;\n            for (var k = 0; k < this._fieldCount; k++) {\n                var name_2 = formFields.fieldAt(k).name;\n                this._fieldNames.push(name_2);\n            }\n        }\n        if (page._pageDictionary.has('Annots')) {\n            widgetArray = page._pageDictionary.get('Annots');\n        }\n        var count = pdfForm.count;\n        for (var i = 0; i < count; ++i) {\n            var pdfField = pdfForm.fieldAt(i);\n            if (pdfField._dictionary.has('Kids')) {\n                kidsArray = pdfField._dictionary.get('Kids');\n                if (kidsArray.length > 1) {\n                    for (var j = 0; j < kidsArray.length; j++) {\n                        var fieldItem = pdfField.itemAt(j); // eslint-disable-line\n                        if (fieldItem.page === page) {\n                            array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                            break;\n                        }\n                    }\n                }\n                else if (kidsArray.length === 1) {\n                    if (pdfField.page === page) {\n                        array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                    }\n                }\n            }\n            else {\n                if (pdfField.page === page) {\n                    array = this._insertFormFields(i, crossReference, pdfField, form, newPage._ref, array, widgetArray);\n                }\n            }\n        }\n        if (pdfForm._dictionary.has('DR')) {\n            var dr = pdfForm._dictionary.get('DR');\n            var drDictionary = this._copier._copyDictionary(dr); // eslint-disable-line\n            var font = void 0; // eslint-disable-line\n            if (drDictionary.has('Font')) {\n                font = drDictionary.get('Font');\n            }\n            if (this._destinationDocument.form._dictionary.has('DR')) {\n                var curreneDR = this._destinationDocument.form._dictionary.get('DR');\n                if (curreneDR.has('Font')) {\n                    var currentFont_1 = curreneDR.get('Font'); // eslint-disable-line\n                    if (font) {\n                        font.forEach(function (key, value) {\n                            currentFont_1.set(key, value);\n                        });\n                    }\n                    currentFont_1._updated = true;\n                }\n            }\n            else {\n                this._destinationDocument.form._dictionary.update('DR', drDictionary);\n            }\n        }\n        if (array.length > 0) {\n            newPage._pageDictionary.update('Annots', array);\n        }\n    };\n    _PdfMergeHelper.prototype._insertFormFields = function (index, crossReference, pdfField, form, ref, array, kidsArray) {\n        var dictionary = new _PdfDictionary();\n        if (pdfField._dictionary.has('Kids')) {\n            pdfField._dictionary.forEach(function (key, value) {\n                if (key !== 'Kids') {\n                    dictionary.update(key, value);\n                }\n            });\n        }\n        else {\n            dictionary = this._copier._copyDictionary(pdfField._dictionary);\n        }\n        var newReference = this._crossReference._getNextReference();\n        dictionary.objId = newReference.toString();\n        var field = form._parseFields(dictionary, ref);\n        this._crossReference._cacheMap.set(newReference, field._dictionary);\n        if (pdfField._dictionary.has('Kids')) {\n            var oldKids = pdfField._dictionary.get('Kids');\n            var kids = [];\n            for (var j = 0; j < oldKids.length; j++) {\n                if ((kidsArray.indexOf(oldKids[Number.parseInt(j.toString(), 10)]) !== -1)) {\n                    var oldDictionary = pdfField._crossReference._fetch(oldKids[Number.parseInt(j.toString(), 10)]);\n                    var dict = this._copier._copyDictionary(oldDictionary);\n                    dict.update('P', ref);\n                    dict.update('Parent', newReference);\n                    dict._updated = true;\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, dict);\n                    array.push(reference);\n                    kids.push(reference);\n                }\n            }\n            dictionary.update('Kids', kids);\n            field._kids = kids;\n        }\n        else {\n            field._dictionary.update('P', ref);\n            array.push(newReference);\n        }\n        field._dictionary._updated = true;\n        var i = 0;\n        var fieldName = field.name;\n        var modified = false;\n        while (this._fieldNames.indexOf(fieldName) !== -1) {\n            fieldName = field.name + i;\n            modified = true;\n            ++i;\n        }\n        if (modified) {\n            field._dictionary.update('T', fieldName);\n            field._name = fieldName;\n        }\n        field._dictionary._updated = true;\n        if (this._fieldCount > 0) {\n            this._destinationDocument.form._parsedFields.set(this._fieldCount, field);\n            field._annotationIndex = this._fieldCount;\n            this._fieldCount++;\n        }\n        else {\n            this._destinationDocument.form._parsedFields.set(index, field);\n            field._annotationIndex = index;\n        }\n        this._destinationDocument.form._fields.push(newReference);\n        return array;\n    };\n    _PdfMergeHelper.prototype._mergeFormFieldsWithDocument = function () {\n        var pdfFields;\n        if (this._formFieldsCollection.size > 0) {\n            pdfFields = this._destinationDocument.form._dictionary.get('Fields');\n            this._formFieldsCollection.forEach(function (value, key) {\n                pdfFields[Number.parseInt(key.toString(), 10)] = value;\n            });\n        }\n        else {\n            pdfFields = this._destinationDocument.form._fields;\n        }\n        if (this._destinationDocument.form._dictionary.get('NeedAppearances')) {\n            this._destinationDocument.form._dictionary.set('NeedAppearances', false);\n        }\n        this._destinationDocument.form._dictionary.set('Fields', pdfFields);\n        this._destinationDocument.form._fields = pdfFields;\n        this._destinationDocument.form._dictionary._updated = true;\n    };\n    _PdfMergeHelper.prototype._importLayers = function (ocProperties, layers) {\n        this._isLayersPresent = layers;\n        if (this._isLayersPresent && this._destinationDocument._catalog._catalogDictionary.has('OCProperties')) {\n            var destinationOCProperties = this._destinationDocument._catalog._catalogDictionary.get('OCProperties');\n            var currentOCProperties = ocProperties.get('OCProperties');\n            if (destinationOCProperties.has('OCGs')) {\n                var ocgs = destinationOCProperties.get('OCGs'); // eslint-disable-line\n                var Cocgs = currentOCProperties.get('OCGs'); // eslint-disable-line\n                if (ocgs.length > 0) {\n                    for (var i = 0; i < Cocgs.length; i++) {\n                        ocgs.push(Cocgs[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            destinationOCProperties._updated = true;\n            if (destinationOCProperties.has('D') && currentOCProperties.has('D')) {\n                var curreneDefaultView = destinationOCProperties.get('D');\n                var existingDefaultView = currentOCProperties.get('D');\n                if (curreneDefaultView && existingDefaultView) {\n                    if (curreneDefaultView.has('Order') && existingDefaultView.has('Order')) {\n                        var order = curreneDefaultView.get('Order'); // eslint-disable-line\n                        var existingOrder = existingDefaultView.get('Order'); // eslint-disable-line\n                        if (order.length > 0 && existingOrder.length > 0) {\n                            for (var i = 0; i < existingOrder.length; i++) {\n                                order.push(existingOrder[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('Order')) {\n                        curreneDefaultView.set('Order', existingDefaultView.get('Order'));\n                    }\n                    if (curreneDefaultView.has('RBGroups') && existingDefaultView.has('RBGroups')) {\n                        var groups = curreneDefaultView.get('RBGroups'); // eslint-disable-line\n                        var existingRBGroups = existingDefaultView.get('RBGroups'); // eslint-disable-line\n                        if (groups.length > 0 && existingRBGroups.length > 0) {\n                            for (var i = 0; i < existingRBGroups.length; i++) {\n                                groups.push(existingRBGroups[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('RBGroups')) {\n                        curreneDefaultView.set('RBGroups', existingDefaultView.get('RBGroups'));\n                        curreneDefaultView._updated = true;\n                    }\n                    if (curreneDefaultView.has('ON') && existingDefaultView.has('ON')) {\n                        var on = curreneDefaultView.get('ON'); // eslint-disable-line\n                        var existingON = existingDefaultView.get('ON'); // eslint-disable-line\n                        if (on.length > 0 && existingON.length > 0) {\n                            for (var i = 0; i < existingON.length; i++) {\n                                on.push(existingON[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('ON')) {\n                        curreneDefaultView.set('ON', existingDefaultView.get('ON'));\n                    }\n                    if (curreneDefaultView.has('AS') && existingDefaultView.has('AS')) {\n                        var elements = curreneDefaultView.get('AS'); // eslint-disable-line\n                        var existingElements = existingDefaultView.get('AS'); // eslint-disable-line\n                        if (elements.length > 0 && existingElements.length > 0) {\n                            var asDictionary = existingElements[0];\n                            var currentASDictionary = elements[0];\n                            if (asDictionary instanceof _PdfReference && currentASDictionary instanceof _PdfReference) {\n                                asDictionary = this._crossReference._fetch(asDictionary);\n                                currentASDictionary = this._crossReference._fetch(currentASDictionary);\n                            }\n                            if (asDictionary.has('OCGs') && currentASDictionary.has('OCGs')) {\n                                var usageGroup = asDictionary.get('OCGs'); // eslint-disable-line\n                                var currentUsageGroup = currentASDictionary.get('OCGs'); // eslint-disable-line\n                                if (usageGroup.length > 0 && currentUsageGroup.length > 0) {\n                                    for (var i = 0; i < usageGroup.length; i++) {\n                                        currentUsageGroup.push(usageGroup[Number.parseInt(i.toString(), 10)]);\n                                    }\n                                }\n                            }\n                            for (var i = 0; i < existingElements.length; i++) {\n                                elements.push(existingElements[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('AS')) {\n                        curreneDefaultView.set('AS', existingDefaultView.get('AS'));\n                    }\n                    if (curreneDefaultView.has('OFF') && existingDefaultView.has('OFF')) {\n                        var off = curreneDefaultView.get('OFF'); // eslint-disable-line\n                        var existingOff = existingDefaultView.get('OFF'); // eslint-disable-line\n                        if (off.length > 0 && existingOff.length > 0) {\n                            for (var i = 0; i < existingOff.length; i++) {\n                                off.push(existingOff[Number.parseInt(i.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else if (existingDefaultView.has('OFF')) {\n                        curreneDefaultView.set('OFF', existingDefaultView.get('OFF'));\n                    }\n                }\n                if (curreneDefaultView.has('Locked') && existingDefaultView.has('Locked')) {\n                    var locked = curreneDefaultView.get('Locked'); // eslint-disable-line\n                    var existingLocked = existingDefaultView.get('Locked'); // eslint-disable-line\n                    if (locked.length > 0 && existingLocked.length > 0) {\n                        for (var i = 0; i < existingLocked.length; i++) {\n                            locked.push(existingLocked[Number.parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                else if (existingDefaultView.has('Locked')) {\n                    curreneDefaultView.set('Locked', existingDefaultView.get('Locked'));\n                }\n            }\n            else if (currentOCProperties.has('D')) {\n                destinationOCProperties.set('D', currentOCProperties.get('D'));\n            }\n            destinationOCProperties._updated = true;\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n        else if (this._isLayersPresent) {\n            this._destinationDocument._catalog._catalogDictionary.update('OCProperties', ocProperties.get('OCProperties'));\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        }\n    };\n    _PdfMergeHelper.prototype._mergeLayer = function (newPageDictionary, oldPageDictionary, crossReference) {\n        var _this = this;\n        var res = newPageDictionary.get('Resources');\n        var xobject = res.get('XObject');\n        var xobjdict; // eslint-disable-line\n        if (xobject) {\n            xobject.forEach(function (key, value) {\n                xobjdict = _this._crossReference._fetch(value);\n            });\n        }\n        var resource;\n        if (xobjdict) {\n            resource = xobjdict.dictionary.get('Resources');\n        }\n        var XObject; // eslint-disable-line\n        var oldPageList = new Map();\n        var oldPageResource = oldPageDictionary.get('Resources');\n        var layerDictionary; // eslint-disable-line\n        var dict; // eslint-disable-line\n        if (oldPageResource.has('Properties')) {\n            layerDictionary = oldPageResource.get('Properties');\n            layerDictionary.forEach(function (key, value) {\n                oldPageList.set(key, value);\n            });\n            var properties_1 = new _PdfDictionary(this._crossReference);\n            oldPageList.forEach(function (value, key) {\n                _this._newList.forEach(function (layerValue, layerkey) {\n                    if (value === layerkey) {\n                        properties_1.set(key, layerValue);\n                    }\n                });\n            });\n            resource.set('Properties', properties_1);\n            resource._updated = true;\n            properties_1._updated = true;\n        }\n        else if (oldPageResource.has('XObject')) {\n            XObject = resource.get('XObject');\n            layerDictionary = oldPageResource.get('XObject');\n            layerDictionary.forEach(function (key, value) {\n                if (value instanceof _PdfReference) {\n                    dict = crossReference._fetch(value);\n                    dict.dictionary.forEach(function (annotationKey, annotationValue) {\n                        if (annotationKey === 'OC') {\n                            _this._newList.forEach(function (layerValue, layerKey) {\n                                if (layerKey === annotationValue) {\n                                    if (XObject.has(key)) {\n                                        var xobjDictionary = XObject.get(key); // eslint-disable-line\n                                        xobjDictionary.dictionary.set(annotationKey, layerValue);\n                                        xobjDictionary._updated = true;\n                                    }\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        if (this._annotationLayer.size > 0) {\n            var annotations_1 = newPageDictionary._get('Annots'); // eslint-disable-line\n            this._annotationLayer.forEach(function (reference, index) {\n                var pdfAnnotation = annotations_1[Number.parseInt(index.toString(), 10)]; // eslint-disable-line\n                var annotDictionary = _this._crossReference._fetch(pdfAnnotation);\n                _this._newList.forEach(function (value, oldReference) {\n                    if (reference === oldReference) {\n                        annotDictionary.set('OC', value);\n                    }\n                });\n            });\n        }\n    };\n    _PdfMergeHelper.prototype._exportBookmarks = function (document, pageCount) {\n        var _this = this;\n        if (this._bookmarks.length > 0) {\n            var bookmark = this._bookmarks;\n            var currentBase = this._destinationDocument.bookmarks;\n            var current = document.bookmarks;\n            var bkCollection = void 0; // eslint-disable-line\n            if (current) {\n                var stack = [];\n                var nodeInformation = { index: 0, base: currentBase, kids: current._bookMarkList };\n                if (document.pageCount !== pageCount) {\n                    nodeInformation = { index: 0, base: currentBase, kids: bookmark };\n                    bkCollection = [];\n                }\n                do {\n                    var _loop_1 = function () {\n                        current = nodeInformation.kids[nodeInformation.index];\n                        if (bookmark.indexOf(current) !== -1 && typeof bkCollection !== 'undefined' && bkCollection.indexOf(current.title) === -1) {\n                            var bm = current;\n                            var newBm = currentBase.add(bm.title);\n                            var dest = bm.destination;\n                            newBm.color = bm.color;\n                            newBm.textStyle = bm.textStyle;\n                            var newDest = null;\n                            var newPage_1 = null;\n                            var page_1 = null;\n                            var nDest = bm.namedDestination;\n                            if (nDest) {\n                                if (nDest.destination) {\n                                    page_1 = nDest.destination.page;\n                                    this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                        if (page_1._ref === key) {\n                                            newPage_1 = _this._destinationDocument.getPage(value);\n                                        }\n                                    });\n                                    if (newPage_1) {\n                                        var newNameddest = this_1._getNamedDestination(nDest, newPage_1);\n                                        newBm.namedDestination = newNameddest;\n                                        delete newBm._dictionary._map.C;\n                                        this_1._namedDestinations.push(newNameddest._title);\n                                        var reference_1 = this_1._crossReference._getNextReference();\n                                        this_1._crossReference._cacheMap.set(reference_1, newNameddest._dictionary);\n                                        this_1._namedDestinations.push(reference_1);\n                                    }\n                                }\n                            }\n                            else if (dest) {\n                                page_1 = dest.page;\n                                this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                    if (page_1._ref === key) {\n                                        newPage_1 = _this._destinationDocument.getPage(value);\n                                    }\n                                });\n                                if (newPage_1) {\n                                    newDest = new PdfDestination(newPage_1, dest.location);\n                                    newDest.mode = dest.mode;\n                                    newDest.zoom = dest.zoom;\n                                    newDest.location = dest.location;\n                                    newBm.destination = newDest;\n                                }\n                            }\n                            currentBase = newBm;\n                            bkCollection.push(newBm.title);\n                        }\n                        else if (typeof bkCollection === 'undefined' || (typeof bkCollection !== 'undefined' && bkCollection.indexOf(current.title) === -1)) {\n                            var bm = current;\n                            var dest = bm.destination;\n                            var newDest = null;\n                            var newpage_1 = null;\n                            var page_2 = null;\n                            var nDest = bm.namedDestination;\n                            if (document.pageCount === pageCount) {\n                                var newBm = currentBase.add(bm.title);\n                                if (bm._dictionary.has('A')) {\n                                    newBm._dictionary.update('A', bm._dictionary.get('A'));\n                                }\n                                newBm.textStyle = bm.textStyle;\n                                newBm.color = bm.color;\n                                if (nDest) {\n                                    if (nDest._destination) {\n                                        page_2 = nDest.destination.page;\n                                        this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                            if (page_2._ref === key) {\n                                                newpage_1 = _this._destinationDocument.getPage(value);\n                                            }\n                                        });\n                                        if (newpage_1) {\n                                            var newNameddest = this_1._getNamedDestination(nDest, newpage_1);\n                                            newBm.namedDestination = newNameddest;\n                                            delete newBm._dictionary._map.C;\n                                            this_1._namedDestinations.push(newNameddest._title);\n                                            var reference_2 = this_1._crossReference._getNextReference();\n                                            this_1._crossReference._cacheMap.set(reference_2, newNameddest._dictionary);\n                                            this_1._namedDestinations.push(reference_2);\n                                        }\n                                    }\n                                }\n                                else if (dest) {\n                                    page_2 = dest.page;\n                                    this_1._bookmarksPageLinkReference.forEach(function (value, key) {\n                                        if (page_2._ref === key) {\n                                            newpage_1 = _this._destinationDocument.getPage(value);\n                                        }\n                                    });\n                                    if (newpage_1) {\n                                        newDest = new PdfDestination(newpage_1, dest.location);\n                                        newDest.mode = dest.mode;\n                                        newDest.zoom = dest.zoom;\n                                        newDest.location = dest.location;\n                                        newBm.destination = newDest;\n                                    }\n                                }\n                                currentBase = newBm;\n                            }\n                        }\n                        nodeInformation.index += 1;\n                        if (current.count > 0) {\n                            stack.push(nodeInformation);\n                            nodeInformation = { index: 0, base: currentBase, kids: current._bookMarkList };\n                        }\n                        else {\n                            currentBase = nodeInformation.base;\n                        }\n                    };\n                    var this_1 = this;\n                    for (; nodeInformation.index < nodeInformation.kids.length;) {\n                        _loop_1();\n                    }\n                    if (stack.length > 0) {\n                        nodeInformation = stack.pop();\n                        while ((nodeInformation.index === nodeInformation.kids.length) && (stack.length > 0)) {\n                            nodeInformation = stack.pop();\n                        }\n                        currentBase = nodeInformation.base;\n                    }\n                } while (nodeInformation.index < nodeInformation.kids.length);\n            }\n            var reference = void 0;\n            if (this._namedDestinations.length > 0) {\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('Names', this._namedDestinations);\n                reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                dictionary = new _PdfDictionary(this._crossReference);\n                dictionary.update('Dests', reference);\n                reference = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference, dictionary);\n                this._destinationDocument._catalog._catalogDictionary.set('Names', reference);\n            }\n            this._destinationDocument._catalog._catalogDictionary._updated = true;\n            this._destinationDocument._catalog._catalogDictionary.isCatalog = true;\n            this._crossReference._allowCatalog = true;\n        }\n    };\n    _PdfMergeHelper.prototype._getNamedDestination = function (nDest, page) {\n        var newNamedDest = new PdfNamedDestination(nDest.title); // eslint-disable-line\n        newNamedDest.destination = this._getDestination(page, nDest.destination);\n        return newNamedDest;\n    };\n    _PdfMergeHelper.prototype._getDestination = function (page, dest) {\n        var newDest = new PdfDestination(page, dest.location);\n        newDest._location = dest._location;\n        newDest.mode = dest.mode;\n        newDest.zoom = dest.zoom;\n        newDest.location = dest.location;\n        return newDest;\n    };\n    _PdfMergeHelper.prototype._writeObject = function (document, table, value, dictionary, key, array, ref) {\n        if (value instanceof _PdfName || typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            this._writeDictionary(value, table, key, array, ref, null);\n        }\n        else if (Array.isArray(value)) {\n            var list = []; // eslint-disable-line\n            this._writeArray(document, list, value, dictionary);\n            this._writeDictionary(null, table, key, array, ref, list);\n        }\n        else if (value instanceof _PdfDictionary) {\n            var subTable = new _PdfDictionary(this._crossReference);\n            this._writePropertiesDictionary(document, subTable, value);\n            this._writeDictionary(null, table, key, array, ref, subTable);\n        }\n        else if (value instanceof _PdfReference && this._crossReference) {\n            this._writeObject(document, table, document._crossReference._fetch(value), dictionary, key, array, value);\n        }\n        else if (value === null || typeof value === 'undefined') {\n            this._writeDictionary('null', table, key, array, ref, null);\n        }\n    };\n    _PdfMergeHelper.prototype._writeDictionary = function (value, table, key, array, ref, list) {\n        if (key && value) {\n            table.set(key, value);\n        }\n        else if (key && list) {\n            table.set(key, list);\n        }\n        else if (list && !ref) {\n            array.push(list);\n        }\n        else if (value) {\n            array.push(value);\n        }\n        else if (ref) {\n            var reference_3;\n            if (this._newList && this._newList.size > 0) {\n                this._newList.forEach(function (value, key) {\n                    if (key === ref) {\n                        reference_3 = value;\n                    }\n                });\n            }\n            if (reference_3) {\n                array.push(reference_3);\n            }\n            else {\n                var layerList = list;\n                reference_3 = this._crossReference._getNextReference();\n                this._crossReference._cacheMap.set(reference_3, layerList);\n                layerList._updated = true;\n                array.push(reference_3);\n                this._newList.set(ref, reference_3);\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._writeArray = function (document, array, value, dictionary) {\n        for (var i = 0; i < value.length; i++) {\n            this._writeObject(document, null, value[Number.parseInt(i.toString(), 10)], dictionary, null, array);\n        }\n    };\n    _PdfMergeHelper.prototype._writePropertiesDictionary = function (document, table, dictionary) {\n        var _this = this;\n        if (dictionary && dictionary.size > 0) {\n            dictionary.forEach(function (key, value) {\n                _this._writeObject(document, table, ((value instanceof _PdfReference) ? dictionary.get(key) : value), dictionary, key);\n            });\n        }\n    };\n    _PdfMergeHelper.prototype._fixDestinations = function (document) {\n        var pageLinkReference = this._pageReference;\n        if (this._destination.length > 0) {\n            for (var i = 0; i < this._destination.length; i++) {\n                var dest = this._destination[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                if (dest instanceof Array) {\n                    var destination = dest; // eslint-disable-line\n                    if (destination.length > 0 && destination[0] && destination[0] instanceof _PdfReference) {\n                        var ref = document._crossReference._fetch(destination[0]); // eslint-disable-line\n                        var index = pageLinkReference.get(ref);\n                        if (ref && pageLinkReference.has(ref) && index !== null) {\n                            destination[0] = index._ref;\n                        }\n                        if (ref && pageLinkReference.has(ref) && index === null) {\n                            destination[0] = null;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    _PdfMergeHelper.prototype._insertNewPage = function (page, index) {\n        var newPage;\n        var pagesettings = new PdfPageSettings();\n        pagesettings.size = page.size;\n        pagesettings.margins.left = 0;\n        pagesettings.margins.top = 0;\n        pagesettings.margins.right = 0;\n        pagesettings.margins.bottom = 0;\n        if (typeof this._options !== 'undefined' && typeof this._options.rotation !== 'undefined') {\n            pagesettings.rotation = this._options.rotation;\n        }\n        else {\n            pagesettings.rotation = page.rotation;\n        }\n        pagesettings.orientation = (page.size[0] > page.size[1]) ? PdfPageOrientation.landscape : PdfPageOrientation.portrait;\n        if (typeof index !== 'undefined') {\n            newPage = this._destinationDocument.addPage(index, pagesettings);\n        }\n        else {\n            newPage = this._destinationDocument.addPage(pagesettings);\n        }\n        var pageDictionary = page._pageDictionary;\n        if (pageDictionary._get('MediaBox')) {\n            var mBox = pageDictionary._get('MediaBox'); // eslint-disable-line\n            newPage._pageDictionary.update('MediaBox', mBox);\n        }\n        if (pageDictionary._get('CropBox')) {\n            var cBox = pageDictionary._get('CropBox'); // eslint-disable-line\n            newPage._pageDictionary.update('CropBox', cBox);\n        }\n        if (typeof this._options.rotation !== 'undefined' || page._pageDictionary.has('Rotate')) {\n            var rotate = void 0;\n            if (typeof this._options.rotation !== 'undefined') {\n                rotate = Math.floor(this._options.rotation) * 90;\n            }\n            else {\n                rotate = Math.floor(page.rotation) * 90;\n            }\n            rotate = rotate >= 360 ? rotate % 360 : rotate;\n            newPage._pageDictionary.update('Rotate', rotate);\n        }\n        return newPage;\n    };\n    _PdfMergeHelper.prototype._objectDispose = function () {\n        this._bookmarkHashTable = new Map();\n        this._namedDestinations = [];\n        this._bookmarks = [];\n        this._pageReference = new Map();\n        this._bookmarksPageLinkReference.clear();\n        this._destination = [];\n        this._newList = new Map();\n        this._annotationLayer = new Map();\n        this._fieldNames = [];\n        if (this._destinationDocument && this._destinationDocument._form && this._destinationDocument._form._widgetReferences) {\n            this._destinationDocument._form._widgetReferences = [];\n        }\n    };\n    return _PdfMergeHelper;\n}());\nexport { _PdfMergeHelper };\nvar _PdfCopier = /** @class */ (function () {\n    function _PdfCopier(targetCrossReference, sourceCrossReference) {\n        this._traversedObjects = new Map();\n        this._isGroupingSupport = false;\n        this._targetCrossReference = targetCrossReference;\n        this._sourceCrossReference = sourceCrossReference;\n    }\n    _PdfCopier.prototype._copy = function (object) {\n        var clonedObject; // eslint-disable-line\n        if (object instanceof _PdfDictionary) {\n            clonedObject = this._copyDictionary(object);\n        }\n        else if (Array.isArray(object)) {\n            clonedObject = this._copyArray(object);\n        }\n        else if (object instanceof _PdfBaseStream) {\n            clonedObject = this._copyStream(object);\n        }\n        else if (object instanceof _PdfReference) {\n            clonedObject = this._copyReference(object);\n        }\n        else if (object instanceof _PdfName || typeof object === 'number' ||\n            typeof object === 'string' || typeof object === 'boolean') {\n            clonedObject = object;\n        }\n        return clonedObject;\n    };\n    _PdfCopier.prototype._copyDictionary = function (element, copiedPage) {\n        var _this = this;\n        var clonedDictionary = new _PdfDictionary(this._targetCrossReference);\n        if (element && element.size > 0) {\n            element.forEach(function (key, value) {\n                if (key === 'OC' && value instanceof Array || (key !== 'P' && key !== 'Parent' && key !== 'Dest' && key !== 'OC' && !(key === 'AP' && copiedPage))) {\n                    var copiedValue = _this._copy(value); // eslint-disable-line\n                    if (copiedValue !== null && typeof copiedValue !== 'undefined') {\n                        clonedDictionary.update(key, copiedValue);\n                    }\n                }\n            });\n        }\n        clonedDictionary._updated = true;\n        return clonedDictionary;\n    };\n    _PdfCopier.prototype._copyArray = function (originalArray) {\n        var newArray = []; // eslint-disable-line \n        for (var i = 0; i < originalArray.length; i++) {\n            newArray.push(this._copy(originalArray[Number.parseInt(i.toString(), 10)]));\n        }\n        return newArray;\n    };\n    _PdfCopier.prototype._copyStream = function (originalStream) {\n        var bytes;\n        var imageStream = false;\n        var baseStream = originalStream; // eslint-disable-line\n        if (originalStream.dictionary.has('Subtype') && originalStream.dictionary.get('Subtype').name === 'Image') {\n            imageStream = true;\n            if (originalStream instanceof _PdfStream) {\n                bytes = originalStream.getByteRange(originalStream.offset, originalStream.end);\n            }\n            else if (originalStream && baseStream.stream && baseStream.stream instanceof _PdfStream) {\n                if (typeof baseStream._initialized === 'boolean' && baseStream._cipher) {\n                    var streamLength = baseStream.stream.end - baseStream.stream.start;\n                    baseStream.getBytes(streamLength);\n                    bytes = baseStream.buffer.subarray(0, baseStream.bufferLength);\n                }\n                else {\n                    var stream = baseStream.stream;\n                    bytes = stream.getByteRange(stream.start, stream.end);\n                }\n            }\n            else if (baseStream.stream && baseStream.stream.stream) {\n                var flateStream = baseStream.stream; // eslint-disable-line\n                if (flateStream.stream instanceof _PdfStream && typeof flateStream._initialized === 'boolean' && flateStream._cipher) {\n                    var streamLength = flateStream.stream.end - flateStream.stream.start;\n                    flateStream.getBytes(streamLength);\n                    bytes = flateStream.buffer.subarray(0, flateStream.bufferLength);\n                }\n                else if (flateStream.stream && flateStream.stream instanceof _PdfStream) {\n                    var stream = flateStream.stream;\n                    bytes = stream.getByteRange(stream.start, stream.end);\n                }\n                else {\n                    bytes = [];\n                }\n            }\n            else {\n                bytes = originalStream.getBytes();\n                if ((!bytes || bytes.length === 0) && originalStream instanceof _PdfContentStream) {\n                    bytes = originalStream._bytes;\n                }\n            }\n        }\n        else {\n            bytes = originalStream.getBytes();\n            if ((!bytes || bytes.length === 0) && originalStream instanceof _PdfContentStream) {\n                bytes = originalStream._bytes;\n            }\n        }\n        var content = new _PdfContentStream(Array.from(bytes));\n        content._isImage = imageStream;\n        content.dictionary = this._copyDictionary(originalStream.dictionary);\n        content.dictionary._updated = true;\n        return content;\n    };\n    _PdfCopier.prototype._copyReference = function (element) {\n        if (this._traversedObjects.has(element)) {\n            return this._traversedObjects.get(element);\n        }\n        else {\n            this._traversedObjects.set(element, null);\n            var dereferencedValue = this._sourceCrossReference._fetch(element); // eslint-disable-line\n            var copyValue = this._copy(dereferencedValue); // eslint-disable-line\n            if (copyValue instanceof _PdfDictionary || copyValue instanceof _PdfBaseStream) {\n                var newRef = this._addToDestination(copyValue);\n                this._traversedObjects.set(element, newRef);\n                return newRef;\n            }\n            else {\n                this._traversedObjects.set(element, copyValue);\n                return copyValue;\n            }\n        }\n    };\n    _PdfCopier.prototype._addToDestination = function (element) {\n        var newRef = this._targetCrossReference._getNextReference();\n        this._targetCrossReference._cacheMap.set(newRef, element);\n        element.objId = newRef.objectNumber + \" \" + newRef.generationNumber;\n        return newRef;\n    };\n    return _PdfCopier;\n}());\nexport { _PdfCopier };\n","import { _PdfBaseStream, _PdfContentStream } from '../base-stream';\nimport { PdfPrintState, PdfRotationAngle } from '../enumerator';\nimport { PdfGraphics } from '../graphics/pdf-graphics';\nimport { _PdfDictionary, _PdfName, _PdfReference } from '../pdf-primitives';\nimport { PdfLayerCollection } from './layer-collection';\n/**\n * Represents the base class for layer objects.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the collection of layers in the document\n * let layers: PdfLayerCollection = document.layers;\n * // Retrieve the first layer from the layers collection\n * let layer: PdfLayer = layers.at(0);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLayer = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayer` class.\n     *\n     * @private\n     */\n    function PdfLayer() {\n        this._visible = true;\n        this._printState = PdfPrintState.printWhenVisible;\n        this._isEndState = false;\n        this._dictionary = new _PdfDictionary();\n        this._pages = [];\n        this._subLayer = [];\n        this._locked = false;\n        this._parentLayer = [];\n        this._child = [];\n        this._graphicsCollection = new Map();\n        this._pageGraphics = new Map();\n        this._pageParsed = false;\n        this._xObject = [];\n        this._content = new _PdfContentStream([]);\n    }\n    Object.defineProperty(PdfLayer.prototype, \"_layerPage\", {\n        get: function () {\n            if (!this._pageParsed) {\n                this._parseLayerPage();\n            }\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayer.prototype, \"_layerId\", {\n        get: function () {\n            if (!this._pageParsed) {\n                this._parseLayerPage();\n            }\n            return this._id;\n        },\n        set: function (value) {\n            this._id = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayer.prototype, \"name\", {\n        /**\n         * Gets the name of the layer.\n         *\n         * @returns {string} Name of the layer.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Retrieve the name of the layer\n         * let name: string = layer.name;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._name || '';\n        },\n        /**\n         * Sets the name of the layer.\n         *\n         * @param {string} name Name of the layer.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Change the name of the layer\n         * layer.name = 'Layer2';\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._name = name;\n            if (this._dictionary && this._name && this.name !== '') {\n                this._dictionary.update('Name', this._name);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayer.prototype, \"visible\", {\n        /**\n         * Gets the visibility of the layer.\n         *\n         * @returns {boolean} Boolean indicating whether the specified layer is visible or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Get the visibility state of the layer\n         * let isVisible: boolean = layer.visible;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._dictionary) {\n                var visibility = this._dictionary.get('Visible');\n                if (typeof visibility === 'boolean') {\n                    this._visible = visibility;\n                }\n            }\n            return this._visible;\n        },\n        /**\n         * Sets the visibility of the layer.\n         *\n         * @param {boolean} isVisible Boolean indicating whether the specified layer is visible or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Set the layer visibility to true\n         * layer.visible = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (isVisible) {\n            this._visible = isVisible;\n            if (this._dictionary) {\n                this._dictionary.update('Visible', isVisible);\n            }\n            this._setVisibility(isVisible);\n            this._document._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayer.prototype, \"locked\", {\n        /**\n         * Gets the boolean indicating whether the layer is locked or not.\n         *\n         * @returns {boolean} Boolean indicating whether the layer is locked or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Retrieve the lock status of the layer\n         * let isLocked: boolean = layer.locked;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._locked;\n        },\n        /**\n         * Sets the boolean indicating whether the layer is locked or not.\n         *\n         * @param {boolean} isLocked Boolean indicating whether the layer is locked or not.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Lock the layer to prevent modifications\n         * layer.locked = true;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (isLocked) {\n            this._locked = isLocked;\n            if (typeof isLocked === 'boolean') {\n                this._setLock(isLocked);\n            }\n            this._document._catalog._catalogDictionary._updated = true;\n            this._crossReference._allowCatalog = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayer.prototype, \"printState\", {\n        /**\n         * Gets the print state of the layer.\n         *\n         * @returns {PdfPrintState} Print state.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Retrieve the printState of the layer\n         * let printState: PdfPrintState = layer.printState;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._printState;\n        },\n        /**\n         * Sets the print state of the layer.\n         *\n         * @param {PdfPrintState} printState Print state.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Set the print state to 'alwaysPrint' to ensure this layer is printed\n         * layer.printState = PdfPrintState.alwaysPrint;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (printState) {\n            this._printState = printState;\n            if (this._printOption) {\n                if (this.printState === PdfPrintState.alwaysPrint) {\n                    this._printOption.update('PrintState', new _PdfName('ON'));\n                }\n                else if (this.printState === PdfPrintState.neverPrint) {\n                    this._printOption.update('PrintState', new _PdfName('OFF'));\n                }\n            }\n            else {\n                this._setPrintState();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfLayer` from the layer.\n         *\n         * @returns {PdfLayerCollection} Layer collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve the first layer from the layers collection\n         * let layer: PdfLayer = layers.at(0);\n         * // Access the collection of layers in the layer (parent layer)\n         * let childLayers: PdfLayerCollection = layer.layers;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._layers) {\n                this._layers = new PdfLayerCollection(this._document, this._layer);\n                this._layers._subLayer = true;\n            }\n            return this._layers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initializes graphics context of the layer.\n     *\n     * @param {PdfPage} page The PDF page.\n     * @returns {PdfGraphics} Graphics of the layer content.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the collection of layers in the document\n     * let layers: PdfLayerCollection = document.layers;\n     * // Add a new layer to the document with the name 'Layer1'\n     * let layer: PdfLayer = layers.add('Layer1');\n     * // Create graphics for the newly added layer on the specified page\n     * let graphics: PdfGraphics = layer.createGraphics(page);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfLayer.prototype.createGraphics = function (page) {\n        if (!this._graphics || this._needInitializeGraphics) {\n            this._page = page;\n            this._crossReference = page._crossReference;\n            this._parseGraphics();\n        }\n        return this._graphics;\n    };\n    PdfLayer.prototype._parseGraphics = function () {\n        this._loadContents();\n        var saveStream = new _PdfContentStream([32, 113, 32, 10]);\n        var saveReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(saveReference, saveStream);\n        this._page._contents.splice(0, 0, saveReference);\n        var restoreStream = new _PdfContentStream([32, 81, 32, 10]);\n        var restoreReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(restoreReference, restoreStream);\n        this._page._contents.push(restoreReference);\n        var contentStream = new _PdfContentStream([]);\n        var contentReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(contentReference, contentStream);\n        this._page._contents.push(contentReference);\n        this._page._pageDictionary.set('Contents', this._page._contents);\n        this._page._pageDictionary._updated = true;\n        this._initializeGraphics(contentStream);\n        this._initializeProperties();\n    };\n    PdfLayer.prototype._initializeProperties = function () {\n        var resource = this._graphics._resourceObject;\n        if (resource && resource.has('Properties')) {\n            var properties = resource.get('Properties');\n            if (properties) {\n                properties.update(this._id, this._referenceHolder);\n            }\n            else {\n                var properties_1 = new _PdfDictionary();\n                properties_1.update(this._id, this._referenceHolder);\n                resource.update('Properties', properties_1);\n            }\n        }\n        else {\n            var properties = new _PdfDictionary();\n            properties.update(this._id, this._referenceHolder);\n            resource.update('Properties', properties);\n        }\n    };\n    PdfLayer.prototype._loadContents = function () {\n        var contents = this._page._pageDictionary.getRaw('Contents');\n        var ref;\n        if (contents && contents && contents instanceof _PdfReference) {\n            ref = contents;\n            contents = this._crossReference._fetch(ref);\n        }\n        if (contents && contents instanceof _PdfBaseStream) {\n            this._page._contents = [ref];\n        }\n        else if (contents && Array.isArray(contents)) {\n            this._page._contents = contents;\n        }\n        else {\n            this._page._contents = [];\n        }\n    };\n    PdfLayer.prototype._initializeGraphics = function (stream) {\n        var isInvalidCase = false;\n        var llx = 0;\n        var lly = 0;\n        var urx = 0;\n        var ury = 0;\n        var size = this._page.size;\n        var mbox = this._page.mediaBox;\n        if (mbox && mbox.length >= 4) {\n            llx = mbox[0];\n            lly = mbox[1];\n            urx = mbox[2];\n            ury = mbox[3];\n        }\n        var cbox;\n        if (this._page._pageDictionary.has('CropBox')) {\n            cbox = this._page.cropBox;\n            if (cbox && cbox.length >= 4) {\n                var cx = cbox[0];\n                var cy = cbox[1];\n                var crx = cbox[2];\n                var cry = cbox[3];\n                var isValid = (cx < 0 || cy < 0 || crx < 0 || cry < 0) &&\n                    (Math.floor(Math.abs(cy)) === Math.floor(Math.abs(size[1]))) &&\n                    (Math.floor(Math.abs(cx)) === Math.floor(Math.abs(size[0])));\n                if (isValid) {\n                    this._graphics = new PdfGraphics([Math.max(cx, crx), Math.max(cy, cry)], stream, this._crossReference, this._page);\n                }\n                else {\n                    this._graphics = new PdfGraphics(size, stream, this._crossReference, this._page);\n                    this._graphics._cropBox = cbox;\n                }\n            }\n            else {\n                this._graphics = new PdfGraphics(size, stream, this._crossReference, this._page);\n            }\n        }\n        else if ((llx < 0 || lly < 0 || urx < 0 || ury < 0) &&\n            (Math.floor(Math.abs(lly)) === Math.floor(Math.abs(size[1]))) &&\n            (Math.floor(Math.abs(urx)) === Math.floor(Math.abs(size[0])))) {\n            var width = Math.max(llx, urx);\n            var height = Math.max(lly, ury);\n            if (width <= 0 || height <= 0) {\n                isInvalidCase = true;\n                if (llx < 0) {\n                    llx = -llx;\n                }\n                if (lly < 0) {\n                    lly = -lly;\n                }\n                if (urx < 0) {\n                    urx = -urx;\n                }\n                if (ury < 0) {\n                    ury = -ury;\n                }\n                width = Math.max(llx, urx);\n                height = Math.max(lly, ury);\n            }\n            this._graphics = new PdfGraphics([width, height], stream, this._crossReference, this._page);\n        }\n        else {\n            this._graphics = new PdfGraphics(size, stream, this._crossReference, this._page);\n        }\n        if (this._page._pageDictionary.has('MediaBox')) {\n            this._graphics._mediaBoxUpperRightBound = isInvalidCase ? -lly : ury;\n        }\n        this._graphicsState = this._graphics.save();\n        var origin = this._page._origin;\n        if ((origin[0] >= 0 && origin[1] >= 0) || Math.sign(origin[0]) !== Math.sign(origin[1])) {\n            this._graphics._initializeCoordinates();\n        }\n        else {\n            this._graphics._initializeCoordinates(this._page);\n        }\n        //Need to code - set transparency group\n        if (!this._page._isNew) {\n            var rotation = this._page.rotation;\n            if (!Number.isNaN(rotation) && (rotation !== PdfRotationAngle.angle0 || this._page._pageDictionary.has('Rotate'))) {\n                var rotate = void 0;\n                if (this._page._pageDictionary.has('Rotate')) {\n                    rotate = this._page._pageDictionary.get('Rotate');\n                }\n                else {\n                    rotate = rotation * 90;\n                }\n                var clip = this._graphics._clipBounds;\n                if (rotate === 90) {\n                    this._graphics.translateTransform(0, size[1]);\n                    this._graphics.rotateTransform(-90);\n                    this._graphics._clipBounds = [clip[0], clip[1], size[0], size[1]];\n                }\n                else if (rotate === 180) {\n                    this._graphics.translateTransform(size[0], size[1]);\n                    this._graphics.rotateTransform(-180);\n                }\n                else if (rotate === 270) {\n                    this._graphics.translateTransform(size[0], 0);\n                    this._graphics.rotateTransform(-270);\n                    this._graphics._clipBounds = [clip[0], clip[1], size[1], size[0]];\n                }\n            }\n        }\n        if (this._page._isNew && this._page._pageSettings) {\n            var clipBounds = this._page._getActualBounds(this._page._pageSettings);\n            this._graphics._clipTranslateMargins(clipBounds);\n        }\n        this._needInitializeGraphics = false;\n        if (!this._graphicsCollection.has(this._graphics)) {\n            this._graphicsCollection.set(this._graphics, this._graphics);\n        }\n        if (!this._pageGraphics.has(this._page)) {\n            this._pageGraphics.set(this._page, this._graphics);\n        }\n        if (this._pages.indexOf(this._page) === -1) {\n            this._pages.push(this._page);\n        }\n        this._graphics._layer = this;\n    };\n    PdfLayer.prototype._beginLayer = function (currentGraphics) {\n        if (this._graphicsCollection) {\n            if (this._graphicsCollection.has(currentGraphics)) {\n                this._graphics = this._graphicsCollection.get(currentGraphics);\n            }\n            else {\n                this._graphics = currentGraphics;\n            }\n        }\n        if (this._graphics && this._name && this._name !== '') {\n            this._graphics._isEmptyLayer = true;\n            if (this._parentLayer.length !== 0) {\n                for (var i = 0; i < this._parentLayer.length; i++) {\n                    if (this._parentLayer[Number.parseInt(i.toString(), 10)]._id && this._parentLayer[Number.parseInt(i.toString(), 10)]._layerId !== '') {\n                        this._graphics._sw._write(\"/OC /\" + this._parentLayer[Number.parseInt(i.toString(), 10)]._id + \" BDC\");\n                    }\n                }\n            }\n            var data = \"/OC /\" + this._id + \" BDC\";\n            if (this.name && this.name !== '') {\n                this._graphics._sw._write(data);\n                this._isEndState = true;\n            }\n            else {\n                this._content.write(data);\n            }\n        }\n    };\n    PdfLayer.prototype._setVisibility = function (value) {\n        var catalog = this._document._catalog._catalogDictionary;\n        var ocProperties;\n        if (catalog.has('OCProperties')) {\n            ocProperties = catalog.get('OCProperties');\n            if (!ocProperties) {\n                ocProperties = new _PdfDictionary(this._crossReference);\n            }\n        }\n        if (ocProperties) {\n            var ocgOFF = void 0;\n            var ocgON = void 0;\n            var defaultView = ocProperties.get('D');\n            if (!defaultView) {\n                defaultView = new _PdfDictionary(this._crossReference);\n            }\n            if (defaultView) {\n                if (defaultView.has('ON')) {\n                    ocgON = defaultView.get('ON');\n                    if (!ocgON) {\n                        ocgON = [];\n                    }\n                }\n                if (defaultView.has('OFF')) {\n                    ocgOFF = defaultView.get('OFF');\n                    if (!ocgOFF) {\n                        ocgOFF = [];\n                    }\n                }\n                if (this._referenceHolder) {\n                    if (!value) {\n                        if (ocgON) {\n                            var index = ocgON.indexOf(this._referenceHolder);\n                            if (index !== -1) {\n                                ocgON.splice(index, 1);\n                            }\n                        }\n                        if (ocgOFF) {\n                            var index = ocgOFF.indexOf(this._referenceHolder);\n                            if (index !== -1) {\n                                ocgOFF.splice(index);\n                            }\n                        }\n                        ocgOFF.push(this._referenceHolder);\n                    }\n                    else {\n                        if (ocgOFF) {\n                            var index = ocgOFF.indexOf(this._referenceHolder);\n                            if (index !== -1) {\n                                ocgOFF.splice(index, 1);\n                            }\n                        }\n                        if (ocgON) {\n                            var index = ocgON.indexOf(this._referenceHolder);\n                            if (index !== -1) {\n                                ocgON.splice(index);\n                            }\n                        }\n                        ocgON.push(this._referenceHolder);\n                    }\n                }\n                defaultView._updated = true;\n            }\n            ocProperties._updated = true;\n        }\n    };\n    PdfLayer.prototype._setLock = function (isSetLock) {\n        var catalog = this._document._catalog._catalogDictionary;\n        var ocProperties;\n        if (catalog.has('OCProperties')) {\n            ocProperties = catalog.get('OCProperties');\n            if (!ocProperties) {\n                ocProperties = new _PdfDictionary(this._crossReference);\n            }\n        }\n        if (ocProperties) {\n            var defaultView = ocProperties.get('D');\n            if (!defaultView) {\n                defaultView = new _PdfDictionary(this._crossReference);\n            }\n            if (defaultView) {\n                var locked = defaultView.get('Locked');\n                if (this._referenceHolder) {\n                    if (isSetLock) {\n                        if (locked) {\n                            if (locked.indexOf(this._referenceHolder) === -1) {\n                                locked.push(this._referenceHolder);\n                            }\n                        }\n                        else {\n                            this._lock = [];\n                            this._lock.push(this._referenceHolder);\n                            defaultView.update('Locked', this._lock);\n                        }\n                    }\n                    else if (locked) {\n                        var index = locked.indexOf(this._referenceHolder);\n                        if (index !== -1) {\n                            locked.splice(index, 1);\n                        }\n                    }\n                }\n                defaultView._updated = true;\n            }\n            ocProperties._updated = true;\n        }\n    };\n    PdfLayer.prototype._parseLayerPage = function () {\n        if (this._document) {\n            for (var i = 0; i < this._document.pageCount; i++) {\n                var pageDictionary = this._document.getPage(i)._pageDictionary;\n                var pageBase = this._document.getPage(i);\n                if (pageDictionary.has('Resources')) {\n                    var resources = pageDictionary.get('Resources');\n                    if (resources && (resources.has('Properties') || resources.has('XObject'))) {\n                        var properties = resources.get('Properties');\n                        var xObject = resources.get('XObject');\n                        if (properties) {\n                            var map = properties._map; // eslint-disable-line\n                            for (var layerValue in map) {\n                                if (map[String(layerValue)] instanceof _PdfReference) {\n                                    var reference = map[String(layerValue)];\n                                    var dictionary = this._crossReference._fetch(reference);\n                                    var layerIDName = layerValue;\n                                    var isPresent = this._parseDictionary(dictionary, reference, pageBase, layerIDName);\n                                    if (isPresent) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        if (xObject) {\n                            var map = xObject._map; // eslint-disable-line\n                            for (var layerValue in map) {\n                                if (map[String(layerValue)] instanceof _PdfReference) {\n                                    var reference = map[String(layerValue)];\n                                    var xobjectStream = this._crossReference._fetch(reference);\n                                    var dictionary = xobjectStream.dictionary;\n                                    if (dictionary.has('OC')) {\n                                        var layerIdName = layerValue;\n                                        var ocReference = dictionary.getRaw('OC');\n                                        dictionary = this._crossReference._fetch(ocReference);\n                                        var isPresent = this._parseDictionary(dictionary, ocReference, pageBase, layerIdName);\n                                        if (isPresent) {\n                                            this._layer._xObject.push(layerIdName);\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfLayer.prototype._parseDictionary = function (dictionary, reference, pageBase, layerID) {\n        var isPresent = false;\n        if (dictionary.has('Name') && dictionary.has('OCGs')) {\n            var refArray = dictionary.get('OCGs');\n            if (!refArray) {\n                reference = dictionary.getArray('OCGs');\n                dictionary = dictionary.get('OCGs');\n                if (dictionary && dictionary.has('Name')) {\n                    isPresent = this._setLayerPage(reference, pageBase, layerID);\n                }\n            }\n            else {\n                for (var a = 0; a < refArray.length; a++) {\n                    if (refArray[Number.parseInt(a.toString(), 10)] instanceof _PdfReference) {\n                        reference = refArray[Number.parseInt(a.toString(), 10)];\n                        dictionary = this._crossReference._fetch(reference);\n                        isPresent = this._setLayerPage(reference, pageBase, layerID);\n                    }\n                }\n            }\n        }\n        else if (dictionary.has('Name')) {\n            isPresent = this._setLayerPage(reference, pageBase, layerID);\n        }\n        return isPresent;\n    };\n    PdfLayer.prototype._setLayerPage = function (reference, pageBase, layerID) {\n        var isPresent = false;\n        if (this._layer._referenceHolder && this._layer._referenceHolder === reference) {\n            this._layer._pageParsed = true;\n            isPresent = true;\n            this._layer._layerId = layerID;\n            this._layer._page = pageBase;\n            if (this._layer._pages.indexOf(pageBase) === -1) {\n                this._layer._pages.push(pageBase);\n            }\n        }\n        return isPresent;\n    };\n    PdfLayer.prototype._setPrintState = function () {\n        var catalog = this._document._catalog._catalogDictionary;\n        var ocProperties;\n        var usageDictionary;\n        if (catalog.has('OCProperties')) {\n            ocProperties = catalog.get('OCProperties');\n            if (!ocProperties) {\n                ocProperties = new _PdfDictionary(this._crossReference);\n            }\n        }\n        var ocGroup = ocProperties.get('OCGs');\n        if (!ocGroup) {\n            ocGroup = [];\n        }\n        if (!this._dictionary.has('Usage')) {\n            usageDictionary = new _PdfDictionary();\n        }\n        else {\n            usageDictionary = this._dictionary.get('Usage');\n        }\n        this._layer._printOption = new _PdfDictionary();\n        this._layer._printOption.update('Subtype', new _PdfName('Print'));\n        if (this._layer._printState === PdfPrintState.neverPrint) {\n            this._layer._printOption.update('PrintState', new _PdfName('OFF'));\n        }\n        else if (this._layer.printState === PdfPrintState.alwaysPrint) {\n            this._layer._printOption.update('PrintState', new _PdfName('ON'));\n        }\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, this._layer._printOption);\n        usageDictionary.update('Print', reference);\n        this._layer._usage = usageDictionary;\n        this._dictionary.update('Usage', this._layer._usage);\n        var category = [];\n        category.push(new _PdfName('Print'));\n        var _usageApplication = new _PdfDictionary();\n        _usageApplication.update('Category', category);\n        _usageApplication.update('OCGs', ocGroup);\n        _usageApplication.update('Event', new _PdfName('Print'));\n        var usageApplication = [];\n        reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, _usageApplication);\n        usageApplication.push(reference);\n        var defaultView = ocProperties.get('D');\n        if (!defaultView) {\n            defaultView = new _PdfDictionary(this._crossReference);\n        }\n        defaultView.update('D', usageApplication);\n    };\n    return PdfLayer;\n}());\nexport { PdfLayer };\n","import { _PdfContentStream } from '../base-stream';\nimport { _ContentParser } from '../content-parser';\nimport { PdfPrintState } from '../enumerator';\nimport { PdfDocument } from '../pdf-document';\nimport { _PdfDictionary, _PdfName, _PdfReference } from '../pdf-primitives';\nimport { _getNewGuidString } from '../utils';\nimport { PdfLayer } from './layer';\n/**\n * The class provides methods and properties to handle the collection of `PdfLayer`.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the collection of layers in the document\n * let layers: PdfLayerCollection = document.layers;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLayerCollection = /** @class */ (function () {\n    function PdfLayerCollection(document, layer) {\n        this._subLayer = false;\n        this._isLayerContainsResource = false;\n        this._layerDictionary = new Map();\n        this._bdcCount = 0;\n        if (!this._list) {\n            this._list = [];\n        }\n        this._crossReference = document._crossReference;\n        this._catalog = document._catalog;\n        this._document = document;\n        if (layer) {\n            this._parent = layer;\n        }\n        else {\n            var _layerDictionary = void 0;\n            var _layerReference = void 0;\n            if (this._document && this._document._catalog && this._document._catalog._catalogDictionary\n                && this._document._catalog._catalogDictionary.has('OCProperties')) {\n                var ocProperties = this._document._catalog._catalogDictionary.get('OCProperties');\n                if (ocProperties && ocProperties.has('OCGs')) {\n                    var ocGroup = ocProperties.get('OCGs');\n                    if (ocGroup && Array.isArray(ocGroup)) {\n                        for (var i = 0; i < ocGroup.length; i++) {\n                            _layerReference = ocGroup[Number.parseInt(i.toString(), 10)];\n                            if (_layerReference instanceof _PdfReference) {\n                                _layerDictionary = this._crossReference._fetch(_layerReference);\n                                var layer_1 = new PdfLayer();\n                                if (_layerDictionary) {\n                                    if (_layerDictionary.has('Name')) {\n                                        var layerName = _layerDictionary.get('Name');\n                                        layer_1.name = layerName;\n                                        layer_1._dictionary = _layerDictionary;\n                                        layer_1._crossReference = this._document._crossReference;\n                                        layer_1._referenceHolder = _layerReference;\n                                        var layerId = _layerDictionary.get('LayerID');\n                                        if (layerId) {\n                                            layer_1._layerId = layerId.name;\n                                        }\n                                        var _print = _layerDictionary.getRaw('Usage');\n                                        if (_print && _print instanceof _PdfDictionary) {\n                                            var printOption = _print.get('Print');\n                                            if (printOption && printOption instanceof _PdfDictionary) {\n                                                layer_1._printOption = printOption;\n                                                if (printOption.has('PrintState')) {\n                                                    this._setPrintState(printOption, layer_1);\n                                                }\n                                            }\n                                            var viewState = _print.get('View');\n                                            if (viewState && viewState instanceof _PdfDictionary && viewState.has('ViewState')) {\n                                                var view = viewState.get('ViewState');\n                                                if (view.name === 'OFF') {\n                                                    layer_1.visible = false;\n                                                }\n                                            }\n                                        }\n                                        if (_print && _print instanceof _PdfReference) {\n                                            var printRef = this._crossReference._fetch(_print);\n                                            if (printRef && printRef instanceof _PdfDictionary) {\n                                                var _printOptionReference = printRef.getRaw('Print');\n                                                if (_printOptionReference && _printOptionReference instanceof _PdfReference) {\n                                                    var subtytpe = this._crossReference._fetch(_printOptionReference);\n                                                    if (subtytpe && subtytpe instanceof _PdfDictionary) {\n                                                        layer_1._printOption = subtytpe;\n                                                        if (subtytpe.has('PrintState')) {\n                                                            this._setPrintState(subtytpe, layer_1);\n                                                        }\n                                                    }\n                                                }\n                                                var viewStateReference = printRef.getRaw('View');\n                                                if (viewStateReference && viewStateReference instanceof _PdfReference) {\n                                                    var viewState = this._crossReference._fetch(viewStateReference);\n                                                    if (viewState && viewState instanceof _PdfDictionary && viewState.has('ViewState')) {\n                                                        var view = viewState.get('ViewState');\n                                                        if (view.name === 'OFF') {\n                                                            layer_1.visible = false;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    layer_1._document = document;\n                                    layer_1._layer = layer_1;\n                                    this._layerDictionary.set(_layerReference, layer_1);\n                                    this._list.push(layer_1);\n                                }\n                            }\n                        }\n                    }\n                    this._checkLayerLock(ocProperties);\n                    this._checkLayerVisible(ocProperties);\n                    this._checkParentLayer(ocProperties);\n                    this._createLayerHierarchical(ocProperties);\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfLayerCollection.prototype, \"_isSkip\", {\n        get: function () {\n            return this._bdcCount > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayerCollection.prototype, \"count\", {\n        /**\n         * Gets the layer count.\n         *\n         * @returns {number} Number of layers.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Retrieve layer counts from the layers collection\n         * let count: number = layers.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._list.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfLayer` at the specified index.\n     *\n     * @param {number} index Layer index.\n     * @returns {PdfLayer} Layer at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the collection of layers in the document\n     * let layers: PdfLayerCollection = document.layers;\n     * // Retrieve the first layer from the layers collection\n     * let layer: PdfLayer = layers.at(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfLayerCollection.prototype.at = function (index) {\n        return this._list[Number.parseInt(index.toString(), 10)];\n    };\n    PdfLayerCollection.prototype.add = function (name, visible) {\n        var newLayer = new PdfLayer();\n        newLayer._document = this._document;\n        newLayer._crossReference = this._document._crossReference;\n        newLayer.name = name;\n        if (visible !== null && typeof visible !== 'undefined') {\n            newLayer.visible = visible;\n        }\n        newLayer._layerId = 'OCG_' + _getNewGuidString();\n        newLayer._subLayerPosition = 0;\n        newLayer._layer = newLayer;\n        this._addLayer(newLayer);\n        return newLayer;\n    };\n    PdfLayerCollection.prototype.contains = function (arg) {\n        if (!arg) {\n            throw new Error('Layer cannot be null or undefined');\n        }\n        if (typeof arg === 'string') {\n            for (var i = 0; i < this._list.length; i++) {\n                var layer = this._list[Number.parseInt(i.toString(), 10)];\n                if (layer.name === arg) {\n                    return true;\n                }\n            }\n        }\n        else if (arg instanceof PdfLayer) {\n            if (this._list.indexOf(arg) !== -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Remove all the layers.\n     *\n     * @returns {void} Returns nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the collection of layers in the document\n     * let layers: PdfLayerCollection = document.layers;\n     * // Removes all layers from the collection\n     * layers.clear();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfLayerCollection.prototype.clear = function () {\n        for (var i = this._list.length - 1; i > -1; i--) {\n            var layer = this._list[Number.parseInt(i.toString(), 10)];\n            this._removeLayer(layer, true);\n        }\n        this._list.length = 0;\n    };\n    /**\n     * Index of the specified layer.\n     *\n     * @param {PdfLayer} layer The layer to be checked.\n     * @returns {number} Index of the layer.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the collection of layers in the document\n     * let layers: PdfLayerCollection = document.layers;\n     * // Add a new layer to the document with the name 'Layer1'\n     * let layer: PdfLayer = layers.add('Layer1');\n     * // Find the index of the layer in the layers collection\n     * let index: number = layers.indexOf(layer);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfLayerCollection.prototype.indexOf = function (layer) {\n        if (!layer) {\n            throw new Error('Layer cannot be null or undefined');\n        }\n        return this._list.indexOf(layer);\n    };\n    /**\n     * Move the `PdfLayer` into the collection at specified index.\n     *\n     * @param {number} index Index of the layer.\n     * @param {PdfLayer} layer Layer to move.\n     * @returns {void} Returns nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the collection of layers in the document\n     * let layers: PdfLayerCollection = document.layers;\n     * // Add a new layer to the document with the name 'Layer1'\n     * let layer: PdfLayer = layers.add('Layer1');\n     * // Add a new layer to the document with the name 'Layer2'\n     * let layer1: PdfLayer = layers.add('Layer2');\n     * // Move 'layer2' to the first position (index 0)\n     * layers.move(0, layer2);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfLayerCollection.prototype.move = function (index, layer) {\n        if (index < 0 || index >= this._list.length) {\n            throw new Error('Index cannot be less than 0 or greater than array length');\n        }\n        if (!layer) {\n            throw new Error('Layer cannot be null or undefined');\n        }\n        var position;\n        for (var i = 0; i < this._list.length; i++) {\n            if (this._list[Number.parseInt(i.toString(), 10)] === layer) {\n                position = this.indexOf(this._list[Number.parseInt(i.toString(), 10)]);\n                break;\n            }\n        }\n        if (position !== null && typeof position !== 'undefined' && position !== index) {\n            this._list.splice(position, 1);\n            this._list.splice(index, 0, layer);\n            this._insertLayer(index, layer);\n        }\n    };\n    PdfLayerCollection.prototype.removeAt = function (arg1, arg2) {\n        if (arg1 < 0 || arg1 >= this._list.length) {\n            throw new Error('Index cannot be less than 0 or greater than array length');\n        }\n        var layer = this._list[Number.parseInt(arg1.toString(), 10)];\n        this._list.splice(arg1, 1);\n        if (layer) {\n            this._removeLayer(layer, arg2 || false);\n            if (layer._child.length > 0) {\n                for (var i = 0; i < layer._child.length; i++) {\n                    this._removeLayer(layer._child[Number.parseInt(i.toString(), 10)], false);\n                    var index = this._list.indexOf(layer._child[Number.parseInt(i.toString(), 10)]);\n                    if (index !== -1) {\n                        this._list.splice(index, 1);\n                    }\n                }\n            }\n        }\n    };\n    PdfLayerCollection.prototype.remove = function (arg1, arg2) {\n        if (arg1 instanceof PdfLayer) {\n            var layer = arg1;\n            var index = this._list.indexOf(layer);\n            if (index !== -1) {\n                this.removeAt(index, arg2 || false);\n            }\n        }\n        else if (typeof arg1 === 'string') {\n            for (var i = 0; i < this._list.length; i++) {\n                var layer = this._list[Number.parseInt(i.toString(), 10)];\n                var index = this._list.indexOf(layer);\n                if (layer.name === arg1 && index !== -1) {\n                    this.removeAt(index, arg2 || false);\n                    i = i - 1;\n                }\n            }\n        }\n    };\n    PdfLayerCollection.prototype._setPrintState = function (printOption, layer) {\n        var printState = printOption.get('PrintState');\n        if (printState && printState instanceof _PdfName) {\n            if (printState.name === 'ON') {\n                layer.printState = PdfPrintState.alwaysPrint;\n            }\n            else {\n                layer.printState = PdfPrintState.neverPrint;\n            }\n        }\n    };\n    PdfLayerCollection.prototype._addLayer = function (layer) {\n        this._list.push(layer);\n        var index = this._list.length - 1;\n        if (this._document instanceof PdfDocument) {\n            this._createLayer(layer);\n        }\n        layer._layer = layer;\n        return index;\n    };\n    PdfLayerCollection.prototype._createLayer = function (layer) {\n        var ocProperties = new _PdfDictionary(this._crossReference);\n        var ocGroups = this._createOptionalContentDictionary(layer);\n        var isPresent = false;\n        if (this._document && this._document._catalog && this._document._catalog._catalogDictionary.has('OCProperties') && this._isLayerContainsResource) {\n            var _ocDictionary = this._document._catalog._catalogDictionary.get('OCProperties');\n            if (_ocDictionary && _ocDictionary.has('OCGs')) {\n                var ocgsList = _ocDictionary.get('OCGs');\n                if (ocgsList && ocGroups) {\n                    isPresent = true;\n                    for (var _i = 0, ocGroups_1 = ocGroups; _i < ocGroups_1.length; _i++) {\n                        var obj = ocGroups_1[_i];\n                        if (ocgsList.indexOf(obj) === -1) {\n                            ocgsList.push(obj);\n                        }\n                    }\n                }\n                if (_ocDictionary.has('D')) {\n                    var defaultView = _ocDictionary.get('D');\n                    if (defaultView) {\n                        var on = void 0;\n                        var off = void 0;\n                        var _usage = void 0;\n                        if (!defaultView.has('Order')) {\n                            defaultView.update('Order', this._document._order);\n                        }\n                        if (defaultView.has('OFF')) {\n                            off = defaultView.get('OFF');\n                        }\n                        if (defaultView.has('ON')) {\n                            on = defaultView.get('ON');\n                        }\n                        if (defaultView.has('AS')) {\n                            _usage = defaultView.get('AS');\n                        }\n                        if (_usage) {\n                            for (var i = 0; i < _usage.length; i++) {\n                                var usageDictionary = void 0;\n                                var value = _usage[Number.parseInt(i.toString(), 10)];\n                                if (value instanceof _PdfReference) {\n                                    usageDictionary = this._crossReference._fetch(value);\n                                    if (usageDictionary && usageDictionary instanceof _PdfDictionary) {\n                                        var usageOcGroup = usageDictionary.get('OCGs');\n                                        if (usageOcGroup && ocGroups && usageOcGroup.indexOf(layer._referenceHolder) === -1) {\n                                            usageOcGroup.push(layer._referenceHolder);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (layer.visible) {\n                            if (on && ocGroups && on.indexOf(layer._referenceHolder) === -1) {\n                                on.push(layer._referenceHolder);\n                            }\n                        }\n                        else if (off && ocGroups && off.indexOf(layer._referenceHolder) === -1) {\n                            off.push(layer._referenceHolder);\n                        }\n                    }\n                }\n                this._document._catalog._catalogDictionary._updated = true;\n            }\n        }\n        if (!isPresent) {\n            ocProperties.update('OCGs', ocGroups);\n            ocProperties.update('D', this._createOptionalContentViews());\n            this._catalog._catalogDictionary.update('OCProperties', ocProperties);\n        }\n        this._crossReference._allowCatalog = true;\n    };\n    PdfLayerCollection.prototype._createOptionalContentDictionary = function (layer) {\n        var _dictionary = new _PdfDictionary(this._crossReference);\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, _dictionary);\n        _dictionary.update('Name', layer.name);\n        _dictionary.update('Type', new _PdfName('OCG'));\n        _dictionary.update('LayerID', new _PdfName(layer._layerId));\n        _dictionary.update('Visible', layer.visible);\n        if (layer.printState === PdfPrintState.alwaysPrint ||\n            layer.printState === PdfPrintState.neverPrint ||\n            layer.printState === PdfPrintState.printWhenVisible) {\n            var UsageReference = this._setPrintOption(layer);\n            _dictionary.update('Usage', UsageReference);\n            this._document._printLayer.push(reference);\n        }\n        this._document._optionalContentDictionaries.push(reference);\n        layer._dictionary = _dictionary;\n        layer._referenceHolder = reference;\n        var ocProperties = this._document._catalog._catalogDictionary.get('OCProperties');\n        this._createSublayer(ocProperties, reference, layer);\n        if (layer.visible) {\n            this._document._on.push(reference);\n        }\n        else {\n            this._document._off.push(reference);\n        }\n        this._isLayerContainsResource = true;\n        return this._document._optionalContentDictionaries;\n    };\n    PdfLayerCollection.prototype._createOptionalContentViews = function () {\n        var _optionalContent = new _PdfDictionary();\n        _optionalContent.update('Name', 'Layers');\n        _optionalContent.update('Order', this._document._order);\n        _optionalContent.update('ON', this._document._on);\n        _optionalContent.update('OFF', this._document._off);\n        var category = [];\n        category.push(new _PdfName('Print'));\n        var _usageApplication = new _PdfDictionary();\n        _usageApplication.update('Category', category);\n        _usageApplication.update('OCGs', this._document._printLayer);\n        _usageApplication.update('Event', new _PdfName('Print'));\n        var reference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(reference, _usageApplication);\n        this._document._as.push(reference);\n        _optionalContent.update('AS', this._document._as);\n        return _optionalContent;\n    };\n    PdfLayerCollection.prototype._setPrintOption = function (layer) {\n        var _usage = new _PdfDictionary();\n        var _print = new _PdfDictionary();\n        var usageReference = this._crossReference._getNextReference();\n        var printReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(usageReference, _usage);\n        this._crossReference._cacheMap.set(printReference, _print);\n        _print.update('Subtype', new _PdfName('Print'));\n        if (layer.printState === PdfPrintState.neverPrint) {\n            _print.update('PrintState', new _PdfName('OFF'));\n        }\n        else if (layer.printState === PdfPrintState.alwaysPrint) {\n            _print.update('PrintState', new _PdfName('ON'));\n        }\n        layer._usage = _usage;\n        layer._printOption = _print;\n        _usage.update('Print', printReference);\n        return usageReference;\n    };\n    PdfLayerCollection.prototype._createSublayer = function (ocProperties, reference, layer) {\n        if (!this._subLayer) {\n            if (ocProperties) {\n                var order = void 0;\n                var defaultview = ocProperties.get('D');\n                if (defaultview) {\n                    order = defaultview.get('Order');\n                }\n                if (order) {\n                    this._document._order = order;\n                }\n                this._document._order.push(reference);\n            }\n            else {\n                this._document._order.push(reference);\n            }\n        }\n        else {\n            layer._parent = this._parent;\n            if (ocProperties) {\n                var order = void 0;\n                var defaultview = ocProperties.get('D');\n                if (defaultview) {\n                    order = defaultview.get('Order');\n                }\n                if (this._document._order && order) {\n                    this._document._order = order;\n                }\n            }\n            if (this._parent._child.length === 0) {\n                this._parent._subLayer.push(reference);\n            }\n            else if (this._document._order.indexOf(this._parent._referenceHolder) !== -1) {\n                var position = this._document._order.indexOf(this._parent._referenceHolder);\n                this._document._order.splice(position + 1, 1);\n                this._parent._subLayer.push(reference);\n            }\n            else {\n                this._parent._subLayer.push(reference);\n            }\n            if (this._document._order.indexOf(this._parent._referenceHolder) !== -1) {\n                var position = this._document._order.indexOf(this._parent._referenceHolder);\n                this._document._order.splice(position + 1, 0, this._parent._subLayer);\n            }\n            else {\n                if (this._parent._parent) {\n                    if (this._parent._parent._subLayer.indexOf(this._parent._referenceHolder) !== -1) {\n                        var position = this._parent._parent._subLayer.indexOf(this._parent._referenceHolder);\n                        if (this._parent._subLayer.length === 1) {\n                            this._parent._parent._subLayer.splice(position + 1, 0, this._parent._subLayer);\n                        }\n                        if (this._document._order.indexOf(this._parent._parent._referenceHolder) !== -1) {\n                            var position_1 = this._document._order.indexOf(this._parent._parent._referenceHolder);\n                            this._document._order.splice(position_1 + 1, 1);\n                            this._document._order.splice(position_1 + 1, 0, this._parent._parent._subLayer);\n                        }\n                    }\n                }\n                else {\n                    if (document instanceof PdfDocument) {\n                        for (var i = 0; i < document._order.length; i++) {\n                            if (Array.isArray(document._order[Number.parseInt(i.toString(), 10)])) {\n                                var value = document._order[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                                var orderArray = value;\n                                if (orderArray.indexOf(this._parent._referenceHolder) !== -1) {\n                                    var position = orderArray.indexOf(this._parent._referenceHolder);\n                                    if (this._parent._subLayer.length === 1) {\n                                        orderArray.splice(position + 1, 0, this._parent._subLayer);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (this._parent._child.indexOf(layer) === -1) {\n                this._parent._child.push(layer);\n            }\n            if (this._parent._parentLayer.length === 0) {\n                layer._parentLayer.push(this._parent);\n            }\n            else {\n                for (var i = 0; i < this._parent._parentLayer.length; i++) {\n                    if (layer._parentLayer.indexOf(this._parent._parentLayer[Number.parseInt(i.toString(), 10)]) === -1) {\n                        layer._parentLayer.push(this._parent._parentLayer[Number.parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (layer._parentLayer.indexOf(this._parent) === -1) {\n                    layer._parentLayer.push(this._parent);\n                }\n            }\n        }\n    };\n    PdfLayerCollection.prototype._checkLayerLock = function (ocProperties) {\n        var locked;\n        var defaultView = ocProperties.get('D');\n        if (defaultView && defaultView.has('Locked')) {\n            locked = defaultView.get('Locked');\n        }\n        if (locked) {\n            for (var i = 0; i < locked.length; i++) {\n                var referenceHolder = locked[Number.parseInt(i.toString(), 10)];\n                if (referenceHolder && referenceHolder instanceof _PdfReference) {\n                    var pdfLayer = this._layerDictionary.get(referenceHolder);\n                    if (pdfLayer) {\n                        pdfLayer.locked = true;\n                    }\n                }\n            }\n        }\n    };\n    PdfLayerCollection.prototype._checkLayerVisible = function (ocProperties) {\n        var _document = this._document;\n        var visible;\n        if (_document._catalog && _document._catalog._catalogDictionary.has('OCProperties')) {\n            var defaultView = ocProperties.get('D');\n            if (defaultView && defaultView.has('OFF')) {\n                visible = defaultView.get('OFF');\n            }\n            if (visible) {\n                for (var i = 0; i < visible.length; i++) {\n                    var visibleReference = visible[Number.parseInt(i.toString(), 10)];\n                    if (visibleReference instanceof _PdfReference) {\n                        var layerDictionary = this._layerDictionary;\n                        if (layerDictionary && layerDictionary.size > 0 && visibleReference && layerDictionary.has(visibleReference)) {\n                            var pdfLayer = layerDictionary.get(visibleReference);\n                            if (pdfLayer) {\n                                pdfLayer.visible = false;\n                                if (pdfLayer._dictionary && pdfLayer._dictionary.has('Visible')) {\n                                    pdfLayer._dictionary.set('Visible', false);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfLayerCollection.prototype._checkParentLayer = function (ocProperties) {\n        var defaultView = ocProperties.get('D');\n        if (defaultView) {\n            var array = defaultView.get('Order');\n            if (array) {\n                this._parsingLayerOrder(null, array, this._layerDictionary);\n            }\n        }\n    };\n    PdfLayerCollection.prototype._parsingLayerOrder = function (parent, array, layerDictionary) {\n        var reference;\n        var layer;\n        for (var i = 0; i < array.length; i++) {\n            reference = array[Number.parseInt(i.toString(), 10)];\n            if (reference instanceof _PdfReference) {\n                if (layerDictionary.has(reference)) {\n                    layer = layerDictionary.get(reference);\n                }\n                if (layer) {\n                    if (parent) {\n                        if (parent._child.indexOf(layer) === -1) {\n                            parent._child.push(layer);\n                        }\n                        if (parent._parentLayer.length === 0) {\n                            layer._parentLayer.push(parent);\n                            layer._parent = parent;\n                        }\n                        else {\n                            for (var j = 0; j < parent._parentLayer.length; j++) {\n                                if (layer._parentLayer.indexOf(parent._parentLayer[Number.parseInt(j.toString(), 10)]) === -1) {\n                                    if (!(parent._parentLayer[Number.parseInt(j.toString(), 10)] instanceof PdfLayer)\n                                        && parent._parentLayer[Number.parseInt(j.toString(), 10)]) {\n                                        layer._parentLayer.push(parent._parentLayer[Number.parseInt(j.toString(), 10)]);\n                                    }\n                                }\n                            }\n                            layer._parentLayer.push(parent);\n                            layer._parent = parent;\n                        }\n                    }\n                    if (array.length > i + 1 && (Array.isArray(array[i + 1]))) {\n                        i++;\n                        var pdfArray = array[i]; // eslint-disable-line\n                        layer._subLayer = pdfArray;\n                        this._parsingLayerOrder(layer, pdfArray, layerDictionary);\n                    }\n                }\n            }\n            else if (Array.isArray(array[Number.parseInt(i.toString(), 10)])) {\n                var value = array[Number.parseInt(i.toString(), 10)]; // eslint-disable-line\n                var subArray = value;\n                if (!subArray || subArray.length === 0) {\n                    return;\n                }\n                if (typeof subArray[0] === 'string') {\n                    parent = null;\n                    this._parsingLayerOrder(parent, subArray, layerDictionary);\n                }\n                else {\n                    parent = null;\n                    this._parsingLayerOrder(parent, array[i], layerDictionary); // eslint-disable-line\n                }\n            }\n        }\n    };\n    PdfLayerCollection.prototype._createLayerHierarchical = function (ocProperties) {\n        var _this = this;\n        var defaultView = ocProperties.get('D');\n        if (defaultView && defaultView.has('Order')) {\n            if (this._layerDictionary && this._layerDictionary.size > 0) {\n                this._list.splice(0, this._list.length);\n                this._layerDictionary.forEach(function (_layer, _pdfReference) {\n                    if (_layer instanceof PdfLayer && _pdfReference instanceof _PdfReference) {\n                        if (!_layer._parent && _this._list.indexOf(_layer) === -1) {\n                            _this._list.push(_layer);\n                        }\n                        else if (_layer._child.length > 0) {\n                            _this._addChildLayer(_layer._parent);\n                        }\n                        else if (_layer._parent && _layer._child.length === 0 && !_layer._parent.layers.contains(_layer)) {\n                            _layer._parent.layers._addNestedLayer(_layer);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    PdfLayerCollection.prototype._addChildLayer = function (layer) {\n        for (var i = 0; i < layer._child.length; i++) {\n            var child = layer._child[Number.parseInt(i.toString(), 10)];\n            if (layer.layers.indexOf(child) === -1) {\n                layer.layers._addNestedLayer(child);\n            }\n        }\n    };\n    PdfLayerCollection.prototype._addNestedLayer = function (layer) {\n        this._list.push(layer);\n        var index = this._list.length - 1;\n        layer._layer = layer;\n        return index;\n    };\n    PdfLayerCollection.prototype._removeLayer = function (layer, removeGraphicalContent) {\n        var _dictionary;\n        if (layer && this._document) {\n            _dictionary = this._document._catalog._catalogDictionary;\n            if (_dictionary && _dictionary.has('OCProperties')) {\n                var ocProperties = _dictionary.get('OCProperties');\n                if (ocProperties) {\n                    var ocGroup = ocProperties.get('OCGs');\n                    if (ocGroup) {\n                        this._removeOCG(layer, ocGroup);\n                    }\n                    if (ocProperties.has('D')) {\n                        var defaultView = ocProperties.get('D');\n                        if (defaultView) {\n                            var on = void 0;\n                            var off = void 0;\n                            if (defaultView.has('Order')) {\n                                var order = defaultView.get('Order');\n                                if (order) {\n                                    var arrayList = [];\n                                    this._removeOrder(layer, order, arrayList);\n                                }\n                            }\n                            if (defaultView.has('Locked')) {\n                                var locked = defaultView.get('Locked');\n                                if (locked) {\n                                    this._removeLocked(layer, locked);\n                                }\n                            }\n                            if (defaultView.has('OFF')) {\n                                off = defaultView.get('OFF');\n                            }\n                            if (defaultView.has('ON')) {\n                                on = defaultView.get('ON');\n                            }\n                            if (defaultView.has('AS')) {\n                                var _usage = defaultView.get('AS');\n                                if (_usage) {\n                                    this._removeUsage(layer, _usage);\n                                }\n                            }\n                            this._removeVisible(layer, on, off);\n                        }\n                        defaultView._updated = true;\n                    }\n                    var page = layer._layerPage;\n                    if (page) {\n                        var resource = layer._layerPage._pageDictionary.get('Resources');\n                        if (resource.has('Properties')) {\n                            var properties = resource.get('Properties');\n                            if (properties && properties.has(layer._layerId)) {\n                                delete properties._map[layer._layerId];\n                            }\n                        }\n                    }\n                    var chacheMap = this._crossReference._cacheMap; // eslint-disable-line\n                    if (chacheMap.has(layer._referenceHolder)) {\n                        var dictionary = this._crossReference._cacheMap.get(layer._referenceHolder);\n                        if (dictionary) {\n                            var usage = dictionary.getRaw('Usage');\n                            if (usage instanceof _PdfReference) {\n                                dictionary = this._crossReference._cacheMap.get(usage);\n                                if (dictionary) {\n                                    var printReference = dictionary.getRaw('Print');\n                                    chacheMap.delete(layer._referenceHolder);\n                                    chacheMap.delete(usage);\n                                    chacheMap.delete(printReference);\n                                }\n                            }\n                        }\n                    }\n                    ocProperties._updated = true;\n                    _dictionary._updated = true;\n                }\n                this._crossReference._allowCatalog = true;\n            }\n            if (removeGraphicalContent) {\n                this._removeLayerContent(layer);\n            }\n        }\n    };\n    PdfLayerCollection.prototype._removeOCG = function (layer, ocGroup) {\n        if (ocGroup && ocGroup.indexOf(layer._referenceHolder) !== -1) {\n            ocGroup.splice(ocGroup.indexOf(layer._referenceHolder), 1);\n        }\n    };\n    PdfLayerCollection.prototype._removeUsage = function (layer, _usage) {\n        if (_usage) {\n            var isRemoved = false;\n            for (var i = 0; i < _usage.length; i++) {\n                var usage = _usage[Number.parseInt(i.toString(), 10)];\n                if (usage) {\n                    var usageDictionary = void 0;\n                    if (usage instanceof _PdfReference) {\n                        usageDictionary = this._crossReference._fetch(_usage[Number.parseInt(i.toString(), 10)]);\n                    }\n                    if (usage instanceof _PdfDictionary) {\n                        usageDictionary = usage;\n                    }\n                    if (usageDictionary) {\n                        var usageOcGroup = usageDictionary.get('OCGs');\n                        if (usageOcGroup) {\n                            if (usageOcGroup.indexOf(layer._referenceHolder) !== -1) {\n                                usageOcGroup.splice(usageOcGroup.indexOf(layer._referenceHolder), 1);\n                                isRemoved = true;\n                            }\n                            if (isRemoved) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    PdfLayerCollection.prototype._removeOrder = function (layer, order, arrayList) {\n        var isRemoveOrder = false;\n        if (order) {\n            for (var i = 0; i < order.length; i++) {\n                var entry = order[Number.parseInt(i.toString(), 10)];\n                if (entry && entry instanceof _PdfReference && entry === layer._referenceHolder) {\n                    if (i !== order.length - 1) {\n                        if (Array.isArray(order[Number.parseInt(i.toString(), 10) + 1])) {\n                            order.splice(i, 2);\n                            isRemoveOrder = true;\n                            break;\n                        }\n                        else {\n                            order.splice(i, 1);\n                            isRemoveOrder = true;\n                            break;\n                        }\n                    }\n                    else {\n                        order.splice(i, 1);\n                        isRemoveOrder = true;\n                        break;\n                    }\n                }\n                else if (Array.isArray(entry)) {\n                    arrayList.push(order[Number.parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isRemoveOrder && arrayList) {\n            for (var i = 0; i < arrayList.length; i++) {\n                order = arrayList[Number.parseInt(i.toString(), 10)];\n                arrayList.splice(i, 1);\n                i -= 1;\n                this._removeOrder(layer, order, arrayList);\n            }\n        }\n    };\n    PdfLayerCollection.prototype._removeVisible = function (layer, on, off) {\n        if (layer.visible) {\n            if (on && on.indexOf(layer._referenceHolder) !== -1) {\n                var index = on.indexOf(layer._referenceHolder);\n                if (index > -1) {\n                    on.splice(index, 1);\n                }\n            }\n        }\n        else {\n            if (off && off.indexOf(layer._referenceHolder) !== -1) {\n                var index = off.indexOf(layer._referenceHolder);\n                if (index > -1) {\n                    off.splice(index, 1);\n                }\n            }\n        }\n    };\n    PdfLayerCollection.prototype._removeLocked = function (layer, locked) {\n        if (locked && locked.indexOf(layer._referenceHolder) !== -1) {\n            locked.splice(locked.indexOf(layer._referenceHolder), 1);\n        }\n    };\n    PdfLayerCollection.prototype._removeLayerContent = function (layer) {\n        var isSkip = false;\n        var _properties;\n        var _xObject;\n        if (layer._layerPage) {\n            for (var i = 0; i < layer._pages.length; i++) {\n                var _resource = layer._pages[Number.parseInt(i.toString(), 10)]._pageDictionary.get('Resources');\n                if (_resource) {\n                    _properties = _resource.get('Properties');\n                    _xObject = _resource.get('XObject');\n                    if (_properties && layer._layerId.trim().length > 0 && _properties.has(layer._layerId)) {\n                        delete _properties._map[layer._layerId];\n                    }\n                    if (_xObject && layer._xObject.length > 0) {\n                        var map = _xObject._map; // eslint-disable-line\n                        for (var _i = 0, map_1 = map; _i < map_1.length; _i++) {\n                            var key = map_1[_i];\n                            if (layer._xObject.indexOf(map[String(key)]) !== -1) {\n                                delete _xObject._map[String(key)];\n                                break;\n                            }\n                        }\n                        if (layer._xObject.indexOf(layer._layerId) !== -1) {\n                            layer._xObject.splice(layer._xObject.indexOf(layer._layerId), 1);\n                        }\n                    }\n                }\n                var content = layer._pages[i]._pageDictionary.getArray('Contents'); // eslint-disable-line\n                for (var m = 0; m < content.length; m++) {\n                    var data = new _PdfContentStream([]);\n                    var stream = content[Number.parseInt(m.toString(), 10)];\n                    var objID = stream.dictionary.objId;\n                    var bytes = stream.getBytes();\n                    var parser = void 0;\n                    if (stream instanceof _PdfContentStream) {\n                        parser = new _ContentParser(stream._bytes);\n                    }\n                    else {\n                        parser = new _ContentParser(bytes);\n                    }\n                    var result = parser._readContent();\n                    for (var j = 0; j < result.length; j++) {\n                        var entry = result[Number.parseInt(j.toString(), 10)];\n                        var _operator = entry._operator;\n                        if (_operator === 'BMC' || _operator === 'EMC' || _operator === 'BDC') {\n                            var operands = entry._operands;\n                            this._processBeginMarkContent(layer, _operator, operands, data, objID);\n                            isSkip = true;\n                        }\n                        if (_operator === 'Do' && layer._xObject.indexOf(entry._operands[0]) !== -1) {\n                            isSkip = true;\n                        }\n                        if (_operator === 'q' || _operator === 'Q' ||\n                            _operator === 'w' || _operator === 'J' || _operator === 'j' ||\n                            _operator === 'M' || _operator === 'd' || _operator === 'ri' ||\n                            _operator === 'i' || _operator === 'gs' || _operator === 'g' ||\n                            _operator === 'cm' || _operator === 'G' || _operator === 'rg' ||\n                            _operator === 'RG' || _operator === 'k' || _operator === 'K' ||\n                            _operator === 'cs' || _operator === 'CS' || _operator === 'scn' ||\n                            _operator === 'SCN' || _operator === 'sc' || _operator === 'SC') {\n                            if (!isSkip) {\n                                this._streamWrite(entry._operands, _operator, false, data);\n                            }\n                            isSkip = false;\n                        }\n                        else {\n                            if (!isSkip) {\n                                this._streamWrite(entry._operands, _operator, true, data);\n                            }\n                            isSkip = false;\n                        }\n                    }\n                    if (data.length > 0 && !objID) {\n                        var _pages = layer._pages[Number.parseInt(i.toString(), 10)];\n                        var _reference = _pages._contents[Number.parseInt(m.toString(), 10)];\n                        var contentStream = this._crossReference._fetch(_reference);\n                        contentStream._bytes.length = 0;\n                        contentStream.write(data.getString());\n                    }\n                }\n                layer._pages[Number.parseInt(i.toString(), 10)]._pageDictionary._updated = true;\n            }\n        }\n    };\n    PdfLayerCollection.prototype._processBeginMarkContent = function (parser, operator, operands, data, id) {\n        if (operator === 'BDC') {\n            var operand = void 0;\n            if (operands.length > 1 && operands[0].substring(1) === 'OC') {\n                operand = operands[1].substring(1);\n            }\n            if (this._bdcCount > 0) {\n                this._bdcCount++;\n                return;\n            }\n            if (operand && operand === parser._layerId) {\n                this._bdcCount++;\n                var refArray = parser._pages[0]._pageDictionary.getRaw('Contents');\n                if (id) {\n                    var strParts = id.split(' ');\n                    var index = refArray.indexOf(_PdfReference.get(Number(strParts[0]), Number(strParts[1])));\n                    parser._pages[0]._pageDictionary.getRaw('Contents').splice(index, 1);\n                }\n            }\n        }\n        this._streamWrite(operands, operator, true, data);\n        if ('EMC' === operator && this._bdcCount > 0) {\n            this._bdcCount--;\n        }\n    };\n    PdfLayerCollection.prototype._streamWrite = function (operands, operator, skip, data) {\n        var pdfString;\n        if (skip && this._isSkip) {\n            return;\n        }\n        if (operands) {\n            for (var _i = 0, operands_1 = operands; _i < operands_1.length; _i++) {\n                var operand = operands_1[_i];\n                pdfString = operand;\n                data.write(pdfString);\n                data.write(' ');\n            }\n        }\n        pdfString = operator;\n        data.write(pdfString);\n        data.write('\\r\\n');\n    };\n    PdfLayerCollection.prototype._insertLayer = function (index, layer) {\n        var reference = layer._referenceHolder;\n        if (this._document) {\n            var catalog = this._document._catalog._catalogDictionary;\n            if (catalog.has('OCProperties')) {\n                var ocDictionary = catalog.get('OCProperties');\n                if (ocDictionary) {\n                    var ocGroups = ocDictionary.get('OCGs');\n                    if (ocDictionary.has('D')) {\n                        var defaultView = ocDictionary.get('D');\n                        if (defaultView) {\n                            var order = defaultView.get('Order');\n                            if (order && ocGroups && order.indexOf(reference) !== -1 && index < order.length) {\n                                if (order[Number.parseInt(index.toString(), 10)] instanceof _PdfReference) {\n                                    if (index + 1 < order.length && index + 2 < order.length) {\n                                        var first = index + 1;\n                                        var second = index + 2;\n                                        if (order[Number.parseInt(first.toString(), 10)] instanceof _PdfReference\n                                            && order[Number.parseInt(second.toString(), 10)] instanceof _PdfReference) {\n                                            var position = order.indexOf(reference);\n                                            order.splice(position, 1);\n                                            order.splice(index, 0, reference);\n                                            if (ocGroups.indexOf(reference) !== -1) {\n                                                var position_2 = ocGroups.indexOf(reference);\n                                                ocGroups.splice(position_2, 1);\n                                                ocGroups.splice(index, 0, reference);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return PdfLayerCollection;\n}());\nexport { PdfLayerCollection };\n","import { _PdfDictionary, _PdfName } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { _updatePageSettings, _updatePageCount } from './utils';\n/**\n * Represents a PDF section, a set of pages with similar page settings.\n * ```typescript\n * // Create a new PDF document\n * let document: PdfDocument = new PdfDocument();\n * // Add a new section to the document\n * let section: PdfSection = document.addSection();\n * // Add a page to the section\n * let page: PdfPage = section.addPage();\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfSection` class.\n     *\n     * @param {PdfDocument} document PDF document.\n     * @param {PdfPageSettings} settings Page settings.\n     *\n     * @private\n     */\n    function PdfSection(document, settings) {\n        this._pageCount = 0;\n        this._document = document;\n        this._crossReference = document._crossReference;\n        var sectionDictionary = new _PdfDictionary(this._crossReference);\n        sectionDictionary.update('Type', _PdfName.get('Pages'));\n        this._pageSettings = settings;\n        _updatePageSettings(sectionDictionary, settings);\n        var sectionReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n        sectionDictionary.objId = sectionReference.toString();\n        sectionDictionary.update('Kids', []);\n        sectionDictionary.update('Count', 0);\n        this._dictionary = sectionDictionary;\n        this._reference = sectionReference;\n        var pageCount = this._document.pageCount;\n        if (pageCount === 0) {\n            var parentReference = this._document._catalog._catalogDictionary._get('Pages');\n            var topPagesDictionary = this._document._catalog._topPagesDictionary;\n            if (topPagesDictionary) {\n                if (topPagesDictionary.has('Kids')) {\n                    var kids = topPagesDictionary.get('Kids');\n                    if (kids) {\n                        kids.push(sectionReference);\n                        topPagesDictionary.update('Kids', kids);\n                        sectionDictionary.update('Parent', parentReference);\n                    }\n                }\n                else {\n                    topPagesDictionary.update('Kids', [sectionReference]);\n                    sectionDictionary.update('Parent', parentReference);\n                }\n            }\n        }\n        else {\n            var lastPage = this._document.getPage(pageCount - 1);\n            if (lastPage && lastPage._pageDictionary) {\n                var parentReference = lastPage._pageDictionary._get('Parent');\n                var parentDictionary = this._crossReference._fetch(parentReference);\n                if (parentDictionary && parentDictionary.has('Kids')) {\n                    var kids = parentDictionary.get('Kids');\n                    if (kids) {\n                        kids.push(sectionReference);\n                        parentDictionary.update('Kids', kids);\n                        sectionDictionary.update('Parent', parentReference);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Creates a new page and adds it to the collection.\n     *\n     * @returns {PdfPage} PDF page.\n     *\n     * ```typescript\n     * // Create a new PDF document\n     * let document: PdfDocument = new PdfDocument();\n     * // Add a new section to the document\n     * let section: PdfSection = document.addSection();\n     * // Add a page to the section\n     * let page: PdfPage = section.addPage();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfSection.prototype.addPage = function () {\n        var pageIndex = this._document.pageCount === 0 ? 0 : (this._document.pageCount);\n        var pageDictionary = new _PdfDictionary(this._crossReference);\n        pageDictionary.update('Type', _PdfName.get('Page'));\n        var pageReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pageReference, pageDictionary);\n        pageDictionary.objId = pageReference.toString();\n        pageDictionary.update('Parent', this._reference);\n        if (this._dictionary.has('Kids')) {\n            var kids = this._dictionary.get('Kids');\n            if (kids) {\n                kids.push(pageReference);\n                this._dictionary.update('Kids', kids);\n                _updatePageCount(this._dictionary, 1);\n                this._document._pageCount++;\n            }\n        }\n        else {\n            this._dictionary.update('Kids', [pageReference]);\n            _updatePageCount(this._dictionary, 1);\n            this._document._pageCount = 1;\n        }\n        this._pageCount++;\n        var result = new PdfPage(this._crossReference, pageIndex, pageDictionary, pageReference);\n        result._pageSettings = this._pageSettings;\n        result._isNew = true;\n        this._document._pages.set(pageIndex, result);\n        return result;\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\n","import { _PdfStream } from './base-stream';\nimport { _PdfCrossReference } from './pdf-cross-reference';\nimport { _Linearization } from './pdf-parser';\nimport { _isWhiteSpace, FormatError, _decode, _getNewGuidString, _isNullOrUndefined, _updatePageSettings, _updatePageCount } from './utils';\nimport { _PdfCatalog } from './pdf-catalog';\nimport { _PdfDictionary, _PdfReference, _isName, _PdfName, _clearPrimitiveCaches } from './pdf-primitives';\nimport { PdfPage } from './pdf-page';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { DataFormat, PdfPermissionFlag, PdfTextAlignment, PdfPageOrientation, PdfRotationAngle } from './enumerator';\nimport { PdfForm } from './form/form';\nimport { PdfBrush } from './graphics/pdf-graphics';\nimport { PdfFontFamily, PdfFontStyle, PdfStandardFont } from './fonts/pdf-standard-font';\nimport { PdfStringFormat, PdfVerticalAlignment } from './fonts/pdf-string-format';\nimport { _XfdfDocument } from './import-export/xfdf-document';\nimport { _JsonDocument } from './import-export/json-document';\nimport { _FdfDocument } from './import-export/fdf-document';\nimport { PdfBookmarkBase, _PdfNamedDestinationCollection } from './pdf-outline';\nimport { _XmlDocument } from './import-export/xml-document';\nimport { PdfFileStructure } from './pdf-file-structure';\nimport { _PdfMergeHelper } from './pdf-merge';\nimport { PdfPageImportOptions } from './pdf-page-import-options';\nimport { PdfLayerCollection } from './layers/layer-collection';\nimport { PdfSection } from './pdf-section';\n/**\n * Represents a PDF document and can be used to parse an existing PDF document.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Flatten annotations and form fields\n * document.flatten = true;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function () {\n    function PdfDocument(data, password) {\n        this._headerSignature = new Uint8Array([0x25, 0x50, 0x44, 0x46, 0x2d]);\n        this._startXrefSignature = new Uint8Array([0x73, 0x74, 0x61, 0x72, 0x74, 0x78, 0x72, 0x65, 0x66]);\n        this._endObjSignature = new Uint8Array([0x65, 0x6e, 0x64, 0x6f, 0x62, 0x6a]);\n        this._version = '';\n        this._permissions = PdfPermissionFlag.default;\n        this._isEncrypted = false;\n        this._isUserPassword = false;\n        this._hasUserPasswordOnly = false;\n        this._encryptOnlyAttachment = false;\n        this._encryptMetaData = false;\n        this._isExport = false;\n        this._allowCustomData = false;\n        this._isDuplicatePage = false;\n        this._isSplitDocument = false;\n        this._optionalContentDictionaries = [];\n        this._order = [];\n        this._on = [];\n        this._off = [];\n        this._as = [];\n        this._printLayer = [];\n        this._isLoaded = true;\n        if (data) {\n            this._stream = new _PdfStream(typeof data === 'string' ? _decode(data) : data);\n            this._fileStructure = new PdfFileStructure();\n            this._crossReference = new _PdfCrossReference(this, password);\n            this._pages = new Map();\n            this._checkHeader();\n            this._crossReference._setStartXRef(this._startXRef);\n            try {\n                this._parse(false);\n            }\n            catch (e) {\n                if (e.name === 'XRefParseException') {\n                    this._parse(true);\n                }\n                else {\n                    throw e;\n                }\n            }\n            this._crossReference._version = this._version;\n        }\n        else {\n            this._isLoaded = false;\n            this._stream = new _PdfStream([]);\n            this._version = '1.4';\n            this._fileStructure = new PdfFileStructure();\n            this._fileStructure.isIncrementalUpdate = false;\n            this._crossReference = new _PdfCrossReference(this);\n            this._crossReference._version = this._version;\n            this._crossReference._nextReferenceNumber = 1;\n            var catalogDictionary = new _PdfDictionary(this._crossReference);\n            catalogDictionary.update('Type', _PdfName.get('Catalog'));\n            var catalogReference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(catalogReference, catalogDictionary);\n            var trailerDictionary = new _PdfDictionary();\n            trailerDictionary.update('Root', catalogReference);\n            this._crossReference._trailer = trailerDictionary;\n            this._crossReference._root = catalogDictionary;\n            var topPagesDictionary = new _PdfDictionary(this._crossReference);\n            topPagesDictionary.update('Type', _PdfName.get('Pages'));\n            topPagesDictionary.update('Kids', []);\n            topPagesDictionary.update('Count', 0);\n            var topPagesReference = this._crossReference._getNextReference();\n            this._crossReference._cacheMap.set(topPagesReference, topPagesDictionary);\n            catalogDictionary.update('Pages', topPagesReference);\n            this._catalog = new _PdfCatalog(this._crossReference);\n            this._pages = new Map();\n        }\n    }\n    Object.defineProperty(PdfDocument.prototype, \"_allowImportCustomData\", {\n        get: function () {\n            return this._allowCustomData;\n        },\n        set: function (value) {\n            this._allowCustomData = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_linearization\", {\n        get: function () {\n            if (!this._linear) {\n                var value = void 0;\n                try {\n                    value = new _Linearization(this._stream);\n                }\n                catch (err) { } // eslint-disable-line\n                this._linear = value;\n            }\n            return this._linear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"_startXRef\", {\n        get: function () {\n            var stream = this._stream;\n            var startXRef = 0;\n            if (this._linearization && this._linearization.isValid) {\n                stream.reset();\n                if (this._find(stream, this._endObjSignature)) {\n                    startXRef = stream.position + 6 - stream.start;\n                }\n            }\n            else {\n                var step = 1024;\n                var startXRefLength = this._startXrefSignature.length;\n                var found = false;\n                var position = stream.end;\n                while (!found && position > 0) {\n                    position -= step - startXRefLength;\n                    if (position < 0) {\n                        position = 0;\n                    }\n                    stream.position = position;\n                    found = this._find(stream, this._startXrefSignature, step, true);\n                }\n                if (found) {\n                    stream.skip(9);\n                    var ch = void 0;\n                    do {\n                        ch = stream.getByte();\n                    } while (_isWhiteSpace(ch));\n                    var str = '';\n                    while (ch >= 0x20 && ch <= 0x39) {\n                        str += String.fromCharCode(ch);\n                        ch = stream.getByte();\n                    }\n                    startXRef = parseInt(str, 10);\n                    if (isNaN(startXRef)) {\n                        startXRef = 0;\n                    }\n                }\n            }\n            return startXRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isEncrypted\", {\n        /**\n         * Gets a value indicating whether the document is encrypted. (Read Only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is encrypted.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is encrypted.\n         * let isEncrypted: boolean = document.isEncrypted;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"isUserPassword\", {\n        /**\n         * Gets a value indicating whether the document is decrypted using the user password. (Read only).\n         *\n         * @returns {boolean} A boolean value indicates whether the document is decrypted using the user password.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets a value indicating whether the document is decrypted using the user password\n         * let isUserPassword: boolean = document.isUserPassword;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._isUserPassword;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageCount\", {\n        /**\n         * Gets the page count (Read only).\n         *\n         * @returns {number} Number of pages\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the page count\n         * let count: number = document.pageCount;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._pageCount === 'undefined') {\n                this._pageCount = 0;\n                if (this._linearization && this._linearization.isValid) {\n                    this._pageCount = this._linearization.pageCount;\n                }\n                else {\n                    this._pageCount = this._catalog.pageCount;\n                }\n            }\n            return this._pageCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"form\", {\n        /**\n         * Gets the PDF form fields included in the document (Read only).\n         *\n         * @returns {PdfForm} Form object\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access loaded form\n         * let form: PdfForm = document.form;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this._form === 'undefined') {\n                this._form = new PdfForm(this._catalog.acroForm, this._crossReference);\n            }\n            return this._form;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"flatten\", {\n        /**\n         * Gets the boolean flag to flatten the annotations and form fields.\n         *\n         * @returns {boolean} Flag to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the flatten value applied\n         * let flatten: boolean = document.flatten;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._flatten;\n        },\n        /**\n         * Sets the boolean flag to flatten the annotations and form fields.\n         *\n         * @param {boolean} value to flatten\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Flatten PDF annotations and form fields\n         * document.flatten = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._flatten = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"permissions\", {\n        /**\n         * Gets the permission flag of the PDF document (Read only).\n         *\n         * @returns {PdfPermissionFlag} permission flag. Default value is PdfPermissionFlag.default.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Gets the permission flag\n         * let permission: PdfPermissionFlag = document.permissions;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (this._crossReference) {\n                var flag = this._crossReference._permissionFlags;\n                if (typeof flag !== 'undefined') {\n                    this._permissions = (flag & ~-3904);\n                }\n            }\n            return this._permissions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"bookmarks\", {\n        /**\n         * Gets the bookmarks (Read only).\n         *\n         * @returns {PdfBookmarkBase} Bookmarks.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Get bookmarks\n         * let bookmarks: PdfBookmarkBase = document.bookmarks;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var catalog = this._catalog;\n            if (catalog) {\n                if (catalog._catalogDictionary.has('Outlines')) {\n                    var reference = catalog._catalogDictionary._get('Outlines');\n                    var outlines = catalog._catalogDictionary.get('Outlines');\n                    if (outlines) {\n                        this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                        this._bookmarkBase._reference = reference;\n                        if (outlines.has('First')) {\n                            this._bookmarkBase._reproduceTree();\n                        }\n                    }\n                }\n                else {\n                    var outlines = new _PdfDictionary(this._crossReference);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, outlines);\n                    catalog._catalogDictionary.update('Outlines', reference);\n                    this._crossReference._allowCatalog = true;\n                    this._bookmarkBase = new PdfBookmarkBase(outlines, this._crossReference);\n                    this._bookmarkBase._reference = reference;\n                }\n            }\n            return this._bookmarkBase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"fileStructure\", {\n        /**\n         * Gets the internal structure of the PDF document.\n         *\n         * @returns {PdfFileStructure} The internal structure of the PDF document.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the internal file structure of the PDF document\n         * let fileStructure: PdfFileStructure = document.fileStructure;\n         * // Get the cross reference type\n         * let type: PdfCrossReferenceType = fileStructure.crossReferenceType;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fileStructure;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfLayer` from the document.\n         *\n         * @returns {PdfLayerCollection} Layer collection.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the collection of layers in the document\n         * let layers: PdfLayerCollection = document.layers;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (!this._layers) {\n                this._layers = new PdfLayerCollection(this);\n            }\n            return this._layers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfPage` at the specified index.\n     *\n     * @param {number} pageIndex Page index.\n     * @returns {PdfPage} PDF page at the specified index.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Access first page\n     * let page: PdfPage = document.getPage(0);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.getPage = function (pageIndex) {\n        if (pageIndex < 0 || pageIndex >= this.pageCount) {\n            throw new Error('Invalid page index');\n        }\n        var cachedPage = this._pages.get(pageIndex);\n        if (cachedPage) {\n            return cachedPage;\n        }\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization;\n        var promise;\n        if (_linearization && _linearization.isValid && _linearization.pageFirst === pageIndex) {\n            promise = this._getLinearizationPage(pageIndex);\n        }\n        else {\n            promise = _catalog.getPageDictionary(pageIndex);\n        }\n        var page = new PdfPage(this._crossReference, pageIndex, promise.dictionary, promise.reference);\n        this._pages.set(pageIndex, page);\n        return page;\n    };\n    PdfDocument.prototype.addPage = function (arg1, arg2) {\n        var settings;\n        var pageIndex;\n        if (typeof arg2 !== 'undefined') {\n            settings = arg2;\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        else if (typeof arg1 === 'undefined') {\n            settings = new PdfPageSettings();\n            pageIndex = this.pageCount;\n        }\n        else if (arg1 instanceof PdfPageSettings) {\n            settings = arg1;\n            pageIndex = this.pageCount;\n        }\n        else {\n            settings = new PdfPageSettings();\n            pageIndex = arg1;\n            this._checkPageNumber(pageIndex);\n        }\n        var sectionDictionary = new _PdfDictionary(this._crossReference);\n        sectionDictionary.update('Type', _PdfName.get('Pages'));\n        sectionDictionary.update('Count', 1);\n        _updatePageSettings(sectionDictionary, settings);\n        var sectionReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n        sectionDictionary.objId = sectionReference.toString();\n        var pageDictionary = new _PdfDictionary(this._crossReference);\n        pageDictionary.update('Type', _PdfName.get('Page'));\n        var pageReference = this._crossReference._getNextReference();\n        this._crossReference._cacheMap.set(pageReference, pageDictionary);\n        pageDictionary.objId = pageReference.toString();\n        pageDictionary.update('Parent', sectionReference);\n        sectionDictionary.update('Kids', [pageReference]);\n        if (this.pageCount === 0) {\n            var parentReference = this._catalog._catalogDictionary._get('Pages');\n            if (parentReference && this._catalog._topPagesDictionary) {\n                var isUpdated = false;\n                if (this._catalog._topPagesDictionary.has('Kids')) {\n                    var kids = this._catalog._topPagesDictionary.get('Kids');\n                    if (kids) {\n                        kids.push(sectionReference);\n                        this._catalog._topPagesDictionary.update('Kids', kids);\n                        isUpdated = true;\n                    }\n                }\n                if (!isUpdated) {\n                    this._catalog._topPagesDictionary.update('Kids', [sectionReference]);\n                }\n                this._catalog._topPagesDictionary.update('Count', 1);\n                sectionDictionary.update('Parent', parentReference);\n            }\n            else {\n                this._catalog._catalogDictionary.update('Pages', sectionReference);\n            }\n            this._pages = new Map();\n            this._pageCount = 1;\n        }\n        else {\n            var lastPage_1 = this.getPage(pageIndex === this.pageCount ? (pageIndex - 1) : pageIndex);\n            if (lastPage_1 && lastPage_1._pageDictionary) {\n                var parentReference = lastPage_1._pageDictionary._get('Parent');\n                var parentDictionary = this._crossReference._fetch(parentReference);\n                if (parentDictionary && parentDictionary.has('Kids')) {\n                    var kids = parentDictionary.get('Kids');\n                    if (kids) {\n                        if (pageIndex === this.pageCount) {\n                            kids.push(sectionReference);\n                        }\n                        else {\n                            var newKids_1 = [];\n                            kids.forEach(function (entry) {\n                                if (entry === lastPage_1._ref) {\n                                    newKids_1.push(sectionReference);\n                                }\n                                newKids_1.push(entry);\n                            });\n                            kids = newKids_1;\n                            this._updatePageCache(pageIndex);\n                        }\n                        parentDictionary.update('Kids', kids);\n                        sectionDictionary.update('Parent', parentReference);\n                        _updatePageCount(parentDictionary, 1);\n                        this._pageCount = this.pageCount + 1;\n                    }\n                }\n            }\n        }\n        var result = new PdfPage(this._crossReference, pageIndex, pageDictionary, pageReference);\n        result._pageSettings = settings;\n        result._isNew = true;\n        this._pages.set(pageIndex, result);\n        return result;\n    };\n    PdfDocument.prototype.addSection = function (settings) {\n        var result;\n        if (!this._isLoaded) {\n            var pageSettings = settings ? settings : new PdfPageSettings();\n            result = new PdfSection(this, pageSettings);\n        }\n        return result;\n    };\n    PdfDocument.prototype.removePage = function (argument) {\n        var targetPage = (argument instanceof PdfPage) ? argument : this.getPage(argument);\n        this._removePage(targetPage);\n    };\n    PdfDocument.prototype._checkPageNumber = function (index) {\n        if (index < 0 || index > this.pageCount) {\n            throw new Error('Index out of range');\n        }\n    };\n    PdfDocument.prototype._updatePageCache = function (index, isIncrement) {\n        if (isIncrement === void 0) { isIncrement = true; }\n        var updatedData = new Map();\n        for (var i = this.pageCount - 1; i >= 0; i--) {\n            var page = this.getPage(i);\n            if (isIncrement) {\n                if (i >= index) {\n                    updatedData.set(i + 1, page);\n                    page._pageIndex = i + 1;\n                }\n                else {\n                    updatedData.set(i, page);\n                }\n            }\n            else {\n                if (i > index) {\n                    updatedData.set(i - 1, page);\n                    page._pageIndex = i - 1;\n                }\n                else if (i !== index) {\n                    updatedData.set(i, page);\n                }\n            }\n        }\n        this._pages = updatedData;\n        if (!isIncrement) {\n            this._pageCount = this._pages.size;\n        }\n    };\n    PdfDocument.prototype._removePage = function (pageToRemove) {\n        var bookMarkMap = this._parseBookmarkDestination();\n        if (bookMarkMap && bookMarkMap.has(pageToRemove)) {\n            var bookmarks = bookMarkMap.get(pageToRemove);\n            if (bookmarks) {\n                for (var i = 0; i < bookmarks.length; i++) {\n                    var bookmark = bookmarks[Number.parseInt(i.toString(), 10)];\n                    if (bookmark) {\n                        var bookmarkDictionary = bookmark._dictionary;\n                        if (bookmarkDictionary) {\n                            if (bookmarkDictionary.has('A')) {\n                                bookmarkDictionary.update('A', null);\n                            }\n                            bookmarkDictionary.update('Dest', null);\n                        }\n                    }\n                }\n            }\n        }\n        this._removePageTemplates(pageToRemove);\n        for (var i = this.form.count - 1; i >= 0; --i) {\n            var field = this.form.fieldAt(i);\n            if (field && field.page === pageToRemove) {\n                this.form.removeFieldAt(i);\n            }\n        }\n        this._updatePageCache(pageToRemove._pageIndex, false);\n        this._removeParent(pageToRemove._ref, pageToRemove._pageDictionary);\n        if (this._crossReference._cacheMap.has(pageToRemove._ref)) {\n            pageToRemove._pageDictionary._updated = false;\n        }\n        if (this.pageCount === 0) {\n            this._catalog._topPagesDictionary.update('Kids', []);\n        }\n    };\n    PdfDocument.prototype._removeParent = function (referenceToRemove, dictionary) {\n        if (dictionary.has('Parent')) {\n            var parentReference = dictionary._get('Parent');\n            var parentDictionary = this._crossReference._fetch(parentReference);\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                if (_isNullOrUndefined(kids) && kids.length === 1 && parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                    this._removeParent(parentReference, parentDictionary);\n                }\n                else {\n                    kids = kids.filter(function (item) { return item !== referenceToRemove; });\n                    parentDictionary.update('Kids', kids);\n                    _updatePageCount(parentDictionary, -1);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._parseBookmarkDestination = function () {\n        var current = this.bookmarks;\n        if (typeof this._bookmarkHashTable === 'undefined' && current) {\n            this._bookmarkHashTable = new Map();\n            var stack = [];\n            var nodeInformation = { index: 0, kids: current._bookMarkList };\n            do {\n                for (; nodeInformation.index < nodeInformation.kids.length;) {\n                    current = nodeInformation.kids[nodeInformation.index];\n                    var namedDestination = current.namedDestination;\n                    if (namedDestination) {\n                        if (namedDestination.destination) {\n                            var page = namedDestination.destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    else {\n                        var destination = current.destination;\n                        if (destination) {\n                            var page = destination.page;\n                            var list = this._bookmarkHashTable.get(page);\n                            if (!list) {\n                                list = [];\n                            }\n                            list.push(current);\n                            this._bookmarkHashTable.set(page, list);\n                        }\n                    }\n                    nodeInformation.index += 1;\n                    if (current.count > 0) {\n                        stack.push(nodeInformation);\n                        nodeInformation = { index: 0, kids: current._bookMarkList };\n                        continue;\n                    }\n                }\n                if (stack.length > 0) {\n                    nodeInformation = stack.pop();\n                    while (nodeInformation.index === nodeInformation.kids.length && stack.length > 0) {\n                        nodeInformation = stack.pop();\n                    }\n                }\n            } while (nodeInformation.index < nodeInformation.kids.length);\n        }\n        return this._bookmarkHashTable;\n    };\n    PdfDocument.prototype._removePageTemplates = function (page) {\n        var dictionary;\n        if (this._catalog._catalogDictionary.has('Names')) {\n            dictionary = this._catalog._catalogDictionary.get('Names');\n            if (dictionary) {\n                this._removeInternalTemplates(dictionary, 'Pages', page);\n                this._removeInternalTemplates(dictionary, 'Templates', page);\n            }\n        }\n    };\n    PdfDocument.prototype._removeInternalTemplates = function (dictionary, key, page) {\n        if (dictionary.has(key)) {\n            var namedObject = dictionary.get(key);\n            if (namedObject && namedObject.has('Names')) {\n                var nameCollection = namedObject.getArray('Names');\n                if (nameCollection && nameCollection.length > 0) {\n                    var namedPageCollection = this._getUpdatedPageTemplates(nameCollection, page);\n                    var namedPageDictionary = new _PdfDictionary(this._crossReference);\n                    namedPageDictionary.update('Names', namedPageCollection);\n                    var reference = this._crossReference._getNextReference();\n                    this._crossReference._cacheMap.set(reference, namedPageDictionary);\n                    namedPageDictionary.objId = reference.toString();\n                    dictionary.update(key, reference);\n                }\n            }\n        }\n    };\n    PdfDocument.prototype._getUpdatedPageTemplates = function (namedPages, page) {\n        if (namedPages.length > 0) {\n            for (var i = 1; i <= namedPages.length; i = i + 2) {\n                var pageDictionary = namedPages[Number.parseInt(i.toString(), 10)];\n                if (pageDictionary && page._pageDictionary === pageDictionary) {\n                    namedPages.pop();\n                    namedPages.pop();\n                    return namedPages;\n                }\n            }\n        }\n        return namedPages;\n    };\n    /**\n     * Reorders the pages in the PDF document.\n     *\n     * @param {number[]} orderArray The page sequence to arrange the pages.\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Reorders the pages in the PDF document\n     * document.reorderPages([3, 2, 1]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.reorderPages = function (orderArray) {\n        var _this = this;\n        orderArray.forEach(function (pageNumber) {\n            _this._checkPageNumber(pageNumber);\n        });\n        var sortedArray = this._sortedArray(orderArray);\n        var ascendingOrder = orderArray.slice().sort(function (a, b) { return a - b; });\n        var inputArray = Array.from({ length: this.pageCount }, function (_, i) { return i; });\n        var pagesToRemove = inputArray.filter(function (element) { return sortedArray.indexOf(element) === -1; });\n        for (var i = pagesToRemove.length - 1; i >= 0; i--) {\n            this.removePage(pagesToRemove[Number.parseInt(i.toString(), 10)]);\n        }\n        var newkids = [];\n        var newPages = new Map();\n        var parentReference = this._catalog._catalogDictionary._get('Pages');\n        var _loop_1 = function (i) {\n            var indexPage = this_1.getPage(ascendingOrder.indexOf(sortedArray[Number.parseInt(i.toString(), 10)]));\n            indexPage._pageIndex = i;\n            newPages.set(i, indexPage);\n            var sectionDictionary = new _PdfDictionary(this_1._crossReference);\n            sectionDictionary.update('Type', _PdfName.get('Pages'));\n            sectionDictionary.update('Count', 1);\n            sectionDictionary.update('Parent', parentReference);\n            var sectionReference = this_1._crossReference._getNextReference();\n            sectionDictionary.objId = sectionReference.toString();\n            sectionDictionary.update('Kids', [indexPage._ref]);\n            newkids.push(sectionReference);\n            var parentDictionary = indexPage._pageDictionary.get('Parent');\n            while (parentDictionary && parentDictionary.get('Type').name === 'Pages') {\n                parentDictionary.forEach(function (key, value) {\n                    switch (key) {\n                        case 'Parent':\n                        case 'Kids':\n                        case 'Type':\n                        case 'Count':\n                            break;\n                        case 'Resources':\n                            _this._cloneResources(parentDictionary.get('Resources'), sectionDictionary);\n                            break;\n                        default:\n                            if (!sectionDictionary.has(key)) {\n                                sectionDictionary.update(key, value);\n                            }\n                            break;\n                    }\n                });\n                if (parentDictionary.has('Parent')) {\n                    parentDictionary = parentDictionary.get('Parent');\n                }\n                else {\n                    break;\n                }\n            }\n            this_1._crossReference._cacheMap.set(sectionReference, sectionDictionary);\n            var pageSection = this_1._crossReference._fetch(indexPage._ref);\n            pageSection.update('Parent', sectionReference);\n        };\n        var this_1 = this;\n        for (var i = 0; i < sortedArray.length; i++) {\n            _loop_1(i);\n        }\n        this._pages = newPages;\n        if (this._catalog) {\n            var parentDictionary = this._catalog._topPagesDictionary;\n            if (parentDictionary && parentDictionary.has('Kids')) {\n                var kids = parentDictionary.get('Kids');\n                kids = newkids;\n                parentDictionary.update('Kids', kids);\n            }\n        }\n    };\n    PdfDocument.prototype._sortedArray = function (order) {\n        var sortedArray = [];\n        order.forEach(function (num) {\n            if (sortedArray.indexOf(num) === -1) {\n                sortedArray.push(num);\n            }\n        });\n        return sortedArray;\n    };\n    PdfDocument.prototype._cloneResources = function (source, target) {\n        var _this = this;\n        if (!target.has('Resources')) {\n            target.update('Resources', source);\n        }\n        else {\n            var resourceDictionary_1 = target.get('Resources');\n            source.forEach(function (key, value) {\n                if (resourceDictionary_1.has(key)) {\n                    _this._cloneInnerResources(key, value, resourceDictionary_1);\n                }\n                else {\n                    resourceDictionary_1.update(key, value);\n                }\n            });\n        }\n    };\n    PdfDocument.prototype._cloneInnerResources = function (key, value, resourceDictionary) {\n        if (value instanceof _PdfDictionary) {\n            var oldObject_1 = resourceDictionary.get(key);\n            if (oldObject_1) {\n                var hasNew_1 = false;\n                oldObject_1.forEach(function (innerKey, innerValue) {\n                    if (!oldObject_1.has(innerKey)) {\n                        oldObject_1.update(innerKey, innerValue);\n                        hasNew_1 = true;\n                    }\n                });\n                if (hasNew_1) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n        else if (Array.isArray(value)) {\n            var oldArray_1 = resourceDictionary.get(key); // eslint-disable-line\n            if (oldArray_1) {\n                var hasNew_2 = false;\n                value.forEach(function (entry) {\n                    if (oldArray_1.indexOf(entry) === -1) {\n                        oldArray_1.push(entry);\n                        hasNew_2 = true;\n                    }\n                });\n                if (hasNew_2) {\n                    resourceDictionary._updated = true;\n                }\n            }\n            else {\n                resourceDictionary.update(key, value);\n            }\n        }\n    };\n    PdfDocument.prototype.save = function (filename) {\n        if (!this._isLoaded && this.pageCount === 0) {\n            this.addSection().addPage();\n        }\n        this._doPostProcess(this._flatten);\n        if (typeof filename === 'string') {\n            Save.save(filename, new Blob([this._crossReference._save()], { type: 'application/pdf' }));\n        }\n        else {\n            return this._crossReference._save();\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as Blob.\n     *\n     * @returns {Promise<{ blobData: Blob }>} Saved PDF data as `Blob`.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Save the document\n     * let data: Promise<{ blobData: Blob }> = document.saveAsBlob();\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.saveAsBlob = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var obj = { blobData: new Blob([_this._crossReference._save()], { type: 'application/pdf' }) };\n            resolve(obj);\n        });\n    };\n    PdfDocument.prototype.exportAnnotations = function (arg1, arg2) {\n        this._isExport = true;\n        this._doPostProcessOnAnnotations();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfAnnotationExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfAnnotationExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument();\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument();\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument();\n            }\n            else {\n                return undefined;\n            }\n            helper.exportAppearance = settings.exportAppearance;\n        }\n        else {\n            helper = new _XfdfDocument();\n        }\n        var result = helper._exportAnnotations(this);\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([result], { type: 'text/plain' }));\n        }\n        else {\n            return result;\n        }\n    };\n    PdfDocument.prototype.exportFormData = function (arg1, arg2) {\n        this._doPostProcessOnFormFields();\n        var helper;\n        var settings;\n        if (arg1 && arg1 instanceof PdfFormFieldExportSettings) {\n            settings = arg1;\n        }\n        else if (arg2 && arg2 instanceof PdfFormFieldExportSettings) {\n            settings = arg2;\n        }\n        if (settings) {\n            if (settings.dataFormat === DataFormat.xfdf) {\n                helper = new _XfdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.json) {\n                helper = new _JsonDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.fdf) {\n                helper = new _FdfDocument(settings.exportName);\n            }\n            else if (settings.dataFormat === DataFormat.xml) {\n                helper = new _XmlDocument(settings.exportName);\n            }\n            else {\n                return undefined;\n            }\n            helper._asPerSpecification = settings.asPerSpecification;\n        }\n        else {\n            helper = new _XfdfDocument();\n            helper._asPerSpecification = false;\n        }\n        if (arg1 && typeof arg1 === 'string') {\n            Save.save(arg1, new Blob([helper._exportFormFields(this)], { type: 'text/plain' }));\n        }\n        else {\n            return helper._exportFormFields(this);\n        }\n    };\n    PdfDocument.prototype.importAnnotations = function (data, dataFormat) {\n        if (dataFormat === DataFormat.xfdf) {\n            var xfdf = new _XfdfDocument();\n            xfdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.json) {\n            var json = new _JsonDocument();\n            json._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n        else if (dataFormat === DataFormat.fdf) {\n            var fdf = new _FdfDocument();\n            fdf._importAnnotations(this, (typeof data === 'string') ? _decode(data) : data);\n        }\n    };\n    PdfDocument.prototype.importFormData = function (data, dataFormat) {\n        if (this.form.count > 0) {\n            if (dataFormat === DataFormat.xfdf) {\n                var xfdf = new _XfdfDocument();\n                xfdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.json) {\n                var json = new _JsonDocument();\n                json._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.fdf) {\n                var fdf = new _FdfDocument();\n                fdf._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n            else if (dataFormat === DataFormat.xml) {\n                var xml = new _XmlDocument();\n                xml._importFormData(this, (typeof data === 'string') ? _decode(data) : data);\n            }\n        }\n    };\n    /**\n     * Disposes the current instance of `PdfDocument` class.\n     *\n     * @returns {void} Nothing.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        if (this._crossReference) {\n            this._crossReference._destroy();\n            this._crossReference = undefined;\n        }\n        if (this._catalog) {\n            this._catalog._destroy();\n            this._catalog = undefined;\n        }\n        this._endObjSignature = undefined;\n        this._headerSignature = undefined;\n        if (this._pages && this._pages.size > 0) {\n            this._pages.forEach(function (value) {\n                value._destroy();\n            });\n        }\n        if (this._pages) {\n            this._pages.clear();\n            this._pages = undefined;\n        }\n        this._startXrefSignature = undefined;\n        this._stream = undefined;\n        this._form = undefined;\n        _clearPrimitiveCaches();\n        if (this._mergeHelperCache) {\n            if (this._mergeHelperCache.size > 0) {\n                this._mergeHelperCache.forEach(function (value) {\n                    if (value) {\n                        value._objectDispose();\n                    }\n                });\n            }\n            this._mergeHelperCache.clear();\n            this._mergeHelperCache = undefined;\n        }\n    };\n    Object.defineProperty(PdfDocument.prototype, \"_destinationCollection\", {\n        get: function () {\n            if (this._namedDestinationCollection === null || typeof this._namedDestinationCollection === 'undefined') {\n                if (this._catalog._catalogDictionary.has('Names')) {\n                    var names = this._catalog._catalogDictionary.get('Names');\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection(names, this._crossReference);\n                }\n                else {\n                    this._namedDestinationCollection = new _PdfNamedDestinationCollection();\n                }\n            }\n            return this._namedDestinationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype._getLinearizationPage = function (pageIndex) {\n        var _a = this, _catalog = _a._catalog, _linearization = _a._linearization, _crossReference = _a._crossReference;\n        var ref = _PdfReference.get(_linearization.objectNumberFirst, 0);\n        try {\n            var obj = _crossReference._fetch(ref); // eslint-disable-line\n            if (obj instanceof _PdfDictionary) {\n                var type = obj.get('Type');\n                if (_isName(type, 'Page') || (!obj.has('Type') && !obj.has('Kids'))) {\n                    if (!_catalog.pageKidsCountCache.has(ref)) {\n                        _catalog.pageKidsCountCache.put(ref, 1);\n                    }\n                    if (!_catalog.pageIndexCache.has(ref)) {\n                        _catalog.pageIndexCache.put(ref, 0);\n                    }\n                    return { dictionary: obj, reference: ref };\n                }\n            }\n            throw new FormatError('The Linearization dictionary does not point to a valid Page dictionary.');\n        }\n        catch (reason) {\n            return _catalog.getPageDictionary(pageIndex);\n        }\n    };\n    PdfDocument.prototype._checkHeader = function () {\n        var stream = this._stream;\n        stream.reset();\n        if (!this._find(stream, this._headerSignature)) {\n            return;\n        }\n        stream.moveStart();\n        var version = '';\n        var ch = stream.getByte();\n        while (ch > 0x20) {\n            if (version.length >= 12) {\n                break;\n            }\n            version += String.fromCharCode(ch);\n            ch = stream.getByte();\n        }\n        if (!this._version) {\n            this._version = version.substring(5);\n        }\n    };\n    PdfDocument.prototype._parse = function (recoveryMode) {\n        this._crossReference._parse(recoveryMode);\n        this._catalog = new _PdfCatalog(this._crossReference);\n        if (this._catalog.version) {\n            this._version = this._catalog.version;\n        }\n    };\n    PdfDocument.prototype._find = function (stream, signature, limit, backwards) {\n        if (limit === void 0) { limit = 1024; }\n        if (backwards === void 0) { backwards = false; }\n        var signatureLength = signature.length;\n        var scanBytes = stream.peekBytes(limit);\n        var scanLength = scanBytes.length - signatureLength;\n        if (scanLength <= 0) {\n            return false;\n        }\n        if (backwards) {\n            var signatureEnd = signatureLength - 1;\n            var position = scanBytes.length - 1;\n            while (position >= signatureEnd) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position - j] === signature[signatureEnd - j]) {\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position - signatureEnd;\n                    return true;\n                }\n                position--;\n            }\n        }\n        else {\n            var position = 0;\n            while (position <= scanLength) {\n                var j = 0;\n                while (j < signatureLength && scanBytes[position + j] === signature[j]) { // eslint-disable-line\n                    j++;\n                }\n                if (j >= signatureLength) {\n                    stream.position += position;\n                    return true;\n                }\n                position++;\n            }\n        }\n        return false;\n    };\n    PdfDocument.prototype._doPostProcess = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        this._doPostProcessOnFormFields(isFlatten);\n        this._doPostProcessOnAnnotations(isFlatten);\n    };\n    PdfDocument.prototype._doPostProcessOnFormFields = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        if (this._catalog._catalogDictionary.has('AcroForm')) {\n            this.form._doPostProcess(isFlatten);\n            if (isFlatten) {\n                var formObject = this._catalog._catalogDictionary.getRaw('AcroForm');\n                var dictionary = new _PdfDictionary(this._crossReference);\n                dictionary._updated = true;\n                if (formObject instanceof _PdfReference) {\n                    this._crossReference._cacheMap.set(formObject, dictionary);\n                }\n                else {\n                    this.form._dictionary = dictionary;\n                    this._crossReference._allowCatalog = true;\n                }\n                this.form._clear();\n            }\n            if (this.form._isDefaultAppearance) {\n                this.form._dictionary.update('NeedAppearances', this.form._isDefaultAppearance);\n            }\n            else if (!this.form._isDefaultAppearance && this.form._dictionary.has('NeedAppearances') && this.form._isNeedAppearances) {\n                this.form._dictionary.update('NeedAppearances', false);\n            }\n            else if (!this.form._isDefaultAppearance && this.form._dictionary.has('NeedAppearances')) {\n                this.form._dictionary.update('NeedAppearances', this.form.needAppearances);\n            }\n        }\n    };\n    PdfDocument.prototype._doPostProcessOnAnnotations = function (isFlatten) {\n        if (isFlatten === void 0) { isFlatten = false; }\n        for (var i = 0; i < this.pageCount; i++) {\n            var page = this.getPage(i);\n            page.annotations._isExport = this._isExport;\n            page.annotations._doPostProcess(isFlatten);\n            if (isFlatten) {\n                if (page._pageDictionary.has('Annots')) {\n                    delete page._pageDictionary._map.Annots;\n                    page._pageDictionary._updated = true;\n                }\n                page.annotations._clear();\n            }\n        }\n    };\n    PdfDocument.prototype._addWatermarkText = function () {\n        if (this.pageCount > 0) {\n            for (var index = 0; index < this._pageCount; index++) {\n                var page = this.getPage(index);\n                if (page) {\n                    try {\n                        var graphics = page.graphics;\n                        graphics.save();\n                        graphics.setTransparency(0.20);\n                        graphics.drawRectangle(0, 0, page.size[0], 33.75, new PdfBrush([255, 255, 255]));\n                        graphics.restore();\n                        graphics.save();\n                        graphics.setTransparency(0.50);\n                        var font = new PdfStandardFont(PdfFontFamily.helvetica, 12, PdfFontStyle.regular);\n                        var format = new PdfStringFormat(PdfTextAlignment.center, PdfVerticalAlignment.middle);\n                        graphics.drawString('Created with a trial version of Syncfusion Essential PDF', font, [0, 0, page.size[0], 33.75], null, new PdfBrush([0, 0, 0]), format);\n                        graphics.restore();\n                    }\n                    catch (e) { } // eslint-disable-line\n                }\n            }\n        }\n    };\n    PdfDocument.prototype.importPageRange = function (sourceDocument, startIndex, endIndex, options) {\n        if (startIndex > endIndex || startIndex >= sourceDocument.pageCount) {\n            throw new Error('The start index is greater then the end index, which might indicate the error in the program.');\n        }\n        this._importPages(sourceDocument, startIndex, endIndex, options);\n    };\n    PdfDocument.prototype._importPages = function (sourceDocument, startIndex, endIndex, options) {\n        var sourceOCProperties;\n        var correspondancePagecount = 0;\n        var ocProperties;\n        if (typeof options !== 'undefined' && typeof options.targetIndex === 'number') {\n            if (options.targetIndex > this.pageCount) {\n                throw new Error('The target index is out of range.');\n            }\n            this._targetIndex = options.targetIndex;\n        }\n        var pageReference = new Map();\n        if (!this._isDuplicatePage) {\n            for (var index = 0; index < sourceDocument.pageCount; index++) {\n                var sourcepage = sourceDocument.getPage(index);\n                pageReference.set(sourcepage._pageDictionary, null);\n            }\n        }\n        var helper;\n        if (!this._mergeHelperCache) {\n            this._mergeHelperCache = new Map();\n        }\n        if (!sourceDocument._uniqueID) {\n            sourceDocument._uniqueID = _getNewGuidString();\n        }\n        if (this._mergeHelperCache.has(sourceDocument._uniqueID)) {\n            helper = this._mergeHelperCache.get(sourceDocument._uniqueID);\n        }\n        else {\n            helper = new _PdfMergeHelper(this._crossReference, this, sourceDocument, pageReference, options);\n            this._mergeHelperCache.set(sourceDocument._uniqueID, helper);\n        }\n        var isLayersPresent = false;\n        if ((!this._isDuplicatePage && sourceDocument._catalog._catalogDictionary.has('OCProperties')) || (typeof options !== 'undefined' && !options.optimizeResources)) {\n            isLayersPresent = true;\n            sourceOCProperties = sourceDocument._catalog._catalogDictionary.get('OCProperties');\n            ocProperties = new _PdfDictionary(this._crossReference);\n            helper._writeObject(sourceDocument, ocProperties, sourceOCProperties, sourceOCProperties, 'OCProperties', null, null);\n            ocProperties._updated = true;\n        }\n        for (var i = startIndex; i <= endIndex; i++) {\n            var page = sourceDocument.getPage(i);\n            sourceDocument.form._doPostProcess(sourceDocument.flatten, page);\n            if (page.annotations.count > 0) {\n                page.annotations._doPostProcess(sourceDocument.flatten);\n                if (sourceDocument.flatten) {\n                    if (page._pageDictionary.has('Annots')) {\n                        delete page._pageDictionary._map.Annots;\n                        page._pageDictionary._updated = true;\n                    }\n                    page.annotations._clear();\n                }\n            }\n            if (sourceDocument._isSplitDocument) {\n                helper._importPages(page, this._targetIndex, isLayersPresent, this._isDuplicatePage, options, sourceDocument._isSplitDocument);\n            }\n            else {\n                helper._importPages(page, this._targetIndex, isLayersPresent, this._isDuplicatePage, options);\n            }\n            correspondancePagecount++;\n            if (typeof this._targetIndex === 'number') {\n                ++this._targetIndex;\n            }\n        }\n        if (!this._isDuplicatePage) {\n            helper._fixDestinations(sourceDocument);\n        }\n        helper._exportBookmarks(sourceDocument, correspondancePagecount);\n        helper._mergeFormFieldsWithDocument();\n        if ((isLayersPresent && !this._isDuplicatePage) || (typeof options !== 'undefined' && !options.optimizeResources)) {\n            helper._importLayers(ocProperties, true);\n        }\n        helper._objectDispose();\n        this._isDuplicatePage = false;\n    };\n    PdfDocument.prototype.importPage = function (arg1, arg2, options) {\n        if (typeof arg1 === 'number') {\n            this._isDuplicatePage = true;\n            if (arg2 instanceof PdfPageImportOptions) {\n                this._importPages(this, arg1, arg1, arg2);\n            }\n            else {\n                this._importPages(this, arg1, arg1);\n            }\n        }\n        else if (arg1 instanceof PdfPage && arg2 instanceof PdfDocument) {\n            var index = arg1._pageIndex;\n            this.importPageRange(arg2, index, index, options);\n        }\n    };\n    /**\n     * Splitting a PDF file into individual pages.\n     *\n     * @returns {void} Nothing\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document into individual pages\n     * document.split();\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.split = function () {\n        this.splitByFixedNumber(1);\n    };\n    /**\n     * Splits the PDF document into parts, each containing a maximum number of pages specified.\n     *\n     * @param {number} fixedNumber specifies the maximum number of pages in each split PDF. The default value is 1.\n     * @returns {void} Nothing\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by fixed number of pages\n     * document.splitByFixedNumber(1);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.splitByFixedNumber = function (fixedNumber) {\n        var pageCount = this.pageCount;\n        if (this.splitEvent && pageCount >= fixedNumber && fixedNumber > 0) {\n            var splitIndex = 0;\n            for (var tempValue = 0; tempValue < pageCount; tempValue += fixedNumber) {\n                var endIndex = Math.min(tempValue + fixedNumber - 1, pageCount - 1);\n                var pdfData = this._importDocumentPages(tempValue, endIndex);\n                this._invokeSplitEvent(splitIndex, pdfData);\n                splitIndex++;\n            }\n        }\n        else {\n            throw new Error('Invalid split number. Split number should be greater than zero and less than or equal to page count.');\n        }\n    };\n    /**\n     * Splits the PDF document into multiple parts based on the specified page ranges.\n     *\n     * @param {Array<number[]>} ranges The two dimensional number array specified for start and end page indexes to split PDF documents.\n     * @returns {void} Nothing\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by page ranges specified\n     * document.splitByPageRanges([[0, 4], [5, 9]]);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    PdfDocument.prototype.splitByPageRanges = function (ranges) {\n        var pageCount = this.pageCount;\n        if (this.splitEvent) {\n            var splitIndex = 0;\n            for (var i = 0; i < ranges.length; i++) {\n                var range = ranges[Number.parseInt(i.toString(), 10)];\n                if (Array.isArray(range) && range.length < 2) {\n                    throw new Error('Invalid page range. Start and end page indexes should be specified.');\n                }\n                var start = range[0];\n                var end = range[1];\n                if (start < 0 || end < 0 || start >= pageCount || end >= pageCount || start > end) {\n                    throw new Error('Invalid page range: start (${start}) and end (${end}).');\n                }\n                var pdfData = this._importDocumentPages(start, end);\n                this._invokeSplitEvent(splitIndex, pdfData);\n                splitIndex++;\n            }\n        }\n    };\n    PdfDocument.prototype._importDocumentPages = function (startIndex, endIndex) {\n        this._isSplitDocument = true;\n        var document = new PdfDocument();\n        for (var i = startIndex; i <= endIndex; i++) {\n            var page = this.getPage(i);\n            document.importPage(page, this);\n        }\n        var result = document.save();\n        document.destroy();\n        return result;\n    };\n    PdfDocument.prototype._invokeSplitEvent = function (splitIndex, pdfData) {\n        var args = new PdfDocumentSplitEventArgs(splitIndex, pdfData);\n        this.splitEvent(this, args);\n    };\n    return PdfDocument;\n}());\nexport { PdfDocument };\n/**\n * Represents annotation export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Sets export data format as JSON type to annotation export settings\n * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n * // Set the data format defined in annotation export settings\n * settings.dataFormat = DataFormat.json;\n * // Export annotations to JSON format\n * let json: Uint8Array = document.exportAnnotations(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfAnnotationExportSettings = /** @class */ (function () {\n    function PdfAnnotationExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportAppearance = false;\n    }\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in annotation export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Get the data format defined in annotation export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in annotation export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets export data format as JSON type to annotation export settings\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the data format defined in annotation export settings\n         * settings.dataFormat = DataFormat.json;\n         * // Export annotations to JSON format\n         * let json: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotationExportSettings.prototype, \"exportAppearance\", {\n        /**\n         * Gets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Get the boolean value indicating whether the appearance of a particular object can be exported or not\n         * let appearance: boolean = settings.exportAppearance;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportAppearance;\n        },\n        /**\n         * Sets the boolean value indicating whether the appearance of a particular object can be exported or not.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Sets the annotation export settings with enabled export appearance.\n         * let settings: PdfAnnotationExportSettings = new PdfAnnotationExportSettings();\n         * // Set the boolean value indicating whether the appearance of a particular object can be exported or not\n         * settings.exportAppearance = true;\n         * // Export annotations to XFDF format\n         * let xfdf: Uint8Array = document.exportAnnotations(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._exportAppearance = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationExportSettings;\n}());\nexport { PdfAnnotationExportSettings };\n/**\n * Represents form fields export settings.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Sets the form field data export settings with output data format.\n * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n * // Set the data format defined in form field export settings.\n * settings.dataFormat = DataFormat.json;\n * // Export form field to JSON format\n * let json: Uint8Array = document.exportFormData(settings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfFormFieldExportSettings = /** @class */ (function () {\n    function PdfFormFieldExportSettings() {\n        this._format = DataFormat.xfdf;\n        this._exportName = '';\n        this._asPerSpecification = true;\n    }\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"dataFormat\", {\n        /**\n         * Gets the data format defined in form field export settings.\n         *\n         * @returns {DataFormat} - Returns the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the data format defined in form field export settings\n         * let dataFormat: DataFormat = settings.dataFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._format;\n        },\n        /**\n         * Sets the data format defined in form field export settings.\n         *\n         * @param {DataFormat} format - Specifies the data format.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with output data format.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the data format defined in form field export settings.\n         * settings.dataFormat = DataFormat.json;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (format) {\n            this._format = format;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"exportName\", {\n        /**\n         * Gets the export name defined in form field export settings.\n         *\n         * @returns {string} - Returns the string value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the export name defined in form field export settings\n         * let name: boolean = settings.exportName;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._exportName;\n        },\n        /**\n         * Sets the export name defined in form field export settings.\n         *\n         * @param {string} name - Specifies the export name of the form.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the form field data export settings with export name.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the export name defined in form field export settings.\n         * settings.exportName = ‘JobApplication’.\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (name) {\n            this._exportName = name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFormFieldExportSettings.prototype, \"asPerSpecification\", {\n        /**\n         * Gets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @returns {boolean} - Returns the boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Get the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let asPerSpecification: boolean = settings.asPerSpecification;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._asPerSpecification;\n        },\n        /**\n         * Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         *\n         * @param {boolean} value - The boolean value.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Sets the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * let settings: PdfFormFieldExportSettings = new PdfFormFieldExportSettings();\n         * // Set the boolean value indicating whether the data in a form field can be exported based on a certain specification.\n         * settings.asPerSpecification = true;\n         * // Export form field to JSON format\n         * let json: Uint8Array = document.exportFormData(settings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._asPerSpecification = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFormFieldExportSettings;\n}());\nexport { PdfFormFieldExportSettings };\n/**\n * The class provides various settings related to PDF pages.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPageSettings = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfPageSettings` class\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Create a new PDF page settings instance\n     * let pageSettings: PdfPageSettings = new PdfPageSettings();\n     * // Sets the margins\n     * pageSettings.margins = new PdfMargins(40);\n     * // Sets the page size\n     * pageSettings.size = [595, 842];\n     * // Sets the page orientation\n     * pageSettings.orientation = PdfPageOrientation.landscape;\n     * // Add a new PDF page with page settings\n     * page = document.addPage(pageSettings);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfPageSettings() {\n        this._size = [595, 842];\n        this._isOrientation = false;\n        this._orientation = PdfPageOrientation.portrait;\n        this._size = [595, 842];\n        this._margins = new PdfMargins();\n        this._rotation = PdfRotationAngle.angle0;\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets the orientation of the page.\n         *\n         * @returns {PdfPageOrientation} The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [842, 595];\n         * // Gets the page orientation\n         * let orientation: PdfPageOrientation = pageSettings.orientation;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._orientation;\n        },\n        /**\n         * Sets the orientation of the page.\n         *\n         * @param {PdfPageOrientation} value The orientation.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._isOrientation = true;\n            if (this._orientation !== value) {\n                this._orientation = value;\n                this._updateSize(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        /**\n         * Gets the size of the page.\n         *\n         * @returns {number[]} The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Gets the width and height of the PDF page as number array\n         * let size: number[] = page.size;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._size;\n        },\n        /**\n         * Sets the width and height of the page.\n         *\n         * @param {number[]} value The width and height of the page as number array.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (this._isOrientation) {\n                this._updateSize(value);\n            }\n            else {\n                this._size = value;\n                this._updateOrientation();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets the margin value of the page.\n         *\n         * @returns {PdfMargins} PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the margins\n         * let margins: PdfMargins = pageSettings.margins;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._margins;\n        },\n        /**\n         * Sets the margin value of the page.\n         *\n         * @param {PdfMargins} value PDF margins\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * pageSettings.margins = new PdfMargins(40);\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._margins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotation\", {\n        /**\n         * Gets the rotation angle of the PDF page.\n         *\n         * @returns {PdfRotationAngle} PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the rotation angle\n         * let rotation: PdfRotationAngle = pageSettings.rotation;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._rotation;\n        },\n        /**\n         * Sets the rotation angle of the PDF page.\n         *\n         * @param {PdfRotationAngle} value PDF rotation angle\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the rotation angle\n         * pageSettings.rotation = PdfRotationAngle.angle90;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._rotation = value;\n            if (value >= 4) {\n                this._rotation = (value % 4);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPageSettings.prototype._updateSize = function (value) {\n        var pageOrientation;\n        var pageSize;\n        if (Array.isArray(value)) {\n            pageOrientation = this.orientation;\n            pageSize = value;\n        }\n        else {\n            pageOrientation = value;\n            pageSize = this._size;\n        }\n        if (pageOrientation === PdfPageOrientation.portrait) {\n            this._size = [Math.min(pageSize[0], pageSize[1]), Math.max(pageSize[0], pageSize[1])];\n        }\n        else {\n            this._size = [Math.max(pageSize[0], pageSize[1]), Math.min(pageSize[0], pageSize[1])];\n        }\n    };\n    PdfPageSettings.prototype._updateOrientation = function () {\n        this._orientation = (this._size[1] >= this._size[0]) ? PdfPageOrientation.portrait : PdfPageOrientation.landscape;\n    };\n    PdfPageSettings.prototype._getActualSize = function () {\n        var width = this._size[0] - (this._margins._left + this._margins._right);\n        var height = this._size[1] - (this._margins._top + this._margins._bottom);\n        return [width, height];\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n/**\n * A class representing PDF page margins.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Create a new PDF page settings instance\n * let pageSettings: PdfPageSettings = new PdfPageSettings();\n * // Sets the margins\n * pageSettings.margins = new PdfMargins(40);\n * // Sets the page size\n * pageSettings.size = [595, 842];\n * // Sets the page orientation\n * pageSettings.orientation = PdfPageOrientation.landscape;\n * // Add a new PDF page with page settings\n * page = document.addPage(pageSettings);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfMargins = /** @class */ (function () {\n    function PdfMargins(all) {\n        if (typeof all === 'undefined') {\n            this._left = this._right = this._top = this._bottom = 40;\n        }\n        else {\n            this._left = this._right = this._top = this._bottom = all;\n        }\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        /**\n         * Gets the left margin value of the page.\n         *\n         * @returns {number} Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the left margin\n         * let left: number = pageSettings.margins.left;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._left;\n        },\n        /**\n         * Sets the left margin value of the page.\n         *\n         * @param {number} value Left margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._left = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets the right margin value of the page.\n         *\n         * @returns {number} Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the right margin\n         * let right: number = pageSettings.margins.right;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._right;\n        },\n        /**\n         * Sets the right margin value of the page.\n         *\n         * @param {number} value - Right margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._right = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets the top margin value of the page.\n         *\n         * @returns {number} Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the top margin\n         * let top: number = pageSettings.margins.top;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._top;\n        },\n        /**\n         *Sets the top margin value of the page.\n         *\n         * @param {number} value Top margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._top = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Get the bottom margin value of the page.\n         *\n         * @returns {number} Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Gets the bottom margin\n         * let bottom: number = pageSettings.margins.bottom;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bottom;\n        },\n        /**\n         * Sets the bottom margin value of the page.\n         *\n         * @param {number} value Bottom margin.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Create a new PDF page settings instance\n         * let pageSettings: PdfPageSettings = new PdfPageSettings();\n         * // Sets the margins\n         * let margins: PdfMargins = new PdfMargins();\n         * margins.left = 40;\n         * margins.right = 40;\n         * margins.top = 20;\n         * margins.bottom = 20;\n         * pageSettings.margins = margins;\n         * // Sets the page size\n         * pageSettings.size = [595, 842];\n         * // Sets the page orientation\n         * pageSettings.orientation = PdfPageOrientation.landscape;\n         * // Add a new PDF page with page settings\n         * page = document.addPage(pageSettings);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._bottom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfMargins;\n}());\nexport { PdfMargins };\n/**\n * Public class to provide data for the document split event, including the split index and PDF data.\n *\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * document.splitEvent = documentSplitEvent;\n * // Split PDF document by fixed number of pages\n * document.splitByFixedNumber(1);\n * // Event to invoke while splitting PDF document data\n * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n * }\n * // Destroy the document\n * document.destroy();\n */\nvar PdfDocumentSplitEventArgs = /** @class */ (function () {\n    /*\n     * Initializes a new instance of the `PdfDocumentSplitEventArgs` class.\n     *\n     * @param {number} splitIndex The fixed number to split PDF document pages. The default value is 1.\n     * @param {Uint8Array} pdfData The byte array of the split PDF document data.\n     *\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * document.splitEvent = documentSplitEvent;\n     * // Split PDF document by fixed number of pages\n     * document.splitByFixedNumber(1);\n     * // Event to invoke while splitting PDF document data\n     * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n     *   Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n     * }\n     * // Destroy the document\n     * document.destroy();\n     */\n    function PdfDocumentSplitEventArgs(splitIndex, pdfData) {\n        this._index = splitIndex;\n        this._pdfData = pdfData;\n    }\n    Object.defineProperty(PdfDocumentSplitEventArgs.prototype, \"pdfData\", {\n        /*\n         * Gets the byte array of the PDF document data.\n         *\n         * @returns {Uint8Array} The byte array of the PDF document data.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * document.splitEvent = documentSplitEvent;\n         * // Split PDF document by fixed number of pages\n         * document.splitByFixedNumber(1);\n         * // Event to invoke while splitting PDF document data\n         * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n         *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n         * }\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._pdfData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentSplitEventArgs.prototype, \"index\", {\n        /*\n         * Gets the split index of the PDF document.\n         *\n         * @returns {Uint8Array} The index that defines the number of event calls during the PDF document split.\n         *\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * document.splitEvent = documentSplitEvent;\n         * // Split PDF document by fixed number of pages\n         * document.splitByFixedNumber(1);\n         * // Event to invoke while splitting PDF document data\n         * function documentSplitEvent(sender: PdfDocument, args: PdfDocumentSplitEventArgs): void {\n         *  Save.save(‘output_’ + args.splitIndex + ‘.pdf’, new Blob([args.pdfData], { type: 'application/pdf' }));\n         * }\n         * // Destroy the document\n         * document.destroy();\n         */\n        get: function () {\n            return this._index;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDocumentSplitEventArgs;\n}());\nexport { PdfDocumentSplitEventArgs };\n","var _PdfPaddings = /** @class */ (function () {\n    function _PdfPaddings(left, top, right, bottom) {\n        this._left = 0;\n        this._right = 0;\n        this._top = 0;\n        this._bottom = 0;\n        if (typeof left === 'undefined') {\n            this._left = 0.5;\n            this._right = 0.5;\n            this._top = 0.5;\n            this._bottom = 0.5;\n        }\n        else {\n            this._left = left;\n            this._right = right;\n            this._top = top;\n            this._bottom = bottom;\n        }\n    }\n    return _PdfPaddings;\n}());\nexport { _PdfPaddings };\n","import { PdfLayoutType, PdfLayoutBreakType } from '../enumerator';\n/**\n * Represent the layout format class for pagination\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Create an instance for PDF layout format\n * let layout: PdfLayoutFormat = new PdfLayoutFormat();\n * // Set the layout format\n * layout.break = PdfLayoutBreakType.fitPage;\n * layout.layout = pdfLayoutType.paginate;\n * // Draw the items using specified bounds and layout format\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfLayoutFormat = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayoutFormat` class.\n     *\n     * @param {PdfLayoutFormat}  format Format for pagination.\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page of document\n     * let page: PdfPage = document.getPage(0);\n     * // Add the items to list item collection by passing the array of products\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n     * // Create an instance of ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Create an instance for layout format for drawing\n     * let layout: PdfLayoutFormat = new PdfLayoutFormat();\n     * // Set the layout format\n     * layout.break = PdfLayoutBreakType.fitPage;\n     * layout.layout = pdfLayoutType.paginate;\n     * // Draw the items using specified bounds and layout format\n     * list.draw(page, 0, 20, layout);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ````\n     */\n    function PdfLayoutFormat(format) {\n        this._boundSet = false;\n        this._paginateBounds = [];\n        if (format) {\n            this.break = format.break;\n            this.layout = format.layout;\n            this.paginateBounds = format.paginateBounds;\n            this._boundSet = format._boundSet;\n        }\n        else {\n            this.layout = PdfLayoutType.paginate;\n            this.break = PdfLayoutBreakType.fitPage;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        /**\n         * Gets the layout type of the page.\n         *\n         * @returns {PdfLayoutType} The layout type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create a layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page with specified bounds and layout format\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Retrieve the layout type applied to the page layout format\n         * let layoutType: PdfLayoutType = pageLayout.layout;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._layout;\n        },\n        /**\n         * Sets the layout type of the page.\n         *\n         * @param {PdfLayoutType} value the  layout type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Initialize an array of string items\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create a layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the layout type to paginate for the page layout format\n         * pageLayout.layout = PdfLayoutType.paginate;\n         * // Draw the items on the page with specified bounds and layout format\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._layout = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets the layout break type of the page.\n         *\n         * @returns {PdfLayoutBreakType} The layout break type of the page.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define an array of products\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get the layout break type of the list\n         * let layoutType: PdfLayoutBreakType = pageLayout.break;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._break;\n        },\n        /**\n         * Sets the layout break type for the page.\n         *\n         * @param {PdfLayoutBreakType} value The layout break type to set for the page.\n         * ```typescript\n         * //Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the layout break type for the page\n         * pageLayout.break = PdfLayoutBreakType.fitPage;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._break = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets the paginate bounds of the page.\n         *\n         * @returns {number[]} Array containing the paginate bounds.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create an ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get the paginate bounds\n         * let layoutType: paginateBounds = pageLayout.paginateBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._paginateBounds;\n        },\n        /**\n         * Sets the paginate bounds for the page.\n         *\n         * @param {number[]} value Array representing the paginate bounds to set for the page.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for page layout settings\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Set the paginate bounds for the page\n         * pageLayout.paginateBounds = [0, 0, 500, 700];\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._paginateBounds = value;\n            this._boundSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets whether to use paginate bounds for pagination.\n         *\n         * @returns {boolean} Whether pagination bounds are used.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Create an layout format for drawing\n         * let pageLayout: PdfLayoutFormat = new PdfLayoutFormat();\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700, pageLayout);\n         * // Get whether paginate bounds are used\n         * let usePaginate:  boolean = pageLayout.usePaginateBounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._boundSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\n/**\n * Represents a class for layout result in PDF generation.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Add the items to list item collection by passing the array of products\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n * // Create a new ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list and access the layout result\n * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfLayoutResult = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfLayoutResult` class.\n     * Remarks: Internal constructor used to create a new instance of a PDF layout result.\n     *\n     * @param {PdfPage} page The page where the circle annotation is to be placed.\n     * @param {number[]} bounds The bounds within which the list has been drawn.\n     * ```typescript\n     * // Load an existing document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Add the items to list item collection by passing the array of products\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n     * // Create a new ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Draw the list and access the layout result\n     * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfLayoutResult(page, bounds) {\n        this._page = page;\n        this._bounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"Page\", {\n        /**\n         * Gets the page associated with the layout result.\n         *\n         * @returns {PdfPage} value of the layout result.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list and access the layout result\n         * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n         * // Access the page from the layout result\n         * let resultPage: PdfPage = result.page;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the bounds associated with the layout result.\n         *\n         * @returns {number[]} The bounds of the layout result.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list and access the layout result\n         * let result: PdfLayoutResult = list.draw(result.page, result.bounds[0], result.bounds[1], result.bounds[2], result.bounds[3]);\n         * // Access the bounds associated with layout result\n         * let bounds: number[] = result.bounds;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\nvar _PageLayoutResult = /** @class */ (function () {\n    function _PageLayoutResult() {\n        this.markerWrote = false;\n        this.markerWidth = 0;\n        this.markerX = 0;\n    }\n    return _PageLayoutResult;\n}());\nexport { _PageLayoutResult };\nvar _PdfLayoutParameters = /** @class */ (function () {\n    function _PdfLayoutParameters() {\n    }\n    return _PdfLayoutParameters;\n}());\nexport { _PdfLayoutParameters };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfImage } from './pdf-image';\nimport { _PdfName } from './../../pdf-primitives';\nimport { _decode, _getDecoder } from './../../utils';\nimport { _PdfColorSpace } from './../../enumerator';\nimport { _PngDecoder } from './png-decoder';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data, password);\n * // Access first page\n * let page: PdfPage = document.getPage(0);\n * // Gets the graphics of the PDF page\n * let graphics: PdfGraphics = page.graphics;\n * // Create new image object by using JPEG image data as Base64 string format\n * let image: PdfImage = new PdfBitmap('/9j/4AAQSkZJRgABAQEAkACQAAD/4....QB//Z');\n * //Draw the image.\n * graphics.drawImage(image, 10, 20, 400, 400);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        _this._imageStatus = true;\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            _this._initializeAsync(encodedString);\n        }\n        else {\n            _this._initializeAsync(encodedString);\n        }\n        return _this;\n    }\n    PdfBitmap.prototype._initializeAsync = function (encodedString) {\n        var byteArray = new Uint8Array(encodedString.length);\n        if (encodedString !== null && typeof encodedString !== 'undefined' && typeof encodedString === 'string') {\n            byteArray = _decode(encodedString, false);\n        }\n        else if (encodedString instanceof Uint8Array) {\n            byteArray = encodedString;\n        }\n        this._decoder = _getDecoder(byteArray);\n        this.height = this._decoder._height;\n        this.width = this._decoder._width;\n        this._bitsPerComponent = this._decoder._bitsPerComponent;\n    };\n    PdfBitmap.prototype._save = function () {\n        this._imageStatus = true;\n        this._imageStream = this._decoder._getImageDictionary();\n        if (this._decoder && this._decoder instanceof _PngDecoder) {\n            var decoder = this._decoder;\n            this._maskStream = decoder._maskStream;\n            if (decoder._isDecode) {\n                if (decoder._colorSpace) {\n                    this._setColorSpace();\n                }\n            }\n            else {\n                this._setColorSpace();\n            }\n        }\n        else {\n            this._setColorSpace();\n        }\n    };\n    PdfBitmap.prototype._setColorSpace = function () {\n        var stream = this._imageStream;\n        var dictionary = stream.dictionary;\n        var color = dictionary.get('ColorSpace');\n        var colorSpace;\n        if (color.name === 'DeviceCMYK') {\n            colorSpace = _PdfColorSpace.cmyk;\n        }\n        else if (color.name === 'DeviceGray') {\n            colorSpace = _PdfColorSpace.grayScale;\n        }\n        if (this._decoder instanceof _PngDecoder) {\n            var cs = this._decoder._colorSpace; // eslint-disable-line\n            if (typeof cs !== 'undefined' && cs !== null) {\n                colorSpace = _PdfColorSpace.indexed;\n            }\n        }\n        switch (colorSpace) {\n            case _PdfColorSpace.cmyk:\n                dictionary.update('Decode', [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceCMYK'));\n                break;\n            case _PdfColorSpace.grayScale:\n                dictionary.update('Decode', [0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceGray'));\n                break;\n            case _PdfColorSpace.rgb:\n                dictionary.update('Decode', [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]);\n                dictionary.update('ColorSpace', _PdfName.get('DeviceRGB'));\n                break;\n            case _PdfColorSpace.indexed:\n                dictionary.update('ColorSpace', this._decoder._colorSpace);\n                break;\n            default:\n                break;\n        }\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * Represents the items of the list.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n * // Create a new list item and add into the collection\n * items.add(new PdfListItem('PDF'));\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list items\n * list.draw(page, 0, 20);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfListItem = /** @class */ (function () {\n    /**\n     * Creates a new `PdfListItem` instance with the specified text and optional settings for font, format, pen, and brush.\n     *\n     * @param {string} text The text content for the list item.\n     * @param {object} [settings] Optional settings for the list item.\n     * @param {PdfFont} [settings.font] The font used for rendering the text.\n     * @param {PdfStringFormat} [settings.format] The string format used for text layout.\n     * @param {PdfBrush} [settings.brush] The brush used for filling shapes or text.\n     * @param {PdfPen} [settings.pen] The pen used for drawing outlines.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data);\n     * // Access the first page\n     * let page: PdfPage = document.getPage(0);\n     * // Create an instance of list item collection by passing the string array\n     * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n     * // Create a new list item\n     * let item: PdfListItem = new PdfListItem('PDF', {brush: new PdfBrush([255, 0, 0])});\n     * // Add the list item into the collection\n     * items.add(item);\n     * // Create a new PDF ordered list\n     * let list: PdfOrderedList = new PdfOrderedList(items);\n     * // Draw the list items\n     * list.draw(page, 0, 20);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ````\n     */\n    function PdfListItem(text, settings) {\n        this._textIndent = 0;\n        if (text === null || typeof text === 'undefined') {\n            throw new Error('Text cannot be null or undenfied.');\n        }\n        this._text = text;\n        if (settings) {\n            if (settings.font) {\n                this._font = settings.font;\n            }\n            if (settings.format) {\n                this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                this._brush = settings.brush;\n            }\n        }\n    }\n    Object.defineProperty(PdfListItem.prototype, \"brush\", {\n        /**\n         * Gets the brush associated with the list item.\n         *\n         * @returns {PdfBrush} The brush to specify the fill color of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {brush: new PdfBrush([255, 0, 0])});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the brush from the list item\n         * let brush: PdfBrush = item.brush;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._brush;\n        },\n        /**\n         * Sets the brush associated with the list item.\n         *\n         * @param {PdfBrush} value The brush to specify the fill color of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the fill color\n         * item.brush = new PdfBrush([255, 0, 0]);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._brush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"pen\", {\n        /**\n         * Gets the `PdfPen` object associated with the list item.\n         *\n         * @returns {PdfPen} The `PdfPen` object to specify specify stroke properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {pen: new PdfPen([255, 0, 0], 1)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the pen from the list item\n         * let pen: PdfPen = item.pen;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._pen;\n        },\n        /**\n         * Sets the `Pdfpen` object associated with the list item.\n         *\n         * @param {PdfPen} value `PdfPen` object used to specify stroke properties.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the stroke color\n         * item.pen = new PdfPen([255, 0, 0], 1);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._pen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"font\", {\n        /**\n         * Get the `PdfFont` object associated with the list item.\n         *\n         * @returns {PdfFont} The `PdfFont` object used for text rendering.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {pen: new PdfStandardFont(PdfFontFamily.timesRoman, 12)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the font from the list item\n         * let font: PdfFont = item.font;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the `PdfFont` object associated with the list item.\n         *\n         * @param {PdfFont} value The `PdfFont` object to be set for text rendering.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the font\n         * item.font = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"stringFormat\", {\n        /**\n         * Gets the `PdfStringFormat` object associated with the list item.\n         *\n         * @returns {PdfStringFormat} The `PdfStringFormat` object used to specify text formatting.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF', {format: new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom)});\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Access the string format from the list item\n         * let format: PdfStringFormat = item.stringFormat;\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._stringFormat;\n        },\n        /**\n         * Sets the `PdfStringFormat` object associated with the list item.\n         *\n         * @param {PdfStringFormat} value The`PdfStringFormat` object to be set for text formatting.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('PDF');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the font\n         * item.font = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"text\", {\n        /**\n         * Gets the text content of the list item.\n         *\n         * @returns {string} The text content of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item1);\n         * // Get the text content of the item\n         * let text: string = item.text;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._text;\n        },\n        /**\n         * Sets string format of the list item.\n         *\n         * @param {string} value The text content to be set.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point']);\n         * // Create a new list item\n         * let item: PdfListItem = new PdfListItem('Word');\n         * // Add the list item into the collection\n         * items.add(item);\n         * // Create a new PDF ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the text of the list item\n         * item.text = 'PDF';\n         * // Draw the list items\n         * list.draw(page, 0, 20);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._text = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"textIndent\", {\n        /**\n         * Gets the text indent of the list.\n         *\n         * @returns {number} The text indent of the list item.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Get the text indent of the item\n         * let textIndent: number = item.textIndent;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._textIndent;\n        },\n        /**\n         * Sets the text indent of the list item.\n         *\n         * @param {number} value he text indent value to be set.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Set the text indent for the item\n         * item.textIndent = 30;\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Draw the list items on the specified page at position (10, 50)\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._textIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfListItem.prototype, \"subList\", {\n        /**\n         * Get the sub-list associated with the current list item.\n         *\n         * @returns {PdfList} The `PdfList` object representing the sub-list.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // create a sublist for the item\n         * let sublist: OrderedList = new PdfOrderedList();\n         * // Adding items to the sublist\n         * subList.items.add(new PdfListItem('Sub Item 1'));\n         * subList.items.add(new PdfListItem('Sub Item 2'));\n         * // Set the sublist for the main list item\n         * list.items._listItem[0].subList = subList;\n         * // Get the sublist\n         * let sublist: PdfList = list.items._listitem[0].sublist;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._subList;\n        },\n        /**\n         * Sets the sub-list associated with the current list item.\n         *\n         * @param {PdfList} value The `PdfList` object to be set as the sub-list.\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first Page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of an ordered list\n         * let list: OrderedList =  new OrderedList();\n         * // Create a list item with text 'Products'\n         * let item: PdfListItem = new PdfListItem('Products');\n         * // Add the item to the list collection\n         * list.items.add(item);\n         * // Create a sublist for the item\n         * let sublist: OrderedList = new PdfOrderedList();\n         * // Adding items to the sublist\n         * subList.items.add(new PdfListItem('PDF'));\n         * subList.items.add(new PdfListItem('Word'));\n         * subList.items.add(new PdfListItem('PPT'));\n         * // Set the sublist for the main list item\n         * list.items._listItem[0].subList = subList;\n         * // Draw the list items on the specified page\n         * list.draw(page, 10, 50. 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._subList = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfListItem;\n}());\nexport { PdfListItem };\n/**\n * Represents a collection of list items that can be drawn on a PDF page.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Create an instance of list item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word']);\n * // Create a new PDF ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the list items\n * list.draw(page, 0, 20);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfListItemCollection = /** @class */ (function () {\n    function PdfListItemCollection(items) {\n        var _this = this;\n        if (!this._listItems) {\n            this._listItems = [];\n        }\n        if (items) {\n            items.forEach(function (item) {\n                _this.add(new PdfListItem(item));\n            });\n        }\n    }\n    Object.defineProperty(PdfListItemCollection.prototype, \"count\", {\n        /**\n         * Gets the count of the list item collection.\n         *\n         * @returns {number} The count of the list items.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data, password);\n         * // Access the first page of the document\n         * let page: PdfPage = document.getPage(0);\n         * // Create an instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Initialize an array of string items\n         * let products: string[] = ['Word', 'Excel', 'PDF', 'Power Point'];\n         * // Add the items to list item collection by passing the array of products\n         * list.items = new PdfListCollection(products);\n         * / Draw the list on the page at specified bounds\n         * list.draw(page,0, 10, 500, 700);\n         * // Get the count of items from the list\n         * let count: number = list.items.count;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._listItems.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfListItemCollection.prototype.add = function (item, itemIndent) {\n        if (item) {\n            this._listItems.push(item);\n            if (itemIndent) {\n                item.textIndent = itemIndent;\n            }\n        }\n        else {\n            throw new Error('item should not be null');\n        }\n    };\n    /**\n     * Retrieves the `PdfListItem` at the specified index in the collection.\n     *\n     * @param {number} index The zero-based index of the item to retrieve.\n     * @returns {PdfListItem} The `PdfListItem` at the specified index.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(data, password);\n     * // Accessing the first page of the document\n     * let page: PdfPage = document.getpage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = ['Excel', 'Power Point', 'Word', 'Windows', 'MAUI'];\n     * // Add the items to list item collection by passing the array of products\n     * let itemCollection: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Retrieve a specific item from the list collection at a particular index\n     * let item: PdflistItem = list.itemCollection.itemAt(1);\n     * // Draw the list items on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 50, 500, 700);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.at = function (index) {\n        if (index === null) {\n            throw new Error('index should not be null');\n        }\n        var item = this._listItems[Number.parseInt(index.toString(), 10)];\n        return item;\n    };\n    /**\n     * Removes a `PdfListItem` from the collection.\n     *\n     * @param {PdfListItem} item The list item to be removed from the collection.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Remove a specific item from the collection\n     * let itemToRemove: PdfListItem = list.items.at(0);\n     * list.items.remove(itemToRemove);\n     * // Draw the list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.remove = function (item) {\n        if (!item) {\n            throw new Error('item should not be null');\n        }\n        var found = false;\n        for (var i = 0; i < this._listItems.length; i++) {\n            if (this._listItems[Number.parseInt(i.toString(), 10)] === item) {\n                found = true;\n                this._listItems.splice(Number.parseInt(i.toString(), 10), 1);\n                break;\n            }\n        }\n        if (!found) {\n            throw new Error('item collection does not contain the given content');\n        }\n    };\n    /**\n     * Removes a `PdfListItem` at the specified index from the collection.\n     *\n     * @param {number} index The zero-based index of the item to remove.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Remove a specific item from the collection by its index\n     * list.items.removeAt(1);\n     * // Draw the modified list on the page at specified bounds\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.removeAt = function (index) {\n        if (index < 0 || index >= this._listItems.length) {\n            throw new Error('The index should be less than items count or equal to 0');\n        }\n        this._listItems.splice(index, 1);\n    };\n    /**\n     * Clear the list item collection.\n     *\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * let item: PdfListItemCollection = new PdfListItemCollection(products);\n     * // Draw the initial list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Clear the list item collection\n     * list.items.clear();\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.clear = function () {\n        this._listItems = [];\n    };\n    /**\n     * Inserts a `PdfListItem` into the collection at the specified index.\n     *\n     * @param {number} index The zero-based index at which the item should be inserted.\n     * @param {PdfListItem} item The list item to be inserted into the collection.\n     * @param {number} itemIndent The indent of the list item.\n     * @returns {void}\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * list.items = new PdfListItemCollection(products);\n     * // Create a new PdfListItem instance with some text\n     * let item: PdfListItem = new PdfListItem('text');\n     * // Insert the new item into the list at index 1 with an indent of 40\n     * list.items.insert(1, item, 40);\n     * // Draw the updated list on the page at specified coordinates and dimensions\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.insert = function (index, item, itemIndent) {\n        if (index < 0 || index > this._listItems.length) {\n            throw new Error('Index should be within the range of items count (inclusive).');\n        }\n        if (!item) {\n            throw new Error('Item cannot be null.');\n        }\n        if (itemIndent) {\n            item.textIndent = itemIndent;\n        }\n        this._listItems.splice(index, 0, item);\n    };\n    /**\n     * Finds the index of a `PdfListItem` in the collection.\n     *\n     * @param {PdfListItem} item The list item to find in the collection.\n     * @returns {number} The zero-based index of the item in the collection, or -1 if not found.\n     * ```typescript\n     * // Load an existing PDF document\n     * let document: PdfDocument = new PdfDocument(readFromResources('CircleAnnotation-Acrobat.pdf'));\n     * // Access the first page of the document\n     * let page: PdfPage = document.getPage(0);\n     * // Create a ordered list\n     * let list: PdfOrderedList = new PdfOrderedList();\n     * // Initialize an array of strings\n     * let products: string[] = [\n     *   'PDF is a file format designed to present documents consistently across devices and platforms.',\n     *   'Excel is a widely used spreadsheet application developed by Microsoft.',\n     *   'PDF stands for Portable Document Format.',\n     *   'PowerPoint is a presentation program developed by Microsoft for creating slideshows.',\n     *   'PowerPoint is widely used in business settings for creating presentations.'\n     * ];\n     * // Add the items to list item collection by passing the array of products\n     * list.items = new PdfListItemCollection(products);\n     * // Retrieve the first item from the collection\n     * let item: PdfListItem = item._listItems[0];\n     * // Find the index of the first item in the collection\n     * let index: number = list.items.indexOf(item);\n     * // Draw the list on the page at specified bounds\n     * list.draw(page, 10, 40, 300, 500);\n     * // Save the document\n     * document.save('output.pdf');\n     * // Destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfListItemCollection.prototype.indexOf = function (item) {\n        if (!item) {\n            throw new Error('Item should be defined.');\n        }\n        return this._listItems.indexOf(item);\n    };\n    return PdfListItemCollection;\n}());\nexport { PdfListItemCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfListMarkerAlignment, PdfLayoutType, PdfNumberStyle, PdfTextAlignment, PdfUnorderedListStyle } from '../enumerator';\nimport { PdfFontFamily, PdfStandardFont, PdfStringFormat, _PdfStringLayouter } from '../fonts';\nimport { PdfBrush } from '../graphics/pdf-graphics';\nimport { PdfTemplate } from '../graphics/pdf-template';\nimport { PdfLayoutResult, PdfLayoutFormat, _PdfLayoutParameters, _PageLayoutResult } from '../graphics';\nimport { PdfPage } from '../pdf-page';\nimport { PdfListItemCollection } from './pdf-list-item';\nimport { _convertNumber } from './../utils';\n/**\n * Represents base class for lists.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Assign the array of string items\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Initialize a new brush\n * let brush: PdfBrush =  new PdfBrush([0, 255, 255])\n * // Add an item to item collection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create a new instance of ordered list\n * let list: PdfList = new PdfOrderedList(items);\n * // Draw the ordered list with specified items\n * list.draw(page, 0, 20, 500, 700);\n * // Get the brush associated with the ordered list\n * let listBrush: PdfBrush = list.brush;\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfList = /** @class */ (function () {\n    function PdfList() {\n        this._textIndent = 5;\n        this._indent = 10;\n        this._alignment = PdfListMarkerAlignment.left;\n        this._delimiter = '.';\n        this._suffix = '.';\n        this._enableHierarchy = false;\n        this._currentIndex = 0;\n        this._size = [0, 0];\n        this._defaultFont = new PdfStandardFont(PdfFontFamily.helvetica, 8);\n    }\n    Object.defineProperty(PdfList.prototype, \"brush\", {\n        /**\n         * Gets the `PdfBrush` object associated with the list.\n         *\n         * @returns {PdfBrush} The `PdfBrush` object to specify fill text rendering mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Initialize a new brush\n         * let brush: PdfBrush =  new PdfBrush([0, 255, 255]);\n         * // Add an item to item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new instance of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the ordered list with specified items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the brush associated with the ordered list\n         * let listBrush: PdfBrush = list.brush;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._brush;\n        },\n        /**\n         * Sets the `PdfBrush` object associated with the list.\n         *\n         * @param {PdfBrush} value The `PdfBrush` object to specify fill text rendering mode.\n         * ```typescript\n         * // Load an existing PDF document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new Ordered list and set the brush\n         * let list: PdfOrderedList = new PdfOrderedList(items, {brush: new PdfBrush([255, 0, 0])});\n         * // Set fill color to the list\n         * list.brush = brush;\n         * // Draw the ordered list with specified items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._brush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"pen\", {\n        /**\n         * Gets the `PdfPen` object associated with the list.\n         *\n         * @returns {PdfPen} The `PdfPen` object to specify stroke properties for text rendering.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // create a new ordered list and draw the list\n         * let list: PdfOrderedList = new PdfOrderedList(items, {pen: new PdfPen([0, 255, 255], 1)});\n         * list.draw(page, 0, 20, 500, 700);\n         * // Retrieve the pen associated with the ordered list\n         * let itemPen: PdfPen = list.pen;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pen;\n        },\n        /**\n         * Sets the `PdfPen` object associated with the list.\n         *\n         * @param {PdfPen} value The `PdfPen` object to specify fill text rendering mode.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new pen\n         * let pen: PdfPen =  new PdfPen([0, 255, 255], 1);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the pen for the ordered list\n         * list.pen = pen;\n         * // Draw the list associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"font\", {\n        /**\n         * Gets the font of the list item.\n         *\n         * @returns {PdfFont} The font used for the list items.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * /// Retrieve the font used for the list items\n         * let itemPen: PdfFont = list.font;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._font;\n        },\n        /**\n         * Sets the `PdfFont` object associated with the list.\n         *\n         * @param {PdfFont} value The `PdfPen` object to to set for the list items.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new font for list\n         * let font: PdfStandardFont = new PdfStandardFont(PdfFontFamily.timesRoman, 12);\n         * // Create a new ordered list with items and font\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * list.font = font;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._font = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"stringFormat\", {\n        /**\n         * Gets the text layout format associated with the list item.\n         *\n         * @returns {PdfStringFormat} The `PdfStringFormat` object that specifies the text layout information.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to  listitem collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list with items\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Getting the text layout format used by the list items\n         * let itemFormat: PdfStringFormat = list.stringFormat;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._stringFormat;\n        },\n        /**\n         * Sets the text layout format of the list item.\n         *\n         * @param {PdfStringFormat} value The `PdfStringFormat` object that specifies the text layout information.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of item collection and add the list item\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new  format with alignment settings for list\n         * let itemFormat: PdfStringFormat =  new PdfStringFormat(PdfTextAlignment.right, PdfVerticalAlignment.bottom);\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(items);\n         * // Create a ordered list with the item collection\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Set the text layout format for the list\n         * list.stringFormat = itemFormat;\n         * // Draw the items on the page with the updated format\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"indent\", {\n        /**\n         * Gets the indent of the list.\n         *\n         * @returns {number} The indent value of the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the current indent value used by the list\n         * let itemIndent: number = list.indent;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._indent;\n        },\n        /**\n         * Sets the indent of the list.\n         *\n         * @param {number} value The indent value to set for the list.\n         * ```typescript\n         * //Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a of ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the indent value for the list\n         * list.indent = 40;\n         * // Draw the items on the page with the specified indent\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._indent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"textIndent\", {\n        /**\n         * Gets the text indent of the list.\n         *\n         * @returns {number} The text indent of the list.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create an new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the current text indent value of the list\n         * let textIndent: number = list.textIndent;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._textIndent;\n        },\n        /**\n         * Sets the text indent of the list.\n         *\n         * @param {number} value The text indent value to set for the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the text indent value for the list\n         * list.textIndent = 40;\n         * // Draw the items on the page with the updated text indent\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._textIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"delimiter\", {\n        /**\n         * Gets the delimiter string used to separate items in the list.\n         *\n         * @returns {string} The delimiter string used in the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Create an instance of PdfListItemCollection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the delimiter used in the list\n         * let delimiter: string = list.delimiter;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._delimiter;\n        },\n        /**\n         * Sets the delimiter string used to separate items in the list.\n         *\n         * @param {string} value The delimiter string to be set.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the delimiter for the list\n         * list.delimiter = ')';\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._delimiter = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"suffix\", {\n        get: function () {\n            return this._suffix;\n        },\n        set: function (value) {\n            this._suffix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"enableHierarchy\", {\n        /**\n         * Gets a value indicating whether hierarchical structure is enabled for the list.\n         *\n         * @returns {boolean} `true` if hierarchical structure is enabled; otherwise, `false`.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the items associated with the items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the hierarchical structure status\n         * let enableHierarchy: boolean = list.enableHierarchy;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._enableHierarchy;\n        },\n        /**\n         * Sets a value indicating whether hierarchical structure is enabled for the list.\n         *\n         * @param {boolean} value The boolean flag to enable or disable hierarchical structure.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the hierarchical structure status\n         * list.enableHierarchy = true;\n         * / Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._enableHierarchy = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"alignment\", {\n        /**\n         * Gets the text alignment of the list.\n         *\n         * @returns {PdfTextAlignment} The text alignment.\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an item to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Draw the list on the page associated with items\n         * list.draw(page, 0, 20, 500, 700);\n         * // Get the alignment of the list\n         * let listAlignment: PdfTextAlignment = list.alignment;\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._alignment;\n        },\n        /**\n         * Sets the text alignment of the list.\n         *\n         * @param {PdfTextAlignment} value The text alignment to set for the list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the alignment for the list\n         * list.alignment = PdfTextAlignment.left;\n         * // Draw the items on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._alignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"items\", {\n        /**\n         * Gets the item collection of the list.\n         *\n         * @returns {PdfListItemCollection} The list item collection.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add an items to list item collection by passing the string array\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the item collection\n         * let collection: PdfListItemCollection = list.items;\n         * // Draw the list on the page associated with item collection\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        get: function () {\n            return this._itemCollection;\n        },\n        /**\n         * Sets the item collection of the list.\n         *\n         * @param {PdfListItemCollection} value The list item collection.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Create a new ordered list\n         * let list: PdfOrderedList = new PdfOrderedList();\n         * // Sets the item collection\n         * list.items = new PdfListItemCollection(['Excel', 'Power', 'Point', 'Word', 'PDF']);\n         * // Draw the list on the page associated with item collection\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ````\n         */\n        set: function (value) {\n            this._itemCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfList.prototype, \"_markerRightToLeft\", {\n        get: function () {\n            return this._alignment === PdfListMarkerAlignment.right;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfList.prototype.draw = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPage) {\n            if (arg1._isNew) {\n                return this._drawInternal(arg1, arg2, arg3, arg4, arg5, arg6);\n            }\n            else {\n                (new _PdfListLayouter(this)).layout(arg1.graphics, [arg2, arg3, 0, 0]);\n            }\n        }\n        else {\n            (new _PdfListLayouter(this)).layout(arg1, [arg2, arg3, 0, 0]);\n        }\n    };\n    PdfList.prototype._drawInternal = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        var parameter = new _PdfLayoutParameters();\n        parameter._page = arg1;\n        if (arg4 === null || typeof arg4 === 'undefined') {\n            parameter._bounds = [arg2, arg3, 0, 0];\n            parameter._format = new PdfLayoutFormat();\n        }\n        else if (typeof arg4 === 'number') {\n            parameter._bounds = [arg2, arg3, arg4, arg5];\n            if (arg6) {\n                parameter._format = arg6;\n            }\n            else {\n                parameter._format = new PdfLayoutFormat();\n            }\n        }\n        else if (arg4 instanceof PdfLayoutFormat) {\n            parameter._bounds = [arg2, arg3, 0, 0];\n            parameter._format = arg4;\n        }\n        return this._layout(parameter);\n    };\n    PdfList.prototype._layout = function (parameter) {\n        return (new _PdfListLayouter(this)).layoutInternal(parameter);\n    };\n    return PdfList;\n}());\nexport { PdfList };\n/**\n * Represents an ordered list in a PDF document.\n * ```typescript\n * // Load an existing document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Define an array of strings representing items to be added\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Add the items to list item collection by passing the array of products\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create an instance of ordered list\n * let list: PdfOrderedList = new PdfOrderedList(items);\n * // Draw the ordered list on the page\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfOrderedList = /** @class */ (function (_super) {\n    __extends(PdfOrderedList, _super);\n    function PdfOrderedList(items, settings) {\n        var _this = _super.call(this) || this;\n        _this._startNumber = 1;\n        if (items) {\n            _this._itemCollection = items;\n        }\n        else {\n            _this._itemCollection = new PdfListItemCollection();\n        }\n        if (settings) {\n            if (settings.font) {\n                _this._font = settings.font;\n            }\n            if (settings.format) {\n                _this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                _this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                _this._brush = settings.brush;\n            }\n            if (settings.style) {\n                _this._style = settings.style;\n            }\n            else {\n                _this._style = PdfNumberStyle.numeric;\n            }\n            if (settings.indent) {\n                _this._indent = settings.indent;\n            }\n            if (settings.textIndent) {\n                _this._textIndent = settings.textIndent;\n            }\n            if (settings.alignment) {\n                _this._alignment = settings.alignment;\n            }\n            if (settings.delimiter) {\n                _this._delimiter = settings.delimiter;\n            }\n            if (settings.suffix) {\n                _this._suffix = settings.suffix;\n            }\n        }\n        else {\n            _this._style = PdfNumberStyle.numeric;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfOrderedList.prototype, \"style\", {\n        /**\n         * Gets the numbering style used for the ordered list.\n         *\n         * @returns {PdfNumberStyle} The numbering style used for the ordered list.\n         *  ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the numbering style used for the ordered list\n         * let style: PdfNumberStyle = list.style;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the numbering style used for the ordered list.\n         *\n         * @param {PdfNumberStyle} value The numbering style used for the ordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         *  // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Define a style for the list\n         * let style: PdfNumberStyle = PdfNumberStyle.lowerLatin;\n         * // Set the numbering style for the list items\n         * list.style = style;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfOrderedList.prototype, \"startNumber\", {\n        /**\n         * Gets the starting number used for the ordered list.\n         *\n         * @returns {number} The starting number of the ordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Get the starting number used for the ordered list\n         * let startnumber: number = list.startNumber;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._startNumber;\n        },\n        /**\n         * Sets the starting number to be used for the ordered list.\n         *\n         * @param {number} value The starting number to set.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Assign the array of string items\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize the instance of ordered list and pass the item collection\n         * let list: PdfOrderedList = new PdfOrderedList(items);\n         * // Set the starting number for the ordered list\n         * list.startNumber = 5;\n         * // Draw the ordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('Start number should be greater than 0.');\n            }\n            this._startNumber = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfOrderedList.prototype._getNumber = function () {\n        return _convertNumber(this._startNumber + this._currentIndex, this._style);\n    };\n    return PdfOrderedList;\n}(PdfList));\nexport { PdfOrderedList };\n/**\n * Represents the Unordered lists.\n * ```typescript\n * // Load an existing PDF document\n * let document: PdfDocument = new PdfDocument(data);\n * // Access the first page\n * let page: PdfPage = document.getPage(0);\n * // Define the items in the unordered list\n * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n * // Create an instance of PdfListItemCollection by passing the string array\n * let items: PdfListItemCollection = new PdfListItemCollection(products);\n * // Create an instance of PdfUnorderedList\n * let list: PdfUnorderedList = new PdfUnorderedList();\n * // Draw the unordered list on the page\n * list.draw(page, 0, 20, layout);\n * // Save the document\n * document.save('output.pdf');\n * // Destroy the document\n * document.destroy();\n * ````\n */\nvar PdfUnorderedList = /** @class */ (function (_super) {\n    __extends(PdfUnorderedList, _super);\n    function PdfUnorderedList(items, settings) {\n        var _this = _super.call(this) || this;\n        if (items) {\n            _this._itemCollection = items;\n        }\n        else {\n            _this._itemCollection = new PdfListItemCollection();\n        }\n        if (settings) {\n            if (settings.font) {\n                _this._font = settings.font;\n            }\n            if (settings.format) {\n                _this._stringFormat = settings.format;\n            }\n            if (settings.pen) {\n                _this._pen = settings.pen;\n            }\n            if (settings.brush) {\n                _this._brush = settings.brush;\n            }\n            if (settings.style) {\n                _this._style = settings.style;\n            }\n            else {\n                _this._style = PdfUnorderedListStyle.disk;\n            }\n            if (settings.indent) {\n                _this._indent = settings.indent;\n            }\n            if (settings.textIndent) {\n                _this._textIndent = settings.textIndent;\n            }\n            if (settings.alignment) {\n                _this._alignment = settings.alignment;\n            }\n            if (settings.delimiter) {\n                _this._delimiter = settings.delimiter;\n            }\n            if (settings.suffix) {\n                _this._suffix = settings.suffix;\n            }\n        }\n        else {\n            _this._style = PdfUnorderedListStyle.disk;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUnorderedList.prototype, \"style\", {\n        /**\n         * Gets the style used for the unordered list.\n         *\n         * @returns {PdfUnorderedListStyle} The style used for the unordered list.\n         * ```typescript\n         * // Load an existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define the items in the unordered list\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize an instance of the unordered list and pass the list item collection\n         * let list: PdfUnorderedList = new PdfUnorderedList(items);\n         * // Get the style used for the unordered list\n         * let style: PdfUnorderedListStyle = list.style;\n         * // Draw the unordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._style;\n        },\n        /**\n         * Sets the style used for the unordered list.\n         *\n         * @param {PdfUnorderedListStyle} value The style to set for the unordered list.\n         * ```typescript\n         * // Load the existing document\n         * let document: PdfDocument = new PdfDocument(data);\n         * // Access the first page\n         * let page: PdfPage = document.getPage(0);\n         * // Define the items in the unordered list\n         * let products: string[] = ['Excel', 'Power', 'Point', 'Word', 'PDF'];\n         * // Add the items to list item collection by passing the array of products\n         * let items: PdfListItemCollection = new PdfListItemCollection(products);\n         * // Initialize an instance of the unordered list and pass the list item collection\n         * let list: PdfUnorderedList = new PdfUnorderedList(items);\n         * // Initialize a style for the unordered list\n         * let style: PdfUnorderedListStyle = PdfUnorderedListStyle.circle;\n         * // Set the style for the unordered list items\n         * list.style = style;\n         * // Draw the unordered list on the page\n         * list.draw(page, 0, 20, 500, 700);\n         * // Save the document\n         * document.save('output.pdf');\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._style = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfUnorderedList.prototype._getStyledText = function () {\n        switch (this._style) {\n            case PdfUnorderedListStyle.disk:\n                return '\\x6C';\n            case PdfUnorderedListStyle.square:\n                return '\\x6E';\n            case PdfUnorderedListStyle.asterisk:\n                return '\\x5D';\n            case PdfUnorderedListStyle.circle:\n                return '\\x6D';\n            default:\n                return '';\n        }\n    };\n    PdfUnorderedList.prototype._draw = function (graphics, x, y, brush, pen) {\n        var template = new PdfTemplate([0, 0, this._size[0], this._size[1]], graphics._crossReference);\n        var bounds = [0, 0, 0, 0];\n        if (pen) {\n            bounds[0] = bounds[0] + pen._width;\n            bounds[1] = bounds[1] + pen._width;\n        }\n        template.graphics.drawString(this._getStyledText(), this._unicodeFont, bounds, pen, brush);\n        graphics.drawTemplate(template, { x: x, y: y, width: template.size[0], height: template.size[1] });\n    };\n    return PdfUnorderedList;\n}(PdfList));\nexport { PdfUnorderedList };\nvar _PdfListInfo = /** @class */ (function () {\n    function _PdfListInfo(list, index, number) {\n        this._list = list;\n        this._index = index;\n        this._number = number;\n    }\n    return _PdfListInfo;\n}());\nexport { _PdfListInfo };\nvar _PdfListLayouter = /** @class */ (function () {\n    function _PdfListLayouter(element) {\n        this._indent = 0;\n        this._information = [];\n        this._markerMaxWidth = 0;\n        this._finish = false;\n        this._usePaginateBounds = true;\n        this._resultHeight = 0;\n        this._size = [0, 0];\n        this._index = 0;\n        this._element = element;\n    }\n    _PdfListLayouter.prototype.layout = function (graphics, bounds) {\n        this._graphics = graphics;\n        var parameter = new _PdfLayoutParameters();\n        parameter._bounds = bounds;\n        parameter._format = new PdfLayoutFormat();\n        parameter._format.layout = PdfLayoutType.onePage;\n        this.layoutInternal(parameter);\n    };\n    _PdfListLayouter.prototype.layoutInternal = function (parameter) {\n        this._currentPage = parameter._page;\n        this._bounds = parameter._bounds.slice();\n        if (this._currentPage) {\n            if (parameter._bounds[2] === 0 && parameter._bounds[3] === 0) {\n                var pageSize = this._currentPage.graphics.clientSize;\n                this._bounds[2] = pageSize[0] - this._bounds[0];\n                this._bounds[3] = pageSize[1] - this._bounds[1];\n            }\n            this._graphics = this._currentPage.graphics;\n        }\n        var pageResult = new _PageLayoutResult();\n        pageResult.broken = false;\n        pageResult.y = this._bounds[1];\n        this._curList = this._element;\n        this._indent = this._curList.indent;\n        this._setCurrentParameters(this._curList);\n        if (!this._curList.brush) {\n            this._currentBrush = new PdfBrush([0, 0, 0]);\n        }\n        if (!this._curList.font) {\n            this._currentFont = this._curList._defaultFont;\n        }\n        if (this._curList instanceof PdfOrderedList) {\n            this._markerMaxWidth = this._getMarkerMaxWidth(this._curList, this._information);\n        }\n        var useOnPage = parameter._format.layout === PdfLayoutType.onePage;\n        while (!this._finish) {\n            pageResult.y = this._bounds[1];\n            pageResult = this._layoutOnPage(pageResult);\n            if (useOnPage) {\n                break;\n            }\n            if (this._currentPage && !this._finish) {\n                this._currentPage = this._getNextPage(this._currentPage);\n            }\n            this._graphics = this._currentPage.graphics;\n            if (parameter._bounds[2] === 0 && parameter._bounds[3] === 0) {\n                var pageSize = this._currentPage.graphics.clientSize;\n                this._bounds[2] = pageSize[0] - this._bounds[0];\n                this._bounds[3] = pageSize[1] - this._bounds[1];\n            }\n            if (parameter._format && parameter._format.usePaginateBounds && this._usePaginateBounds) {\n                this._bounds = parameter._format._paginateBounds;\n            }\n        }\n        this._information = [];\n        var finalBounds = [this._bounds[0], pageResult.y, this._bounds[2], this._resultHeight];\n        var result = new PdfLayoutResult(this._currentPage, finalBounds);\n        if (this._currentFormat) {\n            this._currentFormat._isList = false;\n        }\n        return result;\n    };\n    _PdfListLayouter.prototype._layoutOnPage = function (pageResult) {\n        var height = 0;\n        var resultantHeight = 0;\n        var y = this._bounds[1];\n        var x = this._bounds[0];\n        this._size = [this._bounds[2] - this._indent, this._bounds[3]];\n        while (true) { // eslint-disable-line\n            for (; this._index < this._curList.items.count; ++this._index) {\n                var item = this._curList.items.at(this._index);\n                var result = this._drawItem(pageResult, x, this._curList, this._index, this._indent, this._information, item, height, y);\n                pageResult = result.pageResult;\n                height = result.height;\n                y = result.y;\n                resultantHeight += height;\n                if (pageResult.broken) {\n                    return pageResult;\n                }\n                pageResult.markerWrote = false;\n                if (item.subList && item.subList.items.count > 0) {\n                    if (this._curList instanceof PdfOrderedList) {\n                        var oList = this._curList;\n                        oList._currentIndex = this._index;\n                        var info = new _PdfListInfo(this._curList, this._index, oList._getNumber());\n                        info._brush = this._currentBrush;\n                        info._font = this._currentFont;\n                        info._format = this._currentFormat;\n                        info._pen = this._currentPen;\n                        info._markerWidth = this._markerMaxWidth;\n                        this._information.push(info);\n                    }\n                    else {\n                        var info = new _PdfListInfo(this._curList, this._index);\n                        info._brush = this._currentBrush;\n                        info._font = this._currentFont;\n                        info._format = this._currentFormat;\n                        info._pen = this._currentPen;\n                        this._information.push(info);\n                    }\n                    this._curList = item.subList;\n                    if (this._curList instanceof PdfOrderedList) {\n                        this._markerMaxWidth = this._getMarkerMaxWidth(this._curList, this._information);\n                    }\n                    this._index = -1;\n                    this._indent += this._curList.indent;\n                    this._size[0] = this._size[0] - this._curList.indent;\n                    this._setCurrentParameters(item);\n                    this._setCurrentParameters(this._curList);\n                }\n            }\n            if (this._information.length === 0) {\n                this._resultHeight = resultantHeight;\n                this._finish = true;\n                break;\n            }\n            var listInfo = this._information.pop();\n            this._index = listInfo._index + 1;\n            this._indent -= this._curList.indent;\n            this._size[0] = this._size[0] + this._curList.indent;\n            this._markerMaxWidth = listInfo._markerWidth;\n            this._currentBrush = listInfo._brush;\n            this._currentPen = listInfo._pen;\n            this._currentFont = listInfo._font;\n            this._currentFormat = listInfo._format;\n            this._curList = listInfo._list;\n        }\n        return pageResult;\n    };\n    _PdfListLayouter.prototype._drawItem = function (pageResult, x, curList, index, indent, info, item, height, y) {\n        var layouter = new _PdfStringLayouter();\n        var result;\n        var textIndent = curList.textIndent;\n        var posY = height + y;\n        var posX = indent + x;\n        var itemHeight = 0;\n        var itemSize = this._size;\n        var text = item.text;\n        var markerText;\n        var itemBrush = this._currentBrush;\n        var markerHeight = 0;\n        if (item.brush) {\n            itemBrush = item.brush;\n        }\n        var itemPen = this._currentPen;\n        if (item.pen) {\n            itemPen = item.pen;\n        }\n        var itemFont = this._currentFont;\n        if (item.font) {\n            itemFont = item.font;\n        }\n        var itemFormat = this._currentFormat;\n        if (item.stringFormat) {\n            itemFormat = item.stringFormat;\n        }\n        if ((this._size[0] <= 0 || this._size[0] < itemFont.size) && this._currentPage) {\n            throw new Error('There is not enough space to layout list.');\n        }\n        this._size[1] = this._size[1] - height;\n        if (pageResult.broken) {\n            text = pageResult.itemText;\n            markerText = pageResult.markerText;\n        }\n        var canDrawMarker = true;\n        var markerResult = this._createMarkerResult(index, curList, info, item);\n        if (markerResult) {\n            if (curList instanceof PdfOrderedList) {\n                posX += this._markerMaxWidth;\n                pageResult.markerWidth = this._markerMaxWidth;\n            }\n            else {\n                posX += markerResult._actualSize[0];\n                pageResult.markerWidth = markerResult._actualSize[0];\n            }\n            markerHeight = markerResult._actualSize[1];\n            if (this._currentPage) {\n                canDrawMarker = (markerHeight < this._size[1]);\n            }\n            if (markerResult._empty) {\n                canDrawMarker = false;\n            }\n        }\n        else {\n            posX += curList._size[0];\n            pageResult.markerWidth = curList._size[0];\n            markerHeight = curList._size[1];\n            if (this._currentPage) {\n                canDrawMarker = (markerHeight < this._size[1]);\n            }\n        }\n        if (!markerText || markerText === '') {\n            canDrawMarker = true;\n        }\n        if (text && canDrawMarker) {\n            itemSize = this._size;\n            itemSize[0] = itemSize[0] - pageResult.markerWidth;\n            if (item.textIndent === 0) {\n                itemSize[0] = itemSize[0] - textIndent;\n            }\n            else {\n                itemSize[0] = itemSize[0] - item.textIndent;\n            }\n            if ((itemSize[0] <= 0 || itemSize[0] < itemFont.size) && this._currentPage) {\n                throw new Error('Not enough space to layout the text. The marker is too long or there is not enough space to draw it.');\n            }\n            var itemX = posX;\n            if (!curList._markerRightToLeft) {\n                if (item.textIndent === 0) {\n                    itemX += textIndent;\n                }\n                else {\n                    itemX += item.textIndent;\n                }\n            }\n            else {\n                itemX -= pageResult.markerWidth;\n                if (itemFormat && (itemFormat.alignment === PdfTextAlignment.right || itemFormat.alignment === PdfTextAlignment.center)) {\n                    itemX -= indent;\n                }\n            }\n            if (!this._currentPage && itemFormat) {\n                itemFormat = Object.assign({}, itemFormat);\n                itemFormat.alignment = PdfTextAlignment.left;\n            }\n            result = layouter._layout(text, itemFont, itemFormat, itemSize);\n            var rect = [itemX, posY, itemSize[0], itemSize[1]];\n            this._graphics._drawStringLayoutResult(result, itemFont, itemPen, itemBrush, rect, itemFormat);\n            y = posY;\n            itemHeight = result._actualSize[1];\n        }\n        height = (itemHeight < markerHeight) ? markerHeight : itemHeight;\n        if ((result && result._remainder && result._remainder !== '') ||\n            (markerResult && markerResult._remainder && markerResult._remainder !== '') ||\n            !canDrawMarker) {\n            y = 0;\n            height = 0;\n            if (result) {\n                pageResult.itemText = result._remainder;\n                if (result._remainder === item.text) {\n                    canDrawMarker = false;\n                }\n            }\n            else {\n                if (canDrawMarker) {\n                    pageResult.itemText = undefined;\n                }\n                else {\n                    pageResult.itemText = item.text;\n                }\n            }\n            if (markerResult) {\n                pageResult.markerText = markerResult._remainder;\n            }\n            else {\n                pageResult.markerText = undefined;\n            }\n            pageResult.broken = true;\n            pageResult.y = 0;\n            this._bounds[1] = 0;\n        }\n        else {\n            pageResult.broken = false;\n        }\n        if (result) {\n            pageResult.markerX = posX;\n            if (itemFormat) {\n                switch (itemFormat.alignment) {\n                    case PdfTextAlignment.right:\n                        pageResult.markerX = posX + itemSize[0] - result._actualSize[0];\n                        break;\n                    case PdfTextAlignment.center:\n                        pageResult.markerX = posX + (itemSize[0] / 2) - (result._actualSize[0] / 2);\n                        break;\n                }\n            }\n            if (curList._markerRightToLeft) {\n                pageResult.markerX += result._actualSize[0];\n                if (item.textIndent === 0) {\n                    pageResult.markerX += textIndent;\n                }\n                else {\n                    pageResult.markerX += item.textIndent;\n                }\n                if (itemFormat && (itemFormat.alignment === PdfTextAlignment.right || itemFormat.alignment === PdfTextAlignment.center)) {\n                    pageResult.markerX -= indent;\n                }\n            }\n        }\n        if (canDrawMarker && !pageResult.markerWrote) {\n            pageResult.markerWrote = this._drawMarker(curList, item, markerResult, posY, pageResult.markerX);\n            if (curList instanceof PdfOrderedList) {\n                pageResult.markerWidth = markerResult._actualSize[0];\n            }\n            else {\n                pageResult.markerWidth = curList._size[0];\n            }\n        }\n        return { pageResult: pageResult, height: height, y: y };\n    };\n    _PdfListLayouter.prototype._createMarkerResult = function (index, curList, info, item) {\n        if (curList instanceof PdfOrderedList) {\n            return this._createOrderedMarkerResult(curList, item, index, info, false);\n        }\n        else {\n            return this._createUnorderedMarkerResult(curList, item);\n        }\n    };\n    _PdfListLayouter.prototype._drawMarker = function (curList, item, markerResult, posY, posX) {\n        if (curList instanceof PdfOrderedList) {\n            if (curList.font && markerResult) {\n                if (curList.font.size > markerResult._actualSize[1]) {\n                    posY += (curList.font.size / 2) - (markerResult._actualSize[1] / 2);\n                    markerResult._actualSize[1] = markerResult._actualSize[1] + posY;\n                }\n                this._drawOrderedMarker(curList, markerResult, item, posX, posY);\n            }\n        }\n        else {\n            if (curList.font && markerResult) {\n                if (curList.font.size > markerResult._actualSize[1]) {\n                    posY += (curList.font.size / 2) - (markerResult._actualSize[1] / 2);\n                    markerResult._actualSize[1] = markerResult._actualSize[1] + posY;\n                }\n            }\n            this._drawUnorderedMarker(curList, markerResult, item, posX, posY);\n        }\n        return true;\n    };\n    _PdfListLayouter.prototype._drawUnorderedMarker = function (curList, markerResult, item, posX, posY) {\n        var markerFont = this._getMarkerFont(curList, item);\n        var markerPen = this._getMarkerPen(curList, item);\n        var markerBrush = this._getMarkerBrush(curList, item);\n        if (markerResult) {\n            curList._size = markerResult._actualSize;\n            curList._unicodeFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, markerFont.size);\n            curList._draw(this._graphics, posX - markerResult._actualSize[0], posY, markerBrush, markerPen);\n        }\n        else {\n            curList._size = [markerFont.size, markerFont.size];\n            curList._draw(this._graphics, posX - markerFont.size, posY, markerBrush, markerPen);\n        }\n    };\n    _PdfListLayouter.prototype._drawOrderedMarker = function (curList, markerResult, item, posX, posY) {\n        var markerFont = this._getMarkerFont(curList, item);\n        var markerPen = this._getMarkerPen(curList, item);\n        var markerBrush = this._getMarkerBrush(curList, item);\n        var rect = [posX - this._markerMaxWidth, posY, this._markerMaxWidth, markerResult._actualSize[1]];\n        var markerFormat = this._setMarkerStringFormat(curList, this._getMarkerFormat(curList, item));\n        this._graphics._drawStringLayoutResult(markerResult, markerFont, markerPen, markerBrush, rect, markerFormat);\n    };\n    _PdfListLayouter.prototype._setCurrentParameters = function (element) {\n        if (element.brush) {\n            this._currentBrush = element.brush;\n        }\n        if (element.pen) {\n            this._currentPen = element.pen;\n        }\n        if (element.font) {\n            this._currentFont = element.font;\n        }\n        if (element.stringFormat) {\n            this._currentFormat = element.stringFormat;\n            if (element instanceof PdfList) {\n                this._currentFormat._isList = true;\n            }\n        }\n    };\n    _PdfListLayouter.prototype._getMarkerMaxWidth = function (list, infromation) {\n        var width = -1;\n        for (var i = 0; i < list.items.count; i++) {\n            var result = this._createOrderedMarkerResult(list, list.items.at(i), i + list.startNumber, infromation, true);\n            if (width < result._actualSize[0]) {\n                width = result._actualSize[0];\n            }\n        }\n        return width;\n    };\n    _PdfListLayouter.prototype._createUnorderedMarkerResult = function (list, item) {\n        var markerFont = this._getMarkerFont(list, item);\n        var layouter = new _PdfStringLayouter();\n        var uFont = new PdfStandardFont(PdfFontFamily.zapfDingbats, markerFont.size);\n        var result = layouter._layout(list._getStyledText(), uFont, null, this._size);\n        list._size = result._actualSize;\n        if (list.pen) {\n            result._size = [result._actualSize[0] + 2 * list.pen._width, result._actualSize[1] + 2 * list.pen._width];\n        }\n        return result;\n    };\n    _PdfListLayouter.prototype._createOrderedMarkerResult = function (list, item, index, infromation, findMaxWidth) {\n        list._currentIndex = index;\n        var text = '';\n        if (list.style !== PdfNumberStyle.none) {\n            text = list._getNumber() + list.suffix;\n        }\n        if (list.enableHierarchy) {\n            var collection = infromation.slice();\n            for (var i = 0; i < collection.length; i++) {\n                var listInfo = collection[Number.parseInt(i.toString(), 10)];\n                var orderedList = listInfo._list;\n                if (!(orderedList && orderedList instanceof PdfOrderedList && orderedList.style !== PdfNumberStyle.none)) {\n                    break;\n                }\n                text = listInfo._number + orderedList.delimiter + text;\n                if (!orderedList.enableHierarchy) {\n                    break;\n                }\n            }\n        }\n        var layouter = new _PdfStringLayouter();\n        var font = this._getMarkerFont(list, item);\n        var format = this._getMarkerFormat(list, item);\n        var markerSize = [0, 0];\n        if (!findMaxWidth) {\n            markerSize[0] = this._markerMaxWidth;\n            format = this._setMarkerStringFormat(list, format);\n        }\n        return layouter._layout(text, font, format, markerSize);\n    };\n    _PdfListLayouter.prototype._setMarkerStringFormat = function (list, format) {\n        if (format) {\n            format = Object.assign({}, format);\n        }\n        else {\n            format = new PdfStringFormat();\n        }\n        if (!list.stringFormat) {\n            format.alignment = PdfTextAlignment.right;\n            if (list._markerRightToLeft) {\n                format.alignment = PdfTextAlignment.left;\n            }\n        }\n        if (!this._currentPage && format) {\n            format = Object.assign({}, format);\n            format.alignment = PdfTextAlignment.left;\n        }\n        return format;\n    };\n    _PdfListLayouter.prototype._getMarkerFont = function (list, item) {\n        var markerFont = list.font;\n        if (!markerFont) {\n            markerFont = item.font;\n            if (!markerFont) {\n                markerFont = this._currentFont;\n            }\n        }\n        list.font = markerFont;\n        return markerFont;\n    };\n    _PdfListLayouter.prototype._getMarkerFormat = function (list, item) {\n        var markerFormat = list.stringFormat;\n        if (!markerFormat) {\n            markerFormat = item.stringFormat;\n            if (!markerFormat) {\n                markerFormat = this._currentFormat;\n            }\n        }\n        return markerFormat;\n    };\n    _PdfListLayouter.prototype._getMarkerPen = function (list, item) {\n        var markerPen = list.pen;\n        if (!markerPen) {\n            markerPen = item.pen;\n            if (!markerPen) {\n                markerPen = this._currentPen;\n            }\n        }\n        return markerPen;\n    };\n    _PdfListLayouter.prototype._getMarkerBrush = function (list, item) {\n        var markerBrush = list.brush;\n        if (!markerBrush) {\n            markerBrush = item.brush;\n            if (!markerBrush) {\n                markerBrush = this._currentBrush;\n            }\n        }\n        return markerBrush;\n    };\n    _PdfListLayouter.prototype._getNextPage = function (page) {\n        var document = page._crossReference._document;\n        if (page._pageIndex < document.pageCount - 1) {\n            return document.getPage(page._pageIndex + 1);\n        }\n        else {\n            return document.addPage();\n        }\n    };\n    return _PdfListLayouter;\n}());\nexport { _PdfListLayouter };\n"],"names":["_toUnsigned","value","bits","Math","pow","_toSigned16","_toSigned32","_copyRange","target","at","source","start","end","length","max","min","i","j","Number","parseInt","toString","_checkType","imageData","header","_getDecoder","decoder","_JpegDecoder","Error","_PngDecoder","_checkRotation","page","height","left","topValue","rotation","PdfRotationAngle","angle90","angle180","angle270","size","_getPageIndex","loadedDocument","pageDictionary","index","pageCount","getPage","_pageDictionary","_annotationFlagsToString","flag","values","PdfAnnotationFlag","hidden","push","invisible","locked","noRotate","noView","noZoom","print","readOnly","toggleNoView","default","join","_stringToAnnotationFlags","_stringToPdfString","charCodeAt","encoding","TextDecoder","fatal","decode","_stringToBytes","e","buffer","translateTable","code","String","fromCharCode","charAt","isDirect","isPassword","destination","bytes","charCode","Uint8Array","_areArrayEqual","first","second","_numberToString","isInteger","toFixed","_areNotEqual","current","result","_bytesToString","isJson","stringBuffer","_decodeUnicodeBytes","apply","chunkEnd","chunk","subarray","byte","codePoint","_stringToUnicodeArray","output","_byteArrayToHexString","byteArray","nextHexByte","toUpperCase","_hexStringToByteArray","hexString","array","substring","_hexStringToString","_isWhiteSpace","ch","_decodeChunk","input","chr1","chr2","chr3","enc2","enc3","key","resultIndex","totalLength","replace","Array","indexOf","_decode","outputChunks","decodedChunk","offset","_i","outputChunks_1","set","from","_encodeChunk","isLastChunk","byte1","byte2","byte3","value1","value2","value3","value4","_encode","currentChar","_getInheritableProperty","dictionary","isArray","stopWhenFound","parentKey","arguments","refSet","Set","_PdfDictionary","objId","has","add","getArray","get","undefined","hasParent","element","_parseRectangle","isWidget","rectangle","x","y","width","elements","x1","y1","x2","y2","parseFloat","_calculateBounds","rect","mBox","mediaBox","cropBox","_toRectangle","abs","_fromRectangle","_getUpdatedBounds","pageWidth","pageHeight","_convertToColor","colorString","color","_getColorValue","exec","_parseColor","entry","round","r","g","b","c","m","k","fBlack","_mapBorderStyle","style","token","PdfBorderStyle","dot","dashed","beveled","inset","underline","_PdfName","_mapBorderEffectStyle","PdfBorderEffectStyle","solid","cloudy","_reverseMapEndingStyle","PdfLineEndingStyle","openArrow","closedArrow","rOpenArrow","rClosedArrow","butt","diamond","circle","square","slash","_mapLineEndingStyle","defaultValue","none","toLowerCase","_mapHighlightMode","mode","PdfHighlightMode","noHighlighting","outline","invert","_reverseMapHighlightMode","_reverseMapBlendMode","PdfBlendMode","multiply","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","hue","saturation","luminosity","_mapBlendMode","normal","name","_floatToString","returnString","_addProcSet","procset","update","_getNewGuidString","random","_escapePdfName","char","_getBezierArc","extent","swap","angle","count","ceil","firstAngle","secondAngle","half","PI","cos","sin","points","zero","one","cosZero","cosOne","sinZero","sinOne","_findPage","document","reference","annots","ref","_PdfReference","_checkField","check","state","actual","_getItemValue","itemDictionary","itemValue","appearance","_PdfBaseStream","keys_1","forEach","_getStateTemplate","item","template","_PdfCheckFieldState","checked","_dictionary","stream","getRaw","PdfTemplate","_crossReference","colorName","_setMatrix","box","_content","matrix","_PdfTransformationMatrix","_translate","_rotate","_matrix","_elements","_styleToString","PdfCheckBoxStyle","cross","star","_stringToStyle","_mapMeasurementUnit","unitString","unit","PdfMeasurementUnit","centimeter","inch","millimeter","pica","point","_mapMarkupAnnotationType","text","type","PdfTextMarkupAnnotationType","highlight","squiggly","strikeOut","_reverseMarkupAnnotationType","_mapGraphicsUnit","_PdfGraphicsUnit","_mapRubberStampIcon","iconString","icon","PdfRubberStampAnnotationIcon","approved","asIs","completed","confidential","departmental","draft","experimental","expired","final","forComment","forPublicRelease","informationOnly","notApproved","notForPublicRelease","preliminaryResults","sold","topSecret","void","_mapPopupIcon","PdfPopupIcon","note","comment","help","insert","newParagraph","paragraph","_reverseMapAnnotationState","PdfAnnotationState","accepted","rejected","cancel","marked","unmarked","unknown","_mapAnnotationState","_reverseMapAnnotationStateModel","PdfAnnotationStateModel","review","_mapAnnotationStateModel","_mapAttachmentIcon","PdfAttachmentIcon","pushPin","tag","graph","paperClip","_mapAnnotationIntent","intentString","intent","PdfAnnotationIntent","freeTextCallout","freeTextTypeWriter","_reverseMapPdfFontStyle","PdfFontStyle","bold","italic","strikeout","_getSpecialCharacter","_getLatinCharacter","_encodeValue","hex","_getCommentsOrReview","annotation","isReview","reviewHistory","comments","_checkReview","_checkComment","_updateVisibility","_map","F","_updated","PdfFormFieldVisibility","hiddenPrintable","visible","DV","mkDict","BG","_removeDuplicateReference","crossTable","oldAppearance","_isNew","_fetch","appearanceDictionary","_removeDuplicateFromResources","_cacheMap","delete","resources","_removeReferences","crossReference","firstKey","secondKey","normalElement","_PdfStream","_defaultToString","Object","prototype","call","_obtainFontDetails","form","widget","field","fontSize","font","defaultAppearance","fontFamily","textCollection","split","trim","fonts","fontDictionary","baseFont","textFontStyle","regular","_getFontStyle","includes","_mapFont","PdfStandardFont","PdfFontFamily","helvetica","_circleCaptionFont","fontFamilyString","position","PdfLineAnnotation","_isLoaded","courier","symbol","timesRoman","zapfDingbats","PdfCjkStandardFont","PdfCjkFontFamily","monotypeSungLight","sinoTypeSongLight","monotypeHeiMedium","hanyangSystemsGothicMedium","hanyangSystemsShinMyeongJoMedium","heiseiKakuGothicW5","heiseiMinchoW3","fontData","_tryParseFontStream","_hasData","base64String","PdfTrueTypeFont","PdfAnnotation","_type","_PdfAnnotationType","widgetAnnotation","PdfField","widgetDictionary","apperance","resourcesDictionary","descendant","descendantFont","fontDescriptor","fontFile","getByteRange","_checkInkPoints","inkPointsCollection","previousCollection","_obtainDestination","destinationArray","_document","bottom","right","zoom","pageNumber","document_1","leftValue","angle0","PdfDestination","_index","_setValidation","PdfDestinationMode","fitR","fitH","fitToPage","_updateBounds","bounds","_bounds","_page","_pageSettings","pageSettings","pageBounds","margins","top","cropBoxOrMediaBox","_getCropOrMediaBox","_decodeText","isColorSpace","startsWith","endsWith","codeUnit","_getSize","_stringToBigEndianBytes","_convertNumber","intArabic","numberStyle","PdfNumberStyle","numeric","lowerLatin","_arabicToLetter","lowerRoman","_arabicToRoman","upperLatin","upperRoman","retval","romanNumerals_1","_a","numeral","arabic","remainder","floor","_appendChar","_isNullOrUndefined","_isArrayEqual","arr1","arr2","ii","_defineProperty","obj","prop","serializable","defineProperty","enumerable","configurable","writable","_compressStream","isExport","getString","dataArray","sw","CompressedStreamWriter","write","close","getCompressedString","_isRightToLeftCharacters","test","_updatePageCount","valueToIncrement","parentDictionary","_updatePageSettings","settings","rotate","_clearPrimitiveCaches","nameCache","create","cmdCache","refCache","_isName","_isCommand","command","_PdfCommand","PdfLineIntent","PathPointType","PdfLineCaptionType","PdfCrossReferenceType","PdfTextAlignment","PdfCircleMeasurementType","DataFormat","PdfFormFieldsTabOrder","_FieldFlag","_SignatureFlag","PdfPermissionFlag","PdfPageOrientation","PdfTextDirection","PdfSubSuperScript","PdfFillMode","PdfDashStyle","PdfLineCap","PdfLineJoin","_PdfWordWrapType","_FontDescriptorFlag","_TrueTypeCmapFormat","_TrueTypeCmapEncoding","_TrueTypePlatformID","_TrueTypeMicrosoftEncodingID","_TrueTypeMacintoshEncodingID","_TrueTypeCompositeGlyphFlag","_ImageFormat","_TokenType","PdfTextStyle","_PdfColorSpace","PdfUnorderedListStyle","PdfLayoutType","PdfLayoutBreakType","PdfListMarkerAlignment","PdfPrintState","_PdfStreamWriter","this","_newLine","_whiteSpace","_stream","_writeOperator","_saveGraphicsState","_restoreGraphicsState","_writeComment","_setGraphicsState","_modifyCtm","_toString","_modifyTM","_setColorSpace","arg2","arg3","colorSpaceName","rgb","cmyk","grayScale","_setColor","forStroking","_appendRectangle","_writePoint","_clipPath","isEvenOdd","_fillPath","_closeFillPath","_strokePath","_closeStrokePath","_fillStrokePath","_closeFillStrokePath","_endPath","_setFont","_setTextScaling","textScaling","_closePath","_startNextLine","_setLeading","leading","_write","_showText","_writeText","string","builder","data","_escapeSymbols","_beginText","_endText","_beginPath","_appendLineSegment","_appendBezierSegment","x3","y3","_setTextRenderingMode","renderingMode","_setCharacterSpacing","charSpacing","_setWordSpacing","wordSpacing","_showNextLineText","unicode","_setLineDashPattern","pattern","patternOffset","tempPattern","_setMiterLimit","miterLimit","_setLineWidth","_setLineCap","lineCapStyle","_setLineJoin","lineJoinStyle","_executeObject","_beginMarkupSequence","_endMarkupSequence","_clear","_bytes","currentData","PdfStringFormat","arg1","horizontalScalingFactor","rightToLeft","_wordWrapType","word","_isList","lineLimit","alignment","lineAlignment","PdfVerticalAlignment","characterSpacing","lineSpacing","clipPath","firstLineIndent","_internalParagraphIndent","measureTrailingSpaces","noClip","_pdfSubSuperScript","__extends","extendStatics","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","_PdfFontMetrics","_lineGap","_getAscent","format","_ascent","_getDescent","_descent","_getLineGap","_getHeight","clearTypeFonts","clearTypeFontCollection","_size","subSuperScript","subScript","_subScriptSizeFactor","superScript","_superscriptSizeFactor","_WidthTable","_StandardWidthTable","_super","widths","_this","_itemAt","_toArray","_CjkWidthTable","defaultWidth","_defaultWidth","_from","_to","_appendToArray","_add","_CjkWidth","_CjkSameWidth","to","_widthFrom","_widthTo","_width","_CjkDifferentWidth","_widths","_PdfStringLayouter","_layout","_initialize","_doLayout","_font","_format","_rectangle","_reader","_StringTokenizer","_pageHeight","_close","_PdfStringLayoutResult","lineResult","lines","line","_peekLine","lineIndent","_getLineIndent","_layoutLine","numSymbolsInserted","returnedValue","_copyToResult","success","_read","_readLine","_finalizeResult","firstLine","paragraphIndent","_getLineHeight","_metrics","_getLineWidth","getLineWidth","_lineHeight","maxWidth","lineWidth","lineType","_LineType","firstParagraphLine","readWord","_addToLineResult","newLineBreak","curLine","curIndent","reader","_peekWord","_length","_position","curLineWidth","_getWrapType","wordOnly","_remainder","_peek","_wordWrap","character","stringValue","layoutBreak","_readWord","lastParagraphLine","_layoutLines","breakType","info","_LineInfo","_text","_lineType","_actualSize","allowPartialLines","maxHeight","_lines","len","expHeight","_trimLine","_end","_readToEnd","_empty","textValue","text2","_tab","_spaces","_TrueTypeTableInfo","_offset","_checksum","_TrueTypeOS2Table","_TrueTypePostTable","_TrueTypeNameTable","_TrueTypeMicrosoftCmapSubTable","_TrueTypeHorizontalHeaderTable","_TrueTypeHeadTable","_TrueTypeCmapTable","_TrueTypeCmapSubTable","_TrueTypeAppleCmapSubTable","_TrueTypeTrimmedCmapSubTable","_TrueTypeReader","_int32Size","_isFont","_isMacTtf","_isMacFont","_missedGlyphs","_tableNames","_entrySelectors","_fontData","_macintoshDictionary","Dictionary","_microsoftDictionary","_internalMacintoshGlyphs","_internalMicrosoftGlyphs","_TrueTypeMetrics","_readFontDictionary","nameTable","_readNameTable","headTable","_readHeadTable","_initializeFontName","_macStyle","_check","table","_readInt16","_tableDirectory","table_1","tableKey","_readString","_readInt32","setValue","_lowestPosition","_fixOffsets","minOffset","MAX_VALUE","tableKeys","keys","getValue","shift","version","tableInfo","_getTable","_formatSelector","_readUInt16","_recordsCount","_nameRecords","record","_TrueTypeNameRecord","_platformID","_encodingID","_languageID","_nameID","_name","_version","_readFixed","_fontRevision","_checkSumAdjustment","_readUInt32","_magicNumber","_flags","_unitsPerEm","_created","_readInt64","_modified","_xMin","_yMin","_xMax","_yMax","_lowestReadableSize","_fontDirectionHint","_indexToLocalFormat","_glyphDataFormat","_readHorizontalHeaderTable","_ascender","_descender","_advanceWidthMax","_minLeftSideBearing","_minRightSideBearing","_xMaxExtent","_caretSlopeRise","_caretSlopeRun","_metricDataFormat","_numberOfHMetrics","_readOS2Table","_xAvgCharWidth","_usWeightClass","_usWidthClass","_fsType","_ySubscriptXSize","_ySubscriptYSize","_ySubscriptXOffset","_ySubscriptYOffset","_ySuperscriptXSize","_ySuperscriptYSize","_ySuperscriptXOffset","_ySuperscriptYOffset","_yStrikeoutSize","_yStrikeoutPosition","_sFamilyClass","_panose","_readBytes","_ulUnicodeRange1","_ulUnicodeRange2","_ulUnicodeRange3","_ulUnicodeRange4","_vendorIdentifier","_fsSelection","_usFirstCharIndex","_usLastCharIndex","_sTypoAscender","_sTypoDescender","_sTypoLineGap","_usWinAscent","_usWinDescent","_ulCodePageRange1","_ulCodePageRange2","_sxHeight","_sCapHeight","_usDefaultChar","_usBreakChar","_usMaxContext","_readPostTable","_formatType","_italicAngle","_underlinePosition","_underlineThickness","_isFixedPitch","_minType42","_maxType42","_minType1","_maxType1","_readWidthTable","glyphCount","unitsPerEm","glyph","_TrueTypeLongHorMetric","_advanceWidth","_lsb","glyphWidth","_readCmapTable","_tablesCount","subTables","subTable","_readCmapSubTable","_getCmapEncoding","apple","_readAppleCmapTable","microsoft","_readMicrosoftCmapTable","trimmed","_readTrimmedCmapTable","_maxMacIndex","glyphInfo","_TrueTypeGlyph","_readByte","_getWidth","_charCode","macintosh","_addGlyph","collection","_microsoft","_segCountX2","_searchRange","_entrySelector","_rangeShift","segCount","_endCount","_readUShortArray","_reservedPad","_startCount","_idDelta","_idRangeOffset","_glyphID","codeOffset","id","_firstCode","_entryCount","_fontFamily","_postScriptName","containsKey","glyphCode","platformID","encodingID","roman","_microsoftGlyphs","_macintoshGlyphs","_initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","_isSymbol","factor","_winAscent","_macAscent","_capHeight","_winDescent","_macDescent","_leading","_fontBox","_stemV","_widthTable","_updateWidth","_contains","_getGlyph","byteToProcess","space","_getString","_getDefaultGlyph","_setOffset","_readFontProgram","chars","glyphChars","_getGlyphChars","locaTable","_readLocaTable","_bIsLocaShort","_updateGlyphChars","result1","_generateGlyphTable","glyphTableSize","newLocaTable","newGlyphTable","result2","_updateLocaTable","newLocaSize","newLocaUpdated","_getFontProgram","activeGlyphs","sort","a","glyphSize","glyphIndex","_offsets","glyphSizeAligned","_align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","bShort","_TrueTypeLocaTable","clone","glyphCharKeys","nextKey","_processCompositeGlyph","glyphOffset","glyphHeader","_TrueTypeGlyphHeader","numberOfContours","xMin","yMin","xMax","yMax","skipBytes","flags","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","bLocaIsShort","writer","_BigEndianWriter","_writeShort","_writeInt","_data","newLocaTableOut","locaTableSize","_getFontProgramLength","fontProgramLength","entrySelector","_writeCheckSums","_writeGlyphs","tableNames","tableName","charKeys","usedTablesSize","nextTableSize","_writeString","checksum","_calculateCheckSum","_writeUInt","pos","byte4","_writeBytes","buff","i_1","written","read","_createInternals","obj1","_isFontPresent","isUnicode","i1","i2","i3","i4","low","n","_getCharacterWidth","_convertString","capacity","int32Size","int16Size","int64Size","_bufferLength","_buffer","length_1","_internalPosition","_flush","_UnicodeTrueTypeFont","_nameString","_isEmbedFont","_cmapPrefix","_cmapEndCodeSpaceRange","_cmapBeginRange","_cmapEndRange","_cmapSuffix","_fontSize","_fontString","_Initialize","_beginSave","_descendantFontBeginSave","_cmapBeginSave","_fontDictionaryBeginSave","_fontProgramBeginSave","_fontDescriptor","_fontProgram","_usedChars","_getDescendantWidth","_descendantFont","_fontDictionary","_cmap","_ttfReader","_ttfMetrics","_subsetName","_getFontName","_createDescendantFont","_createFontDictionary","_getInternals","ttfMetrics","_height","_isBold","_createFontDescriptor","systemInfo","_createSystemInfo","descriptor","metrics","_getDescriptorFlags","_getBoundBox","_generateFontProgram","fontProgram","_clearStream","_generateCmap","_toHexString","isCaseChange","s","last","middlePart","nextRange","_currentObj","fixedPitch","symbolic","nonSymbolic","_isItalic","forceBold","_setSymbols","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","_ArabicShapeRenderer","_arabicCharTable","_alef","_alefHamza","_alefHamzaBelow","_alefMadda","_lam","_hamza","_zeroWidthJoiner","_hamzaAbove","_hamzaBelow","_wawHamza","_yehHamza","_waw","_alefsura","_yeh","_farsiYeh","_shadda","_madda","_lwa","_lwawh","_lwawhb","_lwawm","_bwhb","_fathatan","_superalef","_vowel","_arabicMapTable","Map","_getCharacterShape","_shape","shapeText","_doShape","level","str","next","previous","_ArabicShape","present","_ligature","shapeCount","_getShapeCount","_shapes","_shapeValue","_append","_shapeLigature","shape","_shapeType","_shapeVowel","_Bidirectional","_indexes","_indexLevels","_mirroringShape","_update","_doMirrorShaping","res","_getLogicalToVisualString","inputText","isRtl","rtlCharacters","_RtlCharacters","_getVisualOrder","_setDefaultIndexLevel","_doOrder","resultBuilder","sIndex","eIndex","odd","even","_reArrange","pstart","pend","temp","_textOrder","_rtlCharacterTypes","L","lre","lro","R","AL","rle","rlo","pdf","EN","ES","ET","AN","CS","nsm","BN","B","S","WS","ON","_charTypes","_getCharacterCode","_doVisualOrder","_levels","characterCodes","_setDefaultLevels","_setLevels","_updateLevels","_result","_getEmbeddedCharactersLength","preview","preType","_checkEmbeddedCharacters","startType","endType","charType","_checkEuropeanDigits","_checkArabicCharacters","_checkEuropeanNumberSeparator","_checkEuropeanNumberTerminator","l","_getLength","_checkOtherNeutrals","_checkOtherCharacters","pst","_checkCharacters","validSet","t","lt","tt","rt","_RtlRenderer","_openBracket","_closeBracket","rtl","wordSpace","_isUnicode","_customLayout","_splitLayout","words","_customSplitLayout","_getGlyphIndex","glyphs","_glyphIndex","ttfReader","_fontInternal","unicodeLine","_UnicodeLine","textDirection","layouted","txt","_addCharacter","PdfFont","_style","_fontMetrics","_setInternals","internals","_pdfFontInternals","_getCharacterCount","symbols","numSymbols","curIndex","measureString","arg4","arg5","temparg2","layoutArea","temparg3","_applyFormatSettings","realWidth","_checkStyle","_initializeInternals","_getCharacterWidthInternal","_PdfStandardFontMetricsFactory","_getMetrics","_PdfCjkStandardFontMetricsFactory","_getEncoding","_getDescendantFont","_PdfCjkFontDescriptorFactory","_getFontDescriptor","_getSystemInformation","systemInformation","_createFontInternal","_isEmbed","_isUnicodeFont","_getUnicodeLineWidth","codeWidth","internalFont","fontStyle","_getHelveticaMetrics","_getCourierMetrics","_getTimesMetrics","_getSymbolMetrics","_getZapfDingbatsMetrics","_subSuperScriptFactor","_helveticaBoldItalicAscent","_helveticaBoldItalicDescent","_helveticaBoldItalicName","_arialBoldWidth","_helveticaBoldAscent","_helveticaBoldDescent","_helveticaBoldName","_helveticaItalicAscent","_helveticaItalicDescent","_helveticaItalicName","_arialWidth","_helveticaAscent","_helveticaDescent","_helveticaName","_courierBoldItalicAscent","_courierBoldItalicDescent","_courierBoldItalicName","_fixedWidth","_courierBoldAscent","_courierBoldDescent","_courierBoldName","_courierItalicAscent","_courierItalicDescent","_courierItalicName","_courierAscent","_courierDescent","_courierName","_timesBoldItalicAscent","_timesBoldItalicDescent","_timesBoldItalicName","_timesRomanBoldItalicWidths","_timesBoldAscent","_timesBoldDescent","_timesBoldName","_timesRomanBoldWidth","_timesItalicAscent","_timesItalicDescent","_timesItalicName","_timesRomanItalicWidth","_timesAscent","_timesDescent","_timesName","_timesRomanWidth","_symbolAscent","_symbolDescent","_symbolName","_symbolWidth","_zapfDingbatsAscent","_zapfDingbatsDescent","_zapfDingbatsName","_zapfDingbatsWidth","_getHanyangSystemsGothicMedium","widthTable","_getHanyangSystemsShinMyeongJoMedium","_getHeiseiKakuGothicW5","_getHeiseiMinchoW3","_getMonotypeHeiMedium","_getMonotypeSungLight","_getSinoTypeSongLight","_fillMonotypeSungLight","fontMetrics","fontBox","_fillFontBox","_fillKnownInformation","_fillHeiseiKakuGothicW5","fontBoxItalic","_fillHanyangSystemsShinMyeongJoMedium","_fillHeiseiMinchoW3","_fillSinoTypeSongLight","_fillMonotypeHeiMedium","_fillHanyangSystemsGothicMedium","PdfPath","pathTypes","_points","_pathTypes","_isRoundedRectangle","_fillMode","winding","_isStart","_isXps","_brush","_pen","addPath","_addPath","pathPoints","slice","addLine","_addPoints","_addLines","linePoints","_addPoint","startIndex","endIndex","lastPoint","addArc","startAngle","sweepAngle","list","bezier","addRectangle","startFigure","closeFigure","addPolygon","newPoints","addEllipse","addBezier","startX","startY","firstX","firstY","secondX","secondY","endX","endY","_addBezierPoints","pointsCollection","inner1","inner2","addPie","closePath","closeAllFigures","pointType","_getBounds","xmin","xmax","ymin","ymax","PdfImage","_imageWidth","_imageHeight","_imagePhysicalDimension","_getPointSize","_horizontalResolution","draw","graphics","needSave","save","translateTransform","drawImage","restore","horizontalResolution","ucX","_PdfUnitConvertor","ucY","_convertUnits","pixel","PdfGraphics","content","xref","_pendingResource","_hasResourceReference","PdfPage","_source","_template","_resourceObject","_sw","_clipBounds","_m","_resourceMap","other","_transparencies","_setTransparencyData","PdfGraphicsState","_textRenderingMode","_charSpacing","_characterSpacing","_textScaling","_wordSpacing","_currentBrush","_currentPen","_currentFont","_graphicsState","_doRestore","pop","_transformationMatrix","drawRectangle","_beginMarkContent","_setPenBrush","_drawGraphicsPath","pen","brush","_endMarkContent","drawBezier","_stateControl","drawPie","_constructPiePath","drawPolygon","drawEllipse","_constructArcPath","drawArc","_layer","_beginLayer","_isEndState","_parentLayer","physicalDimension","_save","_getTranslateTransform","_getScaleTransform","sourceDictionary","keyName","isNew","_updateImageResource","resource","drawTemplate","_isExported","_isResourceExport","_importStream","scaleX","scaleY","needScale","trunc","needTransform","_origin","scaleApplied","templateMatrix","templateBox","templateScaleX","templateScaleY","roundScaleX","roundScaleY","_isAnnotationTemplate","_needScale","_scale","_isSignature","keyName_1","ref_1","isReference","_resources","base","_getNextReference","_processResources","_updatePendingResource","_reference","_updateFontResource","image","_imageStream","_maskStream","_maskReference","internal","drawPath","path","_buildUpPath","fillMode","drawRoundedRectangle","radius","diameter","arc","sweep","_writePen","_dashPattern","setPattern","_dashOffset","_lineJoin","_lineCap","_miterLimit","_color","drawString","layouter","_checkCorrectLayoutRectangle","_drawStringLayoutResult","types","_getBezierPoint","_mediaBoxUpperRightBound","_colorSpaceInitialized","_startCutIndex","_initializeCurrentColorSpace","_brushControl","_penControl","_fontControl","hasResource","PdfPen","PdfBrush","layoutRectangle","shouldClip","clipRegion","clipBounds","middle","setClip","isItalic","_applyStringSettings","verticalAlignShift","_getTextVerticalAlignShift","_skewTransform","_drawLayoutResult","_underlineStrikeoutText","_getNextPage","_pageIndex","addPage","tm","_TextRenderingMode","fill","setLineWidth","fillStroke","stroke","fontName","isBoldFont","toLocaleLowerCase","isBold","clipFlag","cs","ws","ttfFont","lineInfo","hAlignShift","_getHorizontalAlignShift","_drawUnicodeLine","_drawAsciiLine","vAlignShift","baseline","useWordSpace","_justifyLine","rtlRender","blocks","rightAlign","_drawUnicodeBlocks","_breakUnicodeLine","tokens","_convertToUnicode","xShift","spaceWidth","tokenWidth","textHeight","boundsHeight","boundsWidth","center","shouldJustify","_shouldJustify","hasWordSpacing","whitespacesCount","justify","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","isUnderline","isStrikeout","linePen","_createUnderlineStrikeoutPen","underlineYOffset","strikeoutYOffset","_lineCount","hShift","drawLine","textSize","layoutedRectangle","needClosing","isBrush","isPen","alternate","_initializeCoordinates","cbox","location_1","needTransformation","mbox","_cropBox","scaleTransform","_multiply","rotateTransform","setTransparency","transparencyData","transparencyKey","_TransparencyData","transparencyDict","_key","tkey","tdata","_clipTranslateMargins","angleX","angleY","_getSkewTransform","_skew","_Matrix","tanA","tan","_degreeToRadians","tanB","skew","degreesX","arg6","_clone","_transform","_offsetX","_offsetY","_g","_dashStyle","flat","miter","_proportions","_updateProportions","_convertFromPixels","_convertToPixels","_XmlWriter","isAppearance","_bufferText","_namespaceStack","_elementStack","_currentState","_skipNamespace","_Namespace","_XmlElement","_set","_attributeStack","_writeStartDocument","standalone","_rawText","_writeStartElement","localName","prefix","namespace","_checkName","_startElementContent","_lookupPrefix","_lookupNamespace","_writeStartElementInternal","_writeEndElement","_writeEndElementInternal","_prefix","_localName","splice","_previousTop","_writeElementString","_writeAttributeString","_writeStartAttribute","_writeStringInternal","_writeEndAttribute","_writeInternal","_writeRaw","isRawString","_destroy","_writeStartAttributePrefixAndNameSpace","_writeStartAttributeSpecialAttribute","_skipPushAndWrite","_pushNamespaceExplicit","_pushNamespaceImplicit","_writeStartAttributeInternal","_writeNamespaceDeclaration","namespaceUri","_writeStartNamespaceDeclaration","inAttributeValue","_kind","_namespaceUri","_addNamespace","ns","kind","_lookupNamespaceIndex","existingNsIndex","isValid","_addAttribute","namespaceName","_XmlAttribute","_isDuplicate","previousTop","_ExportHelper","_asPerSpecification","_fileName","_formKey","_exportEmptyFields","_groupReferences","_groupHolders","_richTextPrefix","_table","_fields","_richTextValues","_jsonData","_openingBrace","_openingBracket","_closingBrace","_closingBracket","_colon","_doubleQuotes","_comma","_space","fdfString","_xmlImport","_exportFormFieldsData","export","_getEncodedFontDictionary","fieldName","_getEncodedValue","selectedValue","_getExportValue","PdfListBoxField","PdfComboBoxField","_obtainSelectedValue","radioButton","PdfRadioButtonListField","selectedIndex","options","isNaN","PdfCheckBoxField","_getAppearanceStateValue","itemAt","_defaultIndex","_exportFormFieldData","replaceValue","PdfTextBoxField","multiLine","PdfListField","_getAnnotationType","subtype","_getValue","primitive","_getValidString","colorArray","_getColor","kids","kid","structure","_encodeDictionary","_FontStructure","_replaceNotUsedCharacters","root","pdfEncoding","encodingDictionary","fontEncodeDictionary","differencesDictionary","result_1","isSkip_1","holder","updatedString","_fontType","_baseFontEncoding","_fontEncoding","_fontName","_addReferenceToGroup","_handlePopup","annotations","annotationDictionary","popupReference","popup","popupAnnotation","_parseAnnotation","_annotations","_parsedAnnotations","_importField","richTextValue","_getFieldIndex","fieldAt","_importFieldData","selectedValues_1","indexes_1","options_1","_options","option","AP","lowerCase","_containsExportValue","_kidsCount","_checkSelected","asEntry","normalTemplate","_dispose","exportAppearance","_skipBorderStyle","_isAnnotationExport","_isAnnotationImport","_annotationTypes","_annotationAttributes","_xmlDocument","_parser","_XfdfDocument","fileName","_exportAnnotations","_exportFormFields","_checkAnnotationType","_exportAnnotationData","exportEmptyFields","_writeFormFieldData","isAcrobat","_getElements","flag_1","_writeFieldName","hasId","_root","parentElements","newTable","pageIndex","PdfFileLinkAnnotation","PdfTextWebLinkAnnotation","PdfDocumentLinkAnnotation","PdfUriAnnotation","_writeAnnotationData","hasAppearance","borderEffect","_writeDictionary","isBorderStyle","_writeAttribute","_getAppearanceString","_exportMeasureDictionary","sound","soundDictionary","getBytes","fsDictionary","efDictionary","fStream","fDictionary","paramsDictionary","vertices","elementCount","_writeRawData","defaultStyle","inkList","textWriter","_writeAppearanceDictionary","_writeObject","isNewReference","_writePrefix","_writeArray","streamDictionary","_getFormatedString","isParsing","_writeColor","attribute","isLowerCase","_exportMeasureFormatDetails","measurementDetails","_importAnnotations","xml","DOMParser","parseFromString","_readXmlData","documentElement","_importFormData","nodeType","_checkXfdf","xList","getElementsByTagName","child","hasChildNodes","childeNodes","childNodes","childNode","_parseAnnotationData","inReplyTo","IRT","_parseFormData","nodeName","fileNameElement","hasAttribute","getAttribute","fieldList","filedElement","_importFormNodes","node","textName","skip","name_1","parentElement","dataValues","textContent","name_2","richText","innerHTML","hasAttributes","_getAnnotationDictionary","_isImported","_ref","_comments","isValidType","points_1","_addLineEndStyle","_addAnnotationData","_addBorderStyle","_applyAttributeValues","attributes","_parseInnerElements","_addMeasureDictionary","borderEffectDictionary","borderStyleDictionary","isBasicStyle","dashes_1","leaderExtend","_addString","_obtainPoints","_addInt","_addFloatPoints","_addFloat","annotFlag","flagType","_allowImportCustomData","children","this_1","childElement","popupDictionary","vertices_1","innerValue","verticesArray_1","_addAppearanceData","inkListCollection","inkChild","inkChildElement","points_2","pointsArray_1","_addStreamData","parent","raw","_addFileAttachment","_addSound","soundStream","_PdfContentStream","soundReference","fileDictionary","fileStream","param","embeddedFile","fileReference","innerText","atob","rootNode","rootElement","_getAppearance","_getStream","_addKey","_getDictionary","_getArray","_getFixed","_getInt","_getName","_getBoolean","_getData","isImage","_isCompress","Length","Filter","_addArrayElements","name_3","floatValue","intValue","bool","measurement","area","distance","xformat","measureDictionary","dDict","aDict","xDict","dArray","aArray","xArray","_addElements","beginLineStyle","endLineStyle","lineEndingStyles","_differencesDictionary","_getDifferencesDictionary","_getFontEncoding","baseFontEncoding","fontEncoding","differences","lastIndexOf","_decodeHexFontName","hexValue","_JsonDocument","_isImport","_isColorSpace","_isGroupingSupport","isAnnotationAdded","_exportAnnotation","_convertToJson","clear","rcValue","rectArray","_writeInkList","_writeVertices","styleTable","textStyle","bytes_1","vertice","json","details","parentTable","appearanceTable","_writeTable","_convertToJsonArray","isTabSpace","_hasUnicodeCharacters","dataTable","streamTable","baseStream","isImageStream","_initialized","_cipher","streamLength","bufferLength","flateStream","map","unicodeRegex","some","_parseJson","stringData","JSON","parse","pageAnnotations_1","pdfAnnotation","pageCount_1","pageKeys","page_1","pageAnnotation","pageAnnotationKeys","annotationKeys","annotations_1","annotation_1","outColor","dataStream","_addLinePoints","color_1","_parseFloatPoints","_addBoolean","styleKeys_1","style_1","count_1","styleKey","styleValue","gestureKeys","gesture","interactionKeys","convertString","stringify","objectNumber","generationNumber","dashArray","dash","tArray","vArray","_readDictionaryElements","soundStream_1","fileDictionary_1","fileStream_1","param_1","decoded","_parseDictionary","_parseAppearance","int","fixed","boolean","dict","_parseStream","unicodeData","dataKeys","byteString","_parseStreamElements","_pendingResources","_templateOriginalSize","_isReadOnly","_writeTransformation","_isTemplateGraphics","_exportStream","jsonDocument","resourceTable","_appearance","hasCrossReference","isResourceExport","resourceDictionary","PdfAction","_next","PdfGoToAction","arg","_destination","PdfFieldActions","_field","_mouseEnter","_getPdfAction","_updateAction","_mouseLeave","_mouseUp","_mouseDown","_gotFocus","_lostFocus","action","_destinationMode","location","_enableGrouping","_isDuplicatePage","_visible","_isTransparentBackColor","_isTransparentBorderColor","_defaultFont","_appearanceFont","_defaultItemFont","_flatten","_isUpdating","_kids","_form","names","_actualName","_mappingName","mappingName","_alternateName","toolTip","_hasFlags","visibleNotPrintable","flagValue","_visibility","visibility","_defaultAppearance","_da","_PdfDefaultAppearance","_parseBackColor","_updateBackColor","_parseBorderColor","_updateBorderColor","_fieldFlags","required","border","PdfInteractiveBorder","PdfButtonField","borderStyle","_dash","_updateBorder","rotationAngle","noExport","index1","_tabIndex","tabOrder","manual","_tabOrder","annotationCollection","PdfAnnotationCollection","_annotationIndex","widgetRef","_gray","_silver","_white","_black","mkDictionary","_mkDictionary","hasTransparency","_hasBackColor","backColor","bgArray","_hasBorderColor","borderColor","BC","bsDictionary","W","_parsedItems","PdfWidgetAnnotation","_load","setAppearance","_setAppearance","removeItemAt","itemsCount","_getPage","_removeAnnotation","parsedItems_1","removeItem","da","bs","_checkFieldFlag","_initializeFont","fontDict","hasFont","_drawRectangularControl","parameter","backBrush","_drawBorder","borderPen","borderWidth","_drawLeftTopShadow","_grayBrush","_drawRightBottomShadow","_silverBrush","_whiteBrush","shadowBrush","_drawRadioButton","checkSymbol","unchecked","pressedChecked","pressedUnchecked","_drawRoundBorder","_drawRoundShadow","outward","foreBrush","_drawCheckBox","inflateValue","shadowColor","leftTop","rightBottom","_blackBrush","yOffset","extraBorder","xPosition","xOffset","pageRotationAngle","state_1","size_1","z","_addToKid","currentIndex","_drawTemplate","_addToOptions","_listValues","_value","_pdfFont","_addAppearance","_rotateTextBox","_checkIndex","_getTextAlignment","_textAlignment","_setTextAlignment","_stringFormat","_parseItems","_autoResizeText","_defaultValue","password","doNotScroll","doNotSpellCheck","comb","fileSelect","highlightMode","_maxLength","maxLength","_isAutoResize","_spellCheck","_insertSpaces","_multiline","_password","_scrollable","_createItem","_create","textAlignment","actualName","_doPostProcess","isFlatten","_postProcess","_createAppearance","appearanceStream","_PaintParameter","backcolor","insertSpaces","pdfFont","stringFormat","enableGrouping","_drawTextBox","scrollable","multiline","scroll","startlocation","isAutoFontSize","_actions","_assignText","fieldDictionary","pushButton","pressed","isPressed","isSizeZero","font_1","previousFont","currentFont","textWidth","_drawPressedButton","_drawButton","PdfStateItem","V","AS","_drawAppearance","_styleText","normalChecked","normalCheckedReference","normalUnchecked","normalUncheckedReference","normalDictionary","normalReference","pressChecked","pressCheckedReference","pressUnchecked","pressUncheckedReference","pressedDictionary","pressedReference","_selectedIndex","_retrieveOptionValue","_obtainSelectedIndex","name_5","PdfRadioButtonListItem","_setField","parsedItems_2","radio","_optionValue","checkName","asName","actualValue","values_1","_tryGetIndex","values_2","indices_1","multiSelect","_multiSelect","edit","_editable","_optionArray","PdfListFieldItem","addItem","parsedItems_3","fieldItem","_addEmptyWidget","_obtainFont","_getFontHeight","selectedIndexes","combo","acroForm","fontString","verticalAlignment","_drawComboBox","doubleBorderWidth","padding","itemTextBound","x_3","itemFont","widths_1","h","_drawListBox","location_2","selected","PdfSignatureField","_isSigned","_checkSigned","needAppearance","firstItemTemplate","_getItemTemplate","_flattenSignature","signatureTemplate","isSigned","_calculateTemplateBounds","graphicsRotation","_obtainGraphicsRotation","atan2","sliced","PdfAppearance","annot","_templateNormal","_isExport","_opacity","_isAllRotation","_popUpFont","_authorBoldFont","_lineCaptionFont","_isTransparentColor","_isRotated","_isChanged","_author","author","hasKey","_border","PdfAnnotationBorder","_hRadius","_vRadius","hRadius","vRadius","_isWidget","_annotFlags","extColor","_innerColor","innerColor","_creationDate","_stringToDate","_dateToString","_modifiedDate","_isBounds","_caption","PdfAnnotationCaption","_cap","capType","inline","caption","cap","opacity","_subject","subject","prevRotate","_getRotationAngle","_isFlattenPopups","_ratio","_getDocumentLayer","_referenceHolder","getValues","setValues","assignXref","_getMediaOrCropBox","cropOrMediaBox","_getBoundsValue","_validateTemplateMatrix","isRotatedMatrix","isValidMatrix","locationX","locationY","templateX","templateY","annotationBounds","_locationDisplaced","remove","_flattenAnnotationTemplate","isNormalMatrix","currentBounds","measure","flatten","_needInitializeGraphics","rubberStampAnnotation","PdfAngleMeasurementAnnotation","_o","radians","_drawCloudStyle","overlap","_isClockWise","sortedPoints","previousPoint","circles","circleOverlap","currentPoint","dx","dy","sqrt","cur","_CloudStyleArc","previousCurvedStyleArc","currentCurvedStyleArc","_getIntersectionDegrees","endAngle","sweepAngel","tempPoints","pdfpath","incise","sum","radian","cosvalue","acos","_obtainStyle","dashPattern","isDash","intensity","_createRectangleAppearance","rdArray","cloudRectangle","RD","nativeRectangle","_drawRectangleAppearance","graphicsPath","sublist","_createCircleAppearance","nativeBounds","_drawCircleAppearance","top_1","controlPointList","startPointList","endPointList","_createBezier","third","bezierPoints","_populateBezierPoints","currentIteration","midPoint1","_midPoint","midPoint2","midPoint3","_getAngle","angleRatio","atan","_getAxisValue","_degreeToRadian","_drawLineEndStyle","axisPoint","isBegin","arraowAngle","startPoint","fourth","_drawLineStyle","lineStyle","begin","styleArray","_getEqualPdfGraphicsUnit","measurementUnit","graphicsUnit","_createMeasureDictionary","_colorToHex","col","_componentToHex","_getRotatedBounds","rotateAngle","corners","minX","maxX","minY","maxY","_flattenPopUp","_flattenPop","boundsValue","clientSize","annotBounds","rectValue","top_2","track","aBrush","_getForeColor","_drawAuthor","titleRect","_saveGraphics","contentRect","_drawSubject","_flattenLoadedPopUp","_getRectangleBoundsValue","trackingHeight","blendMode","_getBorderColorString","date","dateFormat","Date","year","month","day","hour","minute","timeZone","signature","timeZoneHour","timeZonMinute","setTime","getTime","dateTime","getMonth","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getFullYear","_obtainNativeRectangle","_getPoints","polygonPoints","modifiedPoints","layerCollection","layers","_isMatched","layer","expectedReference","PdfComment","PdfPopupAnnotationCollection","_reviewHistory","_unit","_unitString","lineAnnotation","_linePoints","_leaderExt","leaderExt","_leaderLine","leaderLine","_lineEndingStyle","PdfAnnotationLineEndingStyle","lineStyles","_begin","lineEndingStyle","_leaderOffset","leaderOffset","_lineIntent","lineIntent","lineDimension","lineArrow","_measure","_appearanceTemplate","_createLineMeasureAppearance","isUpdated","boundsArray","_obtainLineBounds","updatedBounds","rectangleBounds","flattenPopups","_isFlatten","_convertToUnit","linePoints1","_obtainLinePoints","rectPath","lineAngle","endPoint","lineDistance","centerWidth","beginLineExt","endLineExt","beginLeaderLine","endLeaderLine","midpoint","centerPoint","captionPosition","nativeRectangle1","ds","dic","_calculateAngle","startPointX","startPointY","endPointX","endPointY","_calculateLineBounds","leaderLineExt","leaderLines","x1y1","x2y2","offsetPoint1","offsetPoint2","startingPoint","endingPoint","beginLineLeader","endLineLeader","beginLinePoint","_getLinePoint","endLinePoint","widthX","heightY","leaderLineValue","_drawLine","PdfCircleAnnotation","_measureType","circleAnnotation","_createCircleMeasureAppearance","reference_1","fontsize","converter","PdfEllipseAnnotation","ellipseAnnotation","reference_2","PdfSquareAnnotation","squareAnnotation","_borderEffect","PdfBorderEffect","_intensity","_createSquareMeasureAppearance","reference_3","_calculateAreaOfSquare","appearanceBounds","tem","PdfRectangleAnnotation","rectangleAnnotation","_isValidTemplateMatrix","reference_4","appearanceTemplate","pointF","PdfPolygonAnnotation","polygonAnnotation","_lineExtension","lineExt","lineExtension","polygonBounds","_createPolygonAppearance","reference_5","backgroundBrush","_getLinePoints","pageSize","PdfPolyLineAnnotation","_beginLine","_endLine","polyLineAnnotation","_polylinePoints","polyLineBounds","_createPolyLineAppearance","reference_6","polyLinepoints_1","_firstIntersectionPoint","_secondIntersectionPoint","_pointArray","angleMeasurementAnnotation","_createAngleMeasureAppearance","v","dDictionary","tDictionary","aDictionary","vDictionary","xDictionary","_getAngleBoundsValue","_radius","midPoint","_startAngle","_sweepAngle","xDiff","yDiff","midpointAngle","up","down","reference1","point1","point2","point3","firstLineDistance","secondLineDistance","intersectionPoint1","intersectionPoint2","_findLineCircleIntersectionPoints","centerX","centerY","intersection1","intersection2","NaN","PdfInkAnnotation","_inkPointsCollection","_previousCollection","_isModified","_isEnableControlPoints","inkAnnotation","_addInkPoints","_createInkAppearance","_obtainInkListCollection","_getInkBoundsValue","removeAt","isDot","inkPoints","pathPointCont","p1","p2","_getControlPoints","controlP1","controlP2","point_1","path1","path2","pointCount","rightVector","xValue","_getSingleControlPoint","yValue","vector","tmpVector","divisor","inkCollection","unshift","isEqual","containsCropOrMediaBox","modifiedInkList","_updateInkListCollection","termsList","subList","isTwoPoints","pointCollection","_calculateInkBounds","innerList","PdfPopupAnnotation","_icon","_iconString","_stateModel","_state","_open","_isReview","_isComment","_comment","_commentSecondHalf","_note","_help","_helpSecondHalf","_insert","_keySecondHalf","_newParagraph","_newParagraphSecondHalf","_paragraph","_paragraphSecondHalf","_obtainIconName","_createPopupAppearance","fileLinkAnnotation","_action","actionDictionary","_addAction","nextAction","uri","_uri","uriAnnotation","linkDict","documentLinkAnnotation","_initializePrimitive","_addDocument","_getDestination","top_3","top_4","referenceArray","referenceValue","top_5","top_6","top_7","_getNamedDestination","catalog","_catalog","_catalogDictionary","_getNamedObjectFromTree","_extractDestination","found","currentDictionary","_getProperKid","_findName","destinationReference","lowerIndex","topIndex","cmp","_stringCompare","kidsArray","_checkLimits","limits","lowerLimit","higherLimit","lowCompare","highCompare","byteArray1","commonSize","resultValue","_array","brushColor","penColor","penWidth","_isActionAdded","_textWebLink","textWebLinkAnnotation","_url","linkSource","_get","PdfAttachmentAnnotation","fileAttachmentAnnotation","_addAttachment","fileSpecification","fileSpectDictionary","toTimeString","efileDictionary","fsReference","Pdf3DAnnotation","movieAnnotation","PdfTextMarkupAnnotation","_textMarkupType","_quadPoints","_boundsCollection","textMarkupAnnotation","_textMarkUpColor","isChanged","boundsCollection","yCrop","heightCrop","_setQuadPoints","_createMarkupAppearance","native","pdfPath","quadPoints","textMarkUpColor","pdfPen","w1","h1","textMarkupType","_drawSquiggly","defaultRect","pathPointsCount","zigZag","textQuadLocation","margin","noofRect","isContainscropOrMediaBox","cropOrMediaBoxX","cropOrMediaBoxY","PdfWatermarkAnnotation","_watermarkText","watermarkAnnotation","_createWatermarkAppearance","_rotateAngle","dictionary_1","PdfRubberStampAnnotation","_stampWidth","_alterRotateBounds","_stampAppearanceFont","createTemplate","templateDictionary","mMatrix","_transformBBox","_createRubberStampAppearance","innerBounds","_obtainInnerBounds","_parseStampAppearance","bBoxValue","xCoordinate","yCoordinate","_transformPoint","point4","_minValue","_maxValue","minimum","maximum","isTransformBBox","isStamp","isRotated","_drawStampAppearance","_obtainBackGroundColor","_obtainBorderColor","rubberFont","_drawRubberStamp","pdfBrush","normalAppearance","normalAppearanceDictionary","PdfSoundAnnotation","soundAnnotation","PdfFreeTextAnnotation","_intentString","_markUpFont","_cropBoxValueX","_cropBoxValueY","_isContentUpdated","freeTextAnnotation","_parsedXMLData","_calloutLines","_getCalloutLinePoints","_obtainLineEndingStyle","collections","rcColor","_updateStyle","rcAlignment","_borderColor","_obtainColor","_annotationIntent","_obtainAnnotationIntent","_parseMarkupLanguageData","_setPaddings","paddings","_paddings","_saveFreeTextDictionary","reference_7","_obtainAppearanceBounds","_obtainText","_obtainTextAlignment","calloutLines","_drawCallOuts","angle_1","_calculateRectangle","outerRectangle","_drawFreeTextRectangle","_drawFreeMarkUpText","innerRectangle","rcFont","alignmentText","body","textDecoration","decorationText","_getXmlFormattedString","isRotation","bounds_1","_left","top_8","_top","_right","_bottom","first_2","second_2","checkPaddingWithFontHeight","_drawFreeTextAnnotation","isSkipDrawRectangle","calloutLinepoints","pointArray","length_2","_obtainCallOutsNative","_calloutsClone","_expandAppearance","isContent","markUpText","_rcText","hasAlignment","pointY","pointX","annotationIntent","markupText","rcContent","xdocument","fontCollection","nameSpaceURI","namespaceURI","styleMap","_collectStyles","_extractStylesToInput","fontDetails","_getFontDetails","_updateFontProperties","updatedFontName","updatedFontStyle","updatedBrush","obtainFont","_fontCollection","nodeStyle","window","getComputedStyle","error","tagName","firstElementChild","nextElementSibling","propertyName","propertyValue","getPropertyValue","property","_obtainFontStyle","_parseTextAlignment","_parseFont","_parseFontSize","_parseFontWeight","_parseFontFamily","_rgbStringToArray","_parseFontStyle","_parseTextDecoration","_parseTextAlign","part","rgbString","match","nameSpaceUri","concat","PdfRedactionAnnotation","redactionAnnotation","_repeat","_textColor","textColor","_overlayText","_createRedactionAppearance","_createNormalAppearance","borderTemplate","_createBorderAppearance","actualWidth","textcolor","overlayText","row","diff","textsize","repeatText","PdfRichMediaAnnotation","richMediaAnnotation","_rotationAngle","_highlightMode","_addWidget","recreateAppearance","reference_8","document_2","_backColor","_setCheckedStatus","fieldValue","_unCheckOthers","isChecked","asValue","apDictionary","keyList_1","_initializeItem","_getBorderEffect","_styleToEffect","isAdded","_addCommentsAndReview","_updateCustomAppearanceResource","_getProperty","actualIndex","_reorderParsedAnnotations","_updateChildReference","childAnnotation","_collection","link","isTextWebLink","_hasValidBorder","_getLinkAnnotation","remote","val","flattenValue","tabIndex","parentReference","_annotation","_parentDictionary","_parseCommentsOrReview","nextAnnotation","_parseReview","_parseComments","remaining","PdfBookmarkBase","_bookMarkList","_isExpanded","_isLoadedBookmark","_reproduceTree","bookmark","contains","title","PdfBookmark","_updateBookmarkList","prev","_updateCount","_removeFirst","_removeLast","_removeCount","_removePrevious","_removeNext","First","Last","Next","Prev","Count","updatedList","isExpanded","firstBookmark","_getBookmark","isBookmark","bookmarkBase","isFirst","bookMark","bookmarkBaseDictionary","bookMarkDictionary","namedDestination","_obtainNamedDestination","_parent","_namedDestination","_title","_textStyle","_obtainTextStyle","_updateTextStyle","nextBookmark","destinationCollection","_destinationCollection","namedDestinations","_namedDestinations","PdfNamedDestination","_PdfNamedDestinationCollection","_addCollection","_findDestination","destinationObject","_location","_zoom","_isValid","_isAnnotationParsed","widgets_1","_parseWidgetReferences","validAnnotations_1","cBox","isValidCropBox","_rotation","_obtainTabOrder","tabs","column","_cBox","_mBox","_orientation","landscape","portrait","_parseGraphics","annotsRef","Annots","merge","_loadContents","saveStream","saveReference","_contents","restoreStream","restoreReference","contentStream","contentReference","_initializeGraphics","contents","isInvalidCase","llx","lly","urx","ury","cx","cy","crx","cry","origin","sign","clip","_getActualBounds","actualSize","_getActualSize","_fetchResources","targetArray","_combineContent","targetStream","_combineIntoSingleArray","arrays","reduce","arr","sourceArray","_destinationBounds","_ImageDecoder","_bitsPerComponent","_noOfComponents","_reset","_getBuffer","outputBuffer","_seek","byteLength","_toUnsigned16","_readUnsigned32","_imageData","jpeg","_readHeader","imgData","isLengthExceed","_readExceededJpegImage","_getImageDictionary","tempString","decodedString","_imageDataAsNumberArray","_getColorSpace","_getDecodeParams","decodeParams","_skipStream","isContinueReading","_getMarker","skippedByte","marker","_InflaterState","_BlockType","_PngChunkTypes","_DecompressedOutput","_usedBytes","_dOutput","_dOutSize","_dOutMask","_writeLD","copyStart","_copyFrom","copied","tailLen","_copyTo","sourceStart","sourceStartIndex_1","sourceStartIndex","_InBuffer","_bBuffer","_bInBuffer","_needsInput","_availableBits","_load16Bits","_getBitMask","_getBits","bitBuffer","avail","_setInput","_skipBits","_skipByteBoundary","_HuffmanTree","_clArray","_loadTree","isLengthTree","_getLengthTree","_getDepthTree","_maxLengthTree","_tBits","_tMask","_createTable","lTree","_maxDepthTree","_calculateHashCode","bit","_bitReverse","newcode","codeArray","ofBits","bitMask","_getNextSymbol","mask","codeLength","_nCLength","_Inflater","_extraLengthBits","_staticDistanceTreeTable","_lengthBase","_distanceBasePosition","_codeOrder","_bfinal","_bLength","_blBuffer","_blockType","unCompressedType","_caSize","_clCodeCount","_extraBits","_lengthCode","_llCodeCount","_output","_input","_loopCounter","_codeList","_cltcl","_inflaterState","readingBFinal","done","vFooter","inputBytes","_inflate","_finished","eob","readingBType","_getBlockType","dynamicType","readingNlCodes","staticType","_llTree","_distanceTree","decodeTop","unCompressedAligning","_getInflaterStateValue","_decodeDynamicBlockHeader","_decodeBlock","_decodeUncompressedBlock","endBlock","unCompressedByte1","_unCompressedByte","unCompressedByte2","unCompressedByte3","unCompressedByte4","decodeUnCompressedBytes","_unusedBytes","inflaterstate","unCompressedByte","_getInflaterState","fb","dCodeResult","fLengthResult","inLengthResult","_inLength","iLength","fLength","_fLength","dCode","_dcode","_distanceCode","readingNdCodes","_readingNDCodes","readingCodes","_readingCodes","readingClCodes","_readingCLCodes","readingTcBefore","readingTcAfter","_readingTCBefore","literalTreeCodeLength","distanceTreeCodeLength","_dCodeCount","_clTree","repeatCount","previousCode","readingHeader","srFooter","rFooter","_DeflateStream","leaveOpen","_leaveOpen","_inflater","cOffset","rCount","inflateResult","png","_isRedGreenBlue","_isDecode","_shades","_ideateDecode","_colors","_bitsPerPixel","_idatLength","_inputBands","_hasValidChunkType","hasValidChunk","iHDR","iDAT","_readImageData","sRGB","_ignoreChunk","pLTE","_readPhotoPlate","iEND","_decodeImageData","tRNS","_readTransparency","tEXt","iTXt","zTXt","hIST","sBIT","iCCP","pHYs","tIME","bKGD","gAMA","cHRM","_currentChunkLength","_getChunkType","_header","_PngHeader","_bitDepth","_colorType","_compression","_filter","_getFilterType","_interlace","_setBitsPerPixel","_encodedStream","_colorSpace","_getPngColorSpace","alpha","_alpha","sh","colorspace","calRGB","whitePoint","gammaArray","wpY","alphaY","redY","blueY","blueX","blueZ","colorY","bY","alphaX","alphaZ","_maskData","_dataStream","_getDeflatedData","_dataStreamOffset","_decodedImageData","_readDecodeData","idatData","deflateStream","numRead","outputData","_decodeData","xStep","yStep","bytesPerRow","prior","sourceY","destinationY","filter","_readStream","_PngFilterTypes","sub","_decompressSub","_decompressUp","average","_decompressAverage","paeth","_decompressPaeth","_processPixels","tmp","streamOffset","bitsPerPixel","pData","pp","pr","prp","_paethPredictor","pa","pb","pc","step","sourceX","destX","_getPixel","depth","_setPixel","unsigned","dt","hb","bitDepth","bpr","_setMask","BaseException","message","FormatError","ParserEndOfFileException","gen","_PdfReferenceSet","put","_PdfReferenceSetCache","toStringFunction","nElements","toStr","pair","keysArray","namesOfKeys","pair1","getRawValues","key1","key2","key3","callback","prevValue","getEmpty","emptyDict","dictionaryArray","mergeSubDictionary","mergedDictionary","properties","dictionaryArray_1","_b","_c","_d","properties_1","_e","subDict","_f","_h","_j","suppressEncryption","isCatalog","_PdfNull","_isImage","getByte","peekByte","peekedByte","peekBytes","getUnsignedInteger16","b0","b1","getInt32","makeSubStream","readBlock","reset","moveStart","isHex","getBaseStreams","arrayBuffer","dataStream2","strEnd","_PdfNullStream","_ContentParser","_recordCollection","_operands","_lexer","_ContentLexer","_readContent","_parseObject","eof","tokenType","_getNextToken","number","_operatorParams","real","unicodeHexString","unicodeString","operator","_createRecord","beginArray","endArray","operand","_PdfRecord","_splittedText","_tokenType","_currentCharacter","_nextCharacter","_moveToNextChar","_getComment","_getLiteralString","_getNumber","_getEncodedDecimalString","_getOperator","_consumeValue","_getNextChar","_isOperator","literal","beginChar","_getLiteralStringValue","parentLevel","parenthesesCount","operands","_operator","_PdfDecodeStream","maybeMinBufferLength","_rawMinBufferLength","minBufferLength","ensureBuffer","requested","buffer2","bufEnd","_PdfDecryptStream","maybeLength","cipher","_chunkSize","_nextChunk","hasMoreData","_decryptBlock","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","_PdfFlateStream","cmf","flg","codeSize","codeBuffer","getBits","getCode","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","maximumLength","code2","hdr","blockLen","block","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","codeLengths","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","_PdfCatalog","_getCatalogObj","_topPagesDictionary","pageKidsCountCache","pageIndexCache","_createForm","_allowCatalog","getPageDictionary","nodesToVisit","visitedNodes","pagesRef","currentPageIndex","currentNode","PdfPredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","compArray","kk","prevRow","upLeft","_PdfEncryptor","_isUserPassword","_hasUserPasswordOnly","_encryptOnlyAttachment","_encryptMetaData","_defaultPasswordBytes","_filterName","algorithm","_algorithm","keyLength","cfDictionary","streamCryptoName","handlerDictionary","ownerPassword","userPassword","revision","passwordBytes","fileIdBytes","encodeURIComponent","encryptionKey","_prepareKeyData","decodedPassword","_decodeUserPassword","ownerEncryptionKey","algorithm_1","ownerValidationKey","ownerValidationSalt","ownerKeySalt","userValidationKey","uBytes","userValidationSalt","userKeySalt","ownerEncryption","userEncryption","_AdvancedEncryption","_BasicEncryption","_checkUserPassword","_createEncryptionKey","_checkOwnerPassword","cipherDictionary","standardCryptFilter","event_1","_cipherDictionary","_string","_eff","_encryptionKey","_messageDigest","_MD5","isUserKey","_getUserKey","_getOwnerKey","encryptMetaData","hashData","hash","_md5","keyLengthInBytes","checkData","_NormalCipherFour","_encryptBlock","derivedKey","_createCipherTransform","stringCipher","_buildCipherConstructor","streamCipher","_CipherTransform","_buildObjectKey","cfm","cryptFilter","_NullCipher","_AdvancedEncryption128Cipher","_AdvancedEncryption256Cipher","isAdvancedEncryption","_r","_k","h0","h2","h3","paddedLength","padded","w","f","_Sha256","_rotateRight","_sigma","_sigmaPrime","_littleSigma","_littleSigmaPrime","_hash","h4","h5","h6","h7","Uint32Array","t1","t2","_Sha512","_Word64","assign","rotateRight","xor","shiftRight","isMode384","buffer3","buffer1","high","and","not","copyTo","or","places","shiftLeft","lowAdd","highAdd","_EncryptionKey","_sha256Obj","_sha512Obj","userBytes","_sha256","encrypted","combinedLength","combinedArray","writeOffset","k1","_encrypt","_sha512","_Cipher","_s","_AdvancedEncryptionBaseCipher","_inverseS","_mix","_mixC","_decrypt","u","_keySize","_cyclesOfRepetition","s0","s1","s2","s3","_mixCol","_decryptBlockHelper","finalize","sourceLength","iv","_iv","plain","outputLength","lastBlock","_expandKey","cipherKey","rcon","t3","t4","_stringCipher","_streamCipher","createStream","decryptString","stringBytes","encryptString","pad","repeat","crypto","getRandomValues","specialChars","_PdfLexicalOperator","nextChar","_hexStringNumber","beginInlineImagePosition","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","numParen","charBuffered","getName","previousCh","_toHexDigit","getHexString","firstDigit","secondDigit","isFirstHex","getObject","nextCh","possibleCommand","peekObj","nextObj","streamPos","ex","skipToNextLine","_PdfParser","lexicalOperator","allowStreams","recoveryMode","encryptor","_isPassword","imageCache","_encryptor","refill","tryShift","arguement1","arguement2","arguement3","cipherTransform","makeInlineImage","_checkEnd","makeStream","findDiscreteDecodeInlineStreamEnd","markerLength","startPos","foundEnd","findDefaultInlineStreamEnd","inlineStreamSkipEI","findDecodeInlineStreamEnd","tildePos","maybeEI","findHexDecodeInlineStreamEnd","dictLength","filterName","filterZero","cacheKey","imageStream","imageBytes","initialStreamPos","dictBytes","_computeMaxNumber","cacheEntry","bytesLength","makeFilter","startPosition","endStreamSignature","actualLength","_findStreamLength","truncatedSignature","filterArray","paramsArray","signatureLength","scanBytes","scanLength","endImagePosition","followingBytes","endOffset","_Linearization","parser","obj2","obj3","getInt","hints","getHints","objectNumberFirst","endFirst","mainXRefEntriesOffset","pageFirst","allowZeroValue","hintsLength","hint","_PdfCrossReference","_entries","_crossReferencePosition","_offsetReference","_pendingRefs","_setStartXRef","startXRef","_startXRefQueue","_prevStartXref","_prevXRefOffset","_parse","trailerDictionary","_indexObjects","_readXRef","entrySize","_nextReferenceNumber","_trailer","encrypt","_isEncrypted","_ids","_permissionFlags","fileId","fileStructure","isIncrementalUpdate","crossReferenceType","hasRoot","_getEntry","xrefEntry","free","uncompressed","_fetchUncompressed","_fetchCompressed","tableOffset","nums","offsets","entries","startXRefParsedCache","_fileStructure","_crossReferenceType","_processXRefTable","_topDictionary","_processXRefStream","_readToken","_skipUntil","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","crossReferencePosition","contentLength","updateEntries","subStream","_PdfObjectInformation","endPos","checkPos","tokenStr","objToken","xrefTagOffset","trailerDict","rootDict","pagesDict","pagesCount","_tableState","tableState","_PdfCrossTableState","entryNum","parserBuf1","parserBuf2","_readXRefTable","topDictionary","firstEntryNum","entryCount","_streamState","streamParameters","streamState","_PdfStreamState","entryRanges","byteWidths","_readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","typeByte","offsetByte","generationByte","_currentLength","buffer_1","_saveAsStream","_saveAsTable","objectCollection","_PdfMainObjectCollection","_writeObjectCollection","_mainObjectCollection","currentLength","objectStreamCollection","_updatedDictionary","_writeArchiveStream","_objectStream","_objectStreamCollection","_writeXrefStream","formatValue","newRef","newStartXref","newXref","_copyTrailer","_computeMessageDigest","newXrefData","_writeLong","_archiveOffset","newXrefStream","tempBuffer","offsetString","_processString","genString","_writeXref","_writeXrefTable","_getSortedReferences","xrefHeader","initialEntry","now","crossReferenceInfo","transform","isCrossReference","_writeStream","nestedValue","spaceChar","_writeFontDictionary","_writeValue","streamBuffer","value_1","_writeUnicodeString","_escapeString","byteValues","_writeObjectToBuffer","archiveObj","_PdfArchievedStream","_writeToBuffer","typeIsFilter","entriesArray","sortedCollection","lastObjectNumber","entriesArray_1","currentObjectNumber","_archiveXRef","_updatedStream","newDict","archiveStream","_pointer","_cache","foundCatalog","_addToMainObjectCollection","_parseObjectCollection","_addReferencesToMainCollection","_parseFetchValue","fetchvalue","every","objectsToWrite","processReference","fetchValue","uncompressedValue","PdfForm","_isDefaultAppearance","_hasKids","_fieldCollection","_signFlag","_isNeedAppearances","_parsedFields","_createFields","_needAppearances","_parseFields","fieldFlags","_signatureFlag","signatureExists","appendOnly","removeField","removeFieldAt","setDefaultAppearance","orderFormFields","tab","setTabOrder","_tabCollection","fieldCollection","_getFields","_sortItemByPageIndex","fieldsCount_1","fields","pdfField1","pdfField2","_compareFields","fieldIndex","_getOrder","hasNoKids","nodes","fieldKids","kidsDict","_isNode","isNode","_widgetReferences","fieldReference","kidReference","kidDictionary","pageToImport","_fieldNames","_indexedFieldNames","_actualFieldNames","_indexedActualFieldNames","nameIndex","field1","field2","xdiff","page1","page2","page1Index","page2Index","rectangle1","_getItemRectangle","_getRectangle","rectangle2","firstHeight","secondHeight","_compare","field1Index","field2Index","_compareKidsElement","yDictionary","xRect","yRect","hasPageTabOrder","_sortFieldItems","item1","item2","_compareFieldItem","array1","array2","_FdfDocument","_annotationObjects","_specialCharacters","objectID","objectArray","_stringToHexString","ArrayBuffer","_checkFdf","_readFdfData","FDF","Fields","objects","mappedObjects","trailer","rootKey","fdf","genNumber","helper","_FdfHelper","startObject","_annotationID","streamReference","annotValue","_getEntries","Page","_appendStream","compressString","listDictionary","_getFormattedString","_appendArray","value_2","inReplyToDictionary","_appendElement","_XmlDocument","_checkXml","xmlDocument","PdfFileStructure","_incrementalUpdate","PdfPageImportOptions","_optimizeResources","_groupFormFields","_targetIndex","_PdfMergeHelper","pageReference","_bookmarks","_pageReference","_bookmarksPageLinkReference","_newList","_annotationLayer","_isLayersPresent","_kidsReference","_formFieldsCollection","_formFields","_fieldCount","_destinationDocument","_sourceDocument","_copier","_PdfCopier","_importPages","isCopiedPage","isSplitDocument","newPage","_insertNewPage","optimizeResources","newContents_1","pageContent","_copy","newContent","resourceValue","_contentTemplate","_importAnnotation","groupFormFields","_formFieldsGroupingSupport","_importFormField","bookMarkMap","_parseBookmarkDestination","bookmarks","_mergeLayer","dest","isDestination","oldCollection","annotationReference","destArray","copiedAnnotationReference","copiedAnnotationDictionary","oldPage","formFields","fieldNames","drEntry","formField","destinationKids","sourceKids","_groupFormFieldsKids","_insertFormFields","destinationField","destKids","oldKids","oldDictionary","_copyDictionary","_updateFieldsWithKids","fieldDict","_updateFieldDictionary","formFieldDict","_removeFieldDictionary","formFieldDictionary","newFieldReference","newFieldDict","_createNewFieldDictionary","newField","kidsElement","pageRef","parentRef","destDictionary","_getItemStyle","previousIndex","formDictionary","baseFontName","pdfForm","widgetArray","pdfField","dr","drDictionary","curreneDR","currentFont_1","newReference","modified","_mergeFormFieldsWithDocument","pdfFields","_importLayers","ocProperties","destinationOCProperties","currentOCProperties","ocgs","Cocgs","curreneDefaultView","existingDefaultView","order","existingOrder","groups","existingRBGroups","on","existingON","existingElements","asDictionary","currentASDictionary","usageGroup","currentUsageGroup","off","existingOff","existingLocked","newPageDictionary","oldPageDictionary","xobjdict","xobject","XObject","oldPageList","oldPageResource","layerValue","layerkey","annotationKey","annotationValue","layerKey","xobjDictionary","annotDictionary","oldReference","_exportBookmarks","currentBase","bkCollection","stack","nodeInformation","bm","newBm","newDest","newPage_1","nDest","newNameddest","C","newpage_1","page_2","newNamedDest","_writePropertiesDictionary","layerList","_fixDestinations","pageLinkReference","pagesettings","PdfPageSettings","orientation","_objectDispose","_bookmarkHashTable","targetCrossReference","sourceCrossReference","_traversedObjects","_targetCrossReference","_sourceCrossReference","object","clonedObject","_copyArray","_copyStream","_copyReference","copiedPage","clonedDictionary","copiedValue","originalArray","newArray","originalStream","dereferencedValue","copyValue","_addToDestination","PdfLayer","_printState","printWhenVisible","_pages","_subLayer","_locked","_child","_graphicsCollection","_pageGraphics","_pageParsed","_xObject","_parseLayerPage","_id","isVisible","_setVisibility","isLocked","_setLock","printState","_printOption","alwaysPrint","neverPrint","_setPrintState","_layers","PdfLayerCollection","createGraphics","_graphics","_initializeProperties","currentGraphics","_isEmptyLayer","_layerId","ocgOFF","ocgON","defaultView","isSetLock","_lock","pageBase","xObject","layerIDName","isPresent","layerIdName","ocReference","layerID","refArray","_setLayerPage","usageDictionary","ocGroup","_usage","category","_usageApplication","usageApplication","_isLayerContainsResource","_layerDictionary","_bdcCount","_list","_layerReference","layer_1","layerName","layerId","_print","printOption","viewState","view","printRef","_printOptionReference","subtytpe","viewStateReference","_checkLayerLock","_checkLayerVisible","_checkParentLayer","_createLayerHierarchical","newLayer","_subLayerPosition","_addLayer","_removeLayer","move","_insertLayer","PdfDocument","_createLayer","ocGroups","_createOptionalContentDictionary","_ocDictionary","ocgsList","ocGroups_1","_order","usageOcGroup","_createOptionalContentViews","UsageReference","_setPrintOption","_printLayer","_optionalContentDictionaries","_createSublayer","_on","_off","_optionalContent","_as","usageReference","printReference","defaultview","position_1","orderArray","referenceHolder","pdfLayer","visibleReference","layerDictionary","_parsingLayerOrder","pdfArray","subArray","_pdfReference","_addChildLayer","_addNestedLayer","removeGraphicalContent","_removeOCG","arrayList","_removeOrder","_removeLocked","_removeUsage","_removeVisible","_layerPage","chacheMap","usage","_removeLayerContent","isRemoved","isRemoveOrder","_properties","isSkip","_resource","map_1","objID","_processBeginMarkContent","_streamWrite","strParts","pdfString","_isSkip","operands_1","ocDictionary","position_2","PdfSection","_pageCount","sectionDictionary","sectionReference","topPagesDictionary","lastPage","_headerSignature","_startXrefSignature","_endObjSignature","_permissions","_allowCustomData","_isSplitDocument","_checkHeader","_startXRef","catalogDictionary","catalogReference","topPagesReference","_linear","err","_linearization","_find","startXRefLength","outlines","_bookmarkBase","cachedPage","promise","_getLinearizationPage","_checkPageNumber","lastPage_1","newKids_1","_updatePageCache","addSection","removePage","argument","targetPage","_removePage","isIncrement","updatedData","pageToRemove","bookmarkDictionary","_removePageTemplates","_removeParent","referenceToRemove","_removeInternalTemplates","namedObject","nameCollection","namedPageCollection","_getUpdatedPageTemplates","namedPageDictionary","namedPages","reorderPages","sortedArray","_sortedArray","ascendingOrder","pagesToRemove","_","newkids","newPages","indexPage","_cloneResources","num","resourceDictionary_1","_cloneInnerResources","oldObject_1","hasNew_1","innerKey","oldArray_1","hasNew_2","filename","Save","Blob","saveAsBlob","Promise","resolve","blobData","exportAnnotations","_doPostProcessOnAnnotations","PdfAnnotationExportSettings","dataFormat","xfdf","exportFormData","_doPostProcessOnFormFields","PdfFormFieldExportSettings","exportName","asPerSpecification","importAnnotations","importFormData","destroy","_mergeHelperCache","_namedDestinationCollection","reason","backwards","signatureEnd","formObject","needAppearances","_addWatermarkText","importPageRange","sourceDocument","sourceOCProperties","correspondancePagecount","targetIndex","sourcepage","_uniqueID","isLayersPresent","importPage","splitByFixedNumber","fixedNumber","splitEvent","splitIndex","tempValue","pdfData","_importDocumentPages","_invokeSplitEvent","splitByPageRanges","ranges","range","args","PdfDocumentSplitEventArgs","_exportAppearance","_exportName","_isOrientation","_margins","PdfMargins","_updateSize","_updateOrientation","pageOrientation","all","_pdfData","_PdfPaddings","PdfLayoutFormat","_boundSet","_paginateBounds","break","layout","paginateBounds","paginate","fitPage","_break","PdfLayoutResult","_PageLayoutResult","markerWrote","markerWidth","markerX","_PdfLayoutParameters","PdfBitmap","encodedString","_imageStatus","_initializeAsync","_decoder","colorSpace","indexed","PdfListItem","_textIndent","_subList","PdfListItemCollection","items","_listItems","itemIndent","textIndent","PdfList","_indent","_alignment","_delimiter","_suffix","_enableHierarchy","_currentIndex","_itemCollection","_drawInternal","_PdfListLayouter","layoutInternal","PdfOrderedList","_startNumber","indent","delimiter","suffix","PdfUnorderedList","disk","_getStyledText","asterisk","_draw","_unicodeFont","_PdfListInfo","_number","_information","_markerMaxWidth","_finish","_usePaginateBounds","_resultHeight","_element","onePage","_currentPage","pageResult","broken","_curList","_setCurrentParameters","_getMarkerMaxWidth","useOnPage","_layoutOnPage","usePaginateBounds","finalBounds","_currentFormat","resultantHeight","_drawItem","oList","_markerWidth","listInfo","curList","markerText","posY","posX","itemHeight","itemSize","itemBrush","markerHeight","itemPen","itemFormat","itemText","canDrawMarker","markerResult","_createMarkerResult","itemX","_markerRightToLeft","_drawMarker","_createOrderedMarkerResult","_createUnorderedMarkerResult","_drawOrderedMarker","_drawUnorderedMarker","markerFont","_getMarkerFont","markerPen","_getMarkerPen","markerBrush","_getMarkerBrush","markerFormat","_setMarkerStringFormat","_getMarkerFormat","infromation","startNumber","uFont","findMaxWidth","enableHierarchy","orderedList","markerSize"],"mappings":"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C1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,OACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,OACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,OACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,OACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,OACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,OACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAM,MACpC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,MACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,MACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,MACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,MACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,MACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,MACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,MACrC1Q,KAAKspB,gBAAgB5Y,SAAS,KAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKspB,gBAAgB5Y,SAAS,MAAO,OACrC1Q,KAAKsp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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAETpD,EAA+BoE,cAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,GAExCpE,EAA+BwE,oBAC3B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,KAEtBxE,KAGPE,GAAmD,WACnD,QAASA,MAiNT,MA/MAA,GAAkCuE,+BAAiC,SAAU1D,EAAW/2C,GACpF,GAAIgqC,GAAU,GAAI/d,IACdyuB,EAAa,GAAIjtB,IAAe,IAoBpC,OAnBAitB,GAAW3sB,KAAK,GAAIE,IAAc,EAAG,IAAK,MAC1CysB,EAAW3sB,KAAK,GAAIE,IAAc,KAAM,KAAM,MAC9C+b,EAAQnJ,YAAc6Z,EACtB1Q,EAAQ3d,QAAU,IAClB2d,EAAQzd,UAAY,IACpByd,EAAQpd,MAAQ5sB,EAChBgqC,EAAQN,QAAUM,EAAQ3d,QAAU2d,EAAQzd,SACJ,IAAnCwqB,EAAYngC,eAAaC,OAAqD,IAArCkgC,EAAYngC,eAAaE,QACnEkzB,EAAQ3K,gBAAkB,6BAEe,IAAnC0X,EAAYngC,eAAaC,MAC/BmzB,EAAQ3K,gBAAkB,uBAEiB,IAArC0X,EAAYngC,eAAaE,QAC/BkzB,EAAQ3K,gBAAkB,yBAG1B2K,EAAQ3K,gBAAkB,kBAEvB2K,GAEXkM,EAAkCyE,qCAAuC,SAAU5D,EAAW/2C,GAC1F,GAAIgqC,GAAU,GAAI/d,IACdyuB,EAAa,GAAIjtB,IAAe,IAoBpC,OAnBAitB,GAAW3sB,KAAK,GAAIE,IAAc,EAAG,GAAI,MACzCysB,EAAW3sB,KAAK,GAAIE,IAAc,KAAM,KAAM,MAC9C+b,EAAQnJ,YAAc6Z,EACtB1Q,EAAQ3d,QAAU,IAClB2d,EAAQzd,UAAY,IACpByd,EAAQpd,MAAQ5sB,EAChBgqC,EAAQN,QAAUM,EAAQ3d,QAAU2d,EAAQzd,SACJ,IAAnCwqB,EAAYngC,eAAaC,OAAqD,IAArCkgC,EAAYngC,eAAaE,QACnEkzB,EAAQ3K,gBAAkB,gCAEe,IAAnC0X,EAAYngC,eAAaC,MAC/BmzB,EAAQ3K,gBAAkB,0BAEiB,IAArC0X,EAAYngC,eAAaE,QAC/BkzB,EAAQ3K,gBAAkB,4BAG1B2K,EAAQ3K,gBAAkB,qBAEvB2K,GAEXkM,EAAkC0E,uBAAyB,SAAU7D,EAAW/2C,GAC5E,GAAIgqC,GAAU,GAAI/d,IACdyuB,EAAa,GAAIjtB,IAAe,IAoBpC,OAnBAitB,GAAW3sB,KAAK,GAAIE,IAAc,EAAG,GAAI,MACzCysB,EAAW3sB,KAAK,GAAIE,IAAc,IAAK,IAAK,MAC5C+b,EAAQnJ,YAAc6Z,EACtB1Q,EAAQ3d,QAAU,IAClB2d,EAAQzd,UAAY,IACpByd,EAAQpd,MAAQ5sB,EAChBgqC,EAAQN,QAAUM,EAAQ3d,QAAU2d,EAAQzd,SACJ,IAAnCwqB,EAAYngC,eAAaC,OAAqD,IAArCkgC,EAAYngC,eAAaE,QACnEkzB,EAAQ3K,gBAAkB,6BAEe,IAAnC0X,EAAYngC,eAAaC,MAC/BmzB,EAAQ3K,gBAAkB,uBAEiB,IAArC0X,EAAYngC,eAAaE,QAC/BkzB,EAAQ3K,gBAAkB,yBAG1B2K,EAAQ3K,gBAAkB,kBAEvB2K,GAEXkM,EAAkC2E,mBAAqB,SAAU9D,EAAW/2C,GACxE,GAAIgqC,GAAU,GAAI/d,IACdyuB,EAAa,GAAIjtB,IAAe,IAoBpC,OAnBAitB,GAAW3sB,KAAK,GAAIE,IAAc,EAAG,GAAI,MACzCysB,EAAW3sB,KAAK,GAAIE,IAAc,IAAK,IAAK,MAC5C+b,EAAQnJ,YAAc6Z,EACtB1Q,EAAQ3d,QAAU,IAClB2d,EAAQzd,UAAY,IACpByd,EAAQpd,MAAQ5sB,EAChBgqC,EAAQN,QAAUM,EAAQ3d,QAAU2d,EAAQzd,SACJ,IAAnCwqB,EAAYngC,eAAaC,OAAqD,IAArCkgC,EAAYngC,eAAaE,QACnEkzB,EAAQ3K,gBAAkB,0BAEe,IAAnC0X,EAAYngC,eAAaC,MAC/BmzB,EAAQ3K,gBAAkB,oBAEiB,IAArC0X,EAAYngC,eAAaE,QAC/BkzB,EAAQ3K,gBAAkB,sBAG1B2K,EAAQ3K,gBAAkB,eAEvB2K,GAEXkM,EAAkC4E,sBAAwB,SAAU/D,EAAW/2C,GAC3E,GAAIgqC,GAAU,GAAI/d,IACdyuB,EAAa,GAAIjtB,IAAe,IAoBpC,OAnBAitB,GAAW3sB,KAAK,GAAIE,IAAc,EAAG,GAAI,MACzCysB,EAAW3sB,KAAK,GAAIE,IAAc,MAAO,MAAO,MAChD+b,EAAQnJ,YAAc6Z,EACtB1Q,EAAQ3d,QAAU,IAClB2d,EAAQzd,UAAY,IACpByd,EAAQpd,MAAQ5sB,EAChBgqC,EAAQN,QAAUM,EAAQ3d,QAAU2d,EAAQzd,SACJ,IAAnCwqB,EAAYngC,eAAaC,OAAqD,IAArCkgC,EAAYngC,eAAaE,QACnEkzB,EAAQ3K,gBAAkB,yBAEe,IAAnC0X,EAAYngC,eAAaC,MAC/BmzB,EAAQ3K,gBAAkB,mBAEiB,IAArC0X,EAAYngC,eAAaE,QAC/BkzB,EAAQ3K,gBAAkB,qBAG1B2K,EAAQ3K,gBAAkB,cAEvB2K,GAEXkM,EAAkC6E,sBAAwB,SAAUhE,EAAW/2C,GAC3E,GAAIgqC,GAAU,GAAI/d,IACdyuB,EAAa,GAAIjtB,IAAe,IAoBpC,OAnBAitB,GAAW3sB,KAAK,GAAIE,IAAc,EAAG,GAAI,MACzCysB,EAAW3sB,KAAK,GAAIE,IAAc,MAAO,MAAO,MAChD+b,EAAQnJ,YAAc6Z,EACtB1Q,EAAQ3d,QAAU,IAClB2d,EAAQzd,UAAY,IACpByd,EAAQpd,MAAQ5sB,EAChBgqC,EAAQN,QAAUM,EAAQ3d,QAAU2d,EAAQzd,SACJ,IAAnCwqB,EAAYngC,eAAaC,OAAqD,IAArCkgC,EAAYngC,eAAaE,QACnEkzB,EAAQ3K,gBAAkB,yBAEe,IAAnC0X,EAAYngC,eAAaC,MAC/BmzB,EAAQ3K,gBAAkB,mBAEiB,IAArC0X,EAAYngC,eAAaE,QAC/BkzB,EAAQ3K,gBAAkB,qBAG1B2K,EAAQ3K,gBAAkB,cAEvB2K,GAEXkM,EAAkC8E,sBAAwB,SAAUjE,EAAW/2C,GAC3E,GAAIgqC,GAAU,GAAI/d,IACdyuB,EAAa,GAAIjtB,IAAe,IAsBpC,OArBAitB,GAAW3sB,KAAK,GAAIE,IAAc,EAAG,GAAI,MACzCysB,EAAW3sB,KAAK,GAAIE,IAAc,IAAK,IAAK,MAC5CysB,EAAW3sB,KAAK,GAAIO,IAAmB,MAAO,OAC9CosB,EAAW3sB,KAAK,GAAIO,IAAmB,MAAO,OAC9C0b,EAAQ3d,QAAU,IAClB2d,EAAQzd,UAAY,IACpByd,EAAQpd,MAAQ5sB,EAChBgqC,EAAQN,QAAUM,EAAQ3d,QAAU2d,EAAQzd,SACJ,IAAnCwqB,EAAYngC,eAAaC,OAAqD,IAArCkgC,EAAYngC,eAAaE,QACnEkzB,EAAQ3K,gBAAkB,0BAEe,IAAnC0X,EAAYngC,eAAaC,MAC/BmzB,EAAQ3K,gBAAkB,oBAEiB,IAArC0X,EAAYngC,eAAaE,QAC/BkzB,EAAQ3K,gBAAkB,sBAG1B2K,EAAQ3K,gBAAkB,eAE9B2K,EAAQnJ,YAAc6Z,EACf1Q,GAEXkM,EAAkCD,YAAc,SAAUj8B,EAAY+8B,EAAW/2C,GAC7E,GAAIgqC,EACJ,QAAQhwB,GACJ,IAAKyB,oBAAiBI,4BAClBmuB,EAAUzkB,KAAKk1B,+BAA+B1D,EAAW/2C,IACjDu3B,MAAQ,4BAChB,MACJ,KAAK9b,oBAAiBK,kCAClBkuB,EAAUzkB,KAAKo1B,qCAAqC5D,EAAW/2C,IACvDu3B,MAAQ,kCAChB,MACJ,KAAK9b,oBAAiBM,oBAClBiuB,EAAUzkB,KAAKq1B,uBAAuB7D,EAAW/2C,IACzCu3B,MAAQ,oBAChB,MACJ,KAAK9b,oBAAiBO,gBAClBguB,EAAUzkB,KAAKs1B,mBAAmB9D,EAAW/2C,IACrCu3B,MAAQ,gBAChB,MACJ,KAAK9b,oBAAiBG,mBAClBouB,EAAUzkB,KAAKu1B,sBAAsB/D,EAAW/2C,IACxCu3B,MAAQ,mBAChB,MACJ,KAAK9b,oBAAiBC,mBAClBsuB,EAAUzkB,KAAKw1B,sBAAsBhE,EAAW/2C,IACxCu3B,MAAQ,mBAChB,MACJ,KAAK9b,oBAAiBE,mBAClBquB,EAAUzkB,KAAKy1B,sBAAsBjE,EAAW/2C,IACxCu3B,MAAQ,oBAKxB,MAFAyS,GAAQjd,qBAAuBxH,KAAK8xB,sBACpCrN,EAAQ/c,uBAAyB1H,KAAK8xB,sBAC/BrN,GAEXkM,EAAkCmB,sBAAwB,KACnDnB,KAGPG,GAA8C,WAC9C,QAASA,MAmJT,MAjJAA,GAA6B4E,uBAAyB,SAAUj+B,EAAgBhD,EAAYkhC,GACxF,GAAIC,IAAYlzC,GAAI,IAAKC,GAAI,IAAKC,MAAO,KAAM3I,OAAQ,KACvD+lB,MAAK61B,aAAap+B,EAAgBm+B,GAClC51B,KAAK81B,sBAAsBr+B,EAAgBhD,EAAYkhC,GACvDl+B,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,YAAa,KAChCgX,EAAehX,IAAI,UAAW,KAC9BgX,EAAehX,IAAI,UAAW,MAElCqwC,EAA6BiF,wBAA0B,SAAUt+B,EAAgB+5B,EAAW/8B,EAAYkhC,GACpG,GAAIC,IAAYlzC,GAAI,GAAIC,GAAI,IAAKC,MAAO,KAAM3I,OAAQ,MAClD+7C,GAAkBtzC,GAAI,GAAIC,GAAI,IAAKC,MAAO,KAAM3I,OAAQ,OACvDu3C,GAAangC,eAAaE,OAASF,eAAaC,SAAWD,eAAaE,OACzEyO,KAAK61B,aAAap+B,EAAgBm+B,GAGlC51B,KAAK61B,aAAap+B,EAAgBu+B,GAEtCh2B,KAAK81B,sBAAsBr+B,EAAgBhD,EAAYkhC,GACvDl+B,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,YAAa,KAChCgX,EAAehX,IAAI,UAAW,KAC9BgX,EAAehX,IAAI,UAAW,MAElCqwC,EAA6BmF,sCAAwC,SAAUx+B,EAAgBhD,EAAYkhC,GACvG,GAAIC,IAAYlzC,EAAG,EAAGC,GAAI,IAAKC,MAAO,KAAM3I,OAAQ,KACpD+lB,MAAK61B,aAAap+B,EAAgBm+B,GAClC51B,KAAK81B,sBAAsBr+B,EAAgBhD,EAAYkhC,GACvDl+B,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,YAAa,KAChCgX,EAAehX,IAAI,UAAW,KAC9BgX,EAAehX,IAAI,UAAW,MAElCqwC,EAA6BoF,oBAAsB,SAAUz+B,EAAgBhD,EAAYkhC,GACrF,GAAIC,IAAYlzC,GAAI,IAAKC,GAAI,IAAKC,MAAO,KAAM3I,OAAQ,KACvD+lB,MAAK61B,aAAap+B,EAAgBm+B,GAClC51B,KAAK81B,sBAAsBr+B,EAAgBhD,EAAYkhC,GACvDl+B,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,YAAa,KAChCgX,EAAehX,IAAI,UAAW,KAC9BgX,EAAehX,IAAI,UAAW,MAElCqwC,EAA6BqF,uBAAyB,SAAU1+B,EAAgBhD,EAAYkhC,GACxF,GAAIC,IAAYlzC,GAAI,GAAIC,GAAI,IAAKC,MAAO,KAAM3I,OAAQ,KACtD+lB,MAAK61B,aAAap+B,EAAgBm+B,GAClC51B,KAAK81B,sBAAsBr+B,EAAgBhD,EAAYkhC,GACvDl+B,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,YAAa,KAChCgX,EAAehX,IAAI,UAAW,KAC9BgX,EAAehX,IAAI,UAAW,MAElCqwC,EAA6BsF,uBAAyB,SAAU3+B,EAAgBhD,EAAYkhC,GACxF,GAAIC,IAAYlzC,GAAI,GAAIC,GAAI,IAAKC,MAAO,KAAM3I,OAAQ,KACtD+lB,MAAK61B,aAAap+B,EAAgBm+B,GAClC51B,KAAK81B,sBAAsBr+B,EAAgBhD,EAAYkhC,GACvDl+B,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,YAAa,KAChCgX,EAAehX,IAAI,UAAW,KAC9BgX,EAAehX,IAAI,UAAW,MAElCqwC,EAA6BuF,gCAAkC,SAAU5+B,EAAgBhD,EAAYkhC,GACjG,GAAIC,IAAYlzC,GAAI,EAAGC,GAAI,IAAKC,MAAO,KAAM3I,OAAQ,KACrD+lB,MAAK61B,aAAap+B,EAAgBm+B,GAClC51B,KAAK81B,sBAAsBr+B,EAAgBhD,EAAYkhC,GACvDl+B,EAAehX,IAAI,QAAS,GAC5BgX,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,QAAS,IAC5BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,WAAY,KAC/BgX,EAAehX,IAAI,YAAa,KAChCgX,EAAehX,IAAI,UAAW,KAC9BgX,EAAehX,IAAI,UAAW,MAElCqwC,EAA6B+E,aAAe,SAAUp+B,EAAgBm+B,GAClEn+B,EAAehX,IAAI,WAAYiD,EAAekyC,KAElD9E,EAA6BgF,sBAAwB,SAAUr+B,EAAgBhD,EAAYkhC,GAOvF,OANAl+B,EAAehX,IAAI,WAAY6E,GAASnD,IAAIwzC,EAAY7b,kBACxDriB,EAAehX,IAAI,OAAQ6E,GAASnD,IAAI,mBACxCsV,EAAehX,IAAI,cAAe,GAClCgX,EAAehX,IAAI,eAAgBk1C,EAAYra,YAAYlT,eAC3D3Q,EAAehX,IAAI,SAAUk1C,EAAY7uB,SACzCrP,EAAehX,IAAI,UAAWk1C,EAAY3uB,UAClCvS,GACJ,IAAKyB,oBAAiBG,kBACtB,IAAKH,oBAAiBI,2BACtB,IAAKJ,oBAAiBM,mBAClBiB,EAAehX,IAAI,QAAS,EAC5B,MACJ,KAAKyV,oBAAiBE,kBACtB,IAAKF,oBAAiBC,kBACtB,IAAKD,oBAAiBK,iCACtB,IAAKL,oBAAiBO,eAClBgB,EAAehX,IAAI,QAAS,KAIxCqwC,EAA6BC,mBAAqB,SAAUt8B,EAAY+8B,EAAWmE,GAC/E,GAAIl+B,GAAiB,GAAI3V,GAEzB,QADA2V,EAAelF,UAAW,EAClBkC,GACJ,IAAKyB,oBAAiBI,2BAClB0J,KAAKq2B,gCAAgC5+B,EAAgBhD,EAAYkhC,EACjE,MACJ,KAAKz/B,oBAAiBK,iCAClByJ,KAAKi2B,sCAAsCx+B,EAAgBhD,EAAYkhC,EACvE,MACJ,KAAKz/B,oBAAiBM,mBAClBwJ,KAAK+1B,wBAAwBt+B,EAAgB+5B,EAAW/8B,EAAYkhC,EACpE,MACJ,KAAKz/B,oBAAiBO,eAClBuJ,KAAKk2B,oBAAoBz+B,EAAgBhD,EAAYkhC,EACrD,MACJ,KAAKz/B,oBAAiBG,kBAClB2J,KAAKo2B,uBAAuB3+B,EAAgBhD,EAAYkhC,EACxD,MACJ,KAAKz/B,oBAAiBC,kBAClB6J,KAAK01B,uBAAuBj+B,EAAgBhD,EAAYkhC,EACxD,MACJ,KAAKz/B,oBAAiBE,kBAClB4J,KAAKm2B,uBAAuB1+B,EAAgBhD,EAAYkhC,GAKhE,MAAOl+B,IAEJq5B,MAuBX,SAAWz/B,GAIPA,EAAaA,EAAsB,QAAI,GAAK,UAI5CA,EAAaA,EAAmB,KAAI,GAAK,OAIzCA,EAAaA,EAAqB,OAAI,GAAK,SAI3CA,EAAaA,EAAwB,UAAI,GAAK,YAI9CA,EAAaA,EAAwB,UAAI,GAAK,aAC/CA,iBAAiBA,oBAqBpB,SAAWiE,GAIPA,EAAcA,EAAyB,UAAI,GAAK,YAIhDA,EAAcA,EAAuB,QAAI,GAAK,UAI9CA,EAAcA,EAA0B,WAAI,GAAK,aAIjDA,EAAcA,EAAsB,OAAI,GAAK,SAI7CA,EAAcA,EAA4B,aAAI,GAAK,gBACpDA,kBAAkBA,qBAqBrB,SAAWY,GAIPA,EAAiBA,EAAqC,mBAAI,GAAK,qBAI/DA,EAAiBA,EAAiC,eAAI,GAAK,iBAI3DA,EAAiBA,EAA6C,2BAAI,GAAK,6BAIvEA,EAAiBA,EAAmD,iCAAI,GAAK,mCAI7EA,EAAiBA,EAAoC,kBAAI,GAAK,oBAI9DA,EAAiBA,EAAoC,kBAAI,GAAK,oBAI9DA,EAAiBA,EAAoC,kBAAI,GAAK,qBAC/DA,qBAAqBA,2BACpB64B,IAA8B,WAC9B,QAASA,KACL/uB,KAAKwsB,SAAU,EACfxsB,KAAK2uB,eAET,MAAOI,MCjmDPuH,GAAyB,WACzB,QAASA,GAAQ7sC,EAAQ8sC,GASrB,GARAv2B,KAAKw2B,WACLx2B,KAAKy2B,cACLz2B,KAAK02B,qBAAsB,EAC3B12B,KAAK22B,UAAYj4B,cAAYk4B,QAC7B52B,KAAK62B,UAAW,EAChB72B,KAAK82B,QAAS,EACd92B,KAAK+2B,WAAS30C,GACd4d,KAAKg3B,SAAO50C,GACRqH,GAAU8sC,EAAW,CACrB,IAAIt2C,MAAMuB,QAAQiI,KAAWxJ,MAAMuB,QAAQ+0C,GAKvC,KAAM,IAAI18C,OAAM,iCAJhBmmB,MAAKw2B,QAAU/sC,EACfuW,KAAKy2B,WAAaF,MAOtBv2B,MAAKw2B,WACLx2B,KAAKy2B,cAmoBb,MAhoBA1iC,QAAO+H,eAAew6B,EAAQtiC,UAAW,aA6BrC7R,IAAK,WACD,GAAIhK,IAAS,EAAG,GACZ8Q,EAAQ+W,KAAKw2B,QAAQz9C,MAKzB,OAJIinB,MAAKw2B,QAAQz9C,OAAS,IACtBZ,EAAM,GAAK6nB,KAAKw2B,QAAQvtC,EAAQ,GAAG,GACnC9Q,EAAM,GAAK6nB,KAAKw2B,QAAQvtC,EAAQ,GAAG,IAEhC9Q,GAEX4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew6B,EAAQtiC,UAAW,cA6BrC7R,IAAK,WACD,MAAO6d,MAAKw2B,SAEhBz6B,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew6B,EAAQtiC,UAAW,aA6BrC7R,IAAK,WACD,MAAO6d,MAAKy2B,YAEhB16B,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew6B,EAAQtiC,UAAW,YA6BrC7R,IAAK,WACD,MAAO6d,MAAK22B,WA8BhBl2C,IAAK,SAAUkG,GACXqZ,KAAK22B,UAAYhwC,GAErBoV,YAAY,EACZC,cAAc,IAElBs6B,EAAQtiC,UAAUijC,QAAU,SAAUlyB,EAAMlE,GACpCkE,YAAgBuxB,GAChBt2B,KAAKk3B,SAASnyB,EAAKyxB,QAASzxB,EAAK0xB,YAE5Bx2C,MAAMuB,QAAQujB,IAAS9kB,MAAMuB,QAAQqf,IAC1Cb,KAAKk3B,SAASnyB,EAAMlE,IAG5By1B,EAAQtiC,UAAUkjC,SAAW,SAAUC,EAAYZ,GAC/C,IAAKY,GAAoC,IAAtBA,EAAWp+C,OAC1B,KAAM,IAAIc,OAAM,2CAEpB,KAAK08C,GAAkC,IAArBA,EAAUx9C,OACxB,KAAM,IAAIc,OAAM,0CAEpB,IAAIs9C,EAAWp+C,SAAWw9C,EAAUx9C,OAChC,KAAM,IAAIc,OAAM,iDAEpB,KAAK,GAAIX,GAAI,EAAGA,EAAIi+C,EAAWp+C,OAAQG,IAAK,CACxC,GAAIA,GAAKi+C,EAAWp+C,QAAUG,EAAI,EAC9B,KAAM,IAAIW,OAAM,QAAUX,EAAI,oBAElC8mB,MAAKw2B,QAAQl7C,KAAK67C,EAAW/9C,OAAOC,SAASH,EAAEI,WAAY,KAAK89C,SAChEp3B,KAAKy2B,WAAWn7C,KAAKi7C,EAAUn9C,OAAOC,SAASH,EAAEI,WAAY,QAiCrEg9C,EAAQtiC,UAAUqjC,QAAU,SAAUv0C,EAAIC,EAAIC,EAAIC,GAC9C+c,KAAKs3B,YAAYx0C,EAAIC,EAAIC,EAAIC,GAAK4a,gBAAckM,OAEpDusB,EAAQtiC,UAAUujC,UAAY,SAAUC,GACpC,GAAI3+C,GAAQ2+C,EAAW,EACvB,IAA0B,IAAtBA,EAAWz+C,OACXinB,KAAKy3B,UAAUD,EAAW,GAAI35B,gBAAckM,UAG5C,KAAK,GAAI7wB,GAAI,EAAGA,EAAIs+C,EAAWz+C,OAAQG,IAAK,CACxC,GAAIisC,GAAOqS,EAAWp+C,OAAOC,SAASH,EAAEI,WAAY,IACpD0mB,MAAKq3B,QAAQx+C,EAAM,GAAIA,EAAM,GAAIssC,EAAK,GAAIA,EAAK,IAC/CtsC,EAAQssC,IAIpBmR,EAAQtiC,UAAUsjC,WAAa,SAAU7tC,EAAQ4D,EAAMxU,EAAOC,GAG1D,IAAK,GAFD4+C,OAA+B,KAAV7+C,EAAyBA,EAAQ,EACtD8+C,MAA2B,KAAR7+C,EAAuBA,EAAM2Q,EAAO1Q,OAClDG,EAAIw+C,EAAYx+C,EAAIy+C,EAAUz+C,GAAK,EAAG,CAC3C,GAAIgU,IAASzD,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAMmQ,EAAOvQ,EAAI,GAC/DA,KAAMw+C,EACsB,IAAxB13B,KAAKw2B,QAAQz9C,QAAgBinB,KAAK62B,UAClC72B,KAAKy3B,UAAUvqC,EAAO2Q,gBAAchlB,OACpCmnB,KAAK62B,UAAW,IAEX72B,KAAK02B,qBAAwBxpC,EAAM,KAAO8S,KAAK43B,UAAU,IAAM1qC,EAAM,KAAO8S,KAAK43B,UAAU,GAG3F1qC,EAAM,KAAO8S,KAAK43B,UAAU,IAAM1qC,EAAM,KAAO8S,KAAK43B,UAAU,IACnE53B,KAAKy3B,UAAUvqC,EAAO2Q,gBAAckM,MAHpC/J,KAAKy3B,UAAUvqC,EAAO2Q,gBAAckM,MAOxC/J,KAAKy3B,UAAUvqC,EAAOG,KAIlCipC,EAAQtiC,UAAUyjC,UAAY,SAAUvqC,EAAOG,GAC3C2S,KAAKw2B,QAAQl7C,KAAK4R,GAClB8S,KAAKy2B,WAAWn7C,KAAK+R,IAkCzBipC,EAAQtiC,UAAU6jC,OAAS,SAAUn1C,EAAGC,EAAGC,EAAO3I,EAAQ69C,EAAYC,GAElE,IAAK,GADDtuC,GAASZ,EAAcnG,EAAGC,EAAGD,EAAIE,EAAOD,EAAI1I,EAAQ69C,EAAYC,GAC3D7+C,EAAI,EAAGA,EAAIuQ,EAAO1Q,SAAUG,EAAG,CACpC,GAAI8+C,IAAQvuC,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAC7CmQ,IAASvQ,GACTuQ,IAASvQ,GACTuQ,IAASvQ,GACTuQ,IAASvQ,GACTuQ,IAASvQ,GACTuQ,IAASvQ,GACTuQ,IAASvQ,GACb8mB,MAAKs3B,WAAWU,EAAMn6B,gBAAco6B,UAmC5C3B,EAAQtiC,UAAUkkC,aAAe,SAAUx1C,EAAGC,EAAGC,EAAO3I,GACpD+lB,KAAKm4B,cACLn4B,KAAKs3B,YAAY50C,EAAGC,EAAGD,EAAIE,EAAOD,EAAGD,EAAIE,EAAOD,EAAI1I,EAAQyI,EAAGC,EAAI1I,GAAS4jB,gBAAckM,MAC1F/J,KAAKo4B,eA+BT9B,EAAQtiC,UAAUqkC,WAAa,SAAU5uC,GACrC,GAAI6uC,KACJ7uC,GAAOuB,QAAQ,SAAU1I,GACrBg2C,EAAUh9C,KAAKgH,EAAQ,GAAIA,EAAQ,MAEvC0d,KAAKm4B,cACLn4B,KAAKs3B,WAAWgB,EAAWz6B,gBAAckM,MACzC/J,KAAKo4B,eAkCT9B,EAAQtiC,UAAUukC,WAAa,SAAU71C,EAAGC,EAAGC,EAAO3I,GAClD+lB,KAAKm4B,cACLn4B,KAAK63B,OAAOn1C,EAAGC,EAAGC,EAAO3I,EAAQ,EAAG,KACpC+lB,KAAKo4B,eAsCT9B,EAAQtiC,UAAUwkC,UAAY,SAAUC,EAAQC,EAAQC,EAAQC,EAAQC,EAASC,EAASC,EAAMC,GAC5F,GAAIvvC,IAAUgvC,EAAQC,EAAQC,EAAQC,EAAQC,EAASC,EAASC,EAAMC,EACtEh5B,MAAKs3B,WAAW7tC,EAAQoU,gBAAco6B,SAE1C3B,EAAQtiC,UAAUilC,iBAAmB,SAAUC,GAC3C,GAAIA,EAAiBngD,OAAS,EAC1B,KAAMc,OAAM,iCAEhB,IACIgB,GAAQ,EACRhC,EAAQqgD,EAAiB9/C,OAAOC,SAASwB,EAAMvB,WAAY,IAE/D,KADAuB,IACQA,EAJI,GAIcq+C,EAAiBngD,QAAQ,CAC/C,GAAIogD,GAASD,EAAiB9/C,OAAOC,SAASwB,EAAMvB,WAAY,IAChEuB,IACA,IAAIu+C,GAASF,EAAiB9/C,OAAOC,SAASwB,EAAMvB,WAAY,IAChEuB,IACA,IAAI/B,GAAMogD,EAAiB9/C,OAAOC,SAASwB,EAAMvB,WAAY,IAC7DuB,KACAmlB,KAAKw4B,UAAU3/C,EAAM,GAAIA,EAAM,GAAIsgD,EAAO,GAAIA,EAAO,GAAIC,EAAO,GAAIA,EAAO,GAAItgD,EAAI,GAAIA,EAAI,IAC3FD,EAAQC,IAqChBw9C,EAAQtiC,UAAUqlC,OAAS,SAAU32C,EAAGC,EAAGC,EAAO3I,EAAQ69C,EAAYC,GAClE/3B,KAAKm4B,cACLn4B,KAAK63B,OAAOn1C,EAAGC,EAAGC,EAAO3I,EAAQ69C,EAAYC,GAC7C/3B,KAAKy3B,WAAW/0C,EAAIE,EAAQ,EAAGD,EAAI1I,EAAS,GAAI4jB,gBAAckM,MAC9D/J,KAAKo4B,eAgCT9B,EAAQtiC,UAAUmkC,YAAc,WAC5Bn4B,KAAK62B,UAAW,GAEpBP,EAAQtiC,UAAUokC,YAAc,SAAUv9C,GACtC,OAAqB,KAAVA,EAAuB,CAC9B,GAAIwS,GAAO2S,KAAKy2B,WAAWr9C,OAAOC,SAASwB,EAAMvB,WAAY,IAC7D+T,IAAQwQ,gBAAcy7B,UACtBt5B,KAAKy2B,WAAWr9C,OAAOC,SAASwB,EAAMvB,WAAY,KAAO+T,MAGrD2S,MAAKw2B,QAAQz9C,OAAS,GACtBinB,KAAKo4B,YAAYp4B,KAAKw2B,QAAQz9C,OAAS,GAE3CinB,KAAKm4B,eA+Bb7B,EAAQtiC,UAAUulC,gBAAkB,WAChC,IAAK,GAAIrgD,GAAI,EAAGA,EAAI8mB,KAAKw2B,QAAQz9C,SAAUG,EAAG,CAC1C,GAAIsgD,GAAYx5B,KAAKy2B,WAAWr9C,OAAOC,SAASH,EAAEI,WAAY,KAC1D4B,GAAO,CACD,KAANhC,GAAWsgD,IAAc37B,gBAAchlB,OACvCmnB,KAAKo4B,YAAYl/C,EAAI,GACrBgC,GAAO,GAEFhC,IAAM8mB,KAAKy2B,WAAW19C,OAAS,IAAMmC,GAAQ8kB,KAAK82B,QACnD92B,KAAKw2B,QAAQ,GAAG,KAAOx2B,KAAKw2B,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAK,IACvE0mB,KAAKw2B,QAAQ,GAAG,KAAOx2B,KAAKw2B,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAK,IACvE0mB,KAAKo4B,YAAYl/C,KAKjCo9C,EAAQtiC,UAAUylC,WAAa,WAC3B,GAAIxgC,IAAU,EAAG,EAAG,EAAG,EACvB,IAAI+G,KAAKw2B,QAAQz9C,OAAS,EAAG,CAKzB,IAAK,GAJD2gD,GAAO15B,KAAKw2B,QAAQ,GAAG,GACvBmD,EAAO35B,KAAKw2B,QAAQ,GAAG,GACvBoD,EAAO55B,KAAKw2B,QAAQ,GAAG,GACvBqD,EAAO75B,KAAKw2B,QAAQ,GAAG,GAClBt9C,EAAI,EAAGA,EAAI8mB,KAAKw2B,QAAQz9C,SAAUG,EAAG,CAC1C,GAAIgU,GAAQ8S,KAAKw2B,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,IACvDogD,GAAOrhD,KAAKY,IAAIiU,EAAM,GAAIwsC,GAC1BC,EAAOthD,KAAKW,IAAIkU,EAAM,GAAIysC,GAC1BC,EAAOvhD,KAAKY,IAAIiU,EAAM,GAAI0sC,GAC1BC,EAAOxhD,KAAKW,IAAIkU,EAAM,GAAI2sC,GAE9B5gC,GAAUygC,EAAME,EAAMD,EAAOD,EAAMG,EAAOD,GAE9C,MAAO3gC,IAEJq9B,KC7pBPwD,GAA0B,WAC1B,QAASA,MAgLT,MA9KA/lC,QAAO+H,eAAeg+B,EAAS9lC,UAAW,SAwBtC7R,IAAK,WACD,MAAO6d,MAAK+5B,aAyBhBt5C,IAAK,SAAUtI,GACX6nB,KAAK+5B,YAAc5hD,GAEvB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg+B,EAAS9lC,UAAW,UAwBtC7R,IAAK,WACD,MAAO6d,MAAKg6B,cAyBhBv5C,IAAK,SAAUtI,GACX6nB,KAAKg6B,aAAe7hD,GAExB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg+B,EAAS9lC,UAAW,qBAwBtC7R,IAAK,WAED,MADA6d,MAAKi6B,wBAA0Bj6B,KAAKk6B,cAAcl6B,KAAKpd,MAAOod,KAAK/lB,OAAQ+lB,KAAKm6B,wBACxEn6B,KAAKpd,MAAOod,KAAK/lB,SAE7B8hB,YAAY,EACZC,cAAc,IAElB89B,EAAS9lC,UAAUomC,KAAO,SAAUC,EAAU33C,EAAGC,GAClC,OAAND,OAA2B,KAANA,GAA6B,OAANC,OAA2B,KAANA,IAClED,EAAI,EACJC,EAAI,EAER,IAAI23C,GAAkB,IAAN53C,GAAiB,IAANC,EACvB6H,EAAQ,IACR8vC,KACA9vC,EAAQ6vC,EAASE,OACjBF,EAASG,mBAAmB93C,EAAGC,IAEnC03C,EAASI,UAAUz6B,KAAM,EAAG,GACxBs6B,GACAD,EAASK,QAAQlwC,IAGzBsvC,EAAS9lC,UAAUkmC,cAAgB,SAAUt3C,EAAO3I,EAAQ0gD,GACxD,GAA8B,OAAzBA,OAAiE,KAAzBA,EAAuC,CAGhF,MADIlgD,GAAOulB,KAAKk6B,cAAct3C,EAAO3I,EAD1B,IAKX,GAAI2gD,GAAM,GAAIC,IACVC,EAAM,GAAID,IAGVpgD,GAFUmgD,EAAIG,cAAcn4C,EAAOgL,mBAAiBotC,MAAOptC,mBAAiBV,OACjE4tC,EAAIC,cAAc9gD,EAAQ2T,mBAAiBotC,MAAOptC,mBAAiBV,OAElF,OAAOzS,IAGRq/C,KCrKPmB,GAA6B,WAU7B,QAASA,GAAYxgD,EAAMygD,EAASC,EAAMviD,GAYtC,GAXAonB,KAAKo7B,oBACLp7B,KAAK0lB,WAAY,EACjB1lB,KAAKq7B,uBAAwB,EACzBziD,YAAkB0iD,KAClBt7B,KAAKu7B,QAAU3iD,EAAOoC,gBACtBglB,KAAK7G,MAAQvgB,GAERA,YAAkB6S,MACvBuU,KAAKu7B,QAAU3iD,EAAOkT,SAASvK,WAC/Bye,KAAKw7B,UAAY5iD,GAEjBonB,KAAKu7B,SAAWv7B,KAAKu7B,QAAQv5C,IAAI,aAAc,CAC/C,GAAI2Z,GAAMqE,KAAKu7B,QAAQ/vC,OAAO,YAC1BmQ,KACIA,YAAetR,KACf2V,KAAKq7B,uBAAwB,EAC7Br7B,KAAKy7B,gBAAkBN,EAAKjoC,OAAOyI,IAE9BA,YAAe7Z,MACpBke,KAAKy7B,gBAAkB9/B,QAK/BqE,MAAKy7B,gBAAkB,GAAI35C,IAC3Bke,KAAKu7B,QAAQ/yC,OAAO,YAAawX,KAAKy7B,gBAE1Cz7B,MAAKtU,gBAAkByvC,EACvBn7B,KAAK07B,IAAM,GAAI37B,IAAiBm7B,GAChCl7B,KAAKqH,MAAQ5sB,EACb6N,EAAY,MAAO0X,KAAKy7B,iBACxBz7B,KAAKmJ,cAkzDT,MAhzDApV,QAAO+H,eAAem/B,EAAYjnC,UAAW,cAmBzC7R,IAAK,WACD,OAAQ6d,KAAK27B,YAAY,GAAI37B,KAAK27B,YAAY,KAElD5/B,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAem/B,EAAYjnC,UAAW,WACzC7R,IAAK,WAID,WAHuB,KAAZ6d,KAAK47B,KACZ57B,KAAK47B,GAAK,GAAI5vC,KAEXgU,KAAK47B,IAEhB7/B,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAem/B,EAAYjnC,UAAW,cACzC7R,IAAK,WACD,GAAI4lB,GAAQ/H,IACZ,QAAiC,KAAtBA,KAAK67B,aAA8B,CAE1C,GADA77B,KAAK67B,aAAe,GAAI/T,KACpB9nB,KAAKy7B,iBAAmBz7B,KAAKy7B,gBAAgBz5C,IAAI,QAAS,CAC1D,GAAI6S,GAAQmL,KAAKy7B,gBAAgBt5C,IAAI,OACjC0S,IAASA,EAAMpa,KAAO,GACtBoa,EAAM7J,QAAQ,SAAUnL,EAAK1H,GACX,OAAVA,OAAmC,KAAVA,GAAyBA,YAAiBkS,KACnE0d,EAAM8zB,aAAap7C,IAAItI,EAAOmN,GAASnD,IAAItC,MAK3D,GAAImgB,KAAKy7B,gBAAgBz5C,IAAI,WAAY,CACrC,GAAI85C,GAAQ97B,KAAKy7B,gBAAgBt5C,IAAI,UACjC25C,IAASA,EAAMrhD,KAAO,GACtBqhD,EAAM9wC,QAAQ,SAAUnL,EAAK1H,GACX,OAAVA,OAAmC,KAAVA,GAAyBA,YAAiBkS,KACnE0d,EAAM8zB,aAAap7C,IAAItI,EAAOmN,GAASnD,IAAItC,MAK3D,GAAImgB,KAAKy7B,gBAAgBz5C,IAAI,aAAc,CACvC,GAAIwI,GAAQwV,KAAKy7B,gBAAgBt5C,IAAI,YACjCqI,IAASA,EAAM/P,KAAO,IACjBulB,KAAK+7B,kBACN/7B,KAAK+7B,gBAAkB,GAAIjU,MAE/Bt9B,EAAMQ,QAAQ,SAAUnL,EAAK1H,GACX,OAAVA,OAAmC,KAAVA,GAAyBA,YAAiBkS,KACnE0d,EAAMi0B,qBAAqB7jD,EAAOmN,GAASnD,IAAItC,QAMnE,MAAOmgB,MAAK67B,cAEhB9/B,YAAY,EACZC,cAAc,IA6BlBi/B,EAAYjnC,UAAUumC,KAAO,WACzB,GAAI/vC,GAAQ,GAAIyxC,IAAiBj8B,KAAMA,KAAK7T,QAU5C,OATA3B,GAAM0xC,mBAAqBl8B,KAAKk8B,mBAChC1xC,EAAM2xC,aAAen8B,KAAKo8B,kBAC1B5xC,EAAM6xC,aAAer8B,KAAKq8B,aAC1B7xC,EAAM8xC,aAAet8B,KAAKs8B,aAC1B9xC,EAAM+xC,cAAgBv8B,KAAKu8B,cAC3B/xC,EAAMgyC,YAAcx8B,KAAKw8B,YACzBhyC,EAAMiyC,aAAez8B,KAAKy8B,aAC1Bz8B,KAAK08B,eAAephD,KAAKkP,GACzBwV,KAAK07B,IAAIr7B,qBACF7V,GA8BXywC,EAAYjnC,UAAU0mC,QAAU,SAAUlwC,GACtC,GAAIwV,KAAK08B,eAAe3jD,OAAS,EAC7B,OAAqB,KAAVyR,EACPwV,KAAK28B,iBAGL,IAAI38B,KAAK08B,eAAe3jD,OAAS,IAA6C,IAAxCinB,KAAK08B,eAAex8C,QAAQsK,GAC9D,KAAOwV,KAAK08B,eAAe3jD,OAAS,GAC5BinB,KAAK28B,eAAiBnyC,MAQ9CywC,EAAYjnC,UAAU2oC,WAAa,WAC/B,GAAInyC,GAAQwV,KAAK08B,eAAeE,KAUhC,OATA58B,MAAK47B,GAAKpxC,EAAMqyC,sBAChB78B,KAAKu8B,cAAgB/xC,EAAM+xC,cAC3Bv8B,KAAKw8B,YAAchyC,EAAMgyC,YACzBx8B,KAAKy8B,aAAejyC,EAAMiyC,aAC1Bz8B,KAAKo8B,kBAAoB5xC,EAAM2xC,aAC/Bn8B,KAAKs8B,aAAe9xC,EAAM8xC,aAC1Bt8B,KAAKq8B,aAAe7xC,EAAM6xC,aAC1Br8B,KAAKk8B,mBAAqB1xC,EAAM0xC,mBAChCl8B,KAAK07B,IAAIp7B,wBACF9V,GAEXywC,EAAYjnC,UAAU8oC,cAAgB,SAAUp6C,EAAGC,EAAGC,EAAO3I,EAAQsD,EAAOC,GACxEwiB,KAAK+8B,mBACL,IAAIj/C,GAASkiB,KAAKg9B,aAAaz/C,EAAOC,EACtCwiB,MAAK07B,IAAIr6B,iBAAiB3e,EAAGC,EAAGC,EAAO3I,GACvC+lB,KAAKi9B,kBAAkBn/C,EAAOo/C,IAAKp/C,EAAOq/C,OAC1Cn9B,KAAKo9B,mBAiCTnC,EAAYjnC,UAAUqpC,WAAa,SAAU5E,EAAQC,EAAQC,EAAQC,EAAQC,EAASC,EAASC,EAAMC,EAAMkE,GACvGl9B,KAAK+8B,oBACL/8B,KAAKs9B,cAAcJ,EAAK,KAAM,MAC9Bl9B,KAAK07B,IAAI14B,WAAWy1B,EAAQC,GAC5B14B,KAAK07B,IAAIx4B,qBAAqBy1B,EAAQC,EAAQC,EAASC,EAASC,EAAMC,GACtEh5B,KAAKi9B,kBAAkBC,GACvBl9B,KAAKo9B,mBAETnC,EAAYjnC,UAAUupC,QAAU,SAAU76C,EAAGC,EAAGC,EAAO3I,EAAQ69C,EAAYC,EAAYx6C,EAAOC,GAC1FwiB,KAAK+8B,mBACL,IAAIj/C,GAASkiB,KAAKg9B,aAAaz/C,EAAOC,EACtCwiB,MAAKw9B,kBAAkB96C,EAAGC,EAAGD,EAAIE,EAAOD,EAAI1I,EAAQ69C,EAAYC,GAChE/3B,KAAK07B,IAAIz4B,mBAAmBvgB,EAAIE,EAAQ,EAAGD,EAAI1I,EAAS,GACxD+lB,KAAKi9B,kBAAkBn/C,EAAOo/C,IAAKp/C,EAAOq/C,MAAO,MAAM,GACvDn9B,KAAKo9B,mBAETnC,EAAYjnC,UAAUypC,YAAc,SAAUh0C,EAAQlM,EAAOC,GAEzD,GADAwiB,KAAK+8B,oBACDtzC,EAAO1Q,OAAS,EAAG,CACnB,GAAI+E,GAASkiB,KAAKg9B,aAAaz/C,EAAOC,EACtCwiB,MAAK07B,IAAI14B,WAAWvZ,EAAO,GAAG,GAAIA,EAAO,GAAG,GAC5C,KAAK,GAAIvQ,GAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAC/B8mB,KAAK07B,IAAIz4B,mBAAmBxZ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAImQ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAExH0mB,MAAKi9B,kBAAkBn/C,EAAOo/C,IAAKp/C,EAAOq/C,MAAOz+B,cAAYk4B,SAAS,GAE1E52B,KAAKo9B,mBAETnC,EAAYjnC,UAAU0pC,YAAc,SAAUh7C,EAAGC,EAAGC,EAAO3I,EAAQsD,EAAOC,GACtEwiB,KAAK+8B,mBACL,IAAIj/C,GAASkiB,KAAKg9B,aAAaz/C,EAAOC,EACtCwiB,MAAK29B,kBAAkBj7C,EAAGC,EAAGD,EAAIE,EAAOD,EAAI1I,EAAQ,EAAG,KACvD+lB,KAAKi9B,kBAAkBn/C,EAAOo/C,IAAKp/C,EAAOq/C,MAAOz+B,cAAYk4B,SAAS,GACtE52B,KAAKo9B,mBA+BTnC,EAAYjnC,UAAU4pC,QAAU,SAAUl7C,EAAGC,EAAGC,EAAO3I,EAAQ69C,EAAYC,EAAYmF,GAChE,IAAfnF,IACA/3B,KAAK+8B,oBACL/8B,KAAKs9B,cAAcJ,GACnBl9B,KAAK29B,kBAAkBj7C,EAAGC,EAAGD,EAAIE,EAAOD,EAAI1I,EAAQ69C,EAAYC,GAChE/3B,KAAKi9B,kBAAkBC,EAAK,KAAMx+B,cAAYk4B,SAAS,GACvD52B,KAAKo9B,oBAGbnC,EAAYjnC,UAAU+oC,kBAAoB,WAClC/8B,KAAK69B,QACL79B,KAAK69B,OAAOC,YAAY99B,OAGhCi7B,EAAYjnC,UAAUopC,gBAAkB,WACpC,GAAIp9B,KAAK69B,OAAQ,CACb,GAAI79B,KAAK69B,OAAOE,aAAmD,IAApC/9B,KAAK69B,OAAOG,aAAajlD,OACpD,IAAK,GAAIG,GAAI,EAAGA,EAAI8mB,KAAK69B,OAAOG,aAAajlD,OAAQG,IACjD8mB,KAAK07B,IAAIn5B,OAAO,MAGpBvC,MAAK69B,OAAOE,aACZ/9B,KAAK07B,IAAIn5B,OAAO,SAI5B04B,EAAYjnC,UAAUymC,UAAY,SAAU11B,EAAMlE,EAAMC,EAAMivB,EAAMC,GAEhE,GADAhwB,KAAK+8B,oBACe,gBAATl8B,IAAqC,gBAATC,QAAqC,KAATivB,EAAsB,CACrF,GAAIt1C,GAAOsqB,EAAKk5B,iBAChBj+B,MAAKy6B,UAAU11B,EAAMlE,EAAMC,EAAMrmB,EAAK,GAAIA,EAAK,QAE9C,CACDsqB,EAAKm5B,OACL,IAAInyC,GAAS,GAAIC,GACjBgU,MAAKm+B,uBAAuBt9B,EAAOC,EAAOkvB,EAAOjkC,GACjDiU,KAAKo+B,mBAAmBrO,EAAMC,EAAMjkC,GACpCiU,KAAK07B,IAAIn5B,OAAO,KAChBvC,KAAK07B,IAAIj7B,WAAW1U,EACpB,IAAIsyC,OAAmB,GACnBC,MAAU,GACVC,GAAQ,CACZ,IAAIv+B,KAAKy7B,gBAAgBz5C,IAAI,WAAY,CACrC,GAAI2Z,GAAMqE,KAAKy7B,gBAAgBjwC,OAAO,UAClCmQ,aAAe7Z,MACfu8C,EAAmB1iC,GAEnB0iC,IACAE,GAAQ,GAGZA,IACAF,EAAmB,GAAIv8C,IAAeke,KAAKtU,iBAC3CsU,KAAKy7B,gBAAgBjzC,OAAO,UAAW61C,QAEpB,KAAZC,IACPA,EAAUh5C,GAASnD,IAAIsG,MAEvBuX,KAAKtU,iBACLsU,KAAKw+B,qBAAqBz5B,EAAMu5B,EAASD,EAAkBr+B,KAAKtU,iBAChEsU,KAAKu7B,QAAQ/yC,OAAO,YAAawX,KAAKy7B,iBACtCz7B,KAAKu7B,QAAQhpC,UAAW,GAGxByN,KAAKo7B,iBAAiB9/C,MAAOmjD,SAAY15B,EAAMllB,IAAOy+C,EAAS1lD,OAAUylD,IAE7Er+B,KAAK07B,IAAIl3B,eAAe85B,GACxBt+B,KAAK07B,IAAIn5B,OAAO,KAChBvC,KAAK07B,IAAIn5B,OAAO,QAChBja,EAAY,SAAU0X,KAAKy7B,iBAC3BnzC,EAAY,SAAU0X,KAAKy7B,iBAC3BnzC,EAAY,SAAU0X,KAAKy7B,iBAC3BnzC,EAAY,OAAQ0X,KAAKy7B,iBAE7Bz7B,KAAKo9B,mBAgCTnC,EAAYjnC,UAAU0qC,aAAe,SAAUvzC,EAAU8N,GACrD,GAAI8O,GAAQ/H,IAEZ,IADAA,KAAK+8B,wBACmB,KAAb5xC,EAA0B,EAC7BA,EAASwzC,aAAexzC,EAASyzC,qBAC7B5+B,KAAKtU,iBACLP,EAASO,gBAAkBsU,KAAKtU,gBAChCP,EAAS0zC,eAAc,EAAM1zC,EAASyzC,qBAGtCzzC,EAAS0zC,eAAc,EAAO1zC,EAASyzC,mBACvC5+B,KAAKo7B,iBAAiB9/C,KAAK6P,IAGnC,IAAI2zC,GAAU3zC,GAAYA,EAASkc,MAAM,GAAK,EAAKpO,EAAOrW,MAAQuI,EAASkc,MAAM,GAAK,EAClF03B,EAAU5zC,GAAYA,EAASkc,MAAM,GAAK,EAAKpO,EAAOhf,OAASkR,EAASkc,MAAM,GAAK,EACnF23B,IAAc3mD,KAAK4mD,MAAe,IAATH,GAAiB,KAAS,GAAKzmD,KAAK4mD,MAAe,IAATF,GAAiB,KAAS,GAC7Fx7C,MAAU,GACVD,MAAW,EACX0c,MAAK7G,QACL5V,EAAUyc,KAAK7G,MAAM5V,QACrBD,EAAW0c,KAAK7G,MAAM7V,SAClB0c,KAAK7G,MAAMne,gBAAgBgH,IAAI,YAAcge,KAAK7G,MAAMne,gBAAgBgH,IAAI,aACxEuB,EAAQ,GAAK,GAAKA,EAAQ,GAAK,GAAKD,EAAS,GAAK,GAAKA,EAAS,GAAK,IACrE0c,KAAKw6B,mBAAmBj3C,EAAQ,IAAKA,EAAQ,IAC7C0V,EAAOvW,GAAKa,EAAQ,GACpB0V,EAAOtW,EAAIY,EAAQ,IAI/B,IAAIiH,GAAQwV,KAAKu6B,OACbxuC,EAAS,GAAIC,GACjB,IAAIgU,KAAK7G,MAAO,CACZ,GAAI+lC,GAAiBl/B,KAAK7G,MAAMne,gBAAgBgH,IAAI,YAChDge,KAAK7G,MAAMne,gBAAgBgH,IAAI,aAAeuB,GAAWD,GACzDC,EAAQ,KAAOD,EAAS,IAAMC,EAAQ,KAAOD,EAAS,IAAMC,EAAQ,KAAOD,EAAS,IAAMC,EAAQ,KAAOD,EAAS,IACjH0c,KAAK7G,MAAMne,gBAAgBgH,IAAI,aAAesB,GAA4B,IAAhBA,EAAS,EACxEyI,GAAOE,WAAWgN,EAAOvW,IAAKuW,EAAOtW,GAAMqd,KAAK7G,MAAMgmC,QAAQ,IAAM,GAAKD,EAAiBjmC,EAAOhf,OAAS,SAG1G8R,GAAOE,WAAWgN,EAAOvW,IAAKuW,EAAOtW,EAAIsW,EAAOhf,QAEpD,IAAImlD,IAAe,CACnB,IAAIj0C,EAASW,UAAYX,EAASW,SAASvK,WAAY,CACnD,GAAIA,GAAa4J,EAASW,SAASvK,UACnC,IAAIA,EAAWS,IAAI,WAAaT,EAAWS,IAAI,QAAS,CACpD,GAAIq9C,GAAiB99C,EAAWW,SAAS,UACrCo9C,EAAc/9C,EAAWW,SAAS,OACtC,IAAIm9C,GAAkBC,GAAeD,EAAetmD,OAAS,GAAKumD,EAAYvmD,OAAS,EAAG,CACtF,GAAIwmD,GAAiBnmD,OAAO8J,WAAWzF,GAAiB4hD,EAAe,KACnEG,EAAiBpmD,OAAO8J,WAAWzF,EAAgB4hD,EAAe,KAClEI,EAAcrmD,OAAO8J,WAAWzF,EAAgBqhD,IAChDY,EAActmD,OAAO8J,WAAWzF,EAAgBshD,GAChDU,KAAgBF,GAChBG,IAAgBF,GAChBF,EAAY,KAAOn0C,EAASkc,MAAM,IAClCi4B,EAAY,KAAOn0C,EAASkc,MAAM,IAAMlc,EAASw0C,uBAC9Cx0C,EAASy0C,YAAcZ,IAC1BjzC,EAAS,GAAIC,KACNC,WAAWgN,EAAOvW,EAAI28C,EAAe,KAAMpmC,EAAOtW,EAAI08C,EAAe,KAC5EtzC,EAAO8zC,OAAO,EAAG,GACjBT,GAAe,GAES,IAAnBE,EAAY,IAA+B,IAAnBA,EAAY,IAAYA,EAAY,KAAOrmC,EAAOvW,GAC/Esd,KAAK7G,OAAShO,EAAS20C,eACvB/zC,EAAOE,WAAWgN,EAAOvW,EAAI48C,EAAY,IAAKt/B,KAAK7G,MAAM1e,KAAK,IAC9DsR,EAAO8zC,OAAOf,EAAQC,GACtBK,GAAe,KAK3BJ,IAAcI,GACdrzC,EAAO8zC,OAAOf,EAAQC,GAE1B/+B,KAAK07B,IAAIj7B,WAAW1U,EACpB,IAEIg0C,GAEAC,EAJA3B,MAAmB,GACnB4B,GAAc,EAEd1B,GAAQ,CAEZ,IAAIv+B,KAAKy7B,gBAAgBz5C,IAAI,WAAY,CACrC,GAAI2Z,GAAMqE,KAAKy7B,gBAAgBjwC,OAAO,UAClCmQ,KACIA,YAAetR,KACf41C,GAAc,EACd5B,EAAmBr+B,KAAKtU,gBAAgBwH,OAAOyI,IAE1CA,YAAe7Z,MACpBu8C,EAAmB1iC,IAGvB0iC,IACAE,GAAQ,EACRv+B,KAAKkgC,WAAWl1C,QAAQ,SAAU7S,EAAO0H,GACrC,GAAIA,GAAOA,YAAewK,IAAe,CACrC,GAAI81C,GAAOp4B,EAAMrc,gBAAgBwH,OAAOrT,EACpCsgD,IAAQh1C,GAAYg1C,IAASh1C,EAASW,WACtCi0C,EAAY5nD,EACZ6nD,EAAQngD,OAMxB0+C,IACAF,EAAmB,GAAIv8C,IAAeke,KAAKtU,iBAC3CsU,KAAKy7B,gBAAgBjzC,OAAO,UAAW61C,QAElB,KAAd0B,IACPA,EAAYz6C,GAASnD,IAAIsG,KACrB0C,GAAYA,EAASW,SAAS5B,UAC9B81C,EAAQ70C,EAASW,SAAS5B,UAErB8V,KAAKtU,gBACVs0C,EAAQhgC,KAAKtU,gBAAgB00C,oBAG7BpgC,KAAKo7B,iBAAiB9/C,MAAOmjD,SAAYtzC,EAASW,SAAUjM,IAAOkgD,EAAWnnD,OAAUylD,IAExF2B,GAAShgC,KAAKtU,mBACTsU,KAAKtU,gBAAgB2H,UAAUrR,IAAIg+C,IAAU70C,GAAYA,EAASW,UACnEkU,KAAKtU,gBAAgB2H,UAAU5S,IAAIu/C,EAAO70C,EAASW,UAEvDuyC,EAAiB71C,OAAOu3C,EAAU53C,KAAM63C,GACxChgC,KAAKkgC,WAAWz/C,IAAIu/C,EAAOD,IAE/B//B,KAAKy7B,gBAAgBlpC,UAAW,GAEhC0tC,IACAjgC,KAAKy7B,gBAAgBlpC,UAAW,GAEhCyN,KAAKq7B,wBACLr7B,KAAKu7B,QAAQhpC,UAAW,GAE5ByN,KAAK07B,IAAIl3B,eAAeu7B,GACxB//B,KAAK06B,QAAQlwC,GACblC,EAAY,SAAU0X,KAAKy7B,iBAC3BnzC,EAAY,SAAU0X,KAAKy7B,iBAC3BnzC,EAAY,SAAU0X,KAAKy7B,iBAC3BnzC,EAAY,OAAQ0X,KAAKy7B,iBAE7Bz7B,KAAKo9B,mBAETnC,EAAYjnC,UAAUqsC,kBAAoB,SAAU5sC,GAEhD,GADAuM,KAAKtU,gBAAkB+H,EACnBuM,KAAKo7B,iBAAiBriD,OAAS,EAAG,CAClC,IAAK,GAAIG,GAAI,EAAGA,EAAI8mB,KAAKo7B,iBAAiBriD,OAAQG,IAAK,CACnD,GAAIkL,GAAQ4b,KAAKo7B,iBAAiBhiD,OAAOC,SAASH,EAAEI,WAAY,IAChE,IAAI8K,YAAiBqH,IACjBrH,EAAMsH,gBAAkB+H,EACxBrP,EAAMk8C,uBAAuB7sC,OAE5B,IAAIrP,EAAMq6C,mBAAoB3zC,IAAgB,CAC/C,GAAIZ,OAAY,EACZ9F,GAAMq6C,SAAS8B,WACfr2C,EAAY9F,EAAMq6C,SAAS8B,YAG3Br2C,EAAYuJ,EAAe2sC,oBAC3Bh8C,EAAMq6C,SAAS8B,WAAar2C,IAE3BuJ,EAAeJ,UAAUrR,IAAIkI,IAAc9F,EAAMq6C,UAClDhrC,EAAeJ,UAAU5S,IAAIyJ,EAAW9F,EAAMq6C,UAElDr6C,EAAMxL,OAAO4P,OAAOpE,EAAMvE,IAAIsI,KAAM+B,GACpC8V,KAAKkgC,WAAWz/C,IAAIyJ,EAAW9F,EAAMvE,SAEhCuE,GAAMq6C,mBAAoB3E,IAC/B95B,KAAKw+B,qBAAqBp6C,EAAMq6C,SAAUr6C,EAAMvE,IAAKuE,EAAMxL,OAAQ6a,GAE9DrP,EAAMq6C,mBAAoBrP,KAC/BpvB,KAAKwgC,oBAAoBp8C,EAAMq6C,SAAUr6C,EAAMvE,IAAKuE,EAAMxL,OAAQ6a,EAEtEuM,MAAKu7B,QAAQ/yC,OAAO,YAAawX,KAAKy7B,iBACtCz7B,KAAKu7B,QAAQhpC,UAAW,EAE5ByN,KAAKo7B,sBAGbH,EAAYjnC,UAAUwqC,qBAAuB,SAAUiC,EAAOnC,EAAS1lD,EAAQ6a,GAC3E,GAAIvJ,EAQJ,IAPIu2C,EAAMF,WACNr2C,EAAYu2C,EAAMF,YAGlBr2C,EAAYuJ,EAAe2sC,oBAC3BK,EAAMF,WAAar2C,IAElBuJ,EAAeJ,UAAUrR,IAAIkI,IAC1Bu2C,GAASA,EAAMC,cAAgBD,EAAMC,aAAan/C,aAClDkS,EAAeJ,UAAU5S,IAAIyJ,EAAWu2C,EAAMC,cAC9CD,EAAMC,aAAan/C,WAAWgR,UAAW,EACrCkuC,EAAME,aAAeF,EAAME,YAAYp/C,YAAY,CACnD,GAAI6I,OAAM,EACNq2C,GAAMG,eACNx2C,EAAMq2C,EAAMG,gBAGZx2C,EAAMqJ,EAAe2sC,oBACrBK,EAAMG,eAAiBx2C,GAE3BqJ,EAAeJ,UAAU5S,IAAI2J,EAAKq2C,EAAME,aACxCF,EAAME,YAAYp/C,WAAWgR,UAAW,EACxCkuC,EAAMC,aAAan/C,WAAWd,IAAI,QAAS2J,GAIvDxR,EAAO4P,OAAO81C,EAAQn2C,KAAM+B,GAC5B8V,KAAKkgC,WAAWz/C,IAAIyJ,EAAWo0C,GAC/Bt+B,KAAKy7B,gBAAgBlpC,UAAW,GAEpC0oC,EAAYjnC,UAAUwsC,oBAAsB,SAAUjsC,EAAM+pC,EAAS1lD,EAAQ6a,GACzE,GAAIvJ,EAQJ,IAPIqK,EAAKgsC,WACLr2C,EAAYqK,EAAKgsC,YAGjBr2C,EAAYuJ,EAAe2sC,oBAC3B7rC,EAAKgsC,WAAar2C,IAEjBuJ,EAAeJ,UAAUrR,IAAIkI,GAC9B,GAAIqK,EAAKjJ,YACLmI,EAAeJ,UAAU5S,IAAIyJ,EAAWqK,EAAKjJ,aAC7C1S,EAAO4P,OAAO81C,EAAQn2C,KAAM+B,GAC5B8V,KAAKkgC,WAAWz/C,IAAIyJ,EAAWo0C,OAE9B,IAAI/pC,YAAgBuC,IAAiB,CACtC,GAAI+pC,GAAWtsC,EAAKs6B,aAChBgS,IAAYA,EAASpd,iBACrBhwB,EAAeJ,UAAU5S,IAAIyJ,EAAW22C,EAASpd,iBAErD7qC,EAAO4P,OAAO81C,EAAQn2C,KAAM+B,GAC5B8V,KAAKkgC,WAAWz/C,IAAIyJ,EAAWo0C,KAI3CrD,EAAYjnC,UAAU8sC,SAAW,SAAUC,EAAMxjD,EAAOC,GACpDwiB,KAAK+8B,mBACL,IAAIj/C,GAASkiB,KAAKg9B,aAAaz/C,EAAOC,IAClCM,EAAOo/C,KAAOp/C,EAAOq/C,SACrBn9B,KAAKghC,aAAaD,EAAKvK,QAASuK,EAAKtK,YACrCz2B,KAAKi9B,kBAAkBn/C,EAAOo/C,IAAKp/C,EAAOq/C,MAAO4D,EAAKE,UAAU,IAEpEjhC,KAAKo9B,mBAiCTnC,EAAYjnC,UAAUktC,qBAAuB,SAAUx+C,EAAGC,EAAGC,EAAO3I,EAAQknD,EAAQjE,EAAKC,GACrF,GAAY,OAARD,EACA,KAAM,IAAIrjD,OAAM,MAEpB,IAAc,OAAVsjD,EACA,KAAM,IAAItjD,OAAM,QAEpB,IAAIof,IAAUvW,EAAGC,EAAGC,EAAO3I,GACvBmnD,EAAoB,EAATD,EACX1mD,GAAQ2mD,EAAUA,GAClBC,GAAOpoC,EAAO,GAAIA,EAAO,GAAIxe,EAAK,GAAIA,EAAK,IAC3CsmD,EAAO,GAAIzK,GACA,KAAX6K,GACAJ,EAAK7I,aAAaj/B,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAC1D+G,KAAK8gC,SAASC,EAAM7D,EAAKC,KAGzB4D,EAAKrK,qBAAsB,EAC3BqK,EAAKlJ,OAAOwJ,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,IAAK,IACjDA,EAAI,GAAMpoC,EAAO,GAAKA,EAAO,GAAMmoC,EACnCL,EAAKlJ,OAAOwJ,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,IAAK,IACjDA,EAAI,GAAMpoC,EAAO,GAAKA,EAAO,GAAMmoC,EACnCL,EAAKlJ,OAAOwJ,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,EAAG,IAC/CA,EAAI,GAAKpoC,EAAO,GAChB8nC,EAAKlJ,OAAOwJ,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,GAAI,IAChDN,EAAK3I,cACLp4B,KAAK8gC,SAASC,EAAM7D,EAAKC,KAGjClC,EAAYjnC,UAAU2pC,kBAAoB,SAAU76C,EAAIC,EAAIC,EAAIC,EAAIpK,EAAOyoD,GACvE,GAAI73C,GAASZ,EAAc/F,EAAIC,EAAIC,EAAIC,EAAIpK,EAAOyoD,EAClD,IAAsB,IAAlB73C,EAAO1Q,OAAX,CAGA,GAAImU,IAASzD,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GACjGuW,MAAK07B,IAAI14B,WAAW9V,EAAM,GAAIA,EAAM,GACpC,KAAK,GAAIhU,GAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,GAAQ,EACvCgU,GAASzD,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAC1CmQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,IACf8mB,KAAK07B,IAAIx4B,qBAAqBhW,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,MAG9F+tC,EAAYjnC,UAAUwpC,kBAAoB,SAAU16C,EAAIC,EAAIC,EAAIC,EAAIpK,EAAOyoD,GACvE,GAAI73C,GAASZ,EAAc/F,EAAIC,EAAIC,EAAIC,EAAIpK,EAAOyoD,EAClD,IAAsB,IAAlB73C,EAAO1Q,OAAc,CACrB,GAAImU,IAASzD,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GACjGuW,MAAK07B,IAAI14B,WAAW9V,EAAM,GAAIA,EAAM,GACpC,KAAK,GAAIhU,GAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,GAAQ,EACvCgU,GAASzD,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAC1CmQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,GACXuQ,EAAOvQ,EAAI,IACf8mB,KAAK07B,IAAIx4B,qBAAqBhW,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,MAIlG+tC,EAAYjnC,UAAUutC,UAAY,SAAUrE,GAIxC,IAAK,GAHD/xB,GAAY+xB,EAAIp0B,OAChBhF,EAAUo5B,EAAIsE,aACdC,KACKvoD,EAAI,EAAGA,EAAI4qB,EAAQ/qB,SAAUG,EAClCuoD,EAAWvoD,GAAK4qB,EAAQ5qB,GAAKgkD,EAAIp0B,MAErC9I,MAAK07B,IAAI73B,oBAAoB49B,EAAYvE,EAAIwE,YAAcv2B,GAC3DnL,KAAK07B,IAAIv3B,cAAc+4B,EAAIp0B,QAC3B9I,KAAK07B,IAAIp3B,aAAa44B,EAAIyE,WAC1B3hC,KAAK07B,IAAIt3B,YAAY84B,EAAI0E,UACrB1E,EAAI2E,YAAc,GAClB7hC,KAAK07B,IAAIz3B,eAAei5B,EAAI2E,aAEhC7hC,KAAK07B,IAAIv6B,UAAU+7B,EAAI4E,QAAQ,IAmCnC7G,EAAYjnC,UAAU+tC,WAAa,SAAU5pD,EAAOoc,EAAM0E,EAAQikC,EAAKC,EAAOt2B,GAC1E7G,KAAK+8B,mBACL,IAAIiF,GAAW,GAAI/4B,GACdpC,KACDA,EAAS,GAAI/B,IAEjB,IAAIhnB,GAASkkD,EAAS94B,QAAQ/wB,EAAOoc,EAAMsS,GAAS5N,EAAO,GAAIA,EAAO,IACtE,KAAKnb,EAAO4vB,OAAQ,CAChB,GAAItqB,GAAO4c,KAAKiiC,6BAA6BnkD,EAAOmvB,YAAahU,EAAO,GAAIA,EAAO,GAAI4N,EACnF5N,GAAO,IAAM,IACbA,EAAO,GAAK7V,EAAK,GACjB6V,EAAO,GAAK7V,EAAK,IAEjB6V,EAAO,IAAM,IACbA,EAAO,GAAK7V,EAAK,GACjB6V,EAAO,GAAK7V,EAAK,IAErB4c,KAAKkiC,wBAAwBpkD,EAAQyW,EAAM2oC,EAAKC,EAAOlkC,EAAQ4N,GAEnEve,EAAY,OAAQ0X,KAAKy7B,iBACzBz7B,KAAKo9B,mBAETnC,EAAYjnC,UAAUgtC,aAAe,SAAUv3C,EAAQ04C,GACnD,IAAK,GAAIjpD,GAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAAK,CACpC,GAAIgU,GAAQzD,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAC7C+T,EAAO80C,EAAM/oD,OAAOC,SAASH,EAAEI,WAAY,IAC/C,QAAe,GAAP+T,GACJ,IAAKwQ,iBAAchlB,MACfmnB,KAAK07B,IAAI14B,WAAW9V,EAAM,GAAIA,EAAM,GACpC,MACJ,KAAK2Q,iBAAco6B,OACf,GAAIn6C,GAASkiB,KAAKoiC,gBAAgB34C,EAAQ04C,EAAOjpD,EACjDA,GAAI4E,EAAOjD,KACX,IAAI0C,GAAQO,EAAOoP,KAEnBhU,IADA4E,EAASkiB,KAAKoiC,gBAAgB34C,EAAQ04C,EAAOjpD,IAClC2B,KACX,IAAI2C,GAASM,EAAOoP,KACpB8S,MAAK07B,IAAIx4B,qBAAqBhW,EAAM,GAAIA,EAAM,GAAI3P,EAAM,GAAIA,EAAM,GAAIC,EAAO,GAAIA,EAAO,GACxF,MACJ,KAAKqgB,iBAAckM,KACf/J,KAAK07B,IAAIz4B,mBAAmB/V,EAAM,GAAIA,EAAM,GAC5C,MACJ,SACI,KAAM,IAAIrT,OAAM,+BAExBwT,EAAO80C,EAAM/oD,OAAOC,SAASH,EAAEI,WAAY,MAC/BukB,gBAAcy7B,aAAez7B,gBAAcy7B,WACnDt5B,KAAK07B,IAAIv5B,eAIrB84B,EAAYjnC,UAAUouC,gBAAkB,SAAU34C,EAAQ04C,EAAOtnD,GAC7D,GAAIsnD,EAAM/oD,OAAOC,SAASwB,EAAMvB,WAAY,OAASukB,gBAAco6B,OAC/D,KAAM,IAAIp+C,OAAM,mBAGpB,OADAgB,MACSA,MAASA,EAAOqS,MAASzD,EAAOrQ,OAAOC,SAASwB,EAAMvB,WAAY,OAE/E2hD,EAAYjnC,UAAUmV,YAAc,WAChCnJ,KAAKqiC,yBAA2B,EAChCriC,KAAKo8B,mBAAqB,EAC1Bp8B,KAAKs8B,cAAgB,EACrBt8B,KAAKq8B,cAAgB,IACrBr8B,KAAKk8B,oBAAsB,EAC3Bl8B,KAAK08B,kBACL18B,KAAK27B,aAAe,EAAG,EAAG37B,KAAKqH,MAAM,GAAIrH,KAAKqH,MAAM,IACpDrH,KAAKsiC,wBAAyB,EAC9BtiC,KAAKuiC,gBAAkB,GAE3BtH,EAAYjnC,UAAUwuC,6BAA+B,WAC5CxiC,KAAKsiC,yBACNtiC,KAAK07B,IAAI96B,eAAe,aAAa,GACrCZ,KAAK07B,IAAI96B,eAAe,aAAa,GACrCZ,KAAKsiC,wBAAyB,IAGtCrH,EAAYjnC,UAAUyuC,cAAgB,SAAUtF,GAC5Cn9B,KAAK07B,IAAIv6B,UAAUg8B,EAAM2E,QAAQ,GACjC9hC,KAAKu8B,cAAgBY,GAEzBlC,EAAYjnC,UAAU0uC,YAAc,SAAUxF,GAC1Cl9B,KAAKw8B,YAAcU,EACnBl9B,KAAKuhC,UAAUrE,GACfl9B,KAAKw8B,YAAcU,GAEvBjC,EAAYjnC,UAAU2uC,aAAe,SAAUpuC,EAAMsS,GACjD,GAAIkB,GAAQ/H,KACRvlB,EAAO8Z,EAAKuW,SAAS9Q,SAAS6M,EAClC7G,MAAKy8B,aAAeloC,CACpB,IAAI8pC,GAEAC,EAEAl0C,EAHA61C,GAAc,EAEd1B,GAAQ,EAERqE,GAAc,CAClB,IAAI5iC,KAAKy7B,gBAAgBz5C,IAAI,QAAS,CAClC,GAAI2Z,GAAMqE,KAAKy7B,gBAAgBjwC,OAAO,OAC1B,QAARmQ,OAA+B,KAARA,IACnBA,YAAetR,KACf41C,GAAc,EACd5B,EAAmBr+B,KAAKtU,gBAAgBwH,OAAOyI,IAE1CA,YAAe7Z,MACpBu8C,EAAmB1iC,QAGK,KAArB0iC,GAAyD,OAArBA,IAC3CE,GAAQ,EACRv+B,KAAKkgC,WAAWl1C,QAAQ,SAAU7S,EAAO0H,GACrC,GAAIkoB,EAAMrc,iBACN,GAAY,OAAR7L,OAA+B,KAARA,EAAqB,CAC5C,GAAI0B,GAAawmB,EAAMrc,gBAAgBwH,OAAOrT,EAC1C0B,KAAgBgT,YAAgBc,KAAmB9T,IAAegT,EAAKjJ,aACtEiJ,YAAgBuC,KAAmBvV,IAAegT,EAAKs6B,cAAcpL,mBACtE6a,EAAUnmD,EACViS,EAAMvK,EACN+iD,GAAc,QAIjBruC,GAAKgsC,YAAchsC,EAAKgsC,aAAe1gD,IAC5Cy+C,EAAUnmD,EACViS,EAAMvK,EACN+iD,GAAc,MAS9B,GAJIrE,IACAF,EAAmB,GAAIv8C,IAAeke,KAAKtU,iBAC3CsU,KAAKy7B,gBAAgBjzC,OAAO,OAAQ61C,QAEjB,KAAZC,EAAyB,CAchC,GAbAA,EAAUh5C,GAASnD,IAAIsG,KAClB2B,IACGmK,EAAKgsC,YACLn2C,EAAMmK,EAAKgsC,WACXlC,EAAiB71C,OAAO81C,EAAQn2C,KAAMiC,IAEjC4V,KAAKtU,gBACVtB,EAAM4V,KAAKtU,gBAAgB00C,oBAG3BpgC,KAAKo7B,iBAAiB9/C,MAAOmjD,SAAYlqC,EAAM1U,IAAOy+C,EAAS1lD,OAAUylD,KAG7Ej0C,GAAO4V,KAAKtU,gBAIZ,GAHK6I,EAAKgsC,aACNhsC,EAAKgsC,WAAan2C,GAElBmK,EAAKjJ,YACL0U,KAAKtU,gBAAgB2H,UAAU5S,IAAI2J,EAAKmK,EAAKjJ,aAC7C+yC,EAAiB71C,OAAO81C,EAAQn2C,KAAMiC,OAErC,IAAImK,YAAgBuC,IAAiB,CACtC,GAAI+pC,GAAWtsC,EAAKs6B,aAChBgS,IAAYA,EAASpd,iBACrBzjB,KAAKtU,gBAAgB2H,UAAU5S,IAAI2J,EAAKy2C,EAASpd,iBAErD4a,EAAiB71C,OAAO81C,EAAQn2C,KAAMiC,GAGzCw4C,GACD5iC,KAAKkgC,WAAWz/C,IAAI2J,EAAKk0C,GAG7B2B,IACAjgC,KAAKy7B,gBAAgBlpC,UAAW,GAEhCyN,KAAKq7B,wBACLr7B,KAAKu7B,QAAQhpC,UAAW,GAE5ByN,KAAK07B,IAAI15B,SAASs8B,EAAQn2C,KAAM1N,IAEpCwgD,EAAYjnC,UAAUgpC,aAAe,SAAUz/C,EAAOC,GAClD,GAAI0/C,GACAC,CAaJ,OAZI5/C,KACIA,YAAiBslD,IACjB3F,EAAM3/C,EAGN4/C,EAAQ5/C,GAGZC,GAAUA,YAAkBslD,MAC5B3F,EAAQ3/C,GAEZwiB,KAAKs9B,cAAcJ,EAAKC,EAAO,OACtBD,IAAKA,EAAKC,MAAOA,IAE9BlC,EAAYjnC,UAAUspC,cAAgB,SAAUJ,EAAKC,EAAO5oC,EAAMsS,IAC1Dq2B,GAAOC,IACPn9B,KAAKwiC,+BAELtF,GACAl9B,KAAK0iC,YAAYxF,GAEjBC,GACAn9B,KAAKyiC,cAActF,GAEnB5oC,GACAyL,KAAK2iC,aAAapuC,EAAMsS,IAGhCo0B,EAAYjnC,UAAUkuC,wBAA0B,SAAUpkD,EAAQyW,EAAM2oC,EAAKC,EAAO4F,EAAiBl8B,GACjG,IAAK/oB,EAAO4vB,OAAQ,CAChB,GAAIR,GAAqBrG,OAAsC,KAArBA,EAAOxB,YAA8BwB,EAAOxB,UAClF29B,MAAgC,KAAXn8B,GAA2BA,OAAmC,KAAlBA,EAAOd,SACpEc,EAAOd,OACXk9B,EAAa/1B,GAAqB81B,EAClCx4C,MAAQ,EACZ,IAAIy4C,EAAY,CACZz4C,EAAQwV,KAAKu6B,MACb,IAAI2I,IAAcH,EAAgB,GAAIA,EAAgB,GAAIjlD,EAAOmvB,YAAY,GAAInvB,EAAOmvB,YAAY,GAChG81B,GAAgB,GAAK,IACrBG,EAAW,GAAKH,EAAgB,IAEhCl8B,EAAOtB,gBAAkBC,uBAAqB29B,OAC9CD,EAAW,KAAOH,EAAgB,GAAKG,EAAW,IAAM,EAEnDr8B,EAAOtB,gBAAkBC,uBAAqBtN,SACnDgrC,EAAW,IAAOH,EAAgB,GAAKG,EAAW,IAEtDljC,KAAKojC,QAAQF,GAEb3uC,GAAQA,YAAgBuC,KAAmBvC,EAAKs6B,eAChDt6B,EAAKs6B,wBAAyBzM,KAAwB7tB,EAAK8uC,WACtD9uC,EAAKs6B,cAAcjL,YAAY8B,YAChCl7B,EAAQwV,KAAKu6B,OACbv6B,KAAK0lB,WAAY,IAGzB1lB,KAAKsjC,qBAAqB/uC,EAAM2oC,EAAKC,EAAOt2B,EAC5C,IAAI3E,OAAiC,KAAX2E,GAAqC,OAAXA,EAAmBA,EAAO7B,wBAA0B,GACpG9C,KAAgBlC,KAAKq8B,eACrBr8B,KAAK07B,IAAIz5B,gBAAgBC,GACzBlC,KAAKq8B,aAAen6B,EAExB,IAAIqhC,GAAqBvjC,KAAKwjC,2BAA2B1lD,EAAOmvB,YAAY,GAAI81B,EAAgB,GAAIl8B,GAChG5sB,MAA4B,KAAX4sB,GAAqC,OAAXA,GAA0C,IAAvBA,EAAOnB,YACrEnR,EAAKuW,SAAS5D,WAAWL,GACzBA,EAAOnB,YAAcnR,EAAKuW,SAAS5D,WAAWL,GAG9CqK,EAAQ,CACZA,GAHyB,OAAXrK,OAAqC,KAAXA,GACpCA,EAAOS,iBAAmB7I,oBAAkB8I,UAE7BttB,GAAUsa,EAAKta,OAASsa,EAAKuW,SAAS/D,YAAYF,IAAY5sB,EAASsa,EAAKuW,SAASlE,WAAWC,GAC/GA,GAAUA,EAAOtB,gBAAkBC,uBAAqBtN,QACpD6qC,EAAgB,GAAKjlD,EAAOmvB,YAAY,IAAO,GAC9C81B,EAAgB,GAAKjlD,EAAOmvB,YAAY,GAAO1Y,EAAKuW,SAASzD,MAAQ,EAAK,GACvEjuB,OAAO8J,WAAWzF,EAAgBslD,EAAgB,MAClD3pD,OAAO8J,WAAWzF,EAAgB8W,EAAKuW,SAAS5D,WAAWL,OAC3DqK,GAAUj3B,EAASsa,EAAKuW,SAASzD,MAI7C,IAAItb,GAAS,GAAIC,GACbgU,MAAK0lB,WACL1lB,KAAKw6B,mBAAmBuI,EAAgB,GAAKxuC,EAAK9Z,KAAO,EAAGsoD,EAAgB,GAAK7xB,EAAQqyB,GACzFvjC,KAAKyjC,eAAe,GAAI,MAGxB13C,EAAOE,WAAW82C,EAAgB,KAAOA,EAAgB,GAAKxuC,EAAKuW,SAAS5D,WAAWL,KAClFtS,EAAKuW,SAAS/D,YAAYF,GAAU,GAAKtS,EAAKuW,SAAS/D,YAAYF,GAAUtS,EAAKuW,SAAS/D,YAAYF,IACxG08B,GACJvjC,KAAK07B,IAAI/6B,UAAU5U,IAEnBg3C,EAAgB,GAAKxuC,EAAKuW,SAASzD,OAC9BvpB,EAAOmvB,YAAY,GAAK81B,EAAgB,GAAOxuC,EAAKuW,SAASzD,MAAQ,EAAK,IAC3Ek8B,EAAqB,GAGF,IAAvBA,GACe,OAAX18B,GAAmBA,EAAOtB,gBAAkBC,uBAAqBtN,QAC7D6qC,EAAgB,GAAKjlD,EAAOmvB,YAAY,IAAO,GAC9C81B,EAAgB,GAAKjlD,EAAOmvB,YAAY,GAAO1Y,EAAKuW,SAASzD,MAAQ,EAAK,IAC3Ek8B,IAAuBryB,GAASj3B,EAASsa,EAAKuW,SAASzD,QAAU,GAIzErH,KAAK0lB,YACL1lB,KAAK07B,IAAIt5B,eAAe,EAAG,GAC3BpC,KAAK07B,IAAIr5B,aAAapoB,IAE1B+lB,KAAK0jC,kBAAkB5lD,EAAQyW,EAAMsS,EAAQk8B,GAClB,IAAvBQ,GACAvjC,KAAK07B,IAAIt5B,eAAe,IAAKmhC,EAAqBzlD,EAAOmtB,cAE7D3iB,EAAY,OAAQ0X,KAAKy7B,iBACzBz7B,KAAK07B,IAAI34B,WACL/C,KAAK0lB,WACL1lB,KAAK06B,QAAQlwC,GAEjBwV,KAAK2jC,wBAAwBxG,EAAOr/C,EAAQyW,EAAMwuC,EAAiBl8B,GAC/Do8B,GACAjjC,KAAK06B,QAAQlwC,KAIzBywC,EAAYjnC,UAAU4vC,aAAe,WACjC,GACI9oD,GAAYklB,KAAKtU,gBAAgBuM,UAAUnd,SAO/C,OANIklB,MAAK7G,MAAM0qC,YAAc/oD,EAAY,EAC9BklB,KAAKtU,gBAAgBuM,UAAUld,QAAQilB,KAAK7G,MAAM0qC,WAAa,GAG/D7jC,KAAKtU,gBAAgBuM,UAAU6rC,WAI9C7I,EAAYjnC,UAAUsvC,qBAAuB,SAAU/uC,EAAM2oC,EAAKC,EAAOt2B,GACrE,GAAIk9B,GAAKC,qBAAmBC,KACxBC,GAAe,CAUnB,IATIhH,GAAOC,EACP4G,EAAKC,qBAAmBG,WAEnBjH,EACL6G,EAAKC,qBAAmBI,OAEnBjH,IACL4G,EAAKC,qBAAmBC,MAExB1vC,GAAQA,YAAgBuC,MAAoBvC,EAAK2sB,WAAmD,IAArC3sB,EAAK86B,OAASh+B,eAAaC,OAAc,CACxG,GAAI+yC,GAAW9vC,EAAKs6B,cAAc/jB,SAASgP,gBACvCwqB,GAAa,CACbD,IAAYA,EAASE,oBAAoBpvC,SAAS,UAClDmvC,GAAa,GAEb/vC,EAAKs6B,eAAiBt6B,EAAKs6B,cAAc/jB,UAAYvW,EAAKs6B,cAAc/jB,SAASsZ,UACjF7vB,EAAKiwC,SAA0B,IAAhBjwC,EAAKiwC,SAAoBF,KACnCpH,GAAOC,IACRD,EAAM,GAAI2F,IAAO1F,EAAM2E,OAAQ,IAEnCiC,EAAKC,qBAAmBG,WACxBD,GAAe,GAGnBr9B,GAAUA,EAAOlB,WACjBo+B,GAAMC,qBAAmBS,UAE7BzkC,KAAK07B,IAAI54B,aACT9C,KAAKs9B,cAAcJ,EAAKC,EAAO5oC,EAAMsS,GACjCk9B,IAAO/jC,KAAKk8B,qBACZl8B,KAAK07B,IAAIr4B,sBAAsB0gC,GAC/B/jC,KAAKk8B,mBAAqB6H,EAE9B,IAAIW,OAAwB,KAAX79B,GAAqC,OAAXA,EAAmBA,EAAOpB,iBAAmB,CACpFi/B,KAAO1kC,KAAKo8B,oBACZp8B,KAAK07B,IAAIn4B,qBAAqBmhC,GAC9B1kC,KAAKo8B,kBAAoBsI,EAE7B,IAAIC,OAAwB,KAAX99B,GAAqC,OAAXA,EAAmBA,EAAOnD,YAAc,CAC/EihC,KAAO3kC,KAAKs8B,eACZt8B,KAAK07B,IAAIj4B,gBAAgBkhC,GACzB3kC,KAAKs8B,aAAeqI,GAEpBpwC,GAAQ2vC,GACRlkC,KAAK07B,IAAIv3B,cAAc5P,EAAK9Z,KAAO,KAG3CwgD,EAAYjnC,UAAU0vC,kBAAoB,SAAU5lD,EAAQyW,EAAMsS,EAAQk8B,GAOtE,IAAK,GAND9oD,OAA4B,KAAX4sB,GAAqC,OAAXA,GAA0C,IAAvBA,EAAOnB,YACrEnR,EAAKuW,SAAS5D,WAAWL,GACzBA,EAAOnB,YAAcnR,EAAKuW,SAAS5D,WAAWL,GAC9CiD,EAAQhsB,EAAOsvB,OACfw3B,EAAUrwC,EACVqP,EAAuB,OAAZghC,GAAoBA,EAAQ1jB,UAClChoC,EAAI,EAAGm0B,EAAMvD,EAAM/wB,OAASG,EAAIm0B,GAAOn0B,IAAM8mB,KAAKuiC,eAAiBrpD,IAAK,CAC7E,GAAI2rD,GAAW/6B,EAAM1wB,OAAOC,SAASH,EAAEI,WAAY,KAC/C6xB,EAAY05B,EAAS/7B,OACrBg8B,EAAc9kC,KAAK+kC,yBAAyB55B,EAAW43B,EAAgB,GAAIl8B,GAC3E7G,KAAKkK,eAAe26B,EAAUh+B,EAAQk8B,EAAgB,GAAW,IAAN7pD,EAU/D,IAToB,IAAhB4rD,GACA9kC,KAAK07B,IAAIt5B,eAAe0iC,EAAa,GAErClhC,EACA5D,KAAKglC,iBAAiBH,EAAU9B,EAAgB,GAAIxuC,EAAMsS,GAG1D7G,KAAKilC,eAAeJ,EAAU9B,EAAgB,GAAIl8B,EAAQtS,GAEzDrb,EAAI,IAAMm0B,EAAM,CACjB,GAAI63B,GAAcllC,KAAKwjC,2BAA2B1lD,EAAOmvB,YAAY,GAAI81B,EAAgB,GAAIl8B,GACzF9a,EAAS,GAAIC,IACbm5C,IAAepC,EAAgB,GAAKxuC,EAAKuW,SAAS5D,WAAWL,IAC7DtS,EAAKuW,SAAS/D,YAAYF,GAC1Bq+B,EACCjrD,GAAUf,EAAI,EACnB6S,GAAOE,WAAW82C,EAAgB,GAAIoC,GACtCnlC,KAAK07B,IAAI/6B,UAAU5U,MAI/BkvC,EAAYjnC,UAAUgxC,iBAAmB,SAAUH,EAAUjiD,EAAO2R,EAAMsS,GACtE,GAAIkD,GAAO86B,EAAS93B,MAChBmhB,EAAkB,OAAXrnB,OAAqC,KAAXA,GAA0BA,EAAO5B,YAClEmgC,EAA2B,OAAXv+B,OAAqC,KAAXA,GAA0BA,EAAOnD,YAAc,EACzFkhC,EAAUrwC,EACVmP,EAAc1D,KAAKqlC,aAAaR,EAAUjiD,EAAOikB,EAAQ+9B,GACzDU,EAAY,GAAIvX,GACpB,IAAIG,GAAmB,OAAXrnB,OAAqC,KAAXA,GAA0BA,EAAOmoB,gBAAkBxwB,mBAAiBhY,KAAO,CAC7G,GAAI++C,MACAC,EAAyB,OAAX3+B,OAAqC,KAAXA,GAA0BA,EAAOvB,YAActH,mBAAiB7F,MAOxGo2B,MALAgX,EADW,OAAX1+B,OAAqC,KAAXA,GAA0BA,EAAOmoB,gBAAkBxwB,mBAAiBhY,KACrF8+C,EAAUp8B,QAAQa,EAAM66B,EAAU/9B,EAAOmoB,gBAAkBxwB,mBAAiByG,YAA6BmgC,EAAcv+B,GAGvHy+B,EAAUp8B,QAAQa,EAAM66B,EAASY,EAAYJ,EAAcv+B,IAG7D9tB,OAAS,EACD,OAAX8tB,OAAqC,KAAXA,GAA0BA,EAAOmoB,gBAAkBxwB,mBAAiBhY,OAC9F+nC,EAAQ+W,EAAUhX,aAAavkB,EAAM66B,EAAU/9B,EAAOmoB,gBAAkBxwB,mBAAiByG,YAA6BmgC,EAAcv+B,IAIxI0nB,GAASxkB,GAEb/J,KAAKylC,mBAAmBF,EAAQhX,EAAOqW,EAAS/9B,EAAQnD,OAGxD,IAAI0hC,EAAc,CACd,GAAItnD,GAASkiB,KAAK0lC,kBAAkB37B,EAAM66B,EAAS,MAC/CW,EAASznD,EAAO6nD,OAChBpX,EAAQzwC,EAAOywC,KACnBvuB,MAAKylC,mBAAmBF,EAAQhX,EAAOqW,EAAS/9B,EAAQnD,OAEvD,CACD,GAAI3e,GAAQib,KAAK4lC,kBAAkB77B,EAAM66B,EACzC5kC,MAAK07B,IAAI/3B,kBAAkB5e,GAAO,KAI9Ck2C,EAAYjnC,UAAUyxC,mBAAqB,SAAUF,EAAQhX,EAAOh6B,EAAMsS,EAAQnD,GAC9E,GAAe,OAAX6hC,OAAqC,KAAXA,GAA0BA,EAAOxsD,OAAS,GAAe,OAAVw1C,OAAmC,KAAVA,GAClGA,EAAMx1C,OAAS,GAAc,OAATwb,OAAiC,KAATA,EAAsB,CAClEyL,KAAK07B,IAAIt5B,gBACT,IAAI1f,GAAI,EACJmjD,EAAS,EACTjgC,EAAkB,EAClBgF,EAAkB,CACtB,KACmB,OAAX/D,OAAqC,KAAXA,IAC1BjB,EAAkBiB,EAAOjB,gBACzBgF,EAAkB/D,EAAO+D,gBACzB/D,EAAOjB,gBAAkB,EACzBiB,EAAO+D,gBAAkB,EAE7B,IAAIk7B,GAAavxC,EAAKktB,mBAAmBhY,GAAiBvJ,YAAa2G,GAAUnD,EAC7E+B,EAA+B,OAAXoB,EAAmBA,EAAOpB,iBAAmB,CAErEqgC,IAAcrgC,GADc,OAAXoB,OAAqC,KAAXA,GAA0C,IAAhBnD,EAAqBmD,EAAOnD,YAAc,EAE/G,KAAK,GAAIxqB,GAAI,EAAGA,EAAIqsD,EAAOxsD,OAAQG,IAAK,CACpC,GAAI6L,GAAQwgD,EAAOrsD,GACfisB,EAAOopB,EAAMr1C,GACb6sD,EAAa,CACP,KAANrjD,GACAsd,KAAK07B,IAAIt5B,eAAe1f,EAAG,GAE3ByiB,EAAKpsB,OAAS,IACdgtD,GAAcxxC,EAAKu7B,cAAc3qB,EAAM0B,GAAQ,GAC/Ck/B,GAActgC,EACdzF,KAAK07B,IAAIl5B,UAAUzd,IAEnB7L,IAAMqsD,EAAOxsD,OAAS,IAEtB8sD,GADAnjD,EAAIqjD,EAAaD,GAIrBD,EAAS,GACT7lC,KAAK07B,IAAIt5B,gBAAgByjC,EAAQ,WAItB,OAAXh/B,OAAqC,KAAXA,IAC1BA,EAAOjB,gBAAkBA,EACzBiB,EAAO+D,gBAAkBA,MAKzCqwB,EAAYjnC,UAAU0xC,kBAAoB,SAAU37B,EAAM66B,EAASrW,GAC/D,GAAIoX,KACJ,IAAa,OAAT57B,OAAiC,KAATA,GAAwBA,EAAKhxB,OAAS,EAAG,CACjEw1C,EAAQxkB,EAAKpV,MAAM,KACnB,KAAK,GAAIzb,GAAI,EAAGA,EAAIq1C,EAAMx1C,OAAQG,IAAK,CACnC,GAAIisB,GAAOopB,EAAMr1C,GACb6L,EAAQib,KAAK4lC,kBAAkBzgC,EAAMy/B,EACzCe,GAAOvsD,OAAOC,SAASH,EAAEI,WAAY,KAAOyL,GAGpD,OAAS4gD,OAAQA,EAAQpX,MAAOA,IAEpC0M,EAAYjnC,UAAU4xC,kBAAoB,SAAUx4C,EAAMw3C,GACtD,GAAI7/C,GAAQ,IACZ,IAAa,OAATqI,OAAiC,KAATA,GAAoC,OAAZw3C,OAAuC,KAAZA,GAC3EA,EAAQ/V,wBAAyBzM,IAAsB,CACvD,GAAIwM,GAAYgW,EAAQ/V,cAAclL,UACtCihB,GAAQhf,YAAYx4B,GAGpBrI,EAAQhH,EADIU,EADZsG,EAAQ6pC,EAAUlN,eAAet0B,KAIrC,MAAOrI,IAEXk2C,EAAYjnC,UAAUwvC,2BAA6B,SAAUwC,EAAYC,EAAcp/B,GACnF,GAAIqK,GAAQ,CACZ,IAAI+0B,GAAgB,OAAwB,KAAXp/B,GAAqC,OAAXA,GAAoBA,EAAOtB,gBAAkBC,uBAAqBhM,IACzH,OAAQqN,EAAOtB,eACX,IAAKC,wBAAqB29B,OACtBjyB,GAAS+0B,EAAeD,GAAc,CACtC,MACJ,KAAKxgC,wBAAqBtN,OACtBgZ,EAAQ+0B,EAAeD,EAInC,MAAO90B,IAEX+pB,EAAYjnC,UAAU+wC,yBAA2B,SAAU55B,EAAW+6B,EAAar/B,GAC/E,GAAIqK,GAAQ,CACZ,IAAIg1B,GAAe,OAAwB,KAAXr/B,GAAqC,OAAXA,GAAoBA,EAAOvB,YAActH,mBAAiB9jB,KAChH,OAAQ2sB,EAAOvB,WACX,IAAKtH,oBAAiBmoC,OAClBj1B,GAASg1B,EAAc/6B,GAAa,CACpC,MACJ,KAAKnN,oBAAiB7F,MAClB+Y,EAAQg1B,EAAc/6B,EAIlC,MAAO+F,IAEX+pB,EAAYjnC,UAAUkW,eAAiB,SAAU26B,EAAUh+B,EAAQjkB,EAAO+nB,GACtE,GAAIV,GAAa,EACbqB,GAAuBu5B,EAAS73B,UAAY3B,YAAUC,oBAAsB,CAKhF,OAJIzE,IAAUyE,IACVrB,EAAa,EAAcpD,EAAOjB,gBAAkBiB,EAAO+D,gBAC3DX,EAAcrnB,EAAQ,EAAKvK,KAAKY,IAAI2J,EAAOqnB,GAAcA,GAEtDA,GAEXgxB,EAAYjnC,UAAUixC,eAAiB,SAAUJ,EAAUjiD,EAAOikB,EAAQtS,GACtEyL,KAAKqlC,aAAaR,EAAUjiD,EAAOikB,EAAQtS,EAC3C,IAAIpc,GAAQ,EACZ,KAAqC,IAAjC0sD,EAAS93B,MAAM7sB,QAAQ,OAAgD,IAAjC2kD,EAAS93B,MAAM7sB,QAAQ,KAC7D,IAAK,GAAIhH,GAAI,EAAGA,EAAI2rD,EAAS93B,MAAMh0B,OAAQG,IACmB,MAAtD2rD,EAAS93B,MAAM3zB,OAAOC,SAASH,EAAEI,WAAY,KAC7CnB,GAAS,MAEkD,MAAtD0sD,EAAS93B,MAAM3zB,OAAOC,SAASH,EAAEI,WAAY,KAClDnB,GAAS,MAGTA,GAAS0sD,EAAS93B,MAAM3zB,OAAOC,SAASH,EAAEI,WAAY,IAIpD,MAAVnB,IACAA,EAAQ0sD,EAAS93B,OAErB/M,KAAK07B,IAAI/3B,kBAAkB,IAAMxrB,EAAQ,MAE7C8iD,EAAYjnC,UAAUqxC,aAAe,SAAUR,EAAUqB,EAAar/B,EAAQtS,GAC1E,GAAIwV,GAAO86B,EAAS93B,MAChB5B,EAAY05B,EAAS/7B,OACrBs9B,EAAgBpmC,KAAKqmC,eAAexB,EAAUqB,EAAar/B,EAAQtS,GACnE+xC,EAAkBz/B,GAAiC,IAAvBA,EAAOnD,YACnC6iC,EAAmBhyC,EAAKm7B,mBAAmB3lB,GAAO,IAAK,OACvDokB,EAAY,CAWhB,OAVIiY,IACIE,IACAn7B,GAAco7B,EAAmB1/B,EAAOnD,aAE5CyqB,GAAa+X,EAAc/6B,GAAao7B,EACxCvmC,KAAK07B,IAAIj4B,gBAAgB0qB,IAEpBtnB,GAAUA,EAAOvB,YAActH,mBAAiBwoC,SACrDxmC,KAAK07B,IAAIj4B,gBAAgB,GAEtB0qB,GAEX8M,EAAYjnC,UAAUqyC,eAAiB,SAAUxB,EAAUqB,EAAar/B,EAAQtS,GAC5E,GAAIwV,GAAO86B,EAAS93B,MAChB5B,EAAY05B,EAAS/7B,OACrB29B,EAAgB5/B,GAAUA,EAAOvB,YAActH,mBAAiBwoC,QAChEE,EAAaR,GAAe,GAAK/6B,EAAY+6B,EAE7CS,EADmBpyC,EAAKm7B,mBAAmB3lB,GAAO,IAAK,OACvB,GAAiB,MAAZA,EAAK,GAC1C68B,GAAuB/B,EAAS73B,UAAY3B,YAAUmB,aAAe,CACzE,OAAQi6B,IAAgBC,GAAaC,GAAaC,GAEtD3L,EAAYjnC,UAAU2vC,wBAA0B,SAAUxG,EAAOr/C,EAAQyW,EAAMwuC,EAAiBl8B,GAC5F,GAAItS,EAAKsyC,aAAetyC,EAAKuyC,YAAa,CACtC,GAAIC,GAAU/mC,KAAKgnC,6BAA6B7J,EAAO5oC,EACvD,QAAuB,KAAZwyC,GAAuC,OAAZA,EAKlC,IAAK,GAJD71B,GAAQlR,KAAKwjC,2BAA2B1lD,EAAOmvB,YAAY,GAAI81B,EAAgB,GAAIl8B,GACnFogC,EAAmBlE,EAAgB,GAAK7xB,EAAQ3c,EAAKuW,SAASlE,WAAWC,GAAU,IAAMkgC,EAAQj+B,OACjGo+B,EAAmBnE,EAAgB,GAAK7xB,EAAQ3c,EAAKuW,SAAS5D,WAAWL,GAAU,EAAI,IAAMkgC,EAAQj+B,OACrGgB,EAAQhsB,EAAOsvB,OACVl0B,EAAI,EAAGA,EAAI4E,EAAOqpD,WAAYjuD,IAAK,CACxC,GAAI2rD,GAAW/6B,EAAM1wB,OAAOC,SAASH,EAAEI,WAAY,KAC/C6xB,EAAY05B,EAAS/7B,OACrBs+B,EAASpnC,KAAK+kC,yBAAyB55B,EAAW43B,EAAgB,GAAIl8B,GACtEoD,EAAajK,KAAKkK,eAAe26B,EAAUh+B,EAAQk8B,EAAgB,GAAW,IAAN7pD,GACxE4J,EAAKigD,EAAgB,GAAKqE,EAC1BpkD,EAAOgd,KAAKqmC,eAAexB,EAAU9B,EAAgB,GAAIl8B,EAAQtS,GAEjEzR,EAAKigD,EAAgB,GAAK94B,EAD1BnnB,EAAKqoB,EAAYlB,CAEjB1V,GAAKsyC,cACL7mC,KAAKqnC,SAASN,EAASjkD,EAAImkD,EAAkBjkD,EAAIikD,GACjDA,GAAoBnpD,EAAOmtB,aAE3B1W,EAAKuyC,cACL9mC,KAAKqnC,SAASN,EAASjkD,EAAIokD,EAAkBlkD,EAAIkkD,GACjDA,GAAoBppD,EAAOmtB,gBAiC/CgwB,EAAYjnC,UAAUqzC,SAAW,SAAUnK,EAAKp6C,EAAIC,EAAIC,EAAIC,GACxD+c,KAAK+8B,oBACL/8B,KAAKs9B,cAAcJ,GACnBl9B,KAAK07B,IAAI14B,WAAWlgB,EAAIC,GACxBid,KAAK07B,IAAIz4B,mBAAmBjgB,EAAIC,GAChC+c,KAAK07B,IAAI/5B,cACTrZ,EAAY,MAAO0X,KAAKy7B,iBACxBz7B,KAAKo9B,mBAETnC,EAAYjnC,UAAUgzC,6BAA+B,SAAU7J,EAAO5oC,GAClE,MAAO,IAAIsuC,IAAO1F,EAAM2E,OAAQvtC,EAAKuW,SAASzD,MAAQ,KAE1D4zB,EAAYjnC,UAAUiuC,6BAA+B,SAAUqF,EAAU5kD,EAAGC,EAAGkkB,GAC3E,GAAI0gC,IAAqB7kD,EAAGC,EAAG2kD,EAAS,GAAIA,EAAS,GACrD,IAAIzgC,EAAQ,CACR,OAAQA,EAAOvB,WACX,IAAKtH,oBAAiBmoC,OAClBoB,EAAkB,GAAKA,EAAkB,GAAKA,EAAkB,GAAK,CACrE,MACJ,KAAKvpC,oBAAiB7F,MAClBovC,EAAkB,GAAKA,EAAkB,GAAKA,EAAkB,GAGxE,OAAQ1gC,EAAOtB,eACX,IAAKC,wBAAqB29B,OACtBoE,EAAkB,GAAKA,EAAkB,GAAKA,EAAkB,GAAK,CACrE,MACJ,KAAK/hC,wBAAqBtN,OACtBqvC,EAAkB,GAAKA,EAAkB,GAAKA,EAAkB,IAI5E,MAAOA,IAEXtM,EAAYjnC,UAAUipC,kBAAoB,SAAUC,EAAKC,EAAO8D,EAAUuG,OAC9C,KAAbvG,IACPA,EAAWviC,cAAYk4B,QAE3B,IAAI6Q,OAA4B,KAAVtK,GAAmC,OAAVA,EAC3CuK,MAAwB,KAARxK,GAA+B,OAARA,EACvC17B,EAAYy/B,IAAaviC,cAAYipC,SACrCD,IAASD,EACLD,EACAxnC,KAAK07B,IAAI55B,qBAAqBN,GAG9BxB,KAAK07B,IAAI75B,gBAAgBL,GAGvBkmC,GAAUD,EAGXC,EACDF,EACAxnC,KAAK07B,IAAI95B,mBAGT5B,KAAK07B,IAAI/5B,cAIT6lC,EACAxnC,KAAK07B,IAAIh6B,eAAeF,GAGxBxB,KAAK07B,IAAIj6B,UAAUD,GAfvBxB,KAAK07B,IAAI35B,YAmBjBk5B,EAAYjnC,UAAU4zC,uBAAyB,SAAU5tD,GACrD,GAAI6tD,EACJ,IAAI7tD,EAAM,CACN,GAAI8tD,IAAc,EAAG,GACjBC,GAAqB,CACzB,IAAI/tD,EAAKgB,gBAAgBgH,IAAI,YAAchI,EAAKgB,gBAAgBgH,IAAI,YAAa,CAC7E6lD,EAAO7tD,EAAKgB,gBAAgBkH,SAAS,UACrC,IAAI8lD,GAAOhuD,EAAKgB,gBAAgBkH,SAAS,WACrC2lD,GAAK,KAAOG,EAAK,IAAMH,EAAK,KAAOG,EAAK,IAAMH,EAAK,KAAOG,EAAK,IAAMH,EAAK,KAAOG,EAAK,KACtFD,GAAqB,GAErBF,EAAK,GAAK,GAAKA,EAAK,GAAK,GAAKG,EAAK,GAAK,GAAKA,EAAK,GAAK,GACvDhoC,KAAKw6B,mBAAmBqN,EAAK,IAAKA,EAAK,IACvCC,EAAW,IAAMD,EAAK,GACtBC,EAAW,GAAKD,EAAK,IAEf7tD,EAAKgB,gBAAgBgH,IAAI,aAC/B+lD,GAAqB,GAErBA,IACA/nC,KAAK07B,IAAIn7B,cAAc,0CACnBP,KAAKioC,SACLjoC,KAAKw6B,mBAAmBx6B,KAAKioC,SAAS,IAAKjoC,KAAKioC,SAAS,KAGnDjuD,EAAKmlD,QAAQ,GAAMn/B,KAAKqiC,0BAA8D,IAAlCriC,KAAKqiC,yBAC3DriC,KAAKw6B,mBAAmB,GAAIx6B,KAAKqH,MAAM,IAGvCrH,KAAKw6B,mBAAmB,GAAIx6B,KAAKqiC,gCAOjDriC,MAAK07B,IAAIn7B,cAAc,0CACnBP,KAAKqiC,4BAA+BriC,KAAKqH,MAAM,KAC3CrH,KAAKioC,YACLJ,EAAO7nC,KAAKioC,UACH,GAAK,GAAKJ,EAAK,GAAK,GAAK7nC,KAAKqH,MAAM,KAAOwgC,EAAK,IAAM7nC,KAAKqH,MAAM,KAAOwgC,EAAK,IAClF7nC,KAAKw6B,mBAAmBqN,EAAK,IAAKA,EAAK,IAYvC7nC,KAAKqiC,2BAA6BriC,KAAKqH,MAAM,IAAwC,IAAlCrH,KAAKqiC,yBACxDriC,KAAKw6B,mBAAmB,GAAIx6B,KAAKqH,MAAM,IAGvCrH,KAAKw6B,mBAAmB,GAAIx6B,KAAKqiC,4BAoCrDpH,EAAYjnC,UAAUk0C,eAAiB,SAAUpJ,EAAQC,GACrD,GAAIhzC,GAAS,GAAIC,GACjBD,GAAO8zC,OAAOf,EAAQC,GACtB/+B,KAAK07B,IAAIj7B,WAAW1U,GACpBiU,KAAK7T,QAAQg8C,UAAUp8C,IAgC3BkvC,EAAYjnC,UAAUwmC,mBAAqB,SAAU93C,EAAGC,GACpD,GAAIoJ,GAAS,GAAIC,GACjBD,GAAOE,WAAWvJ,GAAIC,GACtBqd,KAAK07B,IAAIj7B,WAAW1U,GACpBiU,KAAK7T,QAAQg8C,UAAUp8C,IA+B3BkvC,EAAYjnC,UAAUo0C,gBAAkB,SAAUp/C,GAC9C,GAAI+C,GAAS,GAAIC,GACjBD,GAAOG,SAASlD,GAChBgX,KAAK07B,IAAIj7B,WAAW1U,GACpBiU,KAAK7T,QAAQg8C,UAAUp8C,IA4B3BkvC,EAAYjnC,UAAUovC,QAAU,SAAUnqC,EAAQtS,OAC1B,KAATA,IACPA,EAAO+X,cAAYk4B,SAEvB52B,KAAK07B,IAAIr6B,iBAAiBpI,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAClE+G,KAAK07B,IAAIn6B,UAAU5a,IAAS+X,cAAYipC,YA6B5C1M,EAAYjnC,UAAUq0C,gBAAkB,SAAUjE,EAAQH,EAAMt9C,OACxC,KAATs9C,IACPA,EAAOG,OAES,KAATz9C,IACPA,EAAOO,eAAagB,YAEY,KAAzB8X,KAAK+7B,kBACZ/7B,KAAK+7B,gBAAkB,GAAIjU,KAE/B,IACIwgB,GADAC,EAAkB,MAAQnE,EAAO9qD,WAAa,OAAS2qD,EAAK3qD,WAAa,OAASqN,EAAKrN,UAS3F,IAPI0mB,KAAK+7B,gBAAgBthD,KAAO,GAC5BulB,KAAK+7B,gBAAgB/wC,QAAQ,SAAU7S,EAAO0H,GACtC1H,IAAUowD,IACVD,EAAmBzoD,MAI1ByoD,EAAkB,CACnBA,EAAmB,GAAIE,GACvB,IAAIC,GAAmB,GAAI3mD,GAC3B2mD,GAAiBjgD,OAAO,KAAM47C,GAC9BqE,EAAiBjgD,OAAO,KAAMy7C,GAC9BwE,EAAiBjgD,OAAO,KAAMvB,EAAqBN,GACnD,IAAIyD,GAAM4V,KAAKtU,gBAAgB00C,mBAC/BpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI2J,EAAKq+C,GACxCH,EAAiBh9C,YAAcm9C,EAC/BH,EAAiBI,KAAOH,EACxBD,EAAiBt2B,MAAQ1sB,GAASnD,IAAIsG,KACtC6/C,EAAiB/H,WAAan2C,CAC9B,IAAI7I,OAAa,GACb0+C,GAAc,CAClB,IAAIjgC,KAAKy7B,gBAAgBz5C,IAAI,aAAc,CACvC,GAAI2Z,GAAMqE,KAAKy7B,gBAAgBjwC,OAAO,YAC1B,QAARmQ,OAA+B,KAARA,IACnBA,YAAetR,KACf41C,GAAc,EACd1+C,EAAaye,KAAKtU,gBAAgBwH,OAAOyI,IAEpCA,YAAe7Z,MACpBP,EAAaoa,QAKrBpa,GAAa,GAAIO,IAAeke,KAAKtU,iBACrCsU,KAAKy7B,gBAAgBjzC,OAAO,YAAajH,EAE7CA,GAAWiH,OAAO8/C,EAAiBt2B,MAAM7pB,KAAMiC,GAC3C61C,IACAjgC,KAAKy7B,gBAAgBlpC,UAAW,GAEhCyN,KAAKq7B,wBACLr7B,KAAKu7B,QAAQhpC,UAAW,GAGhCyN,KAAK07B,IAAIl7B,kBAAkB8nC,EAAiBt2B,QAEhDipB,EAAYjnC,UAAUgoC,qBAAuB,SAAU5xC,EAAKjC,GACxD6X,KAAK67B,aAAap7C,IAAI2J,EAAKjC,EAC3B,IAAI5G,GAAaye,KAAKtU,gBAAgBwH,OAAO9I,GACzCg6C,EAAS,EACTH,EAAO,EACPt9C,EAAO,CACPpF,KACIA,EAAWS,IAAI,QACfoiD,EAAS7iD,EAAWY,IAAI,OAExBZ,EAAWS,IAAI,QACfiiD,EAAO1iD,EAAWY,IAAI,OAEtBZ,EAAWS,IAAI,QACfiiD,EAAO1iD,EAAWY,IAAI,OAEtBZ,EAAWS,IAAI,QACf2E,EAAOsB,EAAc1G,EAAWY,IAAI,QAG5C,IAAIwmD,GAAO,MAAQvE,EAAO9qD,WAAa,OAAS2qD,EAAK3qD,WAAa,OAASqN,EAAKrN,WAC5EsvD,EAAQ,GAAIJ,GAChBI,GAAMt9C,YAAc/J,EACpBqnD,EAAMF,KAAOC,EACbC,EAAM52B,MAAQ7pB,EACdygD,EAAMrI,WAAan2C,EACnB4V,KAAK+7B,gBAAgBt7C,IAAImoD,EAAOD,IAEpC1N,EAAYjnC,UAAUmqC,uBAAyB,SAAUz7C,EAAGC,EAAGpD,GAE3D,MADAA,GAAM0M,WAAWvJ,GAAIC,GACdpD,GAEX07C,EAAYjnC,UAAUoqC,mBAAqB,SAAU17C,EAAGC,EAAGpD,GAKvD,MAJc,QAAVA,OAAmC,KAAVA,IACzBA,EAAQ,GAAIyM,KAEhBzM,EAAMsgD,OAAOn9C,EAAGC,GACTpD,GAEX07C,EAAYjnC,UAAU60C,sBAAwB,SAAU3F,GACpDljC,KAAK27B,YAAcuH,EACnBljC,KAAK07B,IAAIn7B,cAAc,iBACvBP,KAAK07B,IAAIr6B,iBAAiB6hC,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IAClFljC,KAAK07B,IAAIv5B,aACTnC,KAAK07B,IAAIn6B,WAAU,GACnBvB,KAAK07B,IAAIn7B,cAAc,iCACvBP,KAAKw6B,mBAAmB0I,EAAW,GAAIA,EAAW,KAEtDjI,EAAYjnC,UAAUyvC,eAAiB,SAAUqF,EAAQC,GACrD,GAAIh9C,GAAS,GAAIC,GACjBgU,MAAKgpC,kBAAkBF,EAAQC,EAAQh9C,GACvCiU,KAAK07B,IAAIj7B,WAAW1U,GACpBA,EAAOo8C,UAAUp8C,IAErBkvC,EAAYjnC,UAAUg1C,kBAAoB,SAAUF,EAAQC,EAAQxpD,GAEhE,MADAA,GAAM0pD,OAAOH,GAASC,GACfxpD,GAEJ07C,KAGPjvC,GAA0C,WAC1C,QAASA,KACLgU,KAAK7T,QAAU,GAAI+8C,IAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,GAoC9C,MAlCAl9C,GAAyBgI,UAAU/H,WAAa,SAAUvJ,EAAGC,GACzDqd,KAAK7T,QAAQF,WAAWvJ,EAAGC,IAE/BqJ,EAAyBgI,UAAU6rC,OAAS,SAAUn9C,EAAGC,GACrDqd,KAAK7T,QAAQC,UAAU,GAAK1J,EAC5Bsd,KAAK7T,QAAQC,UAAU,GAAKzJ,GAEhCqJ,EAAyBgI,UAAU9H,QAAU,SAAUlD,GACnDA,EAASA,EAAQ3Q,KAAKiR,GAAM,IAC5B0W,KAAK7T,QAAQC,UAAU,GAAK/T,KAAKkR,IAAIP,GACrCgX,KAAK7T,QAAQC,UAAU,GAAK/T,KAAKmR,IAAIR,GACrCgX,KAAK7T,QAAQC,UAAU,IAAM/T,KAAKmR,IAAIR,GACtCgX,KAAK7T,QAAQC,UAAU,GAAK/T,KAAKkR,IAAIP,IAEzCgD,EAAyBgI,UAAUm0C,UAAY,SAAUp8C,GACrDiU,KAAK7T,QAAQg8C,UAAUp8C,EAAOI,UAElCH,EAAyBgI,UAAU0M,UAAY,WAE3C,IAAK,GADDiC,GAAU,GACLzpB,EAAI,EAAGm0B,EAAMrN,KAAK7T,QAAQC,UAAUrT,OAAQG,EAAIm0B,EAAKn0B,IAC1DypB,GAAWva,EAAe4X,KAAK7T,QAAQC,UAAUhT,OAAOC,SAASH,EAAEI,WAAY,MAAQ,GAE3F,OAAOqpB,IAEX3W,EAAyBgI,UAAUi1C,MAAQ,SAAUH,EAAQC,GACzD,GAAII,GAAO9wD,KAAK+wD,IAAIppC,KAAKqpC,iBAAiBP,IACtCQ,EAAOjxD,KAAK+wD,IAAIppC,KAAKqpC,iBAAiBN,IACtCQ,EAAO,GAAIL,IAAQ,EAAGC,EAAMG,EAAM,EAAG,EAAG,EAC5CtpC,MAAK7T,QAAQg8C,UAAUoB,IAE3Bv9C,EAAyBgI,UAAUq1C,iBAAmB,SAAUG,GAE5D,MADsBnxD,MAAKiR,GAAK,IACPkgD,GAEtBx9C,KAGPk9C,GAAyB,WACzB,QAASA,GAAQnkC,EAAMlE,EAAMC,EAAMivB,EAAMC,EAAMyZ,GAEvCzpC,KAAK5T,cADW,KAAT2Y,KAGc,gBAATA,IACMA,EAAMlE,EAAMC,EAAMivB,EAAMC,EAAMyZ,GAG/B1kC,EAuCzB,MApCAhR,QAAO+H,eAAeotC,EAAQl1C,UAAW,YACrC7R,IAAK,WACD,MAAO6d,MAAK5T,UAAU,IAE1B2P,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeotC,EAAQl1C,UAAW,YACrC7R,IAAK,WACD,MAAO6d,MAAK5T,UAAU,IAE1B2P,YAAY,EACZC,cAAc,IAElBktC,EAAQl1C,UAAU01C,OAAS,WACvB,MAAO,IAAIR,GAAQlpC,KAAK5T,UAAUgrC,UAEtC8R,EAAQl1C,UAAU/H,WAAa,SAAUvJ,EAAGC,GACxCqd,KAAK5T,UAAU,GAAK1J,EACpBsd,KAAK5T,UAAU,GAAKzJ,GAExBumD,EAAQl1C,UAAU21C,WAAa,SAAUlgD,GACrC,GAAI/G,GAAI+G,EAAO,GACX9G,EAAI8G,EAAO,EAGf,QAFS/G,EAAIsd,KAAK5T,UAAU,GAAKzJ,EAAIqd,KAAK5T,UAAU,GAAK4T,KAAK4pC,SACrDlnD,EAAIsd,KAAK5T,UAAU,GAAKzJ,EAAIqd,KAAK5T,UAAU,GAAK4T,KAAK6pC,WAGlEX,EAAQl1C,UAAUm0C,UAAY,SAAUp8C,GACpCiU,KAAK5T,WAAc4T,KAAK5T,UAAU,GAAKL,EAAOK,UAAU,GAAK4T,KAAK5T,UAAU,GAAKL,EAAOK,UAAU,GAC7F4T,KAAK5T,UAAU,GAAKL,EAAOK,UAAU,GAAK4T,KAAK5T,UAAU,GAAKL,EAAOK,UAAU,GAC/E4T,KAAK5T,UAAU,GAAKL,EAAOK,UAAU,GAAK4T,KAAK5T,UAAU,GAAKL,EAAOK,UAAU,GAC/E4T,KAAK5T,UAAU,GAAKL,EAAOK,UAAU,GAAK4T,KAAK5T,UAAU,GAAKL,EAAOK,UAAU,GAC/E4T,KAAK4pC,SAAW79C,EAAOK,UAAU,GAAK4T,KAAK6pC,SAAW99C,EAAOK,UAAU,GAAKL,EAAO69C,SACnF5pC,KAAK4pC,SAAW79C,EAAOK,UAAU,GAAK4T,KAAK6pC,SAAW99C,EAAOK,UAAU,GAAKL,EAAO89C,WAErFX,KA6BPjN,GAAkC,WASlC,QAASA,GAAiB5B,EAAUtuC,GAC5BsuC,IACAr6B,KAAK8pC,GAAKzP,EACVr6B,KAAK68B,sBAAwB9wC,GAEjCiU,KAAKm8B,aAAe,EACpBn8B,KAAKs8B,aAAe,EACpBt8B,KAAKq8B,aAAe,IACpBr8B,KAAKk8B,mBAAqB8H,qBAAmBC,KAEjD,MAAOhI,MAGPuM,GAAmC,WACnC,QAASA,MAET,MAAOA,OAGX,SAAWxE,GACPA,EAAmBA,EAAyB,KAAI,GAAK,OACrDA,EAAmBA,EAA2B,OAAI,GAAK,SACvDA,EAAmBA,EAA+B,WAAI,GAAK,aAC3DA,EAAmBA,EAAyB,KAAI,GAAK,OACrDA,EAAmBA,EAA6B,SAAI,GAAK,WACzDA,EAAmBA,EAA6B,SAAI,GAAK,WACzDA,EAAmBA,EAA+B,WAAI,GAAK,aAC3DA,EAAmBA,EAAmC,eAAI,GAAK,iBAC/DA,EAAmBA,EAAyB,KAAI,GAAK,QACtDA,uBAAuBA,6BAqBtBlB,IAA0B,WAuB1B,QAASA,GAAS9+C,GACdgc,KAAK8hC,WAA0B,KAAV99C,EAAwBA,GAAS,EAAG,EAAG,GAEhE,MAAO8+C,MAuBPD,GAAwB,WAwBxB,QAASA,GAAO7+C,EAAOpB,GACnBod,KAAK8hC,OAAS99C,EACdgc,KAAK8I,OAASlmB,EACdod,KAAK0hC,YAAc,EACnB1hC,KAAKwhC,gBACLxhC,KAAK+pC,WAAaprC,eAAalZ,MAC/Bua,KAAK6hC,YAAc,EACnB7hC,KAAK4hC,SAAWhjC,aAAWorC,KAC3BhqC,KAAK2hC,UAAY9iC,cAAYorC,MAEjC,MAAOpH,MAGPhI,GAAmC,WACnC,QAASA,KACL76B,KAAKm6B,sBAAwB,GAC7Bn6B,KAAKkqC,aAAelqC,KAAKmqC,mBAAmBnqC,KAAKm6B,uBAgBrD,MAdAU,GAAkB7mC,UAAUm2C,mBAAqB,SAAUnP,GACvD,OAAQA,EAAQ,KAAMA,EAAQ,EAAK,EAAGA,EAAQ,GAAMA,EAAOA,EAAQ,IAAOA,EAAQ,OAEtFH,EAAkB7mC,UAAU+mC,cAAgB,SAAU5iD,EAAOuI,EAAMioB,GAC/D,MAAO3I,MAAKoqC,mBAAmBpqC,KAAKqqC,iBAAiBlyD,EAAOuI,GAAOioB,IAEvEkyB,EAAkB7mC,UAAUo2C,mBAAqB,SAAUjyD,EAAOwwB,GAC9D,GAAI9tB,GAAQ8tB,CACZ,OAAQxwB,GAAQ6nB,KAAKkqC,aAAa9wD,OAAOC,SAASwB,EAAMvB,WAAY,MAExEuhD,EAAkB7mC,UAAUq2C,iBAAmB,SAAUlyD,EAAOuI,GAC5D,GAAI7F,GAAQ6F,CACZ,OAAQvI,GAAQ6nB,KAAKkqC,aAAa9wD,OAAOC,SAASwB,EAAMvB,WAAY,MAEjEuhD,KCzpEPyP,GAA4B,WAC5B,QAASA,GAAWC,OACK,KAAjBA,IAA2BA,GAAe,GAC9CvqC,KAAK+L,UAAY,EACjB/L,KAAKwqC,YAAc,GACnBxqC,KAAKgiB,QAAU,GAAI3kC,YAAW,GAC9B2iB,KAAKyqC,mBACLzqC,KAAK0qC,iBACAH,GAYDvqC,KAAK2qC,cAAgB,gBACrB3qC,KAAK4qC,gBAAiB,IAZtB5qC,KAAK2qC,cAAgB,UACrB3qC,KAAKyqC,gBAAgBnvD,KAAK,GAAIuvD,KAC9B7qC,KAAK0qC,cAAcpvD,KAAK,GAAIwvD,KAC5B9qC,KAAKyqC,gBAAgB,GAAGM,KAAK,QAAS,gCAAiC,WACvE/qC,KAAKyqC,gBAAgBnvD,KAAK,GAAIuvD,KAC9B7qC,KAAKyqC,gBAAgB,GAAGM,KAAK,MAAO,uCAAwC,WAC5E/qC,KAAKyqC,gBAAgBnvD,KAAK,GAAIuvD,KAC9B7qC,KAAKyqC,gBAAgB,GAAGM,KAAK,GAAI,GAAI,WACrC/qC,KAAK0qC,cAAc,GAAGK,KAAK,GAAI,GAAI,GAAI/qC,KAAKyqC,gBAAgB1xD,OAAS,IAMzEinB,KAAKgrC,mBA8ZT,MA5ZAj3C,QAAO+H,eAAewuC,EAAWt2C,UAAW,UACxC7R,IAAK,WAED,MADA6d,MAAKmiB,SACEniB,KAAKgiB,SAEhBjmB,YAAY,EACZC,cAAc,IAElBsuC,EAAWt2C,UAAUi3C,oBAAsB,SAAUC,GACjD,GAA2B,YAAvBlrC,KAAK2qC,mBAAuD,KAAjB3qC,KAAKgiB,QAChD,KAAM,IAAInoC,OAAM,yCAEpBmmB,MAAK2qC,cAAgB,gBACrB3qC,KAAKmrC,SAAS,2CACY,KAAfD,GAA6C,OAAfA,IACrClrC,KAAKmrC,SAAS,kBACdnrC,KAAKmrC,SAASD,EAAa,MAAQ,OAEvClrC,KAAKmrC,SAAS,QAElBb,EAAWt2C,UAAUo3C,mBAAqB,SAAUC,EAAWC,EAAQC,GACnE,OAA4B,KAAjBvrC,KAAKgiB,QACZ,KAAM,IAAInoC,OAAM,yCAEpB,QAAyB,KAAdwxD,GAA2C,OAAdA,GAA2C,IAArBA,EAAUtyD,OACpE,KAAM,IAAIc,OAAM,kEAUpB,IARAmmB,KAAKwrC,WAAWH,GACW,YAAvBrrC,KAAK2qC,eACL3qC,KAAKirC,sBAEkB,iBAAvBjrC,KAAK2qC,eACL3qC,KAAKyrC,uBAETzrC,KAAK2qC,cAAgB,mBACC,KAAXW,GAAqC,OAAXA,MACR,KAAdC,GAA2C,OAAdA,IACpCD,EAAStrC,KAAK0rC,cAAcH,QAEV,KAAXD,GAAqC,OAAXA,IACjCA,EAAS,QAGZ,IAAIA,EAAOvyD,OAAS,QACI,KAAdwyD,GAA2C,OAAdA,IACpCA,EAAYvrC,KAAK2rC,iBAAiBL,QAEb,KAAdC,GAA2C,OAAdA,OAA4C,KAAdA,GAAkD,IAArBA,EAAUxyD,QACzG,KAAM,IAAIc,OAAM,sEAGC,KAAd0xD,GAA2C,OAAdA,IACpCA,EAAYvrC,KAAK2rC,iBAAiBL,IAEtCtrC,KAAK4rC,2BAA2BN,EAAQD,EAAWE,IAEvDjB,EAAWt2C,UAAU63C,iBAAmB,WACT,iBAAvB7rC,KAAK2qC,eACL3qC,KAAKyrC,uBACLzrC,KAAK2qC,cAAgB,kBAEO,mBAAvB3qC,KAAK2qC,gBACV3qC,KAAK2qC,cAAgB,kBAEzB3qC,KAAK2qC,cAAgB,YACrB,IAAInxC,GAAMwG,KAAK0qC,cAAc3xD,OAAS,CACtCinB,MAAK8rC,yBAAyB9rC,KAAK0qC,cAActxD,OAAOC,SAASmgB,EAAIlgB,WAAY,KAAKyyD,QAAS/rC,KAAK0qC,cAActxD,OAAOC,SAASmgB,EAAIlgB,WAAY,KAAK0yD,YACvJhsC,KAAKyqC,gBAAgBwB,OAAOjsC,KAAK0qC,cAActxD,OAAOC,SAASmgB,EAAIlgB,WAAY,KAAK4yD,aAAe,GACnGlsC,KAAK0qC,cAAcuB,OAAOzyC,IAK9B8wC,EAAWt2C,UAAUm4C,oBAAsB,SAAUd,EAAWlzD,EAAOmzD,EAAQC,GAC3EvrC,KAAKorC,mBAAmBC,EAAWC,EAAQC,OACtB,KAAVpzD,GAAmC,OAAVA,GAAmC,IAAjBA,EAAMY,QACxDinB,KAAKogB,aAAajoC,GAEtB6nB,KAAK6rC,oBAETvB,EAAWt2C,UAAUo4C,sBAAwB,SAAUf,EAAWlzD,EAAOmzD,EAAQC,GAC7EvrC,KAAKqsC,qBAAqBhB,EAAWlzD,EAAOmzD,EAAQC,GACpDvrC,KAAKssC,qBAAqBn0D,GAAO,GACjC6nB,KAAKusC,sBAETjC,EAAWt2C,UAAUosB,aAAe,SAAUhzB,GAC1C4S,KAAKwsC,eAAep/C,GAAM,IAE9Bk9C,EAAWt2C,UAAUy4C,UAAY,SAAUr/C,GACvC4S,KAAKwsC,eAAep/C,GAAM,IAE9Bk9C,EAAWt2C,UAAUw4C,eAAiB,SAAUp/C,EAAMs/C,GAClD,GAAa,OAATt/C,OAAiC,KAATA,EAAsB,CAC9C,GAA2B,iBAAvB4S,KAAK2qC,eAA2D,mBAAvB3qC,KAAK2qC,cAC9C,KAAM,IAAI9wD,OAAM,yCAEO,kBAAvBmmB,KAAK2qC,eACL3qC,KAAKyrC,uBAETzrC,KAAK2qC,cAAgB,iBACjB+B,EACA1sC,KAAKmrC,SAAS/9C,GAGd4S,KAAKssC,qBAAqBl/C,GAAM,KAI5Ck9C,EAAWt2C,UAAUkqC,MAAQ,WACzB,KAAOl+B,KAAK0qC,cAAc3xD,OAAS,EAAI,GACnCinB,KAAK6rC,kBAKT,OAHyB,KAArB7rC,KAAKwqC,aACLxqC,KAAKmiB,SAEFniB,KAAKgiB,SAEhBsoB,EAAWt2C,UAAU24C,SAAW,WAC5B3sC,KAAKgiB,YAAU5/B,EACf,KAASlJ,EAAI,EAAGA,EAAI8mB,KAAKyqC,gBAAgB1xD,OAAQG,IAC7C8mB,KAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKqzD,UAE5D3sC,MAAKyqC,kBACL,KAAK,GAAIvxD,GAAI,EAAGA,EAAI8mB,KAAK0qC,cAAc3xD,OAAQG,IAC3C8mB,KAAK0qC,cAActxD,OAAOC,SAASH,EAAEI,WAAY,KAAKqzD,UAE1D3sC,MAAK0qC,iBACL1qC,KAAKwqC,YAAc,GACnBxqC,KAAK+L,UAAY,GAErBu+B,EAAWt2C,UAAUmuB,OAAS,WAC1B,GAAIniB,KAAKgiB,SAAWhiB,KAAKwqC,aAAoC,KAArBxqC,KAAKwqC,YAAoB,CAC7D,GAAIxqC,KAAKgiB,QAAQjpC,OAAS,EAAG,CAEzB,IAAK,GADD2D,GAAS,GAAIuD,OAAM+f,KAAKwqC,YAAYzxD,QAC/BG,EAAI,EAAGA,EAAI8mB,KAAKwqC,YAAYzxD,OAAQG,IACzCwD,EAAOtD,OAAOC,SAASH,EAAEI,WAAY,KAAwC,IAAjC0mB,KAAKwqC,YAAYruD,WAAWjD,EAE5E,IAAI+F,GAAQ,GAAI5B,YAAW2iB,KAAKgiB,QAAQjpC,OAAS2D,EAAO3D,OACxDkG,GAAMwB,IAAIuf,KAAKgiB,SACf/iC,EAAMwB,IAAI/D,EAAQsjB,KAAKgiB,QAAQjpC,QAC/BinB,KAAKgiB,QAAU/iC,MAGf+gB,MAAKgiB,QAAUxlC,EAAewjB,KAAKwqC,YAEvCxqC,MAAKwqC,YAAc,KAG3BF,EAAWt2C,UAAUq4C,qBAAuB,SAAUhB,EAAWlzD,EAAOmzD,EAAQC,GAC5E,OAAyB,KAAdF,GAA2C,OAAdA,GAA2C,IAArBA,EAAUtyD,OAAc,CAClF,GAAe,UAAXuyD,EAKA,KAAM,IAAIzxD,OAAM,kEAJhBwxD,GAAY,QACZC,EAAS,GAMjB,GAA2B,iBAAvBtrC,KAAK2qC,cACL,KAAM,IAAI9wD,OAAM,yCAEpBmmB,MAAKwrC,WAAWH,GAChBrrC,KAAK4sC,uCAAuCvB,EAAWlzD,EAAOmzD,EAAQC,IAE1EjB,EAAWt2C,UAAU44C,uCAAyC,SAAUvB,EAAWlzD,EAAOmzD,EAAQC,OACxE,KAAXD,GAAqC,OAAXA,QACR,KAAdC,GAA2C,OAAdA,IAChB,UAAdF,GAAuC,kCAAdE,IAC3BD,EAAStrC,KAAK0rC,cAAcH,SAGd,KAAXD,GAAqC,OAAXA,IACjCA,EAAS,SAGQ,KAAdC,GAA2C,OAAdA,QACd,KAAXD,GAAqC,OAAXA,GAAmBA,EAAOvyD,OAAS,IACpEwyD,EAAYvrC,KAAK2rC,iBAAiBL,QAEb,KAAdC,GAA2C,OAAdA,IACpCA,EAAY,KAGpBvrC,KAAK6sC,qCAAqCvB,EAAQD,EAAWE,EAAWpzD,IAE5EmyD,EAAWt2C,UAAU64C,qCAAuC,SAAUvB,EAAQD,EAAWE,EAAWpzD,GAChG,GAAsB,IAAlBmzD,EAAOvyD,OAAc,CACrB,GAAqB,MAAjBsyD,EAAU,IAA4B,UAAdA,EAGxB,MAFArrC,MAAK8sC,kBAAkBxB,EAAQD,EAAWE,OAC1CvrC,MAAK+sC,uBAAuB,GAAI50D,EAG3BozD,GAAUxyD,OAAS,IACxBuyD,EAAStrC,KAAK0rC,cAAcH,QAG/B,CACD,GAAkB,MAAdD,EAAO,GAAY,CACnB,GAAe,UAAXA,EAGA,MAFAtrC,MAAK8sC,kBAAkBxB,EAAQD,EAAWE,OAC1CvrC,MAAK+sC,uBAAuB1B,EAAWlzD,EAGtC,IAAe,QAAXmzD,IACa,UAAdD,GAAuC,SAAdA,GAEzB,WADArrC,MAAK8sC,kBAAkBxB,EAAQD,EAAWE,GAK7B,IAArBA,EAAUxyD,SACVuyD,EAAS,QAGK,KAAXA,GAAqC,OAAXA,GAAqC,IAAlBA,EAAOvyD,QAC3DinB,KAAKgtC,uBAAuB1B,EAAQC,GAExCvrC,KAAK8sC,kBAAkBxB,EAAQD,EAAWE,IAE9CjB,EAAWt2C,UAAUu4C,mBAAqB,WACtCvsC,KAAK2qC,cAAgB,eACrB3qC,KAAKwqC,aAAe,KAExBF,EAAWt2C,UAAU43C,2BAA6B,SAAUN,EAAQD,EAAWE,GAC3EvrC,KAAKwqC,aAAe,IAChBc,EAAOvyD,OAAS,IAChBinB,KAAKmrC,SAASG,GACdtrC,KAAKwqC,aAAe,KAExBxqC,KAAKmrC,SAASE,EACd,IAAI7xC,GAAMwG,KAAK0qC,cAAc3xD,MAC7BinB,MAAK0qC,cAAcpvD,KAAK,GAAIwvD,KAC5B9qC,KAAK0qC,cAActxD,OAAOC,SAASmgB,EAAIlgB,WAAY,KAAKyxD,KAAKO,EAAQD,EAAWE,EAAWvrC,KAAKyqC,gBAAgB1xD,OAAS,GACzHinB,KAAKgtC,uBAAuB1B,EAAQC,EACpC,KAAK,GAAIryD,GAAI,EAAGA,EAAI8mB,KAAKgrC,gBAAgBjyD,OAAQG,IAC7C8mB,KAAKgrC,gBAAgB5xD,OAAOC,SAASH,EAAEI,WAAY,KAAKqzD,UAE5D3sC,MAAKgrC,oBAETV,EAAWt2C,UAAU83C,yBAA2B,SAAUR,EAAQD,GAC1DrrC,KAAK+L,YAAc/L,KAAKwqC,YAAYzxD,OAAS,GAC7CinB,KAAKwqC,aAAe,SACE,KAAXc,GAAqC,OAAXA,GAAqC,IAAlBA,EAAOvyD,SAC3DinB,KAAKmrC,SAASG,GACdtrC,KAAKwqC,aAAe,KAExBxqC,KAAKmrC,SAASE,GACdrrC,KAAKwqC,aAAe,MAGpBxqC,KAAKwqC,YAAcxqC,KAAKwqC,YAAYtrD,UAAU,EAAG8gB,KAAKwqC,YAAYzxD,OAAS,GAC3EinB,KAAKwqC,aAAe,QAG5BF,EAAWt2C,UAAUi5C,6BAA+B,SAAU3B,EAAQD,GAClErrC,KAAKwqC,aAAe,QACE,KAAXc,GAAqC,OAAXA,GAAmBA,EAAOvyD,OAAS,IACpEinB,KAAKmrC,SAASG,GACdtrC,KAAKwqC,aAAe,KAExBxqC,KAAKmrC,SAASE,GACdrrC,KAAKwqC,aAAe,MAExBF,EAAWt2C,UAAUk5C,2BAA6B,SAAU5B,EAAQ6B,GAC3DntC,KAAK4qC,iBACN5qC,KAAKotC,gCAAgC9B,GACrCtrC,KAAKssC,qBAAqBa,GAAc,GACxCntC,KAAKwqC,aAAe,MAG5BF,EAAWt2C,UAAUo5C,gCAAkC,SAAU9B,OACvC,KAAXA,GAAqC,OAAXA,GAAqC,IAAlBA,EAAOvyD,OAC3DinB,KAAKmrC,SAAS,aAGdnrC,KAAKmrC,SAAS,WACdnrC,KAAKmrC,SAASG,GACdtrC,KAAKwqC,aAAe,IACpBxqC,KAAKwqC,aAAe,MAG5BF,EAAWt2C,UAAUs4C,qBAAuB,SAAUl/C,EAAMigD,OACpC,KAATjgD,GAAiC,OAATA,IAC/BA,EAAO,IAIXA,GADAA,GADAA,EAAOA,EAAKpN,QAAQ,MAAO,UACfA,QAAQ,MAAO,SACfA,QAAQ,MAAO,QACvBqtD,IACAjgD,EAAOA,EAAKpN,QAAQ,MAAO,WAE/BggB,KAAKwqC,aAAep9C,EACfigD,IACDrtC,KAAK+L,UAAY,IAGzBu+B,EAAWt2C,UAAUy3C,qBAAuB,WAExC,IAAK,GADD5yD,GAAQmnB,KAAK0qC,cAAc1qC,KAAK0qC,cAAc3xD,OAAS,GAAGmzD,aACrDhzD,EAAI8mB,KAAKyqC,gBAAgB1xD,OAAS,EAAGG,EAAIL,EAAOK,IACiB,gBAAlE8mB,KAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKg0D,OACxDttC,KAAKktC,2BAA2BltC,KAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKyyD,QAAS/rC,KAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKi0D,cAGjKvtC,MAAKwqC,aAAe,IACpBxqC,KAAK+L,UAAY/L,KAAKwqC,YAAYzxD,OAAS,GAE/CuxD,EAAWt2C,UAAUm3C,SAAW,SAAU/9C,GACtC4S,KAAKwqC,aAAep9C,GAExBk9C,EAAWt2C,UAAUw5C,cAAgB,SAAUlC,EAAQmC,EAAIC,GACvD,GAAIl0C,GAAMwG,KAAKyqC,gBAAgB1xD,MAC/BinB,MAAKyqC,gBAAgBnvD,KAAK,GAAIuvD,KAC9B7qC,KAAKyqC,gBAAgBrxD,OAAOC,SAASmgB,EAAIlgB,WAAY,KAAKyxD,KAAKO,EAAQmC,EAAIC,IAE/EpD,EAAWt2C,UAAU03C,cAAgB,SAAUH,GAC3C,IAAK,GAAIryD,GAAI8mB,KAAKyqC,gBAAgB1xD,OAAS,EAAGG,GAAK,EAAGA,IAClD,GAAI8mB,KAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKi0D,gBAAkBhC,EAC1E,MAAOvrC,MAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKyyD,SAK3EzB,EAAWt2C,UAAU23C,iBAAmB,SAAUL,GAC9C,IAAK,GAAIpyD,GAAI8mB,KAAKyqC,gBAAgB1xD,OAAS,EAAGG,GAAK,EAAGA,IAClD,GAAI8mB,KAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKyyD,UAAYT,EACpE,MAAOtrC,MAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKi0D,eAK3EjD,EAAWt2C,UAAU25C,sBAAwB,SAAUrC,GACnD,IAAK,GAAIpyD,GAAI8mB,KAAKyqC,gBAAgB1xD,OAAS,EAAGG,GAAK,EAAGA,IAClD,GAAI8mB,KAAKyqC,gBAAgBrxD,OAAOC,SAASH,EAAEI,WAAY,KAAKyyD,UAAYT,EACpE,MAAOpyD,EAGf,QAAQ,GAEZoxD,EAAWt2C,UAAUg5C,uBAAyB,SAAU1B,EAAQmC,GAC5D,GAAIC,GACAE,EAAkB5tC,KAAK2tC,sBAAsBrC,GAC7CuC,GAAU,CACd,KAAyB,IAArBD,EACA,GAAIA,EAAkB5tC,KAAK0qC,cAAc1qC,KAAK0qC,cAAc3xD,OAAS,GAAGmzD,aAAc,CAClF,GAAIlsC,KAAKyqC,gBAAgBrxD,OAAOC,SAASu0D,EAAgBt0D,WAAY,KAAKi0D,gBAAkBE,EACxF,KAAM,IAAI5zD,OAAM,sFAEpBg0D,IAAU,MAGV,IAAoF,YAAhF7tC,KAAKyqC,gBAAgBrxD,OAAOC,SAASu0D,EAAgBt0D,WAAY,KAAKg0D,MAAqB,CAC3F,GAAe,QAAXhC,EASA,KAAM,IAAIzxD,OAAM,uEARhB,IAAI4zD,IAAOztC,KAAKyqC,gBAAgBrxD,OAAOC,SAASu0D,EAAgBt0D,WAAY,KAAKi0D,cAC7E,KAAM,IAAI1zD,OAAM,uCAGhB6zD,GAAO,cAQfA,GAAQ1tC,KAAKyqC,gBAAgBrxD,OAAOC,SAASu0D,EAAgBt0D,WAAY,KAAKi0D,gBAAkBE,EAC5F,UACA,kBAIX,CACD,GAAY,yCAAPA,GAA4D,QAAXnC,GAC1C,kCAAPmC,GAAqD,UAAXnC,EAC3C,KAAM,IAAIzxD,OAAM,2BAEpB6zD,GAAO,cAEPG,GACA7tC,KAAKwtC,cAAclC,EAAQmC,EAAIC,IAGvCpD,EAAWt2C,UAAU+4C,uBAAyB,SAAUzB,EAAQmC,GAC5D,GAAIG,GAAkB5tC,KAAK2tC,sBAAsBrC,EACjD,KAAyB,IAArBsC,GACIA,EAAkB5tC,KAAK0qC,cAAc1qC,KAAK0qC,cAAc3xD,OAAS,GAAGmzD,aAEpE,YADAlsC,KAAKyqC,gBAAgBrxD,OAAOC,SAASu0D,EAAgBt0D,WAAY,KAAKg0D,MAAQ,UAItFttC,MAAKwtC,cAAclC,EAAQmC,EAAI,YAGnCnD,EAAWt2C,UAAU85C,cAAgB,SAAUxC,EAAQD,EAAW0C,GAC9D,GAAIv0C,GAAMwG,KAAKgrC,gBAAgBjyD,MAC/BinB,MAAKgrC,gBAAgB1vD,KAAK,GAAI0yD,KAC9BhuC,KAAKgrC,gBAAgB5xD,OAAOC,SAASmgB,EAAIlgB,WAAY,KAAKyxD,KAAKO,EAAQD,EAAW0C,EAClF,KAAK,GAAI70D,GAAI,EAAGA,EAAIsgB,EAAKtgB,IACrB,GAAI8mB,KAAKgrC,gBAAgB5xD,OAAOC,SAASH,EAAEI,WAAY,KAAK20D,aAAa3C,EAAQD,EAAW0C,GACxF,KAAM,IAAIl0D,OAAM,2CAI5BywD,EAAWt2C,UAAU84C,kBAAoB,SAAUxB,EAAQD,EAAWE,GAClEvrC,KAAK8tC,cAAcxC,EAAQD,EAAWE,GACtCvrC,KAAKitC,6BAA6B3B,EAAQD,IAE9Cf,EAAWt2C,UAAUw3C,WAAa,SAAUp+C,GAExC,GADa,sCACFwP,KAAKxP,GACZ,KAAM,IAAIvT,OAAM,qDAGjBywD,KAGPO,GAA4B,WAC5B,QAASA,MAYT,MAVAA,GAAW72C,UAAU+2C,KAAO,SAAUO,EAAQ6B,EAAcO,GACxD1tC,KAAK+rC,QAAUT,EACftrC,KAAKutC,cAAgBJ,EACrBntC,KAAKstC,MAAQI,GAEjB7C,EAAW72C,UAAU24C,SAAW,WAC5B3sC,KAAK+rC,YAAU3pD,GACf4d,KAAKutC,kBAAgBnrD,GACrB4d,KAAKstC,UAAQlrD,IAEVyoD,KAGPC,GAA6B,WAC7B,QAASA,MAcT,MAZAA,GAAY92C,UAAU+2C,KAAO,SAAUO,EAAQD,EAAW8B,EAAce,GACpEluC,KAAKksC,aAAegC,EACpBluC,KAAK+rC,QAAUT,EACftrC,KAAKutC,cAAgBJ,EACrBntC,KAAKgsC,WAAaX,GAEtBP,EAAY92C,UAAU24C,SAAW,WAC7B3sC,KAAKksC,iBAAe9pD,GACpB4d,KAAK+rC,YAAU3pD,GACf4d,KAAKgsC,eAAa5pD,GAClB4d,KAAKutC,kBAAgBnrD,IAElB0oD,KAGPkD,GAA+B,WAC/B,QAASA,MAeT,MAbAA,GAAch6C,UAAU+2C,KAAO,SAAUO,EAAQD,EAAW8B,GACxDntC,KAAK+rC,QAAUT,EACftrC,KAAKutC,cAAgBJ,EACrBntC,KAAKgsC,WAAaX,GAEtB2C,EAAch6C,UAAUi6C,aAAe,SAAU3C,EAAQD,EAAW8B,GAChE,MAASntC,MAAKgsC,aAAeX,IAAgBrrC,KAAK+rC,UAAYT,GAAYtrC,KAAKutC,gBAAkBJ,IAErGa,EAAch6C,UAAU24C,SAAW,WAC/B3sC,KAAK+rC,YAAU3pD,GACf4d,KAAKutC,kBAAgBnrD,GACrB4d,KAAKgsC,eAAa5pD,IAEf4rD,KC3eP/nC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAUnF2nC,GAA+B,WAC/B,QAASA,KACLnuC,KAAKouC,qBAAsB,EAC3BpuC,KAAKquC,UAAY,GACjBruC,KAAKsuC,SAAW,GAChBtuC,KAAKuuC,oBAAqB,EAC1BvuC,KAAKwuC,iBAAmB,GAAI1mB,KAC5B9nB,KAAKyuC,iBACLzuC,KAAK0uC,gBAAkB,wBACvB1uC,KAAK2uC,OAAS,GAAI7mB,KAClB9nB,KAAK4uC,QAAU,GAAI9mB,KACnB9nB,KAAK6uC,gBAAkB,GAAI/mB,KAC3B9nB,KAAK8uC,aACL9uC,KAAK+uC,cAAgB,IACrB/uC,KAAKgvC,gBAAkB,GACvBhvC,KAAKivC,cAAgB,IACrBjvC,KAAKkvC,gBAAkB,GACvBlvC,KAAKmvC,OAAS,GACdnvC,KAAKovC,cAAgB,GACrBpvC,KAAKqvC,OAAS,GACdrvC,KAAKsvC,OAAS,GACdtvC,KAAKuvC,UAAY,GACjBvvC,KAAKwvC,YAAa,EAwvBtB,MAtvBArB,GAAcn6C,UAAUy7C,sBAAwB,SAAUp7C,GACtD,GAAIsZ,GAAY,EAChB,IAAc,OAAVtZ,OAAmC,KAAVA,GAAyBA,EAAMq7C,OAAQ,CAChE,GAAIriD,GAAO/L,EAAwB+S,EAAM/I,YAAa,MAAM,GAAO,EACnE,IAAI+B,GAAsB,OAAdA,EAAKlF,UAAsC,KAAdkF,EAAKlF,KAAsB,CAChE,GAAIoM,GAAOyL,KAAK2vC,0BAA0Bt7C,EAAM/I,aAC5CskD,EAAYv7C,EAAMlM,IACT,QAAToM,OAAiC,KAATA,IACxBq7C,EAAY5vC,KAAK6vC,iBAAiBD,EAAWr7C,GAEjD,IAAIpc,OAAQ,GACR23D,MAAgB,EACpB,QAAQziD,EAAKlF,MACT,IAAK,KAEiB,QADlBwlB,EAAYrsB,EAAwB+S,EAAM/I,YAAa,KAAK,GAAO,SACpB,KAAdqiB,GAC7BA,EAAY3N,KAAK6vC,iBAAiBliC,EAAWpZ,GAC7CyL,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,IAEtB3N,KAAKuuC,qBACV5gC,EAAY,GACZ3N,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,GAE/B,MACJ,KAAK,KAQD,GANc,QADdx1B,EAAQmJ,EAAwB+S,EAAM/I,YAAa,KAAK,GAAM,SACvB,KAAVnT,IACzB23D,EAAgB9vC,KAAK+vC,gBAAgB53D,KAEpCA,GAASkc,EAAM/I,YAAYtJ,IAAI,OAASqS,YAAiB27C,KAAmB37C,YAAiB47C,OAC9FH,EAAgBz7C,EAAM67C,wBAEJ,OAAlBJ,OAAmD,KAAlBA,GACjC,GAA6B,gBAAlBA,IAAgD,KAAlBA,EAErCniC,EADAmiC,EAAgB9vC,KAAK6vC,iBAAiBC,EAAev7C,GAErDyL,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,OAE1B,IAAImiC,YAAyB7vD,QAAS6vD,EAAc/2D,OAAS,EAAG,CAEjE,IAAK,GADDoC,MACKjC,EAAI,EAAGA,EAAI42D,EAAc/2D,OAAQG,IACtCiC,EAAOG,KAAK0kB,KAAK6vC,iBAAiBC,EAAc12D,OAAOC,SAASH,EAAEI,WAAY,KAAMib,GAGxF,OADAyL,MAAK2uC,OAAOluD,IAAImvD,EAAWz0D,GACpBA,OAGN6kB,MAAKuuC,qBACV5gC,EAAY,GACZ3N,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,GAE/B,MACJ,KAAK,MAED,GAAc,QADdx1B,EAAQmJ,EAAwB+S,EAAM/I,YAAa,KAAK,GAAO,SACxB,KAAVnT,EAAuB,CAChD,GAAIiV,GAAO4S,KAAK+vC,gBAAgB53D,EAAOkc,EACvC,IAAa,OAATjH,OAAiC,KAATA,GAAiC,KAATA,EAAa,CAC7D,GAAI+iD,OAAc,EAIlB,IAHI97C,YAAiB+7C,MACjBD,EAAc97C,IAEbA,EAAM/I,YAAYtJ,IAAI,QACN,OAAhBmuD,OAC0B,KAAhBA,IAC2B,IAA/BA,EAAYE,cAEnB1iC,EADAvgB,EAAO4S,KAAK6vC,iBAAiBziD,EAAMmH,GAEnCyL,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,OAG3B,IAAItZ,EAAM/I,YAAYtJ,IAAI,OAAQ,CAC9B,GAAIsuD,GAAUj8C,EAAM/I,YAAYpJ,SAAS,OACrCrH,EAAQzB,OAAOC,SAAS+T,EAAM,GAIlC,KAHc,OAAVvS,OAAmC,KAAVA,GAAyBzB,OAAOm3D,MAAM11D,MAC/DA,EAAQ,GAEI,OAAZy1D,OAAuC,KAAZA,EAAyB,CACpD,GAAIzyD,OAAU,EAOE,SALZA,EADAsyD,EACUG,EAAQH,EAAYE,eAGpBC,EAAQl3D,OAAOC,SAASwB,EAAMvB,WAAY,WAEb,KAAZuE,IAC3BuP,EAAOvP,GAEE,OAATuP,OAAiC,KAATA,GAAiC,KAATA,IAEhDugB,EADAvgB,EAAO4S,KAAK6vC,iBAAiBziD,EAAMmH,GAEnCyL,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,WAMtCtZ,YAAiB+7C,KAA2B/7C,YAAiBm8C,OAE9D7iC,EADA3N,KAAKuuC,mBACOnhD,EAGA,MAEhB4S,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,QAI/B,IAAItZ,YAAiB+7C,KACjBziC,EAAYtZ,EAAMo8C,8BAGV9iC,EADA3N,KAAKuuC,mBACO,GAGA,OAGpBvuC,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,OAE1B,CACD,GAAIvZ,GAASC,EAAMq8C,OAAOr8C,EAAMs8C,eAC5BpvD,MAAa,IAEbA,EADA6S,EACaA,EAAO9I,YAGP+I,EAAM/I,cAEL/J,EAAWS,IAAI,OAC7B2rB,EAAYpsB,EAAWY,IAAI,MAAMgG,KACjC6X,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,IAEtB3N,KAAKuuC,qBACV5gC,EAAY,GACZ3N,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,OAQvD,MAAOA,IAEXwgC,EAAcn6C,UAAU48C,qBAAuB,SAAUv8C,GACrD,GAAIhH,GAAO/L,EAAwB+S,EAAM/I,YAAa,MAAM,GAAO,EACnE,IAAI+B,GAAsB,OAAdA,EAAKlF,UAAsC,KAAdkF,EAAKlF,KAAsB,CAChE,GAAIoM,GAAOyL,KAAK2vC,0BAA0Bt7C,EAAM/I,aAC5CskD,EAAYv7C,EAAMlM,IACT,QAAToM,OAAiC,KAATA,IACxBq7C,EAAY5vC,KAAK6vC,iBAAiBD,EAAWr7C,GAEjD,IAAIoZ,OAAY,GACZx1B,MAAQ,EACZ,QAAQkV,EAAKlF,MACT,IAAK,KAED,GADAwlB,EAAYrsB,EAAwB+S,EAAM/I,YAAa,KAAK,GAAO,GAC/D0U,KAAKouC,qBACL,GAAI/5C,EAAM/I,YAAYtJ,IAAI,MAEJ,QADlB2rB,EAAYrsB,EAAwB+S,EAAM/I,YAAa,MAAM,GAAO,SACrB,KAAdqiB,IAC7BA,GAAa3N,KAAK0oC,KAClB1oC,KAAKsuC,SAAWtuC,KAAK0oC,KACrB1oC,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,QAG9B,IAAkB,OAAdA,OAA2C,KAAdA,EAA2B,CAE7D,GAAIkjC,GADJljC,EAAY3N,KAAK6vC,iBAAiBliC,EAAWpZ,EAEzCF,aAAiBy8C,KAAmBz8C,EAAM08C,YAG1CpjC,EADAkjC,GADAA,EAAeA,EAAa7wD,QAAQ,KAAM,KACdA,QAAQ,KAAM,SAG9CggB,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,QAIb,QAAdA,OAA2C,KAAdA,GAC7BA,EAAY3N,KAAK6vC,iBAAiBliC,EAAWpZ,GAC7CyL,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,IAEtB3N,KAAKuuC,oBACVvuC,KAAK2uC,OAAOluD,IAAImvD,EAAW,GAGnC,MACJ,KAAK,KAED,GADAz3D,EAAQmJ,EAAwB+S,EAAM/I,YAAa,KAAK,GAAM,GAC1D0U,KAAKouC,qBACL,GAAI/5C,YAAiB28C,IACjB,GAAI/wD,MAAMuB,QAAQrJ,GACd6nB,KAAK2uC,OAAOluD,IAAImvD,EAAWz3D,OAG3B,IAAqB,gBAAVA,GACPA,EAAQ6nB,KAAK6vC,iBAAiB13D,EAAOoc,GACrCyL,KAAK2uC,OAAOluD,IAAImvD,EAAWz3D,OAE1B,KAAe,OAAVA,OAAmC,KAAVA,IAA0Bkc,EAAM/I,YAAYtJ,IAAI,MAEzD,QADlB8tD,EAAgBz7C,EAAM67C,6BAC6B,KAAlBJ,EACjC,GAA6B,gBAAlBA,IAAgD,KAAlBA,EACrCA,EAAgB9vC,KAAK6vC,iBAAiBC,EAAev7C,GACrDyL,KAAK2uC,OAAOluD,IAAImvD,EAAWjiC,OAE1B,IAAImiC,YAAyB7vD,QAAS6vD,EAAc/2D,OAAS,EAAG,CAEjE,IAAK,GADDoC,MACKjC,EAAI,EAAGA,EAAI42D,EAAc/2D,OAAQG,IACtCiC,EAAOG,KAAK0kB,KAAK6vC,iBAAiBC,EAAc12D,OAAOC,SAASH,EAAEI,WAAY,KAAMib,GAExFyL,MAAK2uC,OAAOluD,IAAImvD,EAAWz0D,QAO9C,CACD,GAAI20D,OAAgB,EAOpB,IANc,OAAV33D,OAAmC,KAAVA,IACzB23D,EAAgB9vC,KAAK+vC,gBAAgB53D,KAEpCA,GAASkc,EAAM/I,YAAYtJ,IAAI,OAASqS,YAAiB27C,KAAmB37C,YAAiB47C,OAC9FH,EAAgBz7C,EAAM67C,wBAEJ,OAAlBJ,OAAmD,KAAlBA,EACjC,GAA6B,gBAAlBA,IAAgD,KAAlBA,EACrCA,EAAgB9vC,KAAK6vC,iBAAiBC,EAAev7C,GACrDyL,KAAK2uC,OAAOluD,IAAImvD,EAAWE,OAE1B,IAAIA,YAAyB7vD,QAAS6vD,EAAc/2D,OAAS,EAAG,CAEjE,IAAK,GADDoC,MACKjC,EAAI,EAAGA,EAAI42D,EAAc/2D,OAAQG,IACtCiC,EAAOG,KAAK0kB,KAAK6vC,iBAAiBC,EAAc12D,OAAOC,SAASH,EAAEI,WAAY,KAAMib,GAExFyL,MAAK2uC,OAAOluD,IAAImvD,EAAWz0D,OAEtB6kB,MAAKuuC,oBACVvuC,KAAK2uC,OAAOluD,IAAImvD,EAAW,QAG1B5vC,MAAKuuC,oBACVvuC,KAAK2uC,OAAOluD,IAAImvD,EAAW,IAGnC,KACJ,KAAK,MAED,GAAc,QADdz3D,EAAQmJ,EAAwB+S,EAAM/I,YAAa,KAAK,GAAO,SACxB,KAAVnT,EAEzB,GAAa,QADTiV,EAAO4S,KAAK+vC,gBAAgB53D,EAAOkc,SACF,KAATjH,GAAiC,KAATA,EAAa,CACzD4S,KAAKouC,qBAAwC,QAAjBpuC,KAAKsJ,UACjClc,EAAOjO,EAAmBiO,GAE9B,IAAI+iD,OAAc,EAIlB,IAHI97C,YAAiB+7C,MACjBD,EAAc97C,IAEbA,EAAM/I,YAAYtJ,IAAI,QACN,OAAhBmuD,OAC0B,KAAhBA,IAC2B,IAA/BA,EAAYE,cACnBjjD,EAAO4S,KAAK6vC,iBAAiBziD,EAAMmH,GACnCyL,KAAK2uC,OAAOluD,IAAImvD,EAAWxiD,OAG3B,IAAIiH,EAAM/I,YAAYtJ,IAAI,OAAQ,CAC9B,GAAIsuD,GAAUj8C,EAAM/I,YAAYpJ,SAAS,OACrCrH,EAAQzB,OAAOC,SAAS+T,EAAM,GAIlC,KAHc,OAAVvS,OAAmC,KAAVA,GAAyBzB,OAAOm3D,MAAM11D,MAC/DA,EAAQ,GAEI,OAAZy1D,OAAuC,KAAZA,EAAyB,CACpD,GAAIzyD,OAAU,EAOE,SALZA,EADAsyD,EACUG,EAAQH,EAAYE,eAGpBC,EAAQl3D,OAAOC,SAASwB,EAAMvB,WAAY,WAEb,KAAZuE,IAC3BuP,EAAOvP,GAEE,OAATuP,OAAiC,KAATA,GAAiC,KAATA,IAChDA,EAAO4S,KAAK6vC,iBAAiBziD,EAAMmH,GACnCyL,KAAK2uC,OAAOluD,IAAImvD,EAAWxiD,WAMtCiH,YAAiB+7C,KAA2B/7C,YAAiBm8C,OAC9DxwC,KAAKuuC,mBACLvuC,KAAK2uC,OAAOluD,IAAImvD,EAAWxiD,GAG3B4S,KAAK2uC,OAAOluD,IAAImvD,EAAW,YAKnC,IAAIv7C,YAAiB+7C,IAAyB,CAC1C,GAAIhjD,GAAOiH,EAAMo8C,0BACZrjD,KAEGA,EADA4S,KAAKuuC,mBACE,GAGA,OAGfvuC,KAAK2uC,OAAOluD,IAAImvD,EAAWxiD,OAE1B,CACD,GAAIgH,GAASC,EAAMq8C,OAAOr8C,EAAMs8C,eAC5BpvD,MAAa,IAEbA,EADA6S,EACaA,EAAO9I,YAGP+I,EAAM/I,cAEL/J,EAAWS,IAAI,MAC7Bge,KAAK2uC,OAAOluD,IAAImvD,EAAWruD,EAAWY,IAAI,MAAMgG,MAE3C6X,KAAKuuC,oBACVvuC,KAAK2uC,OAAOluD,IAAImvD,EAAW,QAQvDzB,EAAcn6C,UAAUi9C,mBAAqB,SAAU1vD,GACnD,GAAI8L,GAAO,EACX,IAAI9L,GAAcA,EAAWS,IAAI,WAAY,CACzC,GAAIkvD,GAAU3vD,EAAWY,IAAI,UACzB+uD,KACA7jD,EAAO6jD,EAAQ/oD,MAGvB,MAAOkF,IAEX8gD,EAAcn6C,UAAUm9C,UAAY,SAAUC,EAAWpzD,OACtC,KAAXA,IAAqBA,GAAS,EAClC,IAAI7F,GAAQ,EACZ,QAAyB,KAAdi5D,GAA2C,OAAdA,EACpC,GAAIA,YAAqB9rD,IACrBnN,EAAQi5D,EAAUjpD,SAEjB,IAAyB,iBAAdipD,GACZj5D,EAAQi5D,EAAYpzD,EAAS,OAAS,MAAQA,EAAS,QAAU,SAEhE,IAAyB,gBAAdozD,GACZj5D,EAAQ6nB,KAAKqxC,gBAAgBD,OAE5B,IAAInxD,MAAMuB,QAAQ4vD,GAAY,CAC/B,GAAIE,GAAaF,CACbE,GAAWv4D,OAAS,IACpBZ,EAAQ6nB,KAAKmxC,UAAUG,EAAW,GAAItzD,GAE1C,KAAK,GAAI9E,GAAI,EAAGA,EAAIo4D,EAAWv4D,OAAQG,IACnCf,GAAS,IAAM6nB,KAAKmxC,UAAUG,EAAWl4D,OAAOC,SAASH,EAAEI,WAAY,KAAM0E,OAGvD,gBAAdozD,KACZj5D,EAAQi5D,EAAU93D,WAG1B,OAAOnB,IAEXg2D,EAAcn6C,UAAUu9C,UAAY,SAAUH,GAC1C,GAAIptD,GAAQ,EACZ,IAAIotD,GAAanxD,MAAMuB,QAAQ4vD,IAAcA,EAAUr4D,QAAU,EAAG,CAChE,GAAIuL,GAAIjM,KAAKgM,MAAqB,IAAf+sD,EAAU,IAAU93D,SAAS,IAAIwF,cAChDyF,EAAIlM,KAAKgM,MAAqB,IAAf+sD,EAAU,IAAU93D,SAAS,IAAIwF,cAChD0F,EAAInM,KAAKgM,MAAqB,IAAf+sD,EAAU,IAAU93D,SAAS,IAAIwF,aACpDkF,GAAQ,KAAoB,IAAbM,EAAEvL,OAAgB,IAAMuL,EAAKA,IAAmB,IAAbC,EAAExL,OAAgB,IAAMwL,EAAKA,IAAmB,IAAbC,EAAEzL,OAAgB,IAAMyL,EAAKA,GAEtH,MAAOR,IAEXmqD,EAAcn6C,UAAUq9C,gBAAkB,SAAUl5D,GAOhD,OAN6B,IAAzBA,EAAM+H,QAAQ,QACd/H,EAAQA,EAAM6H,QAAQ,MAAO,SAEJ,IAAzB7H,EAAM+H,QAAQ,QACd/H,EAAQA,EAAM6H,QAAQ,MAAO,QAE1B7H,GAEXg2D,EAAcn6C,UAAU27C,0BAA4B,SAAU/2D,GAC1D,GAAI2b,GACAi9C,CAIJ,IAHI54D,EAAOoJ,IAAI,UAAYpJ,EAAOoJ,IAAI,QAClCwvD,EAAO54D,EAAOsJ,SAAS,SAEvBtJ,EAAOoJ,IAAI,OAAmB,OAATwvD,OAAiC,KAATA,GAAwBvxD,MAAMuB,QAAQgwD,GAAQ,CAC3F,GAAI3mD,OAAa,EACjB,IAAa,OAAT2mD,OAAiC,KAATA,GAAwBA,EAAKz4D,OAAS,EAAG,CACjE,GAAI04D,GAAMD,EAAK,EACH,QAARC,OAA+B,KAARA,GAAuBA,EAAIzvD,IAAI,QACtD6I,EAAa4mD,EAAItvD,IAAI,WAIzB0I,GAAajS,EAAOuJ,IAAI,KAE5B,IAAmB,OAAf0I,OAA6C,KAAfA,GAA8BA,EAAW7I,IAAI,KAAM,CACjF,GAAIkG,GAAS2C,EAAW1I,IAAI,IAC5B,IAAe,OAAX+F,OAAqC,KAAXA,GAA0BA,YAAkB4C,KAAkB5C,EAAO3G,WAAWS,IAAI,aAAc,CAC5H,GAAIy8C,GAAWv2C,EAAO3G,WAAWY,IAAI,YACpB,QAAbs8C,OAAyC,KAAbA,GAA4BA,EAASz8C,IAAI,UACrEuS,EAAOkqC,EAASt8C,IAAI,WAKpC,MAAOoS,IAEX45C,EAAcn6C,UAAU67C,iBAAmB,SAAU13D,EAAOoJ,GACxD,GAEImwD,GAFA3pC,EAAQ/H,KACR5S,EAAOjV,CAEX,IAA+B,OAA3B6nB,KAAK2xC,uBAAgE,KAA3B3xC,KAAK2xC,kBAE/C,MADAD,GAAY,GAAIE,IAAe5xC,KAAK2xC,mBAC7B3xC,KAAK6xC,0BAA0BzkD,EAAMskD,EAG5C,IAAII,GAAO9xC,KAAK/H,UAAU9D,KAAK7I,WAC/B,IAAa,OAATwmD,OAAiC,KAATA,GAAwBA,EAAK9vD,IAAI,MAAO,CAChE,GAAIy8C,GAAWqT,EAAK3vD,IAAI,KACxB,IAAiB,OAAbs8C,OAAyC,KAAbA,GAA4BA,EAASz8C,IAAI,YAAa,CAClF,GAAI5F,GAAWqiD,EAASt8C,IAAI,WAC5B,IAAiB,OAAb/F,OAAyC,KAAbA,GAA4BA,EAAS4F,IAAI,kBAAmB,CACxF,GAAI+vD,GAAc31D,EAAS+F,IAAI,iBAC/B,IAAoB,OAAhB4vD,OAA+C,KAAhBA,GAA+BA,EAAY/vD,IAAI,eAAgB,CAC9F,GAAIgwD,GAAqB,GAAIlwD,IAAeke,KAAKtU,gBACjDsmD,GAAmBvxD,IAAI,cAAesxD,EAAY5vD,IAAI,eACtD,IAAI+H,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8nD,EAC9C,IAAIC,GAAuB,GAAInwD,IAAeke,KAAKtU,gBAInD,IAHAumD,EAAqBxxD,IAAI,UAAW6E,GAASnD,IAAI,UACjD8vD,EAAqBxxD,IAAI,WAAYyJ,GAEnB,QADlBwnD,EAAY,GAAIE,IAAeK,SAEN,KAAdP,GAC6B,OAApCA,EAAUQ,2BACiC,KAApCR,EAAUQ,uBACjBR,EAAUQ,sBAAsBz3D,KAAO,EAEvC,MADAulB,MAAK2xC,kBAAoBM,EAClBjyC,KAAK6xC,0BAA0BzkD,EAAMskD,MAMhE,GAAc,OAAVv5D,OACiB,KAAVA,GACQ,OAAfoJ,OACsB,KAAfA,GACPA,EAAW9G,KAAO,EAAG,CACrB,GAAI03D,GACAC,GAAW,CAoBf,IAnBA7wD,EAAWyJ,QAAQ,SAAUnL,EAAK1H,GAC9B,IAAKi6D,GAAsB,OAAVj6D,OAAmC,KAAVA,EAAuB,CAC7D,GAAI2c,OAAiB,EACrB,IAAI3c,YAAiB2J,IACjBgT,EAAiB3c,MAEhB,IAAIA,YAAiBkS,IAAe,CACrC,GAAIgoD,GAAStqC,EAAMrc,gBAAgBwH,OAAO/a,EAC3B,QAAXk6D,OAAqC,KAAXA,GAA0BA,YAAkBvwD,MACtEgT,EAAiBu9C,GAGrBv9C,IACA48C,EAAY,GAAIE,IAAe98C,GAC/Bq9C,EAAWpqC,EAAM8pC,0BAA0BzkD,EAAMskD,GACjDU,GAAW,OAIlBA,EACD,MAAOD,GAGf,MAAO/kD,IAGf+gD,EAAcn6C,UAAU69C,0BAA4B,SAAUtyD,EAAOmyD,GAGjE,IAAK,GAFDY,GAAgB,GAChBJ,EAAwBR,EAAUQ,sBAC7Bh5D,EAAI,EAAGA,EAAIqG,EAAMxG,OAAQG,IAAK,CACnC,GAAIkU,GAAO7N,EAAMnG,OAAOC,SAASH,EAAEI,WAAY,KAC3CsD,EAAO2C,EAAMpD,WAAWjD,EAC5B,IAAIg5D,EAAsBlwD,IAAIoL,GAAO,CACjC,GAAIxF,GAAasqD,EAAsB/vD,IAAIiL,EACtCxF,GAAW7O,OAAS,GAA6B,UAAxB24D,EAAUa,WACnC31D,EAAO,KAAOA,GAAQ,KAA+B,UAAxB80D,EAAUa,WACJ,oBAAhCb,EAAUc,mBACkB,aAA5Bd,EAAUe,eAAwD,iBAAxBf,EAAUgB,UACxDJ,GAAiBllD,EAGjBklD,GAAiB1qD,MAIrB0qD,IAAiBllD,EAGzB,MAAOklD,IAEXnE,EAAcn6C,UAAU+7C,gBAAkB,SAAUqB,EAAW/8C,GAC3D,GAAIlc,EACJ,IAAkB,OAAdi5D,OAA2C,KAAdA,EAC7B,GAAc,OAAV/8C,OAAmC,KAAVA,GAOzB,GANI+8C,YAAqB9rD,IACrBnN,EAAQi5D,EAAUjpD,KAEQ,gBAAdipD,KACZj5D,EAAQi5D,GAEE,OAAVj5D,OACiB,KAAVA,GACG,KAAVA,GACAkc,YAAiB+7C,MACQ,IAAzB/7C,EAAMg8C,cAAsB,CAC5B,GAAInlD,GAAOmJ,EAAMq8C,OAAOr8C,EAAMg8C,cACjB,QAATnlD,OAAiC,KAATA,GAAwBA,EAAK/S,QAAUA,IAC/DA,EAAQ+S,EAAK/S,YAKrB,IAAIi5D,YAAqB9rD,IACrBnN,EAAQi5D,EAAUjpD,SAEjB,IAAyB,gBAAdipD,GACZj5D,EAAQi5D,MAEP,IAAInxD,MAAMuB,QAAQ4vD,GAAY,CAE/B,IAAK,GADDj2D,MACKjC,EAAI,EAAGA,EAAIk4D,EAAUr4D,OAAQG,IAAK,CACvC,GAAIoJ,GAAU8uD,EAAUh4D,OAAOC,SAASH,EAAEI,WAAY,IAClDgJ,aAAmBgD,IACnBnK,EAAOG,KAAKgH,EAAQ6F,MAEI,gBAAZ7F,IACZnH,EAAOG,KAAKgH,GAGpB,MAAOnH,GAInB,MAAOhD,IAEXg2D,EAAcn6C,UAAU2+C,qBAAuB,SAAUzoD,EAAW3I,GAChE,GAAI4G,GAAO5G,EAAWY,IAAI,KACtBgG,IAAiB,KAATA,GACR6X,KAAKwuC,iBAAiB/tD,IAAI0H,EAAM+B,GAC5B3I,EAAWS,IAAI,QACfge,KAAKyuC,cAAcnzD,KAAKiG,KAGtB4G,GAAQ5G,EAAWS,IAAI,SAC7BmG,EAAO5G,EAAWY,IAAI,SACD,KAATgG,GAAe6X,KAAKwuC,iBAAiBxsD,IAAImG,IACjD5G,EAAWiH,OAAO,MAAOwX,KAAKwuC,iBAAiBrsD,IAAIgG,KAI/DgmD,EAAcn6C,UAAU4+C,aAAe,SAAUC,EAAa3oD,EAAW4oD,EAAsBl4D,GAC3F,GAAIk4D,GAAwBA,EAAqB9wD,IAAI,SAAU,CAC3D,GAAI+wD,GAAiBD,EAAqBtnD,OAAO,SAC7CwnD,EAAQF,EAAqB3wD,IAAI,QACrC,IAAI6wD,GAASA,YAAiBlxD,IAAgB,CACtCixD,GAAkBC,GAClBA,EAAMxqD,OAAO,SAAU0B,EAE3B,IAAI+oD,GAAkBJ,EAAYK,iBAAiBF,GAC/Cn4D,EAAQg4D,EAAYM,aAAap6D,MACrC85D,GAAYM,aAAa73D,KAAK4O,GAC9BtP,EAAe6F,IAAI,SAAUoyD,EAAYM,cACzCv4D,EAAe2X,UAAW,EAC1BsgD,EAAYO,mBAAmB3yD,IAAI5F,EAAOo4D,MAItD9E,EAAcn6C,UAAUq/C,aAAe,WACnC,GAAItrC,GAAQ/H,KACR7L,EAAO6L,KAAK/H,UAAU9D,KACtBlL,EAAQkL,EAAKlL,KACbA,IACA+W,KAAK4uC,QAAQ5jD,QAAQ,SAAU7S,EAAO0H,GAClC,GAAIyzD,EACAvrC,GAAM8mC,gBAAgBp0D,KAAO,GAAKstB,EAAM8mC,gBAAgB7sD,IAAInC,KAC5DyzD,EAAgBvrC,EAAM8mC,gBAAgB1sD,IAAItC,GAE9C,IAAIhF,GAAQsZ,EAAKo/C,eAAe1zD,EAChC,KAAe,IAAXhF,GAAgBA,EAAQoO,EAAO,CAC/B,GAAIoL,GAAQF,EAAKq/C,QAAQ34D,EACrBwZ,IAAmB,OAAVA,OAAmC,KAAVA,IAC9Bi/C,GAAmC,KAAlBA,GACjBj/C,EAAM/I,YAAY9C,OAAO,KAAM8qD,GAEnCvrC,EAAM0rC,iBAAiBp/C,EAAOlc,QAMlDg2D,EAAcn6C,UAAUy/C,iBAAmB,SAAUp/C,EAAOlZ,GACxD,GAAe,OAAXA,OACkB,KAAXA,GACPA,EAAOpC,OAAS,GACN,OAAVsb,OACiB,KAAVA,IACNA,EAAMxY,SAAU,CACjB,GAAI1D,GAAQgD,EAAO,EACnB,IAAIkZ,YAAiBy8C,IACH,OAAV34D,OAAmC,KAAVA,IACrBkc,YAAiBy8C,KAAmBz8C,EAAM08C,YAE1C54D,GADAA,EAAQA,EAAM6H,QAAQ,OAAQ,OAChBA,QAAQ,KAAM,OAEhCqU,EAAMjH,KAAOjV,OAGhB,IAAIkc,YAAiB27C,KAAmB37C,YAAiB47C,IAAkB,CAC5E,GAAIyD,EAEAA,GADAv4D,EAAOpC,OAAS,EACGoC,EAGf6kB,KAAKwvC,YACuC,IAAxBr3D,EAAM+H,QAAQ,KAAc/H,EAAMwc,MAAM,MAAQxc,KAGxB,IAAxBA,EAAM+H,QAAQ,KAAc/H,EAAMwc,MAAM,KAAK,GAAKxc,EAG9E,IAAIw7D,MACAC,EAAYv/C,EAAMw/C,QAClBD,IAAaA,EAAU76D,OAAS,GAChC66D,EAAU5oD,QAAQ,SAAU8oD,IACqB,IAAzCJ,EAAiBxzD,QAAQ4zD,EAAO,MAAuD,IAAzCJ,EAAiBxzD,QAAQ4zD,EAAO,KAC9EH,EAAUr4D,KAAKs4D,EAAU1zD,QAAQ4zD,MAIzCH,EAAU56D,OAAS,IACnBsb,EAAMg8C,cAAgBsD,EAClBt/C,YAAiB47C,KAAoBjwC,KAAKouC,qBAAuB/5C,EAAM/I,YAAYtJ,IAAI,cAChFqS,GAAM/I,YAAY+G,KAAK0hD,GAC9B1/C,EAAM/I,YAAYiH,UAAW,QAIpC,IAAI8B,YAAiBm8C,IAAkB,CACxC,GAAIwD,GAAY77D,EAAMsO,aAClBuZ,MAAKi0C,qBAAqB97D,EAAOkc,IAAwB,OAAd2/C,GAAoC,QAAdA,EACjE3/C,EAAMhJ,SAAU,EAGhBgJ,EAAMhJ,SAAU,MAGnB,IAAIgJ,YAAiB+7C,IAAyB,CAE/C,IAAK,GADDv1D,IAAS,EACJ3B,EAAI,EAAGA,EAAImb,EAAM6/C,WAAYh7D,IAAK,CACvC,GAAIgS,GAAOmJ,EAAMq8C,OAAOx3D,EACxB,IAAIgS,GAAQA,EAAK/S,OAAS+S,EAAK/S,QAAUA,EAAO,CAC5C0C,EAAQ3B,CACR,SAGO,IAAX2B,GAAgBwZ,EAAMg8C,gBAAkBx1D,IACxCwZ,EAAMg8C,cAAgBx1D,MAKtCszD,EAAcn6C,UAAUigD,qBAAuB,SAAU97D,EAAOkc,GAC5D,GAAIvW,IAAS,CACb,IAAIuW,EAAM6/C,WAAa,EACnB,IAAK,GAAIh7D,GAAI,EAAGA,EAAImb,EAAM6/C,WAAYh7D,IAAK,CACvC,GAAIu4D,GAAMp9C,EAAMq8C,OAAOx3D,EACvB,IAAIu4D,GAAOzxC,KAAKm0C,eAAe1C,EAAInmD,YAAanT,GAC5C,OAAO,MAMf,MADA2F,EAASkiB,KAAKm0C,eAAe9/C,EAAM/I,YAAanT,KACjC6nB,KAAKouC,qBAAuB/5C,EAAM/I,YAAYtJ,IAAI,MAAO,CACpE,GAAIoyD,GAAU//C,EAAM/I,YAAYnJ,IAAI,KACpC,KAAIiyD,GAA6B,QAAjBA,EAAQjsD,MAAmC,OAAjBisD,EAAQjsD,KAa9CrK,GAAS,MAZT,IAAIuW,EAAM/I,YAAYtJ,IAAI,OAAQ,CAC9B,GAAIsuD,GAAUj8C,EAAM/I,YAAYpJ,SAAS,MACrCouD,IAAWA,EAAQv3D,OAAS,GAC5Bu3D,EAAQtlD,QAAQ,SAAU8oD,GAClBA,IAAW37D,IACX2F,GAAS,MAWrC,MAAOA,IAEXqwD,EAAcn6C,UAAUmgD,eAAiB,SAAU5yD,EAAYpJ,GAC3D,GAAIoJ,GAAcA,EAAWS,IAAI,MAAO,CACpC,GAAI6I,GAAatJ,EAAWY,IAAI,KAChC,IAAI0I,GAAcA,YAAsB/I,KAAkB+I,EAAW7I,IAAI,KAAM,CAC3E,GAAIqyD,GAAiBxpD,EAAW1I,IAAI,IACpC,IAAIkyD,GACAA,YAA0BvyD,KAC1BuyD,EAAeryD,IAAI7J,IACa,QAA9BA,EAAMosD,qBAA+D,OAA9BpsD,EAAMosD,oBAC/C,OAAO,GAInB,OAAO,GAEX4J,EAAcn6C,UAAUsgD,SAAW,WAC/Bt0C,KAAKu0C,qBAAmBnyD,GACxB4d,KAAKouC,wBAAsBhsD,GAC3B4d,KAAKw0C,qBAAmBpyD,GACxB4d,KAAKquC,cAAYjsD,GACjB4d,KAAK/H,cAAY7V,GACjB4d,KAAKtU,oBAAkBtJ,GACvB4d,KAAKy0C,wBAAsBryD,GAC3B4d,KAAK00C,wBAAsBtyD,GAC3B4d,KAAK0oC,SAAOtmD,GACZ4d,KAAKsuC,aAAWlsD,GAChB4d,KAAKuuC,uBAAqBnsD,GAC1B4d,KAAKwuC,qBAAmBpsD,GACxB4d,KAAKyuC,kBAAgBrsD,GACrB4d,KAAK2xC,sBAAoBvvD,GACzB4d,KAAK20C,qBAAmBvyD,GACxB4d,KAAK40C,0BAAwBxyD,GAC7B4d,KAAK60C,iBAAezyD,GACpB4d,KAAK80C,YAAU1yD,GACf4d,KAAK2uC,WAASvsD,GACd4d,KAAK4uC,YAAUxsD,GACf4d,KAAK6uC,oBAAkBzsD,GACvB4d,KAAK8uC,cAAY1sD,IAEd+rD,KAGP4G,GAA+B,SAAUltC,GAEzC,QAASktC,GAAcC,GACnB,GAAIjtC,GAAQF,EAAO5T,KAAK+L,OAASA,IAIjC,OAHiB,QAAbg1C,OAAyC,KAAbA,IAC5BjtC,EAAMsmC,UAAY2G,GAEfjtC,EAq8DX,MA38DA9B,IAAU8uC,EAAeltC,GASzBktC,EAAc/gD,UAAUihD,mBAAqB,SAAUhrD,GAInD,MAHA+V,MAAK/H,UAAYhO,EACjB+V,KAAKtU,gBAAkBzB,EAASyB,gBAChCsU,KAAKy0C,qBAAsB,EACpBz0C,KAAKk+B,SAEhB6W,EAAc/gD,UAAUkhD,kBAAoB,SAAUjrD,GAKlD,MAJA+V,MAAK/H,UAAYhO,EACjB+V,KAAKtU,gBAAkBzB,EAASyB,gBAChCsU,KAAKy0C,qBAAsB,EAC3Bz0C,KAAK0oC,KAAOjgD,IACLuX,KAAKk+B,SAEhB6W,EAAc/gD,UAAUkqC,MAAQ,WAC5B,GAAI/e,GAAS,GAAImrB,GAKjB,IAJAnrB,EAAO8rB,sBACP9rB,EAAOisB,mBAAmB,QAC1BjsB,EAAOitB,sBAAsB,KAAM,4BAA6B,QAAS,MACzEjtB,EAAOitB,sBAAsB,QAAS,WAAY,MAAO,MACrDpsC,KAAKy0C,oBAAqB,CAE1B,GADAt1B,EAAOisB,mBAAmB,UACtBprC,KAAK/H,UACL,IAAS/e,EAAI,EAAGA,EAAI8mB,KAAK/H,UAAUnd,UAAW5B,IAG1C,IAAK,GADD25D,GADO7yC,KAAK/H,UAAUld,QAAQ7B,GACX25D,YACd15D,EAAI,EAAGA,EAAI05D,EAAY5pD,MAAO9P,IAAK,CACxC,GAAI2Y,GAAa+gD,EAAYl6D,GAAGQ,EAC5B2Y,MAAgBkO,KAAK20C,kBACY,IAAjC30C,KAAK20C,iBAAiB57D,QACrBinB,KAAK20C,kBAAoB30C,KAAK20C,iBAAiB57D,OAAS,GAAKinB,KAAKm1C,qBAAqBrjD,KACxFkO,KAAKo1C,sBAAsBtjD,EAAYqtB,EAAQjmC,GAK/DimC,EAAO0sB,uBAEN,CACD,GAAI13C,GAAO6L,KAAK/H,UAAU9D,IAC1B,IAAa,OAATA,OAAiC,KAATA,EAAsB,CAC9C6L,KAAKuuC,mBAAqBp6C,EAAKkhD,iBAE/B,KAAK,GADDpsD,GAAQ+W,KAAK/H,UAAU9D,KAAKlL,MACvB/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAImb,GAAQ2L,KAAK/H,UAAU9D,KAAKq/C,QAAQt6D,EAC1B,QAAVmb,OAAmC,KAAVA,GAAyBA,EAAMq7C,QACxD1vC,KAAK4wC,qBAAqBv8C,GAGlC2L,KAAKs1C,oBAAoBn2B,EAAQnf,KAAKouC,sBAGzCpuC,KAAKouC,sBACNjvB,EAAOisB,mBAAmB,KAC1BjsB,EAAOitB,sBAAsB,OAAQpsC,KAAKquC,WAE9C,IAAIvwD,GAASqhC,EAAO+e,OAEpB,OADA/e,GAAOwtB,WACA7uD,GAEXi3D,EAAc/gD,UAAUshD,oBAAsB,SAAUn2B,EAAQo2B,GAC5D,GAAIxtC,GAAQ/H,IAEZ,QADkB,KAAdu1C,IAAwBA,GAAY,GACpCA,EAAW,CACXp2B,EAAOisB,mBAAmB,KAC1BjsB,EAAOitB,sBAAsB,OAAQpsC,KAAKquC,WAC1ClvB,EAAO0sB,kBACP,IAAIhpD,GAAWmd,KAAKw1C,aAAax1C,KAAK2uC,OACtC,IAAI9rD,GAAYA,EAASpI,KAAO,EAAG,CAC/B0kC,EAAOisB,mBAAmB,SAC1B,IAAIqK,IAAS,CACb5yD,GAASmI,QAAQ,SAAU7S,EAAO0H,GAW9B,GAVAs/B,EAAOisB,mBAAmB,SAC1BjsB,EAAOitB,sBAAsB,OAAQvsD,EAAIvG,YACrC2G,MAAMuB,QAAQrJ,IACdA,EAAM6S,QAAQ,SAAUE,GACpBi0B,EAAOisB,mBAAmB,SAC1BjsB,EAAOiB,aAAal1B,EAAK5R,YACzB6lC,EAAO0sB,mBACP4J,GAAS,IAGbt9D,YAAiB2vC,KACjB/f,EAAM2tC,gBAAgBv9D,EAAOgnC,OAE5B,KAAKs2B,IAAWt9D,EAAMmB,WAAWwgB,SAASiO,EAAMumC,YAAemH,GAA6B,KAAnB1tC,EAAMumC,SAChFnvB,EAAOisB,mBAAmB,SAC1BjsB,EAAOiB,aAAajoC,EAAMmB,YAC1B6lC,EAAO0sB,uBAEN,IAAuB,KAAnB9jC,EAAMumC,UAAmBn2D,EAAMmB,WAAWwgB,SAASiO,EAAMumC,UAAW,CACzEnvB,EAAOisB,mBAAmB,iBAC1B,IAAIh+C,GAAOjV,EAAMmB,UACb8T,GAAKyM,WAAW,2BAChBzM,EAAOA,EAAKlO,UAAU,IAE1B,IAAIrG,GAAQuU,EAAKrU,OAASgvB,EAAMumC,SAASv1D,MACzCqU,GAAOA,EAAKlO,UAAU,EAAGrG,GAASuU,EAAKlO,UAAUrG,EAAQkvB,EAAMumC,SAASv1D,QACxEomC,EAAOstB,UAAUr/C,GACjB+xB,EAAO0sB,mBAEX1sB,EAAO0sB,mBACP4J,GAAS,IAEbt2B,EAAO0sB,mBAEX1sB,EAAOisB,mBAAmB,MAC1B,IAAIuK,IAAQ,CACZ,IAAI31C,KAAKtU,gBAAgBkqD,MAAM5zD,IAAI,MAAO,CACtC,GAAI03B,GAAK1Z,KAAKtU,gBAAgBkqD,MAAM1zD,SAAS,KACzCw3B,IAAMA,EAAG3gC,QAAU,IACnBomC,EAAOitB,sBAAsB,WAAY1yB,EAAG,IAC5CyF,EAAOitB,sBAAsB,WAAY1yB,EAAG,IAC5Ci8B,GAAQ,GAGXA,IACDx2B,EAAOitB,sBAAsB,WAAY,IACzCjtB,EAAOitB,sBAAsB,WAAY,KAE7CjtB,EAAO0sB,uBAGP1sB,GAAOisB,mBAAmB,UAC1BprC,KAAK2uC,OAAO3jD,QAAQ,SAAU7S,EAAO0H,GACjCs/B,EAAOisB,mBAAmB,SAC1BjsB,EAAOitB,sBAAsB,OAAQvsD,EAAIvG,YACrC2G,MAAMuB,QAAQrJ,GACdA,EAAM6S,QAAQ,SAAUE,GACpBi0B,EAAOisB,mBAAmB,SAC1BjsB,EAAOiB,aAAal1B,EAAK5R,YACzB6lC,EAAO0sB,sBAIX1sB,EAAOisB,mBAAmB,SAC1BjsB,EAAOiB,aAAajoC,EAAMmB,YAC1B6lC,EAAO0sB,oBAEX1sB,EAAO0sB,qBAEX1sB,EAAO0sB,oBAGfkJ,EAAc/gD,UAAU0hD,gBAAkB,SAAUv9D,EAAOgnC,GACvD,GAAIpX,GAAQ/H,IACZ7nB,GAAM6S,QAAQ,SAAU7S,EAAO0H,GAC3B,GAAI1H,YAAiB2vC,KACjB3I,EAAOisB,mBAAmB,SAC1BjsB,EAAOitB,sBAAsB,OAAQvsD,EAAIvG,YACzCyuB,EAAM2tC,gBAAgBv9D,EAAOgnC,GAC7BA,EAAO0sB,uBAEN,CAGD,GAFA1sB,EAAOisB,mBAAmB,SAC1BjsB,EAAOitB,sBAAsB,OAAQvsD,EAAIvG,YACrC2G,MAAMuB,QAAQrJ,GACdA,EAAM6S,QAAQ,SAAUE,GACpBi0B,EAAOisB,mBAAmB,SAC1BjsB,EAAOiB,aAAal1B,EAAK5R,YACzB6lC,EAAO0sB,yBAGV,CACD,GAAK1zD,EAAMmB,WAAWwgB,SAASiO,EAAMumC,WAAgC,KAAnBvmC,EAAMumC,SAInD,CACDnvB,EAAOisB,mBAAmB,iBAC1B,IAAIh+C,GAAOjV,EAAMmB,UACb8T,GAAKyM,WAAW,2BAChBzM,EAAOA,EAAKlO,UAAU,IAE1B,IAAIrG,GAAQuU,EAAKrU,OAASgvB,EAAMumC,SAASv1D,MACzCqU,GAAOA,EAAKlO,UAAU,EAAGrG,GAASuU,EAAKlO,UAAUrG,EAAQkvB,EAAMumC,SAASv1D,QACxEomC,EAAOstB,UAAUr/C,OAXjB+xB,GAAOisB,mBAAmB,SAC1BjsB,EAAOiB,aAAajoC,EAAMmB,WAY9B6lC,GAAO0sB,mBAEX1sB,EAAO0sB,uBAInBkJ,EAAc/gD,UAAUwhD,aAAe,SAAUrlC,GAC7C,GAAIpI,GAAQ/H,KACRnd,EAAW,GAAIilC,IA2BnB,OA1BA3X,GAAMnlB,QAAQ,SAAU7S,EAAO0H,GAC3B,GAAIg2D,GAAiBhzD,CACrB,KAAqC,IAAjChD,EAAIvG,WAAW4G,QAAQ,KAEvB,IAAK,GADD/E,GAAS0E,EAAIvG,WAAWqb,MAAM,KACzBzb,EAAI,EAAGA,EAAIiC,EAAOpC,OAAQG,IAAK,CACpC,GAAIoJ,GAAUnH,EAAO/B,OAAOC,SAASH,EAAEI,WAAY,IACnD,IAAIu8D,EAAe7zD,IAAIM,GACnBylB,EAAMytC,aAAaK,EAAevzD,IAClCuzD,EAAiBA,EAAevzD,OAGhC,IAAIpJ,IAAMiC,EAAOpC,OAAS,EACtB88D,EAAep1D,IAAI6B,EAASnK,OAE3B,CACD,GAAI29D,GAAW,GAAIhuB,IACnB+tB,GAAep1D,IAAI6B,EAASwzD,GAC5BD,EAAiBC,OAM7BD,GAAep1D,IAAIZ,EAAK1H,KAGzB0K,GAEXkyD,EAAc/gD,UAAUmhD,qBAAuB,SAAUrjD,GACrD,WAAoC,KAArBA,EAAWkF,QAA8E,IAArDgJ,KAAK20C,iBAAiBz0D,QAAQ4R,EAAWkF,QAEhG+9C,EAAc/gD,UAAUohD,sBAAwB,SAAUtjD,EAAYqtB,EAAQ42B,GACtEjkD,EAAWxG,eACTwG,YAAsBkkD,KACpBlkD,YAAsBmkD,KACtBnkD,YAAsBokD,KACtBpkD,YAAsBqkD,MAC1Bn2C,KAAKo2C,qBAAqBj3B,EAAQ42B,EAAWjkD,IAGrDijD,EAAc/gD,UAAUoiD,qBAAuB,SAAUj3B,EAAQ42B,EAAWn9D,GACxE,GACIkZ,GACAvQ,EAFA80D,GAAgB,CAGhBz9D,aAAkBme,KAClBjF,EAAalZ,EACb2I,EAAa3I,EAAO0S,aAGpB/J,EAAa3I,CAEjB,IAAIyU,GAAO2S,KAAKixC,mBAAmB1vD,EAEnC,IADAye,KAAKw0C,kBAAmB,EACpBnnD,GAAiB,KAATA,EAAa,CAChB2S,KAAK40C,wBACN50C,KAAK40C,0BAETz1B,EAAOisB,mBAAmB/9C,EAAK5G,eAC/B04B,EAAOitB,sBAAsB,OAAQ2J,EAAUz8D,WAC/C,IACImQ,OAAS,EACb,QAAQ4D,GACJ,IAAK,OAED5D,EADiBqI,EACO0lC,WACxBrY,EAAOitB,sBAAsB,QAAS3iD,EAAO,GAAGnQ,WAAa,IAAMmQ,EAAO,GAAGnQ,YAC7E6lC,EAAOitB,sBAAsB,MAAO3iD,EAAO,GAAGnQ,WAAa,IAAMmQ,EAAO,GAAGnQ,WAC3E,MACJ,KAAK,QAGL,IAAK,SACD+8D,GAAgB,EAGxB,GAAI90D,GAAcA,EAAWS,IAAI,OAAST,EAAWS,IAAI,MAAO,CAC5D,GAAIs0D,GAAe/0D,EAAWY,IAAI,KAC9Bm0D,IAAgBA,EAAat0D,IAAI,OACjCge,KAAKw0C,kBAAmB,GAGhCx0C,KAAKu2C,iBAAiBh1D,EAAYw0D,EAAW52B,EAAQk3B,GACrDl3B,EAAO0sB,mBACP7rC,KAAK40C,2BAGbG,EAAc/gD,UAAUuiD,iBAAmB,SAAUh1D,EAAYw0D,EAAW52B,EAAQk3B,GAChF,GAAItuC,GAAQ/H,KACRw2C,GAAgB,CACpB,IAAIj1D,EAAWS,IAAI,QAAS,CACxB,GAAIqL,GAAO9L,EAAWY,IAAI,OAC1Bq0D,GAAiBnpD,GAAsB,WAAdA,EAAKlF,MAAqB6X,KAAKw0C,iBA+B5D,GA7BAjzD,EAAWyJ,QAAQ,SAAUnL,EAAK1H,GAC9B,IAAQk+D,GAAyB,OAARx2D,IAAyB,MAARA,GAAuB,WAARA,EAAmB,CACxE,GAAIuE,OAAQ,EAIZ,IAHIjM,YAAiBkS,MACjBjG,EAAQ7C,EAAWY,IAAItC,IAEvBuE,GAASA,YAAiBtC,IAC1B,OAAQjC,GACJ,IAAK,KAGL,IAAK,KACDkoB,EAAMwuC,iBAAiBnyD,EAAO2xD,EAAW52B,GAAQ,EACjD,MACJ,KAAK,MACG/6B,EAAMpC,IAAI,OACVm9B,EAAOitB,sBAAsB,YAAarkC,EAAMopC,UAAU/sD,EAAMjC,IAAI,YAK3EhK,aAAiB2J,IACtBimB,EAAMwuC,iBAAiBp+D,EAAO49D,EAAW52B,GAAQ,KAE1Cq3B,GAAmBA,GAAyB,MAAR32D,IAC3CkoB,EAAM0uC,gBAAgBt3B,EAAQt/B,EAAK1H,OAI1C6nB,KAAKu0C,kBAAoB8B,IAAkB90D,EAAWS,IAAI,MAAO,CAClE,GAAIuJ,GAASyU,KAAK02C,qBAAqBn1D,EAAWY,IAAI,MAClDoJ,IAAUA,EAAOxS,OAAS,IAC1BomC,EAAOisB,mBAAmB,cAC1BjsB,EAAOstB,UAAUrrD,EAAQmK,IACzB4zB,EAAO0sB,oBAMf,GAHItqD,EAAWS,IAAI,YACfge,KAAK22C,yBAAyBp1D,EAAWY,IAAI,WAAYg9B,GAEzD59B,EAAWS,IAAI,SAAU,CACzB,GAAI40D,GAAQr1D,EAAWY,IAAI,QAC3B,IAAIy0D,GAASA,EAAMr1D,WAAY,CAC3B,GAAIs1D,GAAkBD,EAAMr1D,UACxBs1D,GAAgB70D,IAAI,MACpBm9B,EAAOitB,sBAAsB,OAAQpsC,KAAKmxC,UAAU0F,EAAgB10D,IAAI,OAExE00D,EAAgB70D,IAAI,MACpBm9B,EAAOitB,sBAAsB,WAAYpsC,KAAKmxC,UAAU0F,EAAgB10D,IAAI,OAE5E00D,EAAgB70D,IAAI,MACpBm9B,EAAOitB,sBAAsB,WAAYpsC,KAAKmxC,UAAU0F,EAAgB10D,IAAI,OAE5E00D,EAAgB70D,IAAI,MACpBm9B,EAAOitB,sBAAsB,OAAQpsC,KAAKmxC,UAAU0F,EAAgB10D,IAAI,OAExE00D,EAAgB70D,IAAI,WAAa60D,EAAgB10D,IAAI,UAAY,IAC7DygB,EAAOjkB,EAAsBi4D,EAAME,cAClB,KAATl0C,IACRuc,EAAOisB,mBAAmB,QAC1BjsB,EAAOitB,sBAAsB,OAAQ,OACrCjtB,EAAOitB,sBAAsB,WAAY,OACrCyK,EAAgB70D,IAAI,WACpBm9B,EAAOitB,sBAAsB,SAAUpsC,KAAKmxC,UAAU0F,EAAgB10D,IAAI,YAE1E00D,EAAgB70D,IAAI,WACpBm9B,EAAOitB,sBAAsB,SAAUpsC,KAAKmxC,UAAU0F,EAAgB10D,IAAI,YAE9Eg9B,EAAOstB,UAAU7pC,GACjBuc,EAAO0sB,yBAKlB,IAAItqD,EAAWS,IAAI,MAAO,CAC3B,GAAI+0D,GAAex1D,EAAWY,IAAI,KAClC,IAAI40D,IACIA,EAAa/0D,IAAI,MACjBm9B,EAAOitB,sBAAsB,OAAQpsC,KAAKmxC,UAAU4F,EAAa50D,IAAI,OAErE40D,EAAa/0D,IAAI,OAAO,CACxB,GAAIg1D,GAAeD,EAAa50D,IAAI,KACpC,IAAI60D,GAAgBA,EAAah1D,IAAI,KAAM,CACvC,GAAIi1D,GAAUD,EAAa70D,IAAI,IAC/B,IAAI80D,GAAWA,EAAQ11D,WAAY,CAC/B,GAAI21D,GAAcD,EAAQ11D,UAC1B,IAAI21D,EAAYl1D,IAAI,UAAW,CAC3B,GAAIm1D,GAAmBD,EAAY/0D,IAAI,SACvC,IAAIg1D,EAAkB,CAClB,GAAIA,EAAiBn1D,IAAI,gBAAiB,CAClC7J,EAAQ6nB,KAAKmxC,UAAUgG,EAAiBh1D,IAAI,gBAChDg9B,GAAOitB,sBAAsB,WAAYj0D,GAE7C,GAAIg/D,EAAiBn1D,IAAI,oBAAqB,CACtC7J,EAAQ6nB,KAAKmxC,UAAUgG,EAAiBh1D,IAAI,oBAChDg9B,GAAOitB,sBAAsB,eAAgBj0D,GAKjD,GAHIg/D,EAAiBn1D,IAAI,SACrBm9B,EAAOitB,sBAAsB,OAAQpsC,KAAKmxC,UAAUgG,EAAiBh1D,IAAI,UAEzEg1D,EAAiBn1D,IAAI,YAAa,CAClC,GAEIhD,GAAYL,EADDnC,EADXrE,EAAQ6nB,KAAKmxC,UAAUgG,EAAiBh1D,IAAI,cAGhDg9B,GAAOitB,sBAAsB,WAAYptD,KAIrD,GAAI4jB,GAAOjkB,EAAsBs4D,EAAQH,WACrCl0C,IAAiB,KAATA,IACRuc,EAAOisB,mBAAmB,QAC1BjsB,EAAOitB,sBAAsB,OAAQ,OACrCjtB,EAAOitB,sBAAsB,WAAY,OACrC8K,EAAYl1D,IAAI,WAChBm9B,EAAOitB,sBAAsB,SAAUpsC,KAAKmxC,UAAU+F,EAAY/0D,IAAI,YAEtE+0D,EAAYl1D,IAAI,WAChBm9B,EAAOitB,sBAAsB,SAAUpsC,KAAKmxC,UAAU+F,EAAY/0D,IAAI,YAE1Eg9B,EAAOstB,UAAU7pC,GACjBuc,EAAO0sB,uBAO/B,GAAItqD,EAAWS,IAAI,YAAa,CAC5Bm9B,EAAOisB,mBAAmB,WAC1B,IAAIgM,GAAW71D,EAAWW,SAAS,WACnC,IAAIk1D,GAAYA,EAASr+D,OAAS,EAAG,CACjC,GAAIs+D,GAAeD,EAASr+D,MAC5B,IAAIs+D,EAAe,GAAM,EAAG,CAExB,IAAK,GADDl/D,GAAQ,GACHe,EAAI,EAAGA,EAAIm+D,EAAe,EAAGn+D,IAClCf,GAAS6nB,KAAKmxC,UAAUiG,EAASh+D,OAAOC,SAASH,EAAEI,WAAY,OAASJ,EAAI,GAAM,EAAI,IAAM,MAEhGf,GAAS6nB,KAAKmxC,UAAUiG,EAASC,EAAe,MACzB,KAAVl/D,GACTgnC,EAAOstB,UAAUt0D,IAI7BgnC,EAAO0sB,mBAEX,GAAItqD,EAAWS,IAAI,SAAU,CACzB,GAAIgxD,GAAQzxD,EAAWY,IAAI,QACvB6wD,IACAhzC,KAAKo2C,qBAAqBj3B,EAAQ42B,EAAW/C,GAGrD,GAAIzxD,EAAWS,IAAI,MAAO,CACtB,GAAIwS,GAAoBjT,EAAWY,IAAI,KACnCqS,IACAwL,KAAKs3C,cAAcn4B,EAAQ,oBAAqB3qB,GAGxD,GAAIjT,EAAWS,IAAI,MAAO,CACtB,GAAIu1D,GAAeh2D,EAAWY,IAAI,KAC9Bo1D,IACAv3C,KAAKs3C,cAAcn4B,EAAQ,eAAgBo4B,GAGnD,GAAIh2D,EAAWS,IAAI,WAAY,CAC3B,GAAIw1D,GAAUj2D,EAAWW,SAAS,UAClC,IAAIs1D,GAAWA,EAAQz+D,OAAS,EAAG,CAC/BomC,EAAOisB,mBAAmB,UAC1B,KAAK,GAAIjyD,GAAI,EAAGA,EAAIq+D,EAAQz+D,OAAQI,IAChCgmC,EAAOgtB,oBAAoB,UAAWnsC,KAAKmxC,UAAUqG,EAAQp+D,OAAOC,SAASF,EAAEG,WAAY,MAE/F6lC,GAAO0sB,oBAGf,GAAItqD,EAAWS,IAAI,QACX7J,EAAQoJ,EAAWY,IAAI,QACJ,KAAVhK,EAAc,CACvB,GAAI0C,GAAQ1C,EAAM+H,QAAQ,QACtBrF,GAAQ,IACR1C,EAAQA,EAAM+G,UAAUrE,IAE5BmlB,KAAKs3C,cAAcn4B,EAAQ,oBAAqBhnC,GAGpDoJ,EAAWS,IAAI,cACX7J,EAAQoJ,EAAWY,IAAI,cACdhK,EAAMY,OAAS,IACxBomC,EAAOisB,mBAAmB,YAC1BjsB,EAAOiB,aAAajoC,GACpBgnC,EAAO0sB,qBAInBkJ,EAAc/gD,UAAU0iD,qBAAuB,SAAU7rD,GACrD,GAAI4sD,GAAa,GAAInN,KAAW,EAChCmN,GAAWrM,mBAAmB,QAC9BqM,EAAWrL,sBAAsB,MAAO,MACxCpsC,KAAK03C,2BAA2BD,EAAY5sD,GAC5C4sD,EAAW5L,kBACX,IAAInvD,GAAS+6D,EAAW/6D,MAExB,OADA+6D,GAAW9K,WACJjwD,GAEXq4D,EAAc/gD,UAAU0jD,2BAA6B,SAAUv4B,EAAQ59B,GACnE,GAAIwmB,GAAQ/H,IACRze,IAAcA,EAAW9G,KAAO,GAChC8G,EAAWyJ,QAAQ,SAAUnL,EAAK1H,GAC9B4vB,EAAM4vC,aAAax4B,EAAQhnC,YAAiBkS,IAAgB9I,EAAWY,IAAItC,GAAO1H,EAAOoJ,EAAY1B,MAIjHk1D,EAAc/gD,UAAU2jD,aAAe,SAAUx4B,EAAQiyB,EAAW7vD,EAAY1B,EAAK+3D,GACjF,GAAkB,OAAdxG,OAA2C,KAAdA,EAC7B,GAAIA,YAAqB9rD,IACrB0a,KAAK63C,aAAa14B,EAAQ,OAAQt/B,GAClCs/B,EAAOitB,sBAAsB,MAAOgF,EAAUjpD,MAC9Cg3B,EAAO0sB,uBAEN,IAAI5rD,MAAMuB,QAAQ4vD,GACnBpxC,KAAK63C,aAAa14B,EAAQ,QAASt/B,GAC/B0B,EAAWS,IAAInC,GACfmgB,KAAK83C,YAAY34B,EAAQ59B,EAAWW,SAASrC,GAAM0B,GAGnDye,KAAK83C,YAAY34B,EAAQiyB,EAAW7vD,GAExC49B,EAAO0sB,uBAEN,IAAyB,gBAAduF,GACZpxC,KAAK63C,aAAa14B,EAAQ,SAAUt/B,GACpCs/B,EAAOitB,sBAAsB,MAAOgF,GACpCjyB,EAAO0sB,uBAEN,IAAyB,gBAAduF,GACRh4D,OAAOsE,UAAU0zD,IACjBpxC,KAAK63C,aAAa14B,EAAQ,MAAOt/B,GACjCs/B,EAAOitB,sBAAsB,MAAOgF,EAAU93D,cAG9C0mB,KAAK63C,aAAa14B,EAAQ,QAASt/B,GACnCs/B,EAAOitB,sBAAsB,MAAOgF,EAAUzzD,QAAQ,KAE1DwhC,EAAO0sB,uBAEN,IAAyB,iBAAduF,GACZpxC,KAAK63C,aAAa14B,EAAQ,OAAQt/B,GAClCs/B,EAAOitB,sBAAsB,MAAOgF,EAAY,OAAS,SACzDjyB,EAAO0sB,uBAEN,IAAIuF,YAAqBtvD,IAC1Bke,KAAK63C,aAAa14B,EAAQ,OAAQt/B,GAClCmgB,KAAK03C,2BAA2Bv4B,EAAQiyB,GACxCjyB,EAAO0sB,uBAEN,IAAkB,OAAduF,EACLpxC,KAAK63C,aAAa14B,EAAQ,OAAQt/B,GAClCs/B,EAAO0sB,uBAEN,IAAIuF,YAAqBtmD,KAAkBsmD,EAAU7vD,WAAY,CAClE,GAAIw2D,GAAmB3G,EAAU7vD,UAGjC,IAFAye,KAAK63C,aAAa14B,EAAQ,SAAUt/B,GACpCs/B,EAAOitB,sBAAsB,SAAU,IAClC2L,EAAiB/1D,IAAI,YAC8B,UAApDge,KAAKmxC,UAAU4G,EAAiB51D,IAAI,cAClC41D,EAAiB/1D,IAAI,UAAY+1D,EAAiB/1D,IAAI,WAAa,CACjE4gB,MAAO,EAGHA,GAFJg1C,EACIG,EAAiB/1D,IAAI,WAAqD,cAAxC+1D,EAAiB51D,IAAI,UAAUgG,KAC1DipD,EAAUh1C,WAAU,GAGpBF,GAAgBk1C,GAAW,GAI/BA,EAAUh1C,WAAU,IAE1B27C,EAAiB/1D,IAAI,WAAa4gB,GAAiB,KAATA,GAC3Cm1C,EAAiBvvD,OAAO,SAAU4oD,EAAUr4D,QAEhDinB,KAAK03C,2BAA2Bv4B,EAAQ44B,GACxC54B,EAAOisB,mBAAmB,QAC1BjsB,EAAOitB,sBAAsB,OAAQ,OACrCjtB,EAAOitB,sBAAsB,WAAY,OACrCxpC,GAAiB,KAATA,GACRuc,EAAOstB,UAAU7pC,OAGpB,CACD,GAAIA,GAAOwuC,EAAUh1C,aAChB27C,EAAiB/1D,IAAI,WAAa4gB,GAAiB,KAATA,GAC3Cm1C,EAAiBvvD,OAAO,SAAU4oD,EAAUr4D,QAGhD6pB,GADAA,EAAOA,EAAK5iB,QAAQ,KAAM,SACdA,QAAQ,KAAM,QAC1BggB,KAAK03C,2BAA2Bv4B,EAAQ44B,GACxC54B,EAAOisB,mBAAmB,QAC1BjsB,EAAOitB,sBAAsB,OAAQ,YACrCjtB,EAAOitB,sBAAsB,WAAY,SACrCxpC,GAAiB,KAATA,GACRuc,EAAOstB,UAAU7pC,GAGzBuc,EAAO0sB,mBACP1sB,EAAO0sB,uBAEFuF,aAAqB/mD,KAAiB2V,KAAKtU,iBAChDsU,KAAK23C,aAAax4B,EAAQnf,KAAKtU,gBAAgBwH,OAAOk+C,GAAY7vD,EAAY1B,EAAKuxD,EAAUn+C,SAIzG8hD,EAAc/gD,UAAU6jD,aAAe,SAAU14B,EAAQh3B,EAAMtI,GAC3Ds/B,EAAOisB,mBAAmBjjD,GACtBtI,GACAs/B,EAAOitB,sBAAsB,MAAOvsD,IAG5Ck1D,EAAc/gD,UAAU8jD,YAAc,SAAU34B,EAAQlgC,EAAOsC,GAC3D,GAAIwmB,GAAQ/H,IACZ/gB,GAAM+L,QAAQ,SAAU5G,GACpB2jB,EAAM4vC,aAAax4B,EAAQ/6B,EAAO7C,MAG1CwzD,EAAc/gD,UAAUgkD,mBAAqB,SAAU7/D,EAAO8/D,GAY1D,WAXkB,KAAdA,IAAwBA,GAAY,GAIpC9/D,EAHA8/D,GAEA9/D,GADAA,EAAQA,EAAM6H,QAAQ,QAAS,MACjBA,QAAQ,OAAQ,MAChBA,QAAQ,OAAQ,MAI9B7H,GADAA,EAAQA,EAAM6H,QAAQ,IAAK,UACbA,QAAQ,IAAK,SACbA,QAAQ,IAAK,SAInC+0D,EAAc/gD,UAAUyiD,gBAAkB,SAAUt3B,EAAQt/B,EAAKuxD,GAC7D,GAAIj0D,EACJ,IAAI6iB,KAAK40C,wBAAsE,IAA7C50C,KAAK40C,sBAAsB10D,QAAQL,GACjE,OAAQA,GACJ,IAAK,IACDmgB,KAAKk4C,YAAY/4B,EAAQiyB,EAAW,QAAS,IAC7C,MACJ,KAAK,KACDpxC,KAAKk4C,YAAY/4B,EAAQiyB,EAAW,iBACpC,MACJ,KAAK,IACDpxC,KAAKosC,sBAAsBjtB,EAAQ,OAAQiyB,EAC3C,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsBjtB,EAAQ,OAAQiyB,EAC3C,MACJ,KAAK,OACDpxC,KAAKosC,sBAAsBjtB,EAAQ,OAAQiyB,EAC3C,MACJ,KAAK,OACDpxC,KAAKosC,sBAAsBjtB,EAAQ,UAAWiyB,EAC9C,MACJ,KAAK,IACDpxC,KAAKosC,sBAAsBjtB,EAAQ,QAASiyB,EAC5C,MACJ,KAAK,SACDpxC,KAAKosC,sBAAsBjtB,EAAQ,WAAYiyB,EAC/C,MACJ,KAAK,IACDpxC,KAAKosC,sBAAsBjtB,EAAQ,QAASiyB,EAC5C,MACJ,KAAK,KACGA,GAAanxD,MAAMuB,QAAQ4vD,GACF,IAArBA,EAAUr4D,SACVomC,EAAOitB,sBAAsB,OAAQpsC,KAAKmxC,UAAUC,EAAU,KAC9DjyB,EAAOitB,sBAAsB,OAAQpsC,KAAKmxC,UAAUC,EAAU,MAG7DA,YAAqB9rD,KAC1B0a,KAAKosC,sBAAsBjtB,EAAQ,OAAQiyB,EAE/C,MACJ,KAAK,IACD,IAAqD,IAAjDpxC,KAAK40C,sBAAsB10D,QAAQ,SAAiB,CACpD,OAAQ8f,KAAKmxC,UAAUC,IACnB,IAAK,IACDjyB,EAAOitB,sBAAsB,QAAS,OACtC,MACJ,KAAK,IACDjtB,EAAOitB,sBAAsB,QAAS,SACtC,MACJ,KAAK,IACDjtB,EAAOitB,sBAAsB,QAAS,QACtC,MACJ,KAAK,IACDjtB,EAAOitB,sBAAsB,QAAS,WACtC,MACJ,KAAK,IACDjtB,EAAOitB,sBAAsB,QAAS,QACtC,MACJ,KAAK,IACDjtB,EAAOitB,sBAAsB,QAAS,aAG9CpsC,KAAK40C,sBAAsBt5D,KAAK,SAEpC,KACJ,KAAK,IACD0kB,KAAKosC,sBAAsBjtB,EAAQ,SAAUiyB,EAC7C,MACJ,KAAK,IACDpxC,KAAKosC,sBAAsBjtB,EAAQ,YAAaiyB,EAChD,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsBjtB,EAAQ,SAAUiyB,EAC7C,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsBjtB,EAAQ,KAAMiyB,EACzC,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsBjtB,EAAQ,YAAaiyB,GAAW,EAC3D,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsBjtB,EAAQ,eAAgBiyB,EACnD,MACJ,KAAK,MACDpxC,KAAKosC,sBAAsBjtB,EAAQ,eAAgBiyB,EACnD,MACJ,KAAK,MACDpxC,KAAKosC,sBAAsBjtB,EAAQ,UAAWiyB,EAC9C,MACJ,KAAK,IACDpxC,KAAKosC,sBAAsBjtB,EAAQ,gBAAiBiyB,EACpD,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsBjtB,EAAQ,gBAAiBiyB,EACpD,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsBjtB,EAAQ,UAAWiyB,EAC9C,MACJ,KAAK,aACDpxC,KAAKosC,sBAAsBjtB,EAAQ,SAAUiyB,EAC7C,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsBjtB,EAAQ,UAAWiyB,EAC9C,MACJ,KAAK,IACD,GAAyB,gBAAdA,KAA2E,IAAjDpxC,KAAK40C,sBAAsB10D,QAAQ,SAAiB,CACrF,GAAIhF,GAAOD,EAAyBm2D,EACpCjyB,GAAOitB,sBAAsB,QAASlxD,GACtC8kB,KAAK40C,sBAAsBt5D,KAAK,SAEpC,KACJ,KAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,IACL,IAAK,SACL,IAAK,IACL,IAAK,WACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,mBACL,IAAK,WACL,IAAK,eACL,IAAK,OACD,KACJ,KAAK,oBACD6B,EAAQX,EAAe40D,GACvBpxC,KAAKosC,sBAAsBjtB,EAAQt/B,EAAI4G,cAAe9H,EAAsBxB,GAC5E,MACJ,SACI6iB,KAAKosC,sBAAsBjtB,EAAQt/B,EAAI4G,cAAe2qD,KAKtE2D,EAAc/gD,UAAUo4C,sBAAwB,SAAUjtB,EAAQg5B,EAAW/G,EAAWgH,GAEpF,OADoB,KAAhBA,IAA0BA,GAAc,IACW,IAAnDp4C,KAAK40C,sBAAsB10D,QAAQi4D,GAAmB,CACtD,GAAIhgE,GAAQ6nB,KAAKmxC,UAAUC,EAC3BjyB,GAAOitB,sBAAsB+L,EAAWC,EAAcjgE,EAAMsO,cAAgBtO,GAC5E6nB,KAAK40C,sBAAsBt5D,KAAK68D,KAGxCpD,EAAc/gD,UAAUsjD,cAAgB,SAAUn4B,EAAQh3B,EAAMhQ,GACxDA,GAAmB,KAAVA,IACTgnC,EAAOisB,mBAAmBjjD,GAC1Bg3B,EAAOstB,UAAUt0D,GACjBgnC,EAAO0sB,qBAGfkJ,EAAc/gD,UAAUkkD,YAAc,SAAU/4B,EAAQiyB,EAAW+G,EAAWxnD,GAC1E,GAAI3M,GAAQgc,KAAKuxC,UAAUH,EAC3B,IAAyB,gBAAdA,IAA0BzgD,EAAK,CACtC,GAAIlM,GAAIub,KAAKmxC,UAAUC,EACnB3sD,IAAW,KAANA,IAAyD,IAA7Cub,KAAK40C,sBAAsB10D,QAAQyQ,KACpDwuB,EAAOitB,sBAAsBz7C,EAAKlM,GAClCub,KAAK40C,sBAAsBt5D,KAAKqV,IAGpC3M,GAAmB,KAAVA,IAAmE,IAAnDgc,KAAK40C,sBAAsB10D,QAAQi4D,KAC5Dh5B,EAAOitB,sBAAsB+L,EAAWn0D,GACxCgc,KAAK40C,sBAAsBt5D,KAAK68D,KAGxCpD,EAAc/gD,UAAU2iD,yBAA2B,SAAUp1D,EAAY49B,GAErE,GADAA,EAAOisB,mBAAmB,WACtB7pD,EAAY,CAIZ,GAHIA,EAAWS,IAAI,MACfm9B,EAAOitB,sBAAsB,YAAapsC,KAAKmxC,UAAU5vD,EAAWY,IAAI,OAExEZ,EAAWS,IAAI,KAAM,CACjB/C,EAAQsC,EAAWW,SAAS,IAChCi9B,GAAOisB,mBAAmB,QAC1BprC,KAAKq4C,4BAA4Bp5D,EAAM,GAAIkgC,GAC3CA,EAAO0sB,mBAEX,GAAItqD,EAAWS,IAAI,KAAM,CACjB/C,EAAQsC,EAAWW,SAAS,IAChCi9B,GAAOisB,mBAAmB,YAC1BprC,KAAKq4C,4BAA4Bp5D,EAAM,GAAIkgC,GAC3CA,EAAO0sB,mBAEX,GAAItqD,EAAWS,IAAI,KAAM,CACrB,GAAI/C,GAAQsC,EAAWW,SAAS,IAChCi9B,GAAOisB,mBAAmB,WAC1BprC,KAAKq4C,4BAA4Bp5D,EAAM,GAAIkgC,GAC3CA,EAAO0sB,oBAGf1sB,EAAO0sB,oBAEXkJ,EAAc/gD,UAAUqkD,4BAA8B,SAAUC,EAAoBn5B,GAC5Em5B,EAAmBt2D,IAAI,MACvBm9B,EAAOitB,sBAAsB,IAAKpsC,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,OAExEm2D,EAAmBt2D,IAAI,MACvBm9B,EAAOitB,sBAAsB,IAAKpsC,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,OAExEm2D,EAAmBt2D,IAAI,MACvBm9B,EAAOitB,sBAAsB,IAAKpsC,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,OAExEm2D,EAAmBt2D,IAAI,OACvBm9B,EAAOitB,sBAAsB,KAAMpsC,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,QAEzEm2D,EAAmBt2D,IAAI,MACvBm9B,EAAOitB,sBAAsB,IAAKpsC,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,OAExEm2D,EAAmBt2D,IAAI,OACvBm9B,EAAOitB,sBAAsB,KAAMpsC,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,QAEzEm2D,EAAmBt2D,IAAI,OACvBm9B,EAAOitB,sBAAsB,KAAMpsC,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,QAEzEm2D,EAAmBt2D,IAAI,OACvBm9B,EAAOitB,sBAAsB,KAAMpsC,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,SAKjF4yD,EAAc/gD,UAAUukD,mBAAqB,SAAUtuD,EAAU2Y,GAC7D5C,KAAK/H,UAAYhO,EACjB+V,KAAKtU,gBAAkBzB,EAASyB,gBAChCsU,KAAKy0C,qBAAsB,CAC3B,IAAI+D,GAAMz6D,EAAe6kB,GAAM,EAC/B5C,MAAK60C,cAAe,GAAK4D,YAAaC,gBAAgBF,EAAK,YAC3Dx4C,KAAK00C,qBAAsB,EAC3B10C,KAAK24C,aAAa34C,KAAK60C,aAAa+D,kBAExC7D,EAAc/gD,UAAU6kD,gBAAkB,SAAU5uD,EAAU2Y,GAC1D5C,KAAK/H,UAAYhO,EACjB+V,KAAKtU,gBAAkBzB,EAASyB,gBAChCsU,KAAKy0C,qBAAsB,EAC3Bz0C,KAAK60C,cAAe,GAAK4D,YAAaC,gBAAgB36D,EAAe6kB,GAAM,GAAO,YAClF5C,KAAK24C,aAAa34C,KAAK60C,aAAa+D,kBAExC7D,EAAc/gD,UAAU2kD,aAAe,SAAU7G,GAC7C,GAAIA,GAA0B,IAAlBA,EAAKgH,SAEb,GADA94C,KAAK+4C,WAAWjH,GACZ9xC,KAAK00C,oBAAqB,CAC1B,GAAIsE,GAAQlH,EAAKmH,qBAAqB,SACtC,IAAID,GAASA,EAAMjgE,OAAS,EACxB,IAASG,EAAI,EAAGA,EAAI8/D,EAAMjgE,OAAQG,IAAK,CACnC,GAAIggE,GAAQF,EAAM9tD,KAAKhS,EACvB,IAAIggE,GAA6B,WAApBA,EAAM7N,WAA0B6N,EAAMC,gBAE/C,IAAK,GADDC,GAAcF,EAAMG,WACflgE,EAAI,EAAGA,EAAIigE,EAAYrgE,OAAQI,IAAK,CACzC,GAAImgE,GAAYF,EAAYluD,KAAK/R,EACjC,IAAImgE,GAAoC,IAAvBA,EAAUR,SAAgB,CACvC,GAAIx2D,GAAUg3D,CACVh3D,IAAgC,IAArBA,EAAQw2D,UACnB94C,KAAKu5C,qBAAqBj3D,KAOlD,GAAI0d,KAAKyuC,cAAc11D,OAAS,EAC5B,IAAK,GAAIG,GAAI,EAAGA,EAAI8mB,KAAKyuC,cAAc11D,OAAQG,IAAK,CAChD,GAAIqI,GAAaye,KAAKyuC,cAAcr1D,OAAOC,SAASH,EAAEI,WAAY,KAC9DkgE,EAAYj4D,EAAWY,IAAI,MAC3Bq3D,IAA2B,KAAdA,IACTx5C,KAAKwuC,iBAAiBxsD,IAAIw3D,GAC1Bj4D,EAAWiH,OAAO,MAAOwX,KAAKwuC,iBAAiBrsD,IAAIq3D,UAG5Cj4D,GAAW8Q,KAAKonD,KAKvCz5C,KAAKyuC,iBACLzuC,KAAKwuC,iBAAmB,GAAI1mB,SAG5B9nB,MAAK05C,eAAe5H,EAG5B9xC,MAAKs0C,YAETS,EAAc/gD,UAAU+kD,WAAa,SAAUz2D,GAC3C,GAAyB,SAArBA,EAAQq3D,SACR,KAAM,IAAI9/D,OAAM,uBAGxBk7D,EAAc/gD,UAAU0lD,eAAiB,SAAU5H,GAC/C,GAAI9Z,GAAO8Z,EAAKmH,qBAAqB,IACrC,IAAIjhB,GAAQA,EAAKj/C,OAAS,EAAG,CACzB,GAAI6gE,GAAkB5hB,EAAK9sC,KAAK,EAChC,IAAI0uD,GAAiD,MAA9BA,EAAgBvO,WAAqBuO,EAAgBC,aAAa,QAAS,CAC9F,GAAI7E,GAAW4E,EAAgBE,aAAa,OACxC9E,IAAyB,KAAbA,IACZh1C,KAAKquC,UAAY2G,KAI7Bhd,EAAO8Z,EAAKmH,qBAAqB,SACrBjhB,EAAKj/C,OAAS,IACtBinB,KAAKouC,qBAAsB,EAE/B,IAAI8K,GAAQpH,EAAKuH,UACjB,IAAIH,GAASA,EAAMngE,OAAS,EACxB,IAAK,GAAIG,GAAI,EAAGA,EAAIggE,EAAMngE,OAAQG,IAAK,CACnC,GAAIogE,GAAYJ,EAAMhuD,KAAKhS,EAC3B,IAAIogE,GAAoC,IAAvBA,EAAUR,SAAgB,CACvC,GAAIx2D,GAAUg3D,CACd,IAAIh3D,GAAiC,WAAtBA,EAAQ+oD,WAA0B/oD,EAAQ62D,gBAAiB,CAGtE,IAAK,GAFDY,GAAYz3D,EAAQ+2D,WACpBx2D,KACK1J,EAAI,EAAGA,EAAI4gE,EAAUhhE,OAAQI,IAAK,CACvC,GAAIkb,GAAQ0lD,EAAU7uD,KAAK/R,EAC3B,IAAIkb,GAA4B,IAAnBA,EAAMykD,SAAgB,CAC/B,GAAIkB,GAAe3lD,CACf2lD,IAA2C,UAA3BA,EAAa3O,WAC7BxoD,EAASvH,KAAK0+D,IAI1Bh6C,KAAKi6C,iBAAiBp3D,KAKtCmd,KAAKqzC,gBAET0B,EAAc/gD,UAAUimD,iBAAmB,SAAUjiB,GACjD,IAAK,GAAI9+C,GAAI,EAAGA,EAAI8+C,EAAKj/C,OAAQG,IAAK,CAClC,GAAIggE,GAAQlhB,EAAK5+C,OAAOC,SAASH,EAAEI,WAAY,KAC3Cs2D,EAAY,EAChB,IAAIsJ,IACIA,EAAMW,aAAa,UACnBjK,EAAYsJ,EAAMY,aAAa,SAE/BlK,GAA2B,KAAdA,GAAkB,CAC/B,GAAIz0D,GAAS+9D,EAAMD,qBAAqB,QACxC,IAAI99D,GAAUA,EAAOpC,OAAS,EAAG,CAG7B,IAFA,GAAImhE,GAAOhB,EACPiB,EAAW,GACW,WAAnBD,EAAK7O,WAAwB,CAC5B8O,EAASphE,OAAS,IAClBohE,EAAW,IAAMA,EAEjBC,IAAO,CACX,IAAIF,EAAKL,aAAa,QAAS,CAC3B,GAAIQ,GAASH,EAAKJ,aAAa,OAC3BO,IAAqB,KAAXA,IACVF,EAAWE,EAASF,EACpBC,GAAO,GAGVA,IACDD,GAAYD,EAAK7O,WAErB6O,EAAOA,EAAKI,cAEhB1K,EAAYuK,CACRI,OAAa,EAEbA,GADAv6C,KAAK4uC,QAAQ5sD,IAAI4tD,GACJ5vC,KAAK4uC,QAAQzsD,IAAIytD,KAKlC,KAASz2D,EAAI,EAAGA,EAAIgC,EAAOpC,OAAQI,IAC/BohE,EAAWj/D,KAAKH,EAAO+P,KAAK/R,GAAGqhE,YAEnCx6C,MAAK4uC,QAAQnuD,IAAImvD,EAAW2K,OAI5B,KADAp/D,EAAS+9D,EAAMD,qBAAqB,oBACtB99D,EAAOpC,OAAS,EAAG,CAC7B,GAAIuJ,GAAUnH,EAAO+P,KAAK,EAC1B,IAAI5I,EAAS,CAGT,IAFA,GAAI43D,GAAOhB,EACPiB,EAAW,GACW,WAAnBD,EAAK7O,WAAwB,CAC5B8O,EAASphE,OAAS,IAClBohE,EAAW,IAAMA,EAErB,IAAIC,IAAO,CACX,IAAIF,EAAKL,aAAa,QAAS,CAC3B,GAAIY,GAASP,EAAKJ,aAAa,OAC3BW,IAAqB,KAAXA,IACVN,EAAWM,EAASN,EACpBC,GAAO,GAGVA,IACDD,GAAYD,EAAK7O,WAErB6O,EAAOA,EAAKI,cAEhB1K,EAAYuK,CACZ,IAAIO,GAAWp4D,EAAQk4D,WACvB,IAAIl4D,EAAQ+2D,YAAc/2D,EAAQ+2D,WAAWtgE,OAAS,EAAG,CACrD,GAAIugE,GAAYh3D,EAAQ+2D,WAAW,EACnC,IAAIC,GAAaA,EAAUH,gBAAiB,CACxCuB,EAAW,EAEX,KAAK,GADDrB,GAAaC,EAAUD,WAClBlgE,MAAI,GAAQA,EAAIkgE,EAAWtgE,OAAQI,IACxCuhE,GAAYrB,EAAWnuD,KAAK/R,GAAGqhE,YAAc,IAG7CE,GADAA,EAAS3hE,OAAS,EACP2hE,EAASx7D,UAAU,EAAGw7D,EAAS3hE,OAAS,GAGxCuJ,EAAQk4D,aAI/B,GAAID,OAAa,EAEbA,GADAv6C,KAAK4uC,QAAQ5sD,IAAI4tD,GACJ5vC,KAAK4uC,QAAQzsD,IAAIytD,KAKlC,KAASz2D,EAAI,EAAGA,EAAIgC,EAAOpC,OAAQI,IAC/BohE,EAAWj/D,KAAKo/D,EAEpB16C,MAAK4uC,QAAQnuD,IAAImvD,EAAW2K,GACvBv6C,KAAK6uC,gBAAgB7sD,IAAI4tD,IAC1B5vC,KAAK6uC,gBAAgBpuD,IAAImvD,EAAWttD,EAAQq4D,gBAS5E5F,EAAc/gD,UAAUulD,qBAAuB,SAAUj3D,GACrD,GAAIA,EAAS,CACT,GAAIyzD,IAAa,CACjB,IAAIzzD,EAAQs4D,eAAiBt4D,EAAQu3D,aAAa,UAC9C9D,EAAY38D,OAAOC,SAASiJ,EAAQw3D,aAAa,QAAS,MACzC,GAAK/D,EAAY/1C,KAAK/H,UAAUnd,UAAW,CACxD,GAAId,GAAOgmB,KAAK/H,UAAUld,QAAQg7D,GAC9BjD,EAAuB9yC,KAAK66C,yBAAyB7gE,EAAMsI,EAC/D,IAAIwwD,GAAwBA,EAAqBr4D,KAAO,EAAG,CACvD,GAAIG,GAAiBZ,EAAKgB,eAC1B,IAAIJ,EAAgB,CAChB,GAAIi4D,GAAc74D,EAAK64D,YACnB/gD,EAAa+gD,EAAYK,iBAAiBJ,EAC9C,IAAIhhD,EAAY,CACZA,EAAWgpD,aAAc,CACzB,IAAI5wD,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW4oD,IAC1CA,EAAqB9wD,IAAI,OAAS8wD,EAAqB9wD,IAAI,SAC3Dge,KAAK2yC,qBAAqBzoD,EAAW4oD,GAEzChhD,EAAWipD,KAAO7wD,CAClB,IAAIrP,GAAQg4D,EAAYM,aAAap6D,MACrC85D,GAAYM,aAAa73D,KAAK4O,GAC1B2oD,EAAYmI,WAAanI,EAAYmI,UAAUjiE,OAAS,IACxD85D,EAAYmI,cAEhBpgE,EAAe6F,IAAI,SAAUoyD,EAAYM,cACzCv4D,EAAe2X,UAAW,EAC1BsgD,EAAYO,mBAAmB3yD,IAAI5F,EAAOiX,GAC1CkO,KAAK4yC,aAAaC,EAAa3oD,EAAW4oD,EAAsBl4D,SAQ5Fm6D,EAAc/gD,UAAU6mD,yBAA2B,SAAU7gE,EAAMsI,GAC/D,GAAIf,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWiH,OAAO,OAAQlD,GAASnD,IAAI,SACvC,IAAI84D,IAAc,CAClB,QAAQ34D,EAAQ+oD,UAAU5kD,eACtB,IAAK,OAED,GADAlF,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SACtCG,EAAQu3D,aAAa,UAAYv3D,EAAQu3D,aAAa,OAAQ,CAC9D,GAAIqB,KACJ54D,GAAQw3D,aAAa,SAASnlD,MAAM,KAAK3J,QAAQ,SAAU7S,GACvD+iE,EAAS5/D,KAAKlC,OAAO8J,WAAW/K,MAEpCmK,EAAQw3D,aAAa,OAAOnlD,MAAM,KAAK3J,QAAQ,SAAU7S,GACrD+iE,EAAS5/D,KAAKlC,OAAO8J,WAAW/K,MAEZ,IAApB+iE,EAASniE,QACTwI,EAAWiH,OAAO,IAAK0yD,GAG/Bl7C,KAAKm7C,iBAAiB55D,EAAYe,EAClC,MACJ,KAAK,SACDf,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,UAC1C,MACJ,KAAK,SACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,UAC1C,MACJ,KAAK,WACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,aAC1C6d,KAAKm7C,iBAAiB55D,EAAYe,EAClC,MACJ,KAAK,UACDf,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,YAC1C6d,KAAKm7C,iBAAiB55D,EAAYe,EAClC,MACJ,KAAK,MACDf,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,OAC1C,MACJ,KAAK,QACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SAC1C,MACJ,KAAK,OACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,QAC1C,MACJ,KAAK,WACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,aAC1C6d,KAAKm7C,iBAAiB55D,EAAYe,EAClC,MACJ,KAAK,QACDf,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SAC1C,MACJ,KAAK,YACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,aAC1C,MACJ,KAAK,WACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,YAC1C,MACJ,KAAK,YACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,aAC1C,MACJ,KAAK,YACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,aAC1C,MACJ,KAAK,iBACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,kBAC1C,MACJ,KAAK,QACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SAC1C,MACJ,KAAK,QACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SAC1C,MACJ,KAAK,SACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,UAC1C,MACJ,SACI84D,GAAc,EAMtB,MAHIA,IACAj7C,KAAKo7C,mBAAmB75D,EAAYe,EAAStI,GAE1CuH,GAEXwzD,EAAc/gD,UAAUonD,mBAAqB,SAAU75D,EAAYe,EAAStI,GACxEgmB,KAAKq7C,gBAAgB95D,EAAYe,GACjC0d,KAAKs7C,sBAAsB/5D,EAAYe,EAAQi5D,YAC/Cv7C,KAAKw7C,oBAAoBj6D,EAAYe,EAAStI,GAC9CgmB,KAAKy7C,sBAAsBl6D,EAAYe,IAE3CyyD,EAAc/gD,UAAUqnD,gBAAkB,SAAU95D,EAAYe,GAC5D,GAAIo5D,GAAyB,GAAI55D,IAAeke,KAAKtU,iBACjDiwD,EAAwB,GAAI75D,IAAeke,KAAKtU,gBAChDpJ,GAAQu3D,aAAa,UACrB8B,EAAsBnzD,OAAO,IAAKpP,OAAO8J,WAAWZ,EAAQw3D,aAAa,UAE7E,IAAI8B,IAAe,CACnB,IAAIt5D,EAAQu3D,aAAa,SAAU,CAC/B,GAAI/0D,GAAQ,EACZ,QAAQxC,EAAQw3D,aAAa,UACzB,IAAK,OACDh1D,EAAQ,GACR,MACJ,KAAK,QACDA,EAAQ,GACR,MACJ,KAAK,WACDA,EAAQ,GACR,MACJ,KAAK,QACDA,EAAQ,GACR,MACJ,KAAK,YACDA,EAAQ,GACR,MACJ,KAAK,SACDA,EAAQ,IACR82D,GAAe,EAGvB,GAAc,KAAV92D,EAEA,IADC82D,EAAeD,EAAwBD,GAAwBlzD,OAAO,IAAKlD,GAASnD,IAAI2C,KACpF82D,GAAgBt5D,EAAQu3D,aAAa,aACtC6B,EAAuBlzD,OAAO,IAAKpP,OAAO8J,WAAWZ,EAAQw3D,aAAa,mBAEzE,IAAIx3D,EAAQu3D,aAAa,UAAW,CACrC,GAAIgC,KACJv5D,GAAQw3D,aAAa,UAAUnlD,MAAM,KAAK3J,QAAQ,SAAU7S,GACxD0jE,EAASvgE,KAAKlC,OAAO8J,WAAW/K,MAEpCwjE,EAAsBnzD,OAAO,IAAKqzD,IAI1CH,EAAuBjhE,KAAO,GAC9B8G,EAAWiH,OAAO,KAAMkzD,GAExBC,EAAsBlhE,KAAO,IAC7BkhE,EAAsBnzD,OAAO,OAAQ,UACrCjH,EAAWiH,OAAO,KAAMmzD,KAGhC5G,EAAc/gD,UAAUsnD,sBAAwB,SAAU/5D,EAAYg6D,GAClE,IAAK,GAAIriE,GAAI,EAAGA,EAAIqiE,EAAWxiE,OAAQG,IAAK,CACxC,GAAIi/D,GAAYoD,EAAWniE,OAAOC,SAASH,EAAEI,WAAY,KACrDnB,EAAQggE,EAAUhgE,MAClBgD,MAAS,GACT2gE,MAAe,EACnB,QAAQ3D,EAAUhwD,KAAK1B,eACnB,IAAK,OACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,QACL,IAAK,YACL,IAAK,OACD,KACJ,KAAK,QACDuZ,KAAK+7C,WAAWx6D,EAAY,QAASpJ,EACrC,MACJ,KAAK,aACD6nB,KAAK+7C,WAAWx6D,EAAY,aAAcpJ,EAC1C,MACJ,KAAK,YACa,UAAVA,GACAoJ,EAAWiH,OAAO,KAAMlD,GAASnD,IAAI,SAEzC,MACJ,KAAK,YACD6d,KAAK+7C,WAAWx6D,EAAY,MAAOpJ,EACnC,MACJ,KAAK,QACDgD,EAAS6kB,KAAKg8C,cAAc7jE,KACI,IAAlBgD,EAAOpC,QACjBwI,EAAWiH,OAAO,OAAQrN,EAE9B,MACJ,KAAK,SACDA,EAAS2I,EAAgB3L,KACO,IAAlBgD,EAAOpC,QACjBwI,EAAWiH,OAAO,KAAMrN,EAAO,GAAK,IAAKA,EAAO,GAAK,IAAKA,EAAO,GAAK,KAE1E,MACJ,KAAK,kBACDA,EAAS2I,EAAgB3L,KACO,IAAlBgD,EAAOpC,QACjBwI,EAAWiH,OAAO,MAAOrN,EAAO,GAAK,IAAKA,EAAO,GAAK,IAAKA,EAAO,GAAK,KAE3E,MACJ,KAAK,OACD6kB,KAAK+7C,WAAWx6D,EAAY,IAAKpJ,EACjC,MACJ,KAAK,eACD6nB,KAAK+7C,WAAWx6D,EAAY,eAAgBpJ,EAC5C,MACJ,KAAK,OACD6nB,KAAK+7C,WAAWx6D,EAAY,KAAMpJ,EAClC,MACJ,KAAK,OACGA,GAAmB,KAAVA,GACToJ,EAAWiH,OAAO,OAAQlD,GAASnD,IAAIhK,GAE3C,MACJ,KAAK,UACD6nB,KAAK+7C,WAAWx6D,EAAY,OAAQye,KAAKg4C,mBAAmB7/D,GAAO,GACnE,MACJ,KAAK,QACD6nB,KAAK+7C,WAAWx6D,EAAY,IAAKye,KAAKg4C,mBAAmB7/D,GAAO,GAChE,MACJ,KAAK,WACD6nB,KAAKi8C,QAAQ16D,EAAY,SAAUpJ,EACnC,MACJ,KAAK,gBACD6nB,KAAKi8C,QAAQ16D,EAAY,IAAKpJ,EAC9B,MACJ,KAAK,SACD6nB,KAAKk8C,gBAAgB36D,EAAYye,KAAKg8C,cAAc7jE,GAAQ,KAC5D,MACJ,KAAK,KACGA,GAAmB,KAAVA,GACToJ,EAAWiH,OAAO,KAAMlD,GAASnD,IAAIhK,GAEzC,MACJ,KAAK,eACD6nB,KAAKm8C,UAAU56D,EAAY,KAAMpJ,EACjC,MACJ,KAAK,mBAE2B,MAD5B2jE,EAAe1iE,OAAO8J,WAAW/K,KAE7BoJ,EAAWiH,OAAO,MAAOszD,EAE7B,MACJ,KAAK,UACG3jE,GAAmB,KAAVA,GACToJ,EAAWiH,OAAO,MAA+B,QAAxBrQ,EAAMsO,cAEnC,MACJ,KAAK,gBACGtO,GAAmB,KAAVA,GACToJ,EAAWiH,OAAO,KAAMlD,GAASnD,IAAIhK,GAEzC,MACJ,KAAK,UACD6nB,KAAKk8C,gBAAgB36D,EAAYye,KAAKg8C,cAAc7jE,GAAQ,KAC5D,MACJ,KAAK,SACD6nB,KAAKk8C,gBAAgB36D,EAAYye,KAAKg8C,cAAc7jE,GAAQ,aAC5D,MACJ,KAAK,SACD6nB,KAAKk8C,gBAAgB36D,EAAYye,KAAKg8C,cAAc7jE,GAAQ,SAC5D,MACJ,KAAK,UACD6nB,KAAKm8C,UAAU56D,EAAY,KAAMpJ,EACjC,MACJ,KAAK,QACD,GAAIA,GAAmB,KAAVA,EAAc,CAGvB,IAAK,GAFDikE,GAAYhhE,oBAAkBW,QAC9B6iC,EAAQzmC,EAAMwc,MAAM,KACfisB,EAAM,EAAGA,EAAMhC,EAAM7lC,OAAQ6nC,IAAO,CACzC,GAAIy7B,GAAWpgE,EAAyB2iC,EAAMxlC,OAAOC,SAASunC,EAAItnC,WAAY,KAClE,KAARsnC,EACAw7B,EAAYC,EAGZD,GAAaC,EAGrB96D,EAAWiH,OAAO,IAAK4zD,GAE3B,KACJ,KAAK,OACGjkE,GAAmB,KAAVA,GACToJ,EAAWiH,OAAO,OAAmB,SAAVrQ,GAA8B,QAAVA,EAEnD,MACJ,KAAK,YACD6nB,KAAK+7C,WAAWx6D,EAAY,YAAapJ,EACzC,MACJ,KAAK,aACD6nB,KAAK+7C,WAAWx6D,EAAY,aAAcpJ,EAC1C,MACJ,KAAK,cACDoJ,EAAWiH,OAAO,cAAerQ,EACjC,MACJ,KAAK,SACDoJ,EAAWiH,OAAO,SAAqB,SAAVrQ,GAA8B,QAAVA,EACjD,MACJ,SACQ6nB,KAAK/H,UAAUqkD,wBACft8C,KAAK+7C,WAAWx6D,EAAY42D,EAAUhwD,KAAMhQ,MAMhE48D,EAAc/gD,UAAUgoD,cAAgB,SAAU7jE,GAC9C,GAAIsR,KAIJ,OAHAtR,GAAMwc,MAAM,KAAK3J,QAAQ,SAAU7S,GAC/BsR,EAAOnO,KAAKlC,OAAO8J,WAAW/K,MAE3BsR,GAEXsrD,EAAc/gD,UAAUwnD,oBAAsB,SAAUj6D,EAAYe,EAAStI,GACzE,GAAIsI,EAAQ62D,cA4GR,IAAK,GA3GDoD,GAAWj6D,EAAQ+2D,WA0GnBmD,EAASx8C,KACJnlB,EAAQ,EAAGA,EAAQ0hE,EAASxjE,OAAQ8B,KA1G/B,SAAUA,GACpB,GAAIq+D,GAAQqD,EAASnjE,OAAOC,SAASwB,EAAMvB,WAAY,IACvD,IAAuB,IAAnB4/D,EAAMJ,SAAgB,CACtB,GAAI2D,GAAevD,EACfsB,EAActB,EAAMsB,YACpBG,EAAY8B,EAAa9B,SAC7B,QAAQzB,EAAMS,SAASlzD,eACnB,IAAK,QACD,GAAIg2D,GAAgBA,EAAa7B,cAAe,CAC5C,GAAI8B,GAAkBF,EAAO3B,yBAAyB7gE,EAAMyiE,EAC5D,IAAIC,EAAgBjiE,KAAO,EAAG,CAC1B,GAAIyP,GAAYsyD,EAAO9wD,gBAAgB00C,mBACvCoc,GAAO9wD,gBAAgB2H,UAAU5S,IAAIyJ,EAAWwyD,GAChDn7D,EAAWiH,OAAO,QAAS0B,GACvBwyD,EAAgB16D,IAAI,OACpBw6D,EAAO7J,qBAAqBzoD,EAAWwyD,IAInD,KACJ,KAAK,WACGlC,GAA+B,KAAhBA,GACfj5D,EAAWiH,OAAO,WAAYg0D,EAAOxE,mBAAmBwC,GAAa,GAEzE,MACJ,KAAK,oBACGG,GAA2B,KAAdA,GACbp5D,EAAWiH,OAAO,KAAMg0D,EAAO9N,gBAAkBiM,EAErD,MACJ,KAAK,eACD6B,EAAOT,WAAWx6D,EAAY,KAAMi5D,EACpC,MACJ,KAAK,oBACDgC,EAAOT,WAAWx6D,EAAY,KAAMi5D,EACpC,MACJ,KAAK,WACD,GAAIA,GAA+B,KAAhBA,EAAoB,CACnC,GAAImC,KAWJ,IAVAnC,EAAY7lD,MAAM,KAAK3J,QAAQ,SAAU7S,IACT,IAAxBA,EAAM+H,QAAQ,KACd/H,EAAMwc,MAAM,KAAK3J,QAAQ,SAAU4xD,GAC/BD,EAAWrhE,KAAKshE,KAIpBD,EAAWrhE,KAAKnD,KAGpBwkE,EAAW5jE,OAAS,EAAG,CACvB,GAAI8jE,KACJF,GAAW3xD,QAAQ,SAAU7S,GACzB0kE,EAAgBvhE,KAAKlC,OAAO8J,WAAW/K,MAE3CoJ,EAAWiH,OAAO,WAAYq0D,IAGtC,KACJ,KAAK,aACDL,EAAOM,mBAAmB5D,EAAO33D,EACjC,MACJ,KAAK,UACD,GAAI23D,EAAMC,cAAe,CA+BrB,IAAK,GA9BD4D,MACA1D,EAAaH,EAAMG,WA6BdngE,EAAI,EAAGA,EAAImgE,EAAWtgE,OAAQG,KA5BzB,SAAUA,GACpB,GAAI8jE,GAAW3D,EAAWjgE,OAAOC,SAASH,EAAEI,WAAY,IACxD,IAAI0jE,GAAkC,IAAtBA,EAASlE,SAAgB,CACrC,GAAImE,GAAkBD,CACtB,IAA+C,YAA3CC,EAAgBtD,SAASlzD,eACrBw2D,EAAgBzC,aAA+C,KAAhCyC,EAAgBzC,YAAoB,CACnE,GAAI0C,KAWJ,IAVAD,EAAgBzC,YAAY7lD,MAAM,KAAK3J,QAAQ,SAAU7S,IACzB,IAAxBA,EAAM+H,QAAQ,KACd/H,EAAMwc,MAAM,KAAK3J,QAAQ,SAAU4xD,GAC/BM,EAAS5hE,KAAKshE,KAIlBM,EAAS5hE,KAAKnD,KAGlB+kE,EAASnkE,OAAS,EAAG,CACrB,GAAIokE,KACJD,GAASlyD,QAAQ,SAAU7S,GACvBglE,EAAc7hE,KAAKlC,OAAO8J,WAAW/K,MAEzC4kE,EAAkBzhE,KAAK6hE,OAO/BjkE,EAEZqI,GAAWiH,OAAO,UAAWu0D,GAEjC,KACJ,KAAK,OACDP,EAAOY,eAAelE,EAAO33D,EAAYe,MAO7CzH,IAIpBk6D,EAAc/gD,UAAUopD,eAAiB,SAAUlE,EAAO33D,EAAY87D,GAClE,GAAInE,GAASA,EAAMsB,aAAqC,KAAtBtB,EAAMsB,YAAoB,CACxD,GAAI8C,GAAMv+D,EAAsBm6D,EAAMsB,aAAa,EACnD,IAAI8C,GAAOA,EAAIvkE,OAAS,GAChBwI,EAAWS,IAAI,WAAY,CAC3B,GAAIkvD,GAAU3vD,EAAWY,IAAI,UACzB+uD,IAA4B,mBAAjBA,EAAQ/oD,KACnB6X,KAAKu9C,mBAAmBh8D,EAAY87D,EAAQC,GAEvCpM,GAA4B,UAAjBA,EAAQ/oD,MACxB6X,KAAKw9C,UAAUj8D,EAAY87D,EAAQC,MAMvDvI,EAAc/gD,UAAUwpD,UAAY,SAAUj8D,EAAYe,EAASg7D,GAC/D,GAAIG,GAAc,GAAIC,IAAkBJ,EAYxC,IAXAG,EAAYl8D,WAAWmK,gBAAkBsU,KAAKtU,gBAC9C+xD,EAAYl8D,WAAWiH,OAAO,OAAQlD,GAASnD,IAAI,UAC/CG,EAAQu3D,aAAa,SACrB75C,KAAKi8C,QAAQwB,EAAYl8D,WAAY,IAAKe,EAAQw3D,aAAa,SAE/Dx3D,EAAQu3D,aAAa,SACrB75C,KAAKi8C,QAAQwB,EAAYl8D,WAAY,IAAKe,EAAQw3D,aAAa,SAE/Dx3D,EAAQu3D,aAAa,aACrB75C,KAAKi8C,QAAQwB,EAAYl8D,WAAY,IAAKe,EAAQw3D,aAAa,aAE/Dx3D,EAAQu3D,aAAa,YAAa,CAClC,GAAI1hE,GAAQmK,EAAQw3D,aAAa,WAC7B3hE,IAAmB,KAAVA,GACTslE,EAAYl8D,WAAWiH,OAAO,IAAKlD,GAASnD,IAAIhK,IAGpDmK,EAAQu3D,aAAa,WACrB4D,EAAYl8D,WAAWiH,OAAO,SAAUlD,GAASnD,IAAI,eAEzD,IAAIw7D,GAAiB39C,KAAKtU,gBAAgB00C,mBAC1CpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIk9D,EAAgBF,GACnDl8D,EAAWiH,OAAO,QAASm1D,IAE/B5I,EAAc/gD,UAAUupD,mBAAqB,SAAUh8D,EAAYe,EAASg7D,GACxE,GAAIM,GAAiB,GAAI97D,IAAeke,KAAKtU,gBAE7C,IADAkyD,EAAep1D,OAAO,OAAQlD,GAASnD,IAAI,aACvCG,EAAQu3D,aAAa,QAAS,CAC9B,GAAI1hE,GAAQmK,EAAQw3D,aAAa,OACjC95C,MAAK+7C,WAAW6B,EAAgB,IAAKzlE,GACrC6nB,KAAK+7C,WAAW6B,EAAgB,KAAMzlE,GAE1C,GAAI0lE,GAAa,GAAIH,IAAkBJ,EACvCO,GAAWt8D,WAAWmK,gBAAkBsU,KAAKtU,eAC7C,IAAIoyD,GAAQ,GAAIh8D,IAAeke,KAAKtU,gBACpC,IAAIpJ,EAAQu3D,aAAa,QAAS,CAC9B,GAAIp/D,GAAOrB,OAAOC,SAASiJ,EAAQw3D,aAAa,QAAS,QACrC,KAATr/D,IACPqjE,EAAMt1D,OAAO,OAAQ/N,GACrBojE,EAAWt8D,WAAWiH,OAAO,KAAM/N,IAGvC6H,EAAQu3D,aAAa,iBACrB75C,KAAK+7C,WAAW+B,EAAO,UAAWx7D,EAAQw3D,aAAa,iBAEvDx3D,EAAQu3D,aAAa,aACrB75C,KAAK+7C,WAAW+B,EAAO,eAAgBx7D,EAAQw3D,aAAa,aAEhE+D,EAAWt8D,WAAWiH,OAAO,SAAUs1D,GACnCx7D,EAAQu3D,aAAa,aACrB75C,KAAK+7C,WAAW8B,EAAWt8D,WAAY,UAAWe,EAAQw3D,aAAa,aAE3E+D,EAAWt8D,WAAWiH,OAAO,SAAUlD,GAASnD,IAAI,eACpD,IAAI47D,GAAe,GAAIj8D,IAAeke,KAAKtU,iBACvCxB,EAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW2zD,GAC9CE,EAAav1D,OAAO,IAAK0B,GACzB0zD,EAAep1D,OAAO,KAAMu1D,EAC5B,IAAIC,GAAgBh+C,KAAKtU,gBAAgB00C,mBACzCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIu9D,EAAeJ,GAClDr8D,EAAWiH,OAAO,KAAMw1D,IAE5BjJ,EAAc/gD,UAAU8oD,mBAAqB,SAAUx6D,EAASf,GAC5D,GAAI08D,GAAY37D,EAAQk4D,WACxB,IAAIyD,GAA2B,KAAdA,EAAkB,CAC/B,GAAI3lD,IAAa,GAAKmgD,YAAaC,gBAAgBwF,KAAKD,GAAY,WACpE,IAAI3lD,GAAcA,EAAW6gD,cAAe,CACxC,GAAIE,GAAa/gD,EAAW+gD,UAC5B,IAAIA,GAAoC,IAAtBA,EAAWtgE,OAAc,CACvC,GAAIolE,GAAW9E,EAAW,EAC1B,IAAI8E,GAAkC,IAAtBA,EAASrF,SAAgB,CACrC,GAAIsF,GAAcD,CAClB,IAA2C,SAAvCC,EAAYzE,SAAS76D,eAA4Bs/D,EAAYvE,aAAa,OAAQ,CAClF,GAAIh6D,GAAMu+D,EAAYtE,aAAa,MACnC,IAAIj6D,GAAe,OAARA,GAAgBu+D,EAAYjF,cAAe,CAClD,GAAItuD,GAAa,GAAI/I,IAAeke,KAAKtU,gBACzC2tD,GAAa+E,EAAY/E,UACzB,KAAK,GAAIngE,GAAI,EAAGA,EAAImgE,EAAWtgE,OAAQG,IACnC8mB,KAAKq+C,eAAexzD,EAAYwuD,EAAWjgE,OAAOC,SAASH,EAAEI,WAAY,KAEzEuR,GAAWpQ,KAAO,GAClB8G,EAAWiH,OAAO,KAAMqC,UASxDkqD,EAAc/gD,UAAUqqD,eAAiB,SAAUzlE,EAAQsgE,GACvD,GAAIruD,GAAajS,YAAkBkJ,IAAiBlJ,EAASA,EAAO2I,UACpE,IAAI23D,GAA4B,IAAnBA,EAAMJ,SAAgB,CAC/B,GAAIx2D,GAAU42D,CACd,IAAI52D,GAAWA,EAAQ+oD,UAAW,CAC9B,GAAI9/C,OAAS,GACThK,MAAa,GACbqhB,MAAO,EACX,QAAQtgB,EAAQ+oD,WACZ,IAAK,SAED,GADA9/C,EAASyU,KAAKs+C,WAAWh8D,GACb,CACJ4H,EAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWqB,GAC9CyU,KAAKu+C,QAAQr0D,EAAWW,EAAYvI,GAExC,KACJ,KAAK,OAED,GADAf,EAAaye,KAAKw+C,eAAel8D,GACjB,CACZ,GAAI4H,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,GAC9Cye,KAAKu+C,QAAQr0D,EAAWW,EAAYvI,GAExC,KACJ,KAAK,QACD0d,KAAKu+C,QAAQv+C,KAAKy+C,UAAUn8D,GAAUuI,EAAYvI,EAClD,MACJ,KAAK,QACD0d,KAAKu+C,QAAQv+C,KAAK0+C,UAAUp8D,GAAUuI,EAAYvI,EAClD,MACJ,KAAK,MACD0d,KAAKu+C,QAAQv+C,KAAK2+C,QAAQr8D,GAAUuI,EAAYvI,EAChD,MACJ,KAAK,SACD0d,KAAKu+C,QAAQv+C,KAAK4b,WAAWt5B,GAAUuI,EAAYvI,EACnD,MACJ,KAAK,OACD0d,KAAKu+C,QAAQv+C,KAAK4+C,SAASt8D,GAAUuI,EAAYvI,EACjD,MACJ,KAAK,OACD0d,KAAKu+C,QAAQv+C,KAAK6+C,YAAYv8D,GAAUuI,EAAYvI,EACpD,MACJ,KAAK,OAED,IADAsgB,EAAO5C,KAAK8+C,SAASx8D,KACTsgB,EAAK7pB,OAAS,GAAKH,YAAkB8kE,IAAmB,CAChE9kE,EAAOgsB,OAAShC,CAChB,IAAIm8C,IAAU,CACd,IAAIl0D,GAAcA,EAAW7I,IAAI,WAAY,CACzC,GAAIqL,GAAOxC,EAAW1I,IAAI,UAC1B48D,GAAU1xD,GAAsB,UAAdA,EAAKlF,KAEvB42D,EACAnmE,EAAOomE,aAAc,GAGjBpmE,EAAO2I,WAAWS,IAAI,iBACfpJ,GAAO2I,WAAW8Q,KAAK4sD,OAE9BrmE,EAAO2I,WAAWS,IAAI,iBACfpJ,GAAO2I,WAAW8Q,KAAK6sD,aAS9DnK,EAAc/gD,UAAUsqD,WAAa,SAAUh8D,GAC3C,GAAIiJ,GAAS,GAAImyD,OAEjB,IADAnyD,EAAOhK,WAAWmK,gBAAkBsU,KAAKtU,gBACrCpJ,EAAQ62D,cAER,IAAK,GADDE,GAAa/2D,EAAQ+2D,WAChBngE,EAAI,EAAGA,EAAImgE,EAAWtgE,OAAQG,IAAK,CACxC,GAAIggE,GAAQG,EAAWjgE,OAAOC,SAASH,EAAEI,WAAY,IACjD4/D,IAA4B,IAAnBA,EAAMJ,UACf94C,KAAKq+C,eAAe9yD,EAAQ2tD,GAIxC,MAAO3tD,IAEXwpD,EAAc/gD,UAAUwqD,eAAiB,SAAUl8D,GAC/C,GAAIf,GAAa,GAAIO,IAAeke,KAAKtU,gBACzC,IAAIpJ,EAAQ62D,cAER,IAAK,GADDE,GAAa/2D,EAAQ+2D,WAChBngE,EAAI,EAAGA,EAAImgE,EAAWtgE,OAAQG,IAAK,CACxC,GAAIggE,GAAQG,EAAWjgE,OAAOC,SAASH,EAAEI,WAAY,IACjD4/D,IAA4B,IAAnBA,EAAMJ,UACf94C,KAAKq+C,eAAe98D,EAAY23D,GAI5C,MAAO33D,IAEXwzD,EAAc/gD,UAAUyqD,UAAY,SAAUn8D,GAC1C,GAAIrD,KACJ,IAAIqD,EAAQ62D,cAER,IAAK,GADDE,GAAa/2D,EAAQ+2D,WAChBngE,EAAI,EAAGA,EAAImgE,EAAWtgE,OAAQG,IAAK,CACxC,GAAIggE,GAAQG,EAAWjgE,OAAOC,SAASH,EAAEI,WAAY,IACjD4/D,IAA4B,IAAnBA,EAAMJ,UACf94C,KAAKm/C,kBAAkBlgE,EAAOi6D,GAI1C,MAAOj6D,IAEX81D,EAAc/gD,UAAU8qD,SAAW,SAAUx8D,GACzC,GAAIsgB,KACJ,IAAItgB,GAAWA,EAAQk4D,aACK,KAAxBl4D,EAAQk4D,aACRl4D,EAAQu3D,aAAa,SAAWv3D,EAAQu3D,aAAa,YAAa,CAClE,GAAIlzD,GAAOrE,EAAQw3D,aAAa,QAC5B19D,EAAWkG,EAAQw3D,aAAa,WACpC,IAAInzD,GAAQvK,EAAU,CAClB,GAAI6hE,GAAYj+C,KAAKg4C,mBAAmB11D,EAAQk4D,aAAa,EAChD,cAAT7zD,GAAoC,UAAbvK,EACvBwmB,EAAOpmB,EAAeyhE,GAAW,GAEnB,QAATt3D,GAA+B,QAAbvK,IACvBwmB,EAAO7jB,EAAsBk/D,GAAW,KAIpD,MAAOr7C,IAEXmyC,EAAc/gD,UAAUmrD,kBAAoB,SAAUlgE,EAAOi6D,GACzD,GAAIA,GAA4B,IAAnBA,EAAMJ,SAAgB,CAC/B,GAMIsG,GANA98D,EAAU42D,EACV3tD,MAAS,GACThK,MAAa,GACbpJ,MAAQ,GACRknE,MAAa,GACbC,MAAW,GAEXC,MAAO,EACX,QAAQj9D,EAAQ+oD,WACZ,IAAK,SAED,GADA9/C,EAASyU,KAAKs+C,WAAWh8D,GACb,CACJ4H,EAAY8V,KAAKtU,gBAAgB00C,mBACrC70C,GAAOrB,UAAYA,EACnB8V,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWqB,GAC9CtM,EAAM3D,KAAK4O,GAEf,KACJ,KAAK,OAED,GADA3I,EAAaye,KAAKw+C,eAAel8D,GACjB,CACZ,GAAI4H,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,GAC9CtC,EAAM3D,KAAK4O,GAEf,KACJ,KAAK,SACD/R,EAAQ6nB,KAAKy+C,UAAUn8D,KAEnBrD,EAAM3D,KAAKnD,EAEf,MACJ,KAAK,YAEyB,MAD1BknE,EAAar/C,KAAK0+C,UAAUp8D,KACciuD,MAAM8O,IAC5CpgE,EAAM3D,KAAK+jE,EAEf,MACJ,KAAK,UAEuB,MADxBC,EAAWt/C,KAAK2+C,QAAQr8D,KACgBiuD,MAAM+O,IAC1CrgE,EAAM3D,KAAKgkE,EAEf,MACJ,KAAK,QACDF,EAASp/C,KAAK4+C,SAASt8D,KAEnBrD,EAAM3D,KAAK8jE,EAEf,MACJ,KAAK,WAEmB,MADpBG,EAAOv/C,KAAK6+C,YAAYv8D,KACoB,OAATi9D,GAC/BtgE,EAAM3D,KAAKikE,MAM/BxK,EAAc/gD,UAAU0qD,UAAY,SAAUp8D,GAC1C,GAAInK,EAIJ,OAHImK,IAAWA,EAAQu3D,aAAa,SAChC1hE,EAAQiB,OAAO8J,WAAWZ,EAAQw3D,aAAa,SAE5C3hE,GAEX48D,EAAc/gD,UAAU2qD,QAAU,SAAUr8D,GACxC,GAAInK,EAIJ,OAHImK,IAAWA,EAAQu3D,aAAa,SAChC1hE,EAAQiB,OAAOC,SAASiJ,EAAQw3D,aAAa,OAAQ,KAElD3hE,GAEX48D,EAAc/gD,UAAU4nB,WAAa,SAAUt5B,GAC3C,GAAInK,EAIJ,OAHImK,IAAWA,EAAQu3D,aAAa,SAChC1hE,EAAQmK,EAAQw3D,aAAa,QAE1B3hE,GAEX48D,EAAc/gD,UAAU4qD,SAAW,SAAUt8D,GACzC,GAAInK,EAIJ,OAHImK,IAAWA,EAAQu3D,aAAa,SAChC1hE,EAAQmN,GAASnD,IAAIG,EAAQw3D,aAAa,SAEvC3hE,GAEX48D,EAAc/gD,UAAU6qD,YAAc,SAAUv8D,GAC5C,GAAInK,EAIJ,OAHImK,IAAWA,EAAQu3D,aAAa,SAChC1hE,EAAwC,SAAhCmK,EAAQw3D,aAAa,QAE1B3hE,GAEX48D,EAAc/gD,UAAUynD,sBAAwB,SAAUl6D,EAAYe,GAClE,GAAIk9D,GACAC,EACAC,EACAC,CACJ,IAAIr9D,EAAQ62D,cAER,IAAK,GADDE,GAAa/2D,EAAQ+2D,WAChBngE,EAAI,EAAGA,EAAImgE,EAAWtgE,OAAQG,IAEnC,IADIujE,EAAepD,EAAWjgE,OAAOC,SAASH,EAAEI,WAAY,OACb,YAA3BmjE,EAAapR,UAAyB,CACtDmU,EAAc/C,CACd,OAIZ,GAAImD,GAAoB,GAAI99D,IAAeke,KAAKtU,iBAC5Cm0D,EAAQ,GAAI/9D,IAAeke,KAAKtU,iBAChCo0D,EAAQ,GAAIh+D,IAAeke,KAAKtU,iBAChCq0D,EAAQ,GAAIj+D,IAAeke,KAAKtU,iBAChCs0D,KACAC,KACAC,IACJ,IAAIV,EAAa,CAEb,GADAI,EAAkBp3D,OAAO,OAAQlD,GAASnD,IAAI,YAC1Cq9D,EAAY3F,aAAa,aAAc,CACvC,GAAI1B,GAAYqH,EAAY1F,aAAa,YACrC3B,IAA2B,KAAdA,GACbyH,EAAkBp3D,OAAO,IAAK2vD,GAGtC,GAAIqH,EAAYrG,cAEZ,IAAK,GADDE,GAAamG,EAAYnG,WACpBngE,EAAI,EAAGA,EAAImgE,EAAWtgE,OAAQG,IAAK,CACxC,GAAIggE,GAAQG,EAAWjgE,OAAOC,SAASH,EAAEI,WAAY,IACrD,IAAI4/D,GAA4B,IAAnBA,EAAMJ,SAAgB,CAC/B,GAAI2D,GAAevD,CACnB,QAAQuD,EAAa9C,SAASlzD,eAC1B,IAAK,WACDi5D,EAAWjD,CACX,MACJ,KAAK,OACDgD,EAAOhD,CACP,MACJ,KAAK,UACDkD,EAAUlD,KAsBlC,GAfIkD,IACA3/C,KAAKmgD,aAAaR,EAASI,GAC3BG,EAAO5kE,KAAKykE,IAEZL,IACA1/C,KAAKmgD,aAAaT,EAAUG,GAC5BG,EAAO1kE,KAAKukE,IAEZJ,IACAz/C,KAAKmgD,aAAaV,EAAMK,GACxBG,EAAO3kE,KAAKwkE,IAEhBF,EAAkBn/D,IAAI,IAAKw/D,GAC3BL,EAAkBn/D,IAAI,IAAKu/D,GAC3BJ,EAAkBn/D,IAAI,IAAKy/D,GACvBN,EAAkBnlE,KAAO,GAAKmlE,EAAkB59D,IAAI,QAAS,CAC7D,GAAIkI,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW01D,GAC9Cr+D,EAAWiH,OAAO,UAAW0B,KAGrC6qD,EAAc/gD,UAAUmsD,aAAe,SAAU79D,EAASf,GAClDe,EAAQu3D,aAAa,MACrB75C,KAAKm8C,UAAU56D,EAAY,IAAKe,EAAQw3D,aAAa,MAErDx3D,EAAQu3D,aAAa,MACrB75C,KAAKm8C,UAAU56D,EAAY,IAAKe,EAAQw3D,aAAa,MAErDx3D,EAAQu3D,aAAa,OACrBt4D,EAAWiH,OAAO,KAAMlG,EAAQw3D,aAAa,OAE7Cx3D,EAAQu3D,aAAa,OACrBt4D,EAAWiH,OAAO,KAAMlG,EAAQw3D,aAAa,OAE7Cx3D,EAAQu3D,aAAa,OACrBt4D,EAAWiH,OAAO,KAAMlG,EAAQw3D,aAAa,OAE7Cx3D,EAAQu3D,aAAa,MACrBt4D,EAAWiH,OAAO,IAAKlG,EAAQw3D,aAAa,MAE5Cx3D,EAAQu3D,aAAa,MACrBt4D,EAAWiH,OAAO,IAAKlD,GAASnD,IAAIG,EAAQw3D,aAAa,OAEzDx3D,EAAQu3D,aAAa,OACrBt4D,EAAWiH,OAAO,KAAqC,QAA/BlG,EAAQw3D,aAAa,QAGrD/E,EAAc/gD,UAAU+nD,WAAa,SAAUx6D,EAAY1B,EAAK1H,GACxDA,GAAmB,KAAVA,GACToJ,EAAWiH,OAAO3I,EAAK1H,IAG/B48D,EAAc/gD,UAAUioD,QAAU,SAAU16D,EAAY1B,EAAK1H,GACzD,GAAImnE,GAAWlmE,OAAOC,SAASlB,EAAO,QACd,KAAbmnE,GACP/9D,EAAWiH,OAAO3I,EAAKy/D,IAG/BvK,EAAc/gD,UAAUmoD,UAAY,SAAU56D,EAAY1B,EAAK1H,GAC3D,GAAIknE,GAAajmE,OAAO8J,WAAW/K,OACT,KAAfknE,GACP99D,EAAWiH,OAAO3I,EAAKw/D,IAG/BtK,EAAc/gD,UAAUkoD,gBAAkB,SAAU36D,EAAYkI,EAAQ5J,GAChE4J,GAAUA,EAAO1Q,OAAS,GAC1BwI,EAAWiH,OAAO3I,EAAK4J,IAG/BsrD,EAAc/gD,UAAUuqD,QAAU,SAAUnN,EAAW7vD,EAAYe,OACtC,KAAd8uD,GAA2C,OAAdA,GAAsB9uD,EAAQu3D,aAAa,QAC/Et4D,EAAWiH,OAAOlG,EAAQw3D,aAAa,OAAQ1I,IAGvD2D,EAAc/gD,UAAUmnD,iBAAmB,SAAU55D,EAAYe,GAC7D,GAAI89D,GAAiB,EACjB99D,GAAQu3D,aAAa,UACrBuG,EAAiB99D,EAAQw3D,aAAa,QAE1C,IAAIuG,GAAe,EAInB,IAHI/9D,EAAQu3D,aAAa,UACrBwG,EAAe/9D,EAAQw3D,aAAa,SAEpCsG,GAAqC,KAAnBA,EAClB,GAAIC,GAAiC,KAAjBA,EAAqB,CACrC,GAAIC,KACJA,GAAiBhlE,KAAKgK,GAASnD,IAAIi+D,IACnCE,EAAiBhlE,KAAKgK,GAASnD,IAAIk+D,IACnC9+D,EAAWiH,OAAO,KAAM83D,OAGxB/+D,GAAWiH,OAAO,KAAMlD,GAASnD,IAAIi+D,QAGpCC,IAAiC,KAAjBA,GACrB9+D,EAAWiH,OAAO,KAAMlD,GAASnD,IAAIk+D,KAGtCtL,GACT5G,IAEEyD,GAAgC,WAChC,QAASA,GAAerwD,GACpBye,KAAKwyC,kBAAoB,GACzBxyC,KAAK1U,YAAc/J,EACnBye,KAAKuyC,UAAYvyC,KAAK1U,YAAYnJ,IAAI,WAAWgG,KA4JrD,MA1JA4L,QAAO+H,eAAe81C,EAAe59C,UAAW,yBAC5C7R,IAAK,WAID,MAHK6d,MAAKugD,yBACNvgD,KAAKugD,uBAAyBvgD,KAAKwgD,6BAEhCxgD,KAAKugD,wBAEhBxkD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe81C,EAAe59C,UAAW,oBAC5C7R,IAAK,WACD,MAAO6d,MAAKwyC,mBAEhBz2C,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe81C,EAAe59C,UAAW,gBAC5C7R,IAAK,WAID,MAHK6d,MAAKyyC,gBACNzyC,KAAKyyC,cAAgBzyC,KAAKygD,oBAEvBzgD,KAAKyyC,eAEhB12C,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe81C,EAAe59C,UAAW,YAC5C7R,IAAK,WAID,MAHK6d,MAAK0yC,YACN1yC,KAAK0yC,UAAY1yC,KAAK8jB,gBAEnB9jB,KAAK0yC,WAEhB32C,YAAY,EACZC,cAAc,IAElB41C,EAAe59C,UAAUysD,iBAAmB,WACxC,GAAIrkE,GAAW,EACf,IAAyB,OAArB4jB,KAAK1U,iBAAoD,KAArB0U,KAAK1U,aAA+B0U,KAAK1U,YAAYtJ,IAAI,YAAa,CAC1G,GAAI+S,GAAWiL,KAAK1U,YAAYnJ,IAAI,WACpC,IAAI4S,YAAoBzP,IACpBlJ,EAAW2Y,EAAS5M,SAEnB,IAAI4M,YAAoBjT,IAAgB,CACzC,GAAIiT,EAAS/S,IAAI,gBAAiB,CAC9B,GAAI0+D,GAAmB3rD,EAAS5S,IAAI,eAChCu+D,IAAoBA,YAA4Bp7D,MAChD0a,KAAKwyC,kBAAoBkO,EAAiBv4D,MAGlD,GAAI4M,EAAS/S,IAAI,QAAS,CACtB,GAAI2+D,GAAe5rD,EAAS5S,IAAI,OACX,QAAjBw+D,OAAiD,KAAjBA,IAChCvkE,EAAWukE,EAAax4D,QAQxC,MAH4B,iBAAxB/L,EAAS9C,YAA8C,SAAb8C,IAC1CA,EAAW,cAERA,GAEXw1D,EAAe59C,UAAUwsD,0BAA4B,WACjD,GAAI1iE,GAAS,GAAIgqC,IACjB,IAAyB,OAArB9nB,KAAK1U,iBAAoD,KAArB0U,KAAK1U,aAA+B0U,KAAK1U,YAAYtJ,IAAI,YAAa,CAC1G,GAAI5F,GAAW4jB,KAAK1U,YAAYnJ,IAAI,WACpC,IAAiB,OAAb/F,OACoB,KAAbA,GACPA,YAAoB0F,KACpB1F,EAAS4F,IAAI,eAAgB,CAC7B,GAAI4+D,GAAcxkE,EAAS8F,SAAS,eAChC+G,EAAQ,CACZ,IAAoB,OAAhB23D,OAA+C,KAAhBA,EAC/B,IAAK,GAAI1nE,GAAI,EAAGA,EAAI0nE,EAAY7nE,OAAQG,IAAK,CACzC,GAAIkU,GAAO,GACPlC,EAAO01D,EAAYxnE,OAAOC,SAASH,EAAEI,WAAY,IACjC,iBAAT4R,IACPkC,EAAOlC,EAAK5R,WACZ2P,EAAQ7P,OAAOC,SAAS+T,EAAM,KAEzBlC,YAAgB5F,MACrB8H,EAAOlC,EAAK/C,KACW,UAAnB6X,KAAKuyC,WAAkC,YAATnlD,GAC9BA,EAAO,IACPtP,EAAO2C,IAAIwI,EAAM3P,WAAYoY,GAAmBtE,MAIhDA,EAAOqE,GADPrE,EAAOsE,GAAmBtE,IAErBtP,EAAOkE,IAAIiH,EAAM3P,aAClBwE,EAAO2C,IAAIwI,EAAM3P,WAAYoY,GAAmBtE,IAEpDnE,QAOxB,MAAOnL,IAEX8zD,EAAe59C,UAAU8vB,aAAe,WACpC,GAAIugB,GAAW,EACf,IAAyB,OAArBrkC,KAAK1U,iBAAoD,KAArB0U,KAAK1U,aAA+B0U,KAAK1U,YAAYtJ,IAAI,YAAa,CAC1G,GAAI+S,GAAWiL,KAAK1U,YAAYnJ,IAAI,YAChCoS,EAAOQ,EAAS5M,IACpB,KAA6B,IAAzBoM,EAAKrU,QAAQ,SAAwC,IAAvBqU,EAAKrU,QAAQ,KAAa,CACxD,GAAIrF,GAAQ0Z,EAAKssD,YAAY,MAC7BtsD,GAAOA,EAAKrV,UAAU,EAAGrE,GACzB0Z,GAAQ,KAQmB,KAL3B8vC,GADgC,IAAhCtvC,EAAS5M,KAAKjI,QAAQ,KACX6U,EAAS5M,KAAKwM,MAAM,KAAK,GAGzBI,EAAS5M,MAEXjI,QAAQ,KACjBmkD,EAAWA,EAAS1vC,MAAM,KAAK,IAEC,IAA3B0vC,EAASnkD,QAAQ,OACtBmkD,EAAWA,EAAS1vC,MAAM,KAAK,KAEH,IAA5B0vC,EAASnkD,QAAQ,QACjBmkD,EAAWA,EAASrkD,QAAQ,KAAM,MAEL,IAA7BqkD,EAASnkD,QAAQ,SACjBmkD,EAAWA,EAASrkD,QAAQ,MAAO,OAER,IAA3BqkD,EAASnkD,QAAQ,OACjBmkD,EAAWrkC,KAAK8gD,mBAAmBzc,IAG3C,MAAOA,IAEXuN,EAAe59C,UAAU8sD,mBAAqB,SAAUzc,GAEpD,IAAK,GADDvmD,GAASumD,EACJnrD,EAAI,EAAGA,EAAImrD,EAAStrD,OAAQG,IACjC,GAAoD,MAAhDmrD,EAASjrD,OAAOC,SAASH,EAAEI,WAAY,KAAc,CACrD,GAAIynE,GAAW1c,EAASnrD,EAAI,GAAKmrD,EAASnrD,EAAI,GAC1Cf,EAAQiB,OAAOC,SAAS0nE,EAAU,GAKtC,IAJc,IAAV5oE,IACA2F,EAASA,EAAOkC,QAAQ,IAAM+gE,EAAUlkE,OAAOC,aAAa3E,IAC5De,GAAK,IAEoB,IAAzB4E,EAAOoC,QAAQ,KACf,MAIZ,MAAOpC,IAEJ8zD,KCp5FP3rC,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAQnFw6C,GAA+B,SAAUn5C,GAEzC,QAASm5C,GAAchM,GACnB,GAAIjtC,GAAQF,EAAO5T,KAAK+L,OAASA,IAQjC,OAPA+H,GAAMk5C,WAAY,EAClBl5C,EAAMm5C,eAAgB,EACtBn5C,EAAMkmC,cAAe,EACrBlmC,EAAMo5C,oBAAqB,EACV,OAAbnM,OAAyC,KAAbA,IAC5BjtC,EAAMsmC,UAAY2G,GAEfjtC,EAspDX,MAhqDA9B,IAAU+6C,EAAen5C,GAazBm5C,EAAchtD,UAAUihD,mBAAqB,SAAUhrD,GAKnD,MAJA+V,MAAK/H,UAAYhO,EACjB+V,KAAKtU,gBAAkBzB,EAASyB,gBAChCsU,KAAKy0C,qBAAsB,EAC3Bz0C,KAAKo1C,sBAAsBnrD,EAAUA,EAASnP,WACvCklB,KAAKk+B,SAEhB8iB,EAAchtD,UAAUkhD,kBAAoB,SAAUjrD,GAClD+V,KAAK/H,UAAYhO,EACjB+V,KAAKtU,gBAAkBzB,EAASyB,gBAChCsU,KAAKy0C,qBAAsB,CAC3B,IAAItgD,GAAO6L,KAAK/H,UAAU9D,IAC1B,IAAa,OAATA,OAAiC,KAATA,EAAsB,CAC9C6L,KAAKuuC,mBAAqBp6C,EAAKkhD,iBAE/B,KAAK,GADDpsD,GAAQ+W,KAAK/H,UAAU9D,KAAKlL,MACvB/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAImb,GAAQ2L,KAAK/H,UAAU9D,KAAKq/C,QAAQt6D,EACxC8mB,MAAKyvC,sBAAsBp7C,GAE/B2L,KAAKs1C,sBAET,MAAOt1C,MAAKk+B,SAEhB8iB,EAAchtD,UAAUkqC,MAAQ,WAC5B,GAAIpgD,GAAS,GAAIT,YAAW2iB,KAAK8uC,UAEjC,OADA9uC,MAAK8uC,aACEhxD,GAEXkjE,EAAchtD,UAAUshD,oBAAsB,WAC1C,GAAIvtC,GAAQ/H,IACZA,MAAK8uC,UAAUxzD,KAAK0kB,KAAK+uC,cACzB,IAAIl0D,GAAQ,CACZmlB,MAAK2uC,OAAO3jD,QAAQ,SAAU7S,EAAO0H,GAIjC,GAHAA,EAAMkoB,EAAMspC,gBAAgBxxD,GAC5BkoB,EAAM+mC,UAAUxzD,KAAKysB,EAAMqnC,eAC3BrnC,EAAM+mC,UAAYtyD,EAAeqD,GAAK,GAAM,EAAOkoB,EAAM+mC,WACpC,gBAAV32D,IAAuB8H,MAAMuB,QAAQrJ,IAA2B,IAAjBA,EAAMY,OAC5DZ,EAAQ4vB,EAAMspC,gBAAiC,gBAAVl5D,GAAqBA,EAAQA,EAAM,IACxE4vB,EAAM+mC,UAAUxzD,KAAKysB,EAAMqnC,cAAernC,EAAMonC,OAAQpnC,EAAMqnC,eAC9DrnC,EAAM+mC,UAAYtyD,EAAerE,GAAO,GAAM,EAAO4vB,EAAM+mC,WAC3D/mC,EAAM+mC,UAAUxzD,KAAKysB,EAAMqnC,mBAE1B,CACDrnC,EAAM+mC,UAAUxzD,KAAKysB,EAAMqnC,cAAernC,EAAMonC,OAAQpnC,EAAMinC,gBAC9D,KAAK,GAAI71D,GAAI,EAAGA,EAAIhB,EAAMY,OAAQI,IAAK,CACnC4uB,EAAM+mC,UAAUxzD,KAAKysB,EAAMqnC,cAE3B,KAAK,GADDhrD,GAAQjM,EAAMiB,OAAOC,SAASF,EAAEG,WAAY,KACvCqL,EAAI,EAAGA,EAAIP,EAAMrL,OAAQ4L,IAC9BojB,EAAM+mC,UAAUxzD,KAAK8I,EAAMjI,WAAWwI,GAE1CojB,GAAM+mC,UAAUxzD,KAAKysB,EAAMqnC,eACvBj2D,EAAIhB,EAAMY,OAAS,GACnBgvB,EAAM+mC,UAAUxzD,KAAKysB,EAAMsnC,QAGnCtnC,EAAM+mC,UAAUxzD,KAAKysB,EAAMmnC,iBAE3Br0D,EAAQktB,EAAM4mC,OAAOl0D,KAAO,GAC5BstB,EAAM+mC,UAAUxzD,KAAKysB,EAAMsnC,QAE/Bx0D,MAEJmlB,KAAK8uC,UAAUxzD,KAAK0kB,KAAKivC,gBAE7B+R,EAAchtD,UAAUohD,sBAAwB,SAAUnrD,EAAUnP,GAChE,GAAIitB,GAAQ/H,KACRohD,GAAoB,CACxBphD,MAAK8uC,UAAUxzD,KAAK0kB,KAAK+uC,cAAe/uC,KAAKovC,cAAe,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAKpvC,KAAKovC,cAAepvC,KAAKmvC,OAAQnvC,KAAK+uC,cACjK,KAAK,GAAI71D,GAAI,EAAGA,EAAI4B,EAAW5B,IAAK,CAChC,GAAIc,GAAOiQ,EAASlP,QAAQ7B,EACxBc,IAAQA,EAAK64D,YAAY5pD,MAAQ,IACjC+W,KAAK8uC,UAAUxzD,KAAW,IAANpC,GAAWkoE,EAAoBphD,KAAKqvC,OAASrvC,KAAKsvC,OAAQtvC,KAAKovC,eAClE5yD,EAAetD,EAAEI,YAAY,GAAM,MACzC0R,QAAQ,SAAU5G,GACzB2jB,EAAM+mC,UAAUxzD,KAAK8I,KAEzB4b,KAAK8uC,UAAUxzD,KAAK0kB,KAAKovC,cAAepvC,KAAKmvC,OAAQnvC,KAAK+uC,cAAe/uC,KAAKovC,cAAe,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAKpvC,KAAKovC,cAAepvC,KAAKmvC,OAAQnvC,KAAKgvC,iBAC3MoS,GAAoB,EAGxB,KAAK,GADDn4D,GAAQ,EACHtE,EAAI,EAAGA,EAAI3K,EAAK64D,YAAY5pD,MAAOtE,IAAK,CAC7C,GAAImN,GAAa9X,EAAK64D,YAAYl6D,GAAGgM,EACjCmN,KACc,IAAV7I,GACA+W,KAAK8uC,UAAUxzD,KAAK0kB,KAAKqvC,QAE7BpmD,IACA+W,KAAKqhD,kBAAkBvvD,EAAY5Y,GACnC8mB,KAAK8uC,UAAYtyD,EAAewjB,KAAKshD,eAAethD,KAAK2uC,SAAS,GAAM,EAAO3uC,KAAK8uC,WACpF9uC,KAAK2uC,OAAO4S,SAGhBvnE,GAAQA,EAAK64D,YAAY5pD,MAAQ,GACjC+W,KAAK8uC,UAAUxzD,KAAK0kB,KAAKkvC,gBAAiBlvC,KAAKivC,eAGvDjvC,KAAK8uC,UAAUxzD,KAAK0kB,KAAKivC,cAAejvC,KAAKivC,gBAEjD+R,EAAchtD,UAAUqtD,kBAAoB,SAAUvvD,EAAYjX,GAC9D,GAAIw7D,IAAgB,EAChB90D,EAAauQ,EAAWxG,YACxB+B,EAAO2S,KAAKixC,mBAAmBn/C,EAAWxG,YAE9C,IADA0U,KAAKw0C,kBAAmB,EACpBnnD,GAAiB,KAATA,EAAa,CACrB2S,KAAK2uC,OAAOluD,IAAI,OAAQ4M,GACxB2S,KAAK2uC,OAAOluD,IAAI,OAAQ5F,EAAMvB,WAC9B,IACImQ,OAAS,EACb,QAAQ4D,GACJ,IAAK,OAED5D,EADiBqI,EACO0lC,WACxBx3B,KAAK2uC,OAAOluD,IAAI,QAASgJ,EAAO,GAAGnQ,WAAa,IAAMmQ,EAAO,GAAGnQ,YAChE0mB,KAAK2uC,OAAOluD,IAAI,MAAOgJ,EAAO,GAAGnQ,WAAa,IAAMmQ,EAAO,GAAGnQ,WAC9D,MACJ,KAAK,QAGL,IAAK,SACD+8D,GAAgB,EAGxB,GAAI90D,GAAcA,EAAWS,IAAI,OAAST,EAAWS,IAAI,MAAO,CAC5D,GAAIs0D,GAAe/0D,EAAWY,IAAI,KAC9Bm0D,IAAgBA,EAAat0D,IAAI,OACjCge,KAAKw0C,kBAAmB,GAGhCx0C,KAAKu2C,iBAAiBh1D,EAAY1G,EAAOw7D,KAGjD2K,EAAchtD,UAAUuiD,iBAAmB,SAAUh1D,EAAYw0D,EAAWM,GACxE,GAAItuC,GAAQ/H,KACRw2C,GAAgB,CACpB,IAAIj1D,GAAcA,EAAWS,IAAI,QAAS,CACtC,GAAIqL,GAAO9L,EAAWY,IAAI,OAC1Bq0D,GAAiBnpD,GAAsB,WAAdA,EAAKlF,MAAqB6X,KAAKw0C,iBAgC5D,GA9BAjzD,EAAWyJ,QAAQ,SAAUnL,EAAK1H,GAC9B,IAAQk+D,GAAyB,OAARx2D,IAAyB,MAARA,GAAuB,WAARA,EAAmB,CACxE,GAAIuE,OAAQ,EAIZ,IAHIjM,YAAiBkS,MACjBjG,EAAQ7C,EAAWY,IAAItC,IAEvBuE,GAASA,YAAiBtC,IAC1B,OAAQjC,GACJ,IAAK,KACL,IAAK,KACDkoB,EAAMwuC,iBAAiBnyD,EAAO2xD,GAAW,EACzC,MACJ,KAAK,MACG3xD,EAAMpC,IAAI,OACV+lB,EAAM4mC,OAAOluD,IAAI,YAAasnB,EAAMopC,UAAU/sD,EAAMjC,IAAI,OAAO,QAKtEhK,aAAiB2J,IACtBimB,EAAMwuC,iBAAiBp+D,EAAO49D,GAAW,KAElCS,GAAmBA,GAAyB,MAAR32D,IAC3CkoB,EAAM0uC,gBAAgB52D,EAAK1H,EAAOoJ,MAI1CA,EAAWS,IAAI,YACfge,KAAK22C,yBAAyBp1D,EAAWY,IAAI,aAE5C6d,KAAKu0C,kBAAoB8B,IAAkB90D,EAAWS,IAAI,MAAO,CAClE,GAAIuJ,GAASyU,KAAK02C,qBAAqBn1D,EAAWY,IAAI,MAClDoJ,IAAUA,EAAOxS,OAAS,GAC1BinB,KAAK2uC,OAAOluD,IAAI,aAAcW,EAAQmK,IAG9C,GAAIhK,EAAWS,IAAI,SAAU,CACzB,GAAI40D,GAAQr1D,EAAWY,IAAI,QAC3B,IAAIy0D,GAASA,EAAMr1D,WAAY,CAC3B,GAAIs1D,GAAkBD,EAAMr1D,UACxBs1D,GAAgB70D,IAAI,MACpBge,KAAK2uC,OAAOluD,IAAI,OAAQuf,KAAKmxC,UAAU0F,EAAgB10D,IAAI,MAAM,IAEjE00D,EAAgB70D,IAAI,MACpBge,KAAK2uC,OAAOluD,IAAI,WAAYuf,KAAKmxC,UAAU0F,EAAgB10D,IAAI,MAAM,IAErE00D,EAAgB70D,IAAI,MACpBge,KAAK2uC,OAAOluD,IAAI,WAAYuf,KAAKmxC,UAAU0F,EAAgB10D,IAAI,MAAM,IAErE00D,EAAgB70D,IAAI,MACpBge,KAAK2uC,OAAOluD,IAAI,OAAQuf,KAAKmxC,UAAU0F,EAAgB10D,IAAI,MAAM,IAEjE00D,EAAgB70D,IAAI,WAAa60D,EAAgB10D,IAAI,UAAY,IAC7DygB,EAAOjkB,EAAsBi4D,EAAME,cAClB,KAATl0C,IACR5C,KAAK2uC,OAAOluD,IAAI,OAAQ,OACxBuf,KAAK2uC,OAAOluD,IAAI,WAAY,OACxBo2D,EAAgB70D,IAAI,WACpBge,KAAK2uC,OAAOluD,IAAI,SAAUuf,KAAKmxC,UAAU0F,EAAgB10D,IAAI,WAAW,IAExE00D,EAAgB70D,IAAI,WACpBge,KAAK2uC,OAAOluD,IAAI,SAAUuf,KAAKmxC,UAAU0F,EAAgB10D,IAAI,WAAW,IAE5E6d,KAAK2uC,OAAOluD,IAAI,OAAQmiB,SAKnC,IAAIrhB,EAAWS,IAAI,MAAO,CAC3B,GAAI+0D,GAAex1D,EAAWY,IAAI,KAClC,IAAI40D,IACIA,EAAa/0D,IAAI,MACjBge,KAAK2uC,OAAOluD,IAAI,OAAQuf,KAAKmxC,UAAU4F,EAAa50D,IAAI,MAAM,IAE9D40D,EAAa/0D,IAAI,OAAO,CACxB,GAAIg1D,GAAeD,EAAa50D,IAAI,KACpC,IAAI60D,GAAgBA,EAAah1D,IAAI,KAAM,CACvC,GAAIi1D,GAAUD,EAAa70D,IAAI,IAC/B,IAAI80D,GAAWA,EAAQ11D,WAAY,CAC/B,GAAI21D,GAAcD,EAAQ11D,UAC1B,IAAI21D,EAAYl1D,IAAI,UAAW,CAC3B,GAAIm1D,GAAmBD,EAAY/0D,IAAI,SACvC,IAAIg1D,EAAkB,CAClB,GAAIA,EAAiBn1D,IAAI,gBAAiB,CAClC7J,EAAQ6nB,KAAKmxC,UAAUgG,EAAiBh1D,IAAI,iBAAiB,EACjE6d,MAAK2uC,OAAOluD,IAAI,WAAYtI,GAEhC,GAAIg/D,EAAiBn1D,IAAI,oBAAqB,CAC1C,GAAI7J,GAAQ6nB,KAAKmxC,UAAUgG,EAAiBh1D,IAAI,qBAAqB,EACrE6d,MAAK2uC,OAAOluD,IAAI,eAAgBtI,GAKpC,GAHIg/D,EAAiBn1D,IAAI,SACrBge,KAAK2uC,OAAOluD,IAAI,OAAQuf,KAAKmxC,UAAUgG,EAAiBh1D,IAAI,SAAS,IAErEg1D,EAAiBn1D,IAAI,YAAa,CAClC,GAEIhD,GAAYL,EADDnC,EADXrE,EAAQ6nB,KAAKmxC,UAAUgG,EAAiBh1D,IAAI,aAAa,IAG7D6d,MAAK2uC,OAAOluD,IAAI,WAAYzB,KAIxC,GAAI4jB,GAAOjkB,EAAsBs4D,EAAQH,WACrCl0C,IAAiB,KAATA,IACR5C,KAAK2uC,OAAOluD,IAAI,OAAQ,OACxBuf,KAAK2uC,OAAOluD,IAAI,WAAY,OACxBy2D,EAAYl1D,IAAI,WAChBge,KAAK2uC,OAAOluD,IAAI,SAAUuf,KAAKmxC,UAAU+F,EAAY/0D,IAAI,WAAW,IAEpE+0D,EAAYl1D,IAAI,WAChBge,KAAK2uC,OAAOluD,IAAI,SAAUuf,KAAKmxC,UAAU+F,EAAY/0D,IAAI,WAAW,IAExE6d,KAAK2uC,OAAOluD,IAAI,OAAQmiB,SAQpDo+C,EAAchtD,UAAUkkD,YAAc,SAAU9G,EAAW+G,EAAWxnD,GAClE,GAAI3M,GAAQgc,KAAKuxC,UAAUH,EAC3B,IAAyB,gBAAdA,IAA0BzgD,EAAK,CACtC,GAAIlM,GAAIub,KAAKmxC,UAAUC,GAAW,EAC9B3sD,IAAW,KAANA,GACLub,KAAK2uC,OAAOluD,IAAIkQ,EAAKlM,GAGzBT,GAAmB,KAAVA,GACTgc,KAAK2uC,OAAOluD,IAAI03D,EAAWn0D,IAGnCg9D,EAAchtD,UAAUo4C,sBAAwB,SAAU+L,EAAW/G,EAAWgH,OACxD,KAAhBA,IAA0BA,GAAc,EAC5C,IAAIjgE,GAAQ6nB,KAAKmxC,UAAUC,GAAW,EACtCpxC,MAAK2uC,OAAOluD,IAAI03D,EAAWC,EAAcjgE,EAAMsO,cAAgBtO,IAEnE6oE,EAAchtD,UAAUyiD,gBAAkB,SAAU52D,EAAKuxD,EAAW7vD,GAChE,GAAIpJ,GACAqpE,EACArkE,CACJ,QAAQ0C,GACJ,IAAK,IACDmgB,KAAKk4C,YAAY9G,EAAW,QAAS,IACrC,MACJ,KAAK,KACDpxC,KAAKk4C,YAAY9G,EAAW,iBAC5B,MACJ,KAAK,MACDj5D,EAAQoJ,EAAWY,IAAI,QAEnB6d,KAAK2uC,OAAOluD,IAAI,oBAAqBtI,EAEzC,MACJ,KAAK,IACD6nB,KAAKosC,sBAAsB,OAAQgF,EACnC,MACJ,KAAK,KACDpxC,KAAK2uC,OAAOluD,IAAI,OAAQ2wD,EACxB,MACJ,KAAK,OACDpxC,KAAKosC,sBAAsB,OAAQgF,EACnC,MACJ,KAAK,OACDpxC,KAAKosC,sBAAsB,UAAWgF,EACtC,MACJ,KAAK,IACDpxC,KAAKosC,sBAAsB,QAASgF,EACpC,MACJ,KAAK,OAED,GADAj5D,EAAQ6nB,KAAKmxC,UAAUC,GAAW,GACvB,CACP,GAAIqQ,GAAYtpE,EAAMwc,MAAM,KACxB+iB,EAAW,GAAIoQ,IACnBpQ,GAASj3B,IAAI,IAAKghE,EAAU,IAC5B/pC,EAASj3B,IAAI,IAAKghE,EAAU,IAC5B/pC,EAASj3B,IAAI,QAASghE,EAAU,IAChC/pC,EAASj3B,IAAI,SAAUghE,EAAU,IACjCzhD,KAAK2uC,OAAOluD,IAAIZ,EAAI4G,cAAeuZ,KAAKshD,eAAe5pC,IAE3D,KACJ,KAAK,eACD1X,KAAKosC,sBAAsB,eAAgBgF,EAC3C,MACJ,KAAK,SACDpxC,KAAKosC,sBAAsB,WAAYgF,EACvC,MACJ,KAAK,IACDpxC,KAAKosC,sBAAsB,QAASgF,EACpC,MACJ,KAAK,KACGA,GAAanxD,MAAMuB,QAAQ4vD,GACF,IAArBA,EAAUr4D,SACVinB,KAAK2uC,OAAOluD,IAAI,OAAQuf,KAAKmxC,UAAUC,EAAU,IAAI,IACrDpxC,KAAK2uC,OAAOluD,IAAI,OAAQuf,KAAKmxC,UAAUC,EAAU,IAAI,KAGpDA,YAAqB9rD,KAC1B0a,KAAKosC,sBAAsB,OAAQgF,EAEvC,MACJ,KAAK,IACD,OAAQpxC,KAAKmxC,UAAUC,GAAW,IAC9B,IAAK,IACDpxC,KAAK2uC,OAAOluD,IAAI,QAAS,OACzB,MACJ,KAAK,IACDuf,KAAK2uC,OAAOluD,IAAI,QAAS,SACzB,MACJ,KAAK,IACDuf,KAAK2uC,OAAOluD,IAAI,QAAS,QACzB,MACJ,KAAK,IACDuf,KAAK2uC,OAAOluD,IAAI,QAAS,WACzB,MACJ,KAAK,IACDuf,KAAK2uC,OAAOluD,IAAI,QAAS,QACzB,MACJ,KAAK,IACDuf,KAAK2uC,OAAOluD,IAAI,QAAS,aAGjC,KACJ,KAAK,IACDuf,KAAKosC,sBAAsB,SAAUgF,EACrC,MACJ,KAAK,IACDpxC,KAAKosC,sBAAsB,YAAagF,EACxC,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsB,SAAUgF,EACrC,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsB,KAAMgF,EACjC,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsB,YAAagF,GAAW,EACnD,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsB,eAAgBgF,EAC3C,MACJ,KAAK,MACDpxC,KAAKosC,sBAAsB,eAAgBgF,EAC3C,MACJ,KAAK,MACDpxC,KAAKosC,sBAAsB,UAAWgF,EACtC,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsB,gBAAiBgF,EAC5C,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsB,UAAWgF,EACtC,MACJ,KAAK,aACDpxC,KAAKosC,sBAAsB,SAAUgF,EACrC,MACJ,KAAK,KACDpxC,KAAKosC,sBAAsB,UAAWgF,EACtC,MACJ,KAAK,IACD,GAAyB,gBAAdA,GAAwB,CAC/B,GAAIl2D,GAAOD,EAAyBm2D,EACpCpxC,MAAK2uC,OAAOluD,IAAI,QAASvF,GAE7B,KACJ,KAAK,YACD/C,EAAQoJ,EAAWY,IAAI,cACVhK,EAAMY,OAAS,GACxBinB,KAAK2uC,OAAOluD,IAAI,WAAYuf,KAAKqxC,gBAAgBl5D,GAErD,MACJ,KAAK,UACD6nB,KAAK0hD,cAAcngE,EACnB,MACJ,KAAK,WACDye,KAAK2hD,eAAepgE,EACpB,MACJ,KAAK,KAED,GADApJ,EAAQoJ,EAAWY,IAAI,MACnBkZ,GAAmBljB,GAAQ,CAG3B,IAAK,GAFDypE,GAAa,GAAI95B,KACjB+5B,EAAY1pE,EAAMwc,MAAM,KACnBzb,EAAI,EAAGA,EAAI2oE,EAAU9oE,OAAQG,IAAK,CACvC,GAAIkU,GAAOy0D,EAAUzoE,OAAOC,SAASH,EAAEI,WAAY,KAAKqb,MAAM,IAC1DvH,IAAQA,EAAKrU,OAAS,GAAKqU,EAAK,IAAMA,EAAK,GAAGrU,OAAS,GAAKqU,EAAK,GAAGyM,WAAW,OAC/EzM,EAAK,GAAKA,EAAK,GAAGlO,UAAU,IAEhC0iE,EAAWnhE,IAAI2M,EAAK,GAAIA,EAAK,IAEjC4S,KAAK2uC,OAAOluD,IAAI,eAAgBuf,KAAKshD,eAAeM,IAExD,KACJ,KAAK,sBACD,GAAIxQ,EAAW,CACX,GAAI0Q,GAAUtlE,EAAe40D,IACzBwQ,EAAa,GAAI95B,MACVrnC,IAAI,cAAe9B,EAAsBmjE,IACpD9hD,KAAK2uC,OAAOluD,IAAIZ,EAAKmgB,KAAKshD,eAAeM,IAE7C,KACJ,KAAK,KAED,GAAuB,iBADvBJ,EAAUjgE,EAAWY,IAAI,QACUq/D,EAAQrsD,SAAS,SAAU,CAC1D,GAAIta,GAAQ2mE,EAAQthE,QAAQ,QACxBrF,GAAQ,IACR2mE,EAAUA,EAAQtiE,UAAUrE,IAEhCmlB,KAAKosC,sBAAsB,oBAAqBoV,GAEpD,KACJ,KAAK,OACL,IAAK,UACL,IAAK,IACL,IAAK,SACL,IAAK,IACL,IAAK,KACL,IAAK,mBACL,IAAK,eACL,IAAK,OACD,KACJ,KAAK,oBACDrkE,EAAQX,EAAe40D,GACvBpxC,KAAKosC,sBAAsBvsD,EAAKlB,EAAsBxB,GACtD,MACJ,KAAK,SACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACD6iB,KAAKosC,sBAAsBvsD,EAAI4G,cAAe2qD,EAC9C,MACJ,SAC6B,gBAAdA,IAA0BA,EAAUv3C,WAAW,MAAQu3C,EAAUt3C,SAAS,KACjFkG,KAAK2uC,OAAOluD,IAAIZ,EAAKuxD,GAGrBpxC,KAAKosC,sBAAsBvsD,EAAKuxD,KAKhD4P,EAAchtD,UAAU2tD,eAAiB,SAAUpgE,GAC/C,GAAI61D,GAAW71D,EAAWW,SAAS,WACnC,IAAImZ,GAAmB+7C,IAAaA,EAASr+D,OAAS,EAAG,CACrD,GAAIs+D,GAAeD,EAASr+D,MAC5B,IAAIs+D,EAAe,GAAM,EAAG,CAExB,IAAK,GADD0K,GAAU,GACL7oE,EAAI,EAAGA,EAAIm+D,EAAe,EAAGn+D,IAClC6oE,GAAW/hD,KAAKmxC,UAAUiG,EAASh+D,OAAOC,SAASH,EAAEI,WAAY,MAAM,IAASJ,EAAI,GAAM,EAAI,IAAM,MAExG6oE,GAAW/hD,KAAKmxC,UAAUiG,EAASC,EAAe,IAAI,KAC3B,KAAZ0K,GACX/hD,KAAK2uC,OAAOluD,IAAI,WAAYshE,MAK5Cf,EAAchtD,UAAU0tD,cAAgB,SAAUngE,GAC9C,GAAIi2D,GAAUj2D,EAAWW,SAAS,UAClC,IAAIs1D,GAAWA,EAAQz+D,OAAS,EAAG,CAG/B,IAAK,GAFD0Q,GAAS,GAAIq+B,KACbk6B,EAAO,IACF7oE,EAAI,EAAGA,EAAIq+D,EAAQz+D,OAAQI,IAChC6oE,GAAQ,IAAMhiD,KAAKmxC,UAAUqG,EAAQp+D,OAAOC,SAASF,EAAEG,WAAY,MAAM,GAAQ,IAC7EH,EAAIq+D,EAAQz+D,OAAS,IACrBipE,GAAQ,IAGhBA,IAAQ,IACRv4D,EAAOhJ,IAAI,UAAWuhE,GACtBhiD,KAAK2uC,OAAOluD,IAAI,UAAWuf,KAAKshD,eAAe73D,MAGvDu3D,EAAchtD,UAAU2iD,yBAA2B,SAAUp1D,GACzD,GAAIA,IACIA,EAAWS,IAAI,SACfge,KAAK2uC,OAAOluD,IAAI,QAAS,WAEzBc,EAAWS,IAAI,MACfge,KAAK2uC,OAAOluD,IAAI,YAAauf,KAAKmxC,UAAU5vD,EAAWY,IAAI,MAAM,IAEjEZ,EAAWS,IAAI,YACfge,KAAK2uC,OAAOluD,IAAI,UAAWuf,KAAKmxC,UAAU5vD,EAAWY,IAAI,YAAY,IAErEZ,EAAWS,IAAI,yBACfge,KAAK2uC,OAAOluD,IAAI,uBAAwBuf,KAAKmxC,UAAU5vD,EAAWY,IAAI,yBAAyB,IAE/FZ,EAAWS,IAAI,OACX/C,EAAQsC,EAAWW,SAAS,OACnBjD,EAAMlG,OAAS,GAAKkG,EAAM,IACnC+gB,KAAKq4C,4BAA4B,OAAQp5D,EAAM,IAGnDsC,EAAWS,IAAI,OACX/C,EAAQsC,EAAWW,SAAS,OACnBjD,EAAMlG,OAAS,GAAKkG,EAAM,IACnC+gB,KAAKq4C,4BAA4B,WAAYp5D,EAAM,IAGvDsC,EAAWS,IAAI,OACX/C,EAAQsC,EAAWW,SAAS,OACnBjD,EAAMlG,OAAS,GAAKkG,EAAM,IACnC+gB,KAAKq4C,4BAA4B,UAAWp5D,EAAM,IAGtDsC,EAAWS,IAAI,OACX/C,EAAQsC,EAAWW,SAAS,OACnBjD,EAAMlG,OAAS,GAAKkG,EAAM,IACnC+gB,KAAKq4C,4BAA4B,UAAWp5D,EAAM,IAGtDsC,EAAWS,IAAI,MAAM,CACrB,GAAI/C,GAAQsC,EAAWW,SAAS,IAC5BjD,IAASA,EAAMlG,OAAS,GAAKkG,EAAM,IACnC+gB,KAAKq4C,4BAA4B,UAAWp5D,EAAM,MAKlE+hE,EAAchtD,UAAUqkD,4BAA8B,SAAUx4D,EAAKy4D,GACjE,GAAI2J,GAAU,GAAIn6B,IACdwwB,KACIA,EAAmBt2D,IAAI,MACvBigE,EAAQxhE,IAAI,IAAKuf,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,MAAM,IAE7Dm2D,EAAmBt2D,IAAI,MACvBigE,EAAQxhE,IAAI,IAAKuf,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,MAAM,IAE7Dm2D,EAAmBt2D,IAAI,MACvBigE,EAAQxhE,IAAI,IAAKuf,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,MAAM,IAE7Dm2D,EAAmBt2D,IAAI,OACvBigE,EAAQxhE,IAAI,KAAMuf,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,OAAO,IAE/Dm2D,EAAmBt2D,IAAI,MACvBigE,EAAQxhE,IAAI,IAAKuf,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,MAAM,IAE7Dm2D,EAAmBt2D,IAAI,OACvBigE,EAAQxhE,IAAI,KAAMuf,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,OAAO,IAE/Dm2D,EAAmBt2D,IAAI,OACvBigE,EAAQxhE,IAAI,KAAMuf,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,OAAO,IAE/Dm2D,EAAmBt2D,IAAI,OACvBigE,EAAQxhE,IAAI,KAAMuf,KAAKmxC,UAAUmH,EAAmBn2D,IAAI,OAAO,KAGvE6d,KAAK2uC,OAAOluD,IAAIZ,EAAKmgB,KAAKshD,eAAeW,KAE7CjB,EAAchtD,UAAU0iD,qBAAuB,SAAU7rD,GACrD,GAAIq3D,GAAc,GAAIp6B,KAClBq6B,EAAkB,GAAIr6B,IAG1B,OAFA9nB,MAAK03C,2BAA2ByK,EAAiBt3D,GACjDq3D,EAAYzhE,IAAI,KAAMuf,KAAKshD,eAAea,IACnC3lE,EAAewjB,KAAKshD,eAAeY,KAE9ClB,EAAchtD,UAAU0jD,2BAA6B,SAAUvnC,EAAO5uB,GAClE,GAAIwmB,GAAQ/H,IACRze,IAAcA,EAAW9G,KAAO,GAChC8G,EAAWyJ,QAAQ,SAAUnL,EAAK1H,IAClB,OAAR0H,GAAgB1H,YAAiB8H,QAAkB,MAARJ,GAAuB,WAARA,GAA4B,SAARA,GAA0B,OAARA,IAA0B,OAARA,IAAgBkoB,EAAMo5C,sBACxIp5C,EAAM4vC,aAAaxnC,EAASh4B,YAAiBkS,IAAiB9I,EAAWY,IAAItC,GAAO1H,EAAQoJ,EAAY1B,MAKxHmhE,EAAchtD,UAAU2jD,aAAe,SAAUxnC,EAAOh4B,EAAOoJ,EAAY1B,EAAKZ,EAAO2a,EAAcg+C,GAGjG,OAFqB,KAAjBh+C,IAA2BA,GAAe,OACvB,KAAnBg+C,IAA6BA,GAAiB,GAC9Cz/D,YAAiBmN,IACjBnN,EAAMgQ,KAAO6X,KAAKqxC,gBAAgBl5D,EAAMgQ,MACxC6X,KAAKoiD,YAAY,OAAQjqE,EAAMgQ,KAAMgoB,EAAOtwB,EAAKZ,OAEhD,IAAIgB,MAAMuB,QAAQrJ,GAAQ,CAC3B,GAAI6/C,KACQ,gBAARn4C,GAAwB+Z,EACxBoG,KAAK83C,YAAY9f,EAAM7/C,EAAOoJ,GAAY,GAG1Cye,KAAK83C,YAAY9f,EAAM7/C,EAAOoJ,GAElCye,KAAKkhD,eAAgB,EACrBlhD,KAAKoiD,YAAY,QAASpiD,KAAKqiD,oBAAoBrqB,GAAO7nB,EAAOtwB,EAAKZ,OAErE,IAAqB,gBAAV9G,GAAoB,CAChC,GAAImqE,IAAa,CAOjB,KAN6B,IAAzBnqE,EAAM+H,QAAQ,QACdoiE,GAAa,GAEL,wBAARziE,IACA1H,EAAQ6nB,KAAKqxC,gBAAgBl5D,IAE7B6nB,KAAKkhD,eAAyB,wBAARrhE,GAAiCmgB,KAAKuiD,sBAAsBpqE,IAAUmqE,EAAY,CACpGnlE,EAAQX,EAAerE,EAC3B6nB,MAAKoiD,YAAY,cAAezjE,EAAsBxB,GAAQgzB,EAAOtwB,EAAKZ,GAC1EqjE,GAAa,MAGbtiD,MAAKoiD,YAAY,SAAUjqE,EAAOg4B,EAAOtwB,EAAKZ,OAGjD,IAAqB,gBAAV9G,GACZ6nB,KAAKoiD,YAAYhpE,OAAOsE,UAAUvF,GAAS,MAAQ,QAASA,EAAMmB,WAAY62B,EAAOtwB,EAAKZ,OAEzF,IAAqB,iBAAV9G,GACZ6nB,KAAKoiD,YAAY,UAAWjqE,EAAQ,OAAS,QAASg4B,EAAOtwB,EAAKZ,OAEjE,IAAI9G,YAAiB2J,IAAgB,CACtC,GAAI41B,GAAW,GAAIoQ,IACnB9nB,MAAK03C,2BAA2BhgC,EAAUv/B,GAC1C6nB,KAAKoiD,YAAY,OAAQpiD,KAAKshD,eAAe5pC,GAAWvH,EAAOtwB,EAAKZ,OAEnE,IAAI9G,YAAiB2S,KAAkB3S,EAAMoJ,WAAY,CAC1D,GAAIihE,GAAY,GAAI16B,KAChB26B,EAAc,GAAI36B,KAClBiwB,EAAmB5/D,EAAMoJ,WACzBqhB,MAAO,GACP8/C,EAAavqE,EACbwqE,GAAgB,CAIpB,IAHI5K,EAAiB/1D,IAAI,YAAuD,UAAzC+1D,EAAiB51D,IAAI,WAAWgG,OACnEw6D,GAAgB,GAEhB/K,GAAkB+K,EAEd//C,EADAzqB,EAAMoJ,WAAWS,IAAI,WAAqD,cAAxC7J,EAAMoJ,WAAWY,IAAI,UAAUgG,KAC1DhQ,EAAMikB,WAAU,GAGhBF,GAAgB/jB,GAAO,OAGjC,IAAIwqE,GAAiBD,EAAWn3D,OACjC,GAAIm3D,EAAWn3D,iBAAkBsI,IAC7B,GAAuC,iBAA5B6uD,GAAWE,cAA8BF,EAAWG,QAAS,CAChEC,EAAeJ,EAAWn3D,OAAOzS,IAAM4pE,EAAWn3D,OAAO1S,KAC7D6pE,GAAW5L,SAASgM,EAChB3lE,GAAQulE,EAAWhmE,OAAO4B,SAAS,EAAGokE,EAAWK,aACrDngD,GAAO8/C,EAAWtmD,WAAU,EAAMjf,OAEjC,CACGoO,EAASm3D,EAAWn3D,MACxBqX,GAAO8/C,EAAWtmD,WAAU,EAAM7Q,EAAOoM,aAAapM,EAAO1S,MAAO0S,EAAOzS,UAG9E,IAAI4pE,EAAWn3D,OAAOA,OAAQ,CAC/B,GAAIy3D,GAAcN,EAAWn3D,MAC7B,IAAIy3D,EAAYz3D,iBAAkBsI,KAAkD,iBAA7BmvD,GAAYJ,cAA8BI,EAAYH,QAAS,CAClH,GAAIC,GAAeE,EAAYz3D,OAAOzS,IAAMkqE,EAAYz3D,OAAO1S,KAC/DmqE,GAAYlM,SAASgM,EACrB,IAAI3lE,GAAQ6lE,EAAYtmE,OAAO4B,SAAS,EAAG0kE,EAAYD,aACvDngD,GAAOogD,EAAY5mD,WAAU,EAAMjf,OAElC,IAAI6lE,EAAYz3D,iBAAkBsI,IAAY,CAC/C,GAAItI,GAASy3D,EAAYz3D,MACzBqX,GAAOogD,EAAY5mD,WAAU,EAAM7Q,EAAOoM,aAAapM,EAAO1S,MAAO0S,EAAOzS,WAIhF8pB,GAAOzqB,EAAMikB,WAAU,OAI3BwG,GAAOzqB,EAAMikB,WAAU,IAEtB27C,EAAiB/1D,IAAI,WAAa4gB,GAAiB,KAATA,GAC3Cm1C,EAAiBvvD,OAAO,SAAUrQ,EAAMY,QAE5CinB,KAAK03C,2BAA2B+K,EAAa1K,EAC7C,IAAI1qD,OAAO,EACP0qD,GAAiB/1D,IAAI,aACrBqL,EAAO2S,KAAKmxC,UAAU4G,EAAiB51D,IAAI,cAEzC41D,EAAiB/1D,IAAI,UAAY+1D,EAAiB/1D,IAAI,YACvD+1D,EAAiB/1D,IAAI,aACR,UAATqL,GAA6B,SAATA,GAA4B,kBAATA,GAAqC,aAATA,IACxEm1D,EAAU/hE,IAAI,OAAQ,OACtB+hE,EAAU/hE,IAAI,WAAY,SAG1B+hE,EAAU/hE,IAAI,OAAQ,YACtB+hE,EAAU/hE,IAAI,WAAY,UAE1BmiB,GAAiB,KAATA,GACR4/C,EAAU/hE,IAAI,QAASmiB,GAE3B6/C,EAAYhiE,IAAI,OAAQuf,KAAKshD,eAAekB,IAC5CxiD,KAAKoiD,YAAY,SAAUpiD,KAAKshD,eAAemB,GAActyC,EAAOtwB,EAAKZ,OAEpE9G,aAAiBkS,KAAiB2V,KAAKtU,gBAC5CsU,KAAK23C,aAAaxnC,EAAOnQ,KAAKtU,gBAAgBwH,OAAO/a,GAAQoJ,EAAY1B,EAAKZ,EAAO2a,EAAczhB,EAAM8a,QAE1F,OAAV9a,OAAmC,KAAVA,GAC9B6nB,KAAKoiD,YAAY,OAAQ,OAAQjyC,EAAOtwB,EAAKZ,IAGrD+hE,EAAchtD,UAAUouD,YAAc,SAAU7xC,EAAUp4B,EAAOg4B,EAAOtwB,EAAKZ,GACzE,GAAIgkE,GAAM,GAAIn7B,IACdm7B,GAAIxiE,IAAI8vB,EAAUp4B,GACd0H,EACAswB,EAAM1vB,IAAIZ,EAAKmgB,KAAKshD,eAAe2B,IAE9BhkE,GACLA,EAAM3D,KAAK2nE,IAGnBjC,EAAchtD,UAAU8jD,YAAc,SAAU74D,EAAO9G,EAAOoJ,EAAYqY,OACjD,KAAjBA,IAA2BA,GAAe,EAC9C,KAAK,GAAI1gB,GAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAC1B0gB,GAAoE,gBAA7CzhB,GAAMiB,OAAOC,SAASH,EAAEI,WAAY,OAC3D0mB,KAAKkhD,eAAgB,GAEzBlhD,KAAK23C,aAAa,KAAMx/D,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAMiI,EAAY,KAAMtC,EAAO2a,IAGnGonD,EAAchtD,UAAUstD,eAAiB,SAAUnxC,GAC/C,GAAIh3B,GAAI,EACJ6oE,EAAO,GAqBX,OApBA7xC,GAAMnlB,QAAQ,SAAU7S,EAAO0H,GACvB1H,EAAM0hB,WAAW,MAAQ1hB,EAAM0hB,WAAW,KAEtCmoD,GAAQ,IAAOniE,EAAM,KAAQ1H,GAO7BA,EAAM0hB,WAAW,MAAQ1hB,EAAMY,OAAS,IAAmB,MAAbZ,EAAM,IAA2B,MAAbA,EAAM,MACxEA,EAAQA,EAAM+G,UAAU,IAE5B8iE,GAAQ,IAAMniE,EAAM,MAAQ1H,EAAQ,KAEpCgB,EAAIg3B,EAAM11B,KAAO,IACjBunE,GAAQ,KAEZ7oE,MAEG6oE,EAAO,KAElBhB,EAAchtD,UAAUuuD,sBAAwB,SAAUpqE,GACtD,GAAI+qE,GAAe,cACnB,OAAO/qE,GAAMwc,MAAM,IAAIwuD,KAAK,SAAUv6D,GAAQ,MAAmC,QAA5Bs6D,EAAah/D,KAAK0E,MAE3Eo4D,EAAchtD,UAAUquD,oBAAsB,SAAUpjE,GAEpD,IAAK,GADD+iE,GAAO,IACF9oE,EAAI,EAAGA,EAAI+F,EAAMlG,OAAQG,IAC9B8oE,GAAQhiD,KAAKshD,eAAeriE,EAAM7F,OAAOC,SAASH,EAAEI,WAAY,MAC5DJ,EAAI+F,EAAMlG,OAAS,IACnBipE,GAAQ,IAGhB,OAAOA,GAAO,KAGlBhB,EAAchtD,UAAUovD,WAAa,SAAUn5D,EAAU2Y,GACrD5C,KAAK/H,UAAYhO,EACjB+V,KAAKtU,gBAAkBzB,EAASyB,eAChC,IAAI23D,GAAatlE,EAAe6kB,GAAM,EACtC,IAAIygD,EAAWxpD,WAAW,OAASwpD,EAAWvpD,SAAS,KACnD,KAAOupD,EAAWtqE,OAAS,IAAMsqE,EAAWvpD,SAAS,MACjDupD,EAAaA,EAAWnkE,UAAU,EAAGmkE,EAAWtqE,OAAS,EAGjE,OAAOuqE,MAAKC,MAAMF,IAEtBrC,EAAchtD,UAAU6kD,gBAAkB,SAAU5uD,EAAU2Y,GAC1D,GAAImF,GAAQ/H,KACRgiD,EAAOhiD,KAAKojD,WAAWn5D,EAAU2Y,EACrC,IAAIo/C,EAAM,CACN,GAAIhxC,GAAOjd,OAAOid,KAAKgxC,EACvB,IAAIhxC,GAAQA,EAAKj4B,OAAS,EAAG,CAwBzB,IAAK,GADDyjE,GAASx8C,KACJ9mB,EAAI,EAAGA,EAAI83B,EAAKj4B,OAAQG,KAvBnB,SAAUA,GACpB,GAAI2G,GAAMmxB,EAAK53B,OAAOC,SAASH,EAAEI,WAAY,KACzCnB,EAAQ6pE,EAAKniE,EACbI,OAAMuB,QAAQrJ,GACVqkE,EAAO5N,QAAQ5sD,IAAI,OACnB7J,EAAM6S,QAAQ,SAAU5G,GACpB2jB,EAAM6mC,QAAQzsD,IAAItC,GAAKvE,KAAK8I,KAIhCo4D,EAAO5N,QAAQnuD,IAAIZ,EAAK1H,GAIxBqkE,EAAO5N,QAAQ5sD,IAAI,OACnBw6D,EAAO5N,QAAQzsD,IAAItC,GAAKvE,KAAKnD,GAG7BqkE,EAAO5N,QAAQnuD,IAAIZ,GAAM1H,KAMzBe,EAEZ8mB,MAAKqzC,kBAIjB2N,EAAchtD,UAAUukD,mBAAqB,SAAUtuD,EAAU2Y,GAC7D,GAAImF,GAAQ/H,IACZA,MAAKihD,WAAY,CACjB,IAAIe,GAAOhiD,KAAKojD,WAAWn5D,EAAU2Y,EACrC,IAAIo/C,IAEuC,IAD5BjuD,OAAOid,KAAKgxC,GACd9hE,QAAQ,iBAAyB,CACtC,GAAIsjE,GAAoBxB,EAAKyB,cACzBC,EAAcz5D,EAASnP,UACvB6oE,EAAW5vD,OAAOid,KAAKwyC,EA+G3B,IA9GIG,GAAYA,EAAS5qE,OAAS,GAC9B4qE,EAAS34D,QAAQ,SAAUnL,GACvB,GAAIk2D,GAAY38D,OAAOC,SAASwG,EAAK,GACrC,QAAyB,KAAdk2D,GAA6BA,EAAY2N,EAAa,CAC7D,GAAIE,GAAS35D,EAASlP,QAAQg7D,GAC1B8N,EAAiBL,EAAkB3jE,EACvC,IAAIgkE,EAAgB,CAChB,GAAIC,GAAqB/vD,OAAOid,KAAK6yC,EACrC,IAAIC,GAAsBA,EAAmB/qE,OAAS,IAAwD,IAAnD+qE,EAAmB5jE,QAAQ,mBAA2B,CAC7G,GAAI2yD,GAAcgR,EAAgC,eAC9ChR,IAAeA,EAAY95D,OAAS,GACpC85D,EAAY7nD,QAAQ,SAAU8G,GAC1B,GAAIiyD,GAAiBhwD,OAAOid,KAAKlf,EACjC,IAAIiyD,GAAkBA,EAAehrE,OAAS,IAAyC,IAApCgrE,EAAe7jE,QAAQ,QAAgB,CACtF,GAAIqB,GAAa,GAAIO,IAAeimB,EAAMrc,gBAC1CnK,GAAWiH,OAAO,OAAQlD,GAASnD,IAAI,SACvC,IAAI84D,IAAc,CAClB,QAAQnpD,EAAiB,KAAErL,eACvB,IAAK,OACDlF,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,QAC1C,MACJ,KAAK,SACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,UAC1C,MACJ,KAAK,SACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,UAC1C,MACJ,KAAK,WACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,YAC1C,MACJ,KAAK,UACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,WAC1C,MACJ,KAAK,MACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,OAC1C,MACJ,KAAK,QACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SAC1C,MACJ,KAAK,OACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,QAC1C,MACJ,KAAK,WACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,YAC1C,MACJ,KAAK,QACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SAC1C,MACJ,KAAK,YACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,aAC1C,MACJ,KAAK,WACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,YAC1C,MACJ,KAAK,YACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,aAC1C,MACJ,KAAK,YACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,aAC1C,MACJ,KAAK,iBACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,kBAC1C,MACJ,KAAK,QACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SAC1C,MACJ,KAAK,SACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,UAC1C,MACJ,KAAK,QACDZ,EAAWiH,OAAO,UAAWlD,GAASnD,IAAI,SAC1C,MACJ,SACI84D,GAAc,EAGtB,GAAIA,EAAa,CACblzC,EAAMqzC,mBAAmB75D,EAAYuQ,EAAYiyD,EACjD,IAAInpE,GAAiBgpE,EAAO5oE,eAC5B,IAAIJ,EAAgB,CAChB,GAAIopE,GAAgBJ,EAAO/Q,YACvBoR,EAAeD,EAAc9Q,iBAAiB3xD,EAClD,IAAI0iE,EAAc,CACdA,EAAanJ,aAAc,CAC3B,IAAI5wD,GAAY6d,EAAMrc,gBAAgB00C,mBACtCr4B,GAAMrc,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,IAC3CA,EAAWS,IAAI,OAAST,EAAWS,IAAI,SACvC+lB,EAAM4qC,qBAAqBzoD,EAAW3I,GAE1C0iE,EAAalJ,KAAO7wD,CACpB,IAAIrP,GAAQmpE,EAAc7Q,aAAap6D,MACvCirE,GAAc7Q,aAAa73D,KAAK4O,GAC5B85D,EAAchJ,WAAagJ,EAAchJ,UAAUjiE,OAAS,IAC5DirE,EAAchJ,cAElBpgE,EAAe6F,IAAI,SAAUujE,EAAc7Q,cAC3Cv4D,EAAe2X,UAAW,EAC1ByxD,EAAc5Q,mBAAmB3yD,IAAI5F,EAAOopE,GAC5Cl8C,EAAM6qC,aAAaoR,EAAe95D,EAAW3I,EAAY3G,cAYjGolB,KAAKyuC,cAAc11D,OAAS,EAC5B,IAAK,GAAIG,GAAI,EAAGA,EAAI8mB,KAAKyuC,cAAc11D,OAAQG,IAAK,CAChD,GAAIqI,GAAaye,KAAKyuC,cAAcr1D,OAAOC,SAASH,EAAEI,WAAY,KAC9DkgE,EAAYj4D,EAAWY,IAAI,MAC3Bq3D,IAA2B,KAAdA,IACTx5C,KAAKwuC,iBAAiBxsD,IAAIw3D,GAC1Bj4D,EAAWiH,OAAO,MAAOwX,KAAKwuC,iBAAiBrsD,IAAIq3D,UAG5Cj4D,GAAW8Q,KAAKonD,KAKvCz5C,KAAKyuC,iBACLzuC,KAAKwuC,iBAAmB,GAAI1mB,OAIxCk5B,EAAchtD,UAAUonD,mBAAqB,SAAU75D,EAAYuQ,EAAYiyD,GAC3E,GAKI3D,GACAC,EAEAj9D,EACA8gE,EATAn8C,EAAQ/H,KACR07C,EAAyB,GAAI55D,IAAeke,KAAKtU,iBACjDiwD,EAAwB,GAAI75D,IAAeke,KAAKtU,iBAChDy4D,EAAa,GAAIr8B,KACjB0P,KAGAr8C,EAAS,EAuRb,IApRA4oE,EAAe/4D,QAAQ,SAAUnL,GAC7B,GAAI1H,GAAQ2Z,EAAWjS,EACvB,QAAQA,EAAI4G,eACR,IAAK,QACL,IAAK,MACDshB,EAAMq8C,eAAejsE,EAAOq/C,GACF,IAAtBA,EAAWz+C,SACXwI,EAAWiH,OAAO,IAAKgvC,GACvBA,KAEJ,MACJ,KAAK,OACD,KACJ,KAAK,QACDzvB,EAAMg0C,WAAWx6D,EAAY,QAASpJ,EACtC,MACJ,KAAK,aACD4vB,EAAMg0C,WAAWx6D,EAAY,aAAcpJ,EAC3C,MACJ,KAAK,YAC2B,UAAxBA,EAAMsO,eACNlF,EAAWiH,OAAO,KAAMlD,GAASnD,IAAI,SAEzC,MACJ,KAAK,YACD4lB,EAAMg0C,WAAWx6D,EAAY,MAAOpJ,EACpC,MACJ,KAAK,SACL,IAAK,QACL,IAAK,YACL,IAAK,QACD4vB,EAAMszC,gBAAgBx7D,EAAK1H,EAAOujE,EAAwBC,EAC1D,MACJ,KAAK,OAED,GADAv4D,EAAOjL,EACG,CACN,GAAIsR,KACJA,GAAOnO,KAAKlC,OAAO8J,WAAWE,EAAKV,IACnC+G,EAAOnO,KAAKlC,OAAO8J,WAAWE,EAAKT,IACnC8G,EAAOnO,KAAKlC,OAAO8J,WAAWE,EAAKR,QACnC6G,EAAOnO,KAAKlC,OAAO8J,WAAWE,EAAKnJ,SAC/BwP,GAA4B,IAAlBA,EAAO1Q,QACjBwI,EAAWiH,OAAO,OAAQiB,GAGlC,KACJ,KAAK,SACDtR,EAAQ2L,EAAgB3L,KACM,IAAjBA,EAAMY,QACfwI,EAAWiH,OAAO,KAAMrQ,EAAM,GAAK,IAAKA,EAAM,GAAK,IAAKA,EAAM,GAAK,KAEvE,MACJ,KAAK,KACD,GAAIA,GAA4C,WAAnCoJ,EAAWY,IAAI,WAAWgG,KAAmB,CAEtD,GAAIk8D,OADJH,EAAW/rE,EAAMwc,MAAM,MAEd3J,QAAQ,SAAU5G,GACvBigE,EAAQ/oE,KAAKlC,OAAO8J,WAAWkB,MAE/BigE,GAAWA,EAAQtrE,OAAS,GAC5BwI,EAAWiH,OAAO,KAAM67D,GAGhC,KACJ,KAAK,kBACDlsE,EAAQ2L,EAAgB3L,KACM,IAAjBA,EAAMY,QACfwI,EAAWiH,OAAO,MAAOrQ,EAAM,GAAK,IAAKA,EAAM,GAAK,IAAKA,EAAM,GAAK,KAExE,MACJ,KAAK,OACD4vB,EAAMg0C,WAAWx6D,EAAY,IAAKpJ,EAClC,MACJ,KAAK,eACD4vB,EAAMg0C,WAAWx6D,EAAY,eAAgBpJ,EAC7C,MACJ,KAAK,OACD4vB,EAAMg0C,WAAWx6D,EAAY,KAAMpJ,EACnC,MACJ,KAAK,OACGA,GACAoJ,EAAWiH,OAAO,OAAQlD,GAASnD,IAAIhK,GAE3C,MACJ,KAAK,UACD4vB,EAAMg0C,WAAWx6D,EAAY,OAAQpJ,EACrC,MACJ,KAAK,QACD4vB,EAAMg0C,WAAWx6D,EAAY,IAAKpJ,EAClC,MACJ,KAAK,WACDoJ,EAAWiH,OAAO,SAAUpP,OAAO8J,WAAW/K,GAC9C,MACJ,KAAK,SACD4vB,EAAMm0C,gBAAgB36D,EAAY,KAAMwmB,EAAMu8C,kBAAkBnsE,GAChE,MACJ,KAAK,KACGA,GACAoJ,EAAWiH,OAAO,KAAMlD,GAASnD,IAAIhK,GAEzC,MACJ,KAAK,eACDoJ,EAAWiH,OAAO,KAAMpP,OAAO8J,WAAW/K,GAC1C,MACJ,KAAK,eACDoJ,EAAWiH,OAAO,MAAOpP,OAAO8J,WAAW/K,GAC3C,MACJ,KAAK,UACD4vB,EAAMw8C,YAAYhjE,EAAY,MAAOpJ,EAAMsO,cAC3C,MACJ,KAAK,gBACGtO,GACAoJ,EAAWiH,OAAO,KAAMlD,GAASnD,IAAIhK,GAEzC,MACJ,KAAK,UACD4vB,EAAMm0C,gBAAgB36D,EAAY,KAAMwmB,EAAMu8C,kBAAkBnsE,GAChE,MACJ,KAAK,SACD4vB,EAAMm0C,gBAAgB36D,EAAY,aAAcwmB,EAAMu8C,kBAAkBnsE,GACxE,MACJ,KAAK,SACD4vB,EAAMm0C,gBAAgB36D,EAAY,SAAUwmB,EAAMu8C,kBAAkBnsE,GACpE,MACJ,KAAK,UACDoJ,EAAWiH,OAAO,KAAMpP,OAAO8J,WAAW/K,GAC1C,MACJ,KAAK,eACD,GAAIA,EAAO,CACP,GAAIqsE,GAAczwD,OAAOid,KAAK74B,EAC9B,IAAIqsE,GAAeA,EAAYzrE,OAAS,EAAG,CACvC,GAAI0rE,GAAU,GACVC,EAAU,CACdF,GAAYx5D,QAAQ,SAAU25D,GAC1B,GAAIC,GAAazsE,EAAMwsE,EACvBF,IAAWE,EAAW,IAAMC,EACxBF,EAAUF,EAAYzrE,OAAS,IAC/B0rE,GAAW,KAEfC,MAEJ38C,EAAMg0C,WAAWx6D,EAAY,KAAMkjE,IAG3C,KACJ,KAAK,oBACD18C,EAAMg0C,WAAWx6D,EAAY,KAAMpJ,EACnC,MACJ,KAAK,oBACoB,gBAAVA,IACP4vB,EAAMg0C,WAAWx6D,EAAY,KAAMpJ,EAEvC,MACJ,KAAK,QACD,GAAIA,GAA0B,gBAAVA,GAAoB,CAGpC,IAAK,GAFDikE,GAAYhhE,oBAAkBW,QAC9B6iC,EAAQzmC,EAAMwc,MAAM,KACfzb,EAAI,EAAGA,EAAI0lC,EAAM7lC,OAAQG,IAAK,CACnC,GAAImjE,GAAWpgE,EAAyB2iC,EAAMxlC,OAAOC,SAASH,EAAEI,WAAY,KAClE,KAANJ,EACAkjE,EAAYC,EAGZD,GAAaC,EAGrB96D,EAAWiH,OAAO,IAAK4zD,GAE3B,KACJ,KAAK,OACDr0C,EAAMw8C,YAAYhjE,EAAY,OAAQpJ,EAAMsO,cAC5C,MACJ,KAAK,SACDshB,EAAMw8C,YAAYhjE,EAAY,SAAUpJ,EAAMsO,cAC9C,MACJ,KAAK,cACDshB,EAAMg0C,WAAWx6D,EAAY,cAAepJ,EAC5C,MACJ,KAAK,WACoB,gBAAVA,MACuB,IAA1BA,EAAM+H,QAAQ,SACd/H,EAAQA,EAAM6H,QAAQ,MAAO,OAE7B7H,GACA4vB,EAAMg0C,WAAWx6D,EAAY,WAAYpJ,GAGjD,MACJ,KAAK,IACDoJ,EAAWiH,OAAO,IAAKpP,OAAOC,SAASlB,EAAO,IAC9C,MACJ,KAAK,UACD,GAAIA,EAAO,CACP,GAAI0sE,GAAc9wD,OAAOid,KAAK74B,EAC9B,IAAI0sE,GAAeA,EAAY9rE,OAAS,IAAyC,IAApC8rE,EAAY3kE,QAAQ,WAAmB,CAChF,GAAI4kE,GAAU3sE,EAAM2sE,OAChBA,IAAWA,EAAQ/rE,OAAS,GAC5BwI,EAAWiH,OAAO,UAAWs8D,IAIzC,KACJ,KAAK,OACD1E,EAAiBjoE,CACjB,MACJ,KAAK,OACDkoE,EAAeloE,CACf,MACJ,KAAK,WACL,IAAK,eACL,IAAK,OACL,IAAK,OACL,IAAK,WACL,IAAK,WACL,IAAK,OACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,OACDgsE,EAAW1jE,IAAIZ,EAAK1H,EACpB,MACJ,KAAK,OACDgD,EAAShD,CACT,MACJ,KAAK,WACD,GAAIA,GAA0B,gBAAVA,GAAoB,CACpC,GAAIwc,GAAQxc,EAAMwc,MAAM,OACxB,IAAIA,GAASA,EAAM5b,OAAS,EAAG,CAE3B,IAAK,GADDq+D,MACKl+D,EAAI,EAAGA,EAAIyb,EAAM5b,OAAQG,IAC9Bk+D,EAAS97D,KAAKlC,OAAO8J,WAAWyR,EAAMvb,OAAOC,SAASH,EAAEI,WAAY,MAEpE89D,GAASr+D,OAAS,GAAKq+D,EAASr+D,OAAS,GAAM,GAC/CwI,EAAWiH,OAAO,WAAY4uD,IAI1C,KACJ,KAAK,aACDrvC,EAAM+0C,mBAAmBv7D,EAAYpJ,EACrC,MACJ,KAAK,sBACD,GAAIA,EACA,GAAIA,GAA0B,gBAAVA,GAChB4vB,EAAMg0C,WAAWx6D,EAAY,sBAAuBpJ,OAEnD,CACD,GAAI4sE,GAAkBhxD,OAAOid,KAAK74B,EAClC,IAAI4sE,GAAmBA,EAAgBhsE,OAAS,IAAiD,IAA5CgsE,EAAgB7kE,QAAQ,eAAuB,CAChG,GAAI8kE,GAAgB1B,KAAK2B,UAAU9sE,EAAmB,YACtD6sE,GAAgBA,EAAc9lE,UAAU,EAAG8lE,EAAcjsE,OAAS,GAClEZ,EAAQ4F,EAAegB,EAAsBimE,GAAe,IAAQ,GACpEj9C,EAAMg0C,WAAWx6D,EAAY,sBAAuBpJ,IAIhE,KACJ,SACQ4vB,EAAM9P,UAAUqkD,wBAAkC,SAARz8D,GAA0B,SAARA,GAC5DkoB,EAAMg0C,WAAWx6D,EAAY1B,EAAsB,gBAAV1H,GAAqBA,EAAQmrE,KAAK2B,UAAU9sE,OAKrG6nB,KAAKy7C,sBAAsBl6D,EAAYuQ,EAAYiyD,GAC/C3D,EACIC,EACA9+D,EAAWiH,OAAO,MAAOlD,GAASnD,IAAIi+D,GAAiB96D,GAASnD,IAAIk+D,KAGpE9+D,EAAWiH,OAAO,KAAM43D,GAGvBC,GACL9+D,EAAWiH,OAAO,KAAM63D,GAExB1E,EAAsBlhE,KAAO,EAAG,CAChCkhE,EAAsBnzD,OAAO,OAAQlD,GAASnD,IAAI,UAC9C+H,GAAY8V,KAAKtU,gBAAgB00C,mBACrCub,GAAsB55D,MAAQmI,EAAUg7D,aAAe,IAAMh7D,EAAUi7D,iBACvEnlD,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWyxD,GAC9Cp6D,EAAWiH,OAAO,KAAM0B,GAE5B,GAAIwxD,EAAuBjhE,KAAO,EAAG,CACjC,GAAIyP,GAAY8V,KAAKtU,gBAAgB00C,mBACrCub,GAAsB55D,MAAQmI,EAAUg7D,aAAe,IAAMh7D,EAAUi7D,iBACvEnlD,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWwxD,GAC9Cn6D,EAAWiH,OAAO,KAAM0B,GAE5B8V,KAAKo9C,eAAe77D,EAAY4iE,EAAYhpE,IAEhD6lE,EAAchtD,UAAUowD,eAAiB,SAAUjsE,EAAOq/C,GAClDr/C,IAAiC,IAAxBA,EAAM+H,QAAQ,MACV/H,EAAMwc,MAAM,KAClB3J,QAAQ,SAAUkC,GACrBsqC,EAAWl8C,KAAKlC,OAAO8J,WAAWgK,OAI9C8zD,EAAchtD,UAAU+nD,WAAa,SAAUx6D,EAAY1B,EAAK1H,GACxDA,GACAoJ,EAAWiH,OAAO3I,EAAK1H,IAG/B6oE,EAAchtD,UAAUuwD,YAAc,SAAUhjE,EAAY1B,EAAK1H,GACzDA,GACAoJ,EAAWiH,OAAO3I,EAAe,QAAV1H,GAA6B,SAAVA,IAGlD6oE,EAAchtD,UAAUqnD,gBAAkB,SAAUx7D,EAAK1H,EAAOujE,EAAwBC,GACpF,GAAI72D,GAAQ,GACR82D,GAAe,CACnB,QAAQzjE,GACJ,IAAK,OACD2M,EAAQ,GACR,MACJ,KAAK,QACDA,EAAQ,GACR,MACJ,KAAK,WACDA,EAAQ,GACR,MACJ,KAAK,QACDA,EAAQ,GACR,MACJ,KAAK,YACDA,EAAQ,GACR,MACJ,KAAK,SACDA,EAAQ,IACR82D,GAAe,EAGvB,OAAQ/7D,EAAI4G,eACR,IAAK,QACDk1D,EAAsBnzD,OAAO,IAAKpP,OAAO8J,WAAW/K,GACpD,MACJ,KAAK,YACDujE,EAAuBlzD,OAAO,IAAKpP,OAAO8J,WAAW/K,GACrD,MACJ,KAAK,SACGA,IAAiC,IAAxBA,EAAM+H,QAAQ,MACvBy7D,EAAsBnzD,OAAO,IAAKwX,KAAKskD,kBAAkBnsE,IAIjE2M,IACI82D,EACAD,EAAsBnzD,OAAO,IAAKlD,GAASnD,IAAI2C,IAG/C42D,EAAuBlzD,OAAO,IAAKlD,GAASnD,IAAI2C,MAI5Dk8D,EAAchtD,UAAUswD,kBAAoB,SAAUnsE,GAClD,GACIitE,KAIJ,OALajtE,GAAMwc,MAAM,KAElB3J,QAAQ,SAAUq6D,GACrBD,EAAU9pE,KAAKlC,OAAO8J,WAAWmiE,MAE9BD,GAEXpE,EAAchtD,UAAUkoD,gBAAkB,SAAU36D,EAAY1B,EAAK1H,GAC7DA,GAASA,EAAMY,OAAS,GACxBwI,EAAWiH,OAAO3I,EAAK1H,IAG/B6oE,EAAchtD,UAAUynD,sBAAwB,SAAUl6D,EAAYuQ,EAAYiyD,GAC9E,GAAInE,GAAoB,GAAI99D,IAAeke,KAAKtU,iBAC5Cu0D,KACAD,KACAE,KACAoF,KACAC,IA8BJ,IA7BA3F,EAAkBn/D,IAAI,IAAKw/D,GAC3BL,EAAkBn/D,IAAI,IAAKu/D,GAC3BJ,EAAkBn/D,IAAI,IAAKy/D,GAC3BN,EAAkBn/D,IAAI,IAAK6kE,GAC3B1F,EAAkBn/D,IAAI,IAAK8kE,IACkB,IAAzCxB,EAAe7jE,QAAQ,cACvB8f,KAAK+7C,WAAW6D,EAAmB,IAAK9tD,EAAsB,YAEvB,IAAvCiyD,EAAe7jE,QAAQ,YACvB8f,KAAK+7C,WAAW6D,EAAmB,UAAW9tD,EAAoB,UAEd,IAApDiyD,EAAe7jE,QAAQ,yBACvB8f,KAAK+7C,WAAW6D,EAAmB,uBAAwB9tD,EAAiC,uBAExD,IAApCiyD,EAAe7jE,QAAQ,SACvB+/D,EAAO3kE,KAAK0kB,KAAKwlD,wBAAwB1zD,EAAiB,QAElB,IAAxCiyD,EAAe7jE,QAAQ,aACvB8/D,EAAO1kE,KAAK0kB,KAAKwlD,wBAAwB1zD,EAAqB,YAEvB,IAAvCiyD,EAAe7jE,QAAQ,YACvBggE,EAAO5kE,KAAK0kB,KAAKwlD,wBAAwB1zD,EAAoB,WAEtB,IAAvCiyD,EAAe7jE,QAAQ,YACvBolE,EAAOhqE,KAAK0kB,KAAKwlD,wBAAwB1zD,EAAoB,WAEtB,IAAvCiyD,EAAe7jE,QAAQ,YACvBqlE,EAAOjqE,KAAK0kB,KAAKwlD,wBAAwB1zD,EAAoB,WAExB,IAArCiyD,EAAe7jE,QAAQ,SAAiB,CACxC0/D,EAAkBn/D,IAAI,OAAQ6E,GAASnD,IAAI,WAC3C,IAAI+H,GAAY8V,KAAKtU,gBAAgB00C,mBACrCwf,GAAkB79D,MAAQmI,EAAUg7D,aAAe,IAAMh7D,EAAUi7D,iBACnEnlD,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW01D,GAC9Cr+D,EAAWiH,OAAO,UAAW0B,KAGrC82D,EAAchtD,UAAUwxD,wBAA0B,SAAU3iE,GACxD,GAAImuB,GAAOjd,OAAOid,KAAKnuB,GACnBtB,EAAa,GAAIO,IAAeke,KAAKtU,gBAqCzC,OApCIslB,IAAQA,EAAKj4B,OAAS,GACtBi4B,EAAKhmB,QAAQ,SAAUnL,GACnB,GAAI1H,GAAQ0K,EAAShD,EACrB,IAAIA,GAAO1H,EACP,OAAQ0H,GACJ,IAAK,IACD0B,EAAWd,IAAI,IAAKrH,OAAO8J,WAAW/K,GACtC,MACJ,KAAK,IACDoJ,EAAWd,IAAI,IAAKrH,OAAO8J,WAAW/K,GACtC,MACJ,KAAK,KACDoJ,EAAWd,IAAI,KAAMtI,EACrB,MACJ,KAAK,KACDoJ,EAAWd,IAAI,KAAMtI,EACrB,MACJ,KAAK,KACDoJ,EAAWd,IAAI,KAAMtI,EACrB,MACJ,KAAK,IACDoJ,EAAWd,IAAI,IAAKtI,EACpB,MACJ,KAAK,IACDoJ,EAAWd,IAAI,IAAK6E,GAASnD,IAAIhK,GACjC,MACJ,KAAK,KACDoJ,EAAWd,IAAI,KAAMtI,EACrB,MACJ,KAAK,OACDoJ,EAAWd,IAAI,OAAQ6E,GAASnD,IAAIhK,OAMjDoJ,GAEXy/D,EAAchtD,UAAUopD,eAAiB,SAAU77D,EAAYqhB,EAAMznB,GACjE,GAAI4sB,GAAQ/H,KACRkxC,EAAU3vD,EAAWY,IAAI,WAAWgG,KACpChL,EAAQ4B,EAAsB5D,GAAQ,EAC1C,IAAgB,UAAZ+1D,EAAqB,CACrB,GAAIuU,GAAgB,GAAI/H,IAAkBvgE,EAC1CsoE,GAAclkE,WAAWmK,gBAAkBsU,KAAKtU,gBAChD+5D,EAAclkE,WAAWiH,OAAO,OAAQlD,GAASnD,IAAI,UACrDygB,EAAK5X,QAAQ,SAAU7S,EAAO0H,GAC1B,GAAIA,GAAO1H,EACP,OAAQ0H,GACJ,IAAK,OACL,IAAK,OACL,IAAK,WACD4lE,EAAclkE,WAAWd,IAAIZ,EAAKzG,OAAOC,SAASlB,EAAO,IACzD,MACJ,KAAK,WACDstE,EAAclkE,WAAWd,IAAI,IAAK6E,GAASnD,IAAIhK,GAC/C,MACJ,KAAK,SACDstE,EAAclkE,WAAWd,IAAI,SAAU6E,GAASnD,IAAI,mBAKpEsjE,EAAcv7D,UAAY8V,KAAKtU,gBAAgB00C,oBAC/CqlB,EAAclkE,WAAWQ,MAAQ0jE,EAAcv7D,UAAUg7D,aAAe,IAAMO,EAAcv7D,UAAUi7D,iBACtGnlD,KAAKtU,gBAAgB2H,UAAU5S,IAAIglE,EAAcv7D,UAAWu7D,GAC5DlkE,EAAWiH,OAAO,QAASi9D,EAAcv7D,eAExC,IAAgB,mBAAZgnD,EAA8B,CACnC,GAAIwU,GAAmB,GAAI5jE,IAAeke,KAAKtU,gBAC/Cg6D,GAAiBl9D,OAAO,OAAQlD,GAASnD,IAAI,YAC7C,IAAIwjE,GAAe,GAAIjI,IAAkBvgE,EACzCwoE,GAAapkE,WAAWmK,gBAAkBsU,KAAKtU,eAC/C,IAAIk6D,GAAU,GAAI9jE,IAAeke,KAAKtU,gBACtCkX,GAAK5X,QAAQ,SAAU7S,EAAO0H,GAC1B,GAAIA,GAAO1H,EAAO,CACd,GAAIsC,OAAO,EACX,QAAQoF,GACJ,IAAK,OACDkoB,EAAMg0C,WAAW2J,EAAkB,IAAKvtE,GACxC4vB,EAAMg0C,WAAW2J,EAAkB,KAAMvtE,EACzC,MACJ,KAAK,WAEmB,MADpBsC,EAAOrB,OAAOC,SAASlB,EAAO,OAE1BytE,EAAQp9D,OAAO,OAAQ/N,GACvBkrE,EAAapkE,WAAWiH,OAAO,KAAM/N,GAEzC,MACJ,KAAK,WACDstB,EAAMg0C,WAAW6J,EAAS,eAAgBztE,EAC1C,MACJ,KAAK,eACD4vB,EAAMg0C,WAAW6J,EAAS,mBAAoBztE,OAK9DwtE,EAAapkE,WAAWiH,OAAO,SAAUo9D,GACzCD,EAAapkE,WAAWiH,OAAO,SAAUlD,GAASnD,IAAI,gBACtDwjE,EAAaz7D,UAAY8V,KAAKtU,gBAAgB00C,oBAC9CulB,EAAapkE,WAAWQ,MAAQ4jE,EAAaz7D,UAAUg7D,aAAe,IAAMS,EAAaz7D,UAAUi7D,iBACnGnlD,KAAKtU,gBAAgB2H,UAAU5S,IAAIklE,EAAaz7D,UAAWy7D,EAC3D,IAAI5H,GAAe,GAAIj8D,IAAeke,KAAKtU,gBAC3CqyD,GAAav1D,OAAO,IAAKm9D,EAAaz7D,WACtCw7D,EAAiBl9D,OAAO,KAAMu1D,EAC9B,IAAI7zD,GAAY8V,KAAKtU,gBAAgB00C,mBACrCslB,GAAiB3jE,MAAQmI,EAAUg7D,aAAe,IAAMh7D,EAAUi7D,iBAClEnlD,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWw7D,GAC9CnkE,EAAWiH,OAAO,KAAM0B,KAGhC82D,EAAchtD,UAAU8oD,mBAAqB,SAAUv7D,EAAYqhB,GAC/D,GAAIA,EAAM,CACN,GACIijD,GAAU9nE,EADAoC,EAAQyiB,GAAM,GAE5B,IAAIijD,EAAQhsD,WAAW,OAASgsD,EAAQ/rD,SAAS,KAC7C,KAAO+rD,EAAQ9sE,OAAS,IAAM8sE,EAAQ/rD,SAAS,MAC3C+rD,EAAUA,EAAQ3mE,UAAU,EAAG2mE,EAAQ9sE,OAAS,EAGxD,IAAIipE,GAAOsB,KAAKC,MAAMsC,EACtB,IAAI7D,EAAM,CACN,GAAIhxC,GAAOjd,OAAOid,KAAKgxC,EACnBhxC,IAAQA,EAAKj4B,OAAS,IAA6B,IAAxBi4B,EAAK9wB,QAAQ,OACxCqB,EAAWiH,OAAO,KAAMwX,KAAK8lD,iBAAiB9D,EAAS,QAKvEhB,EAAchtD,UAAU+xD,iBAAmB,SAAUzjE,GACjD,GACInK,GADA4vB,EAAQ/H,KAERgR,EAAOjd,OAAOid,KAAK1uB,EACvB,KAA8B,IAA1B0uB,EAAK9wB,QAAQ,QACb/H,EAAQmN,GAASnD,IAAIG,EAAQ6F,UAE5B,KAA6B,IAAzB6oB,EAAK9wB,QAAQ,OAClB/H,EAAQiB,OAAOC,SAASiJ,EAAQ0jE,IAAK,QAEpC,KAA+B,IAA3Bh1C,EAAK9wB,QAAQ,SAClB/H,EAAQiB,OAAO8J,WAAWZ,EAAQ2jE,WAEjC,KAAgC,IAA5Bj1C,EAAK9wB,QAAQ,UAClB/H,EAAQmK,EAAQogB,WAEf,KAAiC,IAA7BsO,EAAK9wB,QAAQ,WAClB/H,EAA4B,SAApBmK,EAAQ4jE,YAEf,KAA+B,IAA3Bl1C,EAAK9wB,QAAQ,SAAiB,CACnC,GAAIjB,GAAQqD,EAAQrD,KACpB9G,MACA8G,EAAM+L,QAAQ,SAAU1I,GACpBnK,EAAMmD,KAAKysB,EAAMg+C,iBAAiBzjE,UAGrC,KAA8B,IAA1B0uB,EAAK9wB,QAAQ,QAAgB,CAClC,GAAIqB,GAAaye,KAAK8lD,iBAAiBxjE,EAAQ6jE,KAC3C5kE,GAAW9G,KAAO,GAClBtC,EAAQ6nB,KAAKtU,gBAAgB00C,oBAC7B7+C,EAAWQ,MAAQ5J,EAAM+sE,aAAe,IAAM/sE,EAAMgtE,iBACpDnlD,KAAKtU,gBAAgB2H,UAAU5S,IAAItI,EAAOoJ,IAG1CpJ,EAAQ,GAAI2J,IAAeke,KAAKtU,qBAGnC,KAAgC,IAA5BslB,EAAK9wB,QAAQ,UAAkB,CACpC,GAAIqL,GAASyU,KAAKomD,aAAa9jE,EAAQiJ,OACvCpT,GAAQ6nB,KAAKtU,gBAAgB00C,oBAC7B70C,EAAOrB,UAAY/R,EACnBoT,EAAOhK,WAAWQ,MAAQ5J,EAAM+sE,aAAe,IAAM/sE,EAAMgtE,iBAC3DnlD,KAAKtU,gBAAgB2H,UAAU5S,IAAItI,EAAOoT,OAG1CpT,IADsC,IAAjC64B,EAAK9wB,QAAQ,eACVnC,EAAegB,EAAsBuD,EAAQ+jE,aAAa,IAAQ,GAGlE,IAEZ,OAAOluE,IAEX6oE,EAAchtD,UAAU8xD,iBAAmB,SAAUxjE,GACjD,GAAIylB,GAAQ/H,KACRliB,EAAS,GAAIgE,IAAeke,KAAKtU,gBACrC,IAAIpJ,EAAS,CACT,GAAI0uB,GAAOjd,OAAOid,KAAK1uB,EACnB0uB,IAAQA,EAAKj4B,OAAS,GACtBi4B,EAAKhmB,QAAQ,SAAUnL,GACnB,GAAI1H,GAAQmK,EAAQzC,EACpB,IAAY,SAARA,EAAgB,CAChB,GAAIuxD,GAAYrpC,EAAMg+C,iBAAiB5tE,EACvC2F,GAAO0K,OAAO3I,EAAKuxD,MAKnC,MAAOtzD,IAEXkjE,EAAchtD,UAAUoyD,aAAe,SAAU9jE,GAC7C,GAAIxE,GACAkzB,EAAOjd,OAAOid,KAAK1uB,EACvB,IAAIA,GAAW0uB,EAAK9wB,QAAQ,QAAS,CACjC,GAAI0iB,GAAOtgB,EAAQsgB,KACfzlB,MAAQ,EACZ,IAAIylB,EAAM,CACN,GAAI0jD,GAAWvyD,OAAOid,KAAKpO,EAC3B,IAAI0jD,IAA2C,IAA/BA,EAASpmE,QAAQ,SAAiB,CAC9C,GAAIqmE,GAAa3jD,EAAKzlB,KAClBopE,KACAppE,EAAQ4B,EAAsBwnE,GAAY,KAIjDppE,IACDA,KAEJ,IAAIoO,GAAS,GAAImyD,IAAkBvgE,EAC/B6iB,MAAKtU,gBACLsU,KAAKwmD,qBAAqBj7D,EAAQjJ,GAGlCiJ,EAAOk7D,kBAAoBnD,KAAK2B,UAAU3iE,GAE9CxE,EAASyN,EAEb,MAAOzN,IAEXkjE,EAAchtD,UAAUwyD,qBAAuB,SAAUj7D,EAAQjJ,GAI7D,OAHuB,KAAZA,GAA2BiJ,EAAOk7D,oBACzCnkE,EAAUghE,KAAKC,MAAMh4D,EAAOk7D,oBAE5BnkE,EAAS,CACT,GAAIf,GAAaye,KAAK8lD,iBAAiBxjE,GACnCy8D,GAAU,CACd,IAAIx9D,GAAcA,EAAWS,IAAI,WAAY,CACzC,GAAIqL,GAAO9L,EAAWY,IAAI,UAC1B48D,GAAU1xD,GAAsB,UAAdA,EAAKlF,KAEvB42D,GAAY/+C,KAAKihD,WAAa11D,EAAOyzD,YACrCzzD,EAAOyzD,aAAc,GAGjBz9D,EAAWS,IAAI,iBACRT,GAAW8Q,KAAK4sD,OAEvB19D,EAAWS,IAAI,iBACRT,GAAW8Q,KAAK6sD,QAG/B3zD,EAAOhK,WAAaA,IAG5By/D,EAAchtD,UAAUq9C,gBAAkB,SAAUl5D,GAyBhD,OAxB6B,IAAzBA,EAAM+H,QAAQ,QACd/H,EAAQA,EAAM6H,QAAQ,MAAO,UAEL,IAAxB7H,EAAM+H,QAAQ,OACd/H,EAAQA,EAAM6H,QAAQ,KAAM,SAEJ,IAAxB7H,EAAM+H,QAAQ,OACd/H,EAAQA,EAAM6H,QAAQ,MAAO,SAEL,IAAxB7H,EAAM+H,QAAQ,OACd/H,EAAQA,EAAM6H,QAAQ,MAAO,SAEL,IAAxB7H,EAAM+H,QAAQ,OACd/H,EAAQA,EAAM6H,QAAQ,MAAO,SAEL,IAAxB7H,EAAM+H,QAAQ,OACd/H,EAAQA,EAAM6H,QAAQ,MAAO,SAEJ,IAAzB7H,EAAM+H,QAAQ,QACd/H,EAAQA,EAAM6H,QAAQ,MAAO,SAEJ,IAAzB7H,EAAM+H,QAAQ,QACd/H,EAAQA,EAAM6H,QAAQ,MAAO,QAE1B7H,GAEJ6oE,GACT7S,ICxpDE1iD,GAA6B,WAC7B,QAASA,GAAYtT,EAAOsb,GAKxB,GAJAuM,KAAK2+B,aAAc,EACnB3+B,KAAK4+B,mBAAoB,EACzB5+B,KAAK8/B,cAAe,EACpB9/B,KAAKtU,gBAAkB+H,EACnBtb,YAAiB2S,IAAgB,CACjCkV,KAAKlU,SAAW3T,EACX6nB,KAAKlU,SAASvK,WAAWS,IAAI,SAAYge,KAAKlU,SAASvK,WAAWS,IAAI,YACvEge,KAAKmJ,aAET,IAAIlQ,GAAS+G,KAAKlU,SAASvK,WAAWW,SAAS,OAC/C,IAAI+W,GAAUA,EAAOlgB,OAAS,EAAG,CAC7B,GAAIqK,GAAOI,EAAayV,EACxB+G,MAAKqH,OAASjkB,EAAKR,MAAOQ,EAAKnJ,QAC/B+lB,KAAK0mD,sBAAwB1mD,KAAKqH,MAEtCrH,KAAK2mD,aAAc,WAGE,KAAVxuE,GACP6nB,KAAKqH,OAASlvB,EAAM,GAAIA,EAAM,IAC9B6nB,KAAKlU,SAAW,GAAI4xD,QACpB19C,KAAKlU,SAASvK,WAAWmK,gBAAkBsU,KAAKtU,gBAChDsU,KAAKmJ,cACLnJ,KAAKlU,SAASvK,WAAWd,IAAI,QAAStI,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAKA,EAAM,GAAIA,EAAM,GAAKA,EAAM,MAGhG6nB,KAAK2mD,aAAc,CAG3B3mD,MAAK4mD,sBAAuB,EAmKhC,MAjKA7yD,QAAO+H,eAAerQ,EAAYuI,UAAW,YA0BzC7R,IAAK,WACD,MAAI6d,MAAK2mD,YACE,UAEY,KAAZ3mD,KAAK8pC,KACZ9pC,KAAK8pC,GAAK,GAAI7O,IAAYj7B,KAAKqH,MAAOrH,KAAKlU,SAAUkU,KAAKtU,gBAAiBsU,MACvEA,KAAK4mD,sBACL5mD,KAAK8pC,GAAGlC,yBAEZ5nC,KAAK8pC,GAAG+c,qBAAsB,GAE3B7mD,KAAK8pC,KAEhB/tC,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAerQ,EAAYuI,UAAW,QA4BzC7R,IAAK,WACD,MAAO6d,MAAKqH,OAEhBtL,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAerQ,EAAYuI,UAAW,iBA8BzC7R,IAAK,WACD,MAAO6d,MAAK0mD,uBAEhB3qD,YAAY,EACZC,cAAc,IAElBvQ,EAAYuI,UAAUmV,YAAc,WAChCnJ,KAAKlU,SAASvK,WAAWd,IAAI,OAAQ6E,GAASnD,IAAI,YAClD6d,KAAKlU,SAASvK,WAAWd,IAAI,UAAW6E,GAASnD,IAAI,UAEzDsJ,EAAYuI,UAAU8yD,cAAgB,SAAUvlE,EAAYkS,GACxD,GAAIszD,GAAe,GAAI/F,GACvB+F,GAAar7D,gBAAkB+H,EAC/BszD,EAAatS,qBAAsB,CACnC,IAAIuS,GAAgB,GAAIl/B,IACxBi/B,GAAapP,aAAaqP,EAAezlE,EAAWY,IAAI,KAAMZ,EAAY,UAC1Eye,KAAKinD,YAAcF,EAAazF,eAAe0F,GAC/CD,EAAazS,YAEjB7oD,EAAYuI,UAAU6qC,cAAgB,SAAUqoB,EAAmBC,GAC/D,GAAIJ,GAAe,GAAI/F,GACnBkG,KACAH,EAAar7D,gBAAkBsU,KAAKtU,gBAExC,IAAIs2D,GAAOsB,KAAKC,MAAMvjD,KAAKinD,YAC3B,IAAIjF,EAAM,CACN,GACI59D,GAAQ49D,EADGmF,EAAmB,YAAc,SAEhD,IAAI/iE,EACA,GAAI+iE,EAAkB,CAClB,GAAIC,GAAqBL,EAAajB,iBAAiB1hE,EAAY,KAC/D8iE,IACAlnD,KAAKlU,SAASvK,WAAWiH,OAAO,YAAa4+D,OAIjDpnD,MAAKlU,SAAWi7D,EAAaX,aAAahiE,EAAc,QACpD8iE,IACAlnD,KAAKlU,SAASvK,WAAWmK,gBAAkBsU,KAAKtU,gBAChDsU,KAAKlU,SAASvK,WAAWgR,UAAW,GAKpDw0D,EAAazS,YAEjB7oD,EAAYuI,UAAUssC,uBAAyB,SAAU7sC,GACrD,GAAIuM,KAAKlU,SAAS26D,mBAAyD,KAApCzmD,KAAKlU,SAAS26D,kBAA0B,CAC3E,GAAIM,GAAe,GAAI/F,GACvB+F,GAAar7D,gBAAkB+H,EAC/BszD,EAAaP,qBAAqBxmD,KAAKlU,UACvCkU,KAAKlU,SAAS26D,kBAAoB,GAClCM,EAAazS,aAGd7oD,KC9NPwa,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QA2BnF6gD,GAA2B,WAC3B,QAASA,MAmFT,MAjFAtzD,QAAO+H,eAAeurD,EAAUrzD,UAAW,QAmCvC7R,IAAK,WACD,MAAO6d,MAAKsnD,OAmChB7mE,IAAK,SAAUtI,GACX6nB,KAAKsnD,MAAQnvE,CACb,IAAI+R,GAAY8V,KAAK7G,MAAMzN,gBAAgB00C,mBAC3CpgC,MAAK7G,MAAMzN,gBAAgB2H,UAAU5S,IAAIyJ,EAAW/R,EAAMmT,aAC1DnT,EAAMmT,YAAYvJ,MAAQmI,EAAU5Q,WACpC0mB,KAAK1U,YAAY9C,OAAO,OAAQ0B,IAEpC6R,YAAY,EACZC,cAAc,IAEXqrD,KAwBPE,GAA+B,SAAU1/C,GAEzC,QAAS0/C,GAAcC,GACnB,GAAIz/C,GAAQF,EAAO5T,KAAK+L,OAASA,IAYjC,OAXIwnD,aAAe/uD,KACfsP,EAAM0/C,aAAeD,EACrBz/C,EAAM5O,MAAQquD,EAAIxtE,OAGlB+tB,EAAM5O,MAAQquD,EACdz/C,EAAM0/C,aAAe,GAAIhvD,IAAe+uD,GAAM,EAAG,KAErDz/C,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQ,GAAIlD,IAAS,WAC9CyiB,EAAMzc,YAAY9C,OAAO,IAAK,GAAIlD,IAAS,SACpCyiB,EAqDX,MAnEA9B,IAAUshD,EAAe1/C,GAgBzB9T,OAAO+H,eAAeyrD,EAAcvzD,UAAW,eAmB3C7R,IAAK,WACD,MAAO6d,MAAKynD,cAyBhBhnE,IAAK,SAAUtI,GACX6nB,KAAKynD,aAAetvE,GAExB4jB,YAAY,EACZC,cAAc,IAEXurD,GACTF,IAuBEK,GAAiC,WAwBjC,QAASA,GAAgBrzD,GACrB2L,KAAK2nD,OAAStzD,EAsYlB,MApYAN,QAAO+H,eAAe4rD,EAAgB1zD,UAAW,cAmB7C7R,IAAK,WAID,MAHK6d,MAAK4nD,cACN5nD,KAAK4nD,YAAc5nD,KAAK6nD,cAAc,MAEnC7nD,KAAK4nD,aAyBhBnnE,IAAK,SAAUtI,GACPA,IACA6nB,KAAK4nD,YAAczvE,EACnB6nB,KAAK8nD,cAAc9nD,KAAK4nD,YAAa,OAG7C7rD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4rD,EAAgB1zD,UAAW,cAmB7C7R,IAAK,WAID,MAHK6d,MAAK+nD,cACN/nD,KAAK+nD,YAAc/nD,KAAK6nD,cAAc,MAEnC7nD,KAAK+nD,aAyBhBtnE,IAAK,SAAUtI,GACPA,IACA6nB,KAAK+nD,YAAc5vE,EACnB6nB,KAAK8nD,cAAc9nD,KAAK+nD,YAAa,OAG7ChsD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4rD,EAAgB1zD,UAAW,WAmB7C7R,IAAK,WAID,MAHK6d,MAAKgoD,WACNhoD,KAAKgoD,SAAWhoD,KAAK6nD,cAAc,MAEhC7nD,KAAKgoD,UAyBhBvnE,IAAK,SAAUtI,GACPA,IACA6nB,KAAKgoD,SAAW7vE,EAChB6nB,KAAK8nD,cAAc9nD,KAAKgoD,SAAU,OAG1CjsD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4rD,EAAgB1zD,UAAW,aAmB7C7R,IAAK,WAID,MAHK6d,MAAKioD,aACNjoD,KAAKioD,WAAajoD,KAAK6nD,cAAc,MAElC7nD,KAAKioD,YAyBhBxnE,IAAK,SAAUtI,GACPA,IACA6nB,KAAKioD,WAAa9vE,EAClB6nB,KAAK8nD,cAAc9nD,KAAKioD,WAAY,OAG5ClsD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4rD,EAAgB1zD,UAAW,YAmB7C7R,IAAK,WAID,MAHK6d,MAAKkoD,YACNloD,KAAKkoD,UAAYloD,KAAK6nD,cAAc,OAEjC7nD,KAAKkoD,WAyBhBznE,IAAK,SAAUtI,GACPA,IACA6nB,KAAKkoD,UAAY/vE,EACjB6nB,KAAK8nD,cAAc9nD,KAAKkoD,UAAW,QAG3CnsD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4rD,EAAgB1zD,UAAW,aAmB7C7R,IAAK,WAID,MAHK6d,MAAKmoD,aACNnoD,KAAKmoD,WAAanoD,KAAK6nD,cAAc,OAElC7nD,KAAKmoD,YAyBhB1nE,IAAK,SAAUtI,GACPA,IACA6nB,KAAKmoD,WAAahwE,EAClB6nB,KAAK8nD,cAAc9nD,KAAKmoD,WAAY,QAG5CpsD,YAAY,EACZC,cAAc,IAElB0rD,EAAgB1zD,UAAU8zD,cAAgB,SAAUM,EAAQvoE,GACxD,GAAIuU,EACJ,IAAI4L,KAAK2nD,OAAOzT,WAAa,IACzB9/C,EAAS4L,KAAK2nD,OAAOjX,OAAO,KACdt8C,EAAO9I,aAAe88D,YAAkBb,IAAe,CACjE,GAAIhmE,GAAa,GAAIO,IACjB9H,EAAOouE,EAAOjvD,MACdjc,EAAckrE,EAAOlrE,WACrBA,GAAYmrE,mBAAqBzvD,qBAAmB0vD,SACpDF,EAAO98D,YAAY9C,OAAO,KAAMxO,EAAK+gE,KAAM,GAAIz1D,IAAS,OAAQpI,EAAYorE,SAAS,GAAItuE,EAAKS,KAAK,GAAIyC,EAAYkb,OAE9Glb,EAAYmrE,mBAAqBzvD,qBAAmBC,KACzDuvD,EAAO98D,YAAY9C,OAAO,KAAMxO,EAAK+gE,KAAM,GAAIz1D,IAAS,QAAS,EAAG,EAAG,EAAG,IAErEpI,EAAYmrE,mBAAqBzvD,qBAAmBE,KACzDsvD,EAAO98D,YAAY9C,OAAO,KAAMxO,EAAK+gE,KAAM,GAAIz1D,IAAS,QAAStL,EAAKS,KAAK,KAEtEyC,EAAYmrE,mBAAqBzvD,qBAAmBG,WACzDqvD,EAAO98D,YAAY9C,OAAO,KAAMxO,EAAK+gE,KAAM,GAAIz1D,IAAS,SAE5D/D,EAAWd,IAAIZ,EAAKuoE,EAAO98D,aAC3B/J,EAAWgR,UAAW,EACtB6B,EAAO9I,YAAY9C,OAAO,KAAMjH,KAI5CmmE,EAAgB1zD,UAAU6zD,cAAgB,SAAUhoE,GAChD,GAAI/B,GACAsW,EAAS4L,KAAK2nD,OAAOjX,OAAO,EAChC,IAAIt8C,GAAUA,EAAO9I,aAAe8I,EAAO9I,YAAYtJ,IAAI,MAAO,CAC9D,GAAIomE,GAASh0D,EAAO9I,YAAYnJ,IAAI,KACpC,IAAIimE,GAAUA,EAAOpmE,IAAInC,GAAM,CAC3B,GAAI0B,GAAa6mE,EAAOjmE,IAAItC,EAC5B,IAAI0B,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIqL,GAAO9L,EAAWY,IAAI,IACtBkL,IAAsB,SAAdA,EAAKlF,MAAmB5G,EAAWS,IAAI,OAC1CT,EAAWmK,kBACZnK,EAAWmK,gBAAkB0I,EAAO1I,iBAExC5N,EAAS,GAAIypE,IAAcxvD,GAAmBxW,EAAY,SAK1E,MAAOzD,IAEJ4pE,KC5oBPzhD,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QA6BnFrP,GAA0B,WAC1B,QAASA,KACL6I,KAAKuoD,iBAAkB,EACvBvoD,KAAKwoD,kBAAmB,EACxBxoD,KAAKyoD,UAAW,EAChBzoD,KAAK0oD,yBAA0B,EAC/B1oD,KAAK2oD,2BAA4B,EACjC3oD,KAAK4oD,aAAe,GAAIvzD,IAAgBC,gBAAcC,UAAW,GACjEyK,KAAK6oD,gBAAkB,GAAIxzD,IAAgBC,gBAAcC,UAAW,GAAIlE,eAAa4D,SACrF+K,KAAK8oD,iBAAmB,GAAIzzD,IAAgBC,gBAAcS,WAAY,IACtEiK,KAAK+oD,UAAW,EAChB/oD,KAAKpJ,UAAW,EAChBoJ,KAAKxK,mBAAqB,GAAIH,IAAgBC,gBAAcC,UAAW,EAAGlE,eAAa4D,SACvF+K,KAAKgpD,aAAc,EACnBhpD,KAAKihD,WAAY,EA4oErB,MA1oEAltD,QAAO+H,eAAe3E,EAASnD,UAAW,cAkBtC7R,IAAK,WACD,MAAO6d,MAAKipD,MAAQjpD,KAAKipD,MAAMlwE,OAAS,GAE5CgjB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,QAkBtC7R,IAAK,WACD,MAAO6d,MAAKkpD,OAEhBntD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,QAkBtC7R,IAAK,WACD,OAA0B,KAAf6d,KAAKgS,MAAuB,CACnC,GAAIm3C,GAAQ7nE,EAAwB0e,KAAK1U,YAAa,KAAK,GAAO,EAC9D69D,IAASA,EAAMpwE,OAAS,IACH,IAAjBowE,EAAMpwE,OACNinB,KAAKgS,MAAQm3C,EAAM,GAGnBnpD,KAAKgS,MAAQm3C,EAAMntE,KAAK,MAIpC,MAAOgkB,MAAKgS,OAEhBjW,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,cAmBtC7R,IAAK,WACD,OAAgC,KAArB6d,KAAKopD,aAA+BppD,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,KAAM,CAC1F,GAAIq4D,GAASr6C,KAAK1U,YAAYnJ,IAAI,IAC9Bk4D,IAA4B,gBAAXA,KACjBr6C,KAAKopD,YAAc/O,GAG3B,MAAOr6C,MAAKopD,aAEhBrtD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,eAkBtC7R,IAAK,WACD,OAAiC,KAAtB6d,KAAKqpD,cAAgCrpD,KAAK1U,YAAYtJ,IAAI,MAAO,CACxE,GAAIy4D,GAASz6C,KAAK1U,YAAYnJ,IAAI,KAC9Bs4D,IAA4B,gBAAXA,KACjBz6C,KAAKqpD,aAAe5O,GAG5B,MAAOz6C,MAAKqpD,cAmBhB5oE,IAAK,SAAUtI,OACqB,KAArB6nB,KAAKspD,aAA+BtpD,KAAKqpD,eAAiBlxE,IACjE6nB,KAAKqpD,aAAelxE,EACpB6nB,KAAK1U,YAAY9C,OAAO,KAAMrQ,KAGtC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,WAkBtC7R,IAAK,WACD,OAAmC,KAAxB6d,KAAKupD,gBAAkCvpD,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAC9F,GAAIo9D,GAASp/C,KAAK1U,YAAYnJ,IAAI,KAC9Bi9D,IAA4B,gBAAXA,KACjBp/C,KAAKupD,eAAiBnK,GAG9B,MAAOp/C,MAAKupD,gBAmBhB9oE,IAAK,SAAUtI,OACiB,KAAjB6nB,KAAKwpD,SAA2BxpD,KAAKupD,iBAAmBpxE,IAC/D6nB,KAAKupD,eAAiBpxE,EACtB6nB,KAAK1U,YAAY9C,OAAO,KAAMrQ,KAGtC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,cAkBtC7R,IAAK,WACD,GAAIhK,EACJ,IAAI6nB,KAAKpK,UAAW,CAChBzd,EAAQqa,yBAAuBE,OAC/B,IAAI0B,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,eAC1Bz1D,EAAOE,oBAAkBW,OAC7B,IAAIqY,GAAUA,EAAOq1D,UACjBvuE,EAAOkZ,EAAOwqB,UAEb,CAAA,IAAI5e,KAAK1U,YAAYtJ,IAAI,KAI1B,MAAOwQ,0BAAuBk3D,mBAH9BxuE,GAAO8kB,KAAK1U,YAAYnJ,IAAI,KAKhC,GAAIwnE,GAAY,CAUhB,SATKzuE,EAAOE,oBAAkBC,UAAYD,oBAAkBC,SACxDsuE,EAAY,IAEXzuE,EAAOE,oBAAkBM,UAAYN,oBAAkBM,SACxDiuE,EAAY,IAEXzuE,EAAOE,oBAAkBQ,SAAWR,oBAAkBQ,QACvD+tE,GAAa,GAETA,GACJ,IAAK,GACDxxE,EAAQqa,yBAAuBnX,MAC/B,MACJ,KAAK,GACDlD,EAAQqa,yBAAuBC,eAC/B,MACJ,KAAK,GACDta,EAAQqa,yBAAuBk3D,mBAC/B,MACJ,KAAK,GACDvxE,EAAQqa,yBAAuBE,kBAKP,KAArBsN,KAAK4pD,cACZ5pD,KAAK4pD,YAAcp3D,yBAAuBE,SAE9Cva,EAAQ6nB,KAAK4pD,WAEjB,OAAOzxE,IAmBXsI,IAAK,SAAUtI,GACX,GAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC9B,IAAI3wC,KAAKpK,WACDxB,GAAYA,EAAOq1D,WAAazpD,KAAK6pD,aAAe1xE,EAI9C6nB,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK6pD,aAAe1xE,IACvDia,GAAkB4N,KAAK1U,YAAanT,GACpC6nB,KAAK1U,YAAYiH,UAAW,IAL5BH,GAAkBgC,EAAO9I,YAAanT,GACtC6nB,KAAK1U,YAAYiH,UAAW,OAQhC,IAAIyN,KAAK6pD,aAAe1xE,EAEpB,OADA6nB,KAAK4pD,YAAczxE,EACXA,GACJ,IAAKqa,0BAAuBnX,OACxB+Y,EAAOwqB,MAAQxjC,oBAAkBC,MACjC,MACJ,KAAKmX,0BAAuBC,gBACxB2B,EAAOwqB,MAASxjC,oBAAkBM,OAASN,oBAAkBQ,KAC7D,MACJ,KAAK4W,0BAAuBE,QACxB0B,EAAOwqB,MAAQxjC,oBAAkBQ,KACjC,MACJ,KAAK4W,0BAAuBk3D,oBACxBt1D,EAAOwqB,MAAQxjC,oBAAkBW,UAMrDggB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,UAkBtC7R,IAAK,WACD,GAAIhK,GACAic,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAa9B,OAZIv8C,KACAA,EAAO+E,MAAQ6G,KAAKhmB,MAEpBoa,GAAUA,EAAO6E,OACjB9gB,EAAQic,EAAO6E,OAEV+G,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,UAC9C7J,EAAQgL,EAAiB6c,KAAK1U,YAAa0U,KAAKhmB,WAE/B,KAAV7B,GAAmC,OAAVA,IAChCA,GAAUuK,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAG3I,OAAQ,IAErC9B,GAmBXsI,IAAK,SAAUtI,GACX,GAAgB,IAAZA,EAAMuK,GAAuB,IAAZvK,EAAMwK,GAA2B,IAAhBxK,EAAMyK,OAAgC,IAAjBzK,EAAM8B,OAC7D,KAAM,IAAIJ,OAAM,0BAEpB,IAAIua,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1B3wC,MAAKpK,gBACiB,KAAXxB,GAA0B4L,KAAK1U,YAAYtJ,IAAI,SACtDge,KAAK1U,YAAY9C,OAAO,OAAQ7E,GAAmBxL,EAAMuK,EAAGvK,EAAMwK,EAAGxK,EAAMyK,MAAOzK,EAAM8B,QAAS+lB,KAAKhmB,QAQ1Goa,EAAO+E,MAAQ6G,KAAKhmB,KACpBoa,EAAO6E,OAAS9gB,IAGxB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,UAkBtC7R,IAAK,WACD,GACI6G,GADAoL,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAE9B,IAAIv8C,OAAmC,KAAlBA,EAAO8I,OACxBlU,EAAQoL,EAAO8I,WAEd,IAAI8C,KAAK1U,YAAYtJ,IAAI,KAC1BgH,EAAQgX,KAAK1U,YAAYnJ,IAAI,SAG7B,KAAK,GAAIjJ,GAAI,EAAGA,EAAI8mB,KAAKk0C,gBAA+B,KAAVlrD,EAAuB9P,IAC7DA,IAAM8mB,KAAK2wC,gBACXv8C,EAAS4L,KAAK0wC,OAAOx3D,SACkB,KAAlBkb,EAAO8I,SACxBlU,EAAQoL,EAAO8I,OAQ/B,YAHqB,KAAVlU,IACPA,EAAQ,GAELA,GAmBXvI,IAAK,SAAUtI,GACX,GAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1Bv8C,GACAA,EAAO8I,OAAS/kB,EAEV6nB,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK1U,YAAYnJ,IAAI,OAAShK,GACjE6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,IAGrC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,SAkBtC7R,IAAK,WACD,GAAIhK,GACAic,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAO9B,OANIv8C,IAAUA,EAAOpQ,MACjB7L,EAAQic,EAAOpQ,MAEVgc,KAAK8pD,qBACV3xE,EAAQ6nB,KAAK+pD,IAAI/lE,OAEd7L,GAmBXsI,IAAK,SAAUtI,GACX,GAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC9B,IAAIv8C,GAAUA,EAAOpQ,OAASqX,GAAmBljB,GAC7Cic,EAAOpQ,MAAQ7L,MAEd,CACD,GAAIomD,IAAQ,CACPv+B,MAAK8pD,qBACN9pD,KAAK+pD,IAAM,GAAIC,IAAsB,IACrCzrB,GAAQ,IAERA,GAASv+B,KAAK+pD,IAAI/lE,QAAU7L,KAC5B6nB,KAAK+pD,IAAI/lE,MAAQ7L,EACjB6nB,KAAK1U,YAAY9C,OAAO,KAAMwX,KAAK+pD,IAAIzwE,eAInDyiB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,aAkBtC7R,IAAK,WACD,MAAO6d,MAAKiqD,iBAAgB,IAmBhCxpE,IAAK,SAAUtI,GACX6nB,KAAKkqD,iBAAiB/xE,IAE1B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,eAkBtC7R,IAAK,WACD,MAAO6d,MAAKmqD,mBAAkB,IAmBlC1pE,IAAK,SAAUtI,GACX6nB,KAAKoqD,mBAAmBjyE,GAAO,IAEnC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,YAkBtC7R,IAAK,WACD,MAAoD,KAA5C6d,KAAKqqD,YAAcjsD,aAAWviB,WAmB1C4E,IAAK,SAAUtI,GACPA,EACA6nB,KAAKqqD,aAAejsD,aAAWviB,UAG3BmkB,KAAKqqD,cAAgBjsD,aAAWviB,WAChCmkB,KAAKqqD,aAAejsD,aAAWriB,SAEnCikB,KAAKqqD,cAAgBjsD,aAAWviB,WAGxCkgB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,YAkBtC7R,IAAK,WACD,MAAoD,KAA5C6d,KAAKqqD,YAAcjsD,aAAWksD,WAmB1C7pE,IAAK,SAAUtI,GACPA,EACA6nB,KAAKqqD,aAAejsD,aAAWksD,SAG/BtqD,KAAKqqD,cAAgBjsD,aAAWksD,UAGxCvuD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,WAkBtC7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,GAAIxB,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,eAC1Bz1D,EAAOE,oBAAkBW,OAO7B,OANIqY,IAAUA,EAAOq1D,UACjBvuE,EAAOkZ,EAAOwqB,MAET5e,KAAK1U,YAAYtJ,IAAI,OAC1B9G,EAAO8kB,KAAK1U,YAAYnJ,IAAI,MAEzBjH,IAASE,oBAAkBC,OAGlC,MAAO2kB,MAAKyoD,UAqBpBhoE,IAAK,SAAUtI,GACN6nB,KAAKpK,WAAaoK,KAAKyoD,WAAatwE,GAAUA,IAC/C6nB,KAAKyoD,SAAWtwE,EAChB6nB,KAAK0wC,OAAO1wC,KAAK2wC,eAAe/xB,MAAQxjC,oBAAkBC,SAGlE0gB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,UAkBtC7R,IAAK,WACD,GACIhK,GADAic,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAE9B,IAAIv8C,GAAUA,EAAO9I,YAAYtJ,IAAI,MACjC7J,EAAQic,EAAOm2D,WAQf,IALApyE,EAAQ,GAAIqyE,IACNxqD,eAAgByqD,MAClBtyE,EAAM2wB,OAAS,GAEnB3wB,EAAMmT,YAAc0U,KAAK1U,YACA,OAArB0U,KAAK1U,iBAAoD,KAArB0U,KAAK1U,aAA+B0U,KAAK1U,YAAYtJ,IAAI,MAAO,CACpG,GAAIuoE,GAASvqD,KAAK1U,YAAYnJ,IAAI,KAClC,IAAIooE,EAAQ,CAIR,GAHIA,EAAOvoE,IAAI,OACX7J,EAAM2wB,OAASyhD,EAAOpoE,IAAI,MAE1BooE,EAAOvoE,IAAI,KAAM,CACjB,GAAI0oE,GAAcH,EAAOpoE,IAAI,IAC7B,IAAIuoE,EACA,OAAQA,EAAYviE,MAChB,IAAK,IACDhQ,EAAMk3C,OAASrqC,iBAAeE,MAC9B,MACJ,KAAK,IACD/M,EAAMk3C,OAASrqC,iBAAeG,OAC9B,MACJ,KAAK,IACDhN,EAAMk3C,OAASrqC,iBAAeI,KAC9B,MACJ,KAAK,IACDjN,EAAMk3C,OAASrqC,iBAAeK,SAC9B,MACJ,SACIlN,EAAMk3C,OAASrqC,iBAAeS,OAK1C8kE,EAAOvoE,IAAI,OACX7J,EAAMwyE,MAAQJ,EAAOroE,SAAS,OAK9C,MAAO/J,IAmBXsI,IAAK,SAAUtI,GACX,GAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1Bv8C,GACA4L,KAAK4qD,cAAcx2D,EAAO9I,YAAanT,GAGvC6nB,KAAK4qD,cAAc5qD,KAAK1U,YAAanT,IAG7C4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,iBAkBtC7R,IAAK,WACD,GAAIhK,GAAQkC,mBAAiBme,OACzBpE,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAI9B,OAHIv8C,KACAjc,EAAQic,EAAOy2D,eAEZ1yE,GAEX4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,UAkBtC7R,IAAK,WACD,QAAsD,IAA5C6d,KAAKqqD,YAAcjsD,aAAW0sD,YAmB5CrqE,IAAK,SAAUtI,GACPA,EACA6nB,KAAKqqD,cAAgBjsD,aAAW0sD,SAGhC9qD,KAAKqqD,aAAejsD,aAAW0sD,UAGvC/uD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,YAkBtC7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,GAAIzL,OAAS,EAIb,IAHI6V,KAAKhmB,KAAKgB,gBAAgBgH,IAAI,YAC9BmI,EAAS6V,KAAKhmB,KAAKgB,gBAAgBmH,IAAI,WAEvC6d,KAAKipD,OAASjpD,KAAKipD,MAAMlwE,OAAS,EAClC,IAAK,GAAIG,GAAI,EAAGA,EAAI8mB,KAAKipD,MAAMlwE,OAAQG,IAAK,CACxC,GAAIgR,GAAY8V,KAAKipD,MAAM7vE,OAAOC,SAASH,EAAEI,WAAY,IACzD,IAAI4Q,GACI8V,KAAKhmB,KAAKgB,gBAAgBgH,IAAI,WAC1BmI,IAEgB,KADZ4gE,EAAS5gE,EAAOjK,QAAQgK,IAExB,MAAO6gE,OAO1B,IAAI/qD,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,YAAuD,WAAzCge,KAAK1U,YAAYnJ,IAAI,WAAWgG,MACxF6X,KAAK+6C,MACD5wD,EAAQ,CACR,GAAI4gE,GAAS5gE,EAAOjK,QAAQ8f,KAAK+6C,KACjC,KAAgB,IAAZgQ,EACA,MAAOA,GAKvB,OAAQ,EAGR,MAAO/qD,MAAKgrD,WAoBpBvqE,IAAK,SAAUtI,GAEX,GADA6nB,KAAKgrD,UAAY7yE,EACb6nB,KAAKpK,UAAW,CAChB,GAAI5b,GAAOgmB,KAAKhmB,IAChB,IAAIA,IACCA,EAAKixE,WAAa9sD,wBAAsB+sD,QACpClrD,KAAK7L,MAAQ6L,KAAK7L,KAAKg3D,YAAchtD,wBAAsB+sD,SAC5DlxE,EAAKgB,gBAAgBgH,IAAI,UAAW,CACpC,GAAImI,GAASnQ,EAAKgB,gBAAgBmH,IAAI,UAClCipE,EAAuB,GAAIC,IAAwBlhE,EAAQ6V,KAAKtU,gBAAiB1R,EACrFA,GAAKm5D,aAAeiY,CACpB,IAAIvwE,GAAQsP,EAAOjK,QAAQ8f,KAAK+6C,KAC5BlgE,GAAQ,IACRA,EAAQmlB,KAAKsrD,iBAEjB,IAAIzY,GAAc74D,EAAK64D,YAAYtoB,WAAWvqB,KAAK+6C,KAAM/6C,KAAKgrD,UAAWnwE,EACzEb,GAAKgB,gBAAgBwN,OAAO,SAAUqqD,GACtC74D,EAAKgB,gBAAgBuX,UAAW,KAKhDwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,QAkBtC7R,IAAK,WACD,IAAK6d,KAAK7G,MAAO,CACb,GAEIb,GAFAlE,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,eAC1BpvD,MAAgC,KAAX6S,EAA0BA,EAAO9I,YAAc0U,KAAK1U,WAEzE0U,MAAKtU,kBACL4M,EAAa0H,KAAKtU,gBAAgBuM,UAEtC,IAAIje,OAAO,EACX,IAAIuH,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIoI,GAAM7I,EAAWiK,OAAO,IAC5B,IAAIpB,GAAOkO,EACP,IAASpf,EAAI,EAAGA,EAAIof,EAAWxd,UAAW5B,IAAK,CAC3C,GAAIkL,GAAQkU,EAAWvd,QAAQ7B,EAC/B,IAAIkL,GAASA,EAAM22D,OAAS3wD,EAAK,CAC7BpQ,EAAOoK,CACP,SAKhB,IAAKpK,GAAQse,EAAY,CACrB,GAAIizD,OAA+B,KAAXn3D,EAA0BA,EAAO2mD,KAAO/6C,KAAK+6C,IAIrE,KAHK/gE,GAAQuxE,IACTvxE,EAAOgQ,EAAUsO,EAAYizD,KAE5BvxE,GAAQgmB,KAAKipD,OAASjpD,KAAKipD,MAAMlwE,OAAS,EAC3C,IAAK,GAAIG,GAAI,EAAGA,EAAI8mB,KAAKipD,MAAMlwE,UAC3BiB,EAAOgQ,EAAUsO,EAAY0H,KAAKipD,MAAM7vE,OAAOC,SAASH,EAAEI,WAAY,OADnCJ,MAQ/C8mB,KAAK7G,MAAQnf,EAEjB,MAAOgmB,MAAK7G,OAEhB4C,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,WAiBtC7R,IAAK,WACD,MAAO6d,MAAK+oD,UAkBhBtoE,IAAK,SAAUtI,GACX6nB,KAAK+oD,SAAW5wE,GAEpB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,cACtC7R,IAAK,WAID,MAHK6d,MAAKwrD,QACNxrD,KAAKwrD,MAAQ,GAAI1oB,KAAU,IAAK,IAAK,OAElC9iC,KAAKwrD,OAEhBzvD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,gBACtC7R,IAAK,WAID,MAHK6d,MAAKyrD,UACNzrD,KAAKyrD,QAAU,GAAI3oB,KAAU,IAAK,IAAK,OAEpC9iC,KAAKyrD,SAEhB1vD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,eACtC7R,IAAK,WAID,MAHK6d,MAAK0rD,SACN1rD,KAAK0rD,OAAS,GAAI5oB,KAAU,IAAK,IAAK,OAEnC9iC,KAAK0rD,QAEhB3vD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,eACtC7R,IAAK,WAID,MAHK6d,MAAK2rD,SACN3rD,KAAK2rD,OAAS,GAAI7oB,KAAU,EAAG,EAAG,KAE/B9iC,KAAK2rD,QAEhB5vD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,cACtC7R,IAAK,WACD,MAAO6d,MAAKipD,MAAQjpD,KAAKipD,MAAMlwE,OAAS,GAE5CgjB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,iBACtC7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,GAAIg2D,GAAe5rD,KAAK6rD,aACxB,KAAKD,EAAc,CACf,GAAI1gE,GAAO8U,KAAK0wC,OAAO1wC,KAAK2wC,cACxBzlD,IAAQA,EAAKI,YAAYtJ,IAAI,QAC7B4pE,EAAe1gE,EAAKI,YAAYnJ,IAAI,OAG5C,MAAQypE,IAAgBA,EAAa5pE,IAAI,MAGzC,OAAQge,KAAK0oD,yBAGrB3sD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,mBACtC7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,GAAIg2D,GAAe5rD,KAAK6rD,aACxB,KAAKD,EAAc,CACf,GAAI1gE,GAAO8U,KAAK0wC,OAAO1wC,KAAK2wC,cACxBzlD,IAAQA,EAAKI,YAAYtJ,IAAI,QAC7B4pE,EAAe1gE,EAAKI,YAAYnJ,IAAI,OAG5C,MAAQypE,IAAgBA,EAAa5pE,IAAI,MAGzC,OAAQge,KAAK2oD,2BAGrB5sD,YAAY,EACZC,cAAc,IAElB7E,EAASnD,UAAUi2D,gBAAkB,SAAU6B,GAC3C,GAAI3zE,EACJ,KAAM2zE,GAAsB9rD,KAAKpK,WAAaoK,KAAK+rD,gBAAoB/rD,KAAKpK,YAAcoK,KAAK0oD,wBAA2B,CACtH,GAAIt0D,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC9B,IAAIv8C,GAAUA,EAAO43D,UACjB7zE,EAAQic,EAAO43D,cAEd,IAAIhsD,KAAK6rD,cAAe,CACzB,GAAIj5D,GAASoN,KAAK6rD,aAClB,IAAIj5D,GAAUA,EAAO5Q,IAAI,MAAO,CAC5B,GAAIiqE,GAAUr5D,EAAO1Q,SAAS,KAC1B+pE,KACA9zE,EAAQgM,EAAY8nE,SAIX,KAAV9zE,GAAmC,OAAVA,IAChCA,GAAS,IAAK,IAAK,MAG3B,MAAOA,IAEXgf,EAASnD,UAAUm2D,kBAAoB,SAAU2B,GAC7C,GAAI3zE,EACJ,KAAM2zE,GAAsB9rD,KAAKpK,WAAaoK,KAAKksD,kBAAsBlsD,KAAKpK,YAAcoK,KAAK2oD,0BAA6B,CAC1H,GAAIv0D,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC9B,IAAIv8C,GAAUA,EAAO+3D,YACjBh0E,EAAQic,EAAO+3D,gBAEd,IAAInsD,KAAK6rD,cAAe,CACzB,GAAIj5D,GAASoN,KAAK6rD,aAClB,IAAIj5D,EAAO5Q,IAAI,MAAO,CAClB,GAAIiqE,GAAUr5D,EAAO1Q,SAAS,KAC1B+pE,KACA9zE,EAAQgM,EAAY8nE,SAIX,KAAV9zE,GAAmC,OAAVA,IAChCA,GAAS,EAAG,EAAG,IAGvB,MAAOA,IAEXgf,EAASnD,UAAUk2D,iBAAmB,SAAU/xE,EAAO2zE,GAEnD,OADwB,KAApBA,IAA8BA,GAAkB,GAChDA,GAAmBzwD,GAAmBljB,IAA2B,IAAjBA,EAAMY,QAA6B,MAAbZ,EAAM,GAAY,CACxF6nB,KAAK0oD,yBAA0B,EAC3B1oD,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,aAClCge,MAAK1U,YAAY+G,KAAKQ,IAE7B+4D,EAAe5rD,KAAK6rD,gBACJD,EAAa5pE,IAAI,cAC1B4pE,GAAav5D,KAAKQ,GACzBmN,KAAK1U,YAAYiH,UAAW,EAEhC,IAAIrH,GAAO8U,KAAK0wC,OAAO1wC,KAAK2wC,cACxBzlD,KACAA,EAAK8gE,UAAY7zE,OAGpB,CACD6nB,KAAK0oD,yBAA0B,CAC/B,IAAIt0D,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC9B,IAAIv8C,GAAUA,EAAO43D,YAAc7zE,EAC/Bic,EAAO43D,UAAY7zE,MAElB,CACD,GAAIyzE,GAAe5rD,KAAK6rD,aACxB,QAA4B,KAAjBD,EAA8B,CACrC,GAAIrqE,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWiH,OAAO,MAAOpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAChEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,MAC/CqiB,KAAK1U,YAAY9C,OAAO,KAAMjH,OAExBqqE,GAAa5pE,IAAI,OAASmC,EAAYynE,EAAa1pE,SAAS,SAAW/J,IAC7EyzE,EAAapjE,OAAO,MAAOpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAClEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,MAC/CqiB,KAAK1U,YAAYiH,UAAW,MAK5C4E,EAASnD,UAAUo2D,mBAAqB,SAAUjyE,EAAO2zE,GAErD,OADwB,KAApBA,IAA8BA,GAAkB,GAChDA,GAAoC,IAAjB3zE,EAAMY,QAA6B,MAAbZ,EAAM,GAAY,CAM3D,GALA6nB,KAAK2oD,2BAA4B,EAC7B3oD,KAAK1U,YAAYtJ,IAAI,aACdge,MAAK1U,YAAY+G,KAAK+5D,IAE7BR,EAAe5rD,KAAK6rD,gBACJD,EAAa5pE,IAAI,MAAO,CAExC,SADO4pE,GAAav5D,KAAK+5D,GACrBpsD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIqqE,GAAersD,KAAK1U,YAAYnJ,IAAI,KACpCkqE,IAAgBA,EAAarqE,IAAI,YAC1BqqE,GAAah6D,KAAKi6D,EAGjCtsD,KAAK1U,YAAYiH,UAAW,EAEhC,GAAIrH,GAAO8U,KAAK0wC,OAAO1wC,KAAK2wC,cACxBzlD,KACAA,EAAKihE,YAAch0E,OAGtB,CACD6nB,KAAK2oD,2BAA4B,CACjC,IAAIv0D,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC9B,IAAIv8C,GAAUA,EAAO+3D,cAAgBh0E,EACjCic,EAAO+3D,YAAch0E,MAEpB,CACD,GAAIyzE,GAAe5rD,KAAK6rD,aACxB,QAA4B,KAAjBD,EAA8B,CACrC,GAAIrqE,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWiH,OAAO,MAAOpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAChEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,MAC/CqiB,KAAK1U,YAAY9C,OAAO,KAAMjH,OAExBqqE,GAAa5pE,IAAI,OAASmC,EAAYynE,EAAa1pE,SAAS,SAAW/J,IAC7EyzE,EAAapjE,OAAO,MAAOpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAClEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,MAC/CqiB,KAAK1U,YAAYiH,UAAW,MA0B5C4E,EAASnD,UAAU08C,OAAS,SAAU71D,GAClC,GAAIqQ,EACJ,IAAIrQ,GAAS,GAAKA,EAAQmlB,KAAKk0C,WAC3B,GAAIl0C,KAAKusD,aAAavqE,IAAInH,GACtBqQ,EAAO8U,KAAKusD,aAAapqE,IAAItH,OAE5B,CACD,GAAI0G,OAAa,GACb2I,EAAY8V,KAAKipD,MAAM7vE,OAAOC,SAASwB,EAAMvB,WAAY,IACzD4Q,IAAaA,YAAqBG,MAClC9I,EAAaye,KAAKtU,gBAAgBwH,OAAOhJ,IAEzC3I,KACA2J,EAAOshE,GAAoBC,MAAMlrE,EAAYye,KAAKtU,kBAC7CqvD,KAAO7wD,EACZ8V,KAAKusD,aAAa9rE,IAAI5F,EAAOqQ,IAIzC,MAAOA,IAmBXiM,EAASnD,UAAU04D,cAAgB,SAAUv0E,GACzC6nB,KAAK2sD,eAAiBx0E,GAmB1Bgf,EAASnD,UAAUid,SAAW,SAAU9oB,GACpC,GAAIhQ,EACJ,KAAI6nB,KAAK1U,cAAe0U,KAAK1U,YAAYtJ,IAAImG,GAazC,KAAM,IAAItO,OAAM,iBAAmBsO,EAAO,gBAZ1C,IAAI7F,GAAU0d,KAAK1U,YAAYnJ,IAAIgG,EACnC,IAAgB,OAAZ7F,OAAuC,KAAZA,GAA2BA,YAAmBgD,IACzEnN,EAAQmK,EAAQ6F,SAEf,CAAA,GAAuB,gBAAZ7F,GAIZ,KAAM,IAAIzI,OAAM,iBAAmBsO,EAAO,gBAH1ChQ,GAAQmK,EAShB,MAAOnK,IAsBXgf,EAASnD,UAAU0c,SAAW,SAAUvoB,EAAMhQ,GACtCgQ,GAAiB,KAATA,GAAehQ,GAAmB,KAAVA,GAChC6nB,KAAK1U,YAAY9C,OAAOL,EAAMhQ,IAsBtCgf,EAASnD,UAAU44D,aAAe,SAAU/xE,GACxC,GAAyB,OAArBmlB,KAAK1U,iBAAoD,KAArB0U,KAAK1U,aAA+B0U,KAAK1U,YAAYtJ,IAAI,SAAWge,KAAK6sD,WAAa,EAAG,CAC7H,GAAI3hE,GAAO8U,KAAK0wC,OAAO71D,EACvB,IAAIqQ,GAAQA,EAAK6vD,KAAM,CACnB,GAAI/gE,GAAOkR,EAAK4hE,UAQhB,IAPI9yE,GACAA,EAAK+yE,kBAAkB7hE,EAAK6vD,MAEhC/6C,KAAKipD,MAAMhd,OAAOpxD,EAAO,GACzBmlB,KAAK1U,YAAY7K,IAAI,OAAQuf,KAAKipD,OAClCjpD,KAAK1U,YAAYiH,UAAW,EAC5ByN,KAAKusD,aAAaj5D,OAAOzY,GACrBmlB,KAAKusD,aAAa9xE,KAAO,EAAG,CAC5B,GAAIuyE,GAAgB,GAAIllC,IACxB9nB,MAAKusD,aAAavhE,QAAQ,SAAU7S,EAAO0H,GACnCA,EAAMhF,EACNmyE,EAAcvsE,IAAIZ,EAAM,EAAG1H,GAG3B60E,EAAcvsE,IAAIZ,EAAK1H,KAG/B6nB,KAAKusD,aAAeS,MAwBpC71D,EAASnD,UAAUi5D,WAAa,SAAU/hE,GACtC,GAAIA,GAAQA,EAAK6vD,KAAM,CACnB,GAAIlgE,GAAQmlB,KAAKipD,MAAM/oE,QAAQgL,EAAK6vD,OACrB,IAAXlgE,GACAmlB,KAAK4sD,aAAa/xE,KAI9BkZ,OAAO+H,eAAe3E,EAASnD,UAAW,eACtC7R,IAAK,WAOD,WAN2B,KAAhB6d,KAAKuS,SACZvS,KAAKuS,OAASjxB,EAAwB0e,KAAK1U,YAAa,MAAM,GAAO,OAC1C,KAAhB0U,KAAKuS,SACZvS,KAAKuS,OAASnU,aAAWriB,UAG1BikB,KAAKuS,QAEhB9xB,IAAK,SAAUtI,GACP6nB,KAAKqqD,cAAgBlyE,IACrB6nB,KAAKuS,OAASp6B,EACd6nB,KAAK1U,YAAY9C,OAAO,KAAMrQ,KAGtC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,sBACtC7R,IAAK,WACD,OAAwB,KAAb6d,KAAK+pD,IAAqB,CACjC,GAAImD,GAAK5rE,EAAwB0e,KAAK1U,YAAa,MAAM,GAAO,EAC5D4hE,IAAa,KAAPA,IACNltD,KAAK+pD,IAAM,GAAIC,IAAsBkD,IAG7C,MAAOltD,MAAK+pD,KAEhBhuD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe3E,EAASnD,UAAW,iBACtC7R,IAAK,WACD,GAAIhK,EAIJ,OAHI6nB,MAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,QACzC7J,EAAQ6nB,KAAK1U,YAAYnJ,IAAI,OAE1BhK,GAEX4jB,YAAY,EACZC,cAAc,IAElB7E,EAASnD,UAAU42D,cAAgB,SAAUrpE,EAAYpJ,GACrD,GAAIg1E,GACA5uB,GAAQ,CACRh9C,IAAcA,EAAWS,IAAI,MAC7BmrE,EAAK5rE,EAAWY,IAAI,OAGpBgrE,EAAK,GAAIrrE,IAAeke,KAAKtU,iBAC7BnK,EAAWiH,OAAO,KAAM2kE,GACxB5uB,GAAQ,OAEe,KAAhBpmD,EAAMyK,OACbuqE,EAAG3kE,OAAO,IAAKrQ,EAAMyK,OACrBrB,EAAWgR,UAAW,GAEjBgsC,GACL4uB,EAAG3kE,OAAO,IAAK,OAEQ,KAAhBrQ,EAAM2M,OACbqoE,EAAG3kE,OAAO,IAAK3D,EAAgB1M,EAAM2M,QACrCvD,EAAWgR,UAAW,GAEjBgsC,GACL4uB,EAAG3kE,OAAO,IAAK3D,EAAgBG,iBAAeS,YAExB,KAAftN,EAAMktE,OACb8H,EAAG3kE,OAAO,IAAKrQ,EAAMktE,MACrB9jE,EAAWgR,UAAW,IAG9B4E,EAASnD,UAAUo5D,gBAAkB,SAAU7rE,GAC3C,GAAIrG,GAAOqG,EAAWY,IAAI,IAC1B,YAAwB,KAATjH,GAAiC,IAATA,GAE3Cic,EAASnD,UAAUq5D,gBAAkB,SAAU94D,GAC3CyL,KAAKqJ,MAAQ9U,CACb,IACIkqC,GADAx0C,EAAW+V,KAAKtU,gBAAgBuM,SAEhChO,KAEIw0C,EADAx0C,EAASkK,KAAK7I,YAAYtJ,IAAI,MACnBiI,EAASkK,KAAK7I,YAAYnJ,IAAI,MAG9B,GAAIL,IAAeke,KAAKtU,iBAG3C,IAAI4hE,GACArtB,GAAc,CAClB,IAAIxB,GAAYA,EAASz8C,IAAI,QAAS,CAClC,GAAI2Z,GAAM8iC,EAASjzC,OAAO,OACtBmQ,IAAOA,YAAetR,KACtB41C,GAAc,EACdqtB,EAAWttD,KAAKtU,gBAAgBwH,OAAOyI,IAElCA,YAAe7Z,MACpBwrE,EAAW3xD,GAGd2xD,IACDA,EAAW,GAAIxrE,IAAeke,KAAKtU,iBACnC+yC,EAASj2C,OAAO,OAAQ8kE,GAE5B,IAAIhvB,GACAp0C,EACAqjE,GAAU,CACVvtD,MAAKqJ,OAA8B,OAApBrJ,KAAKqJ,MAAMq/B,UAA4C,KAApB1oC,KAAKqJ,MAAMq/B,MAAyB1oC,KAAKqJ,MAAMk3B,YACjGjC,EAAUh5C,GAASnD,IAAI6d,KAAKqJ,MAAMq/B,MAClCx+C,EAAY8V,KAAKqJ,MAAMk3B,WACvBgtB,GAAU,IAGVjvB,EAAUh5C,GAASnD,IAAIsG,KACvByB,EAAY8V,KAAKtU,gBAAgB00C,oBAC7BpgC,KAAKqJ,QACLrJ,KAAKqJ,MAAMq/B,KAAOpK,EAAQn2C,KAC1B6X,KAAKqJ,MAAMk3B,WAAar2C,IAG5BA,IAAcqjE,IACVh5D,YAAgBuC,IACZkJ,KAAKqJ,MAAMomB,oBACXzvB,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAKqJ,MAAMomB,mBACzDzvB,KAAKqJ,MAAMk3B,WAAar2C,GAGvB8V,KAAKqJ,MAAM/d,cAChB0U,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAKqJ,MAAM/d,aACzDgiE,EAAS9kE,OAAO81C,EAAQn2C,KAAM+B,GAC9Bu0C,EAASlsC,UAAW,EACpBtI,EAASkK,KAAK7I,YAAY9C,OAAO,KAAMi2C,GACvCx0C,EAASkK,KAAK7I,YAAYiH,UAAW,IAG7C+6D,EAAS9kE,OAAO81C,EAAQn2C,KAAM+B,GAC9Bu0C,EAASlsC,UAAW,EACpBtI,EAASkK,KAAK7I,YAAY9C,OAAO,KAAMi2C,GACvCx0C,EAASkK,KAAK7I,YAAYiH,UAAW,EACrCyN,KAAK0yC,UAAYpU,EAAQn2C,IACzB,IAAIqM,GAAoB,GAAIw1D,GAI5B,IAHAx1D,EAAkB6vC,SAAWrkC,KAAK0yC,UAClCl+C,EAAkBF,SAAW0L,KAAKqJ,MAAMhC,MACxC7S,EAAkBxQ,MAAQgc,KAAKhc,MAAQgc,KAAKhc,OAAS,EAAG,EAAG,GACvDgc,KAAK1U,YAAYtJ,IAAI,QAErB,IAAK,GADDoV,GAAmB4I,KAAK1U,YAAYpJ,SAAS,QACxChJ,EAAI,EAAGA,EAAIke,EAAiBre,OAAQG,IAAK,CAC9C,GAAIkb,GAAS4L,KAAK0wC,OAAOx3D,EACRke,GAAiBhe,OAAOC,SAASH,EAAEI,WAAY,KACrDkP,OAAO,KAAMgM,EAAkBlb,YACtC8a,IACAA,EAAO21D,IAAMv1D,OAIhBwL,MAAK1U,YAAYtJ,IAAI,YAAuD,WAAzCge,KAAK1U,YAAYnJ,IAAI,WAAWgG,MACxE6X,KAAK1U,YAAY9C,OAAO,KAAMgM,EAAkBlb,WAEhD2mD,KACAxB,EAASlsC,UAAW,IAG5B4E,EAASnD,UAAUw5D,wBAA0B,SAAUjpE,EAAGkpE,GAGtD,OAFAlpE,EAAEu4C,cAAc2wB,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUC,WAC9G1tD,KAAK2tD,YAAYppE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUG,UAAWH,EAAU/C,YAAa+C,EAAUI,aACpFJ,EAAU/C,aACd,IAAK1lE,kBAAeI,MAChB4a,KAAK8tD,mBAAmBvpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAK+tD,YACzE/tD,KAAKguD,uBAAuBzpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKiuD,aAC7E,MACJ,KAAKjpE,kBAAeG,QAChB6a,KAAK8tD,mBAAmBvpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKkuD,aACzEluD,KAAKguD,uBAAuBzpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAaJ,EAAUU,eAI9Fh3D,EAASnD,UAAU25D,YAAc,SAAUppE,EAAG0U,EAAQ20D,EAAW9oE,EAAO+oE,GAChED,GAAaC,EAAc,IACvB/oE,IAAUE,iBAAeK,UACzBd,EAAE8iD,SAASumB,EAAW30D,EAAO,GAAIA,EAAO,GAAKA,EAAO,GAAK40D,EAAc,EAAG50D,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,GAAK40D,EAAc,GAGvItpE,EAAEu4C,cAAc7jC,EAAO,GAAK40D,EAAc,EAAG50D,EAAO,GAAK40D,EAAc,EAAG50D,EAAO,GAAK40D,EAAa50D,EAAO,GAAK40D,EAAaD,KAIxIz2D,EAASnD,UAAU85D,mBAAqB,SAAUvpE,EAAG0U,EAAQrW,EAAOu6C,GAChE,GAAI4D,GAAO,GAAIzK,IACX7sC,IACJA,GAAOnO,MAAM2d,EAAO,GAAKrW,EAAOqW,EAAO,GAAKrW,IAC5C6G,EAAOnO,MAAM2d,EAAO,GAAKrW,EAAQqW,EAAO,GAAKA,EAAO,GAAMrW,IAC1D6G,EAAOnO,MAAM2d,EAAO,GAAK,EAAIrW,EAAQqW,EAAO,GAAKA,EAAO,GAAM,EAAIrW,IAClE6G,EAAOnO,MAAM2d,EAAO,GAAK,EAAIrW,EAAOqW,EAAO,GAAK,EAAIrW,IACpD6G,EAAOnO,MAAO2d,EAAO,GAAKA,EAAO,GAAM,EAAIrW,EAAOqW,EAAO,GAAK,EAAIrW,IAClE6G,EAAOnO,MAAO2d,EAAO,GAAKA,EAAO,GAAMrW,EAAOqW,EAAO,GAAKrW,IAC1Dm+C,EAAK1I,WAAW5uC,GAChBlF,EAAEu8C,SAASC,EAAM5D,IAErBhmC,EAASnD,UAAUg6D,uBAAyB,SAAUzpE,EAAG0U,EAAQrW,EAAOu6C,GACpE,GAAI4D,GAAO,GAAIzK,IACX7sC,IACJA,GAAOnO,MAAM2d,EAAO,GAAKrW,EAAQqW,EAAO,GAAKA,EAAO,GAAMrW,IAC1D6G,EAAOnO,MAAM2d,EAAO,GAAK,EAAIrW,EAAQqW,EAAO,GAAKA,EAAO,GAAM,EAAIrW,IAClE6G,EAAOnO,MAAO2d,EAAO,GAAKA,EAAO,GAAM,EAAIrW,EAAQqW,EAAO,GAAKA,EAAO,GAAM,EAAIrW,IAChF6G,EAAOnO,MAAO2d,EAAO,GAAKA,EAAO,GAAM,EAAIrW,EAAOqW,EAAO,GAAK,EAAIrW,IAClE6G,EAAOnO,MAAM2d,EAAO,GAAKA,EAAO,GAAKrW,EAAOqW,EAAO,GAAKrW,IACxD6G,EAAOnO,MAAO2d,EAAO,GAAKA,EAAO,GAAMrW,EAAQqW,EAAO,GAAKA,EAAO,GAAMrW,IACxEm+C,EAAK1I,WAAW5uC,GAChBlF,EAAEu8C,SAASC,EAAM5D,IAErBhmC,EAASnD,UAAUo6D,iBAAmB,SAAU/zB,EAAUozB,EAAWY,EAAa7jE,GAC9E,GAAoB,MAAhB6jE,EAAqB,CACrB,GAAIp1D,GAASw0D,EAAUx0D,OACnBmoC,EAAWnoC,EAAO,EAItB,QAHI+G,KAAKuoD,kBACLnnB,EAAW/oD,KAAKY,IAAIggB,EAAO,GAAIA,EAAO,KAElCzO,GACJ,IAAKY,uBAAoBC,QACzB,IAAKD,uBAAoBkjE,UACrBj0B,EAASqD,YAAYzkC,EAAO,GAAIA,EAAO,GAAImoC,EAAUnoC,EAAO,GAAIw0D,EAAUC,UAC1E,MACJ,KAAKtiE,uBAAoBmjE,eACzB,IAAKnjE,uBAAoBojE,iBAChBf,EAAU/C,cAAgB1lE,iBAAeG,SAAasoE,EAAU/C,cAAgB1lE,iBAAeK,UAChGg1C,EAASqD,YAAYzkC,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIw0D,EAAUC,WAG3ErzB,EAASqD,YAAYzkC,EAAO,GAAIA,EAAO,GAAImoC,EAAUnoC,EAAO,GAAIw0D,EAAUU,aAMtF,GAFAnuD,KAAKyuD,iBAAiBp0B,EAAUphC,EAAQw0D,EAAUG,UAAWH,EAAUI,aACvE7tD,KAAK0uD,iBAAiBr0B,EAAUozB,EAAWjjE,GACvCA,IAAUY,sBAAoBC,SAAWb,IAAUY,sBAAoBmjE,eAAgB,CACvF,GAAII,IAAW11D,EAAO,GAAKw0D,EAAUI,YAAc,EAC/C50D,EAAO,GAAKw0D,EAAUI,YAAc,EACpCzsB,EAAWqsB,EAAUI,YACrB50D,EAAO,GAAKw0D,EAAUI,YAC1BxzB,GAASqD,YAAYixB,EAAQ,GAAMA,EAAQ,GAAK,EAAIA,EAAQ,GAAMA,EAAQ,GAAK,EAAIA,EAAQ,GAAMA,EAAQ,GAAK,EAAIA,EAAQ,GAAMA,EAAQ,GAAK,EAAIlB,EAAUmB,gBAI/J5uD,MAAK6uD,cAAcx0B,EAAUozB,EAAWY,EAAa7jE,IAG7D2M,EAASnD,UAAUy6D,iBAAmB,SAAUp0B,EAAUphC,EAAQ20D,EAAWC,GACvD,IAAd50D,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAChEohC,EAASqD,YAAYzkC,EAAO,GAAK40D,EAAc,EAAG50D,EAAO,GAAK40D,EAAc,GAAI7tD,KAAKuoD,gBACjFlwE,KAAKY,IAAIggB,EAAO,GAAIA,EAAO,IAAMA,EAAO,IAAM40D,EAAa50D,EAAO,GAAK40D,EAAaD,IAGhGz2D,EAASnD,UAAU06D,iBAAmB,SAAUr0B,EAAUozB,EAAWjjE,GACjE,GAAIqjE,GAAcJ,EAAUI,YACxBiB,GAAgB,IAAMjB,EACtBnrE,EAAI+qE,EAAUx0D,OAAO,GAAK61D,EAC1BnsE,EAAI8qE,EAAUx0D,OAAO,GAAK61D,EAC1BlsE,EAAQ6qE,EAAUx0D,OAAO,GAAM,EAAI61D,EACnC70E,EAASwzE,EAAUx0D,OAAO,GAAM,EAAI61D,EACpCX,EAAcV,EAAUU,WAC5B,IAAIA,EAAa,CACb,GAAIY,GAAcZ,EAAYrsB,OAC1BktB,MAAU,GACVC,MAAc,EAClB,QAAQxB,EAAU/C,aACd,IAAK1lE,kBAAeG,QAChB,OAAQqF,GACJ,IAAKY,uBAAoBmjE,eACzB,IAAKnjE,uBAAoBojE,iBACrBQ,EAAU,GAAInsB,IAAOksB,EAAalB,GAClCoB,EAAc,GAAIpsB,KAAQ,IAAK,IAAK,KAAMgrB,EAC1C,MACJ,KAAKziE,uBAAoBC,QACzB,IAAKD,uBAAoBkjE,UACrBU,EAAU,GAAInsB,KAAQ,IAAK,IAAK,KAAMgrB,GACtCoB,EAAc,GAAIpsB,IAAOksB,EAAalB,GAG9C,KACJ,KAAK7oE,kBAAeI,MAChB,OAAQoF,GACJ,IAAKY,uBAAoBmjE,eACzB,IAAKnjE,uBAAoBojE,iBACrBQ,EAAU,GAAInsB,KAAQ,EAAG,EAAG,GAAIgrB,GAChCoB,EAAc,GAAIpsB,KAAQ,EAAG,EAAG,GAAIgrB,EACpC,MACJ,KAAKziE,uBAAoBC,QACzB,IAAKD,uBAAoBkjE,UACrBU,EAAU,GAAInsB,KAAQ,IAAK,IAAK,KAAMgrB,GACtCoB,EAAc,GAAIpsB,KAAQ,IAAK,IAAK,KAAMgrB,IAKtDmB,GAAWC,IACX50B,EAASuD,QAAQl7C,EAAGC,EAAGC,EAAO3I,EAAQ,IAAK,IAAK+0E,GAChD30B,EAASuD,QAAQl7C,EAAGC,EAAGC,EAAO3I,GAAS,GAAI,IAAKg1E,MAI5D93D,EAASnD,UAAU66D,cAAgB,SAAUx0B,EAAUozB,EAAWY,EAAa7jE,EAAO+J,GAClF,OAAQ/J,GACJ,IAAKY,uBAAoBkjE,UACzB,IAAKljE,uBAAoBC,SACjBoiE,EAAUG,WAAaH,EAAUC,YACjCrzB,EAASyC,cAAc2wB,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUC,UAEzH,MACJ,KAAKtiE,uBAAoBmjE,eACzB,IAAKnjE,uBAAoBojE,iBAChBf,EAAU/C,cAAgB1lE,iBAAeG,SAAWsoE,EAAUC,WAC9DD,EAAU/C,cAAgB1lE,iBAAeK,WACtCooE,EAAUG,WAAaH,EAAUC,YACjCrzB,EAASyC,cAAc2wB,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUC,YAGpHD,EAAUG,WAAaH,EAAUU,cACtC9zB,EAASyC,cAAc2wB,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUU,aAIjI,GAAI1rE,GAAYgrE,EAAUx0D,MAE1B,IADA+G,KAAK2tD,YAAYtzB,EAAUozB,EAAUx0D,OAAQw0D,EAAUG,UAAWH,EAAU/C,YAAa+C,EAAUI,aAC9FrjE,IAAUY,sBAAoBmjE,gBAAoB/jE,IAAUY,sBAAoBojE,iBACjF,OAAQf,EAAU/C,aACd,IAAK1lE,kBAAeI,MAChB4a,KAAK8tD,mBAAmBzzB,EAAUozB,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKkvD,aAChFlvD,KAAKguD,uBAAuB3zB,EAAUozB,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKkuD,YACpF,MACJ,KAAKlpE,kBAAeG,QAChB6a,KAAK8tD,mBAAmBzzB,EAAUozB,EAAUx0D,OAAQw0D,EAAUI,YAAaJ,EAAUU,aACrFnuD,KAAKguD,uBAAuB3zB,EAAUozB,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKkuD,iBAK5F,QAAQT,EAAU/C,aACd,IAAK1lE,kBAAeI,MAChB4a,KAAK8tD,mBAAmBzzB,EAAUozB,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAK+tD,YAChF/tD,KAAKguD,uBAAuB3zB,EAAUozB,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKiuD,aACpF,MACJ,KAAKjpE,kBAAeG,QAChB6a,KAAK8tD,mBAAmBzzB,EAAUozB,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKkuD,aAChFluD,KAAKguD,uBAAuB3zB,EAAUozB,EAAUx0D,OAAQw0D,EAAUI,YAAaJ,EAAUU,aAIrG,GAAIgB,GAAU,EACV10E,EAAO,CACX,QAAQ+P,GACJ,IAAKY,uBAAoBmjE,eACzB,IAAKnjE,uBAAoBC,QACrB,GAAKkJ,EAiBDA,EAAO,GAAIc,IAAgBC,gBAAcU,aAAczB,EAAK8S,WAjBrD,CACP,GAAI+nD,GAAc3B,EAAU/C,cAAgB1lE,iBAAeG,SACvDsoE,EAAU/C,cAAgB1lE,iBAAeI,MACzCyoE,EAAcJ,EAAUI,WACxBuB,KACAvB,GAAe,EAEnB,IAAIwB,GAAYh3E,KAAKW,IAAKo2E,EAAc,EAAI3B,EAAUI,YAAcJ,EAAUI,YAAc,GACxFyB,EAAUj3E,KAAKY,IAAI40E,EAAawB,GAEhC/6D,GADJ7Z,EAAQgzE,EAAUx0D,OAAO,GAAKw0D,EAAUx0D,OAAO,GAAMw0D,EAAUx0D,OAAO,GAAKw0D,EAAUx0D,OAAO,IACtE,EAAIq2D,CAC1B/6D,GAAO,GAAIc,IAAgBC,gBAAcU,aAAc1B,GACnDm5D,EAAUx0D,OAAO,GAAKw0D,EAAUx0D,OAAO,KACvCk2D,GAAY1B,EAAUx0D,OAAO,GAAK1E,EAAKuW,SAAS5D,cAAgB,GASxE,GAHa,IAATzsB,IACAA,EAAOgzE,EAAUx0D,OAAO,IAExBw0D,EAAU8B,oBAAsBl1E,mBAAiBme,QAAUi1D,EAAU5C,cAAgB,EAAG,CACxF,GAAI2E,GAAUn1B,EAASE,OACnBk1B,EAASp1B,EAAShzB,KACtB,IAAIomD,EAAU8B,oBAAsBl1E,mBAAiBme,OACjD,GAAIi1D,EAAU8B,oBAAsBl1E,mBAAiBC,QAAS,CAC1D+/C,EAASG,mBAAmBi1B,EAAO,GAAI,GACvCp1B,EAAS+N,gBAAgB,GACzB,IAAIzlD,GAAI8sE,EAAO,IAAMhtE,EAAU,GAAKA,EAAU,GAE9CA,IADIC,EAAID,EAAU,GACFE,EAAGF,EAAU,GAAIA,EAAU,QAEtCgrE,GAAU8B,oBAAsBl1E,mBAAiBE,UACtD8/C,EAASG,mBAAmBi1B,EAAO,GAAIA,EAAO,IAC9Cp1B,EAAS+N,iBAAiB,KAG1B3lD,GAFIC,EAAI+sE,EAAO,IAAMhtE,EAAU,GAAKA,EAAU,IAC1CE,EAAI8sE,EAAO,IAAMhtE,EAAU,GAAKA,EAAU,IAC3BA,EAAU,GAAIA,EAAU,KAEtCgrE,EAAU8B,oBAAsBl1E,mBAAiBG,WACtD6/C,EAASG,mBAAmB,EAAGi1B,EAAO,IACtCp1B,EAAS+N,gBAAgB,KAGzB3lD,GAFIC,EAAI+sE,EAAO,IAAMhtE,EAAU,GAAKA,EAAU,IAC1CE,EAAIF,EAAU,GACCA,EAAU,GAAIA,EAAU,IAGnD,IAAIgrE,EAAU5C,cAAgB,EAAG,CAC7B,GAAgC,KAA5B4C,EAAU5C,cACV,GAAI4C,EAAU8B,oBAAsBl1E,mBAAiBC,QACjD+/C,EAASG,mBAAmB,EAAGi1B,EAAO,IACtCp1B,EAAS+N,iBAAiB,IAG1B3lD,GAFIC,EAAI+sE,EAAO,IAAMhtE,EAAU,GAAKA,EAAU,IAC1CE,EAAIF,EAAU,GACCA,EAAU,GAAIA,EAAU,QAG3C,IAAIA,EAAU,GAAKA,EAAU,GACzB43C,EAASG,mBAAmB,EAAGi1B,EAAO,IACtCp1B,EAAS+N,iBAAiB,IAC1B3lD,GAAagrE,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,QAE5F,CACD,GAAIy2D,GAAIjtE,EAAU,EAClBA,GAAU,KAAOA,EAAU,GAAKA,EAAU,IAC1CA,EAAU,GAAKitE,CACf,IAAIz1E,GAASwI,EAAU,EACvBA,GAAU,GAAKA,EAAU,GAAK8R,EAAKuW,SAAS5D,aAAezkB,EAAU,GAAK8R,EAAKuW,SAAS5D,aACxFzkB,EAAU,GAAKxI,EACfogD,EAAS+N,iBAAiB,IAC1B3lD,GAAaA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,QAIxE,IAAgC,MAA5BgrE,EAAU5C,cACfxwB,EAASG,mBAAmBi1B,EAAO,GAAI,GACvCp1B,EAAS+N,iBAAiB,KAG1B3lD,GAFIC,EAAID,EAAU,GACdE,EAAI8sE,EAAO,IAAMhtE,EAAU,GAAKA,EAAU,IAC3BA,EAAU,GAAIA,EAAU,QAE1C,IAAgC,MAA5BgrE,EAAU5C,cAAuB,CACtCxwB,EAASG,mBAAmBi1B,EAAO,GAAIA,EAAO,IAC9Cp1B,EAAS+N,iBAAiB,IAC1B,IAAI1lD,GAAI+sE,EAAO,IAAMhtE,EAAU,GAAKA,EAAU,GAE9CA,IAAaC,EADTC,EAAI8sE,EAAO,IAAMhtE,EAAU,GAAKA,EAAU,IAC3BA,EAAU,GAAIA,EAAU,IAE/C43C,EAAS0H,WAAWssB,EAAa95D,GAAO9R,EAAU,GAAIA,EAAU,GAAK0sE,EAAS1sE,EAAU,GAAIA,EAAU,IAAK,KAAMgrE,EAAUmB,UAAW,GAAI9pD,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,SACxM9I,EAASK,QAAQ80B,OAGjBn1B,GAAS0H,WAAWssB,EAAa95D,GAAO9R,EAAU,GAAIA,EAAU,GAAK0sE,EAAS1sE,EAAU,GAAIA,EAAU,IAAK,KAAMgrE,EAAUmB,UAAW,GAAI9pD,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAE5M,UAIhBhsC,EAASnD,UAAU27D,UAAY,SAAUzkE,GASrC,GARI8U,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,QACzCge,KAAKipD,MAAQjpD,KAAK1U,YAAYnJ,IAAI,SAGlC6d,KAAKipD,SACLjpD,KAAK1U,YAAY9C,OAAO,OAAQwX,KAAKipD,OACrCjpD,KAAKusD,aAAe,GAAIzkC,OAEW,IAAnC9nB,KAAKipD,MAAM/oE,QAAQgL,EAAK6vD,MAAc,CACtC,GAAI6U,GAAe5vD,KAAKk0C,UACxBhpD,GAAKwN,OAASk3D,EACd5vD,KAAKipD,MAAM3tE,KAAK4P,EAAK6vD,MACrB/6C,KAAKusD,aAAa9rE,IAAImvE,EAAc1kE,KAG5CiM,EAASnD,UAAU67D,cAAgB,SAAU1kE,EAAUnR,EAAMif,GACzD,GAAI9N,GAAYnR,EAAM,CAClB,GAAIqgD,GAAWrgD,EAAKqgD,QACpBA,GAASE,OACLvgD,EAAKI,WAAaC,mBAAiBC,SACnC+/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAI,GAC/CgzB,EAAS+N,gBAAgB,KAEpBpuD,EAAKI,WAAaC,mBAAiBE,UACxC8/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,iBAAiB,MAErBpuD,EAAKI,WAAaC,mBAAiBG,WACxC6/C,EAASG,mBAAmB,EAAGH,EAAShzB,MAAM,IAC9CgzB,EAAS+N,gBAAgB,MAE7B/N,EAASqB,IAAIr4B,sBAAsB2gC,qBAAmBC,MACtD5J,EAASqE,aAAavzC,EAAU8N,GAChCohC,EAASK,YAGjBvjC,EAASnD,UAAU87D,cAAgB,SAAU5kE,EAAMmJ,GAC3CA,YAAiB27C,KACjB37C,EAAM07D,YAAYz0E,KAAK4P,EAAK6hB,OAEhC1Y,EAAMw/C,SAASv4D,MAAM4P,EAAK8kE,OAAQ9kE,EAAK6hB,QACvC1Y,EAAM/I,YAAY7K,IAAI,MAAO4T,EAAMw/C,UACnCx/C,EAAM/I,YAAYiH,UAAW,GACxBrH,EAAK4jB,SAAW5jB,EAAK+kE,UACtBjwD,KAAKqtD,gBAAgBniE,EAAK+kE,WAGlC94D,EAASnD,UAAUk8D,eAAiB,SAAU3uE,EAAY4J,EAAUtL,GAChE,GAAIgL,GAAa,GAAI/I,GACjBP,IAAcA,EAAWS,IAAI,OAC7B6I,EAAatJ,EAAWY,IAAI,MAC5B2Q,GAA0BvR,EAAWY,IAAI,MAAO6d,KAAKtU,gBAAiB7L,KAGtEgL,EAAa,GAAI/I,IAAeke,KAAKtU,iBACrCnK,EAAWiH,OAAO,KAAMqC,GAE5B,IAAIX,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWiB,EAASW,UACvDjB,EAAWrC,OAAO3I,EAAKqK,IAE3BiN,EAASnD,UAAUm8D,eAAiB,SAAU/sE,EAAM3I,EAAMuO,GACtD,GAAIvG,IAAa,EAAG,EAAG,EAAG,EAU1B,OATIuG,KAAU3O,mBAAiBE,SAC3BkI,GAAahI,EAAK,IAAM2I,EAAK,GAAKA,EAAK,IAAK3I,EAAK,IAAM2I,EAAK,GAAKA,EAAK,IAAKA,EAAK,GAAIA,EAAK,IAEpF4F,IAAU3O,mBAAiBG,SAChCiI,GAAaW,EAAK,GAAI3I,EAAK,IAAM2I,EAAK,GAAKA,EAAK,IAAKA,EAAK,GAAIA,EAAK,IAE9D4F,IAAU3O,mBAAiBC,UAChCmI,GAAahI,EAAK,IAAM2I,EAAK,GAAKA,EAAK,IAAKA,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAEhEX,GAEX0U,EAASnD,UAAUo8D,YAAc,SAAUj4E,EAAOY,GAC9C,GAAIZ,EAAQ,GAAgB,IAAVA,GAAeA,GAASY,EACtC,KAAMc,OAAM,wBAGpBsd,EAASnD,UAAUy8C,yBAA2B,WAC1C,GAAIt4D,EACJ,IAAI6nB,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,QACzC,IAAK,GAAI9I,GAAI,EAAGA,EAAI8mB,KAAKk0C,WAAYh7D,IAAK,CACtC,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,EACvB,IAAIgS,GAAQA,EAAKI,aAAeJ,EAAKI,YAAYtJ,IAAI,QAC7CwI,EAAQU,EAAKI,YAAYnJ,IAAI,QACL,QAAfqI,EAAMrC,KAAgB,CAC/BhQ,EAAQqS,EAAMrC,IACd,YAKX,IAAI6X,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,MAAO,CACrD,GAAIwI,GAAQwV,KAAK1U,YAAYnJ,IAAI,KAC7BqI,IAAwB,QAAfA,EAAMrC,OACfhQ,EAAQqS,EAAMrC,MAGtB,MAAOhQ,IAEXgf,EAASnD,UAAUq8D,kBAAoB,WACnC,GAA4B,OAAxBrwD,KAAKswD,oBAA0D,KAAxBtwD,KAAKswD,eAC5C,GAAItwD,KAAKpK,UAAW,CAChB,GAAIxB,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1Bv8C,IAAUA,EAAO9I,aAAe8I,EAAO9I,YAAYtJ,IAAI,KACvDge,KAAKswD,eAAiBl8D,EAAO9I,YAAYnJ,IAAI,KAExC6d,KAAK1U,YAAYtJ,IAAI,KAC1Bge,KAAKswD,eAAiBtwD,KAAK1U,YAAYnJ,IAAI,KAG3C6d,KAAKswD,eAAiBtyD,mBAAiB9jB,SAI3C8lB,MAAKswD,eAAiBtyD,mBAAiB9jB,IAG/C,OAAO8lB,MAAKswD,gBAEhBn5D,EAASnD,UAAUu8D,kBAAoB,SAAUp4E,GAC7C,GAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1B3wC,MAAKpK,YAAcoK,KAAKnkB,WACpBuY,GAAUA,EAAO9I,YACjB8I,EAAO9I,YAAY9C,OAAO,IAAKrQ,GAG/B6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,IAGhC6nB,KAAKpK,WAAaoK,KAAKswD,iBAAmBn4E,IACvCic,GAAUA,EAAO9I,YACjB8I,EAAO9I,YAAY9C,OAAO,IAAKrQ,GAE1B6nB,KAAK1U,aACV0U,KAAK1U,YAAY9C,OAAO,IAAKrQ,IAGrC6nB,KAAKswD,eAAiBn4E,EACtB6nB,KAAKwwD,cAAgB,GAAI1rD,IAAgB3sB,EAAOqtB,uBAAqB29B,SAEzEhsC,EAASnD,UAAUy8D,YAAc,WAE7B,IAAK,GADD93C,MACKz/B,EAAI,EAAGA,EAAI8mB,KAAK6sD,WAAY3zE,IACjCy/B,EAAWr9B,KAAK0kB,KAAK0wC,OAAOx3D,GAEhC,OAAOy/B,IAEJxhB,KAgBP25C,GAAiC,SAAUjpC,GAE3C,QAASipC,GAAgB92D,EAAMmO,EAAM8Q,GACjC,GAAI8O,GAAQF,EAAO5T,KAAK+L,OAASA,IAKjC,OAJA+H,GAAM2oD,iBAAkB,EACpB12E,GAAQmO,GAAQ8Q,GAChB8O,EAAMoB,YAAYnvB,EAAMmO,EAAM8Q,GAE3B8O,EAylCX,MAhmCA9B,IAAU6qC,EAAiBjpC,GAmB3BipC,EAAgB2b,MAAQ,SAAUt4D,EAAM5S,EAAYkS,EAAgBvJ,GAChE,GAAImK,GAAQ,GAAIy8C,EAWhB,OAVAz8C,GAAMuB,WAAY,EAClBvB,EAAM60D,MAAQ/0D,EACdE,EAAM/I,YAAc/J,EACpB8S,EAAM3I,gBAAkB+H,EACxBY,EAAM0mD,KAAO7wD,EACTmK,EAAM/I,YAAYtJ,IAAI,UACtBqS,EAAM40D,MAAQ50D,EAAM/I,YAAYnJ,IAAI,SAExCkS,EAAMs8C,cAAgB,EACtBt8C,EAAMk4D,aAAe,GAAIzkC,KAClBzzB,GAEXN,OAAO+H,eAAeg1C,EAAgB98C,UAAW,QAkB7C7R,IAAK,WACD,OAA0B,KAAf6d,KAAK+M,MACZ,GAAI/M,KAAKpK,UAAW,CAChB,GAAIxI,GAAO9L,EAAwB0e,KAAK1U,YAAa,KAAK,GAAO,EACjE,IAAI8B,EACA4S,KAAK+M,MAAQ7wB,EAAmBkR,OAE/B,CACD,GAAIgH,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1Bv8C,KACAhH,EAAOgH,EAAO9I,YAAYnJ,IAAI,QAE1B6d,KAAK+M,MAAQ7wB,EAAmBkR,SAM5C4S,MAAK+M,MAAQ,EAGrB,OAAO/M,MAAK+M,OAmBhBtsB,IAAK,SAAUtI,GACX,GAAI6nB,KAAKpK,WACL,IAAKoK,KAAKnkB,SAAU,CACVmkB,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK1U,YAAYnJ,IAAI,OAAShK,GAC7D6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,EAEjC,IAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,gBAC1Bv8C,GAAYA,EAAO9I,YAAYtJ,IAAI,MAAQoS,EAAO9I,YAAYnJ,IAAI,OAAShK,GAC3Eic,EAAO9I,YAAY9C,OAAO,IAAKrQ,QAIlC6nB,MAAK+M,QAAU50B,IACpB6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,GAC7B6nB,KAAK+M,MAAQ50B,IAGrB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,iBAkB7C7R,IAAK,WACD,MAAO6d,MAAKqwD,qBAmBhB5vE,IAAK,SAAUtI,GACP6nB,KAAKswD,iBAAmBn4E,GACxB6nB,KAAKuwD,kBAAkBp4E,IAG/B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,gBAkB7C7R,IAAK,WACD,OAAkC,KAAvB6d,KAAK2wD,cAA+B,CAC3C,GAAIvjE,GAAO9L,EAAwB0e,KAAK1U,YAAa,MAAM,GAAO,EAC9D8B,KACA4S,KAAK2wD,cAAgBvjE,GAG7B,MAAO4S,MAAK2wD,eAmBhBlwE,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKzZ,eACfyZ,KAAK1U,YAAY9C,OAAO,KAAMrQ,GAC9B6nB,KAAK2wD,cAAgBx4E,IAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,aAkB7C7R,IAAK,WACD,MAAqD,KAA7C6d,KAAKqqD,YAAcjsD,aAAW2yC,YAmB1CtwD,IAAK,SAAUtI,GACPA,EACA6nB,KAAKqqD,aAAejsD,aAAW2yC,UAG/B/wC,KAAKqqD,cAAgBjsD,aAAW2yC,WAGxCh1C,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,YAkB7C7R,IAAK,WACD,MAAoD,KAA5C6d,KAAKqqD,YAAcjsD,aAAWwyD,WAmB1CnwE,IAAK,SAAUtI,GACPA,EACA6nB,KAAKqqD,aAAejsD,aAAWwyD,SAG/B5wD,KAAKqqD,cAAgBjsD,aAAWwyD,UAGxC70D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,cAkB7C7R,IAAK,WACD,QAAyD,IAA/C6d,KAAKqqD,YAAcjsD,aAAWyyD,eAmB5CpwE,IAAK,SAAUtI,GACPA,EACA6nB,KAAKqqD,cAAgBjsD,aAAWyyD,YAGhC7wD,KAAKqqD,aAAejsD,aAAWyyD,aAGvC90D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,cAkB7C7R,IAAK,WACD,QAA6D,IAAnD6d,KAAKqqD,YAAcjsD,aAAW0yD,mBAmB5CrwE,IAAK,SAAUtI,GACPA,EACA6nB,KAAKqqD,cAAgBjsD,aAAW0yD,gBAGhC9wD,KAAKqqD,aAAejsD,aAAW0yD,iBAGvC/0D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,gBAoB7C7R,IAAK,WACD,GAAIy8B,GAAQ5e,KAAKqqD,WACjB,OAAsC,KAA7BjsD,aAAW2yD,KAAOnyC,IACa,IAAlCA,EAAQxgB,aAAW2yC,YACc,IAAjCnyB,EAAQxgB,aAAWwyD,WACgB,IAAnChyC,EAAQxgB,aAAW4yD,aAqB7BvwE,IAAK,SAAUtI,GACPA,EACA6nB,KAAKqqD,aAAejsD,aAAW2yD,KAG/B/wD,KAAKqqD,cAAgBjsD,aAAW2yD,MAGxCh1D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,iBAkB7C7R,IAAK,WACD,GACIwE,GADAyN,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAS9B,OAPIv8C,QAA0C,KAAzBA,EAAO68D,cACxBtqE,EAAOyN,EAAO68D,cAETjxD,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,OAE9C2E,EAAOD,EADMsZ,KAAK1U,YAAYnJ,IAAI,KACFgG,WAEZ,KAATxB,EAAwBA,EAAOC,mBAAiBC,gBAmBnEpG,IAAK,SAAUtI,GACX,GAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,gBAC1Bv8C,OAA2C,KAAzBA,EAAO68D,eAAiC78D,EAAO68D,gBAAkB94E,EAG7E6nB,KAAK1U,YAAYtJ,IAAI,MAAQ0E,EAAkBsZ,KAAK1U,YAAYnJ,IAAI,QAAUhK,GACpF6nB,KAAK1U,YAAY9C,OAAO,IAAKxB,EAAyB7O,IAHtDic,EAAO68D,cAAgB94E,GAM/B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,aAkB7C7R,IAAK,WACD,OAA+B,KAApB6d,KAAKkxD,WAA4B,CACxC,GAAIjvC,GAAW3gC,EAAwB0e,KAAK1U,YAAa,UAAU,GAAO,EAC1E0U,MAAKkxD,eAAkC,KAAbjvC,GAA4B7oC,OAAOsE,UAAUukC,GAAaA,EAAW,EAEnG,MAAOjiB,MAAKkxD,YAmBhBzwE,IAAK,SAAUtI,GACP6nB,KAAKmxD,YAAch5E,IACnB6nB,KAAK1U,YAAY9C,OAAO,SAAUrQ,GAClC6nB,KAAKkxD,WAAa/4E,IAG1B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,oBAmB7C7R,IAAK,WACD,MAAO6d,MAAK0wD,iBAoBhBjwE,IAAK,SAAUtI,GACX6nB,KAAK0wD,gBAAkBv4E,CACvB,IAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1Bv8C,KACAA,EAAOg9D,cAAgBj5E,IAG/B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,QAmB7C7R,IAAK,WACD,GAAI6d,KAAKqJ,MACL,MAAOrJ,MAAKqJ,KAGZ,IAAIjV,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAGlC,OAFI3wC,MAAKqJ,MAAQnV,GAAmB8L,KAAKkpD,MAAO90D,EAAQ4L,MAEjDA,KAAKqJ,OAoBhB5oB,IAAK,SAAUtI,GACPA,GAASA,YAAiBi3C,MAC1BpvB,KAAKqJ,MAAQlxB,EACb6nB,KAAKqtD,gBAAgBl1E,KAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeg1C,EAAgB98C,UAAW,aAkB7C7R,IAAK,WACD,MAAO6d,MAAKiqD,iBAAgB,IAuBhCxpE,IAAK,SAAUtI,GACX6nB,KAAKkqD,iBAAiB/xE,GAAO,IAEjC4jB,YAAY,EACZC,cAAc,IAElB80C,EAAgB98C,UAAUmV,YAAc,SAAUnvB,EAAMmO,EAAM8Q,GAC1D+G,KAAKtU,gBAAkB1R,EAAK0R,gBAC5BsU,KAAK7G,MAAQnf,EACbgmB,KAAKgS,MAAQ7pB,EACb6X,KAAK+M,MAAQ,GACb/M,KAAK2wD,cAAgB,GACrB3wD,KAAK2wC,cAAgB,EACrB3wC,KAAKqxD,aAAc,EACnBrxD,KAAKsxD,eAAgB,EACrBtxD,KAAKuxD,YAAa,EAClBvxD,KAAKwxD,WAAY,EACjBxxD,KAAKyxD,aAAc,EACnBzxD,KAAK1U,YAAc,GAAIxJ,IAAeke,KAAKtU,iBAC3CsU,KAAK+6C,KAAO/6C,KAAKtU,gBAAgB00C,oBACjCpgC,KAAKtU,gBAAgB2H,UAAU5S,IAAIuf,KAAK+6C,KAAM/6C,KAAK1U,aACnD0U,KAAK1U,YAAYvJ,MAAQie,KAAK+6C,KAAKzhE,WACnC0mB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,OAC3C6d,KAAK1U,YAAY9C,OAAO,IAAKL,GAC7B6X,KAAKqqD,aAAejsD,aAAW0yD,gBAC/B9wD,KAAK0xD,YAAYz4D,GACjB+G,KAAKqtD,gBAAgBrtD,KAAK4oD,eAE9B9X,EAAgB98C,UAAU09D,YAAc,SAAUz4D,GAC9C,GAAI7E,GAAS,GAAIo4D,GACjBp4D,GAAOu9D,QAAQ3xD,KAAK7G,MAAOF,EAAQ+G,MACnC5L,EAAOw9D,cAAgB5zD,mBAAiB9jB,KACxC8lB,KAAKwwD,cAAgB,GAAI1rD,IAAgB1Q,EAAOw9D,cAAepsD,uBAAqB29B,QACpF/uC,EAAO9I,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBACxD0I,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAOy3D,cAAcrjE,OAAO,KAAMwX,KAAK6xD,YACvC7xD,KAAK2vD,UAAUv7D,IAEnB08C,EAAgB98C,UAAU89D,eAAiB,SAAUC,GAEjD,OADkB,KAAdA,IAAwBA,GAAY,GACpCA,GAAa/xD,KAAK2sD,gBAAkB3sD,KAAKkpD,MAAMyD,eAAgB,CAC/D,GAAI1jE,GAAQ+W,KAAKk0C,UACjB,IAAIl0C,KAAKpK,UACL,GAAI3M,EAAQ,EACR,IAAS/P,EAAI,EAAGA,EAAI+P,EAAO/P,KACnBgS,EAAO8U,KAAK0wC,OAAOx3D,KAEnB8mB,KAAKgyD,aAAaD,EAAW7mE,QAI/B6mE,GAAa/xD,KAAKkpD,MAAMyD,gBAAkB3sD,KAAK2sD,kBAAoB3sD,KAAKotD,gBAAgBptD,KAAK1U,cACnG0U,KAAKgyD,aAAaD,OAGrB,IAAIA,GAAa/xD,KAAKkpD,MAAMyD,gBAAkB3sD,KAAK2sD,eACpD,IAAK,GAAIzzE,GAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,EACvB,IAAIgS,IAAS8U,KAAKotD,gBAAgBliE,EAAKI,aAAc,CACjD,GAAIH,GAAW6U,KAAKiyD,kBAAkBF,EAAW7mE,EAC7C6mE,GACA/xD,KAAK6vD,cAAc1kE,EAAUD,EAAKiO,OAASzW,EAAGwI,EAAK+N,OAAOvW,EAAGC,EAAGuI,EAAK+N,OAAOtW,EAAGC,MAAOuI,EAASkc,MAAM,GAAIptB,OAAQkR,EAASkc,MAAM,KAGhIrH,KAAKkwD,eAAehlE,EAAKI,YAAaH,EAAU,KAEpDD,EAAKI,YAAYiH,UAAYw/D,GAIrCA,IACA/xD,KAAK1U,YAAYiH,UAAW,KAIxCu+C,EAAgB98C,UAAUg+D,aAAe,SAAUD,EAAW39D,GAC1D,GAAIjJ,GACA8N,EACArgB,EAASwb,GAAkB4L,IAC/B,IAAgB,OAAX5L,OAAqC,KAAXA,GAA0BA,EAAOu4D,gBAAkBv4D,EAAOm0D,iBAAoBvoD,KAAKkpD,MAAMyD,gBAAkB3sD,KAAK2sD,gBAAmBoF,IAAcn5E,EAAO0S,YAAYtJ,IAAI,MACnMmJ,EAAW6U,KAAKiyD,kBAAkBF,EAAWn5E,OAE5C,IAAIA,EAAO0S,YAAYtJ,IAAI,MAAO,CACnC,GAAIkwE,OAAmB,GACnB3wE,EAAa3I,EAAO0S,YAAYnJ,IAAI,KACxC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,KACAgoE,EAAiBhoE,UAAYA,GAE7BgoE,IACA/mE,EAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,mBAI9D,GAAIP,EACA,GAAI4mE,EAAW,CACX,GAAI/3E,GAAOpB,YAAkB4zE,IAAsB5zE,EAAOk0E,WAAal0E,EAAOoB,IAC9E,IAAIA,EAAM,CACN,GAAIqgD,GAAWrgD,EAAKqgD,QACpBA,GAASE,OACLvgD,EAAKI,WAAaC,mBAAiBC,SACnC+/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,gBAAgB,KAEpBpuD,EAAKI,WAAaC,mBAAiBE,UACxC8/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,iBAAiB,MAErBpuD,EAAKI,WAAaC,mBAAiBG,WACxC6/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,gBAAgB,MAE7BnvC,GAAWvW,EAAG9J,EAAOqgB,OAAOvW,EAAGC,EAAG/J,EAAOqgB,OAAOtW,EAAGC,MAAOuI,EAASkc,MAAM,GAAIptB,OAAQkR,EAASkc,MAAM,IACpGgzB,EAASqE,aAAavzC,EAAU8N,GAChCohC,EAASK,UAEb9hD,EAAO0S,YAAYiH,UAAW,MAG9ByN,MAAKkwD,eAAet3E,EAAO0S,YAAaH,EAAU,MAI9D2lD,EAAgB98C,UAAUi+D,kBAAoB,SAAUF,EAAW39D,GAC/D,GAAI6E,GAAS7E,EAAO6E,OAChB9N,EAAW,GAAIM,KAAa,EAAG,EAAGwN,EAAOrW,MAAOqW,EAAOhf,QAAS+lB,KAAKtU,gBACzEE,IAAWT,EAAU,MACrBA,EAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWlvC,EAASkvC,SACpBozB,EAAY,GAAI0E,GACpB1E,GAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,OAC/C,IAAIm4E,GAAYh+D,EAAO43D,SACnBoG,KACA3E,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS1uC,EAAOpQ,MAC1C,IAAIumE,GAASn2D,EAAOm2D,MASpB,IARIn2D,EAAO+3D,cACc,IAAjB5B,EAAO3nE,QACPwR,EAAO+3D,aAAe,IAAK,IAAK,MAEpCsB,EAAUG,UAAY,GAAI/qB,IAAOzuC,EAAO+3D,YAAa5B,EAAO3nE,QAEhE6qE,EAAUI,YAActD,EAAO3nE,MAC/B6qE,EAAU/C,YAAcH,EAAOzlE,MAC3BstE,EAAW,CACX,GAAIrD,IAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,IACpEpuE,GAAS+qE,EAAY,IAAM,EAAIA,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAEzCypE,EAAU5C,cAAgBz2D,EAAO8I,OACjCuwD,EAAU4E,aAAeryD,KAAKqyD,YAC9B,IACIC,GACAC,EAFAnlE,EAAO4S,KAAK5S,KAGZolE,GAAiB,CAIrB,IAHa,OAATplE,OAAiC,KAATA,IACxBA,EAAO,IAEP4S,KAAK4wD,SAAU,CAEf,IAAK,GADDA,GAAW,GACN13E,EAAI,EAAGA,EAAIkU,EAAKrU,OAAQG,IAC7B03E,GAAY,GAEhBxjE,GAAOwjE,EA8CX,MA5CI5wD,MAAKmxD,WAAa/jE,EAAKrU,OAASinB,KAAKmxD,YACrC/jE,EAAOA,EAAKlO,UAAU,EAAG8gB,KAAKmxD,YAElC1D,EAAUnD,SAAWtqD,KAAKsqD,SACrBtqD,KAAKsqD,WACNjwB,EAASqB,IAAIj3B,qBAAqB,MAClC41B,EAASuN,0BAEE,OAAXxzC,OAAqC,KAAXA,GAA0BA,YAAkBo4D,KAAuBp4D,EAAOm0D,kBACpGiK,GAAiB,GAEjBA,GAAkC,OAAhBp+D,EAAOG,UAAwC,KAAhBH,EAAOG,KAEnC,KADrB+9D,EAAUl+D,EAAOG,MACL9Z,OACR63E,EAAQjrD,MAAQ,EAChBirD,EAAQhjC,aAAajoB,MAAQ,OAGN,KAAfrH,KAAKqJ,OAAwC,OAAfrJ,KAAKqJ,QAC/CrJ,KAAKqJ,MAAQrJ,KAAK4oD,cAElB4J,GAA2C,OAAzBp+D,EAAOw9D,mBAA0D,KAAzBx9D,EAAOw9D,cACjEW,EAAeA,EAAe,GAAIztD,IAAgB1Q,EAAOw9D,cAAepsD,uBAAqB29B,YAE1D,KAAvBnjC,KAAKwwD,eAAwD,OAAvBxwD,KAAKwwD,oBACrB,KAAvBxwD,KAAK4xD,eAAwD,OAAvB5xD,KAAK4xD,cAClD5xD,KAAKwwD,cAAgB,GAAI1rD,IAAgB9E,KAAK4xD,cAAepsD,uBAAqB29B,QAGlFnjC,KAAKwwD,cAAgB,GAAI1rD,IAAgB9G,mBAAiB9jB,KAAMsrB,uBAAqB29B,SAGzFxmC,GAAyBvP,KACzB4S,KAAKwwD,cAAcxhC,cAAgBxwB,mBAAiByG,aAEpDutD,EACAxyD,KAAKyyD,aAAap4B,EAAUozB,EAAWrgE,EAAMklE,EAASC,EAAcvyD,KAAK+wC,UAAW/wC,KAAK0yD,WAAY1yD,KAAKmxD,WAG1GnxD,KAAKyyD,aAAap4B,EAAUozB,EAAWrgE,EAAM4S,KAAKqJ,MAAOrJ,KAAKwwD,cAAexwD,KAAK+wC,UAAW/wC,KAAK0yD,WAAY1yD,KAAKmxD,WAElHnxD,KAAKsqD,UACNjwB,EAASqB,IAAIh3B,qBAEVvZ,GAEX2lD,EAAgB98C,UAAUy+D,aAAe,SAAUluE,EAAGkpE,EAAWrgE,EAAMmH,EAAMsS,EAAQ8rD,EAAWC,EAAQzB,GACpG,OAAyB,KAAdA,EACP,GAAI1D,EAAU4E,aAAc,CACxB,GAAIzvE,GAAQ,CACZ,QAAyB,KAAduuE,GAA6BA,EAAY,GAAKnxD,KAAKmsD,YAAa,CACvEvpE,EAAQ6qE,EAAUx0D,OAAO,GAAKk4D,EAC9B5sE,EAAEu4C,cAAc2wB,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUG,UAAWH,EAAUC,UAEnI,KAAK,GADD7vE,GAAUuP,EACLlU,EAAI,EAAGA,EAAIi4E,EAAWj4E,IAAK,CAChC,GAAI2tB,EAAOvB,YAActH,mBAAiB7F,MAElC/K,EADA+jE,EAAYtzE,EAAQ9E,QAAUG,EACvB2E,EAAQ3E,GAAKi4E,EAAYtzE,EAAQ9E,SAGjC,OAIX,IAAI8tB,EAAOvB,YAActH,mBAAiBmoC,QAAUtoD,EAAQ9E,OAASo4E,EAAW,CAC5E,GAAI0B,GAAgBx6E,KAAK8iB,MAAMg2D,EAAY,EAAI94E,KAAK6Q,KAAKrL,EAAQ9E,OAAS,GAEtEqU,GADAlU,GAAK25E,GAAiB35E,EAAI25E,EAAgBh1E,EAAQ9E,OAC3C8E,EAAQ3E,EAAI25E,GAGZ,OAKPzlE,GADAvP,EAAQ9E,OAASG,EACV2E,EAAQzE,OAAOC,SAASH,EAAEI,WAAY,KAGtC,EAInBm0E,GAAUx0D,OAAO,GAAKrW,CACtB,IAAI2vE,GAAe,GAAIztD,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,OACrFnjC,MAAKyyD,aAAaluE,EAAGkpE,EAAWrgE,EAAMmH,EAAMg+D,EAAcI,EAAWC,GACrEnF,EAAUx0D,OAAO,GAAKw0D,EAAUx0D,OAAO,GAAKrW,EACxC6qE,EAAUI,aACVtpE,EAAE8iD,SAASomB,EAAUG,UAAWH,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAKw0D,EAAUx0D,OAAO,SAK9I+G,MAAKyyD,aAAaluE,EAAGkpE,EAAWrgE,EAAMmH,EAAMsS,EAAQ8rD,EAAWC,OAInE5yD,MAAKyyD,aAAaluE,EAAGkpE,EAAWrgE,EAAMmH,EAAMsS,EAAQ8rD,EAAWC,OAGlE,CACGruE,EAAEsiE,qBAAuB4G,EAAUnD,WACnC/lE,EAAEg2C,OACFh2C,EAAEqjD,0BAED6lB,EAAU4E,cACXryD,KAAKwtD,wBAAwBjpE,EAAGkpE,GAEhClpE,EAAEsiE,qBAAuB4G,EAAUnD,WACnC/lE,EAAEm2C,UACFn2C,EAAEg2C,OACFh2C,EAAEm3C,IAAIj3B,qBAAqB,MAC3BlgB,EAAEqjD,yBAEN,IAAInlD,IAAagrE,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,IAC7FiE,EAAS8C,KAAK9C,MAYlB,IAXe,OAAXA,OAAqC,KAAXA,GAAqC,KAAXA,IACpDza,EAAU,GAAKA,EAAU,GAAK,GAE9BgrE,EAAU/C,cAAgB1lE,iBAAeG,SAAWsoE,EAAU/C,cAAgB1lE,iBAAeI,OAC7F3C,EAAU,GAAKA,EAAU,GAAK,EAAIgrE,EAAUI,YAC5CprE,EAAU,GAAKA,EAAU,GAAK,EAAIgrE,EAAUI,cAG5CprE,EAAU,GAAKA,EAAU,GAAK,EAAIgrE,EAAUI,YAC5CprE,EAAU,GAAKA,EAAU,GAAK,EAAIgrE,EAAUI,aAE5C8E,EAAW,CACX,GAIIzhD,QAJgC,KAAXrK,GAAqC,OAAXA,GAA0C,IAAvBA,EAAOnB,YACzEnR,EAAKuW,SAAS5D,aACdL,EAAOnB,aACEnR,EAAKuW,SAASlE,WAAWC,EAElCzZ,GAAKlN,QAAQ,MACQ,IAAjBuC,EAAU,IAA6B,IAAjBA,EAAU,KAChCA,EAAU,KAAOA,EAAU,GAAKyuB,IAMpCu8C,EAAUqF,gBACoB,IAA1BrF,EAAUI,cACVprE,EAAU,GAAKA,EAAU,GAAK,IAAMgrE,EAAUI,aAI1D,GAAKtpE,EAAE4U,WACyB,KAArB5U,EAAE4U,MAAM/e,UACfmK,EAAE4U,MAAM/e,WAAaC,mBAAiBme,QACtCi1D,EAAU5C,cAAgB,EAAG,CAC7B,GAAIrgE,GAAQjG,EAAEg2C,MACd,QAA2C,KAAhCkzB,EAAU8B,mBAAqC9B,EAAU8B,oBAAsBl1E,mBAAiBme,OACvG,GAAIi1D,EAAU8B,oBAAsBl1E,mBAAiBC,QAAS,CAC1DiK,EAAEi2C,mBAAmBj2C,EAAE8iB,MAAM,GAAI,GACjC9iB,EAAE6jD,gBAAgB,GAClB,IAAIzlD,GAAI4B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,GAE/CA,IADIC,EAAID,EAAU,GACFE,EAAGF,EAAU,GAAIA,EAAU,QAEtCgrE,GAAU8B,oBAAsBl1E,mBAAiBE,UACtDgK,EAAEi2C,mBAAmBj2C,EAAE8iB,MAAM,GAAI9iB,EAAE8iB,MAAM,IACzC9iB,EAAE6jD,iBAAiB,KAGnB3lD,GAFIC,EAAI6B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC3CE,EAAI4B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC5BA,EAAU,GAAIA,EAAU,KAEtCgrE,EAAU8B,oBAAsBl1E,mBAAiBG,WACtD+J,EAAEi2C,mBAAmB,EAAGj2C,EAAE8iB,MAAM,IAChC9iB,EAAE6jD,gBAAgB,KAGlB3lD,GAFIC,EAAI6B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC3CE,EAAIF,EAAU,GACCA,EAAU,GAAIA,EAAU,IAGnD,IAAIgrE,EAAU5C,cACV,GAAgC,KAA5B4C,EAAU5C,cACV,GAAI4C,EAAU8B,oBAAsBl1E,mBAAiBC,QACjDiK,EAAEi2C,mBAAmB,EAAGj2C,EAAE8iB,MAAM,IAChC9iB,EAAE6jD,iBAAiB,IAGnB3lD,GAFIC,EAAI6B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC3CE,EAAIF,EAAU,GACCA,EAAU,GAAIA,EAAU,IAC3CgrE,EAAU8E,aAAe,GAAIztD,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,YAG3F,IAAI1gD,EAAU,GAAKA,EAAU,GACzB8B,EAAEi2C,mBAAmB,EAAGj2C,EAAE8iB,MAAM,IAChC9iB,EAAE6jD,iBAAiB,KACnB3lD,GAAagrE,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,KACnF,GAAMxW,EAAU,GAAK,EAAM,EAAIgrE,EAAUI,gBAElD,CACD,GAAI6B,GAAIjtE,EAAU,EAClBA,GAAU,KAAOA,EAAU,GAAKA,EAAU,IAC1CA,EAAU,GAAKitE,CACf,IAAIz1E,GAASwI,EAAU,EACvBA,GAAU,GAAKA,EAAU,GAAK8R,EAAKuW,SAAS5D,aAAezkB,EAAU,GAAK8R,EAAKuW,SAAS5D,aACxFzkB,EAAU,GAAKxI,EACfsK,EAAE6jD,iBAAiB,QAI1B,IAAgC,MAA5BqlB,EAAU5C,cACftmE,EAAEi2C,mBAAmBj2C,EAAE8iB,MAAM,GAAI,GACjC9iB,EAAE6jD,iBAAiB,MACnB3lD,GAAagrE,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,KACnF,GAAMxW,EAAU,GAAK,EAAM,EAAIgrE,EAAUI,gBAElD,IAAgC,MAA5BJ,EAAU5C,cAAuB,CACtCtmE,EAAEi2C,mBAAmBj2C,EAAE8iB,MAAM,GAAI9iB,EAAE8iB,MAAM,IACzC9iB,EAAE6jD,iBAAiB,IACnB,IAAI1lD,GAAI6B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,GAE/CA,IAAaC,EADTC,EAAI4B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC5BA,EAAU,GAAIA,EAAU,IAGnD8B,EAAEw9C,WAAW30C,EAAMmH,EAAM9R,EAAW,KAAMgrE,EAAUmB,UAAW/nD,GAC/DtiB,EAAEm2C,QAAQlwC,OAGVjG,GAAEw9C,WAAW30C,EAAMmH,EAAM9R,EAAW,KAAMgrE,EAAUmB,UAAW/nD,EAE/DtiB,GAAEsiE,qBAAuB4G,EAAUnD,WACnC/lE,EAAEm3C,IAAIh3B,qBACNngB,EAAEm2C,aAIPoW,GACT35C,IAqBEszD,GAAgC,SAAU5iD,GAE1C,QAAS4iD,GAAezwE,EAAMmO,EAAM8Q,GAChC,GAAI8O,GAAQF,EAAO5T,KAAK+L,OAASA,IAIjC,OAHIhmB,IAAQmO,GAAQ8Q,GAChB8O,EAAMoB,YAAYnvB,EAAMmO,EAAM8Q,GAE3B8O,EAirBX,MAvrBA9B,IAAUwkD,EAAgB5iD,GAQ1B9T,OAAO+H,eAAe2uD,EAAez2D,UAAW,WAmB5C7R,IAAK,WAID,MAHK6d,MAAK+yD,WACN/yD,KAAK+yD,SAAW,GAAIrL,IAAgB1nD,OAEjCA,KAAK+yD,UAEhBh3D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe2uD,EAAez2D,UAAW,QAkB5C7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,OAA0B,KAAfoK,KAAK+M,MAAuB,CACnC,GAAI3Y,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1Bv8C,IAAUA,EAAOy3D,eAAiBz3D,EAAOy3D,cAAc7pE,IAAI,MAC3Dge,KAAK+M,MAAQ3Y,EAAOy3D,cAAc1pE,IAAI,MAEjC6d,KAAK6rD,eAAiB7rD,KAAK6rD,cAAc7pE,IAAI,QAClDge,KAAK+M,MAAQ/M,KAAK6rD,cAAc1pE,IAAI,OAG5C,OAA0B,KAAf6d,KAAK+M,MAAuB,CACnC,GAAI50B,GAAQmJ,EAAwB0e,KAAK1U,YAAa,KAAK,GAAO,EAC9DnT,KACA6nB,KAAK+M,MAAQ50B,IAOzB,WAH0B,KAAf6nB,KAAK+M,QACZ/M,KAAK+M,MAAQ,IAEV/M,KAAK+M,OAmBhBtsB,IAAK,SAAUtI,GAUX,GATI6nB,KAAKpK,YAAcoK,KAAKnkB,YACpBuY,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,iBAChBv8C,EAAO9I,YACjB0U,KAAKgzD,YAAY5+D,EAAO9I,YAAanT,GAGrC6nB,KAAKgzD,YAAYhzD,KAAK1U,YAAanT,KAGtC6nB,KAAKpK,WAAaoK,KAAK+M,QAAU50B,EAAO,CACzC,GAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC9B3wC,MAAKgzD,YAAY5+D,EAAO9I,YAAanT,GACrC6nB,KAAK+M,MAAQ50B,IAGrB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe2uD,EAAez2D,UAAW,iBAkB5C7R,IAAK,WACD,MAAO6d,MAAKqwD,qBAmBhB5vE,IAAK,SAAUtI,GACP6nB,KAAKswD,iBAAmBn4E,GACxB6nB,KAAKuwD,kBAAkBp4E,IAG/B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe2uD,EAAez2D,UAAW,iBAkB5C7R,IAAK,WACD,GACIwE,GADAyN,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAS9B,OAPIv8C,QAA0C,KAAzBA,EAAO68D,cACxBtqE,EAAOyN,EAAO68D,cAETjxD,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,OAE9C2E,EAAOD,EADSsZ,KAAK1U,YAAYnJ,IAAI,KACFgG,WAEf,KAATxB,EAAwBA,EAAOC,mBAAiBG,QAmBnEtG,IAAK,SAAUtI,GACX,GAAIic,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,gBAC1Bv8C,OAA2C,KAAzBA,EAAO68D,eAAiC78D,EAAO68D,gBAAkB94E,EAG7E6nB,KAAK1U,YAAYtJ,IAAI,MAAQ0E,EAAkBsZ,KAAK1U,YAAYnJ,IAAI,QAAUhK,GACpF6nB,KAAK1U,YAAY9C,OAAO,IAAKxB,EAAyB7O,IAHtDic,EAAO68D,cAAgB94E,GAM/B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe2uD,EAAez2D,UAAW,QAmB5C7R,IAAK,WACD,GAAI6d,KAAKqJ,MACL,MAAOrJ,MAAKqJ,KAGZ,IAAIjV,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAGlC,OAFI3wC,MAAKqJ,MAAQnV,GAAmB8L,KAAKkpD,MAAO90D,EAAQ4L,MAEjDA,KAAKqJ,OAoBhB5oB,IAAK,SAAUtI,GACPA,GAASA,YAAiBi3C,MAC1BpvB,KAAKqJ,MAAQlxB,EACb6nB,KAAKqtD,gBAAgBl1E,KAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe2uD,EAAez2D,UAAW,aAkB5C7R,IAAK,WACD,MAAO6d,MAAKiqD,iBAAgB,IAuBhCxpE,IAAK,SAAUtI,GACX6nB,KAAKkqD,iBAAiB/xE,GAAO,IAEjC4jB,YAAY,EACZC,cAAc,IAElByuD,EAAez2D,UAAUg/D,YAAc,SAAUC,EAAiB96E,GAC9D,GAAIoJ,EACA0xE,IAAmBA,EAAgBjxE,IAAI,MACvCT,EAAa0xE,EAAgB9wE,IAAI,OAGjCZ,EAAa,GAAIO,IAAeke,KAAKtU,iBACrCunE,EAAgBxyE,IAAI,KAAMc,IAE9BA,EAAWiH,OAAO,KAAMrQ,GACxB86E,EAAgB1gE,UAAW,GAY/Bk4D,EAAegC,MAAQ,SAAUt4D,EAAM5S,EAAYkS,EAAgBvJ,GAC/D,GAAImK,GAAQ,GAAIo2D,EAWhB,OAVAp2D,GAAMuB,WAAY,EAClBvB,EAAM60D,MAAQ/0D,EACdE,EAAM/I,YAAc/J,EACpB8S,EAAM3I,gBAAkB+H,EACxBY,EAAM0mD,KAAO7wD,EACTmK,EAAM/I,YAAYtJ,IAAI,UACtBqS,EAAM40D,MAAQ50D,EAAM/I,YAAYnJ,IAAI,SAExCkS,EAAMs8C,cAAgB,EACtBt8C,EAAMk4D,aAAe,GAAIzkC,KAClBzzB,GAEXo2D,EAAez2D,UAAUmV,YAAc,SAAUnvB,EAAMmO,EAAM8Q,GACzD+G,KAAKtU,gBAAkB1R,EAAK0R,gBAC5BsU,KAAK7G,MAAQnf,EACbgmB,KAAKgS,MAAQ7pB,EACb6X,KAAK2wC,cAAgB,EACrB3wC,KAAK1U,YAAc,GAAIxJ,IAAeke,KAAKtU,iBAC3CsU,KAAK+6C,KAAO/6C,KAAKtU,gBAAgB00C,oBACjCpgC,KAAKtU,gBAAgB2H,UAAU5S,IAAIuf,KAAK+6C,KAAM/6C,KAAK1U,aACnD0U,KAAK1U,YAAYvJ,MAAQie,KAAK+6C,KAAKzhE,WACnC0mB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,QAC3C6d,KAAK1U,YAAY9C,OAAO,IAAKL,GAC7B6X,KAAKqqD,aAAejsD,aAAW80D,WAC/BlzD,KAAKqtD,gBAAgBrtD,KAAK4oD,cAC1B5oD,KAAK0xD,YAAYz4D,IAErBwxD,EAAez2D,UAAU09D,YAAc,SAAUz4D,GAC7C,GAAI7E,GAAS,GAAIo4D,GACjBp4D,GAAOu9D,QAAQ3xD,KAAK7G,MAAOF,EAAQ+G,MACnC5L,EAAOw9D,cAAgB5zD,mBAAiBmoC,OACxCnmC,KAAKwwD,cAAgB,GAAI1rD,IAAgB1Q,EAAOw9D,cAAepsD,uBAAqB29B,QACpF/uC,EAAO9I,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBACxD0I,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAOy3D,cAAcrjE,OAAO,MAAO,QAAS,QAAS,UACrD4L,EAAOy3D,cAAcrjE,OAAO,SAA6B,KAAfwX,KAAKgS,OAAwC,OAAfhS,KAAKgS,MAAkBhS,KAAKgS,MAAQhS,KAAKopD,aACjHppD,KAAK2vD,UAAUv7D,IAEnBq2D,EAAez2D,UAAU89D,eAAiB,SAAUC,GAEhD,OADkB,KAAdA,IAAwBA,GAAY,GACpCA,GAAa/xD,KAAK2sD,gBAAkB3sD,KAAKkpD,MAAMyD,eAAgB,CAC/D,GAAI1jE,GAAQ+W,KAAKk0C,UACjB,IAAIl0C,KAAKpK,UACL,GAAI3M,EAAQ,EACR,IAAS/P,EAAI,EAAGA,EAAI+P,EAAO/P,KACnBgS,EAAO8U,KAAK0wC,OAAOx3D,KAEnB8mB,KAAKgyD,aAAaD,EAAW7mE,QAI/B6mE,GAAa/xD,KAAKkpD,MAAMyD,gBAAkB3sD,KAAK2sD,kBAAoB3sD,KAAKotD,gBAAgBptD,KAAK1U,cACnG0U,KAAKgyD,aAAaD,OAGrB,IAAIA,GAAa/xD,KAAKkpD,MAAMyD,gBAAkB3sD,KAAK2sD,eACpD,IAAK,GAAIzzE,GAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,EACvB,IAAIgS,IAAS8U,KAAKotD,gBAAgBliE,EAAKI,aAAc,CACjD,GAAIH,GAAW6U,KAAKiyD,kBAAkB/mE,EACtC,IAAI6mE,EACA/xD,KAAK6vD,cAAc1kE,EAAUD,EAAK4hE,YAAcpqE,EAAGwI,EAAK+N,OAAOvW,EAAGC,EAAGuI,EAAK+N,OAAOtW,EAAGC,MAAOuI,EAASkc,MAAM,GAAIptB,OAAQkR,EAASkc,MAAM,SAEpI,CACDrH,KAAKkwD,eAAehlE,EAAKI,YAAaH,EAAU,IAChD,IAAIgoE,GAAUnzD,KAAKiyD,kBAAkB/mE,GAAM,EACvCioE,IACAnzD,KAAKkwD,eAAehlE,EAAKI,YAAa6nE,EAAS,KAGvDjoE,EAAKI,YAAYiH,UAAYw/D,GAIrCA,IACA/xD,KAAK1U,YAAYiH,UAAW,KAIxCk4D,EAAez2D,UAAUg+D,aAAe,SAAUD,EAAW39D,GACzD,GAAIjJ,GACA8N,EACArgB,EAASwb,GAAkB4L,IAC/B,IAAgB,OAAX5L,OAAqC,KAAXA,GAA0BA,EAAOu4D,gBAAkBv4D,EAAOm0D,iBAAoBvoD,KAAKkpD,MAAMyD,gBAAkB3sD,KAAK2sD,gBAAmBoF,IAAcn5E,EAAO0S,YAAYtJ,IAAI,MACnMmJ,EAAW6U,KAAKiyD,kBAAkBr5E,OAEjC,IAAIA,EAAO0S,YAAYtJ,IAAI,MAAO,CACnC,GAAIkwE,OAAmB,GACnB3wE,EAAa3I,EAAO0S,YAAYnJ,IAAI,KACxC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,KACAgoE,EAAiBhoE,UAAYA,GAE7BgoE,IACA/mE,EAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,mBAI9D,GAAIP,EACA,GAAI4mE,EAAW,CACX,GAAI/3E,GAAOpB,YAAkB4zE,IAAsB5zE,EAAOk0E,WAAal0E,EAAOoB,IAC9E,IAAIA,EAAM,CACN,GAAIqgD,GAAWrgD,EAAKqgD,QACpBA,GAASE,OACLvgD,EAAKI,WAAaC,mBAAiBC,SACnC+/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,gBAAgB,KAEpBpuD,EAAKI,WAAaC,mBAAiBE,UACxC8/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,iBAAiB,MAErBpuD,EAAKI,WAAaC,mBAAiBG,WACxC6/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,gBAAgB,MAE7BnvC,GAAWvW,EAAG9J,EAAOqgB,OAAOvW,EAAGC,EAAG/J,EAAOqgB,OAAOtW,EAAGC,MAAOuI,EAASkc,MAAM,GAAIptB,OAAQkR,EAASkc,MAAM,IACpGgzB,EAASqE,aAAavzC,EAAU8N,GAChCohC,EAASK,UAEb9hD,EAAO0S,YAAYiH,UAAW,MAG9ByN,MAAKkwD,eAAet3E,EAAO0S,YAAaH,EAAU,MAI9Ds/D,EAAez2D,UAAUi+D,kBAAoB,SAAU79D,EAAQg/D,OACzC,KAAdA,IAAwBA,GAAY,EACxC,IAAIn6D,GAAS7E,EAAO6E,OAChB9N,EAAW,GAAIM,KAAa,EAAG,EAAGwN,EAAOrW,MAAOqW,EAAOhf,QAAS+lB,KAAKtU,iBACrE+hE,EAAY,GAAI0E,GACpB1E,GAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,OAC/C,IAAImT,GACAmH,EACAg+D,EACAC,GAAiB,EACjBa,GAAa,EACbjB,EAAYh+D,EAAO43D,SACnBoG,KACA3E,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS1uC,EAAOpQ,MAC1C,IAAIumE,GAASn2D,EAAOm2D,MAMpB,IALIn2D,EAAO+3D,cACPsB,EAAUG,UAAY,GAAI/qB,IAAOzuC,EAAO+3D,YAAa5B,EAAO3nE,QAEhE6qE,EAAUI,YAActD,EAAO3nE,MAC/B6qE,EAAU/C,YAAcH,EAAOzlE,MAC3BstE,EAAW,CACX,GAAIrD,IAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,IACpEpuE,GAAS+qE,EAAY,IAAM,EAAIA,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAqBzC,GAnBAypE,EAAU5C,cAAgBz2D,EAAO8I,OAClB,OAAX9I,OAAqC,KAAXA,GAA0BA,YAAkBo4D,KAAuBp4D,EAAOm0D,kBACpGiK,GAAiB,GAEjBA,GAEIplE,EADAgH,EAAOy3D,eAAiBz3D,EAAOy3D,eAAiBz3D,EAAOy3D,cAAc7pE,IAAI,MAClEoS,EAAOy3D,cAAc1pE,IAAI,MAGzB,OAEgB,KAAhBiS,EAAOG,MAA6C,OAArBH,EAAOG,KAAK9Z,MAAsC,IAArB2Z,EAAOG,KAAK9Z,OAC/E8Z,EAAOH,EAAOG,MAElBg+D,EAAe,GAAIztD,IAAgB1Q,EAAOw9D,cAAepsD,uBAAqB29B,aAEnD,KAAfnjC,KAAKqJ,OAAwC,OAAfrJ,KAAKqJ,QAC/CrJ,KAAKqJ,MAAQrJ,KAAK4oD,cAElB5oD,KAAKpK,WAAaxB,YAAkBo4D,KACzB,OAAXp4D,OAAqC,KAAXA,GAA0BA,EAAO01D,mBAAoB,CAC/E,GAAIzlB,GAAWjwC,EAAO01D,mBAAmBzlB,QACxB,QAAbA,OAAyC,KAAbA,IAC5BA,EAAW,YAEf,IAAI/vC,GAAWF,EAAO01D,mBAAmBx1D,QACxB,QAAbA,OAAyC,KAAbA,EAC5BA,EAAW0L,KAAK4oD,aAAanuE,KAEX,IAAb6Z,IACL++D,GAAa,EAEjB,IAEIC,GAFAC,MAAe,GACfC,MAAc,EAElBxzD,MAAKwwD,cAAgB,GAAI1rD,IACzB9E,KAAKwwD,cAAcjrD,cAAgBC,uBAAqB29B,OACxDnjC,KAAKwwD,cAAclrD,UAAYtH,mBAAiBmoC,OAC/B,OAAb7xC,OAAyC,KAAbA,GAA4B+vC,IACxDivB,EAASl+D,GAASivC,EAAU/vC,EAAUjD,eAAa4D,QAASb,GAQhE,IAAIq/D,IALAD,EADW,OAAXF,OAAqC,KAAXA,EACZA,EAGAtzD,KAAK4oD,cAEK94B,cAAc9vB,KAAK5S,KAAM4S,KAAKwwD,cAC1D,IAAI6C,GAAcG,GAAeA,YAAuBn+D,KAChD2K,KAAKpK,YAAcxB,EAAO9I,YAAYtJ,IAAI,MAAO,CAGjD,IAFA,GAAIY,GAAQwR,EAAO6E,OAAOrW,MAAQ,EAAI2nE,EAAO3nE,MACzC3I,EAASma,EAAO6E,OAAOhf,OAAS,EAAIswE,EAAO3nE,MACxC6wE,EAAU,GAAK7wE,GAAS6wE,EAAU,GAAKx5E,GAI1C,GAHAs5E,EAAeC,EACfA,EAAc,GAAIn+D,IAAgBm+D,EAAY/+D,WAAY++D,EAAYnsD,MAAQ,IAC9EosD,EAAYD,EAAY1jC,cAAc9vB,KAAK5S,KAAM4S,KAAKwwD,gBACxC,GAAK5tE,GAAS6wE,EAAU,GAAKx5E,EAAQ,CAC/Cu5E,EAAcD,CACd,OAGRvzD,KAAKqJ,MAAQmqD,GAoBzB,MAhBIhB,GACIY,EACApzD,KAAK0zD,mBAAmBvoE,EAASkvC,SAAUozB,EAAWrgE,EAAMmH,EAAMg+D,GAGlEvyD,KAAK2zD,YAAYxoE,EAASkvC,SAAUozB,EAAWrgE,EAAMmH,EAAMg+D,GAI3Da,EACApzD,KAAK0zD,mBAAmBvoE,EAASkvC,SAAUozB,EAAWztD,KAAK5S,KAAM4S,KAAKqJ,MAAOrJ,KAAKwwD,eAGlFxwD,KAAK2zD,YAAYxoE,EAASkvC,SAAUozB,EAAWztD,KAAK5S,KAAM4S,KAAKqJ,MAAOrJ,KAAKwwD,eAG5ErlE,GAEXs/D,EAAez2D,UAAU2/D,YAAc,SAAUpvE,EAAGkpE,EAAWrgE,EAAMmH,EAAMsS,GACvE7G,KAAKwtD,wBAAwBjpE,EAAGkpE,EAChC,IAAIhrE,GAAYgrE,EAAUx0D,MAC1B,IAAK1U,EAAE4U,WACyB,KAArB5U,EAAE4U,MAAM/e,UACfmK,EAAE4U,MAAM/e,WAAaC,mBAAiBme,QACtCi1D,EAAU5C,cAAgB,EAAG,CAC7B,GAAIrgE,GAAQjG,EAAEg2C,MACd,QAA2C,KAAhCkzB,EAAU8B,mBAAqC9B,EAAU8B,oBAAsBl1E,mBAAiBme,OACvG,GAAIi1D,EAAU8B,oBAAsBl1E,mBAAiBC,QAAS,CAC1DiK,EAAEi2C,mBAAmBj2C,EAAE8iB,MAAM,GAAI,GACjC9iB,EAAE6jD,gBAAgB,GAClB,IAAIzlD,GAAI4B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,GAE/CA,IADIC,EAAID,EAAU,GACFE,EAAGF,EAAU,GAAIA,EAAU,QAEtCgrE,GAAU8B,oBAAsBl1E,mBAAiBE,UACtDgK,EAAEi2C,mBAAmBj2C,EAAE8iB,MAAM,GAAI9iB,EAAE8iB,MAAM,IACzC9iB,EAAE6jD,iBAAiB,KAGnB3lD,GAFIC,EAAI6B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC3CE,EAAI4B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC5BA,EAAU,GAAIA,EAAU,KAEtCgrE,EAAU8B,oBAAsBl1E,mBAAiBG,WACtD+J,EAAEi2C,mBAAmB,EAAGj2C,EAAE8iB,MAAM,IAChC9iB,EAAE6jD,gBAAgB,KAGlB3lD,GAFIC,EAAI6B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC3CE,EAAIF,EAAU,GACCA,EAAU,GAAIA,EAAU,IAGnD,IAAIgrE,EAAU5C,cACV,GAAgC,KAA5B4C,EAAU5C,cACV,GAAI4C,EAAU8B,oBAAsBl1E,mBAAiBC,QACjDiK,EAAEi2C,mBAAmB,EAAGj2C,EAAE8iB,MAAM,IAChC9iB,EAAE6jD,iBAAiB,IAGnB3lD,GAFIC,EAAI6B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC3CE,EAAIF,EAAU,GACCA,EAAU,GAAIA,EAAU,QAG3C,IAAIA,EAAU,GAAKA,EAAU,GACzB8B,EAAEi2C,mBAAmB,EAAGj2C,EAAE8iB,MAAM,IAChC9iB,EAAE6jD,iBAAiB,IACnB3lD,GAAagrE,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,QAE5F,CACD,GAAIy2D,GAAIjtE,EAAU,EAClBA,GAAU,KAAOA,EAAU,GAAKA,EAAU,IAC1CA,EAAU,GAAKitE,CACf,IAAIz1E,GAASwI,EAAU,EACvBA,GAAU,GAAKA,EAAU,GAAK8R,EAAKuW,SAAS5D,aAAezkB,EAAU,GAAK8R,EAAKuW,SAAS5D,aACxFzkB,EAAU,GAAKxI,EACfsK,EAAE6jD,iBAAiB,QAI1B,IAAgC,MAA5BqlB,EAAU5C,cACftmE,EAAEi2C,mBAAmBj2C,EAAE8iB,MAAM,GAAI,GACjC9iB,EAAE6jD,iBAAiB,KAGnB3lD,GAFIC,EAAID,EAAU,GACdE,EAAI4B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC5BA,EAAU,GAAIA,EAAU,QAE1C,IAAgC,MAA5BgrE,EAAU5C,cAAuB,CACtCtmE,EAAEi2C,mBAAmBj2C,EAAE8iB,MAAM,GAAI9iB,EAAE8iB,MAAM,IACzC9iB,EAAE6jD,iBAAiB,IACnB,IAAI1lD,GAAI6B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,GAE/CA,IAAaC,EADTC,EAAI4B,EAAE8iB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAC5BA,EAAU,GAAIA,EAAU,IAGnD8B,EAAEw9C,WAAW30C,EAAMmH,EAAM9R,EAAW,KAAMgrE,EAAUmB,UAAW/nD,GAC/DtiB,EAAEm2C,QAAQlwC,OAGVjG,GAAEw9C,WAAW30C,EAAMmH,EAAM9R,EAAW,KAAMgrE,EAAUmB,UAAW/nD,IAGvE4jD,EAAez2D,UAAU0/D,mBAAqB,SAAUnvE,EAAGkpE,EAAWrgE,EAAMmH,EAAMsS,GAC9E,OAAQ4mD,EAAU/C,aACd,IAAK1lE,kBAAeI,MAChBb,EAAEu4C,cAAc2wB,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUU,YAC9G,MACJ,SACI5pE,EAAEu4C,cAAc2wB,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,GAAIw0D,EAAUC,WAGtH1tD,KAAK2tD,YAAYppE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUG,UAAWH,EAAU/C,YAAa+C,EAAUI,YAC5F,IAAIprE,IAAagrE,EAAUI,YACvBJ,EAAUI,YACVJ,EAAUx0D,OAAO,GAAKw0D,EAAUI,YAChCJ,EAAUx0D,OAAO,GAAKw0D,EAAUI,YAEpC,QADAtpE,EAAEw9C,WAAW30C,EAAMmH,EAAM9R,EAAW,KAAMgrE,EAAUmB,UAAW/nD,GACvD4mD,EAAU/C,aACd,IAAK1lE,kBAAeI,MAChB4a,KAAK8tD,mBAAmBvpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAK+tD,YACzE/tD,KAAKguD,uBAAuBzpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKiuD,aAC7E,MACJ,KAAKjpE,kBAAeG,QAChB6a,KAAK8tD,mBAAmBvpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAaJ,EAAUU,aAC9EnuD,KAAKguD,uBAAuBzpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAa7tD,KAAKkuD,YAC7E,MACJ,SACIluD,KAAK8tD,mBAAmBvpE,EAAGkpE,EAAUx0D,OAAQw0D,EAAUI,YAAaJ,EAAUU,eAInF1D,GACTtzD,IAyBEq5C,GAAkC,SAAU3oC,GAE5C,QAAS2oC,GAAiBroD,EAAM8Q,EAAQjf,GACpC,GAAI+tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAIjC,OAHIhmB,IAAQmO,GAAQ8Q,GAChB8O,EAAMoB,YAAYnvB,EAAMmO,EAAM8Q,GAE3B8O,EA+gBX,MArhBA9B,IAAUuqC,EAAkB3oC,GAkB5B2oC,EAAiBic,MAAQ,SAAUt4D,EAAM5S,EAAYkS,EAAgBvJ,GACjE,GAAImK,GAAQ,GAAIm8C,EAQhB,IAPAn8C,EAAMuB,WAAY,EAClBvB,EAAM60D,MAAQ/0D,EACdE,EAAM/I,YAAc/J,EACpB8S,EAAM3I,gBAAkB+H,EACxBY,EAAM0mD,KAAO7wD,EACbmK,EAAMs8C,cAAgB,EACtBt8C,EAAMk4D,aAAe,GAAIzkC,KACrBzzB,EAAM/I,YAAYtJ,IAAI,QACtBqS,EAAM40D,MAAQ50D,EAAM/I,YAAYnJ,IAAI,YAEnC,CACD,GAAI+I,GAAO0oE,GAAanH,MAAMlrE,EAAYkS,EAAgBY,EAC1DnJ,GAAK0K,WAAY,EACjB1K,EAAK6vD,KAAO7wD,EACZmK,EAAMk4D,aAAa9rE,IAAI,EAAGyK,GAE9B,MAAOmJ,IAwBXm8C,EAAiBx8C,UAAU08C,OAAS,SAAU71D,GAC1C,GAAIA,EAAQ,GAAgB,IAAVA,GAAeA,GAASmlB,KAAKk0C,WAC3C,KAAMr6D,OAAM,sBAEhB,IAAIqR,EACJ,IAAI8U,KAAKusD,aAAavqE,IAAInH,GACtBqQ,EAAO8U,KAAKusD,aAAapqE,IAAItH,OAE5B,CACD,GAAI0G,OAAa,EACjB,IAAI1G,GAAS,GAAKmlB,KAAKipD,OAASjpD,KAAKipD,MAAMlwE,OAAS,GAAK8B,EAAQmlB,KAAKipD,MAAMlwE,OAAQ,CAChF,GAAIqR,GAAM4V,KAAKipD,MAAM7vE,OAAOC,SAASwB,EAAMvB,WAAY,IACnD8Q,IAAOA,YAAeC,MACtB9I,EAAaye,KAAKtU,gBAAgBwH,OAAO9I,IAEzC7I,KACA2J,EAAO0oE,GAAanH,MAAMlrE,EAAYye,KAAKtU,gBAAiBsU,OACvDpK,WAAY,EACjB1K,EAAK6vD,KAAO3wD,EACZ4V,KAAKusD,aAAa9rE,IAAI5F,EAAOqQ,KAIzC,MAAOA,IAEX6I,OAAO+H,eAAe00C,EAAiBx8C,UAAW,QAmB9C7R,IAAK,WACD,GAAI6d,KAAKqJ,MACL,MAAOrJ,MAAKqJ,KAGZ,IAAIjV,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAGlC,OAFI3wC,MAAKqJ,MAAQnV,GAAmB8L,KAAKkpD,MAAO90D,EAAQ4L,MAEjDA,KAAKqJ,OAoBhB5oB,IAAK,SAAUtI,GACPA,GAASA,YAAiBi3C,MAC1BpvB,KAAKqJ,MAAQlxB,EACb6nB,KAAKqtD,gBAAgBl1E,KAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe00C,EAAiBx8C,UAAW,WAsB9C7R,IAAK,WACD,MAAQ6d,MAAKk0C,WAAa,EAAKl0C,KAAK0wC,OAAO1wC,KAAK2wC,eAAetlD,QAAUf,EAAY0V,KAAK1U,cAuB9F7K,IAAK,SAAUtI,GACX,GAAI6nB,KAAK3U,UAAYlT,EAAO,CAIxB,GAHI6nB,KAAKk0C,WAAa,IAClBl0C,KAAK0wC,OAAO1wC,KAAK2wC,eAAetlD,QAAUlT,GAE1CA,EACA,GAAI6nB,KAAKpK,UAAW,CAChB,GAAIxR,GAAQsG,EAAesV,KAAKk0C,WAAa,EACzCl0C,KAAK0wC,OAAO1wC,KAAK2wC,eAAerlD,YAAc0U,KAAK1U,YACvD0U,MAAK1U,YAAY9C,OAAO,IAAKlD,GAASnD,IAAIiC,IAC1C4b,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAIiC,QAG3C4b,MAAK1U,YAAY9C,OAAO,IAAKlD,GAASnD,IAAI,QAC1C6d,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,YAI3C6d,MAAK1U,YAAYtJ,IAAI,YACdge,MAAK1U,YAAY+G,KAAKwhE,EAE7B7zD,KAAK1U,YAAYtJ,IAAI,aACdge,MAAK1U,YAAY+G,KAAKyhE,EAGrC9zD,MAAK1U,YAAYiH,UAAW,IAGpCwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe00C,EAAiBx8C,UAAW,iBAmB9C7R,IAAK,WACD,MAAO6d,MAAKqwD,qBAoBhB5vE,IAAK,SAAUtI,GACP6nB,KAAKswD,iBAAmBn4E,GACxB6nB,KAAKuwD,kBAAkBp4E,IAG/B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe00C,EAAiBx8C,UAAW,aAkB9C7R,IAAK,WACD,MAAO6d,MAAKiqD,iBAAgB,IAuBhCxpE,IAAK,SAAUtI,GACX6nB,KAAKkqD,iBAAiB/xE,GAAO,IAEjC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe00C,EAAiBx8C,UAAW,eAkB9C7R,IAAK,WACD,MAAO6d,MAAKmqD,mBAAkB,IAmBlC1pE,IAAK,SAAUtI,GACX6nB,KAAKoqD,mBAAmBjyE,GAAO,GAC3B6nB,KAAKpK,YACLoK,KAAK2sD,gBAAiB,IAG9B5wD,YAAY,EACZC,cAAc,IAElBw0C,EAAiBx8C,UAAUmV,YAAc,SAAUnvB,EAAMmO,EAAM8Q,GAC3D+G,KAAKtU,gBAAkB1R,EAAK0R,gBAC5BsU,KAAK7G,MAAQnf,EACbgmB,KAAKgS,MAAQ7pB,EACb6X,KAAK2wC,cAAgB,EACrB3wC,KAAK1U,YAAc,GAAIxJ,IAAeke,KAAKtU,iBAC3CsU,KAAK+6C,KAAO/6C,KAAKtU,gBAAgB00C,oBACjCpgC,KAAKtU,gBAAgB2H,UAAU5S,IAAIuf,KAAK+6C,KAAM/6C,KAAK1U,aACnD0U,KAAK1U,YAAYvJ,MAAQie,KAAK+6C,KAAKzhE,WACnC0mB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,QAC3C6d,KAAK1U,YAAY9C,OAAO,IAAKL,GAC7B6X,KAAK0xD,YAAYz4D,IAErBu3C,EAAiBx8C,UAAU09D,YAAc,SAAUz4D,GAC/C,GAAI7E,GAAS,GAAIw/D,GACjBx/D,GAAOu9D,QAAQ3xD,KAAK7G,MAAOF,EAAQ+G,MACnC5L,EAAOw9D,cAAgB5zD,mBAAiBmoC,OACxCnmC,KAAKwwD,cAAgB,GAAI1rD,IAAgB1Q,EAAOw9D,cAAepsD,uBAAqB29B,QACpF/uC,EAAO9I,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBACxD0I,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAOtP,MAAQwH,mBAAiB/B,MAChC6J,EAAO9I,YAAY9C,OAAO,KAAM,uBAChCwX,KAAK2vD,UAAUv7D,IAEnBo8C,EAAiBx8C,UAAU89D,eAAiB,SAAUC,OAChC,KAAdA,IAAwBA,GAAY,EACxC,IAAI9oE,GAAQ+W,KAAKk0C,UACjB,IAAKl0C,KAAKpK,WAiBL,GAAIm8D,GAAa/xD,KAAK2sD,gBAAkB3sD,KAAK1U,YAAYiH,UAAYyN,KAAKihD,UAC3E,GAAIh4D,EAAQ,EACR,IAAS/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,EACvB,IAAIgS,EAAM,CACN,IAAK8U,KAAKotD,gBAAgBliE,EAAKI,aAC3B,GAAIymE,EAAW,CACX,GAAI5mE,OAAW,GACXX,EAAQU,EAAKG,QACbD,sBAAoBC,QACpBD,sBAAoBkjE,SAEpBnjE,GADA6U,KAAK2sD,gBAAkB3sD,KAAKkpD,MAAMyD,iBAAmBzhE,EAAKI,YAAYtJ,IAAI,MAC/Dge,KAAKiyD,kBAAkB/mE,EAAMV,GAG7BS,EAAkBT,EAAOU,GAExC8U,KAAK6vD,cAAc1kE,EAAUD,EAAK4hE,WAAY5hE,EAAK+N,aAE9C+G,KAAK2sD,gBAAkB3sD,KAAKkpD,MAAMyD,iBAAmBzhE,EAAK0K,aAC/D1K,EAAK8mE,aAAa9mE,EAAKG,QAAU,MAAQ,OACzC2U,KAAK+zD,gBAAgB7oE,GAG7BA,GAAKI,YAAYiH,UAAYw/D,OAIpC,CACD,GAAIjtE,GAAQkb,KAAK3U,QACbD,sBAAoBC,QACpBD,sBAAoBkjE,SACxBtuD,MAAK6vD,cAAc5kE,EAAkBnG,EAAOkb,MAAOA,KAAKhmB,KAAMgmB,KAAK/G,aAhDvE,KAAK,GAAI/f,GAAI,EAAGA,EAAI+P,EAAO/P,IAEvB,GADIgS,EAAO8U,KAAK0wC,OAAOx3D,GACb,CACFsR,EAAQU,EAAKG,QAAUD,sBAAoBC,QAAUD,sBAAoBkjE,SAE7E,IADApjE,EAAK8mE,aAAa9mE,EAAKG,QAAU,MAAQ,OACrC0mE,EAAW,CACP5mE,EAAW6U,KAAKiyD,kBAAkB/mE,EAAMV,EAC5CwV,MAAK6vD,cAAc1kE,EAAUD,EAAK4hE,WAAY5hE,EAAK+N,YAGnD+G,MAAK+zD,gBAAgB7oE,EAEzBA,GAAKI,YAAYiH,UAAYw/D,EAuCzC/xD,KAAK1U,YAAYiH,UAAYw/D,GAEjCvhB,EAAiBx8C,UAAUi+D,kBAAoB,SAAU79D,EAAQ5J,GAC7D,GAAIyO,GAAS7E,EAAO6E,OAChBw0D,EAAY,GAAI0E,GACpB1E,GAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,OAC/C,IAAIm4E,GAAYh+D,EAAO43D,SACnBoG,KACA3E,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS1uC,EAAOpQ,MAC1C,IAAIumE,GAASn2D,EAAOm2D,MAMpB,IALIn2D,EAAO+3D,cACPsB,EAAUG,UAAY,GAAI/qB,IAAOzuC,EAAO+3D,YAAa5B,EAAO3nE,QAEhE6qE,EAAUI,YAActD,EAAO3nE,MAC/B6qE,EAAU/C,YAAcH,EAAOzlE,MAC3BstE,EAAW,CACX,GAAIrD,IAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,IACpEpuE,GAAS+qE,EAAY,IAAM,EAAIA,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAEzCypE,EAAU5C,cAAgBz2D,EAAO8I,MACjC,IAAI/R,GAAW,GAAIM,IAAYgiE,EAAUx0D,OAAQ+G,KAAKtU,iBAClD2uC,EAAWlvC,EAASkvC,QAOxB,OANIjmC,GAAO4/D,WACPh0D,KAAK6uD,cAAcx0B,EAAUozB,EAAWr5D,EAAO4/D,WAAYxpE,GAG3DwV,KAAK6uD,cAAcx0B,EAAUozB,EAAWphE,GAAe+H,EAAOi7B,QAAS7kC,GAEpEW,GAEXqlD,EAAiBx8C,UAAU+/D,gBAAkB,SAAU7oE,EAAMN,GACzD,GAAIC,GAAa,GAAI/I,GACrB,IAAIoJ,EAAKI,YAAYtJ,IAAI,OACrB6I,EAAaK,EAAKI,YAAYnJ,IAAI,SAE1B0I,EAAW7I,IAAI,MACfwR,GAAkB3I,EAAW1I,IAAI,KAAM6d,KAAKtU,gBAAiB,MAAO,OAEpEb,EAAW7I,IAAI,MACfwR,GAAkB3I,EAAW1I,IAAI,KAAM6d,KAAKtU,gBAAiB,MAAO,QAG5EoH,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,KAC5DoH,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,SAE3D,CACD,GAAIxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWW,GAC9CK,EAAKI,YAAY9C,OAAO,KAAM0B,GAElC,GAAI+pE,GAAgBj0D,KAAKiyD,kBAAkB/mE,EAAME,sBAAoBC,SACjE6oE,EAAyBl0D,KAAKtU,gBAAgB00C,mBAClDpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyzE,EAAwBD,EAAcnoE,SACzE,IAAIqoE,GAAkBn0D,KAAKiyD,kBAAkB/mE,EAAME,sBAAoBkjE,WACnE8F,EAA2Bp0D,KAAKtU,gBAAgB00C,mBACpDpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI2zE,EAA0BD,EAAgBroE,SAC7E,IAAIuoE,GAAmB,GAAIvyE,IAAeke,KAAKtU,gBAC7B,QAAdd,OAA2C,KAAdA,EAC7BypE,EAAiB7rE,OAAOoC,EAAWspE,GAGnCG,EAAiB7rE,OAAO,MAAO0rE,GAEnCG,EAAiB7rE,OAAO,MAAO4rE,EAC/B,IAAIE,GAAkBt0D,KAAKtU,gBAAgB00C,mBAC3CpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI6zE,EAAiBD,GACpDxpE,EAAWrC,OAAO,IAAK8rE,EACvB,IAAIC,GAAev0D,KAAKiyD,kBAAkB/mE,EAAME,sBAAoBmjE,gBAChEiG,EAAwBx0D,KAAKtU,gBAAgB00C,mBACjDpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI+zE,EAAuBD,EAAazoE,SACvE,IAAI2oE,GAAiBz0D,KAAKiyD,kBAAkB/mE,EAAME,sBAAoBojE,kBAClEkG,EAA0B10D,KAAKtU,gBAAgB00C,mBACnDpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIi0E,EAAyBD,EAAe3oE,SAC3E,IAAI6oE,GAAoB,GAAI7yE,IAAeke,KAAKtU,gBAC9B,QAAdd,OAA2C,KAAdA,EAC7B+pE,EAAkBnsE,OAAOoC,EAAW4pE,GAGpCG,EAAkBnsE,OAAO,MAAOgsE,GAEpCG,EAAkBnsE,OAAO,MAAOksE,EAChC,IAAIE,GAAmB50D,KAAKtU,gBAAgB00C,mBAC5CpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIm0E,EAAkBD,GACrD9pE,EAAWrC,OAAO,IAAKosE,GACvB1pE,EAAKI,YAAYiH,UAAW,GAEzBi+C,GACTr5C,IA4BEi5C,GAAyC,SAAUvoC,GAEnD,QAASuoC,GAAwBp2D,EAAMmO,GACnC,GAAI4f,GAAQF,EAAO5T,KAAK+L,OAASA,IAKjC,OAJA+H,GAAM8sD,gBAAkB,EACpB76E,GAAQmO,GACR4f,EAAMoB,YAAYnvB,EAAMmO,GAErB4f,EAggBX,MAvgBA9B,IAAUmqC,EAAyBvoC,GAmBnCuoC,EAAwBqc,MAAQ,SAAUt4D,EAAM5S,EAAYkS,EAAgBvJ,GACxE,GAAImK,GAAQ,GAAI+7C,EAchB,OAbA/7C,GAAMuB,WAAY,EAClBvB,EAAM60D,MAAQ/0D,EACdE,EAAM/I,YAAc/J,EACpB8S,EAAM3I,gBAAkB+H,EACxBY,EAAM0mD,KAAO7wD,EACTmK,EAAM/I,YAAYtJ,IAAI,UACtBqS,EAAM40D,MAAQ50D,EAAM/I,YAAYnJ,IAAI,SAExCkS,EAAMs8C,cAAgB,EACtBt8C,EAAMk4D,aAAe,GAAIzkC,KACrBzzB,EAAM6/C,WAAa,GACnB7/C,EAAMygE,uBAEHzgE,GAEXN,OAAO+H,eAAes0C,EAAwBp8C,UAAW,WAsBrD7R,IAAK,WACD,GAAIoI,IAAQ,CAIZ,OAHIyV,MAAKk0C,WAAa,IAClB3pD,EAAQyV,KAAK0wC,OAAO1wC,KAAK2wC,eAAetlD,SAErCd,GAEXwR,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAes0C,EAAwBp8C,UAAW,iBAsBrD7R,IAAK,WAID,MAHI6d,MAAKpK,YAAsC,IAAzBoK,KAAK60D,iBACvB70D,KAAK60D,eAAiB70D,KAAK+0D,wBAExB/0D,KAAK60D,gBA8BhBp0E,IAAK,SAAUtI,GACX,GAAI6nB,KAAKqwC,gBAAkBl4D,EAAO,CAC9B6nB,KAAK60D,eAAiB18E,CACtB,KAAK,GAAIe,GAAI,EAAGA,EAAI8mB,KAAKk0C,WAAYh7D,IAAK,CACtC,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,EACvB,IAAIA,IAAMf,EAAO,CACb+S,EAAKI,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI+I,EAAK/S,OAChD,IAAI68E,GAAS1vE,GAASnD,IAAI+I,EAAK/S,MAC/B6nB,MAAK1U,YAAY9C,OAAO,IAAKwsE,GAC7Bh1D,KAAK1U,YAAY9C,OAAO,KAAMwsE,OAG9B9pE,GAAKI,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,WAK3D4Z,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAes0C,EAAwBp8C,UAAW,eAkBrD7R,IAAK,WACD,MAAO6d,MAAKmqD,mBAAmBnqD,KAAKpK,YAmBxCnV,IAAK,SAAUtI,GACX6nB,KAAKoqD,mBAAmBjyE,GAAO,IAEnC4jB,YAAY,EACZC,cAAc,IAwBlBo0C,EAAwBp8C,UAAU08C,OAAS,SAAU71D,GACjD,GAAIA,EAAQ,GAAgB,IAAVA,GAAeA,GAASmlB,KAAKk0C,WAC3C,KAAMr6D,OAAM,sBAEhB,IAAIqR,EACJ,IAAI8U,KAAKusD,aAAavqE,IAAInH,GACtBqQ,EAAO8U,KAAKusD,aAAapqE,IAAItH,OAE5B,CACD,GAAI0G,OAAa,EACjB,IAAI1G,GAAS,GAAKmlB,KAAKipD,OAASjpD,KAAKipD,MAAMlwE,OAAS,GAAK8B,EAAQmlB,KAAKipD,MAAMlwE,OAAQ,CAChF,GAAIqR,GAAM4V,KAAKipD,MAAM7vE,OAAOC,SAASwB,EAAMvB,WAAY,IACnD8Q,IAAOA,YAAeC,MACtB9I,EAAaye,KAAKtU,gBAAgBwH,OAAO9I,IAEzC7I,KACA2J,EAAO+pE,GAAuBxI,MAAMlrE,EAAYye,KAAKtU,gBAAiBsU,OACjE+6C,KAAO3wD,EACZc,EAAKwN,OAAS7d,EACdmlB,KAAKusD,aAAa9rE,IAAI5F,EAAOqQ,KAIzC,MAAOA,IAEXklD,EAAwBp8C,UAAU/R,IAAM,SAAU9J,EAAO8gB,GACrD,MAAI9gB,aAAiB88E,KACjB98E,EAAMwvE,OAAS3nD,KACf7nB,EAAMmT,YAAY9C,OAAO,SAAUwX,KAAK+6C,MACxC5iE,EAAM+8E,UAAUl1D,MACTA,KAAKk0C,YAGL,GAAI+gB,IAAuB98E,EAAO8gB,EAAQ+G,OAsBzDowC,EAAwBp8C,UAAU44D,aAAe,SAAU/xE,GACvD,GAAIqQ,GAAO8U,KAAK0wC,OAAO71D,EACvB,IAAIqQ,GAAQA,EAAK6vD,KAAM,CACnB,GAAI/gE,GAAOkR,EAAK4hE,UAQhB,IAPI9yE,GACAA,EAAK+yE,kBAAkB7hE,EAAK6vD,MAEhC/6C,KAAKipD,MAAMhd,OAAOpxD,EAAO,GACzBmlB,KAAK1U,YAAY7K,IAAI,OAAQuf,KAAKipD,OAClCjpD,KAAK1U,YAAYiH,UAAW,EAC5ByN,KAAKusD,aAAaj5D,OAAOzY,GACrBmlB,KAAKusD,aAAa9xE,KAAO,EAAG,CAC5B,GAAI06E,GAAgB,GAAIrtC,IACxB9nB,MAAKusD,aAAavhE,QAAQ,SAAU7S,EAAO0H,GACnCA,EAAMhF,EACNs6E,EAAc10E,IAAIZ,EAAM,EAAG1H,GAG3Bg9E,EAAc10E,IAAIZ,EAAK1H,KAG/B6nB,KAAKusD,aAAe4I,EAExB,GAAIn1D,KAAK1U,YAAYtJ,IAAI,OAAQ,CAC7B,GAAIsuD,GAAUtwC,KAAK1U,YAAYpJ,SAAS,MACpCouD,IAAWA,EAAQv3D,OAAS,IAC5Bu3D,EAAQrE,OAAOpxD,EAAO,GACtBmlB,KAAK1U,YAAY7K,IAAI,MAAO6vD,OAwB5CF,EAAwBp8C,UAAUi5D,WAAa,SAAU/hE,GACrD,GAAIA,GAAQA,EAAK6vD,KAAM,CACnB,GAAIlgE,GAAQmlB,KAAKipD,MAAM/oE,QAAQgL,EAAK6vD,OACrB,IAAXlgE,GACAmlB,KAAK4sD,aAAa/xE,KAI9Bu1D,EAAwBp8C,UAAUmV,YAAc,SAAUnvB,EAAMmO,GAC5D6X,KAAK2wC,cAAgB,EACrB3wC,KAAKtU,gBAAkB1R,EAAK0R,gBAC5BsU,KAAK7G,MAAQnf,EACbgmB,KAAKgS,MAAQ7pB,EACb6X,KAAK1U,YAAc,GAAIxJ,IAAeke,KAAKtU,iBAC3CsU,KAAK+6C,KAAO/6C,KAAKtU,gBAAgB00C,oBACjCpgC,KAAKtU,gBAAgB2H,UAAU5S,IAAIuf,KAAK+6C,KAAM/6C,KAAK1U,aACnD0U,KAAK1U,YAAYvJ,MAAQie,KAAK+6C,KAAKzhE,WACnC0mB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,QAC3C6d,KAAK1U,YAAY9C,OAAO,IAAKL,GAC7B6X,KAAKusD,aAAe,GAAIzkC,KACxB9nB,KAAKqqD,aAAejsD,aAAWg3D,OAEnChlB,EAAwBp8C,UAAU8gE,qBAAuB,WACrD,GAAI90D,KAAK1U,YAAYtJ,IAAI,OAAQ,CAC7B,GAAIsuD,GAAUtwC,KAAK1U,YAAYpJ,SAAS,MACxC,IAAIouD,GAAWA,EAAQv3D,OAAS,EAG5B,IAAK,GAFD8zE,GAAa7sD,KAAKk0C,WAClBjrD,EAAQqnD,EAAQv3D,QAAU8zE,EAAavc,EAAQv3D,OAAS8zE,EACnD3zE,EAAI,EAAGA,EAAI+P,EAAO/P,IACnBo3D,EAAQl3D,OAAOC,SAASH,EAAEI,WAAY,OACtC0mB,KAAK0wC,OAAOx3D,GAAGm8E,aAAe/kB,EAAQl3D,OAAOC,SAASH,EAAEI,WAAY,QAMxF82D,EAAwBp8C,UAAU+gE,qBAAuB,WAErD,IAAK,GADDl6E,IAAS,EACJ3B,EAAI,EAAGA,EAAI8mB,KAAKk0C,aAAch7D,EAAG,CACtC,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,EACvB,IAAIgS,EAAM,CACN,GAAIoqE,GAAYh0E,EAAwB4J,EAAKI,YAAa,KAAK,GAAO,EACtE,IAAIgqE,GAAapqE,EAAKI,YAAYtJ,IAAI,MAAO,CACzC,GAAIuzE,GAASrqE,EAAKI,YAAYnJ,IAAI,KAClC,IAAIozE,GAAwC,QAA9BA,EAAOptE,KAAK1B,cACtB,GAAI6uE,YAAqBhwE,KAA6C,QAAjCgwE,EAAUntE,KAAK1B,eAChD,GAAI8uE,EAAOptE,OAASmtE,EAAUntE,MAAQ+C,EAAKmqE,eAAiBC,EAAUntE,KAAM,CACxEtN,EAAQ3B,CACR,YAGH,IAAyB,gBAAdo8E,IAAsD,QAA5BA,EAAU7uE,gBAC5C8uE,EAAOptE,OAASmtE,GAAapqE,EAAKmqE,eAAiBC,GAAW,CAC9Dz6E,EAAQ3B,CACR,UAOxB,MAAO2B,IAEXu1D,EAAwBp8C,UAAU89D,eAAiB,SAAUC,OACvC,KAAdA,IAAwBA,GAAY,EACxC,IAAI9oE,GAAQ+W,KAAKk0C,UACjB,IAAIl0C,KAAKpK,UACL,GAAI3M,EAAQ,GACR,IAAS/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAEvB,IADIgS,EAAO8U,KAAK0wC,OAAOx3D,MACV8mB,KAAKotD,gBAAgBliE,EAAKI,aAAc,CACjD,GAAIymE,EAAW,CACX,GAAI5mE,OAAW,GACXX,EAAQwV,KAAKqwC,gBAAkBn3D,EAC/BkS,sBAAoBC,QACpBD,sBAAoBkjE,SAEpBnjE,GADA6U,KAAK2sD,gBAAkB3sD,KAAKkpD,MAAMyD,iBAAmBzhE,EAAKI,YAAYtJ,IAAI,MAC/Dge,KAAKiyD,kBAAkB/mE,EAAMV,GAG7BS,EAAkBT,EAAOU,GAExC8U,KAAK6vD,cAAc1kE,EAAUD,EAAK4hE,WAAY5hE,EAAK+N,aAE9C+G,KAAK2sD,gBAAkB3sD,KAAKkpD,MAAMyD,iBAAmBzhE,EAAK0K,aAC/D1K,EAAK8mE,aAAahyD,KAAKqwC,gBAAkBn3D,EAAIgS,EAAK/S,MAAQ,OAC1D6nB,KAAK+zD,gBAAgB7oE,GAEzBA,GAAKI,YAAYiH,UAAYw/D,OAIpC,CACD,GAAIjtE,IAAgC,IAAxBkb,KAAKqwC,cACbjlD,sBAAoBC,QACpBD,sBAAoBkjE,SACxBtuD,MAAK6vD,cAAc5kE,EAAkBnG,EAAOkb,MAAOA,KAAKhmB,KAAMgmB,KAAK/G,YAIvE,KAAK,GAAI/f,GAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,GACnBsR,EAAQwV,KAAKqwC,gBAAkBn3D,EAAIkS,sBAAoBC,QAAUD,sBAAoBkjE,SAIzF,IAHKtuD,KAAKwoD,kBACNt9D,EAAKI,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI6d,KAAKqwC,gBAAkBn3D,EAAIgS,EAAK/S,MAAQ,QAEnF45E,EAAW,CACP5mE,EAAW6U,KAAKiyD,kBAAkB/mE,EAAMV,EAC5CwV,MAAK6vD,cAAc1kE,EAAUD,EAAK4hE,WAAY5hE,EAAK+N,YAE7C+G,MAAKwoD,mBACXt9D,EAAK8mE,aAAahyD,KAAKqwC,gBAAkBn3D,EAAIgS,EAAK/S,MAAQ,OAC1D6nB,KAAK+zD,gBAAgB7oE,GAEzBA,GAAKI,YAAYiH,UAAYw/D,EAGrC/xD,KAAK1U,YAAYiH,UAAYw/D,GAEjC3hB,EAAwBp8C,UAAUi+D,kBAAoB,SAAU79D,EAAQ5J,GACpE,GAAIyO,GAAS7E,EAAO6E,OAChBw0D,EAAY,GAAI0E,GACpB1E,GAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,OAC/C,IAAIm4E,GAAYh+D,EAAO43D,SACnBoG,KACA3E,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS1uC,EAAOpQ,MAC1C,IAAIumE,GAASn2D,EAAOm2D,MAMpB,IALIn2D,EAAO+3D,cACPsB,EAAUG,UAAY,GAAI/qB,IAAOzuC,EAAO+3D,YAAa5B,EAAO3nE,QAEhE6qE,EAAUI,YAActD,EAAO3nE,MAC/B6qE,EAAU/C,YAAcH,EAAOzlE,MAC3BstE,EAAW,CACX,GAAIrD,IAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,IACpEpuE,GAAS+qE,EAAY,IAAM,EAAIA,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAEzCypE,EAAU5C,cAAgBz2D,EAAO8I,MACjC,IAAI/R,GAAW,GAAIM,IAAYgiE,EAAUx0D,OAAQ+G,KAAKtU,iBAClD2uC,EAAWlvC,EAASkvC,QAOxB,OANIjmC,GAAO4/D,WACPh0D,KAAKouD,iBAAiB/zB,EAAUozB,EAAWr5D,EAAO4/D,WAAYxpE,GAG9DwV,KAAKouD,iBAAiB/zB,EAAUozB,EAAWphE,GAAe+H,EAAOtP,OAAQ0F,GAEtEW,GAEXilD,EAAwBp8C,UAAU+/D,gBAAkB,SAAU7oE,GAC1D,GAAIL,GAAa,GAAI/I,GACrB,IAAIoJ,EAAKI,YAAYtJ,IAAI,OACrB6I,EAAaK,EAAKI,YAAYnJ,IAAI,SAE1B0I,EAAW7I,IAAI,MACfwR,GAAkB3I,EAAW1I,IAAI,KAAM6d,KAAKtU,gBAAiBR,EAAK/S,MAAO,OAEzE0S,EAAW7I,IAAI,MACfwR,GAAkB3I,EAAW1I,IAAI,KAAM6d,KAAKtU,gBAAiBR,EAAK/S,MAAO,QAGjF2a,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,KAC5DoH,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,SAE3D,CACD,GAAIxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWW,GAC9CK,EAAKI,YAAY9C,OAAO,KAAM0B,GAElC,GAAI+pE,GAAgBj0D,KAAKiyD,kBAAkB/mE,EAAME,sBAAoBC,SACjE6oE,EAAyBl0D,KAAKtU,gBAAgB00C,mBAClDpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyzE,EAAwBD,EAAcnoE,SACzE,IAAIqoE,GAAkBn0D,KAAKiyD,kBAAkB/mE,EAAME,sBAAoBkjE,WACnE8F,EAA2Bp0D,KAAKtU,gBAAgB00C,mBACpDpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI2zE,EAA0BD,EAAgBroE,SAC7E,IAAIuoE,GAAmB,GAAIvyE,IAAeke,KAAKtU,iBAC3C8pE,EAActqE,EAAK/S,OAClBq9E,GAAetqE,EAAKq9D,kBACrBiN,EAAc,QAAUtqE,EAAKwN,QAEjC27D,EAAiB7rE,OAAOgtE,EAAatB,GACrCG,EAAiB7rE,OAAO,MAAO4rE,EAC/B,IAAIE,GAAkBt0D,KAAKtU,gBAAgB00C,mBAC3CpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI6zE,EAAiBD,GACpDxpE,EAAWrC,OAAO,IAAK8rE,EACvB,IAAIC,GAAev0D,KAAKiyD,kBAAkB/mE,EAAME,sBAAoBmjE,gBAChEiG,EAAwBx0D,KAAKtU,gBAAgB00C,mBACjDpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI+zE,EAAuBD,EAAazoE,SACvE,IAAI2oE,GAAiBz0D,KAAKiyD,kBAAkB/mE,EAAME,sBAAoBojE,kBAClEkG,EAA0B10D,KAAKtU,gBAAgB00C,mBACnDpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIi0E,EAAyBD,EAAe3oE,SAC3E,IAAI6oE,GAAoB,GAAI7yE,IAAeke,KAAKtU,gBAChDipE,GAAkBnsE,OAAOgtE,EAAahB,GACtCG,EAAkBnsE,OAAO,MAAOksE,EAChC,IAAIE,GAAmB50D,KAAKtU,gBAAgB00C,mBAC5CpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIm0E,EAAkBD,GACrD9pE,EAAWrC,OAAO,IAAKosE,GACvB1pE,EAAKI,YAAYiH,UAAW,GAEzB69C,GACTj5C,IA0BE65C,GAA8B,SAAUnpC,GAExC,QAASmpC,KACL,MAAkB,QAAXnpC,GAAmBA,EAAO1pB,MAAM6hB,KAAMre,YAAcqe,KAmnC/D,MArnCAiG,IAAU+qC,EAAcnpC,GAIxB9T,OAAO+H,eAAek1C,EAAah9C,UAAW,cA0B1C7R,IAAK,WACD,MAAO6d,MAAK6zC,SAAS96D,QAEzBgjB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,UA0B1C7R,IAAK,WACD,GAAIhK,GACAic,EAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAU9B,OATIv8C,KACAA,EAAO+E,MAAQ6G,KAAKhmB,MAEpBoa,GAAUA,EAAO6E,OACjB9gB,EAAQic,EAAO6E,OAEV+G,KAAK1U,YAAYtJ,IAAI,UAC1B7J,EAAQgL,EAAiB6c,KAAK1U,YAAa0U,KAAKhmB,OAEhD7B,IAGK6nB,KAAK9G,QACH8G,KAAK9G,QAET/gB,IA2BXsI,IAAK,SAAUtI,GACX,GAAgB,IAAZA,EAAMuK,GAAuB,IAAZvK,EAAMwK,GAA2B,IAAhBxK,EAAMyK,OAAgC,IAAjBzK,EAAM8B,OAC7D,KAAM,IAAIJ,OAAM,0BAEpB,IAAIua,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAC1B3wC,MAAKpK,cACiB,KAAXxB,GAA0B4L,KAAK1U,YAAYtJ,IAAI,QACtDge,KAAK1U,YAAY9C,OAAO,OAAQ7E,GAAmBxL,EAAMuK,EAAGvK,EAAMwK,EAAGxK,EAAMyK,MAAOzK,EAAM8B,QAAS+lB,KAAKhmB,QAGtGoa,EAAO+E,MAAQ6G,KAAKhmB,KACpBoa,EAAO6E,OAAS9gB,GAIhBic,GACAA,EAAO+E,MAAQ6G,KAAKhmB,KACpBoa,EAAO6E,OAAS9gB,GAGhB6nB,KAAK9G,QAAU/gB,GAI3B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,iBA0B1C7R,IAAK,WACD,GAAIhK,GAAQ6nB,KAAK1U,YAAYnJ,IAAI,IACjC,YAAqB,KAAVhK,KAIc,IAAjBA,EAAMY,OACCZ,EAAM,GAGNA,GA6CnBsI,IAAK,SAAUtI,GACX,GAAI4vB,GAAQ/H,KACRjnB,EAASinB,KAAK6zC,SAAS96D,MAC3B,IAAqB,gBAAVZ,GACP6nB,KAAKowD,YAAYj4E,EAAOY,GACxBinB,KAAK1U,YAAY9C,OAAO,KAAMrQ,IAC9B6nB,KAAK1U,YAAY9C,OAAO,KAAMwX,KAAK6zC,SAASz6D,OAAOC,SAASlB,EAAMmB,WAAY,KAAK,SAElF,CACD,GAAIm8E,KACJt9E,GAAM6S,QAAQ,SAAU5G,GACpB2jB,EAAMqoD,YAAYhsE,EAAOrL,GACzB08E,EAASn6E,KAAKysB,EAAM8rC,SAASz6D,OAAOC,SAAS+K,EAAM9K,WAAY,KAAK,MAExE0mB,KAAK1U,YAAY9C,OAAO,IAAKrQ,GAC7B6nB,KAAK1U,YAAY9C,OAAO,IAAKitE,KAGrC15D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,iBA0B1C7R,IAAK,WACD,GAAI4lB,GAAQ/H,KACR7kB,IAcJ,IAbI6kB,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,UAEpB,MADjB7J,EAAQ6nB,KAAK1U,YAAYpJ,SAAS,QAE9BjC,MAAMuB,QAAQrJ,GACdA,EAAM6S,QAAQ,SAAU1I,GACpBnH,EAAOG,KAAKgH,KAGM,gBAAVnK,IACZgD,EAAOG,KAAKnD,IAIF,IAAlBgD,EAAOpC,QAAgBinB,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,KAAM,CACtE,GAAI7J,GAAQ6nB,KAAK1U,YAAYnJ,IAAI,IAC7BhK,IAASA,EAAMY,OAAS,GACxBZ,EAAM6S,QAAQ,SAAUnQ,GACpBM,EAAOG,KAAKysB,EAAM8rC,SAASz6D,OAAOC,SAASwB,EAAMvB,WAAY,KAAK,MAI9E,MAAsB,KAAlB6B,EAAOpC,OACAoC,EAAO,GAGPA,GA0CfsF,IAAK,SAAUtI,GACX,GAAI4vB,GAAQ/H,IACZ,IAAqB,gBAAV7nB,GAAoB,CAC3B,GAAI0C,GAAQmlB,KAAK01D,aAAav9E,IACf,IAAX0C,IACAmlB,KAAK1U,YAAY9C,OAAO,KAAM3N,IAC9BmlB,KAAK1U,YAAY9C,OAAO,KAAMrQ,SAGjC,CACD,GAAIw9E,MACAC,IACJz9E,GAAM6S,QAAQ,SAAU5G,GACpB,GAAIvJ,GAAQktB,EAAM2tD,aAAatxE,IAChB,IAAXvJ,IACA+6E,EAAUt6E,KAAKT,GACf86E,EAASr6E,KAAK8I,MAGlBuxE,EAAS58E,OAAS,IAClBinB,KAAK1U,YAAY9C,OAAO,IAAKotE,GAC7B51D,KAAK1U,YAAY9C,OAAO,IAAKmtE,MAIzC55D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,eA0B1C7R,IAAK,WACD,MAAI6d,MAAKpK,UACkD,IAA/CoK,KAAKqqD,YAAcjsD,aAAWy3D,aAG/B71D,KAAK81D,cA4CpBr1E,IAAK,SAAUtI,GACP6nB,KAAK61D,cAAgB19E,IACrB6nB,KAAK81D,aAAe39E,EAChBA,EACA6nB,KAAKqqD,aAAejsD,aAAWy3D,YAG/B71D,KAAKqqD,cAAgBjsD,aAAWy3D,cAI5C95D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,YA0B1C7R,IAAK,WACD,MAAI6d,MAAKpK,UAC2C,IAAxCoK,KAAKqqD,YAAcjsD,aAAW23D,MAG/B/1D,KAAKg2D,WA4CpBv1E,IAAK,SAAUtI,GACP6nB,KAAKg2D,YAAc79E,IACnB6nB,KAAKg2D,UAAY79E,EACbA,EACA6nB,KAAKqqD,aAAejsD,aAAW23D,KAG/B/1D,KAAKqqD,cAAgBjsD,aAAW23D,OAI5Ch6D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,QAmB1C7R,IAAK,WACD,GAAI6d,KAAKqJ,MACL,MAAOrJ,MAAKqJ,KAGZ,IAAIjV,GAAS4L,KAAK0wC,OAAO1wC,KAAK2wC,cAGlC,OAFI3wC,MAAKqJ,MAAQnV,GAAmB8L,KAAKkpD,MAAO90D,EAAQ4L,MAEjDA,KAAKqJ,OAoBhB5oB,IAAK,SAAUtI,GACPA,GAASA,YAAiBi3C,MAC1BpvB,KAAKqJ,MAAQlxB,EACb6nB,KAAKqtD,gBAAgBl1E,KAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,iBAmB1C7R,IAAK,WACD,MAAO6d,MAAKqwD,qBAoBhB5vE,IAAK,SAAUtI,GACP6nB,KAAKswD,iBAAmBn4E,GACxB6nB,KAAKuwD,kBAAkBp4E,IAG/B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,aAkB1C7R,IAAK,WACD,MAAO6d,MAAKiqD,iBAAgB,IAuBhCxpE,IAAK,SAAUtI,GACX6nB,KAAKkqD,iBAAiB/xE,GAAO,IAEjC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAek1C,EAAah9C,UAAW,YAC1C7R,IAAK,WAUD,MATK6d,MAAKi2D,eACFj2D,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,OACzCge,KAAKi2D,aAAej2D,KAAK1U,YAAYpJ,SAAS,QAG9C8d,KAAKi2D,gBACLj2D,KAAK1U,YAAY9C,OAAO,MAAOwX,KAAKi2D,gBAGrCj2D,KAAKi2D,cAEhBl6D,YAAY,EACZC,cAAc,IA4BlBg1C,EAAah9C,UAAU08C,OAAS,SAAU71D,GACtC,GAAIqQ,EACJ,IAAIrQ,EAAQmlB,KAAKk0C,WACb,GAAIl0C,KAAKusD,aAAavqE,IAAInH,GACtBqQ,EAAO8U,KAAKusD,aAAapqE,IAAItH,OAE5B,CACG0G,MAAa,IACb2I,EAAY8V,KAAKipD,MAAM7vE,OAAOC,SAASwB,EAAMvB,WAAY,OAC5C4Q,YAAqBG,MAClC9I,EAAaye,KAAKtU,gBAAgBwH,OAAOhJ,IAEzC3I,KACA2J,EAAOgrE,GAAiBzJ,MAAMlrE,EAAYye,KAAKtU,gBAAiBsU,OAC3DtH,OAAS7d,EACdqQ,EAAK6vD,KAAO7wD,EACR8V,KAAK6zC,UAAY7zC,KAAK6zC,SAAS96D,OAAS,GAAK8B,EAAQmlB,KAAK6zC,SAAS96D,OACnEmS,EAAK6hB,MAAQ/M,KAAK6zC,SAASz6D,OAAOC,SAASwB,EAAMvB,WAAY,KAAK,GAGlE4R,EAAK6hB,MAAQ,GAEjB/M,KAAKusD,aAAa9rE,IAAI5F,EAAOqQ,QAKrC,IAAI8U,KAAKusD,aAAavqE,IAAInH,GACtBqQ,EAAO8U,KAAKusD,aAAapqE,IAAItH,OAE5B,IAAImlB,KAAKk0C,WAAa,GAAKl0C,KAAKipD,OAASjpD,KAAKipD,MAAMlwE,OAAS,EAAG,CACjE,GAAIwI,OAAa,GACb2I,MAAY,IAEZA,EADoB,IAApB8V,KAAKk0C,WACOl0C,KAAKipD,MAAM,GAGXjpD,KAAKipD,MAAM7vE,OAAOC,SAASwB,EAAMvB,WAAY,OAE5C4Q,YAAqBG,MAClC9I,EAAaye,KAAKtU,gBAAgBwH,OAAOhJ,IAEzC3I,KACA2J,EAAOgrE,GAAiBzJ,MAAMlrE,EAAYye,KAAKtU,gBAAiBsU,OAC3DtH,OAAS7d,EACdqQ,EAAK6vD,KAAO7wD,EACR8V,KAAK6zC,UAAY7zC,KAAK6zC,SAAS96D,OAAS,GAAK8B,EAAQmlB,KAAK6zC,SAAS96D,OACnEmS,EAAK6hB,MAAQ/M,KAAK6zC,SAASz6D,OAAOC,SAASwB,EAAMvB,WAAY,KAAK,GAGlE4R,EAAK6hB,MAAQ,GAEjB/M,KAAKusD,aAAa9rE,IAAI5F,EAAOqQ,IAIzC,MAAOA,IA4CX8lD,EAAah9C,UAAUmiE,QAAU,SAAUjrE,GAEvC,MADA8U,MAAK8vD,cAAc5kE,EAAM8U,MAClBA,KAAK+vD,YAAYh3E,OAAS,GA4BrCi4D,EAAah9C,UAAU44D,aAAe,SAAU/xE,GAC5C,GAAIqQ,GAAO8U,KAAK0wC,OAAO71D,EACvB,IAAIqQ,GAAQA,EAAK6vD,KAAM,CAEnB,GADA/6C,KAAKusD,aAAaj5D,OAAOzY,GACrBmlB,KAAKusD,aAAa9xE,KAAO,EAAG,CAC5B,GAAI27E,GAAgB,GAAItuC,IACxB9nB,MAAKusD,aAAavhE,QAAQ,SAAU7S,EAAO0H,GACnCA,EAAMhF,EACNu7E,EAAc31E,IAAIZ,EAAM,EAAG1H,GAG3Bi+E,EAAc31E,IAAIZ,EAAK1H,KAG/B6nB,KAAKusD,aAAe6J,EAExB,GAAIp2D,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,OAAQ,CACjD,GAAIsuD,GAAUtwC,KAAK6zC,QACfvD,IAAWA,EAAQv3D,OAAS,IAC5Bu3D,EAAQrE,OAAOpxD,EAAO,GACtBmlB,KAAK1U,YAAY7K,IAAI,MAAO6vD,GAC5BtwC,KAAKi2D,aAAe3lB,EACpBtwC,KAAK1U,YAAYiH,UAAW,MA+B5Cy+C,EAAah9C,UAAUi5D,WAAa,SAAU/hE,GAC1C,GAAIA,GAAQA,EAAKkC,KAAM,CAEnB,IAAK,GADDvS,OAAQ,GACH3B,EAAI,EAAGA,EAAI8mB,KAAK6sD,WAAY3zE,IAAK,CACtC,GAAIm9E,GAAYr2D,KAAK0wC,OAAOx3D,EAC5B,IAAIm9E,GAAanrE,IAASmrE,GAAaA,EAAUjpE,OAASlC,EAAKkC,KAAM,CACjEvS,EAAQ3B,CACR,SAGO,IAAX2B,GACAmlB,KAAK4sD,aAAa/xE,KAI9Bm2D,EAAah9C,UAAUmV,YAAc,SAAUnvB,EAAMmO,EAAM8Q,GACvD+G,KAAK2wC,cAAgB,EACrB3wC,KAAKtU,gBAAkB1R,EAAK0R,gBAC5BsU,KAAK7G,MAAQnf,EACbgmB,KAAKgS,MAAQ7pB,EACb6X,KAAK1U,YAAc,GAAIxJ,IAAeke,KAAKtU,iBAC3CsU,KAAK+6C,KAAO/6C,KAAKtU,gBAAgB00C,oBACjCpgC,KAAKtU,gBAAgB2H,UAAU5S,IAAIuf,KAAK+6C,KAAM/6C,KAAK1U,aACnD0U,KAAK1U,YAAYvJ,MAAQie,KAAK+6C,KAAKzhE,WACnC0mB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,OAC3C6d,KAAK1U,YAAY9C,OAAO,IAAKL,GAC7B6X,KAAKusD,aAAe,GAAIzkC,KACxB9nB,KAAK+vD,eACL/vD,KAAKipD,SACLjpD,KAAK/G,OAASA,EACd+G,KAAKs2D,mBAETtlB,EAAah9C,UAAUuiE,YAAc,SAAUrrE,GAC3C,GAAIuJ,GAAa,GACbH,EAAW,CACf,IAAIpJ,IAASA,EAAKI,YAAYtJ,IAAI,OAASkJ,EAAKI,YAAYtJ,IAAI,OAAQ,CACpE,GAAIkJ,EAAKI,YAAYtJ,IAAI,MAErB,IAAK,GADD22B,GAAaztB,EAAKI,YAAYnJ,IAAI,MAAMwS,MAAM,KACzCzb,EAAI,EAAGA,EAAIy/B,EAAW5/B,OAAQG,IAAK,CACxC,GAAIkL,GAAQu0B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAKqb,MAAM,IAChE,KAA8E,IAA1EgkB,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,eACtDuU,EAAarQ,EAAM,OAElB,KAA4E,IAAxEu0B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,aACvDkE,EAAM,GAAG0V,SAAS,QAClBxF,EAAWlb,OAAO8J,WAAWkB,EAAM,GAAGpE,QAAQ,KAAM,UAGvD,KAA6E,IAAzE24B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,gBAA2F,IAAnEy4B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,QAAgB,CAGzJ,IAAK,GADDyU,GADSvQ,EAAM,GACAuQ,MAAM,KAChBxb,EAAI,EAAGA,EAAIwb,EAAM5b,OAAQI,IACmB,KAA7Cwb,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,MAAgBqb,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAKwgB,SAAS,QACtGrF,GAAcE,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAO,KAEzDqb,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAKwgB,SAAS,QAClDxF,EAAWlb,OAAO8J,WAAWyR,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAK0G,QAAQ,KAAM,KAG5F,MAAsB,MAAfyU,GAAsBA,EAAWqF,SAAS,MAC7CrF,EAAaA,EAAWvV,UAAU,EAAGuV,EAAW1b,OAAS,IAE5B,IAA7B0b,EAAWvU,QAAQ,OACnBuU,EAAaA,EAAWE,MAAM,KAAK,SAK9C,CACD,GAAIxc,GAAQ+S,EAAKI,YAAYnJ,IAAI,KACjC,IAAIhK,GAAmB,KAAVA,IAAyC,IAAzBA,EAAM+H,QAAQ,MAAc,CAErD,IAAK,GADDwU,GAAiBvc,EAAMwc,MAAM,KACxBzb,EAAI,EAAGA,EAAIwb,EAAe3b,OAAQG,IACvC,IAAyE,IAArEwb,EAAetb,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,MAAc,CAExE,IADAuU,EAAaC,EAAexb,EAAI,GACV,KAAfub,GAAqBA,EAAW1b,OAAS,GAAuB,MAAlB0b,EAAW,IAC5DA,EAAaA,EAAWvV,UAAU,EAEtCoV,GAAWlb,OAAO8J,WAAWwR,EAAexb,EAAI,IAGxD,GAAIe,GAAS,CACb,IAAiB,IAAbqa,EAAgB,CAChB,GAAIC,GAAO,GAAIc,IAAgBC,gBAAcC,UAAWtb,EAC3C,QAATsa,IACAta,EAAS+lB,KAAKw2D,eAAejiE,EAAKslB,cAC9BzgC,OAAOm3D,MAAMt2D,IAAsB,IAAXA,KACxBA,EAAS,IAEbsa,EAAK8S,MAAQptB,EACbqa,EAAWra,KAM3B,OADAwa,EAAaA,EAAWG,QAEpB,IAAK,OACDoL,KAAKqJ,MAAQ,GAAIhU,IAAgBC,gBAAcC,UAAWjB,EAAUjD,eAAa4D,QACjF,MACJ,KAAK,UACL,IAAK,OACD+K,KAAKqJ,MAAQ,GAAIhU,IAAgBC,gBAAcO,QAASvB,EAAUjD,eAAa4D,QAC/E,MACJ,KAAK,OACD+K,KAAKqJ,MAAQ,GAAIhU,IAAgBC,gBAAcQ,OAAQxB,EAAUjD,eAAa4D,QAC9E,MACJ,KAAK,OACD+K,KAAKqJ,MAAQ,GAAIhU,IAAgBC,gBAAcS,WAAYzB,EAAUjD,eAAa4D,QAClF,MACJ,KAAK,OACD+K,KAAKqJ,MAAQ,GAAIhU,IAAgBC,gBAAcU,aAAc1B,EAAUjD,eAAa4D,QACpF,MACJ,SACI+K,KAAKqJ,MAAQ,GAAIhU,IAAgBC,gBAAcC,UAAWjB,EAAUjD,eAAa4D,UAI7F,MAAO+K,MAAKqJ,OAEhB2nC,EAAah9C,UAAUk8C,qBAAuB,WAC1C,GAAInoC,GAAQ/H,KACRliB,IACJ,IAAIkiB,KAAK1U,YAAYtJ,IAAI,KAAM,CAC3B,GAAIovD,GAAYpxC,KAAK1U,YAAYnJ,IAAI,KACjClD,EAAQ+gB,KAAK1U,YAAYpJ,SAAS,IACpB,QAAdkvD,OAA2C,KAAdA,IACJ,gBAAdA,GACPtzD,EAAOxC,KAAK81D,GAEPnxD,MAAMuB,QAAQ4vD,IACnBnyD,EAAM+L,QAAQ,SAAU1I,GACpBxE,EAAOxC,KAAKgH,UAKvB,CACD,GAAIm0E,GAAkBz2D,KAAK1U,YAAYnJ,IAAI,IACnB,QAApBs0E,OAC2B,KAApBA,GACPA,EAAgB19E,OAAS,GACzB09E,EAAgB,IAAM,GACtBz2D,KAAK6zC,UACL7zC,KAAK6zC,SAAS96D,OAAS,GACvB09E,EAAgBzrE,QAAQ,SAAUnQ,GAC9BiD,EAAOxC,KAAKysB,EAAM8rC,SAASz6D,OAAOC,SAASwB,EAAMvB,WAAY,KAAK,MAI9E,MAAOwE,IAEXkzD,EAAah9C,UAAU89D,eAAiB,SAAUC,GAE9C,OADkB,KAAdA,IAAwBA,GAAY,GACpCA,GAAa/xD,KAAK2sD,gBAAkB3sD,KAAKkpD,MAAMyD,eAAgB,CAC/D,GAAI1jE,GAAQ+W,KAAKk0C,UACjB,IAAIl0C,KAAKipD,OAASjpD,KAAKipD,MAAMlwE,OAAS,EAClC,GAAIkQ,EAAQ,GACR,IAAK,GAAI/P,GAAI,EAAGA,EAAI+P,EAAO/P,IAEvB,IADIgS,EAAO8U,KAAK0wC,OAAOx3D,MACV8mB,KAAKotD,gBAAgBliE,EAAKI,aAAc,CAC7CH,EAAW6U,KAAKiyD,kBAAkB/mE,EAClC6mE,IACI/3E,EAAOkR,EAAK4hE,aAEZ9sD,KAAK6vD,cAAc1kE,EAAUnR,EAAMkR,EAAK+N,QAI5C+G,KAAKkwD,eAAehlE,EAAKI,YAAaH,EAAU,KAEpDD,EAAKI,YAAYiH,UAAYw/D,OAIpC,CACD,GAAI7mE,GAAO8U,KAAK0wC,OAAO,GACnBvlD,EAAW6U,KAAKiyD,mBAChBF,IACI/3E,EAAOgmB,KAAKhmB,OAEZgmB,KAAK6vD,cAAc1kE,EAAUnR,EAAMgmB,KAAK/G,QAI5C+G,KAAKkwD,eAAehlE,EAAKI,YAAaH,EAAU,KAEpDD,EAAKI,YAAYiH,UAAYw/D,MAGhC,IAAI/xD,KAAK1U,YAAa,CACnBH,EAAW6U,KAAKiyD,mBACpB,IAAIF,EAAW,CACX,GAAI/3E,GAAOgmB,KAAKhmB,IACZA,IACAgmB,KAAK6vD,cAAc1kE,EAAUnR,EAAMgmB,KAAK/G,YAI5C+G,MAAKkwD,eAAelwD,KAAK1U,YAAaH,EAAU,KAGxD6U,KAAK1U,YAAYiH,UAAYw/D,IAGrC/gB,EAAah9C,UAAU0hE,aAAe,SAAUv9E,GAC5C,GAAI0C,IAAS,CACb,IAAImlB,KAAK6zC,UAAY7zC,KAAK6zC,SAAS96D,OAAS,EACxC,IAAK,GAAIG,GAAI,EAAGA,EAAI8mB,KAAK6zC,SAAS96D,OAAQG,IACtC,GAAIf,IAAU6nB,KAAK6zC,SAASz6D,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAI,CAC/DuB,EAAQ3B,CACR,OAIZ,MAAO2B,IAEXm2D,EAAah9C,UAAUsiE,gBAAkB,WACrC,GAAIliE,GAAS,GAAIo4D,GACjBp4D,GAAOu9D,QAAQ3xD,KAAK7G,MAAO6G,KAAK/G,OAAQ+G,MACxCA,KAAK2vD,UAAUv7D,GACfA,EAAO9I,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBACxD0I,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAO9I,YAAY9C,OAAO,KAAM,wBAE7BwoD,GACT75C,IA6BE84C,GAAkC,SAAUpoC,GAE5C,QAASooC,GAAiBj2D,EAAMmO,EAAM8Q,GAClC,GAAI8O,GAAQF,EAAO5T,KAAK+L,OAASA,IAKjC,OAJIhmB,IAAQmO,GAAQ8Q,IAChB8O,EAAMoB,YAAYnvB,EAAMmO,EAAM8Q,GAC9B8O,EAAMsiD,aAAejsD,aAAWs4D,OAE7B3uD,EAkbX,MAzbA9B,IAAUgqC,EAAkBpoC,GAS5B9T,OAAO+H,eAAem0C,EAAiBj8C,UAAW,mBAO9C7R,IAAK,WACD,GAAI2wE,IAAiB,CACrB,IAAI9yD,KAAKpK,WAAaoK,KAAKkpD,MAAO,CAC9B,GAAIyN,GAAW32D,KAAKkpD,MAAM59D,WAC1B,IAAIqrE,GAAYA,EAAS30E,IAAI,MAAO,CAChC,GAAI40E,GAAaD,EAASx0E,IAAI,KAC9B,IAAIy0E,EAAY,CACZ,GAAIpiE,GAAoB,GAAIw1D,IAAsB4M,EAClD,IAAmC,IAA/BpiE,EAAkBF,SAClB,GAAI0L,KAAKipD,OAASjpD,KAAKipD,MAAMlwE,OAAS,EAAG,CACrC,GAAIub,IAAW,CAUf,IATI0L,KAAK1U,YAAYtJ,IAAI,QACrB40E,EAAa52D,KAAK1U,YAAYnJ,IAAI,SAE9BqS,EAAoB,GAAIw1D,IAAsB4M,KACrBpiE,EAAkBF,SAAW,IAClDA,GAAW,IAIlBA,EACD,IAAK,GAAIpb,GAAI,EAAGA,EAAI8mB,KAAKipD,MAAMlwE,OAAQG,IAAK,CACxC,GAAIqI,OAAa,GACb2I,EAAY8V,KAAKipD,MAAM7vE,OAAOC,SAASH,EAAEI,WAAY,IAIzD,IAHI4Q,GAAaA,YAAqBG,MAClC9I,EAAaye,KAAKtU,gBAAgBwH,OAAOhJ,IAEzC3I,EACA,GAAIA,EAAWS,IAAI,MAAO,CAElB/H,EAAS,GADb28E,EAAar1E,EAAWY,IAAI,SAGxBqS,EAAoB,GAAIw1D,IAAsB4M,MAE1C38E,EAASua,EAAkBF,UAGpB,IAAXra,IACA64E,GAAiB,OAIrBA,IAAiB,OAOjC,IAAI9yD,KAAK1U,YAAYtJ,IAAI,MAAO,CAE5B,GAAI/H,GAAS,GADb28E,EAAa52D,KAAK1U,YAAYnJ,IAAI,SAG9BqS,EAAoB,GAAIw1D,IAAsB4M,MAE1C38E,EAASua,EAAkBF,UAGpB,IAAXra,IACA64E,GAAiB,OAIrBA,IAAiB,IAOzC,MAAOA,IAEX/2D,YAAY,EACZC,cAAc,IAYlBi0C,EAAiBwc,MAAQ,SAAUt4D,EAAM5S,EAAYkS,EAAgBvJ,GACjE,GAAImK,GAAQ,GAAI47C,EAChB57C,GAAMuB,WAAY,EAClBvB,EAAM60D,MAAQ/0D,EACdE,EAAM/I,YAAc/J,EACpB8S,EAAM3I,gBAAkB+H,EACxBY,EAAM0mD,KAAO7wD,EACTmK,EAAM/I,YAAYtJ,IAAI,UACtBqS,EAAM40D,MAAQ50D,EAAM/I,YAAYnJ,IAAI,QAExC,IAAImuD,GAAUj8C,EAAM/I,YAAYpJ,SAAS,MASzC,OARgB,QAAZouD,OAAuC,KAAZA,IAC3Bj8C,EAAM07D,YAAc,GAAI9vE,OAAMqwD,EAAQv3D,SAE1Csb,EAAMs8C,cAAgB,EACtBt8C,EAAMk4D,aAAe,GAAIzkC,KACrBzzB,EAAM6/C,WAAa,GACnB7/C,EAAMygE,uBAEHzgE,GAEX47C,EAAiBj8C,UAAU8gE,qBAAuB,WAC9C,GAAI90D,KAAK1U,YAAYtJ,IAAI,OAAQ,CAC7B,GAAIsuD,GAAUtwC,KAAK1U,YAAYpJ,SAAS,MACxC,IAAIouD,GAAWA,EAAQv3D,OAAS,EAG5B,IAAK,GAFD8zE,GAAa7sD,KAAKk0C,WAClBjrD,EAAQqnD,EAAQv3D,QAAU8zE,EAAavc,EAAQv3D,OAAS8zE,EACnD3zE,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIkU,GAAOkjD,EAAQl3D,OAAOC,SAASH,EAAEI,WAAY,KAAK,EAClD8T,KACA4S,KAAK0wC,OAAOx3D,GAAG6zB,MAAQ3f,GAAc,OAMzD6iD,EAAiBj8C,UAAUi+D,kBAAoB,SAAU/mE,GACrD,GAAIuiE,GAAY,GAAI0E,GACpB,IAAIjnE,EAAM,CACN,GAAI+N,GAAS/N,EAAK+N,OACdjf,EAAOkR,EAAK4hE,UACZ5hE,GAAK0K,WAAa5b,OAAiC,KAAlBA,EAAKI,UAA4BJ,EAAKI,WAAaC,mBAAiBme,OACrGi1D,EAAUx0D,OAAS+G,KAAKmwD,gBAAgBl3D,EAAOvW,EAAGuW,EAAOtW,EAAGsW,EAAOrW,MAAOqW,EAAOhf,QAASD,EAAKS,KAAMT,EAAKI,UAG1GqzE,EAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,SAE/Cm4E,EAAYlnE,EAAK8gE,aAEjByB,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS53C,EAAKlH,MACpCumE,GAASr/D,EAAKq/D,MAMlB,IALIr/D,EAAKihE,cACLsB,EAAUG,UAAY,GAAI/qB,IAAO33C,EAAKihE,YAAa5B,EAAO3nE,QAE9D6qE,EAAU/C,YAAcH,EAAOzlE,MAC/B2oE,EAAUI,YAActD,EAAO3nE,MAC3BwvE,EAAW,CAEPpuE,IADA+qE,GAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,KAC/C,IAAM,EAAIrD,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAEzC,GAAIshB,OAA0C,KAAvBpa,EAAK0mE,cAAgC1mE,EAAK0mE,cAAgB5zD,mBAAiB9jB,KAC9F28E,EAAoB72D,KAAK61D,YAAcrwD,uBAAqBhM,IAAMgM,uBAAqB29B,MAC3FsqB,GAAU8E,aAAe,GAAIztD,IAAgBQ,EAAWuxD,OAEvD,EACG59D,EAAS+G,KAAK/G,UAEV+G,KAAKpK,WACLoK,KAAKhmB,UACyB,KAAvBgmB,KAAKhmB,KAAKI,UACjB4lB,KAAKhmB,KAAKI,WAAaC,mBAAiBme,OACxCi1D,EAAUx0D,OAAS+G,KAAKmwD,gBAAgBl3D,EAAOvW,EAAGuW,EAAOtW,EAAGsW,EAAOrW,MAAOqW,EAAOhf,QAAS+lB,KAAKhmB,KAAKS,KAAMulB,KAAKhmB,KAAKI,UAGpHqzE,EAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,QAGvD,IAAIm4E,GAAYpyD,KAAKgsD,SACjBoG,KACA3E,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAKhc,MACxC,IAAIumE,GAASvqD,KAAKuqD,MAMlB,IALIvqD,KAAKmsD,cACLsB,EAAUG,UAAY,GAAI/qB,IAAO7iC,KAAKmsD,YAAa5B,EAAO3nE,QAE9D6qE,EAAU/C,YAAcH,EAAOzlE,MAC/B2oE,EAAUI,YAActD,EAAO3nE,MAC3BwvE,EAAW,CACX,GAAIrD,IAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,IACpEpuE,GAAS+qE,EAAY,IAAM,EAAIA,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAEzCypE,EAAU5C,cAAgB7qD,KAAK6qD,cACX,OAAhB7qD,KAAK9C,YAA0C,KAAhB8C,KAAK9C,SACpCuwD,EAAU5C,cAAgB7qD,KAAK9C,OAEnC,IAAIoI,OAA0C,KAAvBtF,KAAK4xD,cAAgC5xD,KAAK4xD,cAAgB5zD,mBAAiB9jB,KAC9F28E,EAAoB72D,KAAK61D,YAAcrwD,uBAAqBhM,IAAMgM,uBAAqB29B,MAC3FsqB,GAAU8E,aAAe,GAAIztD,IAAgBQ,EAAWuxD,GAE5DpJ,EAAUnD,SAAWtqD,KAAKsqD,SACD,OAArBmD,EAAUx0D,YAA+C,KAArBw0D,EAAUx0D,SAC9Cw0D,EAAUx0D,QAAU,EAAG,EAAG,EAAG,GAEjC,IAAI9N,GAAW,GAAIM,IAAYgiE,EAAUx0D,OAAQ+G,KAAKtU,iBAClD2uC,EAAWlvC,EAASkvC,QAMxB,IALAA,EAASqB,IAAI/2B,SACR3E,KAAKsqD,WACNjwB,EAASqB,IAAIj3B,qBAAqB,MAClC41B,EAASuN,0BAET5nC,KAAKpK,UAAW,CAChB,GAAIrB,OAAO,EACPrJ,KACAqJ,EAAOyL,KAAKu2D,YAAYrrE,QAER,KAATqJ,GAAiC,OAATA,IAC/BA,EAAOyL,KAAK6oD,iBAEhB7oD,KAAK82D,cAAcz8B,EAAUozB,EAAWl5D,EAAMk5D,EAAU8E,kBAGnDvyD,MAAKqJ,QACNrJ,KAAKqJ,MAAQ,GAAIhU,IAAgBC,gBAAcS,WAAYiK,KAAKw2D,eAAelhE,gBAAcC,aAEjGyK,KAAK82D,cAAcz8B,EAAUozB,EAAWztD,KAAKqJ,MAAOokD,EAAU8E,aAKlE,OAHKvyD,MAAKsqD,UACNjwB,EAASqB,IAAIh3B,qBAEVvZ,GAEX8kD,EAAiBj8C,UAAU8iE,cAAgB,SAAUz8B,EAAUozB,EAAWl5D,EAAMg+D,GACxEl4B,EAASwsB,qBAAuB4G,EAAUnD,WAC1CjwB,EAASE,OACTF,EAASuN,0BAEb5nC,KAAKwtD,wBAAwBnzB,EAAUozB,GACnCpzB,EAASwsB,qBAAuB4G,EAAUnD,WAC1CjwB,EAASK,UACTL,EAASE,OACTF,EAASqB,IAAIj3B,qBAAqB,MAClC41B,EAASuN,yBAEb,IAAI0I,GAAUtwC,KAAK6zC,SACf4iB,EAAkBz2D,KAAK1U,YAAYnJ,IAAI,KACvCjJ,GAAK,CAIT,IAHIu9E,GAAmBA,EAAgB19E,OAAS,IAC5CG,EAAIu9E,EAAgB,IAEpBv9E,GAAK,GAAKA,EAAIo3D,EAAQv3D,OAAQ,CAC9B,GAAImS,GAAOolD,EAAQl3D,OAAOC,SAASH,EAAEI,WAAY,KAC7CwuD,GAAc,EAAG,GACjB+lB,EAAcJ,EAAUI,YACxBkJ,EAAoB,EAAIlJ,EAExBmJ,EAAWvJ,EAAU/C,cAAgB1lE,iBAAeI,OAASqoE,EAAU/C,cAAgB1lE,iBAAeG,OACtG6xE,IACAlvB,EAAW,GAAK,EAAIivB,EACpBjvB,EAAW,GAAK,EAAI+lB,IAGpB/lB,EAAW,GAAKivB,EAPC,EAQjBjvB,EAAW,GAAK,EAAI+lB,IAExB,IAAI1wB,GAAQswB,EAAUmB,UAClBxrE,EAAOqqE,EAAUx0D,OACjBrW,EAAQQ,EAAK,GAAK2zE,EAClBt0E,EAAYW,CAQhB,IANIX,EAAU,IADVu0E,EACgBD,EAGAlJ,EAEpBxzB,EAAS+I,QAAQ3gD,EAAWic,cAAYk4B,SACR,IAA5B62B,EAAU5C,cAAqB,CAC3BnoE,EAAIU,EAAK,GAAKyqE,CACdmJ,KACAt0E,GAAKmrE,EACLjrE,GAASm0E,GAEb55B,EAAQ,GAAI2F,KAAU,IAAK,IAAK,MAChCzI,EAASyC,cAAcp6C,EAAGolD,EAAW,GAAIllD,EAAOQ,EAAK,GAAI+5C,GACzDA,EAAQ,GAAI2F,KAAU,EAAG,EAAG,IAEhC,GAAI3qD,OAAQ,EAOZ,IALIA,EADA+S,GAAQjL,MAAMuB,QAAQ0J,GACdA,EAAK,GAAKA,EAAK,GAAKA,EAAK,GAGzBA,EAED,CACP,GAAI+rE,IAAiBnvB,EAAW,GAAIA,EAAW,GAAIllD,EAAQklD,EAAW,GAAI1kD,EAAK,GAC/E,IAAIqqE,EAAU5C,cAAgB,EAAG,CAC7B,GAAIrgE,GAAQ6vC,EAASE,MACrB,IAAgC,KAA5BkzB,EAAU5C,cACVxwB,EAASG,mBAAmB,EAAGH,EAAShzB,MAAM,IAC9CgzB,EAAS+N,iBAAiB,IAG1B3lD,GAFU43C,EAAShzB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IACpDE,EAAIF,EAAU,GACGA,EAAU,GAAKA,EAAU,GAAIA,EAAU,QAE3D,IAAgC,MAA5BgrE,EAAU5C,cACfxwB,EAASG,mBAAmBH,EAAShzB,MAAM,GAAI,GAC/CgzB,EAAS+N,iBAAiB,KAG1B3lD,GAFUA,EAAU,GAChBE,EAAI03C,EAAShzB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IACjCA,EAAU,GAAKA,EAAU,GAAIA,EAAU,QAE3D,IAAgC,MAA5BgrE,EAAU5C,cAAuB,CACtCxwB,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,iBAAiB,IAC1B,IAAI8uB,GAAM78B,EAAShzB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IACpDE,EAAI03C,EAAShzB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,GACtDA,IAAay0E,EAAKv0E,EAAGF,EAAU,GAAIA,EAAU,IAEjD,GAAIC,GAAIU,EAAK,GAAKyqE,CACdmJ,KACAt0E,GAAKmrE,EACLjrE,GAASm0E,GAEb55B,EAAQ,GAAI2F,KAAU,IAAK,IAAK,MAChCzI,EAASyC,cAAcp6C,EAAGolD,EAAW,GAAIllD,EAAOQ,EAAK,GAAI+5C,GACzDA,EAAQ,GAAI2F,KAAU,EAAG,EAAG,IAC5BzI,EAAS0H,WAAW5pD,EAAOoc,EAAM0iE,EAAe,KAAM95B,EAAOo1B,GAC7Dl4B,EAASK,QAAQlwC,OAGjB6vC,GAAS0H,WAAW5pD,EAAOoc,EAAM0iE,EAAe,KAAM95B,EAAOo1B,IAIrEl4B,EAASwsB,qBAAuB4G,EAAUnD,WAC1CjwB,EAASqB,IAAIh3B,qBACb21B,EAASK,YAGjBuV,EAAiBj8C,UAAUwiE,eAAiB,SAAU/hE,GAClD,GACIywB,GACAiyC,EACAtwD,EACAypC,EACAr3C,EALA9d,EAAS6kB,KAAK1U,YAAYnJ,IAAI,KAM9B0rE,EAAc7tD,KAAKuqD,OAAO3nE,KAC9B,IAAIod,KAAKpK,UAAW,CAChBuhE,EAAW,GAAI9hE,IAAgBZ,EAAY,IAC3CoS,EAAS,GAAI/B,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAC3EmN,EAAUtwC,KAAK1U,YAAYpJ,SAAS,OACpC+W,EAAS+G,KAAK/G,MACd,IAAIm+D,KACJ,IAAIj8E,GAAUA,EAAOpC,OAAS,EAC1BoC,EAAO6P,QAAQ,SAAU5G,GACrBgzE,EAAS97E,KAAK67E,EAASrnC,cAAcwgB,EAAQl3D,OAAOC,SAAS+K,EAAM9K,WAAY,KAAK,IAAK,EAAG,GAAIutB,EAAQ,EAAG,GAAG,UAGjH,IAAIypC,EAAQv3D,OAAS,EAEtB,IAAK,GADDC,GAAMm+E,EAASrnC,cAAcwgB,EAAQ,GAAG,IAAK,EAAG,GAAIzpC,EAAQ,EAAG,GAAG,GAC7D3tB,EAAI,EAAGA,EAAIo3D,EAAQv3D,SAAUG,EAAG,CACjC0J,EAAQu0E,EAASrnC,cAAcwgB,EAAQl3D,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAAK,EAAG,GAAIutB,EAAQ,EAAG,GAAG,EACxG7tB,GAAMX,KAAKW,IAAIA,EAAK4J,GACpBw0E,EAAS97E,KAAKtC,GAGtBksC,EAAKkyC,EAASr+E,OAAS,EAAO,IAAMkgB,EAAOrW,MAAQ,EAAIirE,GAAkBuJ,EAASl6C,OAAQk6C,EAASr+E,OAAS,GAAO,OAElH,CAED,GADAmsC,EAAI,IACA/pC,GAAUA,EAAOpC,OAAS,GAgB1B,MAAOmsC,EAfPiyC,GAAW,GAAI9hE,IAAgBZ,EAAY,IAC3CoS,EAAS,GAAI/B,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAC3EmN,EAAUtwC,KAAK1U,YAAYpJ,SAAS,MACpC,IAAI4tD,GAAgB9vC,KAAK8vC,cACrBltD,EAAQu0E,EAASrnC,cAAiC,OAAlBggB,GAAmD,gBAAlBA,GAA8BA,EAC/FQ,EAAQn1D,EAAO,IAAI,IAAK,EAAG,GAAI0rB,EAAQ,EAAG,GAAG,EACjD5N,GAAS+G,KAAK/G,OAEVisB,EADAtiC,EACK,IAAMqW,EAAOrW,MAAQ,EAAIirE,GAAgBjrE,EAG1C,GAOhB,GAAI0R,GAAW,CACf,IAAInZ,GAAUA,EAAOpC,OAAS,GAC1B,GAAU,KAANmsC,EAAU,CACViyC,EAAW,GAAI9hE,IAAgBZ,EAAYywB,EAC3C,IACI93B,GAA0B,QAD1B0iD,EAAgB9vC,KAAK8vC,gBACsC,gBAAlBA,GAA8BA,EACvEQ,EAAQn1D,EAAO,IAAI,GACnBmsD,EAAW6vB,EAASrnC,cAAc1iC,EACtC,IAAIk6C,EAAS,GAAKruC,EAAOrW,OAAS0kD,EAAS,GAAKruC,EAAOhf,OAInD,IAAK,GAHD2I,GAAQqW,EAAOrW,MAAQ,EAAIirE,EAC3BwJ,EAAIp+D,EAAOhf,OAAS,EAAI4zE,EAEnB30E,EAAI,EAAGA,GAAK+f,EAAOhf,OAAQf,IAAK,CAErC,GAAIuB,IADJ08E,EAAW,GAAI9hE,IAAgBZ,EAAYvb,IACvB42C,cAAc1iC,EAClC,IAAI3S,EAAK,GAAKwe,EAAOrW,OAASnI,EAAK,GAAK48E,EAAG,CACvC/iE,EAAWpb,CACX,GAAG,CAGC,GAAIu6E,IADJ0D,EAAW,GAAI9hE,IAAgBZ,EAD/BH,GAAsB,OAEG0W,aAAa5d,EAAMyZ,EAC5C,IAAIvS,EAVN,KAUsB,CAChB6iE,EAAS9vD,MAXf,IAYM,OAGJ,GADA5sB,EAAO08E,EAASrnC,cAAc1iC,GAAO,EAAG,GAAIyZ,EAAQ,EAAG,GACnD4sD,EAAY7wE,GAASnI,EAAK,GAAK48E,EAAG,CAClCF,EAAS9vD,MAAQ/S,CACjB,cAECA,EAnBP,KAoBF4wB,GAAI5wB,CACJ,cAMX4wB,GAAI,KACTA,EAAI,GAER,OAAOA,IAEJ+qB,GACTe,IA6BEhB,GAAiC,SAAUnoC,GAE3C,QAASmoC,GAAgBh2D,EAAMmO,EAAM8Q,GACjC,GAAI8O,GAAQF,EAAO5T,KAAK+L,OAASA,IAIjC,OAHIhmB,IAAQmO,GAAQ8Q,GAChB8O,EAAMoB,YAAYnvB,EAAMmO,EAAM8Q,GAE3B8O,EAsSX,MA5SA9B,IAAU+pC,EAAiBnoC,GAkB3BmoC,EAAgByc,MAAQ,SAAUt4D,EAAM5S,EAAYkS,EAAgBvJ,GAChE,GAAImK,GAAQ,GAAI27C,EAchB,OAbA37C,GAAMuB,WAAY,EAClBvB,EAAM60D,MAAQ/0D,EACdE,EAAM/I,YAAc/J,EACpB8S,EAAM3I,gBAAkB+H,EACxBY,EAAM0mD,KAAO7wD,EACTmK,EAAM/I,YAAYtJ,IAAI,UACtBqS,EAAM40D,MAAQ50D,EAAM/I,YAAYnJ,IAAI,SAExCkS,EAAMs8C,cAAgB,EACtBt8C,EAAMk4D,aAAe,GAAIzkC,KACrBzzB,EAAM6/C,WAAa,GACnB7/C,EAAMygE,uBAEHzgE,GAEX27C,EAAgBh8C,UAAU8gE,qBAAuB,WAC7C,GAAI90D,KAAK1U,YAAYtJ,IAAI,OAAQ,CAC7B,GAAIsuD,GAAUtwC,KAAK1U,YAAYpJ,SAAS,OACpC2qE,EAAa7sD,KAAKk0C,WAClBjrD,EAAQqnD,EAAQv3D,QAAU8zE,EAAavc,EAAQv3D,OAAS8zE,CAE5D,IADA7sD,KAAK+vD,YAAc,GAAI9vE,OAAMgJ,GACzBqnD,GAAWA,EAAQv3D,OAAS,EAAG,CAC/B,GAAI8B,GAAQmlB,KAAK1U,YAAYnJ,IAAI,IAC7BlC,OAAMuB,QAAQ3G,IAAUA,EAAM9B,OAAS,IACvC8B,EAAQA,EAAM,GACdmlB,KAAK60D,eAAiBh6E,EAE1B,KAAK,GAAI3B,GAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,EACvB,IAAIgS,EACA,GAAImQ,GAAmBxgB,IAA+B,OAArBmlB,KAAK+vD,iBAAoD,KAArB/vD,KAAK+vD,YAA6B,CACnG,GAAI53E,GAAQm4D,EAAQl3D,OAAOC,SAASH,EAAEI,WAAY,IAC9C2G,OAAMuB,QAAQrJ,GACd6nB,KAAK+vD,YAAY32E,OAAOC,SAASH,EAAEI,WAAY,KAAOnB,EAAM,GAG5D6nB,KAAK+vD,YAAY32E,OAAOC,SAASH,EAAEI,WAAY,KAAOnB,EAEtDe,IAAM2B,GACNqQ,EAAK6hB,MAAQ/M,KAAK+vD,YAAY32E,OAAOC,SAASH,EAAEI,WAAY,KAC5D0mB,KAAK60D,eAAiB37E,GAGtBgS,EAAK6hB,MAAQ/M,KAAK+vD,YAAY32E,OAAOC,SAASH,EAAEI,WAAY,SAIhE4R,GAAK6hB,MAAQ,OAOrCijC,EAAgBh8C,UAAUi+D,kBAAoB,SAAU/mE,GACpD,GAAIuiE,GAAY,GAAI0E,GACpB,IAAIjnE,EAAM,CACN,GAAI+N,GAAS/N,EAAK+N,OACdjf,EAAOkR,EAAK4hE,UACZ5hE,GAAK0K,WAAa5b,OAAiC,KAAlBA,EAAKI,UAA4BJ,EAAKI,WAAaC,mBAAiBme,OACrGi1D,EAAUx0D,OAAS+G,KAAKmwD,gBAAgBl3D,EAAOvW,EAAGuW,EAAOtW,EAAGsW,EAAOrW,MAAOqW,EAAOhf,QAASD,EAAKS,KAAMT,EAAKI,UAG1GqzE,EAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,SAE/Cm4E,EAAYlnE,EAAK8gE,aAEjByB,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS53C,EAAKlH,MACpCumE,GAASr/D,EAAKq/D,MAMlB,IALIr/D,EAAKihE,cACLsB,EAAUG,UAAY,GAAI/qB,IAAO33C,EAAKihE,YAAa5B,EAAO3nE,QAE9D6qE,EAAU/C,YAAcH,EAAOzlE,MAC/B2oE,EAAUI,YAActD,EAAO3nE,MAC3BwvE,EAAW,CAEPpuE,IADA+qE,GAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,KAC/C,IAAM,EAAIrD,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAErCkH,EAAKq9D,qBAA0C,KAAhBr9D,EAAKgS,OACpCuwD,EAAU5C,cAAgB,EAG1B4C,EAAU5C,cAAgB3/D,EAAKgS,MAEnC,IAAIoI,OAA0C,KAAvBpa,EAAK0mE,cAAgC1mE,EAAK0mE,cAAgB5zD,mBAAiB9jB,KAC9F28E,EAAoB72D,KAAK61D,YAAcrwD,uBAAqBhM,IAAMgM,uBAAqB29B,MAC3FsqB,GAAU8E,aAAe,GAAIztD,IAAgBQ,EAAWuxD,OAEvD,CACG59D,EAAS+G,KAAK/G,MACd+G,MAAKpK,WACLoK,KAAKhmB,UACyB,KAAvBgmB,KAAKhmB,KAAKI,UACjB4lB,KAAKhmB,KAAKI,WAAaC,mBAAiBme,OACxCi1D,EAAUx0D,OAAS+G,KAAKmwD,gBAAgBl3D,EAAOvW,EAAGuW,EAAOtW,EAAGsW,EAAOrW,MAAOqW,EAAOhf,QAAS+lB,KAAKhmB,KAAKS,KAAMulB,KAAKhmB,KAAKI,UAGpHqzE,EAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,OAEnD,IAAIm4E,GAAYpyD,KAAKgsD,SACjBoG,KACA3E,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAKhc,MACxC,IAAIumE,GAASvqD,KAAKuqD,MAMlB,IALIvqD,KAAKmsD,cACLsB,EAAUG,UAAY,GAAI/qB,IAAO7iC,KAAKmsD,YAAa5B,EAAO3nE,QAE9D6qE,EAAU/C,YAAcH,EAAOzlE,MAC/B2oE,EAAUI,YAActD,EAAO3nE,MAC3BwvE,EAAW,CACX,GAAIrD,IAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,IACpEpuE,GAAS+qE,EAAY,IAAM,EAAIA,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAEzCypE,EAAU5C,cAAgB7qD,KAAK6qD,cACX,OAAhB7qD,KAAK9C,YAA0C,KAAhB8C,KAAK9C,SACpCuwD,EAAU5C,cAAgB7qD,KAAK9C,OAEnC,IAAIoI,OAA0C,KAAvBtF,KAAK4xD,cAAgC5xD,KAAK4xD,cAAgB5zD,mBAAiB9jB,KAC9F28E,EAAoB72D,KAAK61D,YAAcrwD,uBAAqBhM,IAAMgM,uBAAqB29B,MAC3FsqB,GAAU8E,aAAe,GAAIztD,IAAgBQ,EAAWuxD,GAE5DpJ,EAAUnD,SAAWtqD,KAAKsqD,QAC1B,IAAIn/D,GAAW,GAAIM,IAAYgiE,EAAUx0D,OAAQ+G,KAAKtU,iBAClD2uC,EAAWlvC,EAASkvC,QAMxB,IALAA,EAASqB,IAAI/2B,SACR3E,KAAKsqD,WACNjwB,EAASqB,IAAIj3B,qBAAqB,MAClC41B,EAASuN,0BAET5nC,KAAKpK,UAAW,CAChB,GAAIrB,GAAOyL,KAAKu2D,YAAYrrE,QACP,KAATqJ,GAAiC,OAATA,IAAoByL,KAAKpK,WAA2B,IAAdrB,EAAK9Z,QAC3E8Z,EAAOyL,KAAK6oD,iBAEhB7oD,KAAKs3D,aAAaj9B,EAAUozB,EAAWl5D,EAAMk5D,EAAU8E,kBAGlDvyD,MAAKqJ,QACNrJ,KAAKqJ,MAAQrJ,KAAK8oD,kBAEtB9oD,KAAKs3D,aAAaj9B,EAAUozB,EAAWztD,KAAKqJ,MAAOokD,EAAU8E,aAKjE,OAHKvyD,MAAKsqD,UACNjwB,EAASqB,IAAIh3B,qBAEVvZ,GAEX6kD,EAAgBh8C,UAAUsjE,aAAe,SAAUj9B,EAAUozB,EAAWl5D,EAAMg+D,GACtEl4B,EAASwsB,qBAAuB4G,EAAUnD,WAC1CjwB,EAASE,OACTF,EAASuN,0BAEb5nC,KAAKwtD,wBAAwBnzB,EAAUozB,GACnCpzB,EAASwsB,qBAAuB4G,EAAUnD,WAC1CjwB,EAASK,UACTL,EAASE,OACTF,EAASqB,IAAIj3B,qBAAqB,MAClC41B,EAASuN,yBA2Fb,KAAK,GAzFD0I,GAAUtwC,KAAK6zC,SAwFf2I,EAASx8C,KACJnlB,EAAQ,EAAGA,EAAQy1D,EAAQv3D,SAAU8B,GAxFhC,SAAUA,GACpB,GAAIqQ,GAAOolD,EAAQl3D,OAAOC,SAASwB,EAAMvB,WAAY,KACjDi+E,KACA1J,EAAcJ,EAAUI,YACxBkJ,EAAoB,EAAIlJ,EAExBmJ,EAAWvJ,EAAU/C,cAAgB1lE,iBAAeI,OAASqoE,EAAU/C,cAAgB1lE,iBAAeG,OACtG6xE,IACAO,EAAWj8E,KAAK,EAAIy7E,GACpBQ,EAAWj8E,MAAMT,EAAQ,GAAKgzE,EAAct5D,EAAKuW,SAAS5D,aAAersB,KAGzE08E,EAAWj8E,KAAKy7E,EAPC,GAQjBQ,EAAWj8E,MAAMT,EAAQ,GAAKgzE,EAAct5D,EAAKuW,SAAS5D,aAAersB,KAE7E,IAAIsiD,GAAQswB,EAAUmB,UAClBxrE,EAAOqqE,EAAUx0D,OACjBrW,EAAQQ,EAAK,GAAK2zE,EAClBt0E,EAAYW,CAEZX,GAAU,IADVu0E,EACgBD,EAGAlJ,EAEpBxzB,EAAS+I,QAAQ3gD,EAAWic,cAAYk4B,QACxC,IAAI4gC,IAAW,EACXf,EAAkBja,EAAOlxD,YAAYnJ,IAAI,IAM7C,IALwB,OAApBs0E,OAAuD,KAApBA,GAAmCA,EAAgB19E,OAAS,GAC/F09E,EAAgBzrE,QAAQ,SAAUqlD,GAC9BmnB,EAAWA,GAAannB,IAAkBx1D,IAGlB,IAA5B4yE,EAAU5C,eACN2M,EAAU,CACN90E,EAAIU,EAAK,GAAKyqE,CACdmJ,KACAt0E,GAAKmrE,EACLjrE,GAASm0E,GAEb55B,EAAQ,GAAI2F,KAAU,IAAK,IAAK,MAChCzI,EAASyC,cAAcp6C,EAAG60E,EAAW,GAAI30E,EAAO2R,EAAKuW,SAAS5D,aAAci2B,GAC5EA,EAAQ,GAAI2F,KAAU,EAAG,EAAG,IAGpC,GAAI3qD,GAAQ+S,EAAK,GAAKA,EAAK,GAAKA,EAAK,GACjC+rE,GAAiBM,EAAW,GAAIA,EAAW,GAAI30E,EAAQ20E,EAAW,GAAIhjE,EAAKuW,SAAS5D,aACxF,IAAIumD,EAAU5C,cAAgB,EAAG,CAC7B,GAAIrgE,GAAQ6vC,EAASE,MACrB,IAAgC,KAA5BkzB,EAAU5C,cACVxwB,EAASG,mBAAmB,EAAGH,EAAShzB,MAAM,IAC9CgzB,EAAS+N,iBAAiB,IAG1B3lD,GAFIC,EAAI23C,EAAShzB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAClDE,EAAIF,EAAU,GACCA,EAAU,GAAKA,EAAU,GAAIA,EAAU,QAEzD,IAAgC,MAA5BgrE,EAAU5C,cACfxwB,EAASG,mBAAmBH,EAAShzB,MAAM,GAAI,GAC/CgzB,EAAS+N,iBAAiB,KAG1B3lD,GAFIC,EAAID,EAAU,GACdE,EAAI03C,EAAShzB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IACnCA,EAAU,GAAKA,EAAU,GAAIA,EAAU,QAEzD,IAAgC,MAA5BgrE,EAAU5C,cAAuB,CACtCxwB,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,iBAAiB,IAC1B,IAAI1lD,GAAI23C,EAAShzB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,IAClDE,EAAI03C,EAAShzB,MAAM,IAAM5kB,EAAU,GAAKA,EAAU,GACtDA,IAAaC,EAAGC,EAAGF,EAAU,GAAIA,EAAU,IAE/C,GAAI+0E,EAAU,CACN90E,EAAIU,EAAK,GAAKyqE,CACdmJ,KACAt0E,GAAKmrE,EACLjrE,GAASm0E,GAEb55B,EAAQ,GAAI2F,KAAU,IAAK,IAAK,MAChCzI,EAASyC,cAAcp6C,EAAG60E,EAAW,GAAI30E,EAAO2R,EAAKuW,SAAS5D,aAAci2B,GAC5EA,EAAQ,GAAI2F,KAAU,EAAG,EAAG,IAEhCzI,EAAS0H,WAAW5pD,EAAOoc,EAAM0iE,EAAe,KAAM95B,EAAOo1B,GAC7Dl4B,EAASK,QAAQlwC,OAGjB6vC,GAAS0H,WAAW5pD,EAAOoc,EAAM0iE,EAAe,KAAM95B,EAAOo1B,IAKzD13E,EAERw/C,GAASwsB,qBAAuB4G,EAAUnD,WAC1CjwB,EAASqB,IAAIh3B,qBACb21B,EAASK,YAGjBsV,EAAgBh8C,UAAUwiE,eAAiB,SAAU/hE,GACjD,GAAI0iE,GAAW,GAAI9hE,IAAgBZ,EAAY,GAAIpD,eAAa4D,SAC5D4R,EAAS,GAAI/B,IAAgB9G,mBAAiB9jB,KAAMsrB,uBAAqB29B,QACzEje,EAAI,CACR,IAAI7pB,GAAmB2E,KAAK+vD,cAAgB/vD,KAAK+vD,YAAYh3E,OAAS,EAAG,CAErE,IAAK,GADDC,GAAMm+E,EAASrnC,cAAc9vB,KAAK+vD,YAAY,IAAK,EAAG,GAAIlpD,EAAQ,EAAG,GAAG,GACnE3tB,EAAI,EAAGA,EAAI8mB,KAAK+vD,YAAYh3E,SAAUG,EAAG,CAC9C,GAAIf,GAAQg/E,EAASrnC,cAAc9vB,KAAK+vD,YAAY32E,OAAOC,SAASH,EAAEI,WAAY,MAAO,EAAG,GAAIutB,EAAQ,EAAG,GAAG,EAC9G7tB,GAAOA,EAAMb,EAASa,EAAMb,EAGhC+sC,GADAA,EAAM,IAAMllB,KAAK/G,OAAOrW,MAAQ,EAAIod,KAAKuqD,OAAO3nE,OAAU5J,GACjD,GAAM,GAAKksC,EAExB,MAAOA,IAEJ8qB,GACTgB,IAqBEymB,GAAmC,SAAU5vD,GAE7C,QAAS4vD,GAAkBz9E,EAAMmO,EAAM8Q,GACnC,GAAI8O,GAAQF,EAAO5T,KAAK+L,OAASA,IAKjC,OAJA+H,GAAM2vD,WAAY,EACd19E,GAAQmO,GAAQ8Q,GAChB8O,EAAMoB,YAAYnvB,EAAMmO,EAAM8Q,GAE3B8O,EAwSX,MA/SA9B,IAAUwxD,EAAmB5vD,GAS7B9T,OAAO+H,eAAe27D,EAAkBzjE,UAAW,YAiB/C7R,IAAK,WAID,MAHK6d,MAAK03D,WACN13D,KAAK23D,eAEF33D,KAAK03D,WAEhB37D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe27D,EAAkBzjE,UAAW,aAkB/C7R,IAAK,WACD,MAAO6d,MAAKiqD,iBAAgB,IAuBhCxpE,IAAK,SAAUtI,GACX6nB,KAAKkqD,iBAAiB/xE,GAAO,IAEjC4jB,YAAY,EACZC,cAAc,IAElBy7D,EAAkBhL,MAAQ,SAAUt4D,EAAM5S,EAAYkS,EAAgBvJ,GAClE,GAAImK,GAAQ,GAAIojE,EAWhB,OAVApjE,GAAMuB,WAAY,EAClBvB,EAAM60D,MAAQ/0D,EACdE,EAAM/I,YAAc/J,EACpB8S,EAAM3I,gBAAkB+H,EACxBY,EAAM0mD,KAAO7wD,EACTmK,EAAM/I,YAAYtJ,IAAI,UACtBqS,EAAM40D,MAAQ50D,EAAM/I,YAAYnJ,IAAI,SAExCkS,EAAMs8C,cAAgB,EACtBt8C,EAAMk4D,aAAe,GAAIzkC,KAClBzzB,GAEXojE,EAAkBzjE,UAAUmV,YAAc,SAAUnvB,EAAMmO,EAAM8Q,GAC5D+G,KAAKtU,gBAAkB1R,EAAK0R,gBAC5BsU,KAAK7G,MAAQnf,EACbgmB,KAAKgS,MAAQ7pB,EACb6X,KAAK1U,YAAc,GAAIxJ,IAAeke,KAAKtU,iBAC3CsU,KAAK+6C,KAAO/6C,KAAKtU,gBAAgB00C,oBACjCpgC,KAAKtU,gBAAgB2H,UAAU5S,IAAIuf,KAAK+6C,KAAM/6C,KAAK1U,aACnD0U,KAAK1U,YAAYvJ,MAAQie,KAAK+6C,KAAKzhE,WACnC0mB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,QAC3C6d,KAAK1U,YAAY9C,OAAO,IAAKL,GAC7B6X,KAAK2wC,cAAgB,EACrB3wC,KAAKqtD,gBAAgBrtD,KAAK4oD,cAC1B5oD,KAAK0xD,YAAYz4D,IAErBw+D,EAAkBzjE,UAAU09D,YAAc,SAAUz4D,GAChD,GAAI7E,GAAS,GAAIo4D,GACjBp4D,GAAOu9D,QAAQ3xD,KAAK7G,MAAOF,EAAQ+G,MACnC5L,EAAO9I,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBACxD0I,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAOy3D,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACzC4L,EAAO9I,YAAY9C,OAAO,KAAMwX,KAAK0yC,UAAY,kBACjD1yC,KAAK2vD,UAAUv7D,IAEnBqjE,EAAkBzjE,UAAU89D,eAAiB,SAAUC,OACjC,KAAdA,IAAwBA,GAAY,EACxC,IAAI6F,GAAiB53D,KAAK2sD,gBAAkB3sD,KAAKkpD,MAAMyD,cACvD,KAAIoF,GAAa6F,KACT3uE,EAAQ+W,KAAKk0C,YACL,EACR,IAASh7D,EAAI,EAAGA,EAAI+P,EAAO/P,IAEvB,IADIgS,EAAO8U,KAAK0wC,OAAOx3D,KACXgS,EAAKI,cAAgBssE,GAAmB7F,IAAc7mE,EAAKI,YAAYtJ,IAAI,OAAS,CAC5F,GAAImJ,GAAW6U,KAAKiyD,kBAAkB/mE,EAAM6mE,EAC5C/xD,MAAKkwD,eAAehlE,EAAKI,YAAaH,EAAU,KAKhE,GAAI4mE,EAAW,CACX,GAAI9oE,GAAQ+W,KAAKk0C,UACjB,IAAIjrD,EAAQ,EAER,IAAK,GADD4uE,OAAoB,GACf3+E,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIgS,GAAO8U,KAAK0wC,OAAOx3D,EACvB,IAAIgS,GAAQA,EAAKI,YAAa,CAC1B,GAAItR,GAAOkR,EAAK4hE,UACZ9yE,KACK69E,GAA2B,IAAN3+E,IACtB2+E,EAAoB73D,KAAK83D,iBAAiB5sE,EAAKI,cAEnD0U,KAAK+3D,kBAAkB7sE,EAAKI,YAAatR,EAAMkR,EAAK+N,OAAQ4+D,SAMxE73D,MAAK+3D,kBAAkB/3D,KAAK1U,YAAa0U,KAAKhmB,KAAMgmB,KAAK/G,UAIrEw+D,EAAkBzjE,UAAUi+D,kBAAoB,SAAU79D,EAAQ29D,GAC9D,GAAI94D,GAAS7E,EAAO6E,OAChB9N,EAAW,GAAIM,KAAa,EAAG,EAAGwN,EAAOrW,MAAOqW,EAAOhf,QAAS+lB,KAAKtU,gBACzEE,IAAWT,EAAU,MACrBA,EAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWlvC,EAASkvC,SACpBozB,EAAY,GAAI0E,GACpB1E,GAAUx0D,QAAU,EAAG,EAAGA,EAAOrW,MAAOqW,EAAOhf,OAC/C,IAAIm4E,GAAYh+D,EAAO43D,SACnB+F,IAAaK,IACb3E,EAAUC,UAAY,GAAI5qB,IAASsvB,IAEvC3E,EAAUmB,UAAY,GAAI9rB,IAAS1uC,EAAOpQ,MAC1C,IAAIumE,GAASn2D,EAAOm2D,MAMpB,IALIn2D,EAAO+3D,cACPsB,EAAUG,UAAY,GAAI/qB,IAAOzuC,EAAO+3D,YAAa5B,EAAO3nE,QAEhE6qE,EAAUI,YAActD,EAAO3nE,MAC/B6qE,EAAU/C,YAAcH,EAAOzlE,MAC3BstE,EAAW,CACX,GAAIrD,IAAeqD,EAAU,GAAK,GAAIA,EAAU,GAAK,GAAIA,EAAU,GAAK,IACpEpuE,GAAS+qE,EAAY,IAAM,EAAIA,EAAY,GAAK,EAChDA,EAAY,IAAM,EAAIA,EAAY,GAAK,EACvCA,EAAY,IAAM,EAAIA,EAAY,GAAK,EAC3CtB,GAAUU,YAAc,GAAIrrB,IAAS9+C,GAOzC,MALAypE,GAAU5C,cAAgBz2D,EAAO8I,OACjCm9B,EAASE,OACTF,EAASuN,yBACT5nC,KAAKwtD,wBAAwBnzB,EAAUozB,GACvCpzB,EAASK,UACFvvC,GAEXssE,EAAkBzjE,UAAU+jE,kBAAoB,SAAUx2E,EAAYvH,EAAMif,EAAQ++D,GAChF,GAAI7sE,EACJ,IAAI5J,EAAWS,IAAI,MAAO,CACtB,GAAImR,GAAuB5R,EAAWY,IAAI,KAC1C,IAAIgR,GAAwBA,EAAqBnR,IAAI,KAAM,CACvD,GAAIkwE,GAAmB/+D,EAAqBhR,IAAI,KAC5C+H,EAAYiJ,EAAqB3H,OAAO,IAI5C,IAHItB,GAAagoE,IACbA,EAAiBhoE,UAAYA,GAE7BgoE,IAEI/mE,EADA6sE,GAIW,GAAIvsE,IAAYymE,EAAkBlyD,KAAKtU,mBAEtC1R,EAAM,CAEdwQ,GADA6vC,EAAWrgD,EAAKqgD,UACCE,MACjBv6B,MAAKi4D,WACL9sE,EAAS20C,cAAe,GAExB9lD,EAAKI,WAAaC,mBAAiBme,OACnC6hC,EAASqE,aAAavzC,EAAU6U,KAAKk4D,yBAAyBj/D,EAAQjf,EAAMmR,EAAUkvC,IAGtFA,EAASqE,aAAavzC,EAAU8N,GAEpCohC,EAASK,QAAQlwC,SAK5B,IAAIwtE,GAAqBh+E,EAAM,CAChCmR,EAAW6sE,CACX,IAAI39B,GAAWrgD,EAAKqgD,SAChB7vC,EAAQ6vC,EAASE,MACjBvgD,GAAKI,WAAaC,mBAAiBme,OACnC6hC,EAASqE,aAAavzC,EAAU6U,KAAKk4D,yBAAyBj/D,EAAQjf,EAAMmR,EAAUkvC,IAGtFA,EAASqE,aAAavzC,EAAU8N,GAEpCohC,EAASK,QAAQlwC,KAGzBitE,EAAkBzjE,UAAUkkE,yBAA2B,SAAUj/D,EAAQjf,EAAMmR,EAAUkvC,GACrF,GAAI33C,GAAIuW,EAAOvW,EACXC,EAAIsW,EAAOtW,CACf,IAAI3I,EAAM,CACN,GAAIm+E,GAAmBn4D,KAAKo4D,wBAAwB/9B,EAASluC,QACpC,MAArBgsE,GACA99B,EAASG,mBAAmBrvC,EAASkc,MAAM,GAAI,GAC/CgzB,EAAS+N,gBAAgB,IACzB1lD,EAAIuW,EAAOvW,EACXC,IAAM3I,EAAKqtB,MAAM,GAAKpO,EAAOtW,EAAIsW,EAAOhf,SAEd,MAArBk+E,GACL99B,EAASG,mBAAmBrvC,EAASkc,MAAM,GAAIlc,EAASkc,MAAM,IAC9DgzB,EAAS+N,gBAAgB,KACzB1lD,IAAM1I,EAAKqtB,MAAM,IAAMpO,EAAOvW,EAAIyI,EAASkc,MAAM,KACjD1kB,IAAM3I,EAAKqtB,MAAM,GAAKpO,EAAOtW,EAAIwI,EAASkc,MAAM,KAEtB,MAArB8wD,IACL99B,EAASG,mBAAmB,EAAGrvC,EAASkc,MAAM,IAC9CgzB,EAAS+N,gBAAgB,KACzB1lD,IAAM1I,EAAKqtB,MAAM,GAAKpO,EAAOvW,EAAIuW,EAAOrW,OACxCD,EAAIsW,EAAOtW,GAGnB,OAASD,EAAGA,EAAGC,EAAGA,EAAGC,MAAOqW,EAAOrW,MAAO3I,OAAQgf,EAAOhf,SAE7Dw9E,EAAkBzjE,UAAUokE,wBAA0B,SAAUrsE,GAC5D,GAAI/C,GAAQ3Q,KAAKgM,MAA6E,IAAvEhM,KAAKggF,MAAMtsE,EAAOI,QAAQC,UAAU,GAAIL,EAAOI,QAAQC,UAAU,IAAY/T,KAAKiR,GACzG,QAAQN,GACJ,KAAM,GACFA,EAAQ,EACR,MACJ,MAAM,IACFA,EAAQ,GACR,MACJ,KAAK,IACDA,EAAQ,IAGhB,MAAOA,IAEXyuE,EAAkBzjE,UAAU8jE,iBAAmB,SAAUv2E,GACrD,GAAI4J,EACJ,IAAI5J,GAAcA,EAAWS,IAAI,MAAO,CACpC,GAAImR,GAAuB5R,EAAWY,IAAI,KAC1C,IAAIgR,GAAwBA,EAAqBnR,IAAI,KAAM,CACvD,GAAIkwE,GAAmB/+D,EAAqBhR,IAAI,KAC5C+H,EAAYiJ,EAAqB3H,OAAO,IACxCtB,KACAgoE,EAAiBhoE,UAAYA,GAE7BgoE,IACA/mE,EAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,mBAI9D,MAAOP,IAEXssE,EAAkBzjE,UAAU2jE,aAAe,WACvC,GAAI33D,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,KAAM,CAC/C,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,IACnB,QAAfZ,OAA6C,KAAfA,GAA8BA,EAAW9G,KAAO,IAC9EulB,KAAK03D,WAAY,KAItBD,GACTtgE,IAEE6yD,GAAuC,WACvC,QAASA,GAAsBkD,GAC3B,GAAIlpE,GACAqgD,EAAW,GACX/vC,EAAW,CACf,IAAI44D,GAAoB,gBAAPA,IAA0B,KAAPA,EAEhC,IAAK,GADDoL,GAASpL,EAAGv4D,MAAM,KACbzb,EAAI,EAAGA,EAAIo/E,EAAOv/E,OAAQG,IAC/B,OAAQo/E,EAAOl/E,OAAOC,SAASH,EAAEI,WAAY,MACzC,IAAK,IACD0K,GAAS5K,OAAO8J,WAAWo1E,EAAOp/E,EAAI,IACtC,MACJ,KAAK,KACD8K,GAAS5K,OAAO8J,WAAWo1E,EAAOp/E,EAAI,IAAKE,OAAO8J,WAAWo1E,EAAOp/E,EAAI,IAAKE,OAAO8J,WAAWo1E,EAAOp/E,EAAI,IAC1G,MACJ,KAAK,IACD8K,GAAS5K,OAAO8J,WAAWo1E,EAAOp/E,EAAI,IAAKE,OAAO8J,WAAWo1E,EAAOp/E,EAAI,IAAKE,OAAO8J,WAAWo1E,EAAOp/E,EAAI,IACtGE,OAAO8J,WAAWo1E,EAAOp/E,EAAI,IACjC,MACJ,KAAK,KACDob,EAAWlb,OAAO8J,WAAWo1E,EAAOp/E,EAAI,KACxCmrD,EAAWi0B,EAAOp/E,EAAI,GAAGgG,UAAU,IACtBiW,SAAS,QAClBkvC,EAASrkD,QAAQ,MAAO,KAM5CggB,KAAKqkC,SAAWA,EAChBrkC,KAAK1L,SAAWA,EAChB0L,KAAKhc,UAA0B,KAAVA,EAAyBG,EAAYH,IAAU,EAAG,EAAG,GAkB9E,MAhBAgmE,GAAsBh2D,UAAU1a,SAAW,WACvC,GAAI0K,IAAS5K,OAAO8J,YAAY8c,KAAKhc,MAAM,GAAK,KAAKrG,QAAQ,IACzDvE,OAAO8J,YAAY8c,KAAKhc,MAAM,GAAK,KAAKrG,QAAQ,IAChDvE,OAAO8J,YAAY8c,KAAKhc,MAAM,GAAK,KAAKrG,QAAQ,IACpD,OAAO,IACHqiB,KAAKqkC,SACL,IACArkC,KAAK1L,SACL,OACAtQ,EAAM,GAAG1K,WACT,IACA0K,EAAM,GAAG1K,WACT,IACA0K,EAAM,GAAG1K,WACT,OAED0wE,KCz2OPuO,GAA+B,WAQ/B,QAASA,GAAcC,EAAOv/D,GAC1B+G,KAAK1U,YAAc,GAAIxJ,IACnBuZ,GAAmBpC,GACnB+G,KAAK9G,QAAUD,EAGf+G,KAAK9G,WAET8G,KAAKmzC,aAAeqlB,EACpBx4D,KAAKtU,gBAAkB8sE,EAAM9sE,gBAC7BsU,KAAKmJ,cAiFT,MA/EApV,QAAO+H,eAAey8D,EAAcvkE,UAAW,UA4B3C7R,IAAK,WAID,OAHK6d,KAAKy4D,iBAAmBz4D,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,QAClEge,KAAKy4D,gBAAkBz4D,KAAK1U,YAAYnJ,IAAI,MAEzC6d,KAAKy4D,iBAmChBh4E,IAAK,SAAUtI,GACPA,IACA6nB,KAAKy4D,gBAAkBtgF,EACvB6nB,KAAK1U,YAAY7K,IAAI,IAAKuf,KAAKy4D,mBAGvC18D,YAAY,EACZC,cAAc,IAElBu8D,EAAcvkE,UAAUmV,YAAc,WAClCnJ,KAAK9X,OAAS,GAAIuD,IAAYuU,KAAK9G,QAAS8G,KAAKtU,kBAE9C6sE,KC7HPtyD,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QA+BnFzP,GAA+B,WAC/B,QAASA,KACLiJ,KAAK86C,aAAc,EACnB96C,KAAKpK,WAAY,EACjBoK,KAAK2sD,gBAAiB,EACtB3sD,KAAK04D,WAAY,EACjB14D,KAAK24D,SAAW,EAChB34D,KAAK44D,gBAAiB,EACtB54D,KAAK+oD,UAAW,EAChB/oD,KAAKpJ,UAAW,EAChBoJ,KAAK64D,WAAa,GAAIxjE,IAAgBC,gBAAcC,UAAW,MAC/DyK,KAAK84D,gBAAkB,GAAIzjE,IAAgBC,gBAAcC,UAAW,KAAMlE,eAAaC,MACvF0O,KAAK+4D,iBAAmB,GAAI1jE,IAAgBC,gBAAcC,UAAW,GAAIlE,eAAa4D,SACtF+K,KAAKxK,mBAAqB,GAAIH,IAAgBC,gBAAcC,UAAW,EAAGlE,eAAa4D,SACvF+K,KAAKg5D,qBAAsB,EAC3Bh5D,KAAKi5D,YAAa,EAClBj5D,KAAKk5D,YAAa,EA0sFtB,MAxsFAnlE,QAAO+H,eAAe/E,EAAc/C,UAAW,UAmB3C7R,IAAK,WAOD,OAN4B,KAAjB6d,KAAKm5D,SAA2Bn5D,KAAK1U,YAAYtJ,IAAI,YACxDo3E,EAASp5D,KAAK1U,YAAYnJ,IAAI,aAE9B6d,KAAKm5D,QAAUC,OAGK,KAAjBp5D,KAAKm5D,SAA2Bn5D,KAAK1U,YAAYtJ,IAAI,KAAM,CAClE,GAAIo3E,GAASp5D,KAAK1U,YAAYnJ,IAAI,IAC9Bi3E,KACAp5D,KAAKm5D,QAAUC,GAGvB,MAAOp5D,MAAKm5D,SAmBhB14E,IAAK,SAAUtI,GACX,GAAI6nB,KAAKpK,WAA8B,gBAAVzd,IAAsBA,IAAU6nB,KAAKo5D,OAAQ,CACtE,GAAIC,IAAS,CACTr5D,MAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,OACzCge,KAAK1U,YAAY9C,OAAO,IAAKrQ,GAC7B6nB,KAAKm5D,QAAUhhF,EACfkhF,GAAS,GAETr5D,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,YACzCge,KAAK1U,YAAY9C,OAAO,SAAUrQ,GAClC6nB,KAAKm5D,QAAUhhF,EACfkhF,GAAS,GAERA,IACDr5D,KAAK1U,YAAY9C,OAAO,IAAKrQ,GAC7B6nB,KAAKm5D,QAAUhhF,GAGlB6nB,KAAKpK,WAA8B,gBAAVzd,IAC1B6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,IAGrC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,UAkB3C7R,IAAK,WACD,OAA4B,KAAjB6d,KAAKs5D,QAAyB,CACrC,GAAInhF,GAAQ,GAAIohF,GAUhB,IATAphF,EAAMmT,YAAc0U,KAAK1U,YACrB0U,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,YACrCuoE,EAASvqD,KAAK1U,YAAYpJ,SAAS,YACzBqoE,EAAOxxE,QAAU,IAC3BZ,EAAMqhF,SAAWjP,EAAO,GACxBpyE,EAAMshF,SAAWlP,EAAO,GACxBpyE,EAAM2wB,OAASyhD,EAAO,IAG1BvqD,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAChD,GAAIuoE,GAASvqD,KAAK1U,YAAYnJ,IAAI,KAClC,IAAIooE,EAAQ,CACR,GAAIA,EAAOvoE,IAAI,KAAM,CACjB,GAAIY,GAAQ2nE,EAAOpoE,IAAI,SACF,KAAVS,GAA0BxJ,OAAOm3D,MAAM3tD,KAC9CzK,EAAM2wB,OAASlmB,GAGvB,GAAI2nE,EAAOvoE,IAAI,KAAM,CACjB,GAAI8C,GAAQylE,EAAOpoE,IAAI,IACvB,IAAI2C,EACA,OAAQA,EAAMqD,MACV,IAAK,IACDhQ,EAAMk3C,OAASrqC,iBAAeE,MAC9B,MACJ,KAAK,IACD/M,EAAMk3C,OAASrqC,iBAAeG,OAC9B,MACJ,KAAK,IACDhN,EAAMk3C,OAASrqC,iBAAeI,KAC9B,MACJ,KAAK,IACDjN,EAAMk3C,OAASrqC,iBAAeK,SAC9B,MACJ,SACIlN,EAAMk3C,OAASrqC,iBAAeS,OAK9C,GAAI8kE,EAAOvoE,IAAI,KAAM,CACjB,GAAIqjE,GAAOkF,EAAOroE,SAAS,IACvBmjE,KACAltE,EAAMwyE,MAAQtF,KAK9BrlD,KAAKs5D,QAAUnhF,EAEnB,MAAO6nB,MAAKs5D,SA2BhB74E,IAAK,SAAUtI,GACX,GACIyK,GADA/E,EAAUmiB,KAAKuqD,SAEdvqD,KAAKpK,eAAqC,KAAhBzd,EAAMyK,OAAyB/E,EAAQ+E,QAAUzK,EAAMyK,SAClFA,EAAQzK,EAAMyK,MAElB,IAAI82E,KACC15D,KAAKpK,eAAuC,KAAlBzd,EAAMuhF,SAA2B77E,EAAQ67E,UAAYvhF,EAAMuhF,WACtFA,EAAUvhF,EAAMuhF,QAEpB,IAAIC,KACC35D,KAAKpK,eAAuC,KAAlBzd,EAAMwhF,SAA2B97E,EAAQ87E,UAAYxhF,EAAMwhF,WACtFA,EAAUxhF,EAAMwhF,QAEpB,IAAI70E,KACCkb,KAAKpK,eAAqC,KAAhBzd,EAAM2M,OAAyBjH,EAAQiH,QAAU3M,EAAM2M,SAClFA,EAAQ3M,EAAM2M,MAElB,IAAIugE,EAUJ,QAT0B,KAAfltE,EAAMktE,MAAwBxnE,EAAQwnE,OAASltE,EAAMktE,OAC5DA,EAAOltE,EAAMktE,QAEZrlD,KAAK45D,WAAa55D,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,WAAcY,GAAS+2E,GAAWD,KAC9F15D,KAAKs5D,QAAQE,aAA8B,KAAZE,EAA0BA,EAAU77E,EAAQ67E,QAC3E15D,KAAKs5D,QAAQG,aAA8B,KAAZE,EAA0BA,EAAU97E,EAAQ87E,QAC3E35D,KAAKs5D,QAAQxwD,WAA0B,KAAVlmB,EAAwBA,EAAQ/E,EAAQ+E,MACrEod,KAAK1U,YAAY9C,OAAO,UAAWwX,KAAKs5D,QAAQI,QAAS15D,KAAKs5D,QAAQK,QAAS35D,KAAKs5D,QAAQ12E,SAEvE,OAArBod,KAAK1U,aAAwB0U,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,OAAUY,GAASkC,GAASugE,EAAO,CACzGrlD,KAAKs5D,QAAQxwD,WAA0B,KAAVlmB,EAAwBA,EAAQ/E,EAAQ+E,MACrEod,KAAKs5D,QAAQjqC,WAA0B,KAAVvqC,EAAwBA,EAAQjH,EAAQiH,MACrEkb,KAAKs5D,QAAQ3O,UAAwB,KAATtF,EAAuBA,EAAOxnE,EAAQwnE,IAClE,IAAI8H,GAAKntD,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK1U,YAAYnJ,IAAI,MAAQ,GAAIL,IAAeke,KAAKtU,gBAC3FyhE,GAAG3kE,OAAO,OAAQlD,GAASnD,IAAI,WAC/BgrE,EAAG3kE,OAAO,IAAKwX,KAAKs5D,QAAQ12E,OAC5BuqE,EAAG3kE,OAAO,IAAK3D,EAAgBmb,KAAKs5D,QAAQx0E,YACX,KAAtBkb,KAAKs5D,QAAQjU,MACpB8H,EAAG3kE,OAAO,IAAKwX,KAAKs5D,QAAQjU,MAEhCrlD,KAAK1U,YAAY9C,OAAO,KAAM2kE,GAC9BntD,KAAK1U,YAAYiH,UAAW,IAGpCwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,SAkB3C7R,IAAK,WAOD,WANgC,KAArB6d,KAAK65D,cACZ75D,KAAK65D,YAAcz+E,oBAAkBW,QACjCikB,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,OACzCge,KAAK65D,YAAc75D,KAAK1U,YAAYnJ,IAAI,OAGzC6d,KAAK65D,aAmBhBp5E,IAAK,SAAUtI,OACU,KAAVA,GAAyBA,IAAU6nB,KAAK65D,cAC/C75D,KAAK65D,YAAc1hF,EACnB6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,KAGrC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,SAkB3C7R,IAAK,WAID,WAH2B,KAAhB6d,KAAK8hC,QAA0B9hC,KAAK1U,YAAYtJ,IAAI,OAC3Dge,KAAK8hC,OAAS39C,EAAY6b,KAAK1U,YAAYpJ,SAAS,OAEjD8d,KAAK8hC,QAmBhBrhD,IAAK,SAAUtI,GACX,OAAqB,KAAVA,GAA0C,IAAjBA,EAAMY,OAAc,CACpD,GAAI+gF,GAAW95D,KAAKhc,KACfgc,MAAKpK,eAAiC,KAAbkkE,GAA6BA,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,KACrI6nB,KAAK8hC,OAAS3pD,EACd6nB,KAAK1U,YAAY9C,OAAO,KAAMpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IACrEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,SAI3Doe,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,cAkB3C7R,IAAK,WAID,WAHgC,KAArB6d,KAAK+5D,aAA+B/5D,KAAK1U,YAAYtJ,IAAI,QAChEge,KAAK+5D,YAAc51E,EAAY6b,KAAK1U,YAAYpJ,SAAS,QAEtD8d,KAAK+5D,aAmBhBt5E,IAAK,SAAUtI,GACX,OAAqB,KAAVA,GAA0C,IAAjBA,EAAMY,OAAc,CACpD,GAAI+gF,GAAW95D,KAAKg6D,UACfh6D,MAAKpK,eACc,KAAbkkE,GACNA,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,KAC/E6nB,KAAK+5D,YAAc5hF,EACnB6nB,KAAK1U,YAAY9C,OAAO,MAAOpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IACtEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,SAI3Doe,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,gBAkB3C7R,IAAK,WACD,QAAmC,KAAvB6d,KAAKi6D,eAAwD,OAAvBj6D,KAAKi6D,gBAA2Bj6D,KAAK1U,YAAYtJ,IAAI,gBAAiB,CACpH,GAAI7J,GAAQ6nB,KAAK1U,YAAYnJ,IAAI,eACnB,QAAVhK,GAAmC,gBAAVA,KACzB6nB,KAAKi6D,cAAgBj6D,KAAKk6D,cAAc/hF,IAGhD,MAAO6nB,MAAKi6D,eAmBhBx5E,IAAK,SAAUtI,GACX6nB,KAAKi6D,cAAgB9hF,EACrB6nB,KAAK1U,YAAY9C,OAAO,eAAgBwX,KAAKm6D,cAAchiF,KAE/D4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,gBAkB3C7R,IAAK,WACD,OAAmC,KAAvB6d,KAAKo6D,eAAwD,OAAvBp6D,KAAKo6D,cAAyB,CAC5E,GAAIjiF,OAAQ,EACR6nB,MAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,WACzC7J,EAAQ6nB,KAAK1U,YAAYnJ,IAAI,WAExB6d,KAAK1U,YAAYtJ,IAAI,OAC1B7J,EAAQ6nB,KAAK1U,YAAYnJ,IAAI,MAEnB,OAAVhK,GAAmC,gBAAVA,KACzB6nB,KAAKo6D,cAAgBp6D,KAAKk6D,cAAc/hF,IAGhD,MAAO6nB,MAAKo6D,eAmBhB35E,IAAK,SAAUtI,GACX6nB,KAAKo6D,cAAgBjiF,EACrB6nB,KAAK1U,YAAY9C,OAAO,IAAKwX,KAAKm6D,cAAchiF,KAEpD4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,UAkB3C7R,IAAK,WAID,MAHI6d,MAAKpK,YACLoK,KAAK9G,QAAU/V,EAAiB6c,KAAK1U,YAAa0U,KAAK7G,QAEpD6G,KAAK9G,SAmBhBzY,IAAK,SAAUtI,GACX,GAAIA,EAEA,GADA6nB,KAAKq6D,WAAY,EACbr6D,KAAKpK,WACL,GAAKzd,EAAMuK,IAAMsd,KAAK/G,OAAOvW,GAAOvK,EAAMwK,IAAMqd,KAAK/G,OAAOtW,GACvDxK,EAAMyK,QAAUod,KAAK/G,OAAOrW,OAAWzK,EAAM8B,SAAW+lB,KAAK/G,OAAOhf,OAAS,CAC9E,GAAIQ,GAAOulB,KAAK7G,MAAM1e,IACtB,IAAIA,EAAM,CACN,GAAIkI,GAAIlI,EAAK,IAAMtC,EAAMwK,EAAIxK,EAAM8B,QAC/BA,EAAS0I,EAAIxK,EAAM8B,MACvB+lB,MAAK1U,YAAY9C,OAAO,QAASrQ,EAAMuK,EAAGC,EAAGxK,EAAMuK,EAAIvK,EAAMyK,MAAO3I,IACpE+lB,KAAK9G,QAAU/gB,EACf6nB,KAAKk5D,YAAa,QAK1Bl5D,MAAK9G,QAAU/gB,EACf6nB,KAAKk5D,YAAa,GAI9Bn9D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,WAkB3C7R,IAAK,WACD,OAA6B,KAAlB6d,KAAKs6D,SAA0B,CACtC,GAAIniF,GAAQ,GAAIoiF,GAKhB,IAJApiF,EAAMmT,YAAc0U,KAAK1U,YACrB0U,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,SACzC7J,EAAMqiF,KAAOx6D,KAAK1U,YAAYnJ,IAAI,QAElC6d,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAChD,GAAIy4E,GAAUz6D,KAAK1U,YAAYnJ,IAAI,KAC/Bs4E,KACAtiF,EAAM6e,MAAyB,QAAjByjE,EAAQtyE,KAAiB2V,qBAAmBtE,IAAMsE,qBAAmB48D,QAGvF16D,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,QACzC7J,EAAM61B,QAAUhO,KAAK1U,YAAYpJ,SAAS,OAE9C8d,KAAKs6D,SAAWniF,EAEpB,MAAO6nB,MAAKs6D,UAmBhB75E,IAAK,SAAUtI,GACX,GAAI0F,GAAUmiB,KAAK26D,OACfxiF,KACK6nB,KAAKpK,WAAazd,EAAMyiF,MAAQ/8E,EAAQ+8E,MACzC56D,KAAKs6D,SAASM,IAAMziF,EAAMyiF,KAEzB56D,KAAKpK,WAAazd,EAAMkV,OAASxP,EAAQwP,OAC1C2S,KAAKs6D,SAASjtE,KAAOlV,EAAMkV,MAE1B2S,KAAKpK,WAAazd,EAAMmI,SAAWzC,EAAQyC,SAC5C0f,KAAKs6D,SAASh6E,OAASnI,EAAMmI,UAIzCyb,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,WAkB3C7R,IAAK,WACD,GAAI6d,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAChD,GAAI64E,GAAU76D,KAAK1U,YAAYnJ,IAAI,UACZ,KAAZ04E,IACP76D,KAAK24D,SAAWkC,GAGxB,MAAO76D,MAAK24D,UAmBhBl4E,IAAK,SAAUtI,OACU,KAAVA,GAA0BiB,OAAOm3D,MAAMp4D,KAC1CA,GAAS,GAAKA,GAAS,GACvB6nB,KAAK1U,YAAY9C,OAAO,KAAMrQ,GAC9B6nB,KAAK24D,SAAWxgF,GAEXA,EAAQ,EACb6nB,KAAK1U,YAAY9C,OAAO,KAAM,GAG9BwX,KAAK1U,YAAY9C,OAAO,KAAM,KAI1CuT,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,WAkB3C7R,IAAK,WAID,WAH6B,KAAlB6d,KAAK86D,WACZ96D,KAAK86D,SAAW96D,KAAK1U,YAAYnJ,IAAI,UAAW,SAE7C6d,KAAK86D,UAmBhBr6E,IAAK,SAAUtI,GACU,gBAAVA,IAAsB6nB,KAAK+6D,UAAY5iF,IAC9C6nB,KAAK1U,YAAY9C,OAAO,OAAQrQ,GAChC6nB,KAAK86D,SAAW3iF,EACZ6nB,KAAK1U,YAAYtJ,IAAI,YACrBge,KAAK1U,YAAY9C,OAAO,UAAWrQ,KAI/C4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,QAkB3C7R,IAAK,WAID,WAH0B,KAAf6d,KAAKgS,OAAyBhS,KAAK1U,YAAYtJ,IAAI,QAC1Dge,KAAKgS,MAAQhS,KAAK1U,YAAYnJ,IAAI,OAE/B6d,KAAKgS,OAmBhBvxB,IAAK,SAAUtI,GACU,gBAAVA,KACP6nB,KAAK1U,YAAY9C,OAAO,KAAMrQ,GAC9B6nB,KAAKgS,MAAQ75B,IAGrB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,QAkB3C7R,IAAK,WAID,WAH0B,KAAf6d,KAAK+M,OAAyB/M,KAAK1U,YAAYtJ,IAAI,cAC1Dge,KAAK+M,MAAQ/M,KAAK1U,YAAYnJ,IAAI,aAE/B6d,KAAK+M,OAmBhBtsB,IAAK,SAAUtI,GACU,gBAAVA,KACP6nB,KAAK+M,MAAQ/M,KAAK1U,YAAYnJ,IAAI,YAC9BhK,IAAU6nB,KAAK+M,QACf/M,KAAK1U,YAAY9C,OAAO,WAAYrQ,GACpC6nB,KAAK+M,MAAQ50B,KAIzB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,iBAkB3C7R,IAAK,WAOD,WAN4B,KAAjB6d,KAAK9T,SAA2B8T,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,YAChFge,KAAK9T,QAAW8T,KAAK1U,YAAYnJ,IAAI,UAAY,IAEhC,OAAjB6d,KAAK9T,aAA4C,KAAjB8T,KAAK9T,UACrC8T,KAAK9T,QAAU7R,mBAAiBme,QAE7BwH,KAAK9T,SAmBhBzL,IAAK,SAAUtI,GACX,GAAI6iF,GAAah7D,KAAK6qD,kBACD,KAAV1yE,OAA+C,KAAf6iF,IACvC7iF,GAAUA,EAAQ6iF,GAAc,GAEpCh7D,KAAK1U,YAAY9C,OAAO,SAAkB,GAARrQ,GAClC6nB,KAAKi5D,YAAa,EAClBj5D,KAAK9T,QAAU/T,GAEnB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,UAkB3C7R,IAAK,WACD,GAAI6G,GAAQgX,KAAKi7D,mBAOjB,OANIjyE,GAAQ,IACRA,EAAQ,IAAMA,GAEdA,GAAS,MACTA,EAAQ,IAAMA,GAEXA,GAEX+S,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,iBAkB3C7R,IAAK,WACD,MAAO6d,MAAKk7D,kBAmBhBz6E,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAKk7D,iBAAmB/iF,IAGhC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,WAmB3C7R,IAAK,WACD,MAAO6d,MAAK+oD,UAoBhBtoE,IAAK,SAAUtI,GACX6nB,KAAK+oD,SAAW5wE,GAEpB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,aAC3C7R,IAAK,WACD,MAAO6d,MAAK1U,YAAYtJ,IAAI,MAEhC+Z,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,mBAC3C7R,IAAK,WAID,WAH2B,KAAhB6d,KAAKm7D,SACZn7D,KAAKm7D,OAAS9iF,KAAKiR,GAAK,KAErB0W,KAAKm7D,QAEhBp/D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe/E,EAAc/C,UAAW,SAqB3C7R,IAAK,WAID,MAHK6d,MAAK69B,SACN79B,KAAK69B,OAAS79B,KAAKo7D,qBAEhBp7D,KAAK69B,QA0BhBp9C,IAAK,SAAUtI,GACN6nB,KAAK69B,SACN79B,KAAK69B,OAAS1lD,EACV6nB,KAAK69B,OACL79B,KAAK1U,YAAY9C,OAAO,KAAMwX,KAAK69B,OAAOw9B,wBAGnCr7D,MAAK1U,YAAY+G,KAAS,KAI7C0J,YAAY,EACZC,cAAc,IAmBlBjF,EAAc/C,UAAU04D,cAAgB,SAAUv0E,GAC9C6nB,KAAK2sD,eAAiBx0E,EAClBA,IACA6nB,KAAK1U,YAAYiH,UAAW,IAoBpCwE,EAAc/C,UAAUsnE,UAAY,SAAUnzE,GAC1C,GAAIhN,KACJ,KAAI6kB,KAAK1U,cAAe0U,KAAK1U,YAAYtJ,IAAImG,GA4BzC,KAAM,IAAItO,OAAM,iBAAmBsO,EAAO,gBA3B1C,IAAIhQ,GAAQ6nB,KAAK1U,YAAYnJ,IAAIgG,EACjC,IAAIlI,MAAMuB,QAAQrJ,GAAQ,CACtBA,EAAQ6nB,KAAK1U,YAAYpJ,SAASiG,EAClC,KAAK,GAAIjP,GAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAAK,CACnC,GAAIoJ,GAAUnK,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,IAC9CgJ,aAAmBgD,IACnBnK,EAAOG,KAAKgH,EAAQ6F,MAEI,gBAAZ7F,GACZnH,EAAOG,KAAKgH,GAEY,gBAAZA,IACZnH,EAAOG,KAAKgH,EAAQhJ,iBAI3B,IAAInB,YAAiBmN,IACtBnK,EAAOG,KAAKnD,EAAMgQ,UAEjB,CAAA,GAAqB,gBAAVhQ,GAIZ,KAAM,IAAI0B,OAAM,iBAAmBsO,EAAO,gBAH1ChN,GAAOG,KAAKnD,GASpB,MAAOgD,IAuBX4b,EAAc/C,UAAUunE,UAAY,SAAUpzE,EAAMhQ,GAC5CgQ,GAAiB,KAATA,GAAehQ,GAAmB,KAAVA,GAChC6nB,KAAK1U,YAAY9C,OAAOL,EAAMhQ,IAItC4e,EAAc/C,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAClDye,KAAK7G,MAAQnf,EACbgmB,KAAKtU,gBAAkB1R,EAAK0R,gBACxBnK,IACAye,KAAK1U,YAAc/J,GAElBye,KAAKpK,YACNoK,KAAK1U,YAAY7K,IAAI,IAAKuf,KAAK7G,MAAM4hD,MACrC/6C,KAAK1U,YAAYkwE,WAAWx7D,KAAKtU,mBAGzCqL,EAAc/C,UAAUinE,kBAAoB,WACxC,GAAIjyE,GAAQ,CASZ,OARIgX,MAAK1U,cACD0U,KAAK1U,YAAYtJ,IAAI,UACrBgH,EAAQgX,KAAK1U,YAAYnJ,IAAI,UAExB6d,KAAK1U,YAAYtJ,IAAI,cAC1BgH,EAAQgX,KAAK1U,YAAYnJ,IAAI,cAG9B6G,GAEX+N,EAAc/C,UAAUynE,mBAAqB,SAAUzhF,GACnD,GAAI0hF,EAOJ,OANI1hF,IAAQA,EAAKgB,iBAAmBhB,EAAKgB,gBAAgBgH,IAAI,YACzD05E,EAAiB1hF,EAAKgB,gBAAgBmH,IAAI,YAErCnI,GAAQA,EAAKgB,iBAAmBhB,EAAKgB,gBAAgBgH,IAAI,aAC9D05E,EAAiB1hF,EAAKgB,gBAAgBmH,IAAI,YAEvCu5E,GAEX3kE,EAAc/C,UAAU2nE,gBAAkB,SAAUnkC,GAChD,GAAIvuC,GAAQ,CACRoS,IAAmBm8B,KACnBvuC,EAAQuuC,EAAWz+C,OAEvB,IAAI2J,MACAC,IACJ,IAAIsG,EAAQ,EAAG,CAEX,IAAK,GADDQ,MACKvQ,EAAI,EAAGA,EAAIs+C,EAAWz+C,OAAQG,IAAK,CACxC,GAAIf,GAAQq/C,EAAWp+C,OAAOC,SAASH,EAAEI,WAAY,IACrDmQ,GAAOnO,KAAKnD,GAIhB,IAAK,GAFD2K,GAAK,EACLC,EAAK,EACA7J,EAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAC3BA,EAAI,GAAM,GACVwJ,EAAEtJ,OAAOC,SAASyJ,EAAGxJ,WAAY,KAAOmQ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAC7EwJ,MAGAH,EAAEvJ,OAAOC,SAAS0J,EAAGzJ,WAAY,KAAOmQ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAC7EyJ,KAMZ,MAFAL,GAAEw6B,KAAK,SAAUC,EAAG34B,GAAK,MAAO24B,GAAI34B,EAAI,GAAK,IAC7C7B,EAAEu6B,KAAK,SAAUC,EAAG34B,GAAK,MAAO24B,GAAI34B,EAAI,GAAK,KACpC9B,EAAGA,EAAE,GAAIC,EAAGA,EAAE,GAAIC,MAAOF,EAAEA,EAAE3J,OAAS,GAAK2J,EAAE,GAAIzI,OAAQ0I,EAAEA,EAAE5J,OAAS,GAAK4J,EAAE,KAE1FoU,EAAc/C,UAAU4nE,wBAA0B,SAAUr6E,EAAY4J,GACpE,GAAI0wE,IAAkB,EAClBC,GAAgB,CACpB,IAAiB,OAAb3wE,OAAyC,KAAbA,EAA0B,CACtD,GAAI5J,GAAcA,EAAWS,IAAI,WAE7B,IADI+J,EAASxK,EAAWW,SAAS,YACnB6J,EAAOhT,OAAS,OACD,KAAdgT,EAAO,QACO,KAAdA,EAAO,QACO,KAAdA,EAAO,QACO,KAAdA,EAAO,IACI,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,GAAU,CAC1E8vE,GAAkB,CAClB,IAAIE,GAAY,EACZC,EAAY,EACZC,EAAY,EACZC,EAAY,CACZnwE,GAAOhT,OAAS,IAChBkjF,GAAalwE,EAAO,GAChBA,EAAOhT,OAAS,IAChBmjF,GAAanwE,EAAO,IAG5B,IAAIowE,OAAmB,EACnBn8D,MAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,UACzCm6E,EAAmBn8D,KAAK1U,YAAYpJ,SAAS,UACrBi6E,EAAiBpjF,OAAS,IAC9CgjF,EAAYI,EAAiB,GAC7BH,EAAYG,EAAiB,IAG/BJ,IAAcE,GAAaD,IAAcE,GAA4B,IAAdD,GAAiC,IAAdC,IAC5El8D,KAAKo8D,oBAAqB,QAO1CP,IAAkB,CAEtB,OAAOA,GAGP,GAAI3uE,GAAQ8S,KAAK/G,MACjB,IAAI1X,GAAcA,EAAWS,IAAI,UAAW,CACxC,GAAI6J,GAAMtK,EAAWW,SAAS,QAC1B6J,EAASxK,EAAWW,SAAS,SACjC,IAAI6J,GAAUF,GAAOE,EAAOhT,OAAS,GAAK8S,EAAI9S,OAAS,OAC1B,KAAdgT,EAAO,QACO,KAAdA,EAAO,QACO,KAAdA,EAAO,QACO,KAAdA,EAAO,IACI,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,QAC1C,KAAXF,EAAI,QACO,KAAXA,EAAI,QACO,KAAXA,EAAI,QACO,KAAXA,EAAI,KACPmU,KAAK7G,OAAStN,EAAI,MAASE,EAAO,IAAOF,EAAI,MAASE,EAAO,IACjD,IAAXF,EAAI,IAA2B,IAAdE,EAAO,IAAW,CACpC,GAAIsuC,GAAWr6B,KAAK7G,MAAMkhC,SACtB7vC,EAAQ6vC,EAASE,WACO,KAAjBv6B,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASgO,gBAAgBroC,KAAK24D,UAElCzrE,EAAMxK,GAAKmJ,EAAI,GACfqB,EAAMvK,GAAKkJ,EAAI,GACfwuC,EAASqE,aAAavzC,EAAU+B,GAChCmtC,EAASK,QAAQlwC,GACjBwV,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,MAC9B87D,GAAgB,GAOxC,MAAOA,IAGf/kE,EAAc/C,UAAUsoE,2BAA6B,SAAUnxE,EAAUoxE,GACrE,GAAIliC,GAAWr6B,KAAK7G,MAAMkhC,SACtBmiC,EAAgBx8D,KAAK/G,MACzB,IAAI+G,eAAgBrK,KAAqBqK,KAAK1U,cAAgB0U,KAAK1U,YAAYtJ,IAAI,MAkB/E,GAhBIw6E,EADAx8D,KAAKpK,UACWoK,KAAK9G,QAGjB8G,eAAgBrK,MAAsBqK,KAAKy8D,QAC3Bj5E,GAAcwc,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAGqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,SAGvF+lB,KAAK2sD,gBAAkB3sD,KAAK08D,UAAY18D,KAAKy8D,QAC7Bz8D,KAAK9G,QAGL1V,GAAcwc,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EACrDqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,SAI3C+lB,KAAK7G,MAAO,CACZ,GAAI1e,GAAOulB,KAAK7G,MAAM1e,KAClB4I,EAAO2c,KAAK7G,MAAM7V,SAClBC,EAAUyc,KAAK7G,MAAM5V,OACrBA,IAAWtD,MAAMuB,QAAQ+B,IAA+B,IAAnBA,EAAQxK,QAAgBinB,KAAK7G,MAAMne,gBAAgBgH,IAAI,aAC3Fge,KAAKpK,YAAcoK,KAAK+oD,SACL,IAAfxlE,EAAQ,IAA2B,IAAfA,EAAQ,IAAY9I,EAAK,KAAO8I,EAAQ,IAC7D9I,EAAK,KAAO8I,EAAQ,IAAQi5E,EAAc95E,IAAMa,EAAQ,GAKxDi5E,EAAc75E,EAAIlI,EAAK,IAAM+hF,EAAc75E,EAAI65E,EAAcviF,SAJ7DuiF,EAAc95E,GAAKa,EAAQ,GAC3Bi5E,EAAc75E,EAAIY,EAAQ,IAAMi5E,EAAc75E,EAAI65E,EAAcviF,SAM/DoJ,GAAQpD,MAAMuB,QAAQ6B,IAAyB,IAAhBA,EAAKtK,QAAgBinB,KAAK7G,MAAMne,gBAAgBgH,IAAI,cACvFge,KAAKpK,YAAcoK,KAAK+oD,SACrB1lE,EAAK,GAAK,GAAKA,EAAK,GAAK,GAAK5I,EAAK,KAAO4I,EAAK,IAAM5I,EAAK,KAAO4I,EAAK,IACtEm5E,EAAc95E,GAAKW,EAAK,GACxBm5E,EAAc75E,EAAIU,EAAK,IAAMm5E,EAAc75E,EAAI65E,EAAcviF,SAG7DuiF,EAAc75E,EAAIlI,EAAK,IAAM+hF,EAAc75E,EAAI65E,EAAcviF,QAI7D+lB,eAAgBrK,MAAsBqK,KAAKy8D,UAAYz8D,KAAKpK,UAC5D4mE,EAAc75E,EAAIlI,EAAK,IAAM+hF,EAAc75E,EAAI65E,EAAcviF,QAGzD+lB,KAAK2sD,gBAAkB3sD,KAAK08D,UAAY18D,KAAKy8D,QAC7CD,EAAgBx8D,KAAK/G,OAEf+G,KAAKpK,YACX4mE,EAAc75E,EAAIlI,EAAK,IAAM+hF,EAAc75E,EAAI65E,EAAcviF,aAMzEuiF,GAAc75E,EAAI65E,EAAc75E,EAAI65E,EAAcviF,MAG1D,QAA6B,KAAlBuiF,GAAmD,OAAlBA,EAAwB,CAChE,GAAIhyE,GAAQ6vC,EAASE,MAErB,IADAv6B,KAAK7G,MAAMwjE,yBAA0B,EACjC38D,KAAKhJ,QAAUC,qBAAmB2lE,sBAAuB,CACrD59B,GAAY,CAChB,IAAIh/B,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAChD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IAClC6d,MAAK9C,SAAW7iB,mBAAiBG,UAAYwlB,KAAK7G,MAAM/e,WAAaC,mBAAiBG,UACnF03E,EAAiB3wE,WAAWS,IAAI,YAC/B+J,EAASmmE,EAAiB3wE,WAAWW,SAAS,YAClB,IAAlB6J,EAAOhT,QAA8B,IAAdgT,EAAO,IAA0B,IAAdA,EAAO,KAC3DizC,GAAY,IAInBu9B,GAAkBv8D,KAAK9C,SAAW7iB,mBAAiBE,UAAYykD,IAChE7zC,EAASw0C,uBAAwB,EACjCx0C,EAASy0C,YAAa,IAI7B28B,GAAkBv8D,KAAKhJ,QAAUC,qBAAmB2lE,wBACrDzxE,EAASw0C,uBAAwB,EACjCx0C,EAASy0C,YAAa,OAEE,KAAjB5/B,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASgO,gBAAgBroC,KAAK24D,SAElC,IAAI1/D,GAAS+G,KAAKk4D,yBAAyBsE,EAAex8D,KAAK7G,MAAOhO,EAAUoxE,EAAgBliC,EAChG,IAAIr6B,KAAKhJ,QAAUC,qBAAmB2lE,sBAAuB,CACzD,GACI90B,GADArtD,MAAO,EAEPulB,MAAK9C,SAAW7iB,mBAAiBme,QACjC/d,GAAQwe,EAAOrW,MAAOqW,EAAOhf,QAC7B6tD,GAAc7uC,EAAOvW,EAAGuW,EAAOtW,KAG/BlI,EAAO0Q,EAASkc,MAChBygC,GAAc7uC,EAAOvW,EAAGuW,EAAOtW,GAEnC,IAAIk5E,IAAkB,CACtB,IAAI77D,KAAK9C,SAAW7iB,mBAAiBme,QAAUrN,EAASW,UAChDX,EAASW,SAASvK,WAAWS,IAAI,UAAW,CAC5C,GAAI+J,GAASZ,EAASW,SAASvK,WAAWW,SAAS,SAC/C6J,IAA4B,IAAlBA,EAAOhT,QAA8B,IAAdgT,EAAO,IAA0B,IAAdA,EAAO,KAC3D8vE,GAAkB,GAI9B,GAAI/8B,GAAU3zC,EAASkc,MAAM,GAAK,EAAKpO,EAAOrW,MAAQuI,EAASkc,MAAM,GAAK,EACtE03B,EAAU5zC,EAASkc,MAAM,GAAK,EAAKpO,EAAOhf,OAASkR,EAASkc,MAAM,GAAK,EACvE23B,IAAc3mD,KAAK4mD,MAAe,IAATH,GAAiB,KAAS,GAAKzmD,KAAK4mD,MAAe,IAATF,GAAiB,KAAS,EAC7F/+B,MAAK9C,SAAW7iB,mBAAiBme,QAAUqjE,IACvC77D,KAAK9C,SAAW7iB,mBAAiBC,QAC7B0lB,KAAK7G,OAAS6G,KAAK7G,MAAM/e,WAAaC,mBAAiBG,UACnDwkD,GAA4B,IAAb/lC,EAAOvW,GAAwB,IAAbuW,EAAOtW,GAKxCmlD,EAAW,IAAMrtD,EAAK,GACtBqtD,EAAW,IAAOrtD,EAAK,GAAKA,EAAK,IAAOA,EAAK,GAAKA,EAAK,MALvDqtD,EAAW,IAAOrtD,EAAK,GAAKA,EAAK,GACjCqtD,EAAW,IAAMrtD,EAAK,IAOpBukD,IACN8I,EAAW,IAAMrtD,EAAK,IAGrBulB,KAAK9C,SAAW7iB,mBAAiBG,SAClCwlB,KAAK7G,OAAS6G,KAAK7G,MAAM/e,WAAaC,mBAAiBG,SACnDwkD,GAAa7zC,EAASw0C,sBACtBmI,EAAW,GAAK7uC,EAAOtW,EAAIsW,EAAOrW,MAE7Bo8C,IACL8I,EAAW,IAAOrtD,EAAK,GAAKA,EAAK,IAIhCukD,GAA4B,IAAb/lC,EAAOvW,GAAwB,IAAbuW,EAAOtW,EAIzCmlD,EAAW,MAAQrtD,EAAK,GAAKA,EAAK,IAHlCqtD,EAAW,KAAQrtD,EAAK,GAO3BulB,KAAK9C,SAAW7iB,mBAAiBE,WACtCutD,EAAW,IAAMrtD,EAAK,GACtBqtD,EAAW,KAAQrtD,EAAK,KAIpC,IAAK0Q,EAASW,SAASvK,WAAWS,IAAI,WAAamJ,EAASW,SAASvK,WAAWS,IAAI,QAAS,CACzF,GAAI6J,GAAMV,EAASW,SAASvK,WAAWW,SAAS,OAChD+W,GAAOvW,GAAKmJ,EAAI,GAChBoN,EAAOtW,GAAKkJ,EAAI,GAEhBmU,eAAgB68D,MAAkC78D,KAAKpK,YACvDqD,EAAS9V,EAAiB6c,KAAK1U,YAAa0U,KAAK7G,QAErDkhC,EAASqE,aAAavzC,EAAU8N,GAChCohC,EAASK,QAAQlwC,GAErBwV,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,OAElCjJ,EAAc/C,UAAUkkE,yBAA2B,SAAUj/D,EAAQjf,EAAMmR,EAAUoxE,EAAgBliC,GACjG,GAAI8hC,GAAmBljE,EACnBvW,EAAIuW,EAAOvW,EACXC,EAAIsW,EAAOtW,EACXC,EAAQqW,EAAOrW,MACf3I,EAASgf,EAAOhf,MACpB,KAAKsiF,EAAgB,CACjB,GAAIn5E,GAAO4c,KAAK1U,YAAYpJ,SAAS,OACjCkB,KACA+4E,EAAmB34E,EAAaJ,IAGxC,OAAoB,KAATpJ,EAAsB,CAC7B,GAAIm+E,GAAmBn4D,KAAKo4D,wBAAwB/9B,EAASluC,QAC7D,IAAyB,KAArBgsE,EACA99B,EAASG,mBAAmBrvC,EAASkc,MAAM,GAAI,GAC/CgzB,EAAS+N,gBAAgB,IACrBm0B,OAA2C,KAAjBv8D,KAAK9T,SAA2B8T,KAAK9T,UAAY7R,mBAAiBE,UAC5FmI,EAAIuW,EAAOvW,EAKPC,EAJCqd,KAAKo8D,mBAGDpiF,EAAKmlD,SAA0B,IAAfnlD,EAAK8iF,GAAG,GACzB7jE,EAAOtW,EAAIsW,EAAOhf,SAGhBD,EAAKS,KAAK,IAAMwe,EAAOhf,OAASgf,EAAOtW,IAAMsW,EAAOhf,OAASkR,EAASkc,MAAM,OAN5ErtB,EAAKS,KAAK,GAAKwe,EAAOtW,EAAIsW,EAAOhf,UAU3CyI,EAAIuW,EAAOvW,EACXC,IAAM3I,EAAKS,KAAK,IAAMwe,EAAOhf,OAASgf,EAAOtW,IAAMsW,EAAOrW,MAAQuI,EAASkc,MAAM,KACjFzkB,EAAQqW,EAAOhf,OACfA,EAASgf,EAAOrW,WAGnB,IAAyB,MAArBu1E,EACL99B,EAASG,mBAAmBrvC,EAASkc,MAAM,GAAIlc,EAASkc,MAAM,IAC9DgzB,EAAS+N,gBAAgB,KACrBm0B,GACA75E,IAAM1I,EAAKS,KAAK,IAAMwe,EAAOvW,EAAIuW,EAAOrW,QACxCD,IAAM3I,EAAKS,KAAK,GAAKwe,EAAOtW,EAAIsW,EAAOhf,UAGvCyI,IAAM1I,EAAKS,KAAK,IAAMwe,EAAOvW,EAAIyI,EAASkc,MAAM,KAChD1kB,IAAM3I,EAAKS,KAAK,GAAKwe,EAAOtW,EAAIwI,EAASkc,MAAM,QACb,KAAvBrH,KAAK6qD,eACX7qD,KAAK9T,UAAY7R,mBAAiBC,SAC/B0lB,KAAK9T,UAAY7R,mBAAiBG,WACtCmI,IAAO3I,EAAKS,KAAK,GAAKwe,EAAOtW,EAAIwI,EAASkc,MAAM,KAAOpO,EAAOrW,MAAQqW,EAAOhf,QAC7E2I,EAAQqW,EAAOhf,OACfA,EAASgf,EAAOrW,YAIvB,IAAyB,MAArBu1E,EAGL,GAFA99B,EAASG,mBAAmB,EAAGrvC,EAASkc,MAAM,IAC9CgzB,EAAS+N,gBAAgB,KACrBm0B,OAAiD,KAAvBv8D,KAAK6qD,eAAiC7qD,KAAK9T,UAAY7R,mBAAiBE,SAClGmI,IAAM1I,EAAKS,KAAK,GAAKwe,EAAOvW,EAAIuW,EAAOrW,OACvCD,EAAIsW,EAAOtW,MAEV,CACDD,IAAM1I,EAAKS,KAAK,GAAK0hF,EAAiBz5E,EAAIyI,EAASkc,MAAM,GACzD,IAAItb,GAASZ,EAASW,SAASvK,WAAWW,SAAS,UAC/C2J,EAAMV,EAASW,SAASvK,WAAWW,SAAS,OAE5CS,GADAoJ,GAAUF,GAAOE,EAAO,KAAOF,EAAI,GAC/BoN,EAAOtW,GAAKsW,EAAOhf,OAASgf,EAAOrW,OAGlCqW,EAAOtW,EAAIsW,EAAOhf,OAAUgf,EAAOrW,MAE5CA,EAAQqW,EAAOhf,OACfA,EAASgf,EAAOrW,UAGM,KAArBu1E,IACAoE,OAC8B,KAAvBv8D,KAAK6qD,eACR7qD,KAAK6qD,gBAAkBxwE,mBAAiBC,SACrC0lB,KAAK6qD,gBAAkBxwE,mBAAiBG,WAChDkI,EAAIuW,EAAOvW,EACXC,EAAKsW,EAAOtW,EAAIsW,EAAOhf,OAASgf,EAAOrW,MACvCA,EAAQqW,EAAOhf,OACfA,EAASgf,EAAOrW,QAI5B,OAASF,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAE/C8c,EAAc/C,UAAUokE,wBAA0B,SAAUrsE,GACxD,GAAIgxE,GAAU1kF,KAAKggF,MAAMtsE,EAAOI,QAAQC,UAAU,GAAIL,EAAOI,QAAQC,UAAU,IAC3EpD,EAAQ3Q,KAAKgM,MAAgB,IAAV04E,EAAgB1kF,KAAKiR,GAC5C,QAAQN,GACJ,KAAM,GACFA,EAAQ,EACR,MACJ,MAAM,IACFA,EAAQ,GACR,MACJ,KAAK,IACDA,EAAQ,IAGhB,MAAOA,IAEX+N,EAAc/C,UAAU+4D,kBAAoB,SAAU/yE,EAAM8X,GACpD9X,GAAQ8X,IACR9X,EAAK64D,YAAYwpB,OAAOvqE,GACxB9X,EAAKgB,gBAAgBuX,UAAW,IAGxCwE,EAAc/C,UAAUgpE,gBAAkB,SAAU3iC,EAAU8C,EAAOD,EAAKiE,EAAQ87B,EAASxzE,EAAQ8gD,GAC/F,GAAIlvC,GAAmB5R,IAAWuW,KAAKk9D,aAAazzE,GAAS,CAEzD,IAAK,GADD0zE,MACKjkF,EAAIuQ,EAAO1Q,OAAS,EAAGG,GAAK,EAAGA,IACpCikF,EAAa7hF,KAAKmO,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAE3DmQ,GAAS0zE,EAEb,GAEIC,GAFAC,KACAC,EAAgB,EAAIn8B,EAAS87B,CAE7B5hE,IAAmB5R,GACnB2zE,EAAgB3zE,EAAOA,EAAO1Q,OAAS,GAGvC0Q,IAEJ,KAASvQ,EAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAAK,CACpC,GAAIqkF,GAAe9zE,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KACpDkkF,EAAKD,EAAa,GAAKH,EAAc,GACrCK,EAAKF,EAAa,GAAKH,EAAc,GACrCn7C,EAAW5pC,KAAKqlF,KAAKF,EAAKA,EAAKC,EAAKA,EACxCD,IAAUv7C,EACVw7C,GAAUx7C,CACV,KAAK,GAAI9E,GAAI,EAAGA,EAAI,GAAMmgD,EAAgBr7C,EAAU9E,GAAKmgD,EAAe,CACpE,GAAIK,GAAM,GAAIC,GACdD,GAAIzwE,OAASkwE,EAAc,GAAKjgD,EAAIqgD,EAAIJ,EAAc,GAAKjgD,EAAIsgD,GAC/DJ,EAAQ/hF,KAAKqiF,GAEjBP,EAAgBG,EAGpB,IAAK,GADDM,GAAyBR,EAAQA,EAAQtkF,OAAS,GAC7CG,EAAI,EAAGA,EAAImkF,EAAQtkF,OAAQG,IAAK,CACrC,GAAI4kF,GAAwBT,EAAQjkF,OAAOC,SAASH,EAAEI,WAAY,KAC9D0P,EAAQgX,KAAK+9D,wBAAwBF,EAAuB3wE,MAAO4wE,EAAsB5wE,MAAOi0C,EACpG08B,GAAuBG,SAAWh1E,EAAM,GACxC80E,EAAsBhmC,WAAa9uC,EAAM,GACzC60E,EAAyBC,EAG7B,IAAK,GADD/8B,GAAO,GAAIzK,IACNp9C,EAAI,EAAGA,EAAImkF,EAAQtkF,OAAQG,IAAK,CACrC,GACI4+C,IADAj6C,EAAUw/E,EAAQjkF,OAAOC,SAASH,EAAEI,WAAY,MAC3Bw+C,WAAa,IAClCkmC,EAAWngF,EAAQmgF,SAAW,IAC9BC,EAAa,CACjB,IAAInmC,EAAa,GAAKkmC,EAAW,EAC7BC,EAAc,IAAMnmC,GAAe,KAAOkmC,EAAW,GAAKA,EAAWA,QAEpE,IAAIlmC,EAAa,GAAKkmC,EAAW,EAClCC,GAAcnmC,EAAakmC,MAE1B,IAAIlmC,EAAa,GAAKkmC,EAAW,EAAG,CAIjCC,EAFAnmC,EAAakmC,EAEA,KADAlmC,EAAakmC,GAIbA,EAAWlmC,MAG3B,IAAIA,EAAa,GAAKkmC,EAAW,EAAG,CAIjCC,EAFAnmC,EAAakmC,EAEA,KADAlmC,EAAakmC,KAIXlmC,GAAekmC,GAGlCC,EAAa,IACbA,GAAcA,GAElBpgF,EAAQmgF,SAAWC,EACnBl9B,EAAKlJ,OAAOh6C,EAAQqP,MAAM,GAAKi0C,EAAQtjD,EAAQqP,MAAM,GAAKi0C,EAAQ,EAAIA,EAAQ,EAAIA,EAAQrJ,EAAYmmC,GAE1Gl9B,EAAK3I,aACL,IAAI8lC,KACJ,IAAI3zB,EACA,IAASrxD,EAAI,EAAGA,EAAI6nD,EAAKvK,QAAQz9C,OAAQG,IACrCglF,EAAW5iF,MAAMylD,EAAKvK,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAAKynD,EAAKvK,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAG9H,IAAI6kF,EACA5zB,KACA4zB,EAAU,GAAI7nC,KACNE,QAAU0nC,EAClBC,EAAQ1nC,WAAasK,EAAKtK,cAG1B0nC,EAAU,GAAI7nC,KACNE,QAAUuK,EAAKvK,QACvB2nC,EAAQ1nC,WAAasK,EAAKtK,YAE1Bp7B,GAAmB8hC,IACnB9C,EAASyG,SAASq9B,EAAShhC,EAE/B,IAAIihC,GAAS,KAAiB,EAAV/lF,KAAKiR,GACzBy3C,GAAO,GAAIzK,GACX,KAASp9C,EAAI,EAAGA,EAAImkF,EAAQtkF,OAAQG,IAAK,CACrC,GAAI2E,GAAUw/E,EAAQjkF,OAAOC,SAASH,EAAEI,WAAY,IACpDynD,GAAKlJ,OAAOh6C,EAAQqP,MAAM,GAAKi0C,EAAQtjD,EAAQqP,MAAM,GAAKi0C,EAAQ,EAAIA,EAAQ,EAAIA,EAAQtjD,EAAQi6C,WAAYj6C,EAAQmgF,SAAWI,GAIrI,GAFAr9B,EAAK3I,cACL8lC,KACI3zB,EACA,IAASrxD,EAAI,EAAGA,EAAI6nD,EAAKvK,QAAQz9C,OAAQG,IACrCglF,EAAW5iF,MAAMylD,EAAKvK,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAAKynD,EAAKvK,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAG1HixD,KACA4zB,EAAU,GAAI7nC,KACNE,QAAU0nC,EAClBC,EAAQ1nC,WAAasK,EAAKtK,cAG1B0nC,EAAU,GAAI7nC,KACNE,QAAUuK,EAAKvK,QACvB2nC,EAAQ1nC,WAAasK,EAAKtK,YAE9B4D,EAASyG,SAASq9B,EAASjhC,IAE/BnmC,EAAc/C,UAAUkpE,aAAe,SAAUzzE,GAC7C,GAAI40E,GAAM,CACV,IAAIhjE,GAAmB5R,GACnB,IAAK,GAAIvQ,GAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAAK,CACpC,GAAIqE,GAAQkM,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAC7CkE,EAASiM,GAAQvQ,EAAI,GAAKuQ,EAAO1Q,OACrCslF,KAAQ7gF,EAAO,GAAKD,EAAM,KAAOC,EAAO,GAAKD,EAAM,IAG3D,MAAO8gF,GAAM,GAEjBtnE,EAAc/C,UAAU+pE,wBAA0B,SAAUxgF,EAAOC,EAAQ2jD,GACvE,GAAIq8B,GAAKhgF,EAAO,GAAKD,EAAM,GACvBkgF,EAAKjgF,EAAO,GAAKD,EAAM,GAEvB4/B,EAAI,GADK9kC,KAAKqlF,KAAKF,EAAKA,EAAKC,EAAKA,GACft8B,CACnBhkB,IAAK,EACLA,GAAK,EAEAA,EAAI,IACTA,EAAI,EAER,IAAImhD,GAASjmF,KAAKggF,MAAMoF,EAAID,GACxBe,EAAWlmF,KAAKmmF,KAAKrhD,EACzB,SAASmhD,EAASC,IAAa,IAAMlmF,KAAKiR,KAAMjR,KAAKiR,GAAKg1E,EAASC,IAAa,IAAMlmF,KAAKiR,MAE/FyN,EAAc/C,UAAUyqE,aAAe,SAAU7Q,EAAWnrE,EAAWorE,EAAaJ,GAChF,GAAIpI,GAAOrlD,KAAKuqD,OAAOlF,IACvB,IAAIA,GAAQA,EAAKtsE,OAAS,EAAG,CAGzB,IAAK,GAFD2lF,MACAC,GAAS,EACJzlF,EAAI,EAAGA,EAAImsE,EAAKtsE,OAAQG,IAC7BwlF,EAAYtlF,OAAOC,SAASH,EAAEI,WAAY,KAAO+rE,EAAKjsE,OAAOC,SAASH,EAAEI,WAAY,KAChFolF,EAAYtlF,OAAOC,SAASH,EAAEI,WAAY,KAAO,IACjDqlF,GAAS,EAGbA,IAAU3+D,KAAKuqD,OAAOzlE,QAAUE,iBAAeE,SAC/C0oE,EAAU7jB,WAAaprC,eAAa0mD,KACpCuI,EAAUpsB,aAAek9B,GAGjC,GAAIjR,EACA,GAAIA,YAAqB0E,KAChBnyD,KAAKq6D,WAAar6D,KAAK1U,YAAYtJ,IAAI,OACpC/C,EAAQ+gB,KAAK1U,YAAYpJ,SAAS,SAElCO,EAAU,GAAKA,EAAU,GAAKxD,EAAM,GACpCwD,EAAU,GAAKA,EAAU,GAAKorE,EAAc5uE,EAAM,GAClDwD,EAAU,GAAKA,EAAU,IAAMxD,EAAM,GAAKA,EAAM,IAChDwD,EAAU,GAAKA,EAAU,IAAMxD,EAAM,GAAKA,EAAM,MAIpDwD,EAAU,GAAKA,EAAU,GAAKorE,EAC9BprE,EAAU,GAAKA,EAAU,GAAKorE,EAC9BprE,EAAU,GAAKA,EAAU,GAAKud,KAAKuqD,OAAO3nE,MAC1CH,EAAU,GAAKA,EAAU,GAAKud,KAAKuqD,OAAO3nE,OAE9C6qE,EAAUx0D,OAASxW,MAGnB,IAA4B,IAAxBgrE,EAAUmR,WAAmBnR,EAAU3oE,QAAUU,uBAAqBE,OAAQ,CAC9E,GAAIy7C,GAA+B,EAAtBssB,EAAUmR,SACvBn8E,GAAU,GAAKA,EAAU,GAAK0+C,EAAS0sB,EACvCprE,EAAU,GAAKA,EAAU,GAAK0+C,EAAS0sB,EACvCprE,EAAU,GAAKA,EAAU,GAAM,EAAI0+C,EAAU,EAAI0sB,EACjDprE,EAAU,GAAKA,EAAU,GAAM,EAAI0+C,EAAU,EAAI0sB,MAGjDprE,GAAU,GAAKA,EAAU,GAAKorE,EAC9BprE,EAAU,GAAKA,EAAU,GAAKorE,EAC9BprE,EAAU,GAAKA,EAAU,GAAKud,KAAKuqD,OAAO3nE,MAC1CH,EAAU,GAAKud,KAAK/G,OAAOhf,OAAS+lB,KAAKuqD,OAAO3nE,UAKxD,KAAKod,KAAKq6D,WAAar6D,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,MAAO,CACnE,GAAI/C,GAAQ+gB,KAAK1U,YAAYpJ,SAAS,KAClCjD,KACAwD,EAAU,GAAKA,EAAU,GAAKxD,EAAM,GACpCwD,EAAU,GAAKA,EAAU,GAAKorE,EAAc5uE,EAAM,GAClDwD,EAAU,GAAKA,EAAU,GAAM,EAAIxD,EAAM,GACzCwD,EAAU,GAAKA,EAAU,GAAKud,KAAKuqD,OAAO3nE,MAC1CH,EAAU,GAAKA,EAAU,GAAM,EAAIxD,EAAM,QAI7CwD,GAAU,GAAKA,EAAU,GAAKorE,EAC9BprE,EAAU,GAAKud,KAAK/G,OAAOhf,OAAS+lB,KAAKuqD,OAAO3nE,KAGxD,OAAOH,IAEXsU,EAAc/C,UAAU6qE,2BAA6B,SAAUvoB,GAC3D,GAAI1zD,GAAQod,KAAKuqD,OAAO3nE,MACpBk8E,EAAU9+D,KAAK1U,YAAYpJ,SAAS,KACxC,KAAK48E,GAA4B,OAAjBxoB,OAAiD,KAAjBA,GAA2D,IAA3BA,EAAasoB,WAAmBtoB,EAAaxxD,QAAUU,uBAAqBE,OAAQ,CAC5Jq5E,GAAmBr8E,EAAGsd,KAAK/G,OAAOvW,EAA6B,EAAzB4zD,EAAasoB,UAAgBh8E,EAAQ,EAC3ED,EAAGqd,KAAK/G,OAAOtW,EAA6B,EAAzB2zD,EAAasoB,UAAgBh8E,EAAQ,EACxDA,MAAOod,KAAK/G,OAAOrW,MAAiC,GAAzB0zD,EAAasoB,UAAiBh8E,EACzD3I,OAAQ+lB,KAAK/G,OAAOhf,OAAkC,GAAzBq8D,EAAasoB,UAAiBh8E,EAE/Dk8E,KADI39B,EAAkC,EAAzBmV,EAAasoB,WACNh8E,EAAQ,EAAGu+C,EAASv+C,EAAQ,EAAGu+C,EAASv+C,EAAQ,EAAGu+C,EAASv+C,EAAQ,GACxFod,KAAK1U,YAAY7K,IAAI,KAAMq+E,GAC3B9+D,KAAK/G,OAAS8lE,EAElB,IAAK/+D,KAAKq6D,WAAayE,EAAS,CAC5B,GAAIC,IAAmBr8E,EAAGsd,KAAK/G,OAAOvW,EAAIo8E,EAAQ,GAC9Cn8E,EAAGqd,KAAK/G,OAAOtW,EAAIm8E,EAAQ,GAC3Bl8E,MAAOod,KAAK/G,OAAOrW,MAAqB,EAAbk8E,EAAQ,GACnC7kF,OAAQ+lB,KAAK/G,OAAOhf,OAAsB,EAAb6kF,EAAQ,GACzC,IAA+B,IAA3BxoB,EAAasoB,WAAmBtoB,EAAaxxD,QAAUU,uBAAqBE,OAAQ,CACpFq5E,EAAer8E,EAAIq8E,EAAer8E,EAA6B,EAAzB4zD,EAAasoB,UAAgBh8E,EAAQ,EAC3Em8E,EAAep8E,EAAIo8E,EAAep8E,EAA6B,EAAzB2zD,EAAasoB,UAAgBh8E,EAAQ,EAC3Em8E,EAAen8E,MAAQm8E,EAAen8E,MAAiC,GAAzB0zD,EAAasoB,UAAiBh8E,EAC5Em8E,EAAe9kF,OAAS8kF,EAAe9kF,OAAkC,GAAzBq8D,EAAasoB,UAAiBh8E,CAC9E,IAAIu+C,GAAkC,EAAzBmV,EAAasoB,SAC1B5+D,MAAK1U,YAAY7K,IAAI,MAAO0gD,EAASv+C,EAAQ,EAAGu+C,EAASv+C,EAAQ,EAAGu+C,EAASv+C,EAAQ,EAAGu+C,EAASv+C,EAAQ,eAGlGod,MAAK1U,YAAY+G,KAAK2sE,EAEjCh/D,MAAK/G,OAAS8lE,EAElB,GAAIlR,GAAcjrE,EAAQ,EACtBq8E,GAAmB,EAAG,EAAGj/D,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QACxDkR,EAAW,GAAIM,IAAYwzE,EAAiBj/D,KAAKtU,gBACrDE,IAAWT,EAAU6U,KAAKi7D,qBACK,IAA3B3kB,EAAasoB,WAAmBtoB,EAAaxxD,QAAUU,uBAAqBE,SAC5EyF,EAASy7D,sBAAuB,EAEpC,IAAIvsB,GAAWlvC,EAASkvC,SACpBozB,EAAY,GAAI0E,GAChBnyD,MAAKg6D,aACLvM,EAAUC,UAAY,GAAI5qB,IAAS9iC,KAAK+5D,cAExCn3E,EAAQ,GAAKod,KAAKhc,QAClBypE,EAAUG,UAAY,GAAI/qB,IAAO7iC,KAAK8hC,OAAQl/C,IAE9Cod,KAAKhc,QACLypE,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAK8hC,QAE5C,IAAIr/C,GAAYud,KAAKy+D,aAAahR,EAAUG,UAAWqR,EAAiBpR,EAAavX,EAcrF,YAb4B,KAAjBt2C,KAAK66D,SAA2B76D,KAAK24D,SAAW,IACvDt+B,EAASE,OACTF,EAASgO,gBAAgBroC,KAAK24D,WAEH,IAA3BriB,EAAasoB,WAAmBtoB,EAAaxxD,QAAUU,uBAAqBE,OAC5Esa,KAAKk/D,yBAAyBz8E,EAAW43C,EAAUozB,EAAWnX,EAAasoB,WAG3EvkC,EAASyC,cAAcr6C,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIgrE,EAAUG,UAAWH,EAAUC,eAEtF,KAAjB1tD,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASK,UAENvvC,GAEX4L,EAAc/C,UAAUkrE,yBAA2B,SAAUz8E,EAAW43C,EAAUozB,EAAWmR,GACzF,GAAIO,GAAe,GAAI7oC,GACnBj7B,IAAmB5Y,IAAmC,IAArBA,EAAU1J,QAC3ComF,EAAajnC,aAAaz1C,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAElF,IAAI0+C,GAAS,CAIb,IAHI9lC,GAAmBujE,KACnBz9B,EAAqB,KAAZy9B,GAETz9B,EAAS,EAAG,CAEZ,IAAK,GADD13C,MACKvQ,EAAI,EAAGA,EAAIimF,EAAa3oC,QAAQz9C,OAAQG,IAAK,CAClD,GAAIkmF,IAAWD,EAAa3oC,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAClE6lF,EAAa3oC,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC7DmQ,GAAOnO,KAAK8jF,IAEhBD,EAAe,GAAI7oC,KACN+B,WAAW5uC,GACxBuW,KAAKg9D,gBAAgB3iC,EAAUozB,EAAUC,UAAWD,EAAUG,UAAWzsB,EAAQ,KAAOg+B,EAAa3oC,SAAS,OAG9G6D,GAASyC,cAAcr6C,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIgrE,EAAUG,UAAWH,EAAUC,YAGtH32D,EAAc/C,UAAUqrE,wBAA0B,WAC9C,GAAIC,IAAgB,EAAG,EAAGt/D,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QACrDkR,EAAW,GAAIM,IAAY6zE,EAAct/D,KAAKtU,gBAClDE,IAAWT,EAAU6U,KAAKi7D,qBACtBj7D,KAAK1U,YAAYtJ,IAAI,QACrBmJ,EAASy7D,sBAAuB,OAEV,KAAf5mD,KAAKhc,QACZgc,KAAKg5D,qBAAsB,EAE/B,IAAI3+B,GAAWlvC,EAASkvC,SACpBz3C,EAAQod,KAAKuqD,OAAO3nE,MACpBgrE,EAAY,GAAI/qB,IAAO7iC,KAAKhc,MAAOpB,GACnC6qE,EAAY,GAAI0E,GAChBnyD,MAAKg6D,aACLvM,EAAUC,UAAY,GAAI5qB,IAAS9iC,KAAK+5D,cAExCn3E,EAAQ,IACR6qE,EAAUG,UAAYA,GAEtB5tD,KAAKhc,QACLypE,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAK8hC,SAE5C2rB,EAAUI,YAAcjrE,CACxB,IAAIirE,GAAcjrE,EAAQ,EACtBH,EAAYud,KAAKy+D,aAAa7Q,EAAW0R,EAAczR,EAc3D,YAb4B,KAAjB7tD,KAAK66D,SAA2B76D,KAAK24D,SAAW,IACvDt+B,EAASE,OACTF,EAASgO,gBAAgBroC,KAAK24D,WAE9B34D,KAAK1U,YAAYtJ,IAAI,MACrBge,KAAKu/D,sBAAsB98E,EAAWorE,EAAaxzB,EAAUozB,GAG7DpzB,EAASqD,YAAYj7C,EAAU,GAAKorE,EAAaprE,EAAU,GAAIA,EAAU,GAAKG,EAAOH,EAAU,GAAIgrE,EAAUG,UAAWH,EAAUC,eAEzG,KAAlB1tD,KAAK24D,UAA4B34D,KAAK24D,SAAW,GACxDt+B,EAASK,UAENvvC,GAEX4L,EAAc/C,UAAUurE,sBAAwB,SAAU98E,EAAWorE,EAAaxzB,EAAUozB,GACxF,GAAItsB,GAAS,CACb,IAAInhC,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAI/C,GAAQ+gB,KAAK1U,YAAYpJ,SAAS,KAClCjD,IAASA,EAAMlG,OAAS,IACxBooD,EAASliD,EAAM,IAGvB,GAAIkiD,EAAS,EAAG,CACZ,GAAI/9C,IAAQX,EAAU,GAAKorE,GACtBprE,EAAU,GAAKA,EAAU,GAC1BA,EAAU,GAAKud,KAAKuqD,OAAO3nE,MAC3BH,EAAU,IACVvI,EAAOkJ,EAAK,GACZo8E,EAAQp8E,EAAK,GACb+U,EAAQ/U,EAAK,GAAKA,EAAK,GACvB8U,EAAS9U,EAAK,GAAKA,EAAK,GACxBq8E,IACJA,GAAiBnkF,MAAM6c,EAAOD,IAC9BunE,EAAiBnkF,MAAMpB,EAAMge,IAC7BunE,EAAiBnkF,MAAMpB,EAAMslF,IAC7BC,EAAiBnkF,MAAM6c,EAAOqnE,GAC9B,IAAIE,KACJA,GAAepkF,MAAM6c,EAAOqnE,EAASp8E,EAAK,GAAK,IAC/Cs8E,EAAepkF,MAAMpB,EAAOkJ,EAAK,GAAK,EAAG8U,IACzCwnE,EAAepkF,MAAMpB,EAAMslF,EAASp8E,EAAK,GAAK,IAC9Cs8E,EAAepkF,MAAMpB,EAAQkJ,EAAK,GAAK,EAAIo8E,GAC3C,IAAIG,KACJA,GAAarkF,MAAMpB,EAAOkJ,EAAK,GAAK,EAAG8U,IACvCynE,EAAarkF,MAAMpB,EAAMslF,EAASp8E,EAAK,GAAK,IAC5Cu8E,EAAarkF,MAAMpB,EAAQkJ,EAAK,GAAK,EAAIo8E,IACzCG,EAAarkF,MAAM6c,EAAOqnE,EAASp8E,EAAK,GAAK,GAE7C,KAAK,GADDqG,MACKvQ,EAAI,EAAGA,EAAIumF,EAAiB1mF,OAAQG,IACzC8mB,KAAK4/D,cAAcF,EAAetmF,OAAOC,SAASH,EAAEI,WAAY,KAAMmmF,EAAiBrmF,OAAOC,SAASH,EAAEI,WAAY,KAAMqmF,EAAavmF,OAAOC,SAASH,EAAEI,WAAY,KAAMmQ,EAEhLuW,MAAKg9D,gBAAgB3iC,EAAUozB,EAAUC,UAAWD,EAAUG,UAAWzsB,EAAQ,KAAO13C,GAAQ,OAGhG4wC,GAASqD,YAAYj7C,EAAU,GAAKorE,GAAcprE,EAAU,GAAIA,EAAU,GAAKud,KAAKuqD,OAAO3nE,OAAQH,EAAU,GAAIgrE,EAAUG,UAAWH,EAAUC,YAGxJ32D,EAAc/C,UAAU4rE,cAAgB,SAAUriF,EAAOC,EAAQqiF,EAAOC,GACpEA,EAAaxkF,KAAKiC,GAClByiB,KAAK+/D,sBAAsBxiF,EAAOC,EAAQqiF,EAAO,EAAGC,GACpDA,EAAaxkF,KAAKukF,IAEtB9oE,EAAc/C,UAAU+rE,sBAAwB,SAAUxiF,EAAOC,EAAQqiF,EAAOG,EAAkBF,GAC9F,GAAIE,EAAmB,EAAG,CACtB,GAAIC,GAAYjgE,KAAKkgE,UAAU3iF,EAAOC,GAClC2iF,EAAYngE,KAAKkgE,UAAU1iF,EAAQqiF,GACnCO,EAAYpgE,KAAKkgE,UAAUD,EAAWE,EAC1CH,KACAhgE,KAAK+/D,sBAAsBxiF,EAAO0iF,EAAWG,EAAWJ,EAAkBF,GAC1EA,EAAaxkF,KAAK8kF,GAClBpgE,KAAK+/D,sBAAsBK,EAAWD,EAAWN,EAAOG,EAAkBF,KAGlF/oE,EAAc/C,UAAUksE,UAAY,SAAU3iF,EAAOC,GACjD,QAASD,EAAM,GAAKC,EAAO,IAAM,GAAID,EAAM,GAAKC,EAAO,IAAM,IAEjEuZ,EAAc/C,UAAUqsE,UAAY,SAAU7oC,GAC1C,GAAI10C,GAAK00C,EAAW,GAChBz0C,EAAKy0C,EAAW,GAChBx0C,EAAKw0C,EAAW,GAChBv0C,EAAKu0C,EAAW,GAChBxuC,EAAQ,CACZ,IAAIhG,EAAKF,GAAO,EACZkG,EAAS/F,EAAKF,EAAM,GAAK,QAExB,CACD,GAAIu9E,IAAcr9E,EAAKF,IAAOC,EAAKF,EAEnCkG,GADc3Q,KAAKkoF,KAAKD,IACL,IAAMjoF,KAAKiR,KACzBtG,EAAKF,EAAM,GAAMG,EAAKF,EAAM,KAC7BiG,GAAS,KAERhG,EAAKF,EAAM,GAAMG,EAAKF,EAAM,IAC7BiG,GAAS,KAETA,EAAQ,IACRA,GAAS,KAGjB,MAAOA,IAEX+N,EAAc/C,UAAUwsE,cAAgB,SAAUroF,EAAO6Q,EAAOjQ,GAC5D,OAAQZ,EAAM,GAAKE,KAAKkR,IAAIP,EAAQgX,KAAKygE,iBAAmB1nF,EACxDZ,EAAM,GAAKE,KAAKmR,IAAIR,EAAQgX,KAAKygE,iBAAmB1nF,IAE5Dge,EAAc/C,UAAU0sE,kBAAoB,SAAUC,EAAWtmC,EAAUrxC,EAAOk0C,EAAKC,EAAOr4C,EAAO/L,EAAQ6nF,GACzG,GAAIC,GACA53E,EACA63E,EACAvjF,EACAC,EACAqiF,EACAkB,EACAhgC,CACJ,QAAQj8C,GACJ,IAAKc,sBAAmBQ,OACpBi0C,EAASyC,cAAc6jC,EAAU,GAAM,EAAI5nF,IAAW4nF,EAAU,GAAM,EAAI5nF,GAAW,EAAIA,EAAU,EAAIA,EAASmkD,EAAKC,EACrH,MACJ,KAAKv3C,sBAAmBO,OACpBk0C,EAASqD,YAAYijC,EAAU,GAAM,EAAI5nF,IAAW4nF,EAAU,GAAM,EAAI5nF,GAAW,EAAIA,EAAU,EAAIA,EAASmkD,EAAKC,EACnH,MACJ,KAAKv3C,sBAAmBC,UACpBg7E,EAAcD,EAAU,GAAK,IAC7B33E,EAAQ,EAAIlQ,EACZ+nF,EAAa9gE,KAAKwgE,cAAcG,EAAW33E,EAAQ43E,EAAU7nF,GAAWA,GACxEwE,EAAQyiB,KAAKwgE,cAAcM,EAAa93E,EAAQ63E,EAAc53E,GAC9DzL,EAASwiB,KAAKwgE,cAAcM,EAAa93E,EAAQ63E,EAAc53E,IAC/D83C,EAAO,GAAIzK,KACNU,KAAOkG,EACZ6D,EAAK1J,QAAQypC,EAAW,IAAKA,EAAW,GAAIvjF,EAAM,IAAKA,EAAM,IAC7DwjD,EAAK1J,QAAQypC,EAAW,IAAKA,EAAW,GAAItjF,EAAO,IAAKA,EAAO,IAC/D68C,EAASiD,cAAcJ,EAAK,KAAM,MAClC7C,EAAS2G,aAAaD,EAAKvK,QAASuK,EAAKtK,YACzC4D,EAAS4C,kBAAkBC,EAAK,KAAM6D,EAAKpK,WAAW,EACtD,MACJ,KAAK/wC,sBAAmBE,YACpB+6E,EAAcD,EAAU,GAAK,IAC7B33E,EAAQ,EAAIlQ,EACZ+nF,EAAa9gE,KAAKwgE,cAAcG,EAAW33E,EAAQ43E,EAAU7nF,GAAWA,GACxEwE,EAAQyiB,KAAKwgE,cAAcM,EAAa93E,EAAQ63E,EAAc53E,GAC9DzL,EAASwiB,KAAKwgE,cAAcM,EAAa93E,EAAQ63E,EAAc53E,GAC/DoxC,EAASoD,cAAcqjC,EAAW,IAAKA,EAAW,KAAMvjF,EAAM,IAAKA,EAAM,KAAMC,EAAO,IAAKA,EAAO,KAAM0/C,EAAKC,EAC7G,MACJ,KAAKv3C,sBAAmBG,WACpB86E,EAAcD,EAAU,IAAM,GAC9B33E,EAAQ,EAAIlQ,EACZ+nF,EAAa9gE,KAAKwgE,cAAcG,EAAW33E,EAAQ43E,GAAY7nF,EAAUA,GACzEwE,EAAQyiB,KAAKwgE,cAAcM,EAAa93E,EAAQ63E,EAAc53E,GAC9DzL,EAASwiB,KAAKwgE,cAAcM,EAAa93E,EAAQ63E,EAAc53E,IAC/D83C,EAAO,GAAIzK,KACNU,KAAOkG,EACZ6D,EAAK1J,QAAQypC,EAAW,IAAKA,EAAW,GAAIvjF,EAAM,IAAKA,EAAM,IAC7DwjD,EAAK1J,QAAQypC,EAAW,IAAKA,EAAW,GAAItjF,EAAO,IAAKA,EAAO,IAC/D68C,EAASiD,cAAcJ,EAAK,KAAM,MAClC7C,EAAS2G,aAAaD,EAAKvK,QAASuK,EAAKtK,YACzC4D,EAAS4C,kBAAkBC,EAAK,KAAM6D,EAAKpK,WAAW,EACtD,MACJ,KAAK/wC,sBAAmBI,aACpB66E,EAAcD,EAAU,IAAM,GAC9B33E,EAAQ,EAAIlQ,EACZ+nF,EAAa9gE,KAAKwgE,cAAcG,EAAW33E,EAAQ43E,GAAY7nF,EAAUA,GACzEwE,EAAQyiB,KAAKwgE,cAAcM,EAAa93E,EAAQ63E,EAAc53E,GAC9DzL,EAASwiB,KAAKwgE,cAAcM,EAAa93E,EAAQ63E,EAAc53E,GAC/DoxC,EAASoD,cAAcqjC,EAAW,IAAKA,EAAW,KAAMvjF,EAAM,IAAKA,EAAM,KAAMC,EAAO,IAAKA,EAAO,KAAM0/C,EAAKC,EAC7G,MACJ,KAAKv3C,sBAAmBS,MACpB4C,EAAQ,EAAIlQ,EACZwE,EAAQyiB,KAAKwgE,cAAcG,EAAY33E,EAAQ,GAAKC,GACpDzL,EAASwiB,KAAKwgE,cAAcG,EAAY33E,EAAQ,IAAMC,GACtDoxC,EAASgN,SAASnK,EAAKyjC,EAAU,IAAKA,EAAU,GAAIpjF,EAAM,IAAKA,EAAM,IACrE88C,EAASgN,SAASnK,EAAKyjC,EAAU,IAAKA,EAAU,GAAInjF,EAAO,IAAKA,EAAO,GACvE,MACJ,KAAKoI,sBAAmBM,QACpB+C,EAAQ,EAAIlQ,EACZwE,EAAQyiB,KAAKwgE,cAAcG,EAAW,IAAK13E,GAC3CzL,EAASwiB,KAAKwgE,cAAcG,EAAW,GAAI13E,GAC3C42E,EAAQ7/D,KAAKwgE,cAAcG,EAAW,EAAG13E,GACzC83E,EAAS/gE,KAAKwgE,cAAcG,GAAY,GAAI13E,GAC5CoxC,EAASoD,cAAclgD,EAAM,IAAKA,EAAM,KAAMC,EAAO,IAAKA,EAAO,KAAMqiF,EAAM,IAAKA,EAAM,KAAMkB,EAAO,IAAKA,EAAO,KAAM7jC,EAAKC,EAC5H,MACJ,KAAKv3C,sBAAmBK,KACpBgD,EAAQ,EAAIlQ,EACZwE,EAAQyiB,KAAKwgE,cAAcG,EAAY33E,EAAQ,GAAKC,GACpDzL,EAASwiB,KAAKwgE,cAAcG,EAAY33E,EAAQ,GAAKC,GACrDoxC,EAASgN,SAASnK,EAAK3/C,EAAM,IAAKA,EAAM,GAAIC,EAAO,IAAKA,EAAO,MAI3EuZ,EAAc/C,UAAUgtE,eAAiB,SAAUnoF,EAAOC,EAAKuhD,EAAUrxC,EAAOk0C,EAAKC,EAAO8jC,EAAWloF,GACpF,IAAXA,IACAA,EAAS,EACTmkD,EAAM,MAEVl9B,KAAK0gE,kBAAkB7nF,EAAOwhD,EAAUrxC,EAAOk0C,EAAKC,EAAO8jC,EAAUC,MAAOnoF,GAAQ,GACpFinB,KAAK0gE,kBAAkB5nF,EAAKuhD,EAAUrxC,EAAOk0C,EAAKC,EAAO8jC,EAAUnoF,IAAKC,GAAQ,IAEpFge,EAAc/C,UAAUE,mBAAqB,WACzC,GACII,GADAG,EAAa,GAEb3P,EAAQuM,eAAa4D,OACzB,IAAI+K,KAAK1U,YAAYtJ,IAAI,OAASge,KAAK1U,YAAYtJ,IAAI,MAAO,CAC1D,GAAIwvC,OAAY,EAChB,IAAIxxB,KAAK1U,YAAYtJ,IAAI,MAErB,IAAK,GADD22B,GAAa3Y,KAAK1U,YAAYnJ,IAAI,MAAMwS,MAAM,KACzCzb,EAAI,EAAGA,EAAIy/B,EAAW5/B,OAAQG,IAAK,CACxC,GAAIkL,GAAQu0B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAKqb,MAAM,IAChE,KAA8E,IAA1EgkB,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,eACtDuU,EAAarQ,EAAM,OAElB,KAA4E,IAAxEu0B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,aACvDkE,EAAM,GAAG0V,SAAS,QAClBxF,EAAWlb,OAAO8J,WAAWkB,EAAM,GAAGpE,QAAQ,KAAM,UAGvD,KAA6E,IAAzE24B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,gBAA4F,IAApEy4B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,SACzIsxC,EAAYptC,EAAM,OAEjB,KAAuE,IAAnEu0B,EAAWv/B,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,QAAgB,CAG3E,IAAK,GADDyU,GADSvQ,EAAM,GACAuQ,MAAM,KAChBxb,EAAI,EAAGA,EAAIwb,EAAM5b,OAAQI,IACmB,KAA7Cwb,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,MAAgBqb,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAKwgB,SAAS,QACtGrF,GAAcE,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAO,KAEzDqb,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAKwgB,SAAS,QAClDxF,EAAWlb,OAAO8J,WAAWyR,EAAMvb,OAAOC,SAASF,EAAEG,WAAY,KAAK0G,QAAQ,KAAM,KAG5F,MAAsB,MAAfyU,GAAsBA,EAAWqF,SAAS,MAC7CrF,EAAaA,EAAWvV,UAAU,EAAGuV,EAAW1b,OAAS,IAE5B,IAA7B0b,EAAWvU,QAAQ,OACnBuU,EAAaA,EAAWE,MAAM,KAAK,SAK9C,CACD,GAAIxc,GAAQ6nB,KAAK1U,YAAYnJ,IAAI,KACjC,IAAIhK,GAAmB,KAAVA,IAAyC,IAAzBA,EAAM+H,QAAQ,MAEvC,IAAK,GADDwU,GAAiBvc,EAAMwc,MAAM,KACxBzb,EAAI,EAAGA,EAAIwb,EAAe3b,OAAQG,IACvC,IAAyE,IAArEwb,EAAetb,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,MAAc,CAExE,IADAuU,EAAaC,EAAexb,EAAI,GACV,KAAfub,GAAqBA,EAAW1b,OAAS,GAAuB,MAAlB0b,EAAW,IAC5DA,EAAaA,EAAWvV,UAAU,EAEtCoV,GAAWlb,OAAO8J,WAAWwR,EAAexb,EAAI,KAKhE,GAAIs4C,GAA2B,KAAdA,EAAkB,CAC/B,GAAI2vC,IAAc3vC,EACdA,GAAUr8B,SAAS,KACnBgsE,EAAa3vC,EAAU78B,MAAM,KAExB68B,EAAUr8B,SAAS,OACxBgsE,EAAa3vC,EAAU78B,MAAM,MAE7BwsE,GACAA,EAAWn2E,QAAQ,SAAU5G,GAEzB,QADAA,EAAQA,EAAMwQ,QACAnO,eACV,IAAK,OACD3B,GAASuM,eAAaC,IACtB,MACJ,KAAK,SACDxM,GAASuM,eAAaE,MACtB,MACJ,KAAK,YACDzM,GAASuM,eAAaG,SACtB,MACJ,KAAK,YACD1M,GAASuM,eAAahM,aAMtCoP,IACAA,EAAaA,EAAWG,QAGhC,OAASzM,KAAMsM,EAAYha,KAAM6Z,EAAUxP,MAAOA,IAEtDiS,EAAc/C,UAAUuiE,YAAc,WAClC,GAAI7/D,GAAWsJ,KAAK9L,oBACpB,OAAOkB,IAASsB,EAASvO,KAAMuO,EAASjc,KAAMic,EAAS5R,MAAOkb,OAElEjJ,EAAc/C,UAAUotE,yBAA2B,SAAUC,EAAiB10E,GAC1E,GAAI20E,EACJ,QAAQD,GACJ,IAAKx0E,sBAAmBE,KACpBu0E,EAAe1zE,mBAAiBb,KAChCJ,EAAa,IACb,MACJ,KAAKE,sBAAmBC,WACpBw0E,EAAe1zE,mBAAiBd,WAChCH,EAAa,IACb,MACJ,KAAKE,sBAAmBG,WACpBs0E,EAAe1zE,mBAAiBZ,WAChCL,EAAa,IACb,MACJ,KAAKE,sBAAmBI,KACpBq0E,EAAe1zE,mBAAiBX,KAChCN,EAAa,GACb,MACJ,KAAKE,sBAAmBK,MACpBo0E,EAAe1zE,mBAAiBV,MAChCP,EAAa,IACb,MACJ,SACI20E,EAAe1zE,mBAAiBb,KAChCJ,EAAa,KAGrB,OAAS20E,aAAcA,EAAc30E,WAAYA,IAErDoK,EAAc/C,UAAUutE,yBAA2B,SAAU50E,GACzD,GAAIwZ,GAAI,GAAIrkB,GACZqkB,GAAE1lB,IAAI,IAAK,GACX0lB,EAAE1lB,IAAI,IAAK,KACX0lB,EAAE1lB,IAAI,IAAK6E,GAASnD,IAAI,MACxBgkB,EAAE1lB,IAAI,KAAM,KACZ0lB,EAAE1lB,IAAI,KAAM,IACZ0lB,EAAE1lB,IAAI,KAAM,IACZ0lB,EAAE1lB,IAAI,IAAKkM,EACX,IAAIwwB,GAAI,GAAIr7B,GACZq7B,GAAE18B,IAAI,IAAK,GACX08B,EAAE18B,IAAI,IAAK,KACX08B,EAAE18B,IAAI,IAAK6E,GAASnD,IAAI,MACxBg7B,EAAE18B,IAAI,KAAM,KACZ08B,EAAE18B,IAAI,KAAM,IACZ08B,EAAE18B,IAAI,KAAM,IACZ08B,EAAE18B,IAAI,IAAK,MAAQkM,EACnB,IAAIjK,GAAI,GAAIZ,GACO,QAAf6K,EACAjK,EAAEjC,IAAI,IAAK,UAES,OAAfkM,EACLjK,EAAEjC,IAAI,IAAK,UAES,OAAfkM,EACLjK,EAAEjC,IAAI,IAAK,SAES,OAAfkM,EACLjK,EAAEjC,IAAI,IAAK,GAES,MAAfkM,GACLjK,EAAEjC,IAAI,IAAK,UAEfiC,EAAEjC,IAAI,IAAK,KACXiC,EAAEjC,IAAI,IAAK6E,GAASnD,IAAI,MACxBO,EAAEjC,IAAI,KAAM,KACZiC,EAAEjC,IAAI,KAAM,IACZiC,EAAEjC,IAAI,KAAM,IACZiC,EAAEjC,IAAI,IAAKkM,EACX,IAAIizD,GAAoB,GAAI99D,GAM5B,OALA89D,GAAkBn/D,IAAI,KAAM08B,IAC5ByiC,EAAkBn/D,IAAI,KAAM0lB,IAC5By5C,EAAkBn/D,IAAI,IAAK,KAAOkM,EAAa,QAAUA,GACzDizD,EAAkBn/D,IAAI,OAAQ6E,GAASnD,IAAI,YAC3Cy9D,EAAkBn/D,IAAI,KAAMiC,IACrBk9D,GAEX7oD,EAAc/C,UAAUwtE,YAAc,SAAUC,GAC5C,MAAIA,GACO,IAAMzhE,KAAK0hE,gBAAgBD,EAAI,IAAMzhE,KAAK0hE,gBAAgBD,EAAI,IAAMzhE,KAAK0hE,gBAAgBD,EAAI,IAG7F,IAAMzhE,KAAK0hE,gBAAgB,GAAK1hE,KAAK0hE,gBAAgB,GAAK1hE,KAAK0hE,gBAAgB,IAG9F3qE,EAAc/C,UAAU0tE,gBAAkB,SAAUj9E,GAChD,GAAImN,GAAMnN,EAAEnL,SAAS,GACrB,OAAsB,KAAfsY,EAAI7Y,OAAe,IAAM6Y,EAAMA,GAE1CmF,EAAc/C,UAAU2tE,kBAAoB,SAAU1oE,EAAQ2oE,GAC1D,GAAI3oE,EAAOrW,MAAQ,GAAKqW,EAAOhf,OAAS,EAAG,CACvC,GAAI8R,GAAS,GAAIC,GACjBD,GAAOG,QAAQ01E,EACf,IAAIC,KACJA,GAAQvmF,MAAM2d,EAAOvW,EAAGuW,EAAOtW,IAC/Bk/E,EAAQvmF,MAAM2d,EAAOvW,EAAIuW,EAAOrW,MAAOqW,EAAOtW,IAC9Ck/E,EAAQvmF,MAAM2d,EAAOvW,EAAIuW,EAAOrW,MAAOqW,EAAOtW,EAAIsW,EAAOhf,SACzD4nF,EAAQvmF,MAAM2d,EAAOvW,EAAGuW,EAAOtW,EAAIsW,EAAOhf,QAC1C,KAASf,EAAI,EAAGA,EAAI2oF,EAAQ9oF,OAAQG,IAChC2oF,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAOyS,EAAOI,QAAQw9C,WAAWk4B,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAEjH,IAAIynD,GAAO,GAAIzK,GACfyK,GAAK7I,aAAaj/B,EAAOvW,EAAGuW,EAAOtW,EAAGsW,EAAOrW,MAAOqW,EAAOhf,OAC3D,KAASf,EAAI,EAAGA,EAAI,EAAGA,IACnB6nD,EAAKvK,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,KAAOuoF,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,IAM5F,KAAK,GAJDwoF,GAAOD,EAAQ,GAAG,GAClBE,EAAOF,EAAQ,GAAG,GAClBG,EAAOH,EAAQ,GAAG,GAClBI,EAAOJ,EAAQ,GAAG,GACb3oF,EAAI,EAAGA,EAAI,EAAGA,IACf2oF,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAKwoF,IAChDA,EAAOD,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAElDuoF,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAKyoF,IAChDA,EAAOF,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAElDuoF,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAK0oF,IAChDA,EAAOH,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAElDuoF,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAK2oF,IAChDA,EAAOJ,EAAQzoF,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAG1D,QAASoJ,EAAGuW,EAAOvW,EAAGC,EAAGsW,EAAOtW,EAAGC,MAAOvK,KAAKgM,MAAM09E,EAAOD,GAAO7nF,OAAQ5B,KAAKgM,MAAM49E,EAAOD,IAEjG,MAAO/oE,IAEXlC,EAAc/C,UAAUkuE,cAAgB,WACpCliE,KAAKmiE,YAAYniE,KAAK7G,MAAO6G,KAAKhc,MAAOgc,KAAK/G,OAAQ+G,KAAKuqD,OAAQvqD,KAAKo5D,OAAQp5D,KAAK+6D,QAAS/6D,KAAK5S,OAEvG2J,EAAc/C,UAAUmuE,YAAc,SAAUhpE,EAAOnV,EAAOo+E,EAAa7X,EAAQ6O,EAAQ2B,EAAS3tE,GAChG,GAAIi1E,IAAc,EAAG,EACjBlpE,IAASA,EAAM1e,OACf4nF,EAAalpE,EAAM1e,KAEvB,IACI6nF,GAAcF,EAEdnpE,GAHIopE,EAAW,GAAK,IAEfC,EAAY3/E,EAAI,IAAO0/E,EAAW,GAAKC,EAAY3/E,EAAI0/E,EAAW,GAAK,IAC5D,IAAK,IACzB,IAAIriE,KAAK1U,YAAYtJ,IAAI,UACJge,KAAK1U,YAAYnJ,IAAI,SACtB,CACZ,GAAIogF,GAAYviE,KAAK1U,YAAYpJ,SAAS,OAC1C,IAAIqgF,GAAkC,IAArBA,EAAUxpF,OAAc,CACrC,GAAImB,GAAOqoF,EAAU,GACjBC,EAAQD,EAAU,EAGtBtpE,IAAU/e,EAAMsoF,EAFJD,EAAU,GAESroF,EADlBqoF,EAAU,GACuBC,QAIrC,KAAVx+E,IACPA,GAAS,EAAG,EAAG,GAEnB,IAAI0pE,GAAY,GAAI5qB,IAAS9+C,GACzB6pE,EAActD,EAAO3nE,MAAQ,EAC7Bs6C,EAAM,GAAI2F,KAAQ,EAAG,EAAG,GAAI,GAC5B4/B,EAAQ,EACRC,EAAS,GAAI5/B,IAAS9iC,KAAK2iE,cAAc3+E,GAC7C,QAAsB,KAAXo1E,GAAqC,OAAXA,GAA8B,KAAXA,EACpDqJ,EAAQziE,KAAK4iE,YAAYxJ,EAAQ2B,EAAS9hE,EAAQy0D,EAAWgV,EAAQvpE,EAAOspE,EAAOlY,OAElF,QAAuB,KAAZwQ,GAAuC,OAAZA,GAAgC,KAAZA,EAAgB,CACvE8H,GAAa5pE,EAAO,GAAK40D,EAAa50D,EAAO,GAAK40D,EAAa50D,EAAO,GAAKsxD,EAAO3nE,MAAO,GAC7Fod,MAAK8iE,cAAc3pE,EAAOjS,eAAaQ,WACnCsY,KAAKg5D,oBACL7/D,EAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,GAGrF/jC,EAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,EAAKwwB,GAE9Fv0D,EAAMkhC,SAASK,SACf,IAAIqoC,IAAeF,EAAU,GAAK,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAK,EACjFE,IAAeA,EAAY,GAAKA,EAAY,GAAKA,EAAY,GAAK,EAAIA,EAAY,GAAIF,EAAU,GAAK,GACrG7iE,KAAK8iE,cAAc3pE,EAAOjS,eAAagB,QACvC8X,KAAKgjE,aAAajI,EAASgI,EAAa5pE,GACxCA,EAAMkhC,SAASK,UACf+nC,EAAQ,OAEP,CACDziE,KAAK8iE,cAAc3pE,EAAOjS,eAAaQ,UACvC,IAAIm7E,IAAa5pE,EAAO,GAAK40D,EAAa50D,EAAO,GAAK40D,EAAa50D,EAAO,GAAKsxD,EAAO3nE,MAAO,GACzFod,MAAKg5D,oBACL7/D,EAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,GAGrF/jC,EAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,EAAKwwB,GAE9F+U,EAAQ,GACRtpE,EAAMkhC,SAASK,UAEnB,GAAIt3C,IAAQ6V,EAAO,GAAK40D,EAAa50D,EAAO,GAAK40D,EAAc4U,EAC3DxpE,EAAO,GAAKsxD,EAAO3nE,MAAOqW,EAAO,IAAMwpE,EAAQlY,EAAO3nE,OAC1Dod,MAAK8iE,cAAc3pE,EAAOjS,eAAaQ,WACvCyR,EAAMkhC,SAASyC,cAAc15C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAI,GAAIy/C,KAAQ,EAAG,EAAG,GAAI,GAAI,GAAIC,KAAU,IAAK,IAAK,OACnH1/C,EAAK,IAAM,GACXA,EAAK,IAAM,EACXA,EAAK,IAAM,GACX+V,EAAMkhC,SAASK,UACf16B,KAAK8iE,cAAc3pE,EAAOjS,eAAagB,YACnB,KAATkF,GAAiC,OAATA,GAA0B,KAATA,GAChD+L,EAAMkhC,SAAS0H,WAAW30C,EAAM4S,KAAK64D,WAAYz1E,EAAM,KAAM,GAAI0/C,KAAU,EAAG,EAAG,IAAK,MAE1F3pC,EAAMkhC,SAASK,WAEnB3jC,EAAc/C,UAAUivE,oBAAsB,WAC1C,GAAI/nC,GAAU,EACVl7B,MAAK1U,YAAYtJ,IAAI,cACrBk5C,EAAUl7B,KAAK1U,YAAYnJ,IAAI,YAEnC,IAAIi3E,GAASp5D,KAAKo5D,OACd2B,EAAU/6D,KAAK+6D,QACf79B,EAAM,GAAI2F,KAAQ,EAAG,EAAG,GAAI,EAChC,IAAK7iC,KAAK1U,YAAYtJ,IAAI,SAIrB,CACD,GAAIiX,GAAS+G,KAAKkjE,+BACQ,KAAfljE,KAAKhc,QACZgc,KAAKhc,OAAS,EAAG,EAAG,GAExB,IAAI0pE,GAAY,GAAI5qB,IAAS9iC,KAAKhc,OAC9B6pE,EAAc7tD,KAAKuqD,OAAO3nE,MAAQ,EAClC6/E,EAAQ,EACRC,EAAS,GAAI5/B,IAAS9iC,KAAK2iE,cAAc3iE,KAAKhc,OAClD,QAA2B,KAAhBgc,KAAKo5D,QAA0C,OAAhBp5D,KAAKo5D,QAAmC,KAAhBp5D,KAAKo5D,OACnEqJ,EAAQziE,KAAK4iE,YAAY5iE,KAAKo5D,OAAQp5D,KAAK+6D,QAAS9hE,EAAQy0D,EAAWgV,EAAQ1iE,KAAK7G,MAAOspE,EAAOziE,KAAKuqD,YAEtG,QAA4B,KAAjBvqD,KAAK+6D,SAA4C,OAAjB/6D,KAAK+6D,SAAqC,KAAjB/6D,KAAK+6D,QAAgB,CACtF8H,GAAa5pE,EAAO,GAAK40D,EAAa50D,EAAO,GAAK40D,EAAa50D,EAAO,GAAK+G,KAAKuqD,OAAO3nE,MAAO,GAClGod,MAAK8iE,cAAc9iE,KAAK7G,MAAOjS,eAAaQ,WAC5CsY,KAAK7G,MAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,EAAKwwB,GAC/F1tD,KAAK7G,MAAMkhC,SAASK,SACpB,IAAIqoC,IAAeF,EAAU,GAAK,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAK,EACjFE,IAAeA,EAAY,GAAKA,EAAY,GAAKA,EAAY,GAAK,EAAIA,EAAY,GAAIF,EAAU,GAAK,GACrG7iE,KAAK8iE,cAAc9iE,KAAK7G,MAAOjS,eAAagB,QAC5C8X,KAAKgjE,aAAahjE,KAAK+6D,QAASgI,EAAa/iE,KAAK7G,OAClDspE,EAAQ,GACRziE,KAAK7G,MAAMkhC,SAASK,cAEnB,CACD16B,KAAK8iE,cAAc9iE,KAAK7G,MAAOjS,eAAaQ,UAC5C,IAAIm7E,IAAa5pE,EAAO,GAAK40D,EAAa50D,EAAO,GAAK40D,EAAa50D,EAAO,GAAK+G,KAAKuqD,OAAO3nE,MAAO,GAClGod,MAAK7G,MAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,EAAKwwB,GAC/F+U,EAAQ,GACRziE,KAAK7G,MAAMkhC,SAASK,UAExB16B,KAAK8iE,cAAc9iE,KAAK7G,MAAOjS,eAAaQ,UAC5C,IAAItE,IAAQ6V,EAAO,GAAK40D,EAAa50D,EAAO,GAAK40D,EAAc4U,EAC3DxpE,EAAO,GAAK+G,KAAKuqD,OAAO3nE,MAAOqW,EAAO,IAAMwpE,EAAQziE,KAAKuqD,OAAO3nE,OACpEod,MAAK7G,MAAMkhC,SAASyC,cAAc15C,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAI85C,EAAK,GAAI4F,KAAU,IAAK,IAAK,OACnG1/C,EAAK,IAAM,GACXA,EAAK,IAAM,EACXA,EAAK,IAAM,GACX4c,KAAK7G,MAAMkhC,SAASK,UACpB16B,KAAK8iE,cAAc9iE,KAAK7G,MAAOjS,eAAagB,QAC5C8X,KAAK7G,MAAMkhC,SAASK,cAQG,KAAZQ,GAAuC,OAAZA,GAAgC,KAAZA,GACtDl7B,KAAK7G,MAAMkhC,SAAS0H,WAAW7G,EAASl7B,KAAK64D,WAAYz1E,EAAM,KAAM,GAAI0/C,KAAU,EAAG,EAAG,IAAK,MAGlG9iC,KAAK7G,MAAMkhC,SAASK,UACpB16B,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,UAxD9BA,MAAKmiE,YAAYniE,KAAK7G,MAAO6G,KAAKhc,MAAOgc,KAAK/G,OAAQ+G,KAAKuqD,OAAQ6O,EAAQ2B,EAAS7/B,GACpFl7B,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,OA0DtCjJ,EAAc/C,UAAUkvE,yBAA2B,WAC/C,GAAIljE,KAAK1U,YAAYtJ,IAAI,SAAU,CAC/B,GACIoB,GADM4c,KAAK1U,YAAYnJ,IAAI,SAChBD,SAAS,OACxB,OAAa,QAATkB,GACmB,OAAf4c,KAAK7G,MACW,IAAZ/V,EAAK,IAAwB,IAAZA,EAAK,GACtBA,EAAK,GAAKA,EAAK,GAAKA,EAAK,GAGzBA,EAAK,GAAK4c,KAAK7G,MAAMkO,MAAM,IAAMjkB,EAAK,GAAKA,EAAK,IAIpDA,EAAK,GAAMA,EAAK,GAAKA,EAAK,GAEvBA,IAGC,EAAG,EAAG,EAAG,GAIrB,OAAQ,EAAG,EAAG,EAAG,IAGzB2T,EAAc/C,UAAU2uE,cAAgB,SAAU3+E,GAE9C,OADcA,EAAM,GAAKA,EAAM,GAAKA,EAAM,IAAM,EAAK,KAAQ,EAAG,EAAG,IAAM,IAAK,IAAK,MAGvF+S,EAAc/C,UAAU4uE,YAAc,SAAUxJ,EAAQ2B,EAAS9hE,EAAQy0D,EAAWgV,EAAQvpE,EAAOgqE,EAAgB5Y,GAC/G,GAAIsD,GAAc7tD,KAAKuqD,OAAO3nE,MAAQ,EAClCs6C,EAAM,GAAI2F,KAAQ,EAAG,EAAG,GAAI,GAC5Bh8B,EAAS,GAAI/B,IAAgB9G,mBAAiB9jB,KAAMsrB,uBAAqB29B,QACzE0/B,GAAa5pE,EAAO,GAAK40D,EAAa50D,EAAO,GAAK40D,EAAa50D,EAAO,GAAKsxD,EAAO3nE,MAAO,GAC7F,QAAuB,KAAZm4E,GAAuC,OAAZA,GAAgC,KAAZA,EAAgB,CACtE8H,EAAU,IAAM,GAChBM,EAAiBN,EAAU,GAC3B7iE,KAAK8iE,cAAc3pE,EAAOjS,eAAaQ,WACnCsY,KAAKg5D,oBACL7/D,EAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,GAGrF/jC,EAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,EAAKwwB,GAE9Fv0D,EAAMkhC,SAASK,SACXqoC,IAAeF,EAAU,GAAK,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAK,EACjF7iE,MAAK8iE,cAAc9iE,KAAK7G,MAAOjS,eAAagB,QAC5CiR,EAAMkhC,SAAS0H,WAAWq3B,EAAQp5D,KAAK84D,gBAAiBiK,EAAa,KAAML,EAAQ77D,GACnFk8D,GAAeA,EAAY,GAAKA,EAAY,GAAKA,EAAY,GAAK,EAAIA,EAAY,GAAIF,EAAU,GAAK,GACrG7iE,KAAKgjE,aAAajI,EAASgI,EAAa5pE,GACxCA,EAAMkhC,SAASK,cAEd,CACD16B,KAAK8iE,cAAc3pE,EAAOjS,eAAaQ,WACnCsY,KAAKg5D,oBACL7/D,EAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,GAGrF/jC,EAAMkhC,SAASyC,cAAc+lC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI3lC,EAAKwwB,GAE9Fv0D,EAAMkhC,SAASK,SACf,IAAIqoC,IAAeF,EAAU,GAAK,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAC5E7iE,MAAK8iE,cAAc3pE,EAAOjS,eAAagB,QACvCiR,EAAMkhC,SAAS0H,WAAWq3B,EAAQp5D,KAAK64D,WAAYkK,EAAa,KAAML,EAAQ77D,GAC9Es8D,EAAiBN,EAAU,GAC3B1pE,EAAMkhC,SAASK,UAEnB,MAAOyoC,IAEXpsE,EAAc/C,UAAUgvE,aAAe,SAAUjI,EAASgI,EAAa5pE,GACnE,GAAI0N,GAAS,GAAI/B,IAAgB9G,mBAAiB9jB,KAAMsrB,uBAAqB29B,OAC7EhqC,GAAMkhC,SAAS0H,WAAWg5B,EAAS/6D,KAAK84D,gBAAiBiK,EAAa,KAAM,GAAIjgC,KAAU,EAAG,EAAG,IAAKj8B,IAEzG9P,EAAc/C,UAAU8uE,cAAgB,SAAU3pE,EAAOiqE,GACrDjqE,EAAMkhC,SAASE,OACfphC,EAAMkhC,SAASgO,gBAAgB,GAAK,GAAK+6B,IAE7CrsE,EAAc/C,UAAUqvE,sBAAwB,SAAUr/E,GACtD,OAAQA,EAAM,GAAK,KAAKrG,QAAQ,GAAK,KAAOqG,EAAM,GAAK,KAAKrG,QAAQ,GAAK,KAAOqG,EAAM,GAAK,KAAKrG,QAAQ,GAAK,QAEjHoZ,EAAc/C,UAAUkmE,cAAgB,SAAUoJ,GAC9C,GAAIC,GAAa,GAAIC,KACrB,IAAgB,MAAZF,EAAK,IAA0B,MAAZA,EAAK,GAAY,CACpC,GAAIG,GAAOH,EAAKpkF,UAAU,EAAG,GACzBwkF,EAAQJ,EAAKpkF,UAAU,EAAG,GAC1BykF,EAAML,EAAKpkF,UAAU,EAAG,IACxB0kF,EAAON,EAAKpkF,UAAU,GAAI,IAC1B2kF,EAASP,EAAKpkF,UAAU,GAAI,IAC5B1B,EAAS8lF,EAAKpkF,UAAU,GAAI,IAC5B0I,EAAa,CACjB,IAAoB,KAAhB07E,EAAKvqF,OAAe,CACpB,GAAI+qF,GAAWR,EAAKpkF,UAAU,GAAI,GAClC,IAAiB,YAAb4kF,EAA0B,CAC1B,GAAIC,GAAYD,EAAS,GACrBE,EAAeF,EAAS5kF,UAAU,EAAG,GACrC+kF,EAAgBH,EAAS5kF,UAAU,EAAG,EAC1C0I,GAAa,KAAqB,MAAdm8E,GAAqB,EAAI,IAAM1qF,SAAS2qF,EAAc,IAAO3qF,SAAS4qF,EAAe,IAAM,KAGvHV,EAAa,GAAIC,MAAKC,EAAO,IAAMC,EAAQ,IAAMC,EAAM,IAAMC,EAAO,IAAMC,EAAS,IAAMrmF,GACtE,IAAfoK,GACA27E,EAAWW,QAAQX,EAAWY,UAA0B,GAAbv8E,EAAkB,GAAK,SAGrE,KAA2B,IAAvB07E,EAAKpjF,QAAQ,KAAa,CAC/B,GAAI83C,GAAOsrC,EAAK3uE,MAAM,KAClB8uE,EAAOzrC,EAAK,GAAGrjC,MAAM,KAAK,EAEhB,SADV+uE,EAAQ1rC,EAAK,KACe,OAAV0rC,GAA4B,OAAVA,IACpCA,EAAQ,IAAMA,EAElB,IAAIC,GAAM3rC,EAAK,GACX4rC,EAAO5rC,EAAK,GAAGrjC,MAAM,KAAK,GAAGA,MAAM,KAAK,GACxCkvE,EAAS7rC,EAAK,GAAGrjC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC1CnX,EAASw6C,EAAK,GAAGrjC,MAAM,KAAK,GAAGA,MAAM,KAAK,EAC9C4uE,GAAa,GAAIC,MAAKC,EAAO,IAAMC,EAAQ,IAAMC,EAAM,IAAMC,EAAO,IAAMC,EAAS,IAAMrmF,OAGzF+lF,GAAa,GAAIC,MAAKF,EAE1B,OAAOC,IAEXxsE,EAAc/C,UAAUmmE,cAAgB,SAAUiK,GAC9C,GAAIV,IAASU,EAASC,WAAa,GAAG/qF,UACxB,QAAVoqF,GAA4B,OAAVA,GAA4B,OAAVA,IACpCA,EAAQ,IAAMA,EAElB,IAAIJ,GAAQc,EAASE,UAAWhrF,UAC5BF,QAAOC,SAASiqF,GAAQ,KACxBA,EAAO,IAAMA,EAEjB,IAAIiB,GAASH,EAASI,WAAYlrF,UAC9BF,QAAOC,SAASkrF,GAAS,KACzBA,EAAQ,IAAMA,EAElB,IAAIE,GAAWL,EAASM,aAAcprF,UAClCF,QAAOC,SAASorF,GAAW,KAC3BA,EAAU,IAAMA,EAEpB,IAAIE,GAAWP,EAASQ,aAActrF,UAItC,OAHIF,QAAOC,SAASsrF,GAAW,KAC3BA,EAAU,IAAMA,GAEb,KAAOP,EAASS,cAAcvrF,WAAaoqF,EAAQJ,EAAOiB,EAAQE,EAAUE,EAAU,WAEjG5tE,EAAc/C,UAAU8wE,uBAAyB,WAC7C,GAAI1hF,IAAQ4c,KAAK9G,QAAQxW,EAAGsd,KAAK9G,QAAQvW,EAAGqd,KAAK/G,OAAOvW,EAAIsd,KAAK9G,QAAQtW,MAAOod,KAAK/G,OAAOtW,EAAIqd,KAAK9G,QAAQjf,QACzGwf,EAAoBuG,KAAKtG,oBAC7B,IAAIsG,KAAK7G,MAAO,CACZ,GAAI1e,GAAOulB,KAAK7G,MAAM1e,IACtB2I,GAAK,GAAK3I,EAAK,GAAK2I,EAAK,GACrBqW,GAAqBA,EAAkB1gB,OAAS,IAA+B,IAAzB0gB,EAAkB,IAAqC,IAAzBA,EAAkB,MACtGrW,EAAK,IAAMqW,EAAkB,GAC7BrW,EAAK,IAAMqW,EAAkB,IAGrC,MAAOrW,IAEX2T,EAAc/C,UAAU+wE,WAAa,SAAUC,GAC3C,GAAItJ,GAAiB17D,KAAKtG,qBACtBjQ,EAASu7E,CACb,IAAItJ,GAAkBA,EAAe3iF,OAAS,GAAkC,gBAAtB2iF,GAAe,IAAgD,gBAAtBA,GAAe,KAA0C,IAAtBA,EAAe,IAAkC,IAAtBA,EAAe,IAAW,CAEvL,IAAK,GADDuJ,MACK/rF,EAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAC/B+rF,EAAe3pF,KAAKmO,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAE7D,KAAK,GAAIH,GAAI,EAAGA,EAAI8rF,EAAelsF,OAAQI,GAAQ,EAAG,CAClD,GAAIuJ,GAAIuiF,EAAe7rF,OAAOC,SAASF,EAAEG,WAAY,KACjDqJ,EAAIsiF,EAAe9rF,EAAI,EACvBuiF,KACAjyE,EAAOrQ,OAAOC,SAASF,EAAEG,WAAY,KAAOoJ,EAAIg5E,EAAe,GAC3D17D,KAAK7G,MAAMne,gBAAgBgH,IAAI,cAAgBge,KAAK7G,MAAMne,gBAAgBgH,IAAI,YAAoC,IAAtB05E,EAAe,IAAYA,EAAe,GAAK,EAC3IjyE,EAAOtQ,EAAI,GAAKwJ,EAAI+4E,EAAe,GAGnCjyE,EAAOtQ,EAAI,GAAKwJ,EAAI+4E,EAAe,KAKnD,MAAOjyE,IAEXsN,EAAc/C,UAAU0F,mBAAqB,WACzC,GAAIgiE,EAOJ,IANI17D,KAAK7G,SACLuiE,EAAiB17D,KAAK7G,MAAM5V,UACqB,IAA1Bm4E,EAAe3iF,SAClC2iF,EAAiB17D,KAAK7G,MAAM7V,WAGhCo4E,GAAkBA,EAAe,GAAK,EAAG,CACzC,GAAI/4E,GAAI+4E,EAAe,GACnBzhF,EAASyhF,EAAe,EAC5BA,GAAe,GAAK/4E,EACpB+4E,EAAe,GAAKzhF,EAExB,MAAOyhF,IAEX3kE,EAAc/C,UAAUonE,kBAAoB,WACxC,GAAIp7D,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIkI,GAAY8V,KAAK1U,YAAYE,OAAO,MACpCxR,EAAOgmB,KAAK7G,KAChB,IAAIjP,GAAalQ,GAAQgmB,KAAKtU,gBAAgBuM,UAAW,CACrD,GAAIitE,GAAkBllE,KAAKtU,gBAAgBuM,UAAUktE,MACjDD,IACAllE,KAAKolE,WAAWF,EAAiBh7E,EAAWlQ,IAIxD,MAAOgmB,MAAKqlE,OAEhBtuE,EAAc/C,UAAUoxE,WAAa,SAAUF,EAAiBI,EAAmBtrF,GAC/E,IAAK,GAAId,GAAI,EAAGA,EAAIgsF,EAAgBj8E,MAAO/P,IAAK,CAC5C,GAAIgR,GAAYg7E,EAAgBvsF,GAAGO,GAAGmiF,gBACtC,IAAInxE,GAAaA,IAAco7E,GAC3B,GAAIJ,EAAgBvsF,GAAGO,GAAGiP,KAAM,CAC5B6X,KAAK69B,OAASqnC,EAAgBvsF,GAAGO,EACjC,YAGCgsF,GAAgBvsF,GAAGO,GAAGisF,QAAUD,EAAgBvsF,GAAGO,GAAGisF,OAAOl8E,MAAQ,GAC1E+W,KAAKolE,WAAWF,EAAgBvsF,GAAGO,GAAGisF,OAAQG,EAAmBtrF,KAItE+c,KAoBPwuE,GAA4B,SAAU19D,GAEtC,QAAS09D,KACL,MAAkB,QAAX19D,GAAmBA,EAAO1pB,MAAM6hB,KAAMre,YAAcqe,KAgE/D,MAlEAiG,IAAUs/D,EAAY19D,GAItB9T,OAAO+H,eAAeypE,EAAWvxE,UAAW,YAoBxC7R,IAAK,WACD,MAAI6d,MAAKg7C,UACEh7C,KAAKg7C,UAGLh7C,KAAKg7C,UAAY,GAAIwqB,IAA6BxlE,MAAM,IAGvEjE,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeypE,EAAWvxE,UAAW,iBAoBxC7R,IAAK,WACD,MAAI6d,MAAKylE,eACEzlE,KAAKylE,eAGLzlE,KAAKylE,eAAiB,GAAID,IAA6BxlE,MAAM,IAG5EjE,YAAY,EACZC,cAAc,IAEXupE,GACTxuE,IAiBEpB,GAAmC,SAAUkS,GAE7C,QAASlS,GAAkB6hC,GACvB,GAAIzvB,GAAQF,EAAO5T,KAAK+L,OAASA,IAUjC,OATA+H,GAAM29D,MAAQ74E,qBAAmBC,WACjCib,EAAM49D,YAAc,GACpB59D,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,SAC9B,OAAfq1C,OAA6C,KAAfA,IAC9BzvB,EAAMyvB,WAAaA,GAEvBzvB,EAAM/Q,MAAQC,qBAAmB2uE,eAC1B79D,EA8nCX,MA1oCA9B,IAAUtQ,EAAmBkS,GAc7B9T,OAAO+H,eAAenG,EAAkB3B,UAAW,cAkB/C7R,IAAK,WACD,OAAgC,KAArB6d,KAAK6lE,aAA+B7lE,KAAK1U,YAAYtJ,IAAI,KAAM,CACtE,GAAIyH,GAASuW,KAAK1U,YAAYpJ,SAAS,IACnCuH,KACAuW,KAAK6lE,YAAcp8E,GAG3B,MAAOuW,MAAK6lE,aAmBhBplF,IAAK,SAAUtI,GACX,GAAI8H,MAAMuB,QAAQrJ,SAAuC,KAArB6nB,KAAK6lE,aAA+BjoF,EAAazF,EAAO6nB,KAAK6lE,cAAe,CAC5G,GAAqB,IAAjB1tF,EAAMY,OAKN,KAAM,IAAIc,OAAM,kCAJhBmmB,MAAK1U,YAAY9C,OAAO,IAAKrQ,GAC7B6nB,KAAK6lE,YAAc1tF,IAO/B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAenG,EAAkB3B,UAAW,aAkB/C7R,IAAK,WACD,OAA+B,KAApB6d,KAAK8lE,YAA8B9lE,KAAK1U,YAAYtJ,IAAI,OAAQ,CACvE,GAAI+jF,GAAY/lE,KAAK1U,YAAYnJ,IAAI,WACZ,KAAd4jF,IACP/lE,KAAK8lE,WAAaC,GAG1B,MAAO/lE,MAAK8lE,YAmBhBrlF,IAAK,SAAUtI,GACNiB,OAAOm3D,MAAMp4D,KACd6nB,KAAK1U,YAAY9C,OAAO,MAAOrQ,GAC/B6nB,KAAK8lE,WAAa3tF,IAG1B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAenG,EAAkB3B,UAAW,cAkB/C7R,IAAK,WACD,OAAgC,KAArB6d,KAAKgmE,aAA+BhmE,KAAK1U,YAAYtJ,IAAI,MAAO,CACvE,GAAIikF,GAAajmE,KAAK1U,YAAYnJ,IAAI,UACZ,KAAf8jF,IACPjmE,KAAKgmE,YAAcC,GAG3B,MAAOjmE,MAAKgmE,aAmBhBvlF,IAAK,SAAUtI,GACNiB,OAAOm3D,MAAMp4D,IAA6B,IAAnB6nB,KAAK+lE,YAC7B/lE,KAAK1U,YAAY9C,OAAO,KAAMrQ,GAC9B6nB,KAAKgmE,YAAc7tF,IAG3B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAenG,EAAkB3B,UAAW,mBAkB/C7R,IAAK,WACD,OAAqC,KAA1B6d,KAAKkmE,iBAAkC,CAC9C,GAAI/tF,GAAQ,GAAIguF,GAEhB,IADAhuF,EAAMmT,YAAc0U,KAAK1U,YACrB0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIokF,GAAapmE,KAAK1U,YAAYpJ,SAAS,KACvCkkF,IAAcnmF,MAAMuB,QAAQ4kF,KAC5BjuF,EAAMkuF,OAAS//E,EAAoB8/E,EAAW,GAAGj+E,MACjDhQ,EAAMq1B,KAAOlnB,EAAoB8/E,EAAW,GAAGj+E,OAGvD6X,KAAKkmE,iBAAmB/tF,EAE5B,MAAO6nB,MAAKkmE,kBAmBhBzlF,IAAK,SAAUtI,GACX,GAAI2M,GAAQkb,KAAKsmE,eACbxhF,GAAMo8E,QAAU/oF,EAAM+oF,OAASp8E,EAAMhM,MAAQX,EAAMW,MACnDgM,EAAMo8E,MAAQ/oF,EAAM+oF,MACpBp8E,EAAMhM,IAAMX,EAAMW,MAG1BijB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAenG,EAAkB3B,UAAW,gBAkB/C7R,IAAK,WACD,OAAkC,KAAvB6d,KAAKumE,eAAiCvmE,KAAK1U,YAAYtJ,IAAI,OAAQ,CAC1E,GAAIwkF,GAAexmE,KAAK1U,YAAYnJ,IAAI,WACZ,KAAjBqkF,GAAgCA,GAAgB,IACvDxmE,KAAKumE,cAAgBC,GAG7B,MAAOxmE,MAAKumE,eAmBhB9lF,IAAK,SAAUtI,GACNiB,OAAOm3D,MAAMp4D,KACd6nB,KAAK1U,YAAY9C,OAAO,MAAOrQ,GAC/B6nB,KAAKumE,cAAgBpuF,IAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAenG,EAAkB3B,UAAW,cAkB/C7R,IAAK,WACD,OAAgC,KAArB6d,KAAKymE,aAA+BzmE,KAAK1U,YAAYtJ,IAAI,MAAO,CACvE,GAAI0kF,GAAa1mE,KAAK1U,YAAYnJ,IAAI,KAClCukF,KACA1mE,KAAKymE,YAAkC,kBAApBC,EAAWv+E,KAA2ByV,gBAAc+oE,cAAgB/oE,gBAAcgpE,WAG7G,MAAO5mE,MAAKymE,aAmBhBhmF,IAAK,SAAUtI,OACU,KAAVA,GAAyBA,IAAU6nB,KAAK0mE,aAC/C1mE,KAAKymE,YAActuF,EACnB6nB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAIhK,IAAUylB,gBAAc+oE,cAAgB,gBAAkB,gBAG7G5qE,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAenG,EAAkB3B,UAAW,WAkB/C7R,IAAK,WAID,WAH6B,KAAlB6d,KAAK6mE,WACZ7mE,KAAK6mE,SAAW7mE,KAAK1U,YAAYtJ,IAAI,YAElCge,KAAK6mE,UAmBhBpmF,IAAK,SAAUtI,GACPA,IACK6nB,KAAKpK,YACNoK,KAAK6mE,SAAW1uF,EAChB6nB,KAAK26D,QAAQC,KAAM,KAI/B7+D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAenG,EAAkB3B,UAAW,QAkB/C7R,IAAK,WACD,QAA0B,KAAf6d,KAAK0lE,OAAyB1lE,KAAKpK,aAC1CoK,KAAK0lE,MAAQ74E,qBAAmBC,WAC5BkT,KAAK1U,YAAYtJ,IAAI,aAAa,CAClC,GAAIoL,GAAO4S,KAAK1U,YAAYnJ,IAAI,WAChC6d,MAAK2lE,YAAcv4E,EAAKlO,UAAUkO,EAAKrU,OAAS,GAChDinB,KAAK0lE,MAAQh5E,GAAoBsT,KAAK2lE,aAG9C,MAAO3lE,MAAK0lE,OAmBhBjlF,IAAK,SAAUtI,GACP6nB,KAAK6mE,WACA7mE,KAAKpK,eAA8B,KAAVzd,IAC1B6nB,KAAK0lE,MAAQvtF,KAIzB4jB,YAAY,EACZC,cAAc,IAElBrG,EAAkB82D,MAAQ,SAAUzyE,EAAMuH,GACtC,GAAIi3E,GAAQ,GAAI7iE,EAGhB,OAFA6iE,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX7iE,EAAkB3B,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACtDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDoU,EAAkB3B,UAAUg+D,aAAe,SAAU0K,GACjD,OAA+B,KAApB18D,KAAKw3B,YAAkD,OAApBx3B,KAAKw3B,WAC/C,KAAM,IAAI39C,OAAM,0CAGhB,IAAI6hF,GAAiB17D,KAAKtG,oBACtBgiE,IAAkBA,EAAe3iF,OAAS,GAAKinB,KAAKw3B,WAAWz+C,OAAS,GAAkC,gBAAtB2iF,GAAe,IAAgD,gBAAtBA,GAAe,KAA0C,IAAtBA,EAAe,IAAkC,IAAtBA,EAAe,MAC1M17D,KAAK6lE,YAAY,IAAMnK,EAAe,GACtC17D,KAAK6lE,YAAY,IAAMnK,EAAe,GACtC17D,KAAK6lE,YAAY,IAAMnK,EAAe,GACtC17D,KAAK6lE,YAAY,IAAMnK,EAAe,GACtC17D,KAAK1U,YAAY9C,OAAO,IAAKwX,KAAK6lE,cAGrC7lE,KAAK1U,YAAYtJ,IAAI,QACtBge,KAAK1U,YAAY7K,IAAI,OAAO,GAE3Buf,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAK1U,YAAY7K,IAAI,KAAM6E,GAASnD,IAAI,WAEvC6d,KAAK1U,YAAYtJ,IAAI,QACtBge,KAAKsmE,gBAAkB,GAAIH,KAE1BnmE,KAAK1U,YAAYtJ,IAAI,QACtBge,KAAKimE,WAAa,GAEjBjmE,KAAK1U,YAAYtJ,IAAI,SACtBge,KAAK+lE,UAAY,GAEhB/lE,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,EAE/B,IAAInL,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,GAc/B,OAZ2B,KAAhBssE,IACPA,EAAc,GAEO,OAArB7tD,KAAKuqD,OAAOlF,UAA6C,KAArBrlD,KAAKuqD,OAAOlF,OAChDrlD,KAAKuqD,OAAOlF,QACRrlD,KAAKuqD,OAAOzlE,QAAUE,iBAAeE,OACrC8a,KAAKuqD,OAAOlF,MAAQ,EAAG,GAElBrlD,KAAKuqD,OAAOzlE,QAAUE,iBAAeC,MAC1C+a,KAAKuqD,OAAOlF,MAAQ,EAAG,KAG3BrlD,KAAK6mE,SACL7mE,KAAK8mE,oBAAsB9mE,KAAK+mE,6BAA6BrK,OAE5D,CACD,GAAIsK,IAAY,CAChB,IAAIhnE,KAAK2sD,gBAEL,GADA3sD,KAAK8mE,oBAAsB9mE,KAAKiyD,oBAC5BjyD,KAAK7G,MAAMlG,SAAY+M,KAAK+oD,WAAY2T,EAAU,CAE9CzjE,GACAvW,GAFAukF,EAAcjnE,KAAKknE,qBAEJ,GACfvkF,EAAGskF,EAAY,GAAIrkF,MAAOqkF,EAAY,GAAIhtF,OAAQgtF,EAAY,GAElEjnE,MAAK9G,QAAUD,CACXkuE,IAAiBnnE,KAAK9G,QAAQxW,EAC9Bsd,KAAK9G,QAAQvW,EACbqd,KAAK9G,QAAQxW,EAAIsd,KAAK9G,QAAQtW,MAC9Bod,KAAK9G,QAAQvW,EAAIqd,KAAK9G,QAAQjf,OAClC+lB,MAAK1U,YAAY9C,OAAO,OAAQ2+E,GAChCH,GAAY,OAGf,CACD,GACII,GAAkB1jF,GAAiBhB,GADnCuW,EAAS+G,KAAKknE,qBAC+B,GAAIvkF,EAAGsW,EAAO,GAAIrW,MAAOqW,EAAO,GAAIhf,OAAQgf,EAAO,IAChG+G,MAAK7G,MAAMlG,QAAU+M,KAAK7G,MAAMC,eAAiB4G,KAAK2sD,iBAAmB3sD,KAAK08D,UAC9E0K,EAAkBpuE,GAAcgH,KAAM/G,IAE1C+G,KAAK/G,QAAWvW,EAAG0kF,EAAgB,GAAIzkF,EAAGykF,EAAgB,GAAIxkF,MAAOwkF,EAAgB,GAAIntF,OAAQmtF,EAAgB,IACjHpnE,KAAK1U,YAAY9C,OAAO,OAAQ4+E,GAChCJ,GAAY,EAEhB,GAAIhnE,KAAK1U,YAAYtJ,IAAI,aAAeglF,EAAW,CAC/C,GAAIC,GAAcjnE,KAAKknE,oBACnBjuE,GAAWvW,EAAGukF,EAAY,GAC1BtkF,EAAGskF,EAAY,GAAIrkF,MAAOqkF,EAAY,GAAIhtF,OAAQgtF,EAAY,GAClEjnE,MAAK9G,QAAUD,CACf,IAAIkuE,OAAgB,EAEhBA,GADAnnE,KAAK7G,OAAS6G,KAAK7G,MAAMlG,QAAU+M,KAAK7G,MAAMC,gBAAkB4G,KAAK2sD,iBAAmB3sD,KAAK08D,QAC7E1jE,GAAcgH,OAGbA,KAAK9G,QAAQxW,EAC1Bsd,KAAK9G,QAAQvW,EACbqd,KAAK9G,QAAQxW,EAAIsd,KAAK9G,QAAQtW,MAC9Bod,KAAK9G,QAAQvW,EAAIqd,KAAK9G,QAAQjf,QAEtC+lB,KAAK1U,YAAY9C,OAAO,OAAQ2+E,GAC5BnnE,KAAK08D,UAAY18D,KAAKy8D,SAAWz8D,KAAK7G,OAAS6G,KAAK7G,MAAM1e,MAAQwF,MAAMuB,QAAQwe,KAAK7G,MAAM1e,OAC3FulB,KAAK7G,MAAM1e,KAAK1B,QAAU,IAC1BinB,KAAK9G,SAAYxW,EAAGukF,EAAY,GAAItkF,EAAGqd,KAAK7G,MAAM1e,KAAK,IAAMwsF,EAAY,GAAKA,EAAY,IACtFrkF,MAAOqkF,EAAY,GAAIhtF,OAAQgtF,EAAY,QAK/DtxE,EAAkB3B,UAAU89D,eAAiB,SAAUC,GAEnD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,WACDoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SACvDge,KAAK1U,YAAYtJ,IAAI,WACrBge,KAAK8mE,oBAAsB9mE,KAAK+mE,6BAA6BhV,GAG7D/xD,KAAK8mE,oBAAsB9mE,KAAKiyD,sBAGnCjyD,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,OACzBkwE,EAAmB3wE,EAAWY,IAAI,SAE9B+H,EAAY3I,EAAWiK,OAAO,QAE9B0mE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,sBAO9E,IADAsU,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBACF/U,EACA,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAmB,OAAfZ,OAA6C,KAAfA,GAA8BA,EAAWS,IAAI,KAAM,CACjF,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IAClC+vE,MACIhoE,EAAY3I,EAAWiK,OAAO,QAE9B0mE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAKiyD,mBA0BhD,QARkC,KAAvBjyD,KAAKqnE,eAAiCrnE,KAAKqnE,eAAiBtV,IAC/D/xD,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpFye,MAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAErDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAElC,IAAInV,EACJ,IAAKknE,IAAa/xD,KAAK2sD,gBAAmB3sD,KAAKy8D,SAW1C,GAAIz8D,KAAKy8D,SAAWz8D,KAAK2sD,iBAAmB3sD,KAAK1U,YAAYtJ,IAAI,MAAO,CACrEkI,EAAY8V,KAAKtU,gBAAgB00C,mBACrCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWW,GAC9CmV,KAAK1U,YAAY9C,OAAO,KAAM0B,QAd9B,IAAI8V,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACG+H,EAAY8V,KAAKtU,gBAAgB00C,mBACrCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWW,GAC9CmV,KAAK1U,YAAY9C,OAAO,KAAM0B,GAStC,GAAIW,GAAcmV,KAAK8mE,qBAAuB9mE,KAAK8mE,oBAAoBh7E,SAAU,CAC7EgH,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IAC5D,IAAIxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEjB,EAAWrC,OAAO,IAAK0B,KAG/ByL,EAAkB3B,UAAU+yE,6BAA+B,SAAUO,GAKjE,IAAK,GAJDrI,IAAmB,EAAG,EAAG,EAAG,GAC5Bxf,EAAOz/C,KAAKunE,iBACZC,EAAcxnE,KAAKynE,oBACnBh+E,KACKtQ,EAAI,EAAGA,EAAIquF,EAAYzuF,OAAQI,GAAQ,EAC5CsQ,EAAOnO,MAAMksF,EAAYpuF,OAAOC,SAASF,EAAEG,WAAY,KAAOkuF,EAAYruF,EAAI,IAElF,IAAIgmF,GAAe,GAAI7oC,GACvB6oC,GAAa3oC,QAAU/sC,EACvB01E,EAAa1oC,YAAc,EAAG,EAC9B,IAAIixC,GAAWvI,EAAa1lC,YAC5Bz5B,MAAK9G,SAAYxW,EAAGglF,EAAS,GAAI/kF,EAAG+kF,EAAS,GAAI9kF,MAAO8kF,EAAS,GAAIztF,OAAQytF,EAAS,GACtF,IACIha,GADAE,EAAY,GAAI/qB,QAA6B,KAAf7iC,KAAKhc,MAAwBgc,KAAK8hC,QAAU,EAAG,EAAG,GAAI9hC,KAAKuqD,OAAO3nE,MAEhGod,MAAKg6D,aACLtM,EAAY,GAAI5qB,IAAS9iC,KAAK+5D,cAElCkF,EAAkBj/D,KAAKknE,mBACvB,IAAI/7E,GAAW,GAAIM,IAAYwzE,EAAiBj/D,KAAKtU,gBACrDE,IAAWT,EAAU,EACrB,IAAIsiE,GAAY,GAAI0E,GACpBhnE,GAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWlvC,EAASkvC,QACxBozB,GAAUG,UAAYA,EAClB5tD,KAAKuqD,OAAOzlE,QAAUE,iBAAeE,QACrCuoE,EAAUG,UAAU7jB,WAAaprC,eAAa0mD,KAC9CoI,EAAUG,UAAUpsB,cAAgB,EAAG,IAElCxhC,KAAKuqD,OAAOzlE,QAAUE,iBAAeC,MAC1CwoE,EAAUG,UAAU7jB,WAAaprC,eAAa1Z,IAC9CwoE,EAAUG,UAAUpsB,cAAgB,EAAG,IAE3CisB,EAAUC,UAAYA,EACtBD,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAKhc,MACxC,IAAIwzC,GAAax3B,KAAKynE,oBAClBlzE,EAAOyL,KAAKu2D,aAKhB,SAJqB,KAAThiE,GAAiC,OAATA,IAAoByL,KAAKpK,WAA2B,IAAdrB,EAAK9Z,QAC3E8Z,EAAOyL,KAAK+4D,iBACZ/4D,KAAKiwD,SAAW17D,OAEM,KAAfijC,GAAoD,IAAtBA,EAAWz+C,OAAc,CAC9D,GAAI8tB,GAAS,GAAI/B,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAC3E7uC,EAAWC,EAAKu7B,cAAc2vB,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,aAAc,EAAG,GAAI9+D,EAAQ,EAAG,GAC3F7d,EAAQgX,KAAKqgE,UAAUrgE,KAAK6lE,aAC5BI,EAAa,EACb0B,EAAY,CACZ3nE,MAAKimE,WAAa,GAClBA,GAAejmE,KAAgB,WAC/B2nE,EAAY3+E,EAAQ,MAGpBi9E,EAAajmE,KAAKimE,WAClB0B,EAAY3+E,EAEhB,IAAI1I,OAAuC,KAAtB0f,KAAKwmE,aAAiCP,EAAajmE,KAAKwmE,aAAgBP,EACzFnF,EAAa9gE,KAAKwgE,eAAexgE,KAAK6lE,YAAY,GAAI7lE,KAAK6lE,YAAY,IAAM8B,EAAY,GAAKrnF,GAC9FsnF,EAAW5nE,KAAKwgE,eAAexgE,KAAK6lE,YAAY,GAAI7lE,KAAK6lE,YAAY,IAAM8B,EAAY,GAAKrnF,GAC5FunF,EAAgBxvF,KAAKqlF,KAAKrlF,KAAKC,IAAKsvF,EAAS,GAAK9G,EAAW,GAAK,GAClEzoF,KAAKC,IAAKsvF,EAAS,GAAK9G,EAAW,GAAK,IACxCgH,EAAcD,EAAe,GAAMvzE,EAAS,GAAK,EAAK0L,KAAKuqD,OAAO3nE,OAClErF,EAAQyiB,KAAKwgE,cAAcM,EAAY93E,EAAO8+E,GAC9CtqF,EAASwiB,KAAKwgE,cAAcoH,EAAW5+E,EAAQ,IAAM8+E,GACrDjvF,EAASmnB,KAAKsmE,gBAAgBpF,QAAUt7E,qBAAmBC,WAC3Dma,KAAKsmE,gBAAgBpF,QAAUt7E,qBAAmBE,YAClDka,KAAKwgE,cAAcM,EAAY93E,EAAOgX,KAAKuqD,OAAO3nE,OAClDk+E,EACAhoF,EAAOknB,KAAKsmE,gBAAgBxtF,MAAQ8M,qBAAmBC,WACvDma,KAAKsmE,gBAAgBxtF,MAAQ8M,qBAAmBE,YAChDka,KAAKwgE,cAAcoH,EAAU5+E,GAAQgX,KAAKuqD,OAAO3nE,OACjDglF,EACAp9E,MAAQ,EACRwV,MAAK66D,SAAW76D,KAAK24D,SAAW,IAChCnuE,EAAQ6vC,EAASE,OACjBF,EAASgO,gBAAgBroC,KAAK24D,WAE9B34D,KAAK26D,QAAQttE,OAASyQ,qBAAmBtE,MAASwG,KAAK26D,QAAQC,KAAO56D,KAAK26D,QAAQttE,OAASyQ,qBAAmB48D,OAC/GrgC,EAASgN,SAASumB,EAAW/0E,EAAM,IAAKA,EAAM,GAAIC,EAAI,IAAKA,EAAI,KAG/DuhD,EAASgN,SAASumB,EAAW/0E,EAAM,IAAKA,EAAM,GAAI0E,EAAM,IAAKA,EAAM,IACnE88C,EAASgN,SAASumB,EAAW90E,EAAI,IAAKA,EAAI,GAAI0E,EAAO,IAAKA,EAAO,KAEjEwiB,KAAK66D,SAAW76D,KAAK24D,SAAW,GAChCt+B,EAASK,QAAQlwC,GAErBwV,KAAKghE,eAAeF,EAAY8G,EAAUvtC,EAAUrxC,EAAO4kE,EAAWF,EAAW1tD,KAAKsmE,gBAAiBtmE,KAAKuqD,OAAO3nE,MACnH,IAAImjF,OAAuC,KAAnB/lE,KAAK+lE,UAA4B/lE,KAAK8lE,WAAa,EACvEiC,EAAe/nE,KAAKwgE,cAAcM,EAAa6G,EAAY,GAAK5B,EACpE1rC,GAASgN,SAASumB,EAAWkT,EAAW,IAAKA,EAAW,GAAIiH,EAAa,IAAKA,EAAa,GAC3F,IAAIC,GAAahoE,KAAKwgE,cAAcoH,EAAWD,EAAY,GAAK5B,EAChE1rC,GAASgN,SAASumB,EAAWga,EAAS,IAAKA,EAAS,GAAII,EAAW,IAAKA,EAAW,GACnF,IAAIC,GAAkBjoE,KAAKwgE,cAAcM,EAAa6G,EAAY,GAAK1B,EACvE5rC,GAASgN,SAASumB,EAAWkT,EAAW,IAAKA,EAAW,GAAImH,EAAgB,IAAKA,EAAgB,GACjG,IAAIC,GAAgBloE,KAAKwgE,cAAcoH,EAAWD,EAAY,GAAK1B,EACnE5rC,GAASgN,SAASumB,EAAWga,EAAS,IAAKA,EAAS,GAAIM,EAAc,IAAKA,EAAc,GACzF,IAAIC,GAAWN,EAAe,EAC1BO,EAAcpoE,KAAKwgE,cAAcM,EAAY93E,EAAOm/E,GACpDE,MAAkB,GAClBpuF,EAASsa,EAAKuW,SAAS5D,YAEvBmhE,GADAroE,KAAK26D,QAAQttE,OAASyQ,qBAAmBtE,IACvBwG,KAAKwgE,cAAc4H,EAAcp/E,EAAQ,GAAK/O,GAG9C+lB,KAAKwgE,cAAc4H,EAAcp/E,EAAQ,GAAM/O,EAAS,GAE9EogD,EAASG,mBAAmB6tC,EAAgB,IAAKA,EAAgB,IACjEhuC,EAAS+N,iBAAiBp/C,GAC1BqxC,EAAS0H,WAAW0d,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,YAAapxE,IAASD,EAAS,GAAK,EAAI,EAAG,EAAG,GAAI,KAAMm5D,EAAUmB,WACnHv0B,EAASK,UAEb,OAA2B,KAAf4sC,IAA+BA,IAAgBtnE,KAAKpK,UAAW,CACvEzK,EAASW,SAASvK,WAAWgR,UAAW,CACxC,IAAInI,GAAM4V,KAAKtU,gBAAgB00C,mBAC/BpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI2J,EAAKe,EAASW,UACjDX,EAASW,SAAS5B,UAAYE,CAC9B,IAAIk+E,IAAoBtoE,KAAK/G,OAAOvW,EAChCsd,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,OAC5B+lB,KAAK/G,OAAOrW,MACZod,KAAK/G,OAAOhf,QACZQ,EAAOulB,KAAK7G,MAAM1e,IACtB6tF,GAAiB,GAAK7tF,EAAK,IAAMulB,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,QACzD+lB,KAAKq6D,YAAcr6D,KAAKy8D,SACxBwC,EAAkBqJ,EAClBtoE,KAAK1U,YAAY9C,OAAO,QAAS8/E,EAAiB,GAAIA,EAAiB,GAAIA,EAAiB,GAAIA,EAAiB,MAGjHtoE,KAAK1U,YAAY9C,OAAO,QAASy2E,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,IAEjH,IAAIsJ,GAAK,QACLh0E,EAAKuW,SAASgP,gBACd,IACAvlB,EAAK8S,MACL,aACArH,KAAKwhE,YAAYxhE,KAAKhc,MAE1B,IADAgc,KAAK1U,YAAY9C,OAAO,KAAM+/E,OACJ,KAAfjB,IAA+BA,EAAY,CAC9CtnE,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAI88E,GAAM,GAAI1mF,GACd0mF,GAAI/nF,IAAI,IAAK2J,GACbo+E,EAAIj2E,UAAW,EACfyN,KAAK1U,YAAY7K,IAAI,KAAM+nF,EAC3B,IAAI5oB,GAAoB5/C,KAAKuhE,yBAAyBvhE,KAAK2lE,aACvDz7E,EAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW01D,GAC9CA,EAAkBrtD,UAAW,EACzByN,KAAK1U,YAAYtJ,IAAI,YACrB8Q,GAA0BkN,KAAK1U,YAAa0U,KAAKtU,gBAAiB,WAEtEsU,KAAK1U,YAAY9C,OAAO,UAAW0B,GAEvC,GAAIk8E,KAIJ,IAHAA,EAAW9qF,KAAKgK,GAASnD,IAAIwD,EAAuBqa,KAAKsmE,gBAAgBpF,SACzEkF,EAAW9qF,KAAKgK,GAASnD,IAAIwD,EAAuBqa,KAAKsmE,gBAAgBxtF,OACzEknB,KAAK1U,YAAY9C,OAAO,KAAM49E,GACL,OAArBpmE,KAAK6lE,YAIL,KAAM,IAAIhsF,OAAM,4BAHhBmmB,MAAK1U,YAAY9C,OAAO,IAAKwX,KAAK6lE,aAKtC7lE,KAAK1U,YAAY9C,OAAO,KAAMpP,OAAO8J,YAAY8c,KAAKhc,MAAM,GAAK,KAAKrG,QAAQ,IAC1EvE,OAAO8J,YAAY8c,KAAKhc,MAAM,GAAK,KAAKrG,QAAQ,IAChDvE,OAAO8J,YAAY8c,KAAKhc,MAAM,GAAK,KAAKrG,QAAQ,KAChD2C,GAAS0f,KAAK1U,YAAYtJ,IAAI,OAASge,KAAKwmE,aAAe,CAC/DxmE,MAAK1U,YAAY9C,OAAO,UAAW,GAAIlD,IAAS,SAC5C0a,KAAK+M,OAAwB,KAAf/M,KAAK+M,MACnB/M,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAK+M,MAAQ,IAAM0yC,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,aAGpF3lE,KAAK1U,YAAY9C,OAAO,WAAYi3D,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,aAErE3lE,KAAK1U,YAAY9C,OAAO,KAAM,GAAIlD,IAAS,kBAC3C0a,KAAK1U,YAAY9C,OAAO,MAAOwX,KAAK+lE,WACpC/lE,KAAK1U,YAAY9C,OAAO,MAAOlI,GAC/B0f,KAAK1U,YAAY9C,OAAO,KAAMwX,KAAKimE,YACnCjmE,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI6d,KAAK26D,QAAQttE,OAASyQ,qBAAmBtE,IAAM,MAAQ,WAClGwG,KAAK1U,YAAY9C,OAAO,MAAOwX,KAAK26D,QAAQC,IAC5C,IAAI3hE,IAAUgmE,EAAgB,GAC1BA,EAAgB,GAChBA,EAAgB,GAAKA,EAAgB,GACrCA,EAAgB,GAAKA,EAAgB,GACzCj/D,MAAK1U,YAAY9C,OAAO,OAAQyQ,GAChC+G,KAAK9G,SAAYxW,EAAGuW,EAAO,GAAItW,EAAGsW,EAAO,GAAIrW,MAAOqW,EAAO,GAAIhf,OAAQgf,EAAO,IAElF,MAAO9N,IAEXwK,EAAkB3B,UAAUy0E,gBAAkB,SAAUC,EAAaC,EAAaC,EAAWC,GACzF,OAASxwF,KAAKggF,MAAOwQ,EAAYF,EAAeC,EAAYF,IAAiB,IAAMrwF,KAAKiR,KAE5FqM,EAAkB3B,UAAU80E,qBAAuB,SAAUtxC,EAAYuxC,EAAe9C,EAAYO,EAAcvF,EAAWpT,GACzH,GAAI50D,IAAWvW,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAG3I,OAAQ,EAC7C,IAAIu9C,GAAoC,IAAtBA,EAAWz+C,OAAc,CACvC,GAAIiQ,GAAQgX,KAAKqgE,UAAU7oC,GACvBwxC,EAAc,EACdrB,EAAY,CACZ1B,GAAa,GACb+C,KACArB,EAAY3+E,EAAQ,MAGpBggF,EAAc/C,EACd0B,EAAY3+E,EAEhB,IAAIigF,IAAQzxC,EAAW,GAAIA,EAAW,IAClC0xC,GAAQ1xC,EAAW,GAAIA,EAAW,GACtC,IAAqB,IAAjBgvC,EAAoB,CACpB,GAAI2C,GAAenpE,KAAKwgE,cAAcyI,EAAOtB,EAAY,GAAKnB,GAC1D4C,EAAeppE,KAAKwgE,cAAc0I,EAAOvB,EAAY,GAAKnB,EAC9DhvC,GAAW,GAAK2xC,EAAa,GAC7B3xC,EAAW,GAAK2xC,EAAa,GAC7B3xC,EAAW,GAAK4xC,EAAa,GAC7B5xC,EAAW,GAAK4xC,EAAa,GAEjC,GAAIC,GAAgBrpE,KAAKwgE,cAAcyI,EAAOtB,EAAY,GAAKqB,EAAcxC,GACzE8C,EAActpE,KAAKwgE,cAAc0I,EAAOvB,EAAY,GAAKqB,EAAcxC,GACvE+C,EAAkBvpE,KAAKwgE,cAAcyI,EAAOtB,EAAY,GAAKoB,EAAgBC,EAAcxC,GAC3FgD,EAAgBxpE,KAAKwgE,cAAc0I,EAAOvB,EAAY,GAAKoB,EAAgBC,EAAcxC,GACzFiD,EAAiBzpE,KAAK0pE,cAAczI,EAAUC,MAAOrT,GACrD8b,EAAe3pE,KAAK0pE,cAAczI,EAAUnoF,IAAK+0E,GACjD+b,KACAC,IACClC,IAAa,IAAMA,GAAa,KAASA,GAAa,KAAOA,GAAa,KAC3EiC,EAAO,GAAKH,EAAe9mF,EAC3BknF,EAAQ,GAAKJ,EAAe/mF,EAC5BknF,EAAO,GAAKD,EAAahnF,EACzBknF,EAAQ,GAAKF,EAAajnF,IAG1BknF,EAAO,GAAKH,EAAe/mF,EAC3BmnF,EAAQ,GAAKJ,EAAe9mF,EAC5BinF,EAAO,GAAKD,EAAajnF,EACzBmnF,EAAQ,GAAKF,EAAahnF,EAE9B,IAAIC,GAAQvK,KAAKW,IAAI4wF,EAAO,GAAIA,EAAO,IACnC3vF,EAAS5B,KAAKW,IAAI6wF,EAAQ,GAAIA,EAAQ,GAC5B,KAAVjnF,IACAA,EAAQ,GAEG,IAAX3I,IACAA,EAAS,GAETovF,EAAc,KAAOhxF,KAAKY,IAAIowF,EAAc,GAAIC,EAAY,KAC5DD,EAAc,IAAMzmF,EAAQirE,EAC5Byb,EAAY,IAAM1mF,EAAQirE,EAC1Bwb,EAAc,GAAKhxF,KAAKY,IAAIowF,EAAc,GAAI7xC,EAAW,IACzD6xC,EAAc,GAAKhxF,KAAKY,IAAIowF,EAAc,GAAIE,EAAgB,IAC9DD,EAAY,GAAKjxF,KAAKW,IAAIswF,EAAY,GAAI9xC,EAAW,IACrD8xC,EAAY,GAAKjxF,KAAKW,IAAIswF,EAAY,GAAIE,EAAc,MAGxDH,EAAc,IAAMzmF,EAAQirE,EAC5Byb,EAAY,IAAM1mF,EAAQirE,EAC1Bwb,EAAc,GAAKhxF,KAAKW,IAAIqwF,EAAc,GAAI7xC,EAAW,IACzD6xC,EAAc,GAAKhxF,KAAKW,IAAIqwF,EAAc,GAAIE,EAAgB,IAC9DD,EAAY,GAAKjxF,KAAKY,IAAIqwF,EAAY,GAAI9xC,EAAW,IACrD8xC,EAAY,GAAKjxF,KAAKY,IAAIqwF,EAAY,GAAIE,EAAc,KAExDH,EAAc,KAAOhxF,KAAKY,IAAIowF,EAAc,GAAIC,EAAY,KAC5DD,EAAc,IAAMpvF,EAAS4zE,EAC7Byb,EAAY,IAAMrvF,EAAS4zE,EAC3Bwb,EAAc,GAAKhxF,KAAKY,IAAIowF,EAAc,GAAI7xC,EAAW,IACzD6xC,EAAc,GAAKhxF,KAAKY,IAAIowF,EAAc,GAAIE,EAAgB,IAC9DD,EAAY,GAAKjxF,KAAKW,IAAIswF,EAAY,GAAI9xC,EAAW,IACrD8xC,EAAY,GAAKjxF,KAAKW,IAAIswF,EAAY,GAAIE,EAAc,MAGxDH,EAAc,IAAMpvF,EAAS4zE,EAC7Byb,EAAY,IAAMrvF,EAAS4zE,EAC3Bwb,EAAc,GAAKhxF,KAAKW,IAAIqwF,EAAc,GAAI7xC,EAAW,IACzD6xC,EAAc,GAAKhxF,KAAKW,IAAIqwF,EAAc,GAAIE,EAAgB,IAC9DD,EAAY,GAAKjxF,KAAKY,IAAIqwF,EAAY,GAAI9xC,EAAW,IACrD8xC,EAAY,GAAKjxF,KAAKY,IAAIqwF,EAAY,GAAIE,EAAc,KAE5DvwE,EAAS+G,KAAKy5B,aAAc/2C,EAAG2mF,EAAc,GAAI1mF,EAAG0mF,EAAc,KAAQ3mF,EAAG4mF,EAAY,GAAI3mF,EAAG2mF,EAAY,MAEhH,MAAOrwE,IAEXtD,EAAkB3B,UAAU01E,cAAgB,SAAU5kF,EAAO+oE,GACzD,GAAI3gE,IAAUxK,EAAG,EAAGC,EAAG,EACvB,IAAImC,EACA,OAAQA,GACJ,IAAKc,sBAAmBQ,OACxB,IAAKR,sBAAmBO,OACxB,IAAKP,sBAAmBM,QACpBgH,EAAMxK,EAAI,EACVwK,EAAMvK,EAAI,CACV,MACJ,KAAKiD,sBAAmBC,UACxB,IAAKD,sBAAmBE,YACpBoH,EAAMxK,EAAI,EACVwK,EAAMvK,EAAI,CACV,MACJ,KAAKiD,sBAAmBG,WACxB,IAAKH,sBAAmBI,aACpBkH,EAAMxK,EAAI,EAAKmrE,EAAc,EAC7B3gE,EAAMvK,EAAI,EAAKkrE,EAAc,CAC7B,MACJ,KAAKjoE,sBAAmBS,MACpB6G,EAAMxK,EAAI,EACVwK,EAAMvK,EAAI,CACV,MACJ,KAAKiD,sBAAmBK,KACpBiH,EAAMxK,EAAI,EACVwK,EAAMvK,EAAI,CACV,MACJ,SACIuK,EAAMxK,EAAI,EACVwK,EAAMvK,EAAI,EAItB,MAAOuK,IAEXyI,EAAkB3B,UAAUylC,WAAa,SAAUhwC,GAC/C,GAAIwP,IAAWvW,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAG3I,OAAQ,EAC7C,IAAIwP,EAAO1Q,OAAS,EAAG,CAKnB,IAAK,GAJD2gD,GAAOjwC,EAAO,GAAG/G,EACjBi3C,EAAOlwC,EAAO,GAAG/G,EACjBk3C,EAAOnwC,EAAO,GAAG9G,EACjBk3C,EAAOpwC,EAAO,GAAG9G,EACZzJ,EAAI,EAAGA,EAAIuQ,EAAO1Q,SAAUG,EAAG,CACpC,GAAIgU,GAAQzD,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,IACjDogD,GAAOrhD,KAAKY,IAAIiU,EAAMxK,EAAGg3C,GACzBC,EAAOthD,KAAKW,IAAIkU,EAAMxK,EAAGi3C,GACzBC,EAAOvhD,KAAKY,IAAIiU,EAAMvK,EAAGi3C,GACzBC,EAAOxhD,KAAKW,IAAIkU,EAAMvK,EAAGk3C,GAE7B5gC,EAAOvW,EAAIg3C,EACXzgC,EAAOtW,EAAIi3C,EACX3gC,EAAOrW,MAAQ+2C,EAAOD,EACtBzgC,EAAOhf,OAAS4/C,EAAOD,EAE3B,MAAO3gC,IAEXtD,EAAkB3B,UAAUkzE,kBAAoB,WAC5C,GAAIjuE,GAAS+G,KAAK/G,MAClB,QAA+B,KAApB+G,KAAKw3B,YAA0D,IAA5Bx3B,KAAK6lE,YAAY9sF,OAAc,CACzE,GAAIytF,GAAexmE,KAAK1U,YAAYtJ,IAAI,OAASge,KAAKwmE,aAAe,EACjET,EAAY/lE,KAAK1U,YAAYtJ,IAAI,OAASge,KAAK+lE,UAAY,EAC3DE,EAAajmE,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAKimE,WAAa,CAEhEhtE,IAAWvW,GADXuW,EAAS+G,KAAK8oE,qBAAqB9oE,KAAK6lE,YAAaE,EAAWE,EAAYO,EAAcxmE,KAAKsmE,gBAAiBtmE,KAAKuqD,OAAO3nE,QACvGF,EAAI,EAAGC,EAAGsW,EAAOtW,EAAI,EAAGC,MAAQqW,EAAOrW,MAAQ,GAAQ3I,OAASgf,EAAOhf,OAAS,IAEzG,OAAQgf,EAAOvW,EAAGuW,EAAOtW,EAAGsW,EAAOrW,MAAOqW,EAAOhf,SAErD0b,EAAkB3B,UAAUi+D,kBAAoB,WAC5C,GAAI9mE,GAAW,GAAIM,IAAYuU,KAAKknE,oBAAqBlnE,KAAKtU,iBAC1D+hE,EAAY,GAAI0E,GACpBvmE,IAAWT,EAAU,GACrBA,EAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWlvC,EAASkvC,SACpB6C,EAAM,GAAI2F,QAA6B,KAAf7iC,KAAKhc,MAAwBgc,KAAK8hC,QAAU,EAAG,EAAG,GAAI9hC,KAAKuqD,OAAO3nE,MAC1Fod,MAAKuqD,OAAOzlE,QAAUE,iBAAeE,QACrCg4C,EAAI6M,WAAaprC,eAAa0mD,KAC9BnoB,EAAIsE,cAAgB,EAAG,IAElBxhC,KAAKuqD,OAAOzlE,QAAUE,iBAAeC,MAC1Ci4C,EAAI6M,WAAaprC,eAAa1Z,IAC9Bi4C,EAAIsE,cAAgB,EAAG,IAE3BisB,EAAUG,UAAY1wB,EACtBuwB,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAKhc,MACxC,IAAIm5C,EACAn9B,MAAKg6D,aACL78B,EAAQ,GAAI2F,IAAS9iC,KAAK+5D,aAE9B,IAAIxlE,GAAOyL,KAAKu2D,mBACK,KAAThiE,GAAiC,OAATA,IAAoByL,KAAKpK,WAA2B,IAAdrB,EAAK9Z,QAC3E8Z,EAAOyL,KAAK+4D,iBACZ/4D,KAAKiwD,SAAW17D,GAEfyL,KAAK5S,MAAS4S,KAAK1U,YAAYtJ,IAAI,cACpCge,KAAK5S,KAAO4S,KAAK+6D,QAErB,IAAIl0D,GAAS,GAAI/B,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAC3Eh4B,EAAY,CAIhB,IAHInL,KAAK26D,QAAQC,MACbzvD,EAAY5W,EAAKu7B,cAAc9vB,KAAK5S,KAAO4S,KAAK5S,KAAO,IAAK,EAAG,GAAIyZ,EAAQ,EAAG,GAAG,QAEtD,KAApB7G,KAAKw3B,YAA0D,IAA5Bx3B,KAAK6lE,YAAY9sF,OAAc,CACzE,GAAIiQ,GAAQgX,KAAKqgE,UAAUrgE,KAAK6lE,aAC5BI,EAAa,EACb0B,EAAY,EACZmC,EAAkB9pE,KAAKimE,UACH,QAApB6D,OAAuD,KAApBA,IACnC9pE,KAAKgmE,YAAc,EACnB8D,EAAkB,GAElBA,EAAkB,GAClB7D,KACA0B,EAAY3+E,EAAQ,MAGpBi9E,EAAa6D,EACbnC,EAAY3+E,EAEhB,IAAI1I,OAAuC,KAAtB0f,KAAKwmE,aAAiCP,EAAajmE,KAAKwmE,aAAgBP,EACzFnF,EAAa9gE,KAAKwgE,eAAexgE,KAAK6lE,YAAY,GAAI7lE,KAAK6lE,YAAY,IAAM8B,EAAY,GAAKrnF,GAC9FsnF,EAAW5nE,KAAKwgE,eAAexgE,KAAK6lE,YAAY,GAAI7lE,KAAK6lE,YAAY,IAAM8B,EAAY,GAAKrnF,GAC5FunF,EAAgBxvF,KAAKqlF,KAAKrlF,KAAKC,IAAKsvF,EAAS,GAAK9G,EAAW,GAAK,GAClEzoF,KAAKC,IAAKsvF,EAAS,GAAK9G,EAAW,GAAK,IACxCgH,EAAcD,EAAe,GAAM18D,EAAY,EAAKnL,KAAKuqD,OAAO3nE,OAChErF,EAAQyiB,KAAKwgE,cAAcM,EAAY93E,EAAO8+E,GAC9CtqF,EAASwiB,KAAKwgE,cAAcoH,EAAW5+E,EAAQ,IAAM8+E,GACrDjvF,EAASmnB,KAAKsmE,gBAAgBpF,QAAUt7E,qBAAmBC,WAC3Dma,KAAKsmE,gBAAgBpF,QAAUt7E,qBAAmBE,YAClDka,KAAKwgE,cAAcM,EAAY93E,EAAOgX,KAAKuqD,OAAO3nE,OAClDk+E,EACAhoF,EAAOknB,KAAKsmE,gBAAgBxtF,MAAQ8M,qBAAmBC,WACvDma,KAAKsmE,gBAAgBxtF,MAAQ8M,qBAAmBE,YAChDka,KAAKwgE,cAAcoH,EAAU5+E,GAAQgX,KAAKuqD,OAAO3nE,OACjDglF,CACJ,IAAI5nE,KAAK66D,SAAW76D,KAAK24D,SAAW,EAAG,CACnC,GAAInuE,GAAQ6vC,EAASE,MACrBF,GAASgO,gBAAgBroC,KAAK24D,UAC9B34D,KAAK+pE,UAAU1vC,EAAU6C,EAAKrkD,EAAOC,EAAKyE,EAAOC,GACjD68C,EAASK,QAAQlwC,OAGjBwV,MAAK+pE,UAAU1vC,EAAU6C,EAAKrkD,EAAOC,EAAKyE,EAAOC,EAErDwiB,MAAKghE,eAAeF,EAAY8G,EAAUvtC,EAAUrxC,EAAOk0C,EAAKC,EAAOn9B,KAAKsmE,gBAAiBtmE,KAAKuqD,OAAO3nE,MACzG,IAAImjF,OAAuC,KAAnB/lE,KAAK+lE,UAA4B/lE,KAAK8lE,WAAa,EACvEiC,EAAe/nE,KAAKwgE,cAAcM,EAAa6G,EAAY,GAAK5B,EACpE1rC,GAASgN,SAASnK,EAAK4jC,EAAW,IAAKA,EAAW,GAAIiH,EAAa,IAAKA,EAAa,GACrF,IAAIC,GAAahoE,KAAKwgE,cAAcoH,EAAWD,EAAY,GAAK5B,EAChE1rC,GAASgN,SAASnK,EAAK0qC,EAAS,IAAKA,EAAS,GAAII,EAAW,IAAKA,EAAW,GAC7E,IAAIC,GAAkBjoE,KAAKwgE,cAAcM,EAAa6G,EAAY,GAAK1B,EACvE5rC,GAASgN,SAASnK,EAAK4jC,EAAW,IAAKA,EAAW,GAAImH,EAAgB,IAAKA,EAAgB,GAC3F,IAAIC,GAAgBloE,KAAKwgE,cAAcoH,EAAWD,EAAY,GAAK1B,EACnE5rC,GAASgN,SAASnK,EAAK0qC,EAAS,IAAKA,EAAS,GAAIM,EAAc,IAAKA,EAAc,GACnF,IAAIC,GAAWN,EAAe,EAC1BO,EAAcpoE,KAAKwgE,cAAcM,EAAY93E,EAAOm/E,GACpDE,MAAkB,GAClBpuF,EAASsa,EAAKuW,SAAS5D,YAGnBmhE,GAFJroE,KAAK26D,QAAQttE,OAASyQ,qBAAmBtE,IACrCwG,KAAK6mE,SACa7mE,KAAKwgE,cAAc4H,EAAcp/E,EAAQ,GAAK,EAAI/O,GAGlD+lB,KAAKwgE,cAAc4H,EAAcp/E,EAAQ,GAAK/O,GAIhE+lB,KAAK6mE,SACa7mE,KAAKwgE,cAAc4H,EAAcp/E,EAAQ,GAAU/O,EAAS,EAAd,GAG9C+lB,KAAKwgE,cAAc4H,EAAcp/E,EAAQ,GAAM/O,EAAS,GAGlFogD,EAASG,mBAAmB6tC,EAAgB,IAAKA,EAAgB,IACjEhuC,EAAS+N,iBAAiBp/C,GACtBgX,KAAK26D,QAAQC,KACbvgC,EAAS0H,WAAW/hC,KAAK5S,KAAMmH,IAAS4W,EAAY,EAAI,EAAG,EAAG,GAAI,KAAMsiD,EAAUmB,WAEtFv0B,EAASK,SACT,IAAIzhC,GAAS+G,KAAKknE,oBACdE,EAAkB1jF,GAAiBhB,EAAGuW,EAAO,GAAItW,EAAGsW,EAAO,GAAIrW,MAAOqW,EAAO,GAAIhf,OAAQgf,EAAO,IACpG+G,MAAK/G,QAAWvW,EAAG0kF,EAAgB,GAAIzkF,EAAGykF,EAAgB,GAAIxkF,MAAOwkF,EAAgB,GAAIntF,OAAQmtF,EAAgB,IAC3GpnE,KAAKy8D,SAAcz8D,KAAK1U,YAAYtJ,IAAI,YAC1Cge,KAAK1U,YAAY9C,OAAO,QAAS4+E,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,KAGrH,MAAOj8E,IAEXwK,EAAkB3B,UAAU+1E,UAAY,SAAU1vC,EAAU6C,EAAKrkD,EAAOC,EAAKyE,EAAOC,OACvD,KAAdwiB,KAAK5S,MACG,KAAf4S,KAAK+M,OACL/M,KAAK26D,QAAQttE,OAASyQ,qBAAmBtE,MACvCwG,KAAK26D,QAAQC,KAAO56D,KAAK26D,QAAQttE,OAASyQ,qBAAmB48D,OAC/DrgC,EAASgN,SAASnK,EAAKrkD,EAAM,IAAKA,EAAM,GAAIC,EAAI,IAAKA,EAAI,KAGzDuhD,EAASgN,SAASnK,EAAKrkD,EAAM,IAAKA,EAAM,GAAI0E,EAAM,IAAKA,EAAM,IAC7D88C,EAASgN,SAASnK,EAAKpkD,EAAI,IAAKA,EAAI,GAAI0E,EAAO,IAAKA,EAAO,MAGnEmY,EAAkB3B,UAAUuzE,eAAiB,WAIzC,IAAK,GAHD99E,GAASuW,KAAKynE,oBACd7kE,EAAO,GAAI3iB,OAAMwJ,EAAO1Q,OAAS,GACjCkQ,EAAQ,EACH9P,EAAI,EAAGA,EAAIsQ,EAAO1Q,OAAQI,GAAQ,EACvCypB,EAAKxpB,OAAOC,SAAS4P,EAAM3P,WAAY,MAAQmQ,EAAOrQ,OAAOC,SAASF,EAAEG,WAAY,KAAOmQ,EAAOtQ,EAAI,IACtG8P,GAEJ,IAAIy2D,GAAWrnE,KAAKqlF,KAAKrlF,KAAKC,IAAKsqB,EAAK,GAAG,GAAKA,EAAK,GAAG,GAAK,GAAKvqB,KAAKC,IAAKsqB,EAAK,GAAG,GAAKA,EAAK,GAAG,GAAK,IAClGzqB,EAAQ6nB,KAAKohE,yBAAyBphE,KAAKpT,KAAMoT,KAAK2lE,YAE1D,OADA3lE,MAAK2lE,YAAcxtF,EAAMwU,YAClB,GAAKkuC,KAAqBE,cAAc2kB,EAAU9xD,mBAAiBV,MAAO/U,EAAMmpF,eAE3F3rE,EAAkB3B,UAAUyzE,kBAAoB,WAC5C,GAAIh+E,KACJ,IAAIuW,KAAKw3B,WACL,IAAK,GAAIt+C,GAAI,EAAGA,EAAI8mB,KAAK6lE,YAAY9sF,OAAQG,IACzCuQ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAK6lE,YAAYzsF,OAAOC,SAASH,EAAEI,WAAY,IAGnG,OAAOmQ,IAEJkM,GACT4vE,IAiBEyE,GAAqC,SAAUniE,GAE/C,QAASmiE,GAAoBtnF,EAAGC,EAAGC,EAAO3I,GACtC,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAWjC,OAVA+H,GAAM29D,MAAQ74E,qBAAmBC,WACjCib,EAAMkiE,aAAehsE,2BAAyBmjC,SAC9Cr5B,EAAM49D,YAAc,GACpB59D,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,eAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmBizE,iBAC1BniE,EAqYX,MAlZA9B,IAAU+jE,EAAqBniE,GAe/B9T,OAAO+H,eAAekuE,EAAoBh2E,UAAW,WAkBjD7R,IAAK,WAID,WAH6B,KAAlB6d,KAAK6mE,UAA4B7mE,KAAK1U,YAAYtJ,IAAI,aAC7Dge,KAAK6mE,SAAW7mE,KAAK1U,YAAYnJ,IAAI,YAElC6d,KAAK6mE,UAmBhBpmF,IAAK,SAAUtI,GACPA,IACK6nB,KAAKpK,YACNoK,KAAK6mE,SAAW1uF,KAI5B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAekuE,EAAoBh2E,UAAW,QAkBjD7R,IAAK,WACD,QAA0B,KAAf6d,KAAK0lE,OAAyB1lE,KAAKpK,aAC1CoK,KAAK0lE,MAAQ74E,qBAAmBC,WAC5BkT,KAAK1U,YAAYtJ,IAAI,aAAa,CAClC,GAAIoL,GAAO4S,KAAK1U,YAAYnJ,IAAI,WAChC6d,MAAK2lE,YAAcv4E,EAAKlO,UAAUkO,EAAKrU,OAAS,GAChDinB,KAAK0lE,MAAQh5E,GAAoBsT,KAAK2lE,aAG9C,MAAO3lE,MAAK0lE,OAmBhBjlF,IAAK,SAAUtI,GACP6nB,KAAK6mE,WACA7mE,KAAKpK,eAA8B,KAAVzd,IAC1B6nB,KAAK0lE,MAAQvtF,KAIzB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAekuE,EAAoBh2E,UAAW,eAkBjD7R,IAAK,WACD,GAAI6d,KAAK1U,YAAYtJ,IAAI,YAAa,CAClC,GAAIoL,GAAO4S,KAAK1U,YAAYnJ,IAAI,WAChC6d,MAAK2lE,YAAcv4E,EAAKlO,UAAUkO,EAAKrU,OAAS,GAChDinB,KAAK0lE,MAAQh5E,GAAoBsT,KAAK2lE,YACtC,IAAIxtF,GAAQiV,EAAKlO,UAAU,EAAGkO,EAAKrU,OAAS,IAC5B,GAAI8hD,KACGE,cAAc/6B,KAAK/G,OAAOrW,MAAQ,EAAGgL,mBAAiBV,MAAOS,GAAiBqS,KAAK2lE,cAC/FrsF,aAAenB,EACtB6nB,KAAKiqE,aAAehsE,2BAAyBkjC,OAG7CnhC,KAAKiqE,aAAehsE,2BAAyBmjC,SAGrD,MAAOphC,MAAKiqE,cAmBhBxpF,IAAK,SAAUtI,GACP6nB,KAAK6mE,WACA7mE,KAAKpK,eAA8B,KAAVzd,IAC1B6nB,KAAKiqE,aAAe9xF,KAIhC4jB,YAAY,EACZC,cAAc,IAElBguE,EAAoBvd,MAAQ,SAAUzyE,EAAMuH,GACxC,GAAIi3E,GAAQ,GAAIwR,EAGhB,OAFAxR,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXwR,EAAoBh2E,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACxDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDyoF,EAAoBh2E,UAAUg+D,aAAe,SAAUD,GACnD,OAA2B,KAAhB/xD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,GAE1Bye,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,OAEJ,KAAhBnL,IACPA,EAAc,GAEd7tD,KAAK6mE,SACL7mE,KAAK8mE,oBAAsB9mE,KAAKmqE,+BAA+BpY,IAG/D/xD,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAC1CA,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAKq/D,6BAI5C2K,EAAoBh2E,UAAU89D,eAAiB,SAAUC,GAErD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,WASL,IARIoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SACvDge,KAAK1U,YAAYtJ,IAAI,WACrBge,KAAK8mE,oBAAsB9mE,KAAKmqE,+BAA+BpY,GAG/D/xD,KAAK8mE,oBAAsB9mE,KAAKq/D,4BAGnCr/D,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAO9E,IADAsU,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBAAuB/U,EAC7B,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAmB,OAAfZ,OAA6C,KAAfA,GAA8BA,EAAWS,IAAI,KAAM,CACjF,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAKq/D,yBAyB5C,QARkC,KAAvBr/D,KAAKqnE,eAAiCrnE,KAAKqnE,eAAiBtV,IAC/D/xD,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpFye,MAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAErDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAElC,KAAK+xD,GAAa/xD,KAAK2sD,iBAAmB3sD,KAAKy8D,QAAS,CACpD,GAAI5xE,OAAa,EACjB,IAAImV,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACD,GAAIioF,GAAcpqE,KAAKtU,gBAAgB00C,mBACvCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAI2pF,EAAav/E,GAChDmV,KAAK1U,YAAY9C,OAAO,KAAM4hF,GAElCt3E,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IACxDxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEjB,EAAWrC,OAAO,IAAK0B,KAG/B8/E,EAAoBh2E,UAAUm2E,+BAAiC,SAAU7C,GACrE,GAAIzZ,GAAc7tD,KAAKuqD,OAAO3nE,MAC1B2R,EAAOyL,KAAKu2D,mBACK,KAAThiE,GAAiC,OAATA,IAAoByL,KAAKpK,WAA2B,IAAdrB,EAAK9Z,QAC3E8Z,EAAOyL,KAAKxK,mBACZwK,KAAKiwD,SAAW17D,EAEpB,IAAIkrD,GAAOz/C,KAAKunE,iBACZ1gE,EAAS,GAAI/B,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAC3E/a,EAAMq3B,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,YACnC0E,EAAW91E,EAAKu7B,cAAc1H,GAAM,EAAG,GAAIvhB,EAAQ,EAAG,GACtD7iB,EAAQgc,KAAKhc,MAAQgc,KAAKhc,OAAS,EAAG,EAAG,GACzC4pE,EAAY,GAAI/qB,IAAO7+C,EAAO6pE,GAC9BoR,GAAmBj/D,KAAK/G,OAAOvW,EAC9Bsd,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,OAC7B+lB,KAAK/G,OAAOrW,MACZod,KAAK/G,OAAOhf,OAChBglF,GAAgB,GAAKA,EAAgB,GAAKA,EAAgB,EAC1D,IAAI9zE,GAAW,GAAIM,IAAYwzE,EAAiBj/D,KAAKtU,iBACjD+hE,EAAY,GAAI0E,GACpBhnE,GAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWlvC,EAASkvC,SACpBz3C,EAAQirE,EAAc,CAC1BJ,GAAUG,UAAYA,EAClB5tD,KAAKg6D,aACLvM,EAAUC,UAAY,GAAI5qB,IAAS9iC,KAAK+5D,cAE5CtM,EAAUmB,UAAY,GAAI9rB,IAAS9+C,EACnC,IAAIZ,IAAQ67E,EAAgB,IACvBA,EAAgB,GAAKA,EAAgB,GACtCA,EAAgB,GAChBA,EAAgB,GAGpB,IAFA5kC,EAASE,OACTF,EAASqD,YAAYt6C,EAAK,GAAKR,EAAOQ,EAAK,GAAKR,EAAOQ,EAAK,GAAKyqE,EAAazqE,EAAK,GAAKyqE,EAAa,GAAIhrB,IAAO7+C,EAAOgc,KAAKuqD,OAAO3nE,QAC/Hod,KAAKiqE,eAAiBhsE,2BAAyBmjC,SAAU,CACzD/G,EAASE,OACTF,EAASG,mBAAmBykC,EAAgB,IAAKA,EAAgB,GAC7Dv8E,GAAKu8E,EAAgB,GAAK,EAAMoL,EAAS,GAAK,CAClDhwC,GAASgN,SAASomB,EAAUG,UAAW,GAAIqR,EAAgB,GAAK,EAAGA,EAAgB,GAAKA,EAAgB,IAAKA,EAAgB,GAAK,GAClI5kC,EAASG,mBAAmB93C,GAAKu8E,EAAgB,GAAK,EAAK1qE,EAAKuW,SAAS5D,cACzEmzB,EAAS0H,WAAW0d,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,YAAapxE,GAAO,EAAG,EAAG,EAAG,GAAI,KAAMk5D,EAAUmB,WAClGv0B,EAASK,cAER,CACDL,EAASE,OACTF,EAASG,mBAAmBykC,EAAgB,IAAKA,EAAgB,GACjE,IAAIv8E,GAAKu8E,EAAgB,GAAK,GAAOA,EAAgB,GAAK,EAAMoL,EAAS,GAAK,EAC9EhwC,GAASgN,SAASomB,EAAUG,UAAWqR,EAAgB,GAAK,GAAIA,EAAgB,GAAK,EAAGA,EAAgB,GAAKA,EAAgB,IAAKA,EAAgB,GAAK,GACvJ5kC,EAASG,mBAAmB93C,GAAKu8E,EAAgB,GAAK,EAAK1qE,EAAKuW,SAAS5D,cACzEmzB,EAAS0H,WAAW0d,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,YAAapxE,GAAO,EAAG,EAAG,EAAG,GAAI,KAAMk5D,EAAUmB,WAClGv0B,EAASK,UAGb,GADAL,EAASK,cACkB,KAAf4sC,IAA+BA,IAAgBtnE,KAAKpK,UAAW,CACnEoK,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAI88E,GAAM,GAAI1mF,GACdu4C,GAASmB,UAAU1vC,SAASvK,WAAWgR,UAAW,CAClD,IAAInI,GAAM4V,KAAKtU,gBAAgB00C,mBAC/BpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI2J,EAAKiwC,EAASmB,UAAU1vC,UAC3DuuC,EAASmB,UAAU1vC,SAAS5B,UAAYE,EACxCo+E,EAAI/nF,IAAI,IAAK2J,GACbo+E,EAAIj2E,UAAW,EACfyN,KAAK1U,YAAY7K,IAAI,KAAM+nF,GAC3BxoE,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,OAC1CA,KAAK1U,YAAYtJ,IAAI,YACrB8Q,GAA0BkN,KAAK1U,YAAa0U,KAAKtU,gBAAiB,UAEtE,IAAIk0D,GAAoB5/C,KAAKuhE,yBAAyBvhE,KAAK2lE,aACvDz7E,EAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW01D,GAC9CA,EAAkBrtD,UAAW,EAC7ByN,KAAK1U,YAAY9C,OAAO,UAAW0B,GACnC8V,KAAK1U,YAAY9C,OAAO,UAAW,GAAIlD,IAAS,WAC5C0a,KAAK+M,OAAwB,KAAf/M,KAAK+M,MACnB/M,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAK+M,MAAQ,IAAM0yC,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,aAGpF3lE,KAAK1U,YAAY9C,OAAO,WAAYi3D,EAAK9hE,QAAQ,GAAK,IAAMqiB,KAAK2lE,YAErE,IAAI4C,GAAK,QACLh0E,EAAKuW,SAASgP,gBACd,IACAvlB,EAAK8S,MACL,aACArH,KAAKwhE,YAAYxhE,KAAKhc,MAC1Bgc,MAAK1U,YAAY9C,OAAO,KAAM+/E,GAElC,MAAOp9E,IAEX6+E,EAAoBh2E,UAAUuzE,eAAiB,WAC3C,GAAI+C,GAAY,GAAIzvC,IAChB1iD,EAAQ6nB,KAAKohE,yBAAyBphE,KAAKpT,KAAMoT,KAAK2lE,YAC1D3lE,MAAK2lE,YAAcxtF,EAAMwU,UACzB,IAAIw0C,GAASmpC,EAAUvvC,cAAc/6B,KAAK/G,OAAOrW,MAAQ,EAAGgL,mBAAiBV,MAAO/U,EAAMmpF,aAI1F,OAHIthE,MAAKiqE,eAAiBhsE,2BAAyBmjC,WAC/CD,GAAS,GAENA,GAEJ6oC,GACTzE,IAiBEgF,GAAsC,SAAU1iE,GAEhD,QAAS0iE,GAAqB7nF,EAAGC,EAAGC,EAAO3I,GACvC,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAQjC,OAPA+H,GAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,eAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmBuzE,kBAC1BziE,EA6GX,MAvHA9B,IAAUskE,EAAsB1iE,GAYhC0iE,EAAqB9d,MAAQ,SAAUzyE,EAAMuH,GACzC,GAAIi3E,GAAQ,GAAI+R,EAGhB,OAFA/R,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX+R,EAAqBv2E,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACzDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDgpF,EAAqBv2E,UAAUg+D,aAAe,SAAUD,GACpD,OAA2B,KAAhB/xD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,GAE1Bye,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,OAEJ,KAAhBnL,IACPA,EAAc,IAEd7tD,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAKq/D,2BAEpCr/D,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAElDuqE,EAAqBv2E,UAAU89D,eAAiB,SAAUC,GAEtD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,WAIL,IAHIoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAKq/D,4BAE/Br/D,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAO9E,IADAsU,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBAAuB/U,EAC7B,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAKq/D,yBAyB5C,QARkC,KAAvBr/D,KAAKqnE,eAAiCrnE,KAAKqnE,gBAC9CrnE,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpFye,MAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAErDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAElC,KAAK+xD,GAAa/xD,KAAK2sD,eAAgB,CACnC,GAAI9hE,OAAa,EACjB,IAAImV,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACD,GAAIsoF,GAAczqE,KAAKtU,gBAAgB00C,mBACvCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIgqF,EAAa5/E,GAChDmV,KAAK1U,YAAY9C,OAAO,KAAMiiF,GAElC33E,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IACxDxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEjB,EAAWrC,OAAO,IAAK0B,KAGxBqgF,GACThF,IAiBEmF,GAAqC,SAAU7iE,GAE/C,QAAS6iE,GAAoBhoF,EAAGC,EAAGC,EAAO3I,GACtC,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IASjC,OARA+H,GAAM29D,MAAQ74E,qBAAmBC,WACjCib,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,eAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmB0zE,iBAC1B5iE,EA0aX,MArbA9B,IAAUykE,EAAqB7iE,GAa/B9T,OAAO+H,eAAe4uE,EAAoB12E,UAAW,gBAkBjD7R,IAAK,WACD,OAAkC,KAAvB6d,KAAK4qE,cAA+B,CAC3C,GAAIzyF,GAAQ,GAAI0yF,GAEhB,IADA1yF,EAAMmT,YAAc0U,KAAK1U,YACrB0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtChK,GAAM2yF,WAAavpF,EAAWY,IAAI,KAClChK,EAAMk3C,OAAS9pC,EAAsBhE,EAAWY,IAAI,KAAKgG,MAE7D6X,KAAK4qE,cAAgBzyF,EAEzB,MAAO6nB,MAAK4qE,eAqBhBnqF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAK4qE,cAAgBzyF,IAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4uE,EAAoB12E,UAAW,WAkBjD7R,IAAK,WAID,WAH6B,KAAlB6d,KAAK6mE,UAA4B7mE,KAAK1U,YAAYtJ,IAAI,aAC7Dge,KAAK6mE,SAAW7mE,KAAK1U,YAAYnJ,IAAI,YAElC6d,KAAK6mE,UAmBhBpmF,IAAK,SAAUtI,OACU,KAAVA,IACF6nB,KAAKpK,YACNoK,KAAK6mE,SAAW1uF,KAI5B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4uE,EAAoB12E,UAAW,QAkBjD7R,IAAK,WACD,OAA0B,KAAf6d,KAAK0lE,QACZ1lE,KAAK0lE,MAAQ74E,qBAAmBC,WAC5BkT,KAAK1U,YAAYtJ,IAAI,aAAa,CAClC,GAAIoL,GAAO4S,KAAK1U,YAAYnJ,IAAI,WAChC6d,MAAK2lE,YAAcv4E,EAAKlO,UAAUkO,EAAKrU,OAAS,GAChDinB,KAAK0lE,MAAQh5E,GAAoBsT,KAAK2lE,aAG9C,MAAO3lE,MAAK0lE,OAmBhBjlF,IAAK,SAAUtI,GACP6nB,KAAK6mE,WACA7mE,KAAKpK,eAA8B,KAAVzd,IAC1B6nB,KAAK0lE,MAAQvtF,KAIzB4jB,YAAY,EACZC,cAAc,IAElB0uE,EAAoBje,MAAQ,SAAUzyE,EAAMuH,GACxC,GAAIi3E,GAAQ,GAAIkS,EAGhB,OAFAlS,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXkS,EAAoB12E,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACxDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDmpF,EAAoB12E,UAAUg+D,aAAe,SAAUD,GACnD,OAA2B,KAAhB/xD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EAgBJ,IAfI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,QAGtBrB,EAAa,GAAIO,IAAeke,KAAKtU,kBAC9BjL,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,IAE1Bye,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,OAEJ,KAAhBnL,IACPA,EAAc,GAEd7tD,KAAK6mE,SACL7mE,KAAK8mE,oBAAsB9mE,KAAK+qE,+BAA+BhZ,OAO/D,KAJI/xD,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAK6+D,2BAA2B7+D,KAAKs2C,eAEpEt2C,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,WACf,KAApBA,KAAK8qE,gBACkB,KAAvB9qE,KAAK4qE,eACZ5qE,KAAK4qE,cAAc9lF,QAAUU,uBAAqBE,OAAQ,CAC1D,GAAInE,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,IAAKuf,KAAKs2C,aAAaw0B,YAClC9qE,KAAKs2C,aAAajnB,SAAW7pC,uBAAqBE,QAClDnE,EAAWd,IAAI,IAAK6E,GAASnD,IAAI,MAErC6d,KAAK1U,YAAY9C,OAAO,KAAMjH,KAI1CmpF,EAAoB12E,UAAU89D,eAAiB,SAAUC,GAErD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,WASL,IARIoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SACvDge,KAAK1U,YAAYtJ,IAAI,WACrBge,KAAK8mE,oBAAsB9mE,KAAK+qE,+BAA+BhZ,GAG/D/xD,KAAK8mE,oBAAsB9mE,KAAK6+D,2BAA2B7+D,KAAKs2C,gBAGnEt2C,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAO9E,IADAsU,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBAAuB/U,EAC7B,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAK6+D,2BAA2B7+D,KAAKs2C,aAyB5E,QARkC,KAAvBt2C,KAAKqnE,eAAiCrnE,KAAKqnE,gBAAkBrnE,KAAKy8D,UACrEz8D,KAAKpK,YAAcoK,KAAK1U,YAAYtJ,IAAI,WACxCge,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpFye,MAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAErDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAElC,KAAK+xD,GAAa/xD,KAAK2sD,iBAAmB3sD,KAAKy8D,QAAS,CACpD,GAAI5xE,OAAa,EACjB,IAAImV,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACD,GAAI6oF,GAAchrE,KAAKtU,gBAAgB00C,mBACvCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIuqF,EAAangF,GAChDmV,KAAK1U,YAAY9C,OAAO,KAAMwiF,GAElCl4E,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IACxDxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEjB,EAAWrC,OAAO,IAAK0B,KAG/BwgF,EAAoB12E,UAAU+2E,+BAAiC,SAAUzD,GACrE,GAAIzZ,GAAc7tD,KAAKuqD,OAAO3nE,MAC1B2R,EAAOyL,KAAKu2D,mBACK,KAAThiE,GAAiC,OAATA,IAAoByL,KAAKpK,WAA2B,IAAdrB,EAAK9Z,QAC3E8Z,EAAOyL,KAAKxK,mBACZwK,KAAKiwD,SAAW17D,EAEpB,IAKIm5D,GALAjO,EAAOz/C,KAAKirE,yBACZpkE,EAAS,GAAI/B,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAC3E/a,EAAMq3B,EAAK9hE,QAAQ,GAAK,OAASqiB,KAAK2lE,YACtC0E,EAAW91E,EAAKu7B,cAAc1H,GAAM,EAAG,GAAIvhB,EAAQ,EAAG,GACtD+mD,EAAY,GAAI/qB,IAAO7iC,KAAKhc,MAAO6pE,EAEnC7tD,MAAKg6D,aACLtM,EAAY,GAAI5qB,IAAS9iC,KAAK+5D,aAElC,IAAIkF,IAAmBj/D,KAAK/G,OAAOvW,EAC9Bsd,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,OAC7B+lB,KAAK/G,OAAOrW,MACZod,KAAK/G,OAAOhf,QACZixF,GAAoBlrE,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAGqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QACjF4Q,EAAa,GAAI0tE,IAAcv4D,KAAMkrE,EACzCjM,GAAgB,GAAKA,EAAgB,GAAKA,EAAgB,GAC1Dp0E,EAAW3C,OAAS,GAAIuD,IAAYwzE,EAAiBj/D,KAAKtU,gBAC1D,IAAIP,GAAWN,EAAW3C,OACtBulE,EAAY,GAAI0E,GACpBhnE,GAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWxvC,EAAW3C,OAAOmyC,SAC7Bz3C,EAAQirE,EAAc,CAC1BJ,GAAUG,UAAYA,EACtBH,EAAUC,UAAYA,EACtBD,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAKhc,MACxC,IAAIZ,IAAQ67E,EAAgB,IACvBA,EAAgB,GAAKA,EAAgB,GACtCA,EAAgB,GAChBA,EAAgB,GACpB5kC,GAASyC,cAAc15C,EAAK,GAAKR,EAAOQ,EAAK,GAAKR,EAAOQ,EAAK,GAAKyqE,EAAazqE,EAAK,GAAKyqE,EAAa,GAAIhrB,IAAO7iC,KAAKhc,MAAOgc,KAAKuqD,OAAO3nE,QAC1Iy3C,EAASE,OACTF,EAASG,mBAAmBykC,EAAgB,IAAKA,EAAgB,GACjE,IAAIv8E,GAAKu8E,EAAgB,GAAK,EAAMoL,EAAS,GAAK,EAC9C1nF,EAAKs8E,EAAgB,GAAK,EAAMoL,EAAS,GAAK,CAIlD,IAHAhwC,EAASG,mBAAmB93C,GAAIC,EAAI4R,EAAKuW,SAAS5D,cAClDmzB,EAAS0H,WAAY0d,EAAK9hE,QAAQ,GAAK,OAASqiB,KAAK2lE,YAAcpxE,GAAO,EAAG,EAAG,EAAG,GAAI,KAAMk5D,EAAUmB,WACvGv0B,EAASK,cACkB,KAAf4sC,IAA+BA,IAAgBtnE,KAAKpK,UAAW,CACnEoK,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAI88E,GAAM,GAAI1mF,IACVqpF,EAAM9wC,EAASmB,UAAU1vC,QAC7Bq/E,GAAI5pF,WAAWgR,UAAW,CAC1B,IAAInI,GAAM4V,KAAKtU,gBAAgB00C,mBAC/BpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI2J,EAAK+gF,GACxC9wC,EAASmB,UAAU1vC,SAAS5B,UAAYE,EACxCo+E,EAAI/nF,IAAI,IAAK2J,GACbo+E,EAAIj2E,UAAW,EACfyN,KAAK1U,YAAY7K,IAAI,KAAM+nF,EAC3B,IAAIF,IAAoBtoE,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAGqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QACjFQ,EAAOulB,KAAK7G,MAAM1e,IACtB6tF,GAAiB,GAAK7tF,EAAK,IAAMulB,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,QAC7DquF,EAAiB,GAAMtoE,KAAK/G,OAAOvW,EAAIsd,KAAK/G,OAAOrW,MACnD0lF,EAAiB,GAAK7tF,EAAK,GAAKulB,KAAK/G,OAAOtW,EACxCqd,KAAKq6D,YACL4E,EAAkBqJ,GAElBtoE,KAAK7G,MAAMlG,QAAU+M,KAAK7G,MAAMC,gBAChCkvE,EAAmBtvE,GAAcgH,OAErCA,KAAK1U,YAAY9C,OAAO,QAAS8/E,EAAiB,GAAIA,EAAiB,GAAIA,EAAiB,GAAIA,EAAiB,KAC7GtoE,KAAK1U,YAAYtJ,IAAI,YACrB8Q,GAA0BkN,KAAK1U,YAAa0U,KAAKtU,gBAAiB,UAEtE,IAAIxB,GAAY8V,KAAKtU,gBAAgB00C,oBACjCwf,EAAoB5/C,KAAKuhE,yBAAyBvhE,KAAK2lE,YAC3D3lE,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW01D,GAC9CA,EAAkBrtD,UAAW,EAC7ByN,KAAK1U,YAAY9C,OAAO,UAAW0B,EACnC,IAAIq+E,GAAK,QACLh0E,EAAKuW,SAASgP,gBACd,IACAvlB,EAAK8S,MACL,aACArH,KAAKwhE,YAAYxhE,KAAKhc,MAC1Bgc,MAAK1U,YAAY9C,OAAO,KAAM+/E,GAC1BvoE,KAAK+M,OAAwB,KAAf/M,KAAK+M,MACnB/M,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAK+M,MAAQ,IAAM0yC,EAAK9hE,QAAQ,GAAK,OAASqiB,KAAK2lE,aAGvF3lE,KAAK1U,YAAY9C,OAAO,WAAYi3D,EAAK9hE,QAAQ,GAAK,OAASqiB,KAAK2lE,aAExE3lE,KAAK1U,YAAY9C,OAAO,kCACI,KAAjBwX,KAAK+6D,SACZ/6D,KAAK1U,YAAY9C,OAAO,8BAE5BwX,KAAK1U,YAAY9C,OAAO,mBAAoB,KAC5CwX,KAAK1U,YAAY9C,OAAO,UAAW,GAAIlD,IAAS,WAChD0a,KAAK1U,YAAY9C,OAAO,KAAM,GAAIlD,IAAS,mBAC3C,IAAIzC,GAAWmd,KAAK1U,YAAYpJ,SAAS,QACrCk1D,EAAW,GAAIn3D,OAAwB,EAAlB4C,EAAS9J,OAClCq+D,GAAS,GAAKv0D,EAAS,GACvBu0D,EAAS,GAAKv0D,EAAS,GACvBu0D,EAAS,GAAKv0D,EAAS,GACvBu0D,EAAS,GAAKv0D,EAAS,GACvBu0D,EAAS,GAAKv0D,EAAS,GACvBu0D,EAAS,GAAKv0D,EAAS,GACvBu0D,EAAS,GAAKv0D,EAAS,GACvBu0D,EAAS,GAAKv0D,EAAS,GACvBmd,KAAK1U,YAAY9C,OAAO,WAAY4uD,GAExC,MAAOjsD,IAEXu/E,EAAoB12E,UAAUi3E,uBAAyB,WACnD,GAAIxrB,GAEAtnE,EADAmyF,EAAY,GAAIzvC,GAEpB,IAAI76B,KAAK/G,OAAOrW,QAAUod,KAAK/G,OAAOhf,OAClC9B,EAAQ6nB,KAAKohE,yBAAyBphE,KAAKpT,KAAMoT,KAAK2lE,aACtD3lE,KAAK2lE,YAAcxtF,EAAMwU,WAEzB8yD,GADI78D,EAAQ0nF,EAAUvvC,cAAc/6B,KAAK/G,OAAOrW,MAAOgL,mBAAiBV,MAAO/U,EAAMmpF,eACtE1+E,MAEd,CACDzK,EAAQ6nB,KAAKohE,yBAAyBphE,KAAKpT,KAAMoT,KAAK2lE,aACtD3lE,KAAK2lE,YAAcxtF,EAAMwU,UACzB,IAAI/J,GAAQ0nF,EAAUvvC,cAAc/6B,KAAK/G,OAAOrW,MAAOgL,mBAAiBV,MAAO/U,EAAMmpF,aACrFnpF,GAAQ6nB,KAAKohE,yBAAyBphE,KAAKpT,KAAMoT,KAAK2lE,aACtD3lE,KAAK2lE,YAAcxtF,EAAMwU,WAEzB8yD,EAAO78D,EADM0nF,EAAUvvC,cAAc/6B,KAAK/G,OAAOhf,OAAQ2T,mBAAiBV,MAAO/U,EAAMmpF,cAG3F,MAAO7hB,IAEJirB,GACTnF,IAiBE6F,GAAwC,SAAUvjE,GAElD,QAASujE,GAAuB1oF,EAAGC,EAAGC,EAAO3I,GACzC,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAQjC,OAPA+H,GAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,eAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmBo0E,oBAC1BtjE,EAyNX,MAnOA9B,IAAUmlE,EAAwBvjE,GAYlC9T,OAAO+H,eAAesvE,EAAuBp3E,UAAW,gBAkBpD7R,IAAK,WACD,OAAkC,KAAvB6d,KAAK4qE,cAA+B,CAC3C,GAAIzyF,GAAQ,GAAI0yF,GAEhB,IADA1yF,EAAMmT,YAAc0U,KAAK1U,YACrB0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtChK,GAAM2yF,WAAavpF,EAAWY,IAAI,KAClChK,EAAMk3C,OAAS9pC,EAAsBhE,EAAWY,IAAI,KAAKgG,MAE7D6X,KAAK4qE,cAAgBzyF,EAEzB,MAAO6nB,MAAK4qE,eAqBhBnqF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAK4qE,cAAgBzyF,IAG7B4jB,YAAY,EACZC,cAAc,IAElBovE,EAAuB3e,MAAQ,SAAUzyE,EAAMuH,GAC3C,GAAIi3E,GAAQ,GAAI4S,EAGhB,OAFA5S,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX4S,EAAuBp3E,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC3DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD6pF,EAAuBp3E,UAAUg+D,aAAe,SAAUD,GACtD,OAA2B,KAAhB/xD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EAoBJ,IAnBI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,QAGtB4lF,EAAM,GAAI1mF,IAAeke,KAAKtU,kBAC9BjL,IAAI,OAAQ6E,GAASnD,IAAI,WAC7B6d,KAAK1U,YAAY7K,IAAI,KAAM+nF,IAE1BxoE,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,OAEJ,KAAhBnL,IACPA,EAAc,GAElB7tD,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAC1CA,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAK6+D,2BAA2B7+D,KAAKs2C,mBAErC,KAApBt2C,KAAK8qE,gBACkB,KAAvB9qE,KAAK4qE,eACZ5qE,KAAK4qE,cAAc9lF,QAAUU,uBAAqBE,OAAQ,CAC1D,GAAI8iF,GAAM,GAAI1mF,IAAeke,KAAKtU,gBAClC88E,GAAI/nF,IAAI,IAAKuf,KAAKs2C,aAAaw0B,YAC3B9qE,KAAKs2C,aAAajnB,SAAW7pC,uBAAqBE,QAClD8iF,EAAI/nF,IAAI,IAAK6E,GAASnD,IAAI,MAE9B6d,KAAK1U,YAAY9C,OAAO,KAAMggF,KAGtC4C,EAAuBp3E,UAAU89D,eAAiB,SAAUC,GAExD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,WAIL,IAHIoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAK6+D,2BAA2B7+D,KAAKs2C,gBAE/Dt2C,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAO9E,IADAsU,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBAAuB/U,EAC7B,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAK6+D,2BAA2B7+D,KAAKs2C,aAyB5E,QARkC,KAAvBt2C,KAAKqnE,eAAiCrnE,KAAKqnE,gBAC9CrnE,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,aAChFg7E,GAAkBv8D,KAAK7G,OAAS6G,KAAK7G,MAAM/e,WAAaC,mBAAiBme,QACzEwH,KAAKsrE,uBAAuBtrE,KAAK8mE,oBAAoBh7E,SAASvK,WAAYye,KAAK/G,OAAQ+G,KAAK8mE,uBAC5F9mE,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAGzDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAElC,KAAK+xD,GAAa/xD,KAAK2sD,eAAgB,CACnC,GAAI9hE,OAAa,EACjB,IAAImV,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACD,GAAIopF,GAAcvrE,KAAKtU,gBAAgB00C,mBACvCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAI8qF,EAAa1gF,GAChDmV,KAAK1U,YAAY9C,OAAO,KAAM+iF,GAElCz4E,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IACxDxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEjB,EAAWrC,OAAO,IAAK0B,KAG/BkhF,EAAuBp3E,UAAUs3E,uBAAyB,SAAU/pF,EAAY0X,EAAQuyE,GACpF,GAAI1P,IAAgB,EAChB2P,EAASxyE,CACb,IAAI1X,GAAcA,EAAWS,IAAI,UAAW,CACxC,GAAI6J,GAAMtK,EAAWW,SAAS,QAC1B6J,EAASxK,EAAWW,SAAS,SACjC,IAAI6J,GAAUF,GAAOE,EAAOhT,OAAS,GAAK8S,EAAI9S,OAAS,OAC1B,KAAdgT,EAAO,QACO,KAAdA,EAAO,QACO,KAAdA,EAAO,QACO,KAAdA,EAAO,IACI,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,QAC1C,KAAXF,EAAI,QACO,KAAXA,EAAI,QACO,KAAXA,EAAI,QACO,KAAXA,EAAI,KACPxT,KAAKgM,MAAMwH,EAAI,MAAQxT,KAAKgM,OAAQ0H,EAAO,KAAQ1T,KAAKgM,MAAMwH,EAAI,MAAQxT,KAAKgM,OAAQ0H,EAAO,KACnF,IAAXF,EAAI,IAAyC,IAA7BxT,KAAKgM,OAAQ0H,EAAO,KAAY,CAChD,GAAIsuC,GAAWr6B,KAAK7G,MAAMkhC,SACtB7vC,EAAQ6vC,EAASE,WACO,KAAjBv6B,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASgO,gBAAgBroC,KAAK24D,UAElC8S,EAAO/oF,GAAKmJ,EAAI,GAChB4/E,EAAO9oF,GAAKkJ,EAAI,GAChBwuC,EAASqE,aAAa8sC,EAAoBC,GAC1CpxC,EAASK,QAAQlwC,GACjBwV,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,MAC9B87D,GAAgB,GAOxC,MAAOA,IAEJsP,GACT7F,IAiBEmG,GAAsC,SAAU7jE,GAEhD,QAAS6jE,GAAqBjiF,GAC1B,GAAIse,GAAQF,EAAO5T,KAAK+L,OAASA,IAQjC,OAPA+H,GAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,gBAC3B,KAAXsH,IACPse,EAAMyuB,QAAU/sC,GAEpBse,EAAM/Q,MAAQC,qBAAmB00E,kBAC1B5jE,EAicX,MA3cA9B,IAAUylE,EAAsB7jE,GAYhC9T,OAAO+H,eAAe4vE,EAAqB13E,UAAW,gBAkBlD7R,IAAK,WACD,OAAkC,KAAvB6d,KAAK4qE,cAA+B,CAC3C,GAAIzyF,GAAQ,GAAI0yF,GAEhB,IADA1yF,EAAMmT,YAAc0U,KAAK1U,YACrB0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtChK,GAAM2yF,WAAavpF,EAAWY,IAAI,KAClChK,EAAMk3C,OAAS9pC,EAAsBhE,EAAWY,IAAI,KAAKgG,MAE7D6X,KAAK4qE,cAAgBzyF,EAEzB,MAAO6nB,MAAK4qE,eAqBhBnqF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAK4qE,cAAgBzyF,IAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4vE,EAAqB13E,UAAW,iBAkBlD7R,IAAK,WACD,OAAmC,KAAxB6d,KAAK4rE,gBAAkC5rE,KAAK1U,YAAYtJ,IAAI,OAAQ,CAC3E,GAAI6pF,GAAU7rE,KAAK1U,YAAYnJ,IAAI,WACZ,KAAZ0pF,GAA2BA,GAAW,IAC7C7rE,KAAK4rE,eAAiBC,GAG9B,MAAO7rE,MAAK4rE,gBAqBhBnrF,IAAK,SAAUtI,GACX,IAAKiB,OAAOm3D,MAAMp4D,GAAQ,CACtB,KAAIA,GAAS,GAKT,KAAM,IAAI0B,OAAM,8CAJhBmmB,MAAK1U,YAAY9C,OAAO,MAAOrQ,GAC/B6nB,KAAK4rE,eAAiBzzF,IAOlC4jB,YAAY,EACZC,cAAc,IAGlB0vE,EAAqBjf,MAAQ,SAAUzyE,EAAMuH,GACzC,GAAIi3E,GAAQ,GAAIkT,EAGhB,OAFAlT,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXkT,EAAqB13E,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACzDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDmqF,EAAqB13E,UAAUg+D,aAAe,SAAUD,GACpD,OAA4B,KAAjB/xD,KAAKw2B,SAA4C,OAAjBx2B,KAAKw2B,QAC5C,KAAM,IAAI38C,OAAM,qCAEfmmB,MAAK1U,YAAYtJ,IAAI,SACtBge,KAAK8rE,cAAgB,GAEpB9rE,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,EAE/B,IAAInL,EACA7tD,MAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,QAGtB4lF,EAAM,GAAI1mF,IAAeke,KAAKtU,kBAC9BjL,IAAI,OAAQ6E,GAASnD,IAAI,WAC7B6d,KAAK1U,YAAY7K,IAAI,KAAM+nF,QAEJ,KAAhB3a,IACPA,EAAc,EAGlB,KAAK,GADD5uE,MACK/F,EAAI,EAAGA,EAAI8mB,KAAKw2B,QAAQz9C,OAAQG,IAAK,CAC1C,GAAIf,GAAQ6nB,KAAKw2B,QAAQp9C,OAAOC,SAASH,EAAEI,WAAY,IACvD2F,GAAM3D,KAAKnD,GAEf6nB,KAAKw2B,QAAUx2B,KAAK+kE,WAAW/kE,KAAKw2B,SAChCv3C,EAAM,KAAOA,EAAMA,EAAMlG,OAAS,IAAMkG,EAAM,KAAOA,EAAMA,EAAMlG,OAAS,KAC1EinB,KAAKw2B,QAAQl7C,KAAK0kB,KAAKw2B,QAAQ,IAC/Bx2B,KAAKw2B,QAAQl7C,KAAK0kB,KAAKw2B,QAAQ,IAEnC,IAAIu1C,GAAgB/rE,KAAK27D,gBAAgB37D,KAAKw2B,SAC1Cv9B,GAAU8yE,EAAcrpF,EACxBqpF,EAAcppF,EACdopF,EAAcrpF,EAAIqpF,EAAcnpF,MAChCmpF,EAAcppF,EAAIopF,EAAc9xF,OAOpC,IANA+lB,KAAK1U,YAAY9C,OAAO,OAAQyQ,GAChC+G,KAAK1U,YAAY9C,OAAO,MAAOwX,KAAK4rE,iBAChC5rE,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAKgsE,yBAAyBja,IAE7D/xD,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAKw2B,aACV,KAApBx2B,KAAK8qE,gBACkB,KAAvB9qE,KAAK4qE,eACZ5qE,KAAK4qE,cAAc9lF,QAAUU,uBAAqBE,OAAQ,CAC1D,GAAI8iF,GAAM,GAAI1mF,IAAeke,KAAKtU,gBAClC88E,GAAI/nF,IAAI,IAAKuf,KAAKs2C,aAAaw0B,YAC3B9qE,KAAKs2C,aAAajnB,SAAW7pC,uBAAqBE,QAClD8iF,EAAI/nF,IAAI,IAAK6E,GAASnD,IAAI,MAE9B6d,KAAK1U,YAAY9C,OAAO,KAAMggF,KAGtCkD,EAAqB13E,UAAU89D,eAAiB,SAAUC,GAGtD,OAFkB,KAAdA,IAAwBA,GAAY,GACxC/xD,KAAK+oD,SAAWgJ,EACZ/xD,KAAKpK,WAIL,IAHIoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAKgsE,yBAAyBja,KAExD/xD,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAO9E,IADAsU,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBAAuB/U,GACzB/xD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,mBAWtF,OALkC,KAAvBsU,KAAKqnE,eAAiCrnE,KAAKqnE,eAC9CrnE,KAAKpK,WACLoK,KAAKijE,sBAGTlR,EACA,GAAI/xD,KAAK8mE,oBAAqB,CAC1B,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpF,KAAKye,KAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,UAAW,CAC7D,GAAI6J,GAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,OAC5D2J,IAAOA,EAAI9S,QAAU,GACrBinB,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAGjGmU,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAG1Dv8D,MAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAGtC,KAAK+xD,GAAa/xD,KAAK2sD,eAAgB,CACnC,GAAI9hE,OAAa,EACjB,IAAImV,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACD,GAAI8pF,GAAcjsE,KAAKtU,gBAAgB00C,mBACvCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIwrF,EAAaphF,GAChDmV,KAAK1U,YAAY9C,OAAO,KAAMyjF,GAElCn5E,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IACxDxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEjB,EAAWrC,OAAO,IAAK0B,KAG/BwhF,EAAqB13E,UAAUg4E,yBAA2B,SAAUtP,GAChE,OAAuB,KAAZA,GAA2BA,EAAS,CAC3C,GAAI9O,OAAY,EACZ5tD,MAAKhc,OAASgc,KAAKuqD,OAAO3nE,MAAQ,IAClCgrE,EAAY,GAAI/qB,IAAO7iC,KAAKhc,MAAOgc,KAAKuqD,OAAO3nE,OAEnD,IAAIspF,OAAkB,EAClBlsE,MAAKg6D,aACLkS,EAAkB,GAAIppC,IAAS9iC,KAAKg6D,YAEpC3/B,GAAWr6B,KAAK7G,MAAMkhC,QAC1B,IAAIuzB,GAAase,EAAiB,CAC9B,GAAI1hF,OAAQ,EAKZ,QAJ4B,KAAjBwV,KAAK66D,SAA2B76D,KAAK24D,SAAW,IACvDnuE,EAAQ6vC,EAASE,OACjBF,EAASgO,gBAAgBroC,KAAK24D,WAEE,IAAhC34D,KAAKs2C,aAAasoB,WAAmB5+D,KAAKs2C,aAAaxxD,QAAUU,uBAAqBE,OAAQ,CAC1Fy7C,EAAuC,EAA9BnhC,KAAKs2C,aAAasoB,UAAgB,GAAM5+D,KAAKuqD,OAAO3nE,OAC7Du8E,EAAe,GAAI7oC,KACV+B,WAAWr4B,KAAKmsE,kBAC7BnsE,KAAKg9D,gBAAgB3iC,EAAU6xC,EAAiBte,EAAWzsB,EAAQ,KAAOg+B,EAAa3oC,SAAS,OAGhG6D,GAASoD,YAAYz9B,KAAKmsE,iBAAkBve,EAAWse,OAE/B,KAAjBlsE,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASK,QAAQlwC,GAGzB,MAAO6vC,GAASmB,UAGhB,GAAI4mC,OAAc,GACdh/E,GAASV,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAG3I,OAAQ,OACf,KAAjB+lB,KAAKw2B,SAA2Bx2B,KAAK1U,YAAYtJ,IAAI,aAC5Dge,KAAKw2B,QAAUx2B,KAAK1U,YAAYnJ,IAAI,YACpCigF,EAAcpiE,KAAK27D,gBAAgB37D,KAAKw2B,UAGxC4rC,EAAcpiE,KAAK27D,gBAAgB37D,KAAKw2B,aAEV,KAAvBx2B,KAAK4qE,mBAC2B,KAAhC5qE,KAAKs2C,aAAasoB,WAA6D,IAAhC5+D,KAAKs2C,aAAasoB,WACxE5+D,KAAK4qE,cAAc9lF,QAAUU,uBAAqBE,QAClDtC,EAAKV,EAAI0/E,EAAY1/E,EAAmC,EAA9Bsd,KAAKs2C,aAAasoB,UAAiB5+D,KAAKuqD,OAAO3nE,MACzEQ,EAAKT,EAAIy/E,EAAYz/E,EAAmC,EAA9Bqd,KAAKs2C,aAAasoB,UAAiB5+D,KAAKuqD,OAAO3nE,MACzEQ,EAAKR,MAAQw/E,EAAYx/E,MAAuC,GAA9Bod,KAAKs2C,aAAasoB,UAAmB,EAAI5+D,KAAKuqD,OAAO3nE,MACvFQ,EAAKnJ,OAASmoF,EAAYnoF,OAAwC,GAA9B+lB,KAAKs2C,aAAasoB,UAAmB,EAAI5+D,KAAKuqD,OAAO3nE,QAGzFQ,EAAKV,EAAI0/E,EAAY1/E,EAAIsd,KAAKuqD,OAAO3nE,MACrCQ,EAAKT,EAAIy/E,EAAYz/E,EAAIqd,KAAKuqD,OAAO3nE,MACrCQ,EAAKR,MAAQw/E,EAAYx/E,MAAS,EAAIod,KAAKuqD,OAAO3nE,MAClDQ,EAAKnJ,OAASmoF,EAAYnoF,OAAU,EAAI+lB,KAAKuqD,OAAO3nE,MAExD,IAAIiI,GAAa,GAAI0tE,IAAcv4D,MAAO5c,EAAKV,EAAGU,EAAKT,EAAGS,EAAKR,MAAOQ,EAAKnJ,QAC3E4Q,GAAW3C,OAAS,GAAIuD,KAAarI,EAAKV,EAAGU,EAAKT,EAAGS,EAAKR,MAAOQ,EAAKnJ,QAAS+lB,KAAKtU,gBACpF,IAAIP,GAAWN,EAAW3C,MAC1B0D,IAAWT,EAAU6U,KAAKi7D,qBAC1B9vE,EAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWxvC,EAAW3C,OAAOmyC,SAC7BozB,EAAY,GAAI0E,GAiBpB,IAhBInyD,KAAKg6D,aACLvM,EAAUC,UAAY,GAAI5qB,IAAS9iC,KAAK+5D,cAExC/5D,KAAKuqD,OAAO3nE,MAAQ,GAAKod,KAAKhc,QAC9BypE,EAAUG,UAAY,GAAI/qB,IAAO7iC,KAAK8hC,OAAQ9hC,KAAKuqD,OAAO3nE,QAE1Dod,KAAKhc,QACLypE,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAK8hC,aAEhB,KAAjB9hC,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASE,OACTF,EAASgO,gBAAgBroC,KAAK24D,WAG9Bt+B,EAASE,OAETl/B,GAAmB2E,KAAKs2C,eAAiBj7C,GAAmB2E,KAAKs2C,aAAasoB,YAC9C,IAAhC5+D,KAAKs2C,aAAasoB,WAAmB5+D,KAAKs2C,aAAaxxD,QAAUU,uBAAqBE,OAAQ,CAC9F,GAAIy7C,GAAuC,EAA9BnhC,KAAKs2C,aAAasoB,UAAgB,GAAM5+D,KAAKuqD,OAAO3nE,MAC7Du8E,EAAe,GAAI7oC,GACvB6oC,GAAa9mC,WAAWr4B,KAAKmsE,kBAC7BnsE,KAAKg9D,gBAAgB3iC,EAAUozB,EAAUC,UAAWD,EAAUG,UAAWzsB,EAAQ,KAAOg+B,EAAa3oC,SAAS,OAG9G6D,GAASoD,YAAYz9B,KAAKmsE,iBAAkB1e,EAAUG,UAAWH,EAAUC,UAY/E,YAV4B,KAAjB1tD,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASK,UAEbL,EAASK,UACL16B,KAAKq6D,YACLlvE,EAASW,SAASvK,WAAWgR,UAAW,EACxCyN,KAAK1U,YAAY9C,OAAO,MAAOwX,KAAK8rE,eACpC9rE,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAKw2B,UAE7Cx2B,KAAK1U,YAAY9C,OAAO,QAASpF,EAAKV,EAAGU,EAAKT,EAAGS,EAAKV,EAAIU,EAAKR,MAAOQ,EAAKT,EAAIS,EAAKnJ,SAC7EkR,GAGfugF,EAAqB13E,UAAUm4E,eAAiB,WAC5C,GAAInH,GACAoH,EAAWpsE,KAAK7G,MAAM1e,KACtBoJ,EAAauoF,EAAS,GACtBxoF,EAAYwoF,EAAS,EACzB,IAAIpsE,KAAK1U,YAAYtJ,IAAI,cAAgBge,KAAKq6D,UAAW,CACrD,GAAIjgF,OAAW,EACX4lB,MAAK7G,MAAMne,gBAAgBgH,IAAI,YAC/B5H,EAAW4lB,KAAK7G,MAAMne,gBAAgBmH,IAAI,WAE1C6d,KAAK7G,OAAS6G,KAAK7G,MAAM/e,WACrB4lB,KAAK7G,MAAM/e,WAAaC,mBAAiBC,QACzCF,EAAW,GAEN4lB,KAAK7G,MAAM/e,WAAaC,mBAAiBE,SAC9CH,EAAW,IAEN4lB,KAAK7G,MAAM/e,WAAaC,mBAAiBG,WAC9CJ,EAAW,KAGnB,IAAIo9C,GAAax3B,KAAK1U,YAAYpJ,SAAS,WAC3C,IAAIs1C,EAAY,CACZ,GAAI0jB,KACJ1jB,GAAWxsC,QAAQ,SAAU7S,GACzB+iE,EAAS5/D,KAAKnD,KAElB6sF,IACA,KAAS7rF,EAAI,EAAGA,EAAI+hE,EAASniE,OAAQI,GAAQ,EACrC6mB,KAAK08D,QACLsI,EAAc1pF,MAAM4/D,EAAS9hE,OAAOC,SAASF,EAAEG,WAAY,KAAOuK,EAAaq3D,EAAS/hE,EAAI,KAG5F6rF,EAAc1pF,MAAM4/D,EAAS9hE,OAAOC,SAASF,EAAEG,WAAY,MAAO4hE,EAAS/hE,EAAI,IAGvF,IAAIiB,EACA,GAAiB,MAAbA,EACA,IAASuK,EAAI,EAAGA,EAAIqgF,EAAcjsF,OAAQ4L,IAAK,CACvCjC,EAAIsiF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,EACzD0rF,GAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAAK0rF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GACvG0rF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAAKsK,EAAYlB,MAGrE,IAAiB,KAAbtI,EACL,IAASuK,EAAI,EAAGA,EAAIqgF,EAAcjsF,OAAQ4L,IAAK,CACvCjC,EAAIsiF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,EAC3B,KAA1B0mB,KAAK7G,MAAMgmC,QAAQ,GACnB6lC,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAAKuK,GACjDmhF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAAKuK,GAG3DmhF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAAKuK,EAClDmhF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAEzD0rF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAAKoJ,MAGzD,IAAiB,MAAbtI,EACL,IAAK,GAAIuK,GAAI,EAAGA,EAAIqgF,EAAcjsF,OAAQ4L,IAAK,CAC3C,GAAIjC,GAAIsiF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,EACzD0rF,GAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAAKsK,EAAYlB,EAClEsiF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,GAAKuK,EAClDmhF,EAAc5rF,OAAOC,SAASsL,EAAErL,WAAY,KAAK,SAMpE,IAAI0mB,KAAKw2B,QAAS,CACnB,GAAI0mB,KACJl9C,MAAKw2B,QAAQxrC,QAAQ,SAAU7S,GAC3B+kE,EAAS5hE,KAAKnD,KAElB6sF,IACA,KAAK,GAAI7rF,GAAI,EAAGA,EAAI6mB,KAAKw2B,QAAQz9C,OAAQI,GAAQ,EACzC6mB,KAAK08D,QACLsI,EAAc1pF,MAAM4hE,EAAS9jE,OAAOC,SAASF,EAAEG,WAAY,KAAOuK,EAAaq5D,EAAS/jE,EAAI,KAG5F6rF,EAAc1pF,MAAM4hE,EAAS9jE,OAAOC,SAASF,EAAEG,WAAY,MAAO4jE,EAAS/jE,EAAI,KAI3F,MAAO6rF,IAEJ0G,GACTnG,IAiBE8G,GAAuC,SAAUxkE,GAEjD,QAASwkE,GAAsB5iF,GAC3B,GAAIse,GAAQF,EAAO5T,KAAK+L,OAASA,IAajC,OAZA+H,GAAMukE,WAAa1mF,qBAAmBY,KACtCuhB,EAAMwkE,SAAW3mF,qBAAmBY,KACpCuhB,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,aAE7C4lB,EAAMyuB,YADY,KAAX/sC,EACSA,KAKpBse,EAAM/Q,MAAQC,qBAAmBu1E,mBAC1BzkE,EAwcX,MAvdA9B,IAAUomE,EAAuBxkE,GAiBjC9T,OAAO+H,eAAeuwE,EAAsBr4E,UAAW,kBAkBnD7R,IAAK,WACD,GAAI6d,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIokF,GAAapmE,KAAK1U,YAAYpJ,SAAS,KACvCkkF,IAAcnmF,MAAMuB,QAAQ4kF,KAC5BpmE,KAAKssE,WAAahmF,EAAoB8/E,EAAW,GAAGj+E,OAG5D,MAAO6X,MAAKssE,YAqBhB7rF,IAAK,SAAUtI,GACX,GAAIA,IAAU6nB,KAAKssE,aACftsE,KAAKssE,WAAan0F,EACd6nB,KAAK1U,aAAa,CAClB,GAAI21E,KACJA,GAAU3lF,KAAKgK,GAASnD,IAAIwD,EAAuBxN,KACnD8oF,EAAU3lF,KAAKgK,GAASnD,IAAIwD,EAAuBqa,KAAKqgD,gBACxDrgD,KAAK1U,YAAY9C,OAAO,KAAMy4E,KAI1CllE,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeuwE,EAAsBr4E,UAAW,gBAkBnD7R,IAAK,WACD,GAAI6d,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIokF,GAAapmE,KAAK1U,YAAYpJ,SAAS,KACvCkkF,IAAcnmF,MAAMuB,QAAQ4kF,KAC5BpmE,KAAKusE,SAAWjmF,EAAoB8/E,EAAW,GAAGj+E,OAG1D,MAAO6X,MAAKusE,UAqBhB9rF,IAAK,SAAUtI,GACX,GAAIA,IAAU6nB,KAAKusE,WACfvsE,KAAKusE,SAAWp0F,EACZ6nB,KAAK1U,aAAa,CAClB,GAAI21E,KACJA,GAAU3lF,KAAKgK,GAASnD,IAAIwD,EAAuBqa,KAAKogD,kBACxD6gB,EAAU3lF,KAAKgK,GAASnD,IAAIwD,EAAuBxN,KACnD6nB,KAAK1U,YAAY9C,OAAO,KAAMy4E,KAI1CllE,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeuwE,EAAsBr4E,UAAW,iBAkBnD7R,IAAK,WACD,OAAmC,KAAxB6d,KAAK4rE,gBAAkC5rE,KAAK1U,YAAYtJ,IAAI,OAAQ,CAC3E,GAAI6pF,GAAU7rE,KAAK1U,YAAYnJ,IAAI,WACZ,KAAZ0pF,GAA2BA,GAAW,IAC7C7rE,KAAK4rE,eAAiBC,GAG9B,MAAO7rE,MAAK4rE,gBAqBhBnrF,IAAK,SAAUtI,GACX,IAAKiB,OAAOm3D,MAAMp4D,GAAQ,CACtB,KAAIA,GAAS,GAKT,KAAM,IAAI0B,OAAM,8CAJhBmmB,MAAK1U,YAAY9C,OAAO,MAAOrQ,GAC/B6nB,KAAK4rE,eAAiBzzF,IAOlC4jB,YAAY,EACZC,cAAc,IAElBqwE,EAAsB5f,MAAQ,SAAUzyE,EAAMuH,GAC1C,GAAIi3E,GAAQ,GAAI6T,EAGhB,OAFA7T,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX6T,EAAsBr4E,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC1DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD8qF,EAAsBr4E,UAAUg+D,aAAe,SAAUD,GACrD,OAA4B,KAAjB/xD,KAAKw2B,SAA4C,OAAjBx2B,KAAKw2B,QAC5C,KAAM,IAAI38C,OAAM,qCAEfmmB,MAAK1U,YAAYtJ,IAAI,SACtBge,KAAK8rE,cAAgB,GAEpB9rE,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,EAE/B,IAAInL,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,OAEJ,KAAhBssE,IACPA,EAAc,EAElB,IAAIpkE,GAASuW,KAAKmsE,iBACd51C,IACJA,GAAUj7C,KAAK,EACf,KAAK,GAAIpC,GAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAC/Bq9C,EAAUj7C,KAAK,EAEnB0kB,MAAKysE,gBAAkBhjF,EACvBuW,KAAKy2B,WAAaF,CAClB,IAAIwK,GAAO,GAAIzK,GACfyK,GAAKvK,QAAU/sC,EACfs3C,EAAKtK,WAAaF,EAClBv2B,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAKw2B,QACzC,IAAIyqC,KACJA,GAAU3lF,KAAKgK,GAASnD,IAAIwD,EAAuBqa,KAAKogD,kBACxD6gB,EAAU3lF,KAAKgK,GAASnD,IAAIwD,EAAuBqa,KAAKqgD,gBACxDrgD,KAAK1U,YAAY9C,OAAO,KAAMy4E,GAC9BjhE,KAAK1U,YAAY9C,OAAO,MAAOwX,KAAK4rE,eACpC,IAAIc,GAAiB1sE,KAAK27D,gBAAgB37D,KAAKw2B,SAC3C/zC,GAAaiqF,EAAehqF,EAC5BgqF,EAAe/pF,EACf+pF,EAAehqF,EAAIgqF,EAAe9pF,MAClC8pF,EAAe/pF,EAAI+pF,EAAezyF,OACtC+lB,MAAK1U,YAAY9C,OAAO,OAAQ/F,IAC5Bud,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAK2sE,0BAA0B5a,KAGlEsa,EAAsBr4E,UAAU89D,eAAiB,SAAUC,GAGvD,OAFkB,KAAdA,IAAwBA,GAAY,GACxC/xD,KAAK+oD,SAAWgJ,EACZ/xD,KAAKpK,WAIL,IAHIoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAK2sE,0BAA0B5a,KAEzD/xD,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAO9E,IADAsU,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBAAuB/U,EAC7B,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAK2sE,0BAA0B5a,EAsBtE,QALkC,KAAvB/xD,KAAKqnE,eAAiCrnE,KAAKqnE,eAC9CrnE,KAAKpK,WACLoK,KAAKijE,sBAGTlR,EACA,GAAI/xD,KAAK8mE,oBAAqB,CAC1B,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpF,KAAKye,KAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,UAAW,CAC7D,GAAI6J,GAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,OAC5D2J,IACAmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAGjGmU,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAG1Dv8D,MAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAGtC,KAAK+xD,GAAa/xD,KAAK2sD,eAAgB,CACnC,GAAI9hE,OAAa,EACjB,IAAImV,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACD,GAAIyqF,GAAc5sE,KAAKtU,gBAAgB00C,mBACvCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAImsF,EAAa/hF,GAChDmV,KAAK1U,YAAY9C,OAAO,KAAMokF,GAElC95E,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IACxDxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEjB,EAAWrC,OAAO,IAAK0B,KAG/BmiF,EAAsBr4E,UAAU24E,0BAA4B,SAAUjQ,GAClE,GAAI14E,GAAQgc,KAAKhc,MAAQgc,KAAKhc,OAAS,EAAG,EAAG,EAC7C,QAAuB,KAAZ04E,GAA2BA,EAAS,CAC3C,GAAI9O,OAAY,EACZ5tD,MAAKuqD,OAAO3nE,MAAQ,IACpBgrE,EAAY,GAAI/qB,IAAO7+C,EAAOgc,KAAKuqD,OAAO3nE,OAE1Cy3C,GAAWr6B,KAAK7G,MAAMkhC,QAC1B,IAAIuzB,EAAW,CACX,GAAIpjE,OAAQ,OACgB,KAAjBwV,KAAK66D,SAA2B76D,KAAK24D,SAAW,IACvDnuE,EAAQ6vC,EAASE,OACjBF,EAASgO,gBAAgBroC,KAAK24D,UAElC,IAAIlvE,GAASuW,KAAKmsE,iBACd51C,IAEJ,IADAA,EAAUj7C,KAAK,GACXmO,GAAUA,EAAO1Q,OAAS,EAAG,CAC7B,IAASG,EAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAC/Bq9C,EAAUj7C,KAAK,IAEfylD,EAAO,GAAIzK,KACVE,QAAU/sC,EACfs3C,EAAKtK,WAAaF,EAClB8D,EAASyG,SAASC,EAAM6sB,OACI,KAAjB5tD,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASK,QAAQlwC,IAI7B,MAAO6vC,GAASmB,UAGhB,GAAI4mC,OAAc,GACdh/E,GAASV,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAG3I,OAAQ,OACf,KAAjB+lB,KAAKw2B,SAA2Bx2B,KAAK1U,YAAYtJ,IAAI,aAC5Dge,KAAKw2B,QAAUx2B,KAAK1U,YAAYnJ,IAAI,YACpCigF,EAAcpiE,KAAK27D,gBAAgB37D,KAAKw2B,UAGxC4rC,EAAcpiE,KAAK27D,gBAAgB37D,KAAKw2B,SAE5CpzC,EAAKV,EAAI0/E,EAAY1/E,EAAIsd,KAAKuqD,OAAO3nE,MACrCQ,EAAKT,EAAIy/E,EAAYz/E,EAAIqd,KAAKuqD,OAAO3nE,MACrCQ,EAAKR,MAAQw/E,EAAYx/E,MAAS,EAAIod,KAAKuqD,OAAO3nE,MAClDQ,EAAKnJ,OAASmoF,EAAYnoF,OAAU,EAAI+lB,KAAKuqD,OAAO3nE,KACpD,IAAIiI,GAAa,GAAI0tE,IAAcv4D,MAAO5c,EAAKV,EAAGU,EAAKT,EAAGS,EAAKR,MAAOQ,EAAKnJ,QAC3E4Q,GAAW3C,OAAS,GAAIuD,KAAarI,EAAKV,EAAGU,EAAKT,EAAGS,EAAKR,MAAOQ,EAAKnJ,QAAS+lB,KAAKtU,gBACpF,IAAIP,GAAWN,EAAW3C,MAC1B0D,IAAWT,EAAU6U,KAAKi7D,qBAC1B9vE,EAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWxvC,EAAW3C,OAAOmyC,SAC7BozB,EAAY,GAAI0E,GAChBnyD,MAAKg6D,aACLvM,EAAUC,UAAY,GAAI5qB,IAAS9iC,KAAK+5D,cAExC/5D,KAAKuqD,OAAO3nE,MAAQ,GAAKoB,IACzBypE,EAAUG,UAAY,GAAI/qB,IAAO7+C,EAAOgc,KAAKuqD,OAAO3nE,QAEpDoB,IACAypE,EAAUmB,UAAY,GAAI9rB,IAAS9+C,QAEX,KAAjBgc,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASE,OACTF,EAASgO,gBAAgBroC,KAAK24D,WAG9Bt+B,EAASE,MAEb,IAAIwG,GAAO,GAAIzK,GAOf,QANoC,KAAzBt2B,KAAKysE,iBAA4D,OAAzBzsE,KAAKysE,gBACpD1rC,EAAKvK,QAAUx2B,KAAKysE,gBAGpB1rC,EAAKvK,QAAUx2B,KAAKmsE,qBAEO,KAApBnsE,KAAKy2B,YAAuD,OAAzBz2B,KAAKysE,gBAC/C1rC,EAAKtK,WAAaz2B,KAAKy2B,eAEtB,CACDz2B,KAAKy2B,cACLz2B,KAAKy2B,WAAWn7C,KAAK,EACrB,KAAK,GAAIpC,GAAI,EAAGA,EAAI6nD,EAAKvK,QAAQz9C,OAAQG,IACrC8mB,KAAKy2B,WAAWn7C,KAAK,EAEzBylD,GAAKtK,WAAaz2B,KAAKy2B,WAO3B,GALA4D,EAASyG,SAASC,EAAM0sB,EAAUG,UAAWH,EAAUC,eAC3B,KAAjB1tD,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASK,UAEbL,EAASK,UACL16B,KAAKq6D,UAAW,CAChBlvE,EAASW,SAASvK,WAAWgR,UAAW,CACxC,IAAI0uE,KACJA,GAAU3lF,KAAKgK,GAASnD,IAAIwD,EAAuBqa,KAAKogD,kBACxD6gB,EAAU3lF,KAAKgK,GAASnD,IAAIwD,EAAuBqa,KAAKqgD,gBACxDrgD,KAAK1U,YAAY9C,OAAO,KAAMy4E,GAC9BjhE,KAAK1U,YAAY9C,OAAO,MAAOwX,KAAK8rE,eACpC9rE,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAKw2B,SAG7C,MADAx2B,MAAK1U,YAAY9C,OAAO,QAASpF,EAAKV,EAAGU,EAAKT,EAAGS,EAAKV,EAAIU,EAAKR,MAAOQ,EAAKT,EAAIS,EAAKnJ,SAC7EkR,GAGfkhF,EAAsBr4E,UAAUm4E,eAAiB,WAC7C,GAEI1iF,GADA5F,EADWmc,KAAK7G,MAAM1e,KACA,EAE1B,IAAIulB,KAAK1U,YAAYtJ,IAAI,cAAgBge,KAAKq6D,aAAer6D,KAAK2sD,gBAAmB3sD,KAAK2sD,gBAAkB3sD,KAAK08D,SAAW,CACxH,GAAIllC,GAAax3B,KAAK1U,YAAYpJ,SAAS,WAC3C,IAAIs1C,EAAY,CACZ/tC,IACA,KAAStQ,EAAI,EAAGA,EAAIq+C,EAAWz+C,OAAQI,GAAQ,EAC3CsQ,EAAOnO,MAAMk8C,EAAWp+C,OAAOC,SAASF,EAAEG,WAAY,KAAOuK,EAAa2zC,EAAWr+C,EAAI,UAIhG,IAAI6mB,KAAKw2B,QAAS,CACnBx2B,KAAKw2B,QAAUx2B,KAAK+kE,WAAW/kE,KAAKw2B,QACpC,IAAIq2C,KACJ7sE,MAAKw2B,QAAQxrC,QAAQ,SAAU7S,GAC3B00F,EAAiBvxF,KAAKnD,KAE1BsR,IACA,KAAK,GAAItQ,GAAI,EAAGA,EAAI0zF,EAAiB9zF,OAAQI,GAAQ,EAC7C6mB,KAAK08D,QACLjzE,EAAOnO,MAAMuxF,EAAiBzzF,OAAOC,SAASF,EAAEG,WAAY,KAAOuK,EAAagpF,EAAiB1zF,EAAI,KAGrGsQ,EAAOnO,MAAMuxF,EAAiBzzF,OAAOC,SAASF,EAAEG,WAAY,MAAOuzF,EAAiB1zF,EAAI,KAIpG,MAAOsQ,IAEJ4iF,GACT9G,IAiBE1I,GAA+C,SAAUh1D,GAEzD,QAASg1D,GAA8BpzE,GACnC,GAAIse,GAAQF,EAAO5T,KAAK+L,OAASA,IAOjC,IANA+H,EAAM89D,eACN99D,EAAM+kE,yBAA2B,EAAG,GACpC/kE,EAAMglE,0BAA4B,EAAG,GACrChlE,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,iBAC3B,KAAXsH,GAA0BA,EAAO1Q,OAAS,EAAG,CACpD,GAAI0Q,EAAO1Q,OAAS,EAChB,KAAM,IAAIc,OAAM,6CAEpBkuB,GAAMilE,YAAcvjF,CACpB,KAAK,GAAIvQ,GAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAC/B6uB,EAAM89D,YAAYvqF,KAAKmO,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAK,IACjEyuB,EAAM89D,YAAYvqF,KAAKmO,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAIzE,MADAyuB,GAAM/Q,MAAQC,qBAAmBg2E,2BAC1BllE,EAwdX,MA5eA9B,IAAU42D,EAA+Bh1D,GAsBzC9T,OAAO+H,eAAe+gE,EAA8B7oE,UAAW,WAkB3D7R,IAAK,WAID,WAH6B,KAAlB6d,KAAK6mE,UAA4B7mE,KAAK1U,YAAYtJ,IAAI,aAC7Dge,KAAK6mE,SAAW7mE,KAAK1U,YAAYnJ,IAAI,YAElC6d,KAAK6mE,UAqBhBpmF,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKpK,YACfoK,KAAK6mE,SAAW1uF,EAChB6nB,KAAK26D,QAAQC,KAAM,IAG3B7+D,YAAY,EACZC,cAAc,IAElB6gE,EAA8BpQ,MAAQ,SAAUzyE,EAAMuH,GAClD,GAAIi3E,GAAQ,GAAIqE,EAGhB,OAFArE,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXqE,EAA8B7oE,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAClEsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDs7E,EAA8B7oE,UAAUg+D,aAAe,WACnD,IAAKhyD,KAAKgtE,YACN,KAAM,IAAInzF,OAAM,qCAEpB,IAAIg0E,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,GAE1Bye,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,OAEJ,KAAhBnL,IACPA,EAAc,GAElB7tD,KAAK8mE,oBAAsB9mE,KAAKktE,iCAEpCrQ,EAA8B7oE,UAAU89D,eAAiB,SAAUC,GAE/D,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,WAIL,IAHKm8D,GAAa/xD,KAAK2sD,iBACnB3sD,KAAK8mE,oBAAsB9mE,KAAKktE,kCAE/BltE,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAO9E,IADAsU,KAAKgyD,gBACAhyD,KAAK8mE,qBACF/U,EACA,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAKktE,+BAkBhD,IAAInb,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpF,KAAKye,KAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,UAAW,CAC7D,GAAI6J,GAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,OAC5D2J,IACAmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAGjGmU,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAErDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,OAGtC68D,EAA8B7oE,UAAUk5E,8BAAgC,WACpE,GAAIrf,GAAc7tD,KAAKuqD,OAAO3nE,MAC1B2R,EAAOyL,KAAKu2D,mBACK,KAAThiE,GAAiC,OAATA,IAAoByL,KAAKpK,WAA2B,IAAdrB,EAAK9Z,QAC3E8Z,EAAOyL,KAAKxK,mBACZwK,KAAKiwD,SAAW17D,EAEpB,IAAIsS,GAAS,GAAI/B,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAC3En6C,EAASgX,KAAKyoE,mBAAqB,IAAQpwF,KAAKiR,GAChDN,GAAQ,IACRA,GAASA,GAETA,EAAQ,MACRA,EAAQ,IAAMA,GAElBgX,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAK6lE,YACzC,IAAI0C,GAAK,QACLh0E,EAAKuW,SAASgP,gBACd,IACAvlB,EAAK8S,MACL,aACArH,KAAKwhE,YAAYxhE,KAAKhc,MAC1Bgc,MAAK1U,YAAY9C,OAAO,KAAM+/E,GAC1BvoE,KAAK5S,OAAU,IAAMpE,EAAMrL,QAAQ,GAAK,IACxCqiB,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAK5S,MAEpC4S,KAAK5S,MACV4S,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAK5S,UAEjB,KAAjB4S,KAAK+6D,SACZ/6D,KAAK1U,YAAY9C,OAAO,UAAW,qBAEvCwX,KAAK1U,YAAY9C,OAAO,mBAAoB,MAC5CwX,KAAK1U,YAAY9C,OAAO,UAAW,GAAIlD,IAAS,aAChD0a,KAAK1U,YAAY9C,OAAO,KAAM,GAAIlD,IAAS,iBAC3C,IAAIs6D,GAAoB,GAAI99D,IACxBqkB,KACAwnB,KACAxQ,KACAz6B,KACAyqF,IACJvtB,GAAkBn/D,IAAI,OAAQ6E,GAASnD,IAAI,sBAC3Cy9D,EAAkBn/D,IAAI,IAAK,eAC3Bm/D,EAAkBn/D,IAAI,UAAW,MACjCm/D,EAAkBn/D,IAAI,uBAAwB,SAC9C,IAAI2sF,GAAc,GAAItrF,GACtBsrF,GAAY3sF,IAAI,IAAK,MACrB2sF,EAAY3sF,IAAI,OAAQ,gBACxB2sF,EAAY3sF,IAAI,IAAK,GACrB2sF,EAAY3sF,IAAI,IAAK,GACrB2sF,EAAY3sF,IAAI,KAAM,IACtB0lB,EAAE7qB,KAAK8xF,EACP,IAAIC,GAAc,GAAIvrF,GACtBurF,GAAY5sF,IAAI,IAAK,KACrB4sF,EAAY5sF,IAAI,OAAQ,gBACxB4sF,EAAY5sF,IAAI,IAAK,GACrB4sF,EAAY5sF,IAAI,IAAK,GACrB4sF,EAAY5sF,IAAI,MAAM,GACtB4sF,EAAY5sF,IAAI,KAAM,IACtBktC,EAAEryC,KAAK+xF,EACP,IAAIC,GAAc,GAAIxrF,GACtBwrF,GAAY7sF,IAAI,IAAK,SACrB6sF,EAAY7sF,IAAI,OAAQ,gBACxB6sF,EAAY7sF,IAAI,IAAK,GACrB6sF,EAAY7sF,IAAI,IAAK,GACrB6sF,EAAY7sF,IAAI,MAAM,GACtB6sF,EAAY7sF,IAAI,KAAM,IACtB08B,EAAE7hC,KAAKgyF,EACP,IAAIC,GAAc,GAAIzrF,GACtByrF,GAAY9sF,IAAI,IAAK,SACrB8sF,EAAY9sF,IAAI,OAAQ,gBACxB8sF,EAAY9sF,IAAI,IAAK,GACrB8sF,EAAY9sF,IAAI,IAAK,GACrB8sF,EAAY9sF,IAAI,MAAM,GACtB8sF,EAAY9sF,IAAI,KAAM,IACtB0sF,EAAE7xF,KAAKiyF,EACP,IAAIC,GAAc,GAAI1rF,GACtB0rF,GAAY/sF,IAAI,IAAK,MACrB+sF,EAAY/sF,IAAI,OAAQ,gBACxB+sF,EAAY/sF,IAAI,IAAK,GACrB+sF,EAAY/sF,IAAI,IAAK,GACrB+sF,EAAY/sF,IAAI,KAAM,IACtBiC,EAAEpH,KAAKkyF,GACP5tB,EAAkBn/D,IAAI,IAAK0lB,GAC3By5C,EAAkBn/D,IAAI,IAAKktC,GAC3BiyB,EAAkBn/D,IAAI,IAAK08B,GAC3ByiC,EAAkBn/D,IAAI,IAAKiC,GAC3Bk9D,EAAkBn/D,IAAI,IAAK0sF,GACvBntE,KAAK1U,YAAYtJ,IAAI,YACrB8Q,GAA0BkN,KAAK1U,YAAa0U,KAAKtU,gBAAiB,UAEtE,IAAIxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW01D,GAC9CA,EAAkBrtD,UAAW,EAC7ByN,KAAK1U,YAAY9C,OAAO,UAAW0B,EACnC,IAAIq4E,IAAa,EAAG,EAAG,EAAG,GACtBH,EAAcpiE,KAAKytE,uBACnBhkF,EAASuW,KAAKynE,oBACdlxC,IACJA,GAAUj7C,KAAK,EACf,KAAK,GAAIpC,GAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAC/Bq9C,EAAUj7C,KAAK,IAEA,GAAIg7C,KACV4B,aAAazuC,EAAO,GAAG,GAAKuW,KAAK0tE,UAAWjkF,EAAO,GAAG,GAAKuW,KAAK0tE,SAAU,EAAI1tE,KAAK0tE,QAAS,EAAI1tE,KAAK0tE,QAClH,IAAIjzF,GAAO8Z,EAAKu7B,cAAc9mC,EAAM1P,WAAa,KAAM,EAAG,GAAIutB,EAAQ,EAAG,GACrE8mE,IAAa3tE,KAAK8sE,wBAAwB,GAAK9sE,KAAK+sE,yBAAyB,IAAM,GACjF/sE,KAAK8sE,wBAAwB,GAAK9sE,KAAK+sE,yBAAyB,IAAM,GACxE5mC,GAAU18C,EAAO,GAAG,IAAKA,EAAO,GAAG,IACnC3G,EAAK2G,EAAO,GAAG,GAAKuW,KAAK0tE,QAAUr1F,KAAKkR,KAAKyW,KAAK4tE,YAAe5tE,KAAK6tE,YAAc,IAAOx1F,KAAKiR,GAAK,MACrG3G,EAAI8G,EAAO,GAAG,GAAKuW,KAAK0tE,QAAUr1F,KAAKmR,KAAKwW,KAAK4tE,YAAe5tE,KAAK6tE,YAAc,IAAOx1F,KAAKiR,GAAK,MACpGzQ,GAAS80F,EAAS,GAAIA,EAAS,IAC/BG,EAAQj1F,EAAM,GAAKstD,EAAO,GAC1B4nC,EAAQl1F,EAAM,GAAKstD,EAAO,GAC1B6nC,EAAkB31F,KAAKggF,MAAM0V,EAAOD,IAAW,IAAQz1F,KAAKiR,IAC5DpP,GAAO,EACPie,GAAQ,EACR81E,GAAK,EACLC,GAAO,CACPF,GAAgB,EACZA,EAAgB,GAChB71E,GAAQ,EAEH61E,GAAiB,IAAMA,EAAgB,IAC5CC,GAAK,EAGL/zF,GAAO,EAKW,KADtB8zF,GAAiBA,IAEb,GAAK13C,KAAW4B,aAAakqC,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAEpF4L,EAAgB,GACrB71E,GAAQ,EAEH61E,GAAiB,IAAMA,EAAgB,IAC5CE,GAAO,EAGPh0F,GAAO,EAGM,IAAjBqoF,EAAU,IAA6B,IAAjBA,EAAU,IAA6B,IAAjBA,EAAU,IAA6B,IAAjBA,EAAU,KAC5EA,EAAYH,EACZpiE,KAAK/G,QAAWvW,EAAG0/E,EAAY,GAAIz/E,EAAGy/E,EAAY,GAAIx/E,MAAOw/E,EAAY,GAAInoF,OAAQmoF,EAAY,IAErG,IAAIrhC,GAAO,GAAIzK,GACfyK,GAAKtK,WAAaF,EAClBwK,EAAKvK,QAAU/sC,EACfuW,KAAK1U,YAAY7K,IAAI,QAAS8hF,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAKA,EAAU,GAAIA,EAAU,GAAKA,EAAU,IAChH,IAAI13E,GAAa,GAAI0tE,IAAcv4D,KAAMoiE,EACzCv3E,GAAW3C,OAAS,GAAIuD,IAAY82E,EAAWviE,KAAKtU,gBACpD,IAAIP,GAAWN,EAAW3C,MAC1BiD,GAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWxvC,EAAW3C,OAAOmyC,SAC7Bz3C,EAAQirE,EAAc,EACtB3wB,EAAM,GAAI2F,IAAO7iC,KAAK8hC,OAAQl/C,EAC9Bod,MAAKuqD,OAAOzlE,QAAUE,iBAAeE,SACrCg4C,EAAI6M,WAAaprC,eAAa0mD,KAElC,IAAIloB,GAAQ,GAAI2F,IAAS9iC,KAAK8hC,OAC9BzH,GAASE,OACTF,EAASyG,SAASC,EAAM7D,GACxB6D,EAAKlJ,OAAOpuC,EAAO,GAAG,GAAKuW,KAAK0tE,QAASjkF,EAAO,GAAG,GAAKuW,KAAK0tE,QAAS,EAAI1tE,KAAK0tE,QAAS,EAAI1tE,KAAK0tE,QAAS1tE,KAAK4tE,YAAa5tE,KAAK6tE,aAC7HI,EACA5zC,EAAS0H,WAAW/4C,EAAM1P,WAAa,IAAKib,GAAOzR,EAAMrI,EAAK,GAAK,KAAOkI,EAAI4R,EAAKuW,SAAS5D,aAAe,GAAI,EAAG,GAAI,KAAMi2B,GAEvHhlC,EACLkiC,EAAS0H,WAAW/4C,EAAM1P,WAAa,IAAKib,GAAOzR,EAAK,KAAMH,EAAI4R,EAAKuW,SAAS5D,aAAe,GAAI,EAAG,GAAI,KAAMi2B,GAE3GjjD,EACLmgD,EAAS0H,WAAW/4C,EAAM1P,WAAa,IAAKib,GAAOzR,EAAKrI,EAAK,GAAK,KAAMkI,EAAI4R,EAAKuW,SAAS5D,aAAe,GAAI,EAAG,GAAI,KAAMi2B,GAErH+wC,GACL7zC,EAAS0H,WAAW/4C,EAAM1P,WAAa,IAAKib,GAAOzR,EAAMrI,EAAK,GAAK,EAAKkI,EAAI,EAAI,EAAG,GAAI,KAAMw6C,GAEjG9C,EAASK,UACTL,EAASmB,UAAU1vC,SAASvK,WAAWgR,UAAW,CAClD,IAAI47E,GAAanuE,KAAKtU,gBAAgB00C,mBACtCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI0tF,EAAY9zC,EAASmB,UAAU1vC,UAClEuuC,EAASmB,UAAU1vC,SAAS5B,UAAYikF,EACpCnuE,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAIyH,GAAuB,GAAIrR,GAI/B,OAHAqR,GAAqB1S,IAAI,IAAK0tF,GAC9Bh7E,EAAqBZ,UAAW,EAChCyN,KAAK1U,YAAY7K,IAAI,KAAM0S,GACpBhI,GAEX0xE,EAA8B7oE,UAAUy5E,qBAAuB,WAE3D,IAAK,GADDhkF,GAASuW,KAAKynE,oBACTvuF,EAAI,EAAGA,EAAIuQ,EAAO1Q,OAAQG,IAC/BuQ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAAMmQ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAK,EAE9F,IAAIynD,GAAO,GAAIzK,GAGf,OAFAyK,GAAKvK,QAAU/sC,EACfs3C,EAAKtK,YAAc,EAAG,EAAG,GAClBsK,EAAKtH,cAEhBojC,EAA8B7oE,UAAUyzE,kBAAoB,WACxD,GAAIh+E,GACAkvB,CACJ,IAAI3Y,KAAK6lE,YAAa,CAClBp8E,EAAS,GAAIxJ,OAAM+f,KAAK6lE,YAAY9sF,OACpC,KAAK,GAAIG,GAAI,EAAGA,EAAI8mB,KAAK6lE,YAAY9sF,OAAQG,IACzCuQ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAK6lE,YAAYzsF,OAAOC,SAASH,EAAEI,WAAY,IAE/Fq/B,GAAa,GAAI14B,OAAMwJ,EAAO1Q,OAAS,EAEvC,KAAK,GADDkQ,GAAQ,EACH9P,EAAI,EAAGA,EAAIsQ,EAAO1Q,OAAQI,GAAQ,EACvCw/B,EAAWv/B,OAAOC,SAAS4P,EAAM3P,WAAY,MAAQmQ,EAAOrQ,OAAOC,SAASF,EAAEG,WAAY,MAAOmQ,EAAOtQ,EAAI,IAC5G8P,IAGR,MAAO0vB,IAEXkkD,EAA8B7oE,UAAUy0E,gBAAkB,WACtD,GAAIh/E,IAAU,EAAG,OACe,KAArBuW,KAAK6lE,aAA2D,IAA5B7lE,KAAK6lE,YAAY9sF,QAAgBinB,KAAKpK,WAC7EoK,KAAK1U,YAAYtJ,IAAI,cACrBge,KAAK6lE,YAAc7lE,KAAK1U,YAAYnJ,IAAI,YAGhD,KAAK,GAAIjJ,GAAI,EAAGA,EAAI8mB,KAAK6lE,YAAY9sF,OAAQG,IACzCuQ,EAAOrQ,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAK6lE,YAAYzsF,OAAOC,SAASH,EAAEI,WAAY,IAG/F,KAAK,GADDq/B,MACKx/B,EAAI,EAAGA,EAAIsQ,EAAO1Q,OAAQI,GAAQ,EACvCw/B,EAAWr9B,MAAMmO,EAAOrQ,OAAOC,SAASF,EAAEG,WAAY,KAAMmQ,EAAOtQ,EAAI,IAE3E,IAAIi1F,GAASz1D,EAAW,GACpB01D,EAAS11D,EAAW,GACpB21D,EAAS31D,EAAW,GACpB41D,EAAoBl2F,KAAKqlF,KAAKrlF,KAAKC,IAAK+1F,EAAO,GAAKD,EAAO,GAAK,GAAK/1F,KAAKC,IAAK+1F,EAAO,GAAKD,EAAO,GAAK,IACvGI,EAAqBn2F,KAAKqlF,KAAKrlF,KAAKC,IAAK+1F,EAAO,GAAKC,EAAO,GAAK,GAAKj2F,KAAKC,IAAK+1F,EAAO,GAAKC,EAAO,GAAK,GAC5GtuE,MAAK0tE,QAAUr1F,KAAKY,IAAIs1F,EAAmBC,GAAsB,CACjE,IAAIrP,GAAe,GAAI7oC,GACvB6oC,GAAa3oC,QAAU7d,EACvBwmD,EAAa1oC,YAAc,EAAG,EAAG,EACjC,IAAIg4C,GACAC,EACAv2F,EAAQ6nB,KAAK2uE,kCAAkCN,EAAO,GAAIA,EAAO,GAAIruE,KAAK0tE,QAASU,EAAQC,EAAQI,EAAoBC,EAC3HD,GAAqBt2F,EAAMoF,MAC3BmxF,EAAqBv2F,EAAMqF,OACa,IAApCwiB,KAAK8sE,wBAAwB,IAAgD,IAApC9sE,KAAK8sE,wBAAwB,KACtE9sE,KAAK8sE,wBAA0B4B,GAEnCD,GAAsB,EAAG,GACzBC,GAAsB,EAAG,GAEzBD,GADAt2F,EAAQ6nB,KAAK2uE,kCAAkCN,EAAO,GAAIA,EAAO,GAAIruE,KAAK0tE,QAASY,EAAQD,EAAQI,EAAoBC,IAC5FnxF,MAC3BmxF,EAAqBv2F,EAAMqF,OACc,IAArCwiB,KAAK+sE,yBAAyB,IAAiD,IAArC/sE,KAAK+sE,yBAAyB,KACxE/sE,KAAK+sE,yBAA2B2B,EAEpC,IAAIZ,GAAQ9tE,KAAK8sE,wBAAwB,GAAKuB,EAAO,GACjDN,EAAQ/tE,KAAK8sE,wBAAwB,GAAKuB,EAAO,GACjDv2C,EAAcz/C,KAAKggF,MAAM0V,EAAOD,IAAU,IAAQz1F,KAAKiR,GAC3DwkF,GAAQ9tE,KAAK+sE,yBAAyB,GAAKsB,EAAO,GAClDN,EAAQ/tE,KAAK+sE,yBAAyB,GAAKsB,EAAO,EAClD,IAAIt2C,GAAc1/C,KAAKggF,MAAM0V,EAAOD,IAAU,IAAQz1F,KAAKiR,GAuC3D,OAtCAwuC,GAAaA,EAAa,EAAIA,EAAa,IAAMA,GAAcA,EAC/DC,EAAaA,EAAa,EAAIA,EAAa,IAAMA,GAAcA,EAC5C,MAAfD,GAAqC,IAAfC,GACtB/3B,KAAK4tE,YAAc91C,EACnB93B,KAAK6tE,YAAc,KAEC,IAAf/1C,GAAmC,MAAfC,GACzB/3B,KAAK4tE,YAAc71C,EACnB/3B,KAAK6tE,YAAc,KAEd/1C,EAAa,IACdA,EAAaC,GACb/3B,KAAK4tE,YAAc71C,EACnB/3B,KAAK6tE,YAAc/1C,EAAaC,GAE3BD,EAAa,IAAMC,GACxB/3B,KAAK4tE,YAAc71C,EACnB/3B,KAAK6tE,YAAe,IAAM91C,EAAcD,IAGxC93B,KAAK4tE,YAAc91C,EACnB93B,KAAK6tE,YAAc91C,EAAaD,GAIhCA,EAAaC,GACb/3B,KAAK4tE,YAAc91C,EACnB93B,KAAK6tE,YAAc91C,EAAaD,GAE3BA,EAAa,IAAMC,GACxB/3B,KAAK4tE,YAAc91C,EACnB93B,KAAK6tE,YAAe,IAAM/1C,EAAcC,IAGxC/3B,KAAK4tE,YAAc71C,EACnB/3B,KAAK6tE,YAAc/1C,EAAaC,GAGhC1/C,KAAKggF,MAAOiW,EAAO,GAAKD,EAAO,GAAMC,EAAO,GAAKD,EAAO,IAC5Dh2F,KAAKggF,MAAO+V,EAAO,GAAKC,EAAO,GAAMD,EAAO,GAAKC,EAAO,KAEhExR,EAA8B7oE,UAAU26E,kCAAoC,SAAUC,EAASC,EAAS1tC,EAAQitC,EAAQC,EAAQS,EAAeC,GAC3I,GAAIvR,GAAK6Q,EAAO,GAAKD,EAAO,GACxB3Q,EAAK4Q,EAAO,GAAKD,EAAO,GACxBjxD,EAAIqgD,EAAKA,EAAKC,EAAKA,EACnBj5E,EAAI,GAAKg5E,GAAM4Q,EAAO,GAAKQ,GAAWnR,GAAM2Q,EAAO,GAAKS,IAExDpyF,EAAI+H,EAAIA,EAAI,EAAI24B,IADXixD,EAAO,GAAKQ,IAAYR,EAAO,GAAKQ,IAAYR,EAAO,GAAKS,IAAYT,EAAO,GAAKS,GAAW1tC,EAASA,EAEjH,IAAKhkB,GAAK,MAAe1gC,EAAI,EACzBqyF,GAAiB11F,OAAO41F,IAAK51F,OAAO41F,KACpCD,GAAiB31F,OAAO41F,IAAK51F,OAAO41F,SAEnC,IAAU,IAANvyF,EAAS,CACVkxC,GAAKnpC,GAAK,EAAI24B,EAClB2xD,IAAiBV,EAAO,GAAKzgD,EAAI6vC,EAAI4Q,EAAO,GAAKzgD,EAAI8vC,GACrDsR,GAAiB31F,OAAO41F,IAAK51F,OAAO41F,SAEnC,CACD,GAAIrhD,KAAOnpC,EAAInM,KAAKqlF,KAAKjhF,KAAO,EAAI0gC,EACpC2xD,IAAiBV,EAAO,GAAKzgD,EAAI6vC,EAAI4Q,EAAO,GAAKzgD,EAAI8vC,GACrD9vC,IAAOnpC,EAAInM,KAAKqlF,KAAKjhF,KAAO,EAAI0gC,GAChC4xD,GAAiBX,EAAO,GAAKzgD,EAAI6vC,EAAI4Q,EAAO,GAAKzgD,EAAI8vC,GAEzD,OAASlgF,MAAOuxF,EAAetxF,OAAQuxF,IAEpClS,GACT0I,IAiBE0J,GAAkC,SAAUpnE,GAE5C,QAASonE,GAAiBxlF,EAAQ+tC,GAC9B,GAAIzvB,GAAQF,EAAO5T,KAAK+L,OAASA,IAgBjC,OAfA+H,GAAMmnE,wBACNnnE,EAAMonE,uBACNpnE,EAAMqnE,aAAc,EACpBrnE,EAAMsnE,wBAAyB,EAC/BtnE,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,YAC3B,KAAXsH,IACPse,EAAMyuB,QAAU/sC,EAChBse,EAAM9O,QAAWvW,EAAG+G,EAAO,GAAI9G,EAAG8G,EAAO,GAAI7G,MAAO6G,EAAO,GAAIxP,OAAQwP,EAAO,SAExD,KAAf+tC,IACPzvB,EAAM89D,YAAcruC,GAExBzvB,EAAM/Q,MAAQC,qBAAmBq4E,cAC1BvnE,EAyoBX,MA3pBA9B,IAAUgpE,EAAkBpnE,GAoB5B9T,OAAO+H,eAAemzE,EAAiBj7E,UAAW,uBAmB9C7R,IAAK,WACD,GAAyC,IAArC6d,KAAKkvE,qBAAqBn2F,QAAgBinB,KAAK1U,YAAYtJ,IAAI,WAAY,CAC3E,GAAIw1D,GAAUx3C,KAAK1U,YAAYnJ,IAAI,UAC/BlC,OAAMuB,QAAQg2D,IAAYA,EAAQz+D,OAAS,IAC3CinB,KAAKkvE,qBAAuB13B,GAGpC,MAAOx3C,MAAKkvE,sBAuBhBzuF,IAAK,SAAUtI,GACP8H,MAAMuB,QAAQrJ,IAAUA,EAAMY,OAAS,GAAKZ,IAAU6nB,KAAKkvE,uBAC3DlvE,KAAKkvE,qBAAuB/2F,EAC5B6nB,KAAKovE,aAAc,EACfpvE,KAAKpK,WACLoK,KAAK1U,YAAY9C,OAAO,UAAWrQ,KAI/C4jB,YAAY,EACZC,cAAc,IAElBizE,EAAiBxiB,MAAQ,SAAUzyE,EAAMuH,GACrC,GAAIi3E,GAAQ,GAAIyW,EAGhB,OAFAzW,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXyW,EAAiBj7E,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACrDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD0tF,EAAiBj7E,UAAUg+D,aAAe,WACtC,OAA4B,KAAjBhyD,KAAKw2B,SAA4C,OAAjBx2B,KAAKw2B,QAC5C,KAAM,IAAI38C,OAAM,qCAEpB,IAAIg0E,EACA7tD,MAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,QAGtBrB,EAAa,GAAIO,IAAeke,KAAKtU,kBAC9BjL,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,IAE1Bye,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKhc,OAAS,EAAG,EAAG,GACpBgc,KAAKg5D,qBAAsB,OAEJ,KAAhBnL,IACPA,EAAc,EAElB,IAAIoR,GAAkBj/D,KAAKuvE,gBACvBt2E,GAAUgmE,EAAgB,GAC1BA,EAAgB,GAChBA,EAAgB,GAAKA,EAAgB,GACrCA,EAAgB,GAAKA,EAAgB,GAEzC,IADAj/D,KAAK1U,YAAY9C,OAAO,OAAQyQ,GAC5B+G,KAAK2sD,eAAgB,CACrB,GAAI9hE,GAAa,GAAI0tE,IAAcv4D,KAAMi/D,EACzCp0E,GAAW3C,OAAS,GAAIuD,IAAYwzE,EAAiBj/D,KAAKtU,gBAC1D,IAAIP,GAAWN,EAAW3C,MAC1B0D,IAAWT,EAAU6U,KAAKi7D,qBAC1B9vE,EAASy7D,sBAAuB,EAChC5mD,KAAK8mE,oBAAsB9mE,KAAKwvE,qBAAqBrkF,GACjD6U,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAInK,GAAa,GAAIO,GACrBke,MAAK8mE,oBAAoBh7E,SAASvK,WAAWgR,UAAW,CACxD,IAAIrI,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEkU,KAAK8mE,oBAAoBh7E,SAAS5B,UAAYA,EAC9C3I,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,KAAMc,KAGnC0tF,EAAiBj7E,UAAU89D,eAAiB,SAAUC,GAGlD,OAFkB,KAAdA,IAAwBA,GAAY,GACxC/xD,KAAKsnE,WAAavV,EACd/xD,KAAKpK,UAAW,CAChB,GAAIoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,MAAQ,CAC1B,IAArCge,KAAKkvE,qBAAqBn2F,SAC1BinB,KAAKkvE,qBAAuBlvE,KAAKyvE,2BAErC,IAAIrsF,GAAO4c,KAAK0vE,qBAEZ7jF,GADAV,EAAW,GAAIM,IAAYrI,EAAM4c,KAAKtU,kBACvBI,SAASvK,WAAWW,SAAS,QAC5C8G,EAAQgX,KAAKi7D,mBAOjB,IANIpvE,GAAiB,OAAV7C,OAAmC,KAAVA,GAChCmC,EAASW,SAASvK,WAAWd,IAAI,UAAW,EAAG,EAAG,EAAG,GAAIoL,EAAI,IAAKA,EAAI,KAE1EV,EAASy7D,sBAAuB,EAChC5mD,KAAK8mE,oBAAsB9mE,KAAKwvE,qBAAqBrkF,GACrD6U,KAAK1U,YAAY9C,OAAO,QAASpF,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAKA,EAAK,GAAIA,EAAK,GAAKA,EAAK,MAChF2uE,EAAW,CACR/xD,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAInK,GAAa,GAAIO,GACrBke,MAAK8mE,oBAAoBh7E,SAASvK,WAAWgR,UAAW,CACpDrI,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEkU,KAAK8mE,oBAAoBh7E,SAAS5B,UAAYA,EAC9C3I,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,KAAMc,IAGnC,IAAKye,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAO9E,IADAsU,KAAKgyD,gBACAhyD,KAAK8mE,qBACF/U,EACA,GAAK/xD,KAAK1U,YAAYtJ,IAAI,OAatB,IADIT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBApB7C,CACY,IAArCsU,KAAKkvE,qBAAqBn2F,SAC1BinB,KAAKkvE,qBAAuBlvE,KAAKyvE,2BAErC,IAAIrsF,GAAO4c,KAAK0vE,qBACZvkF,EAAW,GAAIM,IAAYrI,EAAM4c,KAAKtU,gBAC1CE,IAAWT,EAAU6U,KAAKi7D,qBAC1B9vE,EAASy7D,sBAAuB,EAChC5mD,KAAK8mE,oBAAsB9mE,KAAKwvE,qBAAqBrkF,GACrD6U,KAAK1U,YAAY9C,OAAO,QAASpF,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAKA,EAAK,GAAIA,EAAK,GAAKA,EAAK,KA0BrG,OARkC,KAAvB4c,KAAKqnE,eAAiCrnE,KAAKqnE,gBAC9CrnE,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GACA/xD,KAAK8mE,qBAC8B,OAAnC9mE,KAAK8mE,oBAAoBz/D,WACiB,KAAnCrH,KAAK8mE,oBAAoBz/D,MAAuB,CACvD,GAAIk1D,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WAC/Eye,MAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,YAC9C6J,EAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,UAE5D8d,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAGjGmU,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAErDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAElC,IAAI+xD,IAAc/xD,KAAKqnE,eAAiBrnE,KAAK1U,YAAYtJ,IAAI,SAAU,CAC/DkI,EAAY8V,KAAK1U,YAAYE,OAAO,QACxC,IAAIwU,KAAK7G,MAAMne,gBAAgBgH,IAAI,UAAW,CAC1C,GAAImI,GAAS6V,KAAK7G,MAAMne,gBAAgBwQ,OAAO,SAC/C,IAAIrB,GAAUlK,MAAMuB,QAAQ2I,IAAWA,EAAOpR,OAAS,EAAG,CACtD,GAAI8B,GAAQsP,EAAOjK,QAAQgK,EACvBrP,IAAS,GACTmlB,KAAK7G,MAAM05C,YAAY88B,SAAS90F,OAMpDo0F,EAAiBj7E,UAAUw7E,qBAAuB,SAAUrkF,GACxD,GAAIkvC,GAAWlvC,EAASkvC,QACxB,IAAkC,OAA9Br6B,KAAKkvE,sBACLlvE,KAAKkvE,qBAAqBn2F,OAAS,GACpB,OAAfinB,KAAKhc,WACkB,KAAhBgc,KAAK8hC,OAAwB,CACpC,IAAK,GAAI1U,GAAI,EAAGA,EAAIptB,KAAKkvE,qBAAqBn2F,OAAQq0C,IAAK,CACvD,GAAIwiD,IAAQ,CACZ,IAAI5vE,KAAKkvE,qBAAqB91F,OAAOC,SAAS+zC,EAAE9zC,WAAY,KAAKP,OAAS,GAAM,EAAG,CAC/E,GAAI82F,GAAY7vE,KAAKkvE,qBAAqB91F,OAAOC,SAAS+zC,EAAE9zC,WAAY,IAC/C,KAArBu2F,EAAU92F,SAKV82F,GAJWA,EAAU,GAAK,GACfA,EAAU,GAAK,GACfA,EAAU,GAAK,GACfA,EAAU,GAAK,IAE1BD,GAAQ,EAIZ,KAAK,GAFD1iF,GAAQ,GAAIjN,OAAM4vF,EAAU92F,OAAS,GACrCkQ,EAAQ,EACH9P,EAAI,EAAGA,EAAI02F,EAAU92F,OAAQI,GAAQ,EAC1C+T,EAAM9T,OAAOC,SAAS4P,EAAM3P,WAAY,MAAQu2F,EAAUz2F,OAAOC,SAASF,EAAEG,WAAY,KAAMu2F,EAAU12F,EAAI,IAC5G8P,GAEJ,IAAI6mF,GAAgB7mF,EAAiB,EAARA,EAAa,EACtCkuC,EAAa,GAAIl3C,OAAM6vF,EAC3B,IAAI9vE,KAAKqvE,uBAAwB,CAC7B,GAAIU,MACAC,KACA73F,EAAQ6nB,KAAKiwE,kBAAkB/iF,EAAO6iF,EAAIC,EAC9CD,GAAK53F,EAAM+3F,UACXF,EAAK73F,EAAMg4F,SAEX,KAAK,GADDt1F,GAAQ,EACH3B,EAAI,EAAGA,EAAI42F,EAAgB,EAAG52F,GAAQ,EAC3Ci+C,EAAW/9C,OAAOC,SAASH,EAAEI,WAAY,KAAO4T,EAAM9T,OAAOC,SAASwB,EAAMvB,WAAY,KACxF69C,EAAWj+C,EAAI,GAAK62F,EAAG32F,OAAOC,SAASwB,EAAMvB,WAAY,KACzD69C,EAAWj+C,EAAI,GAAK82F,EAAG52F,OAAOC,SAASwB,EAAMvB,WAAY,KACzDuB,QAIJ,IAAIoO,EAAQ,GAAM,EACd6mF,EAAgB7mF,EAChBkuC,EAAa,GAAIl3C,OAAM6vF,GACvB34C,EAAajqC,MAEZ,IAAIjE,EAAQ,GAAM,EAAG,CACtB6mF,EAAgB7mF,EAAQ,EACxBkuC,EAAa,GAAIl3C,OAAM6vF,EACvB,KAAS52F,EAAI,EAAGA,EAAIgU,EAAMnU,OAAQG,IAC9Bi+C,EAAW/9C,OAAOC,SAASH,EAAEI,WAAY,KAAO4T,EAAM9T,OAAOC,SAASH,EAAEI,WAAY,SAGvF,CACDw2F,EAAgB7mF,EAAQ,EACxBkuC,EAAa,GAAIl3C,OAAM6vF,EACvB,KAAS52F,EAAI,EAAGA,EAAIgU,EAAMnU,OAAQG,IAC9Bi+C,EAAW/9C,OAAOC,SAASH,EAAEI,WAAY,KAAO4T,EAAM9T,OAAOC,SAASH,EAAEI,WAAY,IAExF69C,GAAW24C,EAAgB,GAAK5iF,EAAMA,EAAMnU,OAAS,GAI7D,GADAo+C,EAAW24C,EAAgB,GAAK5iF,EAAMA,EAAMnU,OAAS,GAClC,OAAfo+C,EAAqB,CAErB,IAAK,GADD+B,GAAmB/B,EACdxyC,EAAI,EAAGA,EAAIu0C,EAAiBngD,OAAQ4L,IAAK,CAC9C,GAAIyrF,GAAUl3C,EAAiB9/C,OAAOC,SAASsL,EAAErL,WAAY,IAC7D4/C,GAAiB9/C,OAAOC,SAASsL,EAAErL,WAAY,MAAQ82F,EAAQ,IAAMA,EAAQ,IAEjF,GAAIC,GAAQ,GAAI/5C,IACZg6C,EAAQ,IACZ,IAAIV,EAAO,CACP,GAAIhtF,GAAQsK,EAAM,GAAG,GAAKA,EAAM,GAAG,GAC/BjT,EAASiT,EAAM,GAAG,GAAKA,EAAM,GAAG,EACpCmjF,GAAM93C,WAAWrrC,EAAM,GAAG,QAAcA,EAAM,GAAG,GAAKjT,MAAiB2I,EAAO3I,IAC9Eq2F,EAAQ,GAAIh6C,KACNG,WAAa45C,EAAM55C,WACzB65C,EAAM95C,QAAU65C,EAAM75C,YAEA,KAAjBtpC,EAAMnU,QACXs3F,EAAMh5C,QAAQnqC,EAAM,GAAG,IAAKA,EAAM,GAAG,GAAIA,EAAM,GAAG,IAAKA,EAAM,GAAG,KAChEojF,EAAQ,GAAIh6C,KACNG,WAAa45C,EAAM55C,WACzB65C,EAAM95C,QAAU65C,EAAM75C,UAGtB65C,EAAMp3C,iBAAiBC,IACvBo3C,EAAQ,GAAIh6C,KACNG,WAAa45C,EAAM55C,WACzB65C,EAAM95C,QAAU0C,EAEpB,IAAI00B,GAAY,GAAI/qB,IAAO7iC,KAAKhc,MAAOgc,KAAKuqD,OAAO3nE,MAInD,IAHIod,KAAKpK,YACLg4D,EAAUhsB,SAAWhjC,aAAWva,WAER,KAAjB2b,KAAK66D,SAA2B76D,KAAK24D,SAAW,EAAG,CAC1D,GAAInuE,GAAQ6vC,EAASE,MACrBF,GAASgO,gBAAgBroC,KAAK24D,UAC9Bt+B,EAASyG,SAASwvC,EAAO1iB,GACzBvzB,EAASK,QAAQlwC,OAGjB6vC,GAASyG,SAASwvC,EAAO1iB,KAKrC5tD,KAAKsnE,aACLtnE,KAAK/G,QAAWvW,EAAGsd,KAAK/G,OAAOvW,EAC3BC,EAAIqd,KAAK7G,MAAM1e,KAAK,IAAMulB,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,QACtD2I,MAAOod,KAAK/G,OAAOrW,MACnB3I,OAAQ+lB,KAAK/G,OAAOhf,SAGhC,MAAOkR,IAEX8jF,EAAiBj7E,UAAUi8E,kBAAoB,SAAU/iF,EAAO6iF,EAAIC,GAChE,GAAc,OAAV9iF,EACA,KAAM,IAAIrT,OAAM,kBAEpB,IAAI02F,GAAarjF,EAAMnU,OAAS,CAChC,IAAIw3F,EAAa,EACb,KAAM,IAAI12F,OAAM,qDAED,KAAf02F,IAEAP,IAAQ,GADRD,KAAS,EAAI7iF,EAAM,GAAG,GAAKA,EAAM,GAAG,IAAM,GAAM,EAAIA,EAAM,GAAG,GAAKA,EAAM,GAAG,IAAM,KAClE,GAAG,GAAKA,EAAM,GAAG,GAAM,EAAI6iF,EAAG,GAAG,GAAK7iF,EAAM,GAAG,KAGlE,KAAK,GADDsjF,MACKt3F,EAAI,EAAGA,EAAIq3F,EAAa,IAAKr3F,EAClCs3F,EAAYp3F,OAAOC,SAASH,EAAEI,WAAY,KAAO,EAAI4T,EAAM9T,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAK,EAAI4T,EAAMhU,EAAI,GAAG,EAExHs3F,GAAY,GAAKtjF,EAAM,GAAG,GAAK,EAAIA,EAAM,GAAG,GAC5CsjF,EAAYD,EAAa,IAAM,EAAIrjF,EAAMqjF,EAAa,GAAG,GAAKrjF,EAAM9T,OAAOC,SAASk3F,EAAWj3F,WAAY,KAAK,IAAM,CAEtH,KAAK,GADDm3F,GAASzwE,KAAK0wE,uBAAuBF,GAChCt3F,EAAI,EAAGA,EAAIq3F,EAAa,IAAKr3F,EAClCs3F,EAAYp3F,OAAOC,SAASH,EAAEI,WAAY,KAAO,EAAI4T,EAAM9T,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAK,EAAI4T,EAAMhU,EAAI,GAAG,EAExHs3F,GAAY,GAAKtjF,EAAM,GAAG,GAAK,EAAIA,EAAM,GAAG,GAC5CsjF,EAAYD,EAAa,IAAM,EAAIrjF,EAAMqjF,EAAa,GAAG,GAAKrjF,EAAM9T,OAAOC,SAASk3F,EAAWj3F,WAAY,KAAK,IAAM,CACtH,IAAIq3F,GAAS3wE,KAAK0wE,uBAAuBF,EACzCT,GAAK,GAAI9vF,OAAMswF,GACfP,EAAK,GAAI/vF,OAAMswF,EACf,KAASr3F,EAAI,EAAGA,EAAIq3F,IAAcr3F,EAE9B,GADA62F,EAAG32F,OAAOC,SAASH,EAAEI,WAAY,MAAQm3F,EAAOr3F,OAAOC,SAASH,EAAEI,WAAY,KAAMq3F,EAAOv3F,OAAOC,SAASH,EAAEI,WAAY,MACrHJ,EAAIq3F,EAAa,EACjBP,EAAG52F,OAAOC,SAASH,EAAEI,WAAY,MAAQ,EAAI4T,EAAMhU,EAAI,GAAG,GAAKu3F,EAAOv3F,EAAI,GAAI,EAAIgU,EAAMhU,EAAI,GAAG,GAAKy3F,EAAOz3F,EAAI,QAE9G,CACD,GAAIwJ,IAAKwK,EAAM9T,OAAOC,SAASk3F,EAAWj3F,WAAY,KAAK,GAAKm3F,EAAOF,EAAa,IAAM,EACtF5tF,GAAKuK,EAAM9T,OAAOC,SAASk3F,EAAWj3F,WAAY,KAAK,GAAKq3F,EAAOJ,EAAa,IAAM,CAC1FP,GAAG52F,OAAOC,SAASH,EAAEI,WAAY,MAAQoJ,EAAGC,GAGpD,OAASutF,UAAWH,EAAII,UAAWH,IAEvCf,EAAiBj7E,UAAU08E,uBAAyB,SAAUF,GAC1D,GAAIvnF,GAAQunF,EAAYz3F,OACpB63F,KACAC,KACAC,EAAU,CACdF,GAAO,GAAKJ,EAAY,GAAKM,CAC7B,KAAS53F,EAAI,EAAGA,EAAI+P,EAAO/P,IACvB23F,EAAUz3F,OAAOC,SAASH,EAAEI,WAAY,KAAO,EAAIw3F,EACnDA,GAAW53F,EAAI+P,EAAQ,EAAI,EAAM,KAAO4nF,EAAUz3F,OAAOC,SAASH,EAAEI,WAAY,KAChFs3F,EAAOx3F,OAAOC,SAASH,EAAEI,WAAY,MAAQk3F,EAAYp3F,OAAOC,SAASH,EAAEI,WAAY,KAAOs3F,EAAO13F,EAAI,IAAM43F,CAEnH,KAAK,GAAI53F,GAAI,EAAGA,EAAI+P,EAAO/P,IACvB03F,EAAO3nF,EAAQ/P,EAAI,IAAM23F,EAAU5nF,EAAQ/P,GAAK03F,EAAO3nF,EAAQ/P,EAEnE,OAAO03F,IAEX3B,EAAiBj7E,UAAUu7E,cAAgB,WACvC,GAAIxnE,GAAQ/H,KACR+wE,IACqB,QAArB/wE,KAAK6lE,aAA6D,IAApC7lE,KAAKmvE,oBAAoBp2F,SAAgBinB,KAAKovE,aAC5EpvE,KAAKkvE,qBAAqB8B,QAAQhxE,KAAK6lE,YAE3C,IAAIoL,GAAUr5E,GAAgBoI,KAAKkvE,qBAAsBlvE,KAAKmvE,oBAC9D,IAAkC,OAA9BnvE,KAAKkvE,uBAAkC+B,EAAS,CAChD,IAAS/3F,EAAI,EAAGA,EAAI8mB,KAAKkvE,qBAAqBn2F,OAAQG,IAAK,CACvD,GAAIs+D,GAAUx3C,KAAKkvE,qBAAqB91F,OAAOC,SAASH,EAAEI,WAAY,KAAK89C,OAC3E25C,GAAcz1F,KAAKk8D,GAEvBx3C,KAAK1U,YAAY9C,OAAO,UAAWuoF,GAEnC/wE,KAAKkvE,qBAAqBn2F,OAAS,KAAOk4F,GAAWjxE,KAAKovE,cAC1DpvE,KAAKkvE,qBAAqBlkF,QAAQ,SAAUwsD,GACxCzvC,EAAMonE,oBAAoB7zF,KAAKk8D,GAC/BzvC,EAAMqnE,aAAc,GAG5B,IAAI1T,GAAiB17D,KAAKtG,qBACtBw3E,GAAyB,CAC7B,IAAIxV,GAAkBA,EAAe3iF,OAAS,GAAkC,gBAAtB2iF,GAAe,IAAgD,gBAAtBA,GAAe,KAA0C,IAAtBA,EAAe,IAAkC,IAAtBA,EAAe,IAAW,CACvLwV,GAAyB,CACzB,KAAK,GAAIh4F,GAAI,EAAGA,EAAI63F,EAAch4F,OAAQG,IAGtC,IAAK,GADDi4F,GADA35B,EAAUu5B,EAAc33F,OAAOC,SAASH,EAAEI,WAAY,KAEjDH,EAAI,EAAGA,EAAIq+D,EAAQz+D,OAAQI,GAAQ,EAAG,CAC3C,GAAIuJ,GAAI80D,EAAQp+D,OAAOC,SAASF,EAAEG,WAAY,KAC1CqJ,EAAI60D,EAAQr+D,EAAI,EACpBuJ,IAAQg5E,EAAe,GACnB17D,KAAK7G,MAAMne,gBAAgBgH,IAAI,cAAgBge,KAAK7G,MAAMne,gBAAgBgH,IAAI,YAAoC,IAAtB05E,EAAe,IAAYA,EAAe,GAAK,EAC3I/4E,GAAQ+4E,EAAe,GAGvB/4E,GAAQ+4E,EAAe,GAE3ByV,EAAgB/3F,OAAOC,SAASF,EAAEG,WAAY,KAAOoJ,EACrDyuF,EAAgBh4F,EAAI,GAAKwJ,EACzBouF,EAAc33F,OAAOC,SAASH,EAAEI,WAAY,KAAO63F,EAG3DnxE,KAAK1U,YAAY9C,OAAO,UAAWuoF,GAEvC,MAAI/wE,MAAKqvE,wBAA0B6B,EACxBlxE,KAAK0vE,mBAAmBqB,IAG1B/wE,KAAKsnE,YACNtnE,KAAKoxE,yBAAyBL,IAE1B/wE,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAGqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,UAG7Eg1F,EAAiBj7E,UAAUo9E,yBAA2B,SAAUL,GAC5D,IAAK,GAAI73F,GAAI,EAAGA,EAAI63F,EAAch4F,OAAQG,IAAK,CAE3C,IAAK,GADDs+D,MACKr+D,EAAI,EAAGA,EAAI43F,EAAc33F,OAAOC,SAASH,EAAEI,WAAY,KAAKP,OAAQI,IACzEq+D,EAAQl8D,KAAKy1F,EAAc33F,OAAOC,SAASH,EAAEI,WAAY,KAAKF,OAAOC,SAASF,EAAEG,WAAY,KAEhG0mB,MAAKkvE,qBAAqB91F,OAAOC,SAASH,EAAEI,WAAY,KAAOk+D,IAGvEy3B,EAAiBj7E,UAAU07E,mBAAqB,SAAUqB,GACtD,GAAI93E,IAAU,EAAG,EAAG,EAAG,EACnB+G,MAAKw2B,UACLx2B,KAAK/G,QAAWvW,EAAGsd,KAAKw2B,QAAQ,GAAI7zC,EAAGqd,KAAKw2B,QAAQ,GAAI5zC,MAAOod,KAAKw2B,QAAQ,GAAIv8C,OAAQ+lB,KAAKw2B,QAAQ,KAEzGv9B,GAAU+G,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAGqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,OACvE,IAAI4zE,GAAc7tD,KAAKuqD,OAAO3nE,KAC9B,IAAkC,OAA9Bod,KAAKkvE,sBACDlvE,KAAKkvE,qBAAqBn2F,OAAS,EAAG,CAEtC,IAAK,GADDs4F,MACKn4F,EAAI,EAAGA,EAAI8mB,KAAKkvE,qBAAqBn2F,OAAQG,IAAK,CACvD,GAAIo4F,GAAUtxE,KAAKkvE,qBAAqB91F,OAAOC,SAASH,EAAEI,WAAY,IACtE,IAAgB,OAAZg4F,GACIA,EAAQv4F,OAAS,GAAM,EACvB,IAASI,EAAI,EAAGA,EAAIm4F,EAAQv4F,OAAQI,IAChCk4F,EAAU/1F,KAAKg2F,EAAQl4F,OAAOC,SAASF,EAAEG,WAAY,MAKrE,GAAIi4F,IAAc,CACbvxE,MAAKpK,WAAkC,IAArBy7E,EAAUt4F,SAC7Bw4F,GAAc,EACdF,EAAU/1F,KAAM+1F,EAAU,GAAK,GAC/BA,EAAU/1F,KAAM+1F,EAAU,GAAK,GAInC,KAAK,GAFDG,GAAkB,GAAIvxF,OAAMoxF,EAAUt4F,OAAS,GAC/CkQ,EAAQ,EACH9P,EAAI,EAAGA,EAAIk4F,EAAUt4F,OAAQI,GAAQ,EAC1Cq4F,EAAgBp4F,OAAOC,SAAS4P,EAAM3P,WAAY,MAAQ+3F,EAAUj4F,OAAOC,SAASF,EAAEG,WAAY,KAC9F+3F,EAAUl4F,EAAI,IAClB8P,GAEJ,IAAI+W,KAAKpK,UACL,GAAI47E,EAAgBz4F,OAAS,EAAG,CAM5B,IAAK,GALDwlC,GAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPnhC,GAAQ,EACHrE,EAAI,EAAGA,EAAIs4F,EAAgBz4F,OAAQG,IAAK,CAC7C,GAAIgU,GAAQskF,EAAgBp4F,OAAOC,SAASH,EAAEI,WAAY,IACtDiE,IACAghC,EAAOrxB,EAAM,GACbsxB,EAAOtxB,EAAM,GACb3P,GAAQ,IAGJ2P,EAAM,GAAKqxB,EACXA,EAAOrxB,EAAM,GAERA,EAAM,GAAKuxB,IAChBA,EAAOvxB,EAAM,IAEbA,EAAM,GAAKsxB,EACXA,EAAOtxB,EAAM,GAERA,EAAM,GAAKwxB,IAChBA,EAAOxxB,EAAM,KAIzB+L,GAAUslB,EAAMC,EAAMC,EAAOF,EAAMG,EAAOF,GAC1Cxe,KAAK/G,QAAWvW,EAAGuW,EAAO,GAAItW,EAAGsW,EAAO,GAAIrW,MAAOqW,EAAO,GAAIhf,OAAQgf,EAAO,KACzE+G,KAAKsnE,YAActnE,KAAK2sD,kBACxB1zD,EAAO,GAAK+G,KAAK/G,OAAOvW,EAAImrE,EAC5B50D,EAAO,GAAK+G,KAAK/G,OAAOtW,EAAIkrE,EAC5B50D,EAAO,GAAK+G,KAAK/G,OAAOrW,MAAS,EAAIirE,EACrC50D,EAAO,GAAK+G,KAAK/G,OAAOhf,OAAU,EAAI4zE,OAKtC50D,GADA+G,KAAKw2B,QACIx2B,KAAKw2B,QAETg7C,EAAgBz4F,OAAS,EACrBinB,KAAK1U,YAAYnJ,IAAI,SAGpB6d,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAGqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,YAK/Egf,GADK83E,EACI/wE,KAAKyxE,oBAAoBD,EAAiBv4E,EAAQ40D,EAAa0jB,EAAaR,GAG5E/wE,KAAKyxE,oBAAoBD,EAAiBv4E,EAAQ40D,EAAa0jB,EAE5EvxE,MAAK/G,QAAWvW,EAAGuW,EAAO,GAAItW,EAAGsW,EAAO,GAAIrW,MAAOqW,EAAO,GAAIhf,OAAQgf,EAAO,IAGrF,MAAOA,IAEXg2E,EAAiBj7E,UAAUy9E,oBAAsB,SAAUD,EAAiBv4E,EAAQ40D,EAAa0jB,EAAaR,GAC1G,GAAIS,EAAgBz4F,OAAS,EAAG,CAM5B,IAAK,GALDwlC,GAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPnhC,GAAQ,EACHrE,EAAI,EAAGA,EAAIs4F,EAAgBz4F,OAAQG,IAAK,CAC7C,GAAIgU,GAAQskF,EAAgBp4F,OAAOC,SAASH,EAAEI,WAAY,IACtDiE,IACAghC,EAAOrxB,EAAM,GACbsxB,EAAOtxB,EAAM,GACbuxB,EAAOvxB,EAAM,GACbwxB,EAAOxxB,EAAM,GACb3P,GAAQ,IAGJ2P,EAAM,GAAKqxB,EACXA,EAAOrxB,EAAM,GAERA,EAAM,GAAKuxB,IAChBA,EAAOvxB,EAAM,IAEbA,EAAM,GAAKsxB,EACXA,EAAOtxB,EAAM,GAERA,EAAM,GAAKwxB,IAChBA,EAAOxxB,EAAM,KAIzB,GAAIwuE,GAAiB17D,KAAKtG,oBAkB1B,IAjBIT,EAAO,GAAKwlB,EACZA,EAAOxlB,EAAO,GAETyiE,IACLj9C,GAAcF,GAEdtlB,EAAO,GAAKylB,EACZA,EAAOzlB,EAAO,GAETyiE,IACLh9C,GAAcF,GAEdk9C,IACAn9C,GAAcm9C,EAAe,GAC7Bl9C,GAAck9C,EAAe,IAEjCziE,GAAUslB,EAAMC,EAAMC,EAAMC,GACxB1e,KAAKsnE,YAActnE,KAAK2sD,eAAgB,CACxC,GAAI9xC,GAAS02D,EAAc,EAAI,CAC/Bt4E,GAAO,GAAKA,EAAO,GAAK40D,EACxB50D,EAAO,GAAKA,EAAO,GAAK40D,EACxB50D,EAAO,GAAKA,EAAO,GAAM4hB,EAASgzC,EAClC50D,EAAO,GAAKA,EAAO,GAAM4hB,EAASgzC,OAKlC50D,OADwB,KAAjB+G,KAAKw2B,SAA2Bg7C,EAAgBz4F,OAAS,EACvDinB,KAAK1U,YAAYnJ,IAAI,QAGrB6d,KAAKw2B,OAMtB,QAHKx2B,KAAKsnE,YAAcyJ,GACpB/wE,KAAKoxE,yBAAyBL,GAE3B93E,GAEXg2E,EAAiBj7E,UAAUy7E,yBAA2B,WAClD,GAAI1uC,KACJ,IAAI/gC,KAAK1U,YAAYtJ,IAAI,WAGrB,IAAK,GAFDw1D,GAAUx3C,KAAK1U,YAAYpJ,SAAS,WACpC81C,KACK9+C,EAAI,EAAGA,EAAIs+D,EAAQz+D,OAAQG,IAAK,CAErC,IAAK,GADDw4F,GAAYl6B,EAAQp+D,OAAOC,SAASH,EAAEI,WAAY,KAC7CH,EAAI,EAAGA,EAAIu4F,EAAU34F,OAAQI,IAClC6+C,EAAK18C,KAAKo2F,EAAUt4F,OAAOC,SAASF,EAAEG,WAAY,KAEtDynD,GAAKzlD,KAAK08C,GACNA,EAAKj/C,SAAW24F,EAAU34F,SAC1Bi/C,MAIZ,MAAO+I,IAEJkuC,GACT1J,IAiBEoM,GAAoC,SAAU9pE,GAE9C,QAAS8pE,GAAmBvkF,EAAM1K,EAAGC,EAAGC,EAAO3I,GAC3C,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IA8BjC,OA7BA+H,GAAM6pE,MAAQxiF,eAAaC,KAC3B0Y,EAAM8pE,YAAc,GACpB9pE,EAAM+pE,YAAczhF,0BAAwB7J,KAC5CuhB,EAAMgqE,OAASniF,qBAAmBpJ,KAClCuhB,EAAMiqE,OAAQ,EACdjqE,EAAMkqE,WAAY,EAClBlqE,EAAMmqE,YAAa,EACnBnqE,EAAMoqE,SAAW,+IACjBpqE,EAAMqqE,mBAAqB,gXAC3BrqE,EAAMsqE,MAAQ,8dACdtqE,EAAMuqE,MAAQ,kQACdvqE,EAAMwqE,gBAAkB,20BACxBxqE,EAAMyqE,QAAU,sGAChBzqE,EAAM2gC,KAAO,0bACb3gC,EAAM0qE,eAAiB,0tCACvB1qE,EAAM2qE,cAAgB,oDACtB3qE,EAAM4qE,wBAA0B,0tCAChC5qE,EAAM6qE,WAAa,sOACnB7qE,EAAM8qE,qBAAuB,8tBAC7B9qE,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,aAC7B,KAATiL,IACP2a,EAAM3a,KAAOA,OAEA,KAAN1K,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmBg8C,gBAC1BlrC,EAkZX,MAlbA9B,IAAU0rE,EAAoB9pE,GAkC9B9T,OAAO+H,eAAe61E,EAAmB39E,UAAW,QAkBhD7R,IAAK,WAID,MAHI6d,MAAK1U,YAAYtJ,IAAI,UACrBge,KAAKgyE,MAAQhyE,KAAK1U,YAAYnJ,IAAI,SAE/B6d,KAAKgyE,OAqBhBvxF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAKgyE,MAAQ75F,EACb6nB,KAAK1U,YAAY9C,OAAO,OAAQwX,KAAKgyE,SAG7Cj2E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe61E,EAAmB39E,UAAW,QAkBhD7R,IAAK,WAID,MAHI6d,MAAK1U,YAAYtJ,IAAI,UACrBge,KAAK4xE,MAAQziF,GAAc6Q,KAAK1U,YAAYnJ,IAAI,QAAQgG,OAErD6X,KAAK4xE,OAqBhBnxF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAK4xE,MAAQz5F,EACb6nB,KAAK1U,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI6d,KAAK8yE,gBAAgB9yE,KAAK4xE,WAG/E71E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe61E,EAAmB39E,UAAW,cAkBhD7R,IAAK,WAID,MAHI6d,MAAK1U,YAAYtJ,IAAI,gBACrBge,KAAK8xE,YAAcvhF,GAAyByP,KAAK1U,YAAYnJ,IAAI,gBAE9D6d,KAAK8xE,aAqBhBrxF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAK8xE,YAAc35F,EACnB6nB,KAAK1U,YAAY9C,OAAO,aAAc4H,GAAgC4P,KAAK8xE,gBAGnF/1E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe61E,EAAmB39E,UAAW,SAkBhD7R,IAAK,WAID,MAHI6d,MAAK1U,YAAYtJ,IAAI,WACrBge,KAAK+xE,OAAS5hF,GAAoB6P,KAAK1U,YAAYnJ,IAAI,WAEpD6d,KAAK+xE,QAqBhBtxF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAK+xE,OAAS55F,EACd6nB,KAAK1U,YAAY9C,OAAO,QAASmH,GAA2BqQ,KAAK+xE,WAGzEh2E,YAAY,EACZC,cAAc,IAElB21E,EAAmBllB,MAAQ,SAAUzyE,EAAMuH,GACvC,GAAIi3E,GAAQ,GAAImZ,EAShB,OARAnZ,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACpBA,EAAWS,IAAI,SACfw2E,EAAMyZ,UAAY//E,GAAa3Q,GAC1Bi3E,EAAMyZ,YACPzZ,EAAM0Z,WAAa//E,GAAc5Q,KAGlCi3E,GAEXmZ,EAAmB39E,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACvDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDowF,EAAmB39E,UAAUg+D,aAAe,eACb,KAAhBhyD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,SAC3C+G,KAAK9G,SAAYxW,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAG3I,OAAQ,GAEnD,IAAI4zE,EACA7tD,MAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,QAGtBrB,EAAa,GAAIO,IAAeke,KAAKtU,kBAC9BjL,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,QAEJ,KAAhBssE,IACPA,EAAc,EAElB,IAAIprE,IAAaud,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOvW,EAAIsd,KAAK/G,OAAOrW,MACvEod,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,OAEjC,IADA+lB,KAAK1U,YAAY9C,OAAO,OAAQ/F,GAC5Bud,KAAK2sD,iBACL3sD,KAAK8mE,oBAAsB9mE,KAAK+yE,yBAC5B/yE,KAAK8mE,qBAAqB,CACtB9mE,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAInK,GAAa,GAAIO,GACrBke,MAAK8mE,oBAAoBh7E,SAASvK,WAAWgR,UAAW,CACxD,IAAIrI,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEkU,KAAK8mE,oBAAoBh7E,SAAS5B,UAAYA,EAC9C3I,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,KAAMc,GAGnCye,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAElD2xE,EAAmB39E,UAAU89D,eAAiB,SAAUC,GAEpD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,WACL,IAAKoK,KAAK8mE,qBAAuB9mE,KAAKk7D,kBAAoBl7D,KAAK1U,YAAYtJ,IAAI,QACvET,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAOlC,IANI0mE,IACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,kBAErC,OAA7BsU,KAAK8mE,oBAA8B,CACnC,GAAIt8E,GAAQwV,KAAK7G,MAAMkhC,SAASE,MAC5Bv6B,MAAK66D,QAAU,GACf76D,KAAK7G,MAAMkhC,SAASgO,gBAAgBroC,KAAK66D,SAE7C76D,KAAK7G,MAAMkhC,SAASqE,aAAa1+B,KAAK8mE,oBAAqB9mE,KAAK/G,QAChE+G,KAAK7G,MAAMkhC,SAASK,QAAQlwC,SAOxC,IADAwV,KAAKgyD,gBACAhyD,KAAK8mE,qBACF/U,EACA,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,KAClC+H,EAAY3I,EAAWiK,OAAO,IAC9B0mE,KACIhoE,IACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAK+yE,wBA0BhD,QARkC,KAAvB/yE,KAAKqnE,eAAiCrnE,KAAKqnE,eAAiBrnE,KAAK08D,UACpE18D,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpFye,MAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,GAE1DxK,GACA/xD,KAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,OAG3C2xE,EAAmB39E,UAAU++E,uBAAyB,WAClD,GAAI9T,IAAmB,EAAG,EAAGj/D,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QACxDkR,EAAW,GAAIM,IAAYwzE,EAAiBj/D,KAAKtU,iBACjD2uC,EAAWlvC,EAASkvC,QAMxB,QALAA,EAASqB,IAAI/2B,SACT3E,KAAK66D,QAAU,IACfxgC,EAASE,OACTF,EAASgO,gBAAgBroC,KAAK66D,UAE1B76D,KAAKjS,MACT,IAAKqB,gBAAaE,QACd+qC,EAASqB,IAAIn5B,OAAOvC,KAAKmyE,UACzB93C,EAASqB,IAAI96B,eAAeZ,KAAKhc,MAAOyb,iBAAeuB,KAAK,GAC5Dq5B,EAASqB,IAAIn5B,OAAOvC,KAAKoyE,mBACzB,MACJ,KAAKhjF,gBAAaM,UACd2qC,EAASqB,IAAIn5B,OAAOvC,KAAK4yE,YACzBv4C,EAASqB,IAAI96B,eAAeZ,KAAKhc,MAAOyb,iBAAeuB,KAAK,GAC5Dq5B,EAASqB,IAAIn5B,OAAOvC,KAAK6yE,qBACzB,MACJ,KAAKzjF,gBAAaG,KACd8qC,EAASqB,IAAIn5B,OAAOvC,KAAKsyE,OACzBj4C,EAASqB,IAAI96B,eAAeZ,KAAKhc,MAAOyb,iBAAeuB,KAAK,GAC5Dq5B,EAASqB,IAAIn5B,OAAOvC,KAAKuyE,gBACzB,MACJ,KAAKnjF,gBAAaC,KACdgrC,EAASqB,IAAI96B,eAAeZ,KAAKhc,MAAOyb,iBAAeuB,KAAK,GAC5Dq5B,EAASqB,IAAIn5B,OAAOvC,KAAKqyE,MACzB,MACJ,KAAKjjF,gBAAaI,OACd6qC,EAASqB,IAAIn5B,OAAO,QACpB83B,EAASqB,IAAI96B,eAAeZ,KAAKhc,MAAOyb,iBAAeuB,KAAK,GAC5Dq5B,EAASqB,IAAIn5B,OAAOvC,KAAKwyE,QACzB,MACJ,KAAKpjF,gBAAavP,IACdw6C,EAASqB,IAAIn5B,OAAOvC,KAAK0oC,MACzBrO,EAASqB,IAAI96B,eAAeZ,KAAKhc,MAAOyb,iBAAeuB,KAAK,GAC5Dq5B,EAASqB,IAAIn5B,OAAOvC,KAAKyyE,eACzB,MACJ,KAAKrjF,gBAAaK,aACd4qC,EAASqB,IAAIn5B,OAAOvC,KAAK0yE,eACzBr4C,EAASqB,IAAI96B,eAAeZ,KAAKhc,MAAOyb,iBAAeuB,KAAK,GAC5Dq5B,EAASqB,IAAIn5B,OAAOvC,KAAK2yE,yBAMjC,MAHI3yE,MAAK66D,QAAU,GACfxgC,EAASK,UAENvvC,GAEXwmF,EAAmB39E,UAAU8+E,gBAAkB,SAAU/kF,GACrD,OAAQA,GACJ,IAAKqB,gBAAaC,KACd2Q,KAAK6xE,YAAc,MACnB,MACJ,KAAKziF,gBAAaE,QACd0Q,KAAK6xE,YAAc,SACnB,MACJ,KAAKziF,gBAAaG,KACdyQ,KAAK6xE,YAAc,MACnB,MACJ,KAAKziF,gBAAaI,OACdwQ,KAAK6xE,YAAc,QACnB,MACJ,KAAKziF,gBAAavP,IACdmgB,KAAK6xE,YAAc,KACnB,MACJ,KAAKziF,gBAAaK,aACduQ,KAAK6xE,YAAc,cACnB,MACJ,KAAKziF,gBAAaM,UACdsQ,KAAK6xE,YAAc,YAG3B,MAAO7xE,MAAK6xE,aAETF,GACTpM,IAiBEvvB,GAAuC,SAAUnuC,GAEjD,QAASmuC,GAAsBtzD,EAAGC,EAAGC,EAAO3I,EAAQ+6D,GAChD,GAAIjtC,GAAQF,EAAO5T,KAAK+L,OAASA,IAWjC,OAVA+H,GAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,aAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,QAE/B,KAAb+6D,GAAyC,OAAbA,IACnCjtC,EAAMsmC,UAAY2G,GAEtBjtC,EAAM/Q,MAAQC,qBAAmB+7E,mBAC1BjrE,EA2LX,MAxMA9B,IAAU+vC,EAAuBnuC,GAejC9T,OAAO+H,eAAek6C,EAAsBhiD,UAAW,UAkBnD7R,IAAK,WACD,OAA4B,KAAjB6d,KAAKizE,SAA2BjzE,KAAK1U,YAAYtJ,IAAI,KAAM,CAClE,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,IACtC,IAAIZ,GAAcA,EAAWS,IAAI,QAAS,CACtC,GAAIomE,GAAS7mE,EAAWY,IAAI,OAC5B,IAAIlC,MAAMuB,QAAQ4mE,GACd,IAAK,GAAIlvE,GAAI,EAAGA,EAAIkvE,EAAOrvE,OAAQG,IAAK,CACpC,GAAIgR,GAAYk+D,EAAOhvE,OAAOC,SAASH,EAAEI,WAAY,IACrD,IAAI4Q,GAAaA,YAAqBG,IAAe,CACjD,GAAI6oF,GAAmBlzE,KAAKtU,gBAAgBwH,OAAOhJ,EAC/CgpF,GAAiBlxF,IAAI,QACrBge,KAAKizE,QAAUC,EAAiB/wF,IAAI,UAO5D,MAAO6d,MAAKizE,SAqBhBxyF,IAAK,SAAUtI,GAIX,GAHK6nB,KAAKpK,WAA8B,gBAAVzd,KAC1B6nB,KAAKizE,QAAU96F,GAEf6nB,KAAKpK,WAA8B,gBAAVzd,IACrB6nB,KAAKooD,SAAWjwE,GAAS6nB,KAAK1U,YAAYtJ,IAAI,KAAM,CACpD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,IACtC,IAAIZ,GAAcA,EAAWS,IAAI,QAAS,CACtC,GAAIomE,GAAS7mE,EAAWY,IAAI,OAC5B,IAAIlC,MAAMuB,QAAQ4mE,GACd,IAAK,GAAIlvE,GAAI,EAAGA,EAAIkvE,EAAOrvE,OAAQG,IAAK,CACpC,GAAIgR,GAAYk+D,EAAOhvE,OAAOC,SAASH,EAAEI,WAAY,IACrD,IAAI4Q,GAAaA,YAAqBG,IAAe,CACjD,GAAI6oF,GAAmBlzE,KAAKtU,gBAAgBwH,OAAOhJ,EAC/CgpF,GAAiBlxF,IAAI,QACrBkxF,EAAiB1qF,OAAO,KAAMrQ,GAC9B6nB,KAAKizE,QAAU96F,EACf6nB,KAAK1U,YAAYiH,UAAW,QAS5DwJ,YAAY,EACZC,cAAc,IAElBg6C,EAAsByW,MAAQ,SAAUzyE,EAAMuH,GAC1C,GAAIi3E,GAAQ,GAAIxiB,EAGhB,OAFAwiB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXxiB,EAAsBhiD,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC1DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDy0D,EAAsBhiD,UAAUg+D,aAAe,WAC3C,OAA2B,KAAhBhyD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,OAEJ,KAAhBssE,IACPA,EAAc,GAElB7tD,KAAKmzE,aACLnzE,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAElDg2C,EAAsBhiD,UAAUm/E,WAAa,WACzC,GAAIprE,GAAQ/H,IACZ,IAAIA,KAAK1U,YAAYtJ,IAAI,KAAM,CAC3B,GAAIomE,GAASpoD,KAAK1U,YAAYnJ,IAAI,IAClC,IAAIimE,EAAQ,CACR,OAA4B,KAAjBpoD,KAAKizE,SAA4C,OAAjBjzE,KAAKizE,SAAoB7qB,EAAOpmE,IAAI,QAAS,CACpF,GAAIoxF,GAAahrB,EAAOjmE,IAAI,OACxBlC,OAAMuB,QAAQ4xF,IAAeA,EAAWr6F,OAAS,GACjDq6F,EAAWpoF,QAAQ,SAAUd,GACrBA,GAAaA,YAAqBG,KAAiBH,EAAU+I,QAC7D8U,EAAMrc,gBAAgB2H,UAAUC,OAAOpJ,KAKnDk+D,EAAOpmE,IAAI,MACX8Q,GAA0Bs1D,EAAQpoD,KAAKtU,gBAAiB,KAGhEoH,GAA0BkN,KAAK1U,YAAa0U,KAAKtU,gBAAiB,KAEtE,GAAInK,GAAa,GAAIO,GACrBP,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpCZ,EAAWd,IAAI,IAAK6E,GAASnD,IAAI,UACjC,IAAIy7D,GAAiB,GAAI97D,GAGzB,IAFA87D,EAAen9D,IAAI,OAAQ6E,GAASnD,IAAI,aACxCy7D,EAAen9D,IAAI,KAAMuf,KAAKquC,eACF,KAAjBruC,KAAKizE,SAA4C,OAAjBjzE,KAAKizE,QAAkB,CAC9D,GAAIC,GAAmB,GAAIpxF,GAC3BoxF,GAAiBzyF,IAAI,OAAQ6E,GAASnD,IAAI,WAC1C+wF,EAAiBzyF,IAAI,IAAK6E,GAASnD,IAAI,eACvC+wF,EAAiBzyF,IAAI,KAAMuf,KAAKizE,QAChC,IAAI7oF,GAAM4V,KAAKtU,gBAAgB00C,mBAC/BpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI2J,EAAK8oF,GACxCA,EAAiB3gF,UAAW,EAC5BhR,EAAWd,IAAI,QAAS2J,IAE5B,GAAIF,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW0zD,GAC9CA,EAAerrD,UAAW,EAC1BhR,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,IAAKc,IAE9By0D,EAAsBhiD,UAAU89D,eAAiB,SAAUC,GAKvD,OAJkB,KAAdA,IAAwBA,GAAY,GACnC/xD,KAAKpK,WACNoK,KAAKgyD,eAELD,EAAW,CACX,GAAIG,OAAmB,EACvB,IAAIlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,IAAagoE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAI/mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD6wE,EAAiBv8D,KAAK47D,wBAAwBzwE,EAASW,SAASvK,WACpEye,MAAKs8D,2BAA2BnxE,EAAUoxE,OAG1Cv8D,MAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,QAIxCg2C,GACTj/C,IAiBEo/C,GAAkC,SAAUtuC,GAE5C,QAASsuC,GAAiBzzD,EAAGC,EAAGC,EAAO3I,EAAQo5F,GAC3C,GAAItrE,GAAQF,EAAO5T,KAAK+L,OAASA,IAWjC,OAVA+H,GAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,aAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,QAEpC,KAARo5F,GAA+B,OAARA,IAC9BtrE,EAAMurE,KAAOD,GAEjBtrE,EAAM/Q,MAAQC,qBAAmBs8E,cAC1BxrE,EAoIX,MAjJA9B,IAAUkwC,EAAkBtuC,GAe5B9T,OAAO+H,eAAeq6C,EAAiBniD,UAAW,OAkB9C7R,IAAK,WACD,OAAyB,KAAd6d,KAAKszE,MAAwBtzE,KAAK1U,YAAYtJ,IAAI,KAAM,CAC/D,GAAIwxF,GAAWxzE,KAAK1U,YAAYnJ,IAAI,IAChCqxF,GAASxxF,IAAI,SACbge,KAAKszE,KAAOE,EAASrxF,IAAI,QAGjC,MAAO6d,MAAKszE,MAqBhB7yF,IAAK,SAAUtI,GACX,GAAqB,gBAAVA,GACP,GAAI6nB,KAAKpK,WAAaoK,KAAK1U,YAAYtJ,IAAI,MAAQ7J,IAAU6nB,KAAKqzE,IAAK,CACnE,GAAIG,GAAWxzE,KAAK1U,YAAYnJ,IAAI,IAChCqxF,GAASxxF,IAAI,SACbge,KAAKszE,KAAOn7F,EACZq7F,EAAShrF,OAAO,MAAOrQ,GACvB6nB,KAAK1U,YAAYiH,UAAW,OAIhCyN,MAAKszE,KAAOn7F,GAIxB4jB,YAAY,EACZC,cAAc,IAElBm6C,EAAiBsW,MAAQ,SAAUzyE,EAAMuH,GACrC,GAAIi3E,GAAQ,GAAIriB,EAGhB,OAFAqiB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXriB,EAAiBniD,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACrDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD40D,EAAiBniD,UAAUg+D,aAAe,WACtC,OAA2B,KAAhBhyD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,OAEJ,KAAhBssE,IACPA,EAAc,GAElB7tD,KAAKmzE,aACLnzE,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAElDm2C,EAAiBniD,UAAUm/E,WAAa,WACpC,GAAI5xF,GAAa,GAAIO,GACrBP,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpCZ,EAAWd,IAAI,IAAK6E,GAASnD,IAAI,YACR,KAAd6d,KAAKszE,MACZ/xF,EAAWd,IAAI,MAAOuf,KAAKszE,MAE/B/xF,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,IAAKc,GAC1Bye,KAAK1U,YAAY9C,OAAO,UAAWwX,KAAKuqD,OAAOmP,QAAS15D,KAAKuqD,OAAOoP,QAAS35D,KAAKuqD,OAAO3nE,SAE7FuzD,EAAiBniD,UAAU89D,eAAiB,SAAUC,GAKlD,OAJkB,KAAdA,IAAwBA,GAAY,GACnC/xD,KAAKpK,WACNoK,KAAKgyD,eAELD,EAAW,CACX,GAAIG,OAAmB,EACvB,IAAIlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,IAAagoE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAI/mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD6wE,EAAiBv8D,KAAK47D,wBAAwBzwE,EAASW,SAASvK,WACpEye,MAAKs8D,2BAA2BnxE,EAAUoxE,OAG1Cv8D,MAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,QAIxCm2C,GACTp/C,IAiBEm/C,GAA2C,SAAUruC,GAErD,QAASquC,GAA0BxzD,EAAGC,EAAGC,EAAO3I,GAC5C,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAQjC,OAPA+H,GAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,aAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmBw8E,uBAC1B1rE,EAmaX,MA7aA9B,IAAUiwC,EAA2BruC,GAYrC9T,OAAO+H,eAAeo6C,EAA0BliD,UAAW,eAkBvD7R,IAAK,WAID,MAHI6d,MAAKpK,YAAcoK,KAAKynD,eACxBznD,KAAK9iB,YAAc8iB,KAAKjI,sBAErBiI,KAAKynD,cAiChBhnE,IAAK,SAAUtI,GACPA,IACA6nB,KAAKynD,aAAetvE,EAChB6nB,KAAKpK,WACLoK,KAAKynD,aAAaisB,yBAI9B33E,YAAY,EACZC,cAAc,IAElBk6C,EAA0BuW,MAAQ,SAAUzyE,EAAMuH,GAC9C,GAAIi3E,GAAQ,GAAItiB,EAGhB,OAFAsiB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXtiB,EAA0BliD,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC9DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD20D,EAA0BliD,UAAUg+D,aAAe,WAC/C,OAA2B,KAAhBhyD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpBmmB,MAAK2zE,eACL3zE,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAElDk2C,EAA0BliD,UAAU+D,mBAAqB,WACrD,GAAIiI,KAAK1U,YAAYtJ,IAAI,QAAS,CAC9B,GAAI/C,GAAQ+gB,KAAK1U,YAAYnJ,IAAI,QAC7BkwD,MAAS,EAOb,IANqB,gBAAVpzD,KACPA,EAAQ+gB,KAAK4zE,gBAAgB30F,IAE7BA,GAASA,EAAM,YAAcoL,MAC7BgoD,EAASpzD,EAAM,SAEI,KAAXozD,GAAqC,OAAXA,IAAoBpzD,GAA6B,gBAAbA,GAAM,GAAiB,CAC7F,GAAIoZ,GAAapZ,EAAM,EAEvB,IADIjF,EAAOgmB,KAAKtU,gBAAgBuM,UAAUld,QAAQsd,GAG9C,GAAkB,SADd1R,EAAO1H,EAAM,IACRkJ,KAAgB,CACrB,GAAIjO,GAAO+E,EAAM,GACb40F,EAAQ50F,EAAM,GACdmZ,EAAOnZ,EAAM,GACb9E,MAA6B,KAAV05F,GAAmC,OAAVA,EAAmB75F,EAAKS,KAAK,GAAKo5F,EAAS,EACvFt7E,MAA6B,KAATre,GAAiC,OAATA,EAAiBA,EAAO,CACxE8lB,MAAKynD,aAAe,GAAIhvD,IAAeze,GAAOue,EAAWpe,QACrC,KAATie,GAAiC,OAATA,IAC/B4H,KAAKynD,aAAarvD,KAAOA,QAER,KAATle,GAAiC,OAATA,OAAoC,KAAV25F,GAAmC,OAAVA,OAC/D,KAATz7E,GAAiC,OAATA,IACnC4H,KAAKynD,aAAa9uD,gBAAe,OAIrCqH,MAAKynD,aAAe,GAAIhvD,IAAeze,GACvCgmB,KAAKynD,aAAa9gE,KAAOiS,qBAAmBG,UAIxD,GAAIs5C,EAEA,IADIx3D,EAAQH,EAAcslB,KAAKtU,gBAAgBuM,UAAW+H,KAAKtU,gBAAgBwH,OAAOm/C,MACzE,GAET,IADIr4D,EAAOgmB,KAAKtU,gBAAgBuM,UAAUld,QAAQF,KACtCoE,EAAM,YAAcqG,MACxBqB,EAAO1H,EAAM,IAEb,GAAkB,QAAd0H,EAAKwB,KAAgB,CACrB,GAAIjO,GAAO+E,EAAM,GACb60F,EAAQ70F,EAAM,GACdmZ,EAAOnZ,EAAM,GACb9E,MAA6B,KAAV25F,GAAmC,OAAVA,EAAmB95F,EAAKS,KAAK,GAAKq5F,EAAS,EACvFv7E,MAA6B,KAATre,GAAiC,OAATA,EAAiBA,EAAO,CACxE8lB,MAAKynD,aAAe,GAAIhvD,IAAeze,GAAOue,EAAWpe,QACrC,KAATie,GAAiC,OAATA,IAC/B4H,KAAKynD,aAAarvD,KAAOA,QAER,KAATle,GAAiC,OAATA,OAAoC,KAAV45F,GAAmC,OAAVA,OAC/D,KAAT17E,GAAiC,OAATA,IACnC4H,KAAKynD,aAAa9uD,gBAAe,OAGlB,QAAdhS,EAAKwB,OACV6X,KAAKynD,aAAe,GAAIhvD,IAAeze,GACvCgmB,KAAKynD,aAAa9gE,KAAOiS,qBAAmBG,eAKvD,CACDiH,KAAKynD,aAAe,GAAIhvD,GACxB,IAAIL,GAAOnZ,EAAM,GACb0H,EAAO1H,EAAM,EAIjB,QAHoB,KAATmZ,GAAiC,OAATA,IAC/B4H,KAAKynD,aAAarvD,KAAOA,GAEX,QAAdzR,EAAKwB,KACL6X,KAAKynD,aAAa9gE,KAAOiS,qBAAmBG,cAE3C,IAAkB,QAAdpS,EAAKwB,KAAgB,CAC1B,GAAIjO,GAAO+E,EAAM,GACb9E,EAAW8E,EAAM,QACA,KAAT/E,GAAiC,OAATA,OAAuC,KAAbC,GAAyC,OAAbA,OAClE,KAATie,GAAiC,OAATA,IACnC4H,KAAKynD,aAAa9uD,gBAAe,GAGzCqH,KAAKynD,aAAa/uD,OAAS7d,OAIlC,IAAImlB,KAAK1U,YAAYtJ,IAAI,OAASge,KAAKynD,aAAc,CACtD,GAAIW,GAASpoD,KAAK1U,YAAYnJ,IAAI,IAClC,IAAIimE,EAAOpmE,IAAI,KAAM,CACjB,GAAIkI,GAAYk+D,EAAOjmE,IAAI,IAC3B,IAAkB,OAAd+H,OAA2C,KAAdA,EAA2B,CACxD,GAAI6pF,OAAiB,EACrB,IAAI9zF,MAAMuB,QAAQ0I,GACd6pF,EAAiB7pF,MAEhB,IAAIA,GAAaA,YAAqBG,IAAe,CACtD,GAAI2pF,GAAiBh0E,KAAKtU,gBAAgBwH,OAAOhJ,EAC7CjK,OAAMuB,QAAQwyF,KACdD,EAAiBC,OAGK,gBAAd9pF,KACZ6pF,EAAiB/zE,KAAK4zE,gBAAgB1pF,GAE1C,IAAI6pF,IAAmBA,EAAe,YAAc1pF,KAA8C,gBAAtB0pF,GAAe,IAAkB,CACzG,GAAIz7E,GAAa0H,KAAKtU,gBAAgBuM,UAClCpd,MAAQ,EAERA,GADAk5F,EAAe,YAAc1pF,IACrB3P,EAAc4d,EAAY0H,KAAKtU,gBAAgBwH,OAAO6gF,EAAe,KAGrEA,EAAe,EAE3B,IAAI/5F,GAAOse,EAAWvd,QAAQF,EAC9B,IAAIb,EAEA,GAAkB,WADd2M,EAAOotF,EAAe,IACjB5rF,MAAkC,SAAdxB,EAAKwB,KAAiB,CAC/C,GAAI8rF,GAAQF,EAAe,GACvB55F,MAA6B,KAAV85F,GAAmC,OAAVA,EAAmBj6F,EAAKS,KAAK,GAAKw5F,EAAS,CAC3Fj0E,MAAKynD,aAAe,GAAIhvD,IAAeze,GAAO,EAAGG,QAC5B,KAAV85F,GAAmC,OAAVA,GAChCj0E,KAAKynD,aAAa9uD,gBAAe,OAGpC,IAAkB,QAAdhS,EAAKwB,KAAgB,CAC1B,GAAIjO,GAAO65F,EAAe,GACtBG,EAAQH,EAAe,GACvB37E,EAAO27E,EAAe,GACtB55F,MAA6B,KAAV+5F,GAAmC,OAAVA,EAAmBl6F,EAAKS,KAAK,GAAKy5F,EAAS,EACvF37E,MAA6B,KAATre,GAAiC,OAATA,EAAiBA,EAAO,CACxE8lB,MAAKynD,aAAe,GAAIhvD,IAAeze,GAAOue,EAAWpe,QACrC,KAATie,GAAiC,OAATA,IAC/B4H,KAAKynD,aAAarvD,KAAOA,QAER,KAATle,GAAiC,OAATA,OAAoC,KAAVg6F,GAAmC,OAAVA,OAC/D,KAAT97E,GAAiC,OAATA,IACnC4H,KAAKynD,aAAa9uD,gBAAe,OAGpC,IAAkB,SAAdhS,EAAKwB,MACV,GAA8B,IAA1B4rF,EAAeh7F,OAAc,CAC7B,GAAImB,GAAO65F,EAAe,GACtB77E,EAAS67E,EAAe,GACxB57E,EAAQ47E,EAAe,GACvBI,EAAQJ,EAAe,EAC3B/zE,MAAKynD,aAAe,GAAIhvD,IAAeze,GAAOE,EAAMge,EAAQC,EAAOg8E,SAGpD,QAAdxtF,EAAKwB,OACV6X,KAAKynD,aAAe,GAAIhvD,IAAeze,GACvCgmB,KAAKynD,aAAa9gE,KAAOiS,qBAAmBG,cAOpE,MAAOiH,MAAKynD,cAEhBvR,EAA0BliD,UAAU4/E,gBAAkB,SAAUzrF,GAC5D,GACI6P,GADA/N,EAAW+V,KAAKtU,gBAAgBuM,SAKpC,OAHIhO,KACA+N,EAAmBgI,KAAKo0E,qBAAqBnqF,EAAU9B,IAEpD6P,GAEXk+C,EAA0BliD,UAAUogF,qBAAuB,SAAUnqF,EAAUnM,GAC3E,GAAIZ,GACAm3F,EAAUpqF,EAASqqF,QACvB,IAAID,GAAWA,EAAQE,oBAAsBF,EAAQE,mBAAmBvyF,IAAI,SAAU,CAClF,GAAImnE,GAAQkrB,EAAQE,mBAAmBpyF,IAAI,QAC3C,IAAIgnE,GAASA,EAAMnnE,IAAI,SAAU,CAC7B,GAAIwvD,GAAO2X,EAAMhnE,IAAI,QACrB,IAAIqvD,EAAM,CACN,GAAIpnD,GAAM4V,KAAKw0E,wBAAwBhjC,EAAM1zD,EAC7CZ,GAAc8iB,KAAKy0E,oBAAoBrqF,EAAKH,KAIxD,MAAO/M,IAEXg5D,EAA0BliD,UAAUygF,oBAAsB,SAAUrqF,EAAKH,GACrE,GAAIk8D,GACAnuD,CAYJ,OAXI5N,IAAOA,YAAeC,MACtB87D,EAAOl8D,EAASyB,gBAAgBwH,OAAO9I,IAEvC+7D,IACIA,YAAgBrkE,KAAkBqkE,EAAKnkE,IAAI,KAC3CgW,EAAmBmuD,EAAK36D,OAAO,KAE1BvL,MAAMuB,QAAQ2kE,KACnBnuD,EAAmBmuD,IAGpBnuD,GAAsC5N,GAEjD8rD,EAA0BliD,UAAUwgF,wBAA0B,SAAUhjC,EAAMrpD,GAI1E,IAHA,GAEI+B,GAFAwqF,GAAQ,EACRC,EAAoBnjC,GAEhBkjC,GAASC,GACTA,GAAqBA,EAAkB3yF,IAAI,QAC3C2yF,EAAoB30E,KAAK40E,cAAcD,EAAmBxsF,GAErDwsF,GAAqBA,EAAkB3yF,IAAI,WAChDkI,EAAY8V,KAAK60E,UAAUF,EAAmBxsF,GAC9CusF,GAAQ,EAGhB,OAAOxqF,IAEXgsD,EAA0BliD,UAAU6gF,UAAY,SAAUh3F,EAASsK,GAQ/D,IAPA,GAMI2sF,GANA3rB,EAAQtrE,EAAQsE,IAAI,SAEpB4yF,EAAa,EACbC,EAFa7rB,EAAMpwE,OAAS,EAEJ,EACxBsQ,EAAO,EACPqrF,GAAQ,IAEJA,IACJrrF,EAAOhR,KAAK8iB,OAAO45E,EAAaC,GAAY,GACxCD,EAAaC,KAFN,CAKX,GAAIl3F,GAASqrE,EAA6C,EAAvC/vE,OAAOC,SAASgQ,EAAK/P,WAAY,IAChDwE,IAAUA,YAAkBuM,MAC5BvM,EAASD,EAAQ6N,gBAAgBwH,OAAOpV,GAE5C,IAAIm3F,GAAMj1E,KAAKk1E,eAAe/sF,EAAMrK,EACpC,IAAIm3F,EAAM,EACNF,EAAa1rF,EAAO,MAEnB,CAAA,KAAI4rF,EAAM,GAGV,CACDP,GAAQ,CACR,OAJAM,EAAW3rF,EAAO,GAU1B,MAHIqrF,KACAI,EAAuB3rB,EAAa,EAAP9/D,EAAW,IAErCyrF,GAEX5+B,EAA0BliD,UAAU4gF,cAAgB,SAAUpjC,EAAMrpD,GAChE,GAAIgtF,GACA1jC,CAIJ,IAHID,GAAQA,EAAKxvD,IAAI,UACjBmzF,EAAY3jC,EAAKhmD,OAAO,SAExB2pF,GAAal1F,MAAMuB,QAAQ2zF,IAAmC,IAArBA,EAAUp8F,OAAc,CACjEo8F,EAAY3jC,EAAKtvD,SAAS,OAC1B,KAAK,GAAIhJ,GAAI,EAAGA,EAAIi8F,EAAUp8F,SAC1B04D,EAAM0jC,EAAU/7F,OAAOC,SAASH,EAAEI,WAAY,MAC1C0mB,KAAKo1E,aAAa3jC,EAAKtpD,IAFOjP,MAO1C,MAAOu4D,IAEXyE,EAA0BliD,UAAUohF,aAAe,SAAU3jC,EAAK3zD,GAC9D,GAAI42F,IAAQ,CACZ,IAAIjjC,GAAOA,EAAIzvD,IAAI,UAAW,CAC1B,GAAIqzF,GAAS5jC,EAAItvD,IAAI,UACjBmzF,EAAaD,EAAO,GACpBE,EAAcF,EAAO,GACrBG,EAAax1E,KAAKk1E,eAAeI,EAAYx3F,GAC7C23F,EAAcz1E,KAAKk1E,eAAeK,EAAaz3F,EAChC,KAAf03F,GAAoC,IAAhBC,EACpBf,GAAQ,EAEHc,EAAa,GAAKC,EAAc,IACrCf,GAAQ,GAGhB,MAAOA,IAEXx+B,EAA0BliD,UAAUkhF,eAAiB,SAAUG,EAAQv3F,GAKnE,IAAK,GAJDc,GAAYpC,EAAe64F,GAC3BK,EAAal5F,EAAesB,GAC5B63F,EAAat9F,KAAKY,IAAI2F,EAAU7F,OAAQ28F,EAAW38F,QACnD68F,EAAc,EACT18F,EAAI,EAAGA,EAAIy8F,GAII,KADpBC,EAFWh3F,EAAUxF,OAAOC,SAASH,EAAEI,WAAY,KACvCo8F,EAAWt8F,OAAOC,SAASH,EAAEI,WAAY,MAFzBJ,KAWhC,MAHoB,KAAhB08F,IACAA,EAAch3F,EAAU7F,OAAS28F,EAAW38F,QAEzC68F,GAEX1/B,EAA0BliD,UAAU2/E,aAAe,WAC3C3zE,KAAK9iB,aACL8iB,KAAK1U,YAAY7K,IAAI,OAAQuf,KAAK9iB,YAAY24F,SAGtD3/B,EAA0BliD,UAAU89D,eAAiB,SAAUC,GAQ3D,OAPkB,KAAdA,IAAwBA,GAAY,GACnC/xD,KAAKpK,UAGDoK,KAAKynD,cACVznD,KAAK1U,YAAY9C,OAAO,OAAQwX,KAAKynD,aAAaouB,QAHlD71E,KAAKgyD,eAKLD,EAAW,CACX,GAAIG,OAAmB,EACvB,IAAIlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,IAAagoE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAI/mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD6wE,EAAiBv8D,KAAK47D,wBAAwBzwE,EAASW,SAASvK,WACpEye,MAAKs8D,2BAA2BnxE,EAAUoxE,OAG1Cv8D,MAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,QAIxCk2C,GACTn/C,IAyBEk/C,GAA0C,SAAUpuC,GAEpD,QAASouC,GAAyBvzD,EAAGC,EAAGC,EAAO3I,EAAQ67F,EAAYC,EAAUC,EAAU5oF,GACnF,GAAI2a,GAAQF,EAAO5T,KAAK+L,OAASA,IAgBjC,OAfA+H,GAAMkuE,gBAAiB,EACvBluE,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,aAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAMmuE,iBAA+B,KAAT9oF,GAAiC,OAATA,EAAgBA,EAAO,OACjD,KAAf0oF,GAA6C,OAAfA,IACrC/tE,EAAMgvB,OAAS,GAAI+L,IAASgzC,QAER,KAAbC,GAAyC,OAAbA,IACnChuE,EAAMivB,KAAO,GAAI6L,IAAOkzC,EAAUC,GAAsB,IAE5DjuE,EAAM/Q,MAAQC,qBAAmBk/E,sBAC1BpuE,EAsLX,MAxMA9B,IAAUgwC,EAA0BpuC,GAoBpC9T,OAAO+H,eAAem6C,EAAyBjiD,UAAW,QAoBtD7R,IAAK,WACD,MAAO6d,MAAKqJ,OAqBhB5oB,IAAK,SAAUtI,GACX6nB,KAAKqJ,MAAQlxB,GAEjB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAem6C,EAAyBjiD,UAAW,OAoBtD7R,IAAK,WACD,OAAyB,KAAd6d,KAAKo2E,MAAwBp2E,KAAK1U,YAAYtJ,IAAI,KAAM,CAC/D,GAAIwxF,GAAWxzE,KAAK1U,YAAYnJ,IAAI,IAChCqxF,GAASxxF,IAAI,SACbge,KAAKo2E,KAAO5C,EAASrxF,IAAI,QAGjC,MAAO6d,MAAKo2E,MAqBhB31F,IAAK,SAAUtI,GACX,GAAqB,gBAAVA,GACP,GAAI6nB,KAAKpK,WAAaoK,KAAK1U,YAAYtJ,IAAI,KAAM,CAC7C,GAAIq0F,GAAar2E,KAAK1U,YAAYgrF,KAAK,KACnC9C,EAAWxzE,KAAK1U,YAAYnJ,IAAI,IAChCqxF,IAAYA,EAASxxF,IAAI,SACzBge,KAAKo2E,KAAOj+F,EACZq7F,EAAShrF,OAAO,MAAOrQ,GACjBk+F,YAAsBhsF,MACxB2V,KAAK1U,YAAYiH,SAAWihF,EAASjhF,eAK7CyN,MAAKo2E,KAAOj+F,GAIxB4jB,YAAY,EACZC,cAAc,IAElBi6C,EAAyBwW,MAAQ,SAAUzyE,EAAMuH,GAC7C,GAAIi3E,GAAQ,GAAIviB,EAGhB,OAFAuiB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXviB,EAAyBjiD,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC7DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD00D,EAAyBjiD,UAAUg+D,aAAe,WAC9C,OAA2B,KAAhBhyD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEfmmB,MAAKi2E,iBACNj2E,KAAKmzE,aACLnzE,KAAKi2E,gBAAiB,GAE1Bj2E,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAElDi2C,EAAyBjiD,UAAUm/E,WAAa,WAC5C,GAAI/vF,IAAQ4c,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAGqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,YAChD,KAAd+lB,KAAKzL,MAAsC,OAAdyL,KAAKzL,OACzCyL,KAAKzL,KAAOyL,KAAK+4D,iBAErB,IAAIlyD,GAAS,GAAI/B,IAAgB9G,mBAAiB9jB,KAAMsrB,uBAAqBhM,IAC7EwG,MAAK7G,MAAMkhC,SAAS0H,WAAW/hC,KAAKk2E,aAAcl2E,KAAKzL,KAAMnR,EAAM4c,KAAKg3B,KAAMh3B,KAAK+2B,OAAQlwB,EAC3F,IAAItlB,GAAa,GAAIO,GACrBP,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpCZ,EAAWd,IAAI,IAAK6E,GAASnD,IAAI,YACR,KAAd6d,KAAKo2E,MACZ70F,EAAWd,IAAI,MAAOuf,KAAKo2E,MAE/B70F,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,IAAKc,GAC1Bye,KAAK1U,YAAY9C,OAAO,UAAW,EAAG,EAAG,KAE7CytD,EAAyBjiD,UAAU89D,eAAiB,SAAUC,GAK1D,OAJkB,KAAdA,IAAwBA,GAAY,GACnC/xD,KAAKpK,WACNoK,KAAKgyD,eAELD,EAAW,CACX,GAAIG,OAAmB,EACvB,IAAIlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,IAAagoE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAI/mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD6wE,EAAiBv8D,KAAK47D,wBAAwBzwE,EAASW,SAASvK,WACpEye,MAAKs8D,2BAA2BnxE,EAAUoxE,OAG1Cv8D,MAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,QAIxCi2C,GACTl/C,IAmBEw/E,GAAyC,SAAU1uE,GAEnD,QAAS0uE,GAAwB7zF,EAAGC,EAAGC,EAAO3I,EAAQ+6D,EAAUpyC,GAC5D,GAAImF,GAAQF,EAAO5T,KAAK+L,OAASA,IAcjC,OAbA+H,GAAM6pE,MAAQnhF,oBAAkBC,QAChCqX,EAAM8pE,YAAc,GACpB9pE,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,uBAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,QAE/B,KAAb+6D,IACPjtC,EAAMsmC,UAAY2G,GAEtBjtC,EAAM5H,QAAU,GAAItM,IAA2B,gBAAT+O,GAAoBziB,EAAQyiB,GAAQA,GAC1EmF,EAAM/Q,MAAQC,qBAAmBu/E,yBAC1BzuE,EA4JX,MA5KA9B,IAAUswE,EAAyB1uE,GAkBnC9T,OAAO+H,eAAey6E,EAAwBviF,UAAW,QAkBrD7R,IAAK,WAID,MAHI6d,MAAK1U,YAAYtJ,IAAI,UACrBge,KAAK4xE,MAAQphF,GAAmBwP,KAAK1U,YAAYnJ,IAAI,QAAQgG,OAE1D6X,KAAK4xE,OAqBhBnxF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAK4xE,MAAQz5F,EACb6nB,KAAK1U,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI6d,KAAK8yE,gBAAgB9yE,KAAK4xE,WAG/E71E,YAAY,EACZC,cAAc,IAElBu6E,EAAwB9pB,MAAQ,SAAUzyE,EAAMuH,GAC5C,GAAIi3E,GAAQ,GAAI+d,EAGhB,OAFA/d,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX+d,EAAwBviF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC5DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDg1F,EAAwBviF,UAAUg+D,aAAe,WAC7C,OAA2B,KAAhBhyD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpBmmB,MAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,OAC9CA,KAAKy2E,kBAETF,EAAwBviF,UAAUyiF,eAAiB,WAC/C,GAAIz2E,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAI00F,GAAoB12E,KAAK1U,YAAYnJ,IAAI,KAC7C,IAAIu0F,GAAqBA,EAAkB10F,IAAI,MAAO,CAClD,GAAI+7D,GAAe24B,EAAkBv0F,IAAI,KACrC47D,IAAgBA,EAAa/7D,IAAI,MACjC8Q,GAA0BirD,EAAc/9C,KAAKtU,gBAAiB,KAGtEoH,GAA0BkN,KAAK1U,YAAa0U,KAAKtU,gBAAiB,MAEtE,GAAIirF,GAAsB,GAAI70F,GAC9B60F,GAAoBl2F,IAAI,OAAQ6E,GAASnD,IAAI,aAC7Cw0F,EAAoBl2F,IAAI,OAAQuf,KAAKquC,WACrCsoC,EAAoBl2F,IAAI,IAAKuf,KAAKquC,WAClCsoC,EAAoBl2F,IAAI,KAAMuf,KAAKquC,UACnC,IAAIuP,GAAiB,GAAI97D,GACzB87D,GAAen9D,IAAI,OAAQ6E,GAASnD,IAAI,gBACxC,IAAIg1D,GAAmB,GAAIr1D,IACvBsiF,EAAW,GAAIZ,KACnBrsB,GAAiB12D,IAAI,eAAgB2jF,EAASwS,gBAC9Cz/B,EAAiB12D,IAAI,WAAW,GAAI+iF,OAAOoT,gBAC3Cz/B,EAAiB12D,IAAI,OAAQuf,KAAKG,QAAQpnB,QAC1C6kE,EAAen9D,IAAI,SAAU02D,GAC7Bn3C,KAAKG,QAAQ5e,WAAa,GAAIO,IAC9Bke,KAAKG,QAAQ5e,WAAaq8D,EAC1BA,EAAelyD,gBAAkBsU,KAAKtU,eACtC,IAEIhP,IAFQsjB,KAAKtU,gBAAgBuU,SAAS9jB,WAAW,GACzC6jB,KAAKtU,gBAAgBuU,SAAS9jB,WAAW,GACzB,GAAI,GAAI,GAAI,GAAI,GAC5CyhE,GAAelyD,gBAAgBisD,aAAa33C,KAAKG,QAASzjB,EAC1D,IAAIwN,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAKG,SACnDy9C,EAAerrD,UAAW,CAC1B,IAAIskF,GAAkB,GAAI/0F,GAC1B+0F,GAAgBp2F,IAAI,IAAKyJ,GACzBysF,EAAoBl2F,IAAI,KAAMo2F,EAC9B,IAAIC,GAAc92E,KAAKtU,gBAAgB00C,mBACvCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIq2F,EAAaH,GAChDA,EAAoBpkF,UAAW,EAC/ByN,KAAK1U,YAAY9C,OAAO,KAAMsuF,IAElCP,EAAwBviF,UAAU89D,eAAiB,SAAUC,GAKzD,OAJkB,KAAdA,IAAwBA,GAAY,GACnC/xD,KAAKpK,WACNoK,KAAKgyD,eAELD,EAAW,CACX,GAAIG,OAAmB,EACvB,IAAIlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,IAAagoE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAI/mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD6wE,EAAiBv8D,KAAK47D,wBAAwBzwE,EAASW,SAASvK,WACpEye,MAAKs8D,2BAA2BnxE,EAAUoxE,OAG1Cv8D,MAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,QAI/Cu2E,EAAwBviF,UAAU8+E,gBAAkB,SAAU/kF,GAC1D,OAAQA,GACJ,IAAK0C,qBAAkBC,QACnBsP,KAAK6xE,YAAc,SACnB,MACJ,KAAKphF,qBAAkBE,IACnBqP,KAAK6xE,YAAc,KACnB,MACJ,KAAKphF,qBAAkBG,MACnBoP,KAAK6xE,YAAc,OACnB,MACJ,KAAKphF,qBAAkBI,UACnBmP,KAAK6xE,YAAc,YAG3B,MAAO7xE,MAAK6xE,aAET0E,GACThR,IAiBEwR,GAAiC,SAAUlvE,GAO3C,QAASkvE,KACL,GAAIhvE,GAAQF,EAAO5T,KAAK+L,OAASA,IAEjC,OADA+H,GAAM/Q,MAAQC,qBAAmB+/E,gBAC1BjvE,EAmCX,MA5CA9B,IAAU8wE,EAAiBlvE,GAW3BkvE,EAAgBtqB,MAAQ,SAAUzyE,EAAMuH,GACpC,GAAIi3E,GAAQ,GAAIue,EAGhB,OAFAve,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXue,EAAgB/iF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACpDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDw1F,EAAgB/iF,UAAU89D,eAAiB,SAAUC,GAEjD,OADkB,KAAdA,IAAwBA,GAAY,GACpCA,EAAW,CACX,GAAIG,OAAmB,EACvB,IAAIlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,IAAagoE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAI/mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD6wE,EAAiBv8D,KAAK47D,wBAAwBzwE,EAASW,SAASvK,WACpEye,MAAKs8D,2BAA2BnxE,EAAUoxE,OAG1Cv8D,MAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,QAIxC+2E,GACThgF,IAmBEkgF,GAAyC,SAAUpvE,GAEnD,QAASovE,GAAwB7pF,EAAM1K,EAAGC,EAAGC,EAAO3I,GAChD,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAajC,OAZA+H,GAAMmvE,gBAAkB5pF,8BAA4BC,UACpDwa,EAAMovE,YAAc,GAAIl3F,OAAM,GAC9B8nB,EAAMqvE,qBACNrvE,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,cAC1B,KAATiL,IACP2a,EAAMgF,MAAQ3f,OAED,KAAN1K,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmBogF,qBAC1BtvE,EA0qBX,MAzrBA9B,IAAUgxE,EAAyBpvE,GAiBnC9T,OAAO+H,eAAem7E,EAAwBjjF,UAAW,UAkBrD7R,IAAK,WAID,MAHI6d,MAAKpK,YACLoK,KAAK9G,QAAU/V,EAAiB6c,KAAK1U,YAAa0U,KAAK7G,QAEpD6G,KAAK9G,SAmBhBzY,IAAK,SAAUtI,GACX,GAAIA,EACA,GAAI6nB,KAAKpK,WACL,GAAKzd,EAAMuK,IAAMsd,KAAK/G,OAAOvW,GAAOvK,EAAMwK,IAAMqd,KAAK/G,OAAOtW,GACvDxK,EAAMyK,QAAUod,KAAK/G,OAAOrW,OAAWzK,EAAM8B,SAAW+lB,KAAK/G,OAAOhf,OAAS,CAC9E,GAAIQ,GAAOulB,KAAK7G,MAAM1e,IACtB,IAAIA,EAAM,CACN,GAAIkI,GAAIlI,EAAK,IAAMtC,EAAMwK,EAAIxK,EAAM8B,QAC/BA,EAAS0I,EAAIxK,EAAM8B,MACvB+lB,MAAK1U,YAAY9C,OAAO,QAASrQ,EAAMuK,EAAGC,EAAGxK,EAAMuK,EAAIvK,EAAMyK,MAAO3I,IACpE+lB,KAAK9G,QAAU/gB,EACf6nB,KAAKk5D,YAAa,QAIzB,CACDl5D,KAAK9G,QAAU/gB,CACf,IAAI8mF,GAAkBj/D,KAAK8kE,wBAC3B9kE,MAAK1U,YAAY9C,OAAO,OAAQ9E,GAAiBhB,EAAGu8E,EAAgB,GAAIt8E,EAAGs8E,EAAgB,GAAIr8E,MAAOq8E,EAAgB,GAAIhlF,OAAQglF,EAAgB,MAClJj/D,KAAKk5D,YAAa,IAI9Bn9D,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAem7E,EAAwBjjF,UAAW,mBAkBrD7R,IAAK,WAID,WAHqC,KAA1B6d,KAAKs3E,kBAAoCt3E,KAAK1U,YAAYtJ,IAAI,OACrEge,KAAKs3E,iBAAmBnzF,EAAY6b,KAAK1U,YAAYpJ,SAAS,OAE3D8d,KAAKs3E,kBAqBhB72F,IAAK,SAAUtI,GACX,OAAqB,KAAVA,GAA0C,IAAjBA,EAAMY,OAAc,CACpD,GAAI+gF,GAAW95D,KAAKhc,KACfgc,MAAKpK,eACc,KAAbkkE,GACNA,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,KAC/E6nB,KAAK8hC,OAAS3pD,EACd6nB,KAAKs3E,iBAAmBn/F,EACxB6nB,KAAK1U,YAAY9C,OAAO,KAAMpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IACrEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,SAI3Doe,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAem7E,EAAwBjjF,UAAW,kBAkBrD7R,IAAK,WACD,GAAI6d,KAAK1U,YAAYtJ,IAAI,WAAY,CACjC,GAAIoL,GAAO4S,KAAK1U,YAAYnJ,IAAI,UAChC6d,MAAKk3E,gBAAkB/pF,GAAyBC,EAAKjF,MAEzD,MAAO6X,MAAKk3E,iBAqBhBz2F,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAKk3E,gBAAkB/+F,EACvB6nB,KAAK1U,YAAY9C,OAAO,UAAWlD,GAASnD,IAAIuL,GAA6BvV,OAGrF4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAem7E,EAAwBjjF,UAAW,oBAkBrD7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,GAAI+iB,KACJ,IAAI3Y,KAAK1U,YAAYtJ,IAAI,cAAe,CACpC,GAAIyH,GAASuW,KAAK1U,YAAYpJ,SAAS,aACvC,IAAIuH,GAAUA,EAAO1Q,OAAS,EAE1B,IAAK,GADDkQ,GAAQQ,EAAO1Q,OAAS,EACnBG,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIwJ,GAAI+G,EAAO,EAAS,EAAJvQ,GAAUuQ,EAAW,EAAJvQ,GACjCyJ,EAAI8G,EAAO,EAAS,EAAJvQ,GAAUuQ,EAAO,EAAS,EAAJvQ,GACtCe,EAAS5B,KAAKqlF,KAAMh7E,EAAIA,EAAMC,EAAIA,EACtCD,GAAI+G,EAAO,EAAS,EAAJvQ,GAAUuQ,EAAO,EAAS,EAAJvQ,GACtCyJ,EAAI8G,EAAO,EAAS,EAAJvQ,GAAUuQ,EAAO,EAAS,EAAJvQ,EACtC,IAAI0J,GAAQvK,KAAKqlF,KAAMh7E,EAAIA,EAAMC,EAAIA,GACjCS,GAAQqG,EAAW,EAAJvQ,GAAQ8mB,KAAK7G,MAAM1e,KAAK,GAAKgP,EAAO,EAAS,EAAJvQ,GAAS0J,EAAO3I,EAC5E0+B,GAAWr9B,KAAK8H,IAI5B,MAAOu1B,GAEX,MAAO3Y,MAAKo3E,mBAqBhB32F,IAAK,SAAUtI,GACX,IAAK6nB,KAAKpK,eAA8B,KAAVzd,EAAuB,CACjD,GAAIA,EAAMY,OAAS,EAAG,CAClBinB,KAAKm3E,YAAc,GAAIl3F,OAAsB,EAAf9H,EAAMY,OACpC,KAASG,EAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAC9B8mB,KAAKo3E,kBAAkB97F,KAAKnD,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,UAIpE0mB,MAAKm3E,YAAc,GAAIl3F,OAAM,GAC7B+f,KAAKo3E,kBAAoBj/F,CAE7B6nB,MAAKk5D,YAAa,EAEtB,GAAIl5D,KAAKpK,eAA8B,KAAVzd,EAAuB,CAChD,GAAIo/F,IAAY,CAChB,IAAIv3E,KAAKw3E,iBAAiBz+F,SAAWZ,EAAMY,QACvC,IAASG,EAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAE9B,IAAK,GADDiC,GAAShD,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KACxCH,EAAI,EAAGA,EAAIgC,EAAOpC,OAAQI,IAC/B,GAAIhB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAKF,OAAOC,SAASF,EAAEG,WAAY,OACvE0mB,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAKF,OAAOC,SAASF,EAAEG,WAAY,KAAM,CAC7Fi+F,GAAY,CACZ,YAMZA,IAAY,CAEhB,IAAIA,EAAW,CACXv3E,KAAKm3E,YAAc,GAAIl3F,OAAsB,EAAf9H,EAAMY,OAEpC,KAAK,GADD8K,GAAamc,KAAK7G,MAAM1e,KAAK,GACxBvB,EAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAC9B8mB,KAAKm3E,YAAY,EAAyC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,KAAYnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACzG0mB,KAAKm3E,YAAY,EAAyC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,KAAYuK,EAC5D1L,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC7C0mB,KAAKm3E,YAAY,EAAyC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,KAAYnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrGnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC7C0mB,KAAKm3E,YAAY,EAAyC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,KAAYuK,EAC5D1L,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC7C0mB,KAAKm3E,YAAY,EAAyC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,KAAYnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACzG0mB,KAAKm3E,YAAY,EAAyC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,KAAY0mB,KAAKm3E,YAAY,EAAS,EAAJj+F,GAClFf,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC7C0mB,KAAKm3E,YAAY,EAAyC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,KAAYnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrGnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC7C0mB,KAAKm3E,YAAY,EAAyC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,KAAY0mB,KAAKm3E,YAAY,EACxC,EAApC/9F,OAAOC,SAASH,EAAEI,WAAY,IAEvC0mB,MAAK1U,YAAY9C,OAAO,aAAcwX,KAAKm3E,aAC3Cn3E,KAAKk5D,YAAa,KAI9Bn9D,YAAY,EACZC,cAAc,IAElBi7E,EAAwBxqB,MAAQ,SAAUzyE,EAAMuH,GAC5C,GAAIi3E,GAAQ,GAAIye,EAGhB,OAFAze,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXye,EAAwBjjF,UAAU8wE,uBAAyB,WACvD,GACIpJ,GADAuD,GAAmBj/D,KAAK9G,QAAQxW,EAAGsd,KAAK9G,QAAQvW,EAAIqd,KAAK9G,QAAQjf,OAAQ+lB,KAAK9G,QAAQtW,MAAOod,KAAK9G,QAAQjf,OAE9G,IAAI+lB,KAAK7G,MAAO,CACZ,GAAI1e,GAAOulB,KAAK7G,MAAM1e,IACtBwkF,GAAgB,GAAKxkF,EAAK,GAAKwkF,EAAgB,GAC/CvD,EAAiB17D,KAAKtG,qBAE1B,GAAIgiE,EAAgB,CAChB,GAAIA,EAAe,GAAK,EAAG,CACvB,GAAI+b,GAAQ/b,EAAe,GACvBgc,EAAahc,EAAe,EAChCA,GAAe,GAAKgc,EACpBhc,EAAe,GAAK+b,EAEpB/b,EAAe3iF,OAAS,IAA4B,IAAtB2iF,EAAe,IAAkC,IAAtBA,EAAe,MACxEuD,EAAgB,IAAMvD,EAAe,GACjC17D,KAAK7G,OAAS6G,KAAK7G,MAAMne,gBAAgBgH,IAAI,cAAgBge,KAAK7G,MAAMne,gBAAgBgH,IAAI,YAAc05E,EAAe,GAAK,GAA2B,IAAtBA,EAAe,GAClJuD,EAAgB,IAAMvD,EAAe,GAGrCuD,EAAgB,IAAMvD,EAAe,IAIjD,MAAOuD,IAEXgY,EAAwBjjF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC5DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD01F,EAAwBjjF,UAAUg+D,aAAe,WAC7C,OAA2B,KAAhBhyD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EACA7tD,MAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,QAGtBrB,EAAa,GAAIO,IAAeke,KAAKtU,kBAC9BjL,IAAI,OAAQ6E,GAASnD,IAAI,WACpCZ,EAAWd,IAAI,IAAKuf,KAAKuqD,OAAO3nE,OAChCod,KAAK1U,YAAY7K,IAAI,KAAMc,QAEJ,KAAhBssE,IACPA,EAAc,GAEb7tD,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKg5D,qBAAsB,EAE/B,IAAIv+E,GAAOulB,KAAK7G,MAAM1e,IAMtB,IALAulB,KAAK1U,YAAY9C,OAAO,UAAWlD,GAASnD,IAAIuL,GAA6BsS,KAAKk3E,mBAC9El3E,KAAKk5D,aACLl5D,KAAK23E,eAAel9F,GACpBulB,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAE9CA,KAAK2sD,eAAgB,CAErB,GADA3sD,KAAK8mE,oBAAsB9mE,KAAK43E,2BAC3B53E,KAAKpK,WAAaoK,KAAKo3E,kBAAkBr+F,OAAS,GAAKinB,KAAKk5D,WAAY,CACzE,GAAI2e,GAAS73E,KAAK8kE,wBAClB9kE,MAAK1U,YAAY9C,OAAO,QAASqvF,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,KAEjG73E,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAInK,GAAa,GAAIO,GACrBke,MAAK8mE,oBAAoBh7E,SAASvK,WAAWgR,UAAW,CACxD,IAAIrI,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEkU,KAAK8mE,oBAAoBh7E,SAAS5B,UAAYA,EAC9C3I,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,KAAMc,OAEL,KAAfye,KAAK+M,OAAwC,OAAf/M,KAAK+M,OAC1C/M,KAAK1U,YAAY7K,IAAI,WAAYuf,KAAK+M,OAE1C/M,KAAKk5D,YAAa,GAEtB+d,EAAwBjjF,UAAU89D,eAAiB,SAAUC,GAEzD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,UAAW,CAChB,IAAIoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAK43E,2BAC3B7lB,GAAW,CACR/xD,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAInK,GAAa,GAAIO,GACrBke,MAAK8mE,oBAAoBh7E,SAASvK,WAAWgR,UAAW,CACxD,IAAIrI,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEkU,KAAK8mE,oBAAoBh7E,SAAS5B,UAAYA,EAC9C3I,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,KAAMc,IAG9Bye,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,OACzBkwE,EAAmB3wE,EAAWY,IAAI,SAE9B+H,EAAY3I,EAAWiK,OAAO,QAE9B0mE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,sBAO9E,IADAsU,KAAKgyD,gBACAhyD,KAAK8mE,qBACF/U,EACA,GAAK/xD,KAAK1U,YAAYtJ,IAAI,OAKtB,IADIT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IAClC+vE,MACIhoE,EAAY3I,EAAWiK,OAAO,QAE9B0mE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAK43E,yBA0BhD,QARkC,KAAvB53E,KAAKqnE,eAAiCrnE,KAAKqnE,gBAC9CrnE,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpF,KAAKye,KAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,YAAcge,KAAKpK,UAAW,CAChF,GAAI/J,GAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,OAC5D2J,IACAmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAG7F0wE,OAAiD,KAAxBv8D,KAAK7G,MAAM/e,UAA4B4lB,KAAK7G,MAAM/e,WAAaC,mBAAiBme,OACzGwH,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,GAErDA,GAAkBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WAAYye,KAAK8mE,qBACvG9mE,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,IAEpDv8D,KAAK1U,YAAYtJ,IAAI,OAASge,KAAK8mE,qBACzC9mE,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAGzDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,OAGtCi3E,EAAwBjjF,UAAU4jF,wBAA0B,WACxD,GAEIn1F,GAFAG,EAAQ,EACR3I,EAAS,CAEb,IAAI+lB,KAAKw3E,iBAAiBz+F,OAAS,EAAG,CAElC,IAAK,GADD++F,GAAU,GAAIxhD,IACTp9C,EAAI,EAAGA,EAAI8mB,KAAKw3E,iBAAiBz+F,OAAQG,KAC1C+f,MACG,GAAK+G,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrE2f,EAAO,GAAK+G,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrE2f,EAAO,GAAK+G,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrE2f,EAAO,GAAK+G,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrEw+F,EAAQ5/C,aAAaj/B,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAGjExW,IAAcC,GADVU,EAAO00F,EAAQr+C,cACG,GAAI92C,EAAGS,EAAK,GAAIR,MAAOQ,EAAK,GAAInJ,OAAQmJ,EAAK,IACnE4c,KAAK/G,OAASxW,EACdG,EAAQH,EAAUG,MAClB3I,EAASwI,EAAUxI,WAGnB,IAAI+lB,KAAK1U,YAAYtJ,IAAI,cAAe,CACpC,GAAI+1F,GAAa/3E,KAAK1U,YAAYnJ,IAAI,aACtC,IAAyB,OAArB6d,KAAKm3E,YACL,IAASj+F,EAAI,EAAGA,EAAK6+F,EAAWh/F,OAAS,EAAIG,IACzC,GAAI8mB,KAAKpK,UAAW,CAGhB,IAAK,GAFD1I,GAAQ,GAAIjN,OACZ9G,EAAI,EACCwL,EAAI,EAAGA,EAAIozF,EAAWh/F,QAAS,CACpC,GAAI+J,GAAKi1F,EAAW3+F,OAAOC,SAASsL,EAAErL,WAAY,KAC9CyJ,EAAKg1F,EAAWpzF,EAAI,EACxBuI,GAAM9T,OAAOC,SAASF,EAAEG,WAAY,MAAQwJ,EAAIC,GAChD4B,GAAQ,EACRxL,IAEJ,GAAI4nD,GAAO,GAAIzK,GACfyK,GAAKxJ,UAAUrqC,GAGftK,GADAH,GAAcC,GADVU,EAAO29C,EAAKtH,cACM,GAAI92C,EAAGS,EAAK,GAAIR,MAAOQ,EAAK,GAAInJ,OAAQmJ,EAAK,KACjDR,MAClB3I,EAASwI,EAAUxI,WAElB,CACD,GAAIyI,GAAIrK,KAAK8iB,MAAM48E,EAAW,EAAS,EAAJ7+F,IAAWb,KAAK8iB,MAAM48E,EAAW,EAAS,EAAJ7+F,IACrEyJ,EAAItK,KAAK8iB,MAAM48E,EAAW,EAAS,EAAJ7+F,IAAWb,KAAK8iB,MAAM48E,EAAW,EAAS,EAAJ7+F,GACzEe,GAAS5B,KAAKqlF,KAAMh7E,EAAIA,EAAMC,EAAIA,GAClCD,EAAIrK,KAAK8iB,MAAM48E,EAAW,EAAS,EAAJ7+F,IAAWb,KAAK8iB,MAAM48E,EAAW,EAAS,EAAJ7+F,IACrEyJ,EAAItK,KAAK8iB,MAAM48E,EAAW,EAAS,EAAJ7+F,IAAWb,KAAK8iB,MAAM48E,EAAW,EAAS,EAAJ7+F,IACrE0J,EAAQvK,KAAKqlF,KAAMh7E,EAAIA,EAAMC,EAAIA,GACjCqd,KAAK/G,QAAWvW,EAAGsd,KAAK/G,OAAOvW,EAAGC,EAAGqd,KAAK/G,OAAOtW,EAAGC,MAAOA,EAAO3I,OAAQA,IAM9F,GACIkR,GAAW,GAAIM,KADI,EAAG,EAAG7I,EAAO3I,GACY+lB,KAAKtU,gBACrDE,IAAWT,EAAU6U,KAAKi7D,oBAC1B,IAAI5gC,GAAWlvC,EAASkvC,QAIxB,QAH4B,KAAjBr6B,KAAK66D,SACZxgC,EAASgO,gBAAgBroC,KAAK66D,QAAS76D,KAAK66D,QAAS3zE,eAAaC,UAElE6Y,KAAKg4E,gBAAiB,CACtB,GAAIC,GAAS,GAAIp1C,IAAO7iC,KAAKg4E,gBAAiBh4E,KAAKuqD,OAAO3nE,OACtDu6C,EAAQ,GAAI2F,IAAS9iC,KAAKg4E,iBAC1Bl1F,EAAK,EACLC,EAAK,EACLm1F,EAAK,EACLC,EAAK,CACT,IAAIn4E,KAAKw3E,iBAAiBz+F,OAAS,EAC/B,IAASG,EAAI,EAAGA,EAAI8mB,KAAKw3E,iBAAiBz+F,OAAQG,IAAK,CACnD,GAAI+f,KACJA,GAAO,GAAK+G,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrE2f,EAAO,GAAK+G,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrE2f,EAAO,GAAK+G,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACrE2f,EAAO,GAAK+G,KAAKw3E,iBAAiBp+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACjE0mB,KAAKo4E,iBAAmB9qF,8BAA4BC,UACpD8sC,EAASyC,cAAc7jC,EAAO,GAAKxW,EAAUC,EAAGuW,EAAO,GAAKxW,EAAUE,EAAGsW,EAAO,GAAIA,EAAO,GAAIkkC,GAE1Fn9B,KAAKo4E,iBAAmB9qF,8BAA4BjI,WACzDvC,EAAKmW,EAAO,GAAKxW,EAAUC,EAC3BK,EAAMkW,EAAO,GAAKxW,EAAUE,GAAMsW,EAAO,GAAOA,EAAO,GAAK,EAAK,GACjEi/E,EAAKj/E,EAAO,IAAMA,EAAO,GAAKxW,EAAUC,GACxCy1F,EAAMl/E,EAAO,GAAKxW,EAAUE,GAAMsW,EAAO,GAAOA,EAAO,GAAK,EAAK,GACjEohC,EAASgN,SAAS4wC,EAAQn1F,EAAIC,EAAIm1F,EAAIC,IAEjCn4E,KAAKo4E,iBAAmB9qF,8BAA4BG,WACzD3K,EAAKmW,EAAO,GAAKxW,EAAUC,EAC3BK,EAAMkW,EAAO,GAAKxW,EAAUE,GAAMsW,EAAO,GAAMA,EAAO,GAAK,GAC3Di/E,EAAKj/E,EAAO,IAAMA,EAAO,GAAKxW,EAAUC,GACxCy1F,EAAMl/E,EAAO,GAAKxW,EAAUE,GAAMsW,EAAO,GAAMA,EAAO,GAAK,GAC3DohC,EAASgN,SAAS4wC,EAAQn1F,EAAIC,EAAIm1F,EAAIC,IAEjCn4E,KAAKo4E,iBAAmB9qF,8BAA4BE,WACzDyqF,EAAOnvE,OAAqB,IAAZ7P,EAAO,GACvBohC,EAASE,OACTF,EAASG,mBAAmBvhC,EAAO,GAAKxW,EAAUC,EAAIuW,EAAO,GAAKxW,EAAUE,GAC5E03C,EAAS+I,SAAS,EAAG,EAAGnqC,EAAO,GAAIA,EAAO,KAC1CohC,EAASyG,SAAS9gC,KAAKq4E,cAAcp/E,EAAO,GAAIA,EAAO,IAAKg/E,GAC5D59C,EAASK,eAkBjB,IAbI16B,KAAKo4E,iBAAmB9qF,8BAA4BC,UACpD8sC,EAASyC,cAAc,EAAG,EAAGl6C,EAAO3I,EAAQkjD,GAEvCn9B,KAAKo4E,iBAAmB9qF,8BAA4BjI,UACzDg1C,EAASgN,SAAS4wC,EAAQ,EAAGh+F,EAAWA,EAAS,EAAK,EAAI2I,EAAO3I,EAAWA,EAAS,EAAK,GAErF+lB,KAAKo4E,iBAAmB9qF,8BAA4BG,UACzD4sC,EAASgN,SAAS4wC,EAAQ,EAAGh+F,EAAS,EAAG2I,EAAO3I,EAAS,GAEpD+lB,KAAKo4E,iBAAmB9qF,8BAA4BE,WACzDyqF,EAAOnvE,OAAkB,IAAT7uB,EAChBogD,EAASyG,SAAS9gC,KAAKq4E,cAAchgG,KAAKgM,MAAMzB,GAAQvK,KAAKgM,MAAMpK,IAAUg+F,IAE7Ej4E,KAAKpK,UAAW,CAChB,GAAI0iF,IAAe71F,EAAUC,EAAGD,EAAUE,EAAGF,EAAUC,EAAID,EAAUG,MAAOH,EAAUE,EAAIF,EAAUxI,QAChGmJ,EAAO4c,KAAK2sD,eAAiB3zD,GAAcgH,MAAQs4E,CACvDt4E,MAAK1U,YAAY9C,OAAO,OAAQpF,IAI5C,MAAO+H,IAEX8rF,EAAwBjjF,UAAUqkF,cAAgB,SAAUz1F,EAAO3I,IAC3D5B,KAAK8iB,MAAMvY,GAAS,GAAM,GAAKvK,KAAKgM,MAAMzB,GAASA,KACnDA,EAAQvK,KAAK8iB,MAAMvY,GAAS,EAShC,KAAK,GAPDm+C,GAAO,GAAIzK,IACXa,EAAa,GAAIl3C,OACjBs4F,EAAkBlgG,KAAK6Q,KAAMtG,EAAQ3I,EAAU,IAC/ClB,EAAS6J,GAAS21F,EAAkB,GACpCjwB,EAAWplE,YAAgC,IAAnBnK,EAASA,IAAe4E,QAAQ,IACxD66F,EAASlwB,EACT5lE,EAAI,EACCxJ,EAAI,EAAGA,EAAIq/F,EAAiBr/F,IAAK,CACtC,GAAIyJ,GAAM1I,EAASquE,EAAYkwB,EAAoB,IAATv+F,EACtCywC,GAAQhoC,EAAGQ,WAAWP,EAAEhF,QAAQ,IACpCw5C,GAAW77C,KAAKovC,GAEZ8tD,EADW,IAAXA,EACSlwB,EAGA,EAEb5lE,GAAQ3J,EAGZ,MADAgoD,GAAKxJ,UAAUJ,GACR4J,GAEXk2C,EAAwBjjF,UAAU2jF,eAAiB,SAAUvL,GACzD,GAEI7yE,GAFAk/E,KACA50F,EAAauoF,EAAS,EAE1B,IAAIpsE,KAAK7G,OAAS6G,KAAK7G,MAAMlG,QAAU+M,KAAK7G,MAAMC,eAAiB4G,KAAK7G,MAAMC,cAAcG,QAAS,CACjG,GAAIm/E,GAAS14E,KAAK7G,MAAMC,cAAcG,OACtCA,IAAYrf,KAAMw+F,EAAOx+F,KAAMsf,IAAKk/E,EAAOl/E,IAAKrB,MAAOugF,EAAOvgF,MAAOD,OAAQwgF,EAAOxgF,YAGpFqB,IAAYrf,KAAM,EAAGsf,IAAK,EAAGrB,MAAO,EAAGD,OAAQ,EAE7B,KAAlB8H,KAAK/G,OAAOvW,GAA6B,IAAlBsd,KAAK/G,OAAOtW,GAAiC,IAAtBqd,KAAK/G,OAAOrW,OAAsC,IAAvBod,KAAK/G,OAAOhf,SACrF+lB,KAAKo3E,kBAAkB,IAAMp3E,KAAK/G,OAAOvW,EAAGsd,KAAK/G,OAAOtW,EAAGqd,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QAE9F,IAAI0+F,GAAW34E,KAAKm3E,YAAYp+F,OAAS,EACrC2iF,EAAiB17D,KAAKy7D,mBAAmBz7D,KAAK7G,OAC9Cy/E,GAA2B,CAC/B,KAAK54E,KAAKpK,WAAa8lE,GAAkBA,EAAe3iF,OAAS,IAAMinB,KAAK08D,QAAS,CACjF,GAAImc,GAAkBnd,EAAe,GACjCod,EAAkBpd,EAAe,EACrC,IAAwB,IAApBmd,GAA6C,IAApBC,EAAuB,CAChD,IAAS5/F,EAAI,EAAGA,EAAIy/F,EAAUz/F,IAAK,CAC/B,GAAI6iF,GAAY/7D,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAKigB,EAAQrf,KAAO2+F,EAC1F7c,EAAY8c,EAAkBv/E,EAAQC,GAC1Ci/E,GAAiB,EAAS,EAAJv/F,GAAU6iF,EAAYxiE,EAAQrf,KACpDu+F,EAAiB,EAAS,EAAJv/F,GAAW2K,IAAem4E,EAAcziE,EAAQC,IAClEwG,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC9Dm/F,EAAiB,EAAS,EAAJv/F,GAAW6iF,EAAY/7D,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACnGigB,EAAQrf,KACZu+F,EAAiB,EAAS,EAAJv/F,GAAW2K,IAAem4E,EAAcziE,EAAQC,IAClEwG,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC9Dm/F,EAAiB,EAAS,EAAJv/F,GAAU6iF,EAAYxiE,EAAQrf,KACpDu+F,EAAiB,EAAS,EAAJv/F,GAAWu/F,EAAiB,EAAS,EAAJv/F,GACnD8mB,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC9Dm/F,EAAiB,EAAS,EAAJv/F,GAAW6iF,EAAY/7D,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACnGigB,EAAQrf,KACZu+F,EAAiB,EAAS,EAAJv/F,GAAUu/F,EAAiB,EAAS,EAAJv/F,GAE1D0/F,GAA2B,GAGnC,IAAKA,EACD,IAAK,GAAI1/F,GAAI,EAAGA,EAAIy/F,EAAUz/F,IAAK,CAC/B,GAAI6iF,GAAY/7D,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACtE0iF,EAAYh8D,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,EAC1Em/F,GAAiB,EAAS,EAAJv/F,GAAU6iF,EAAYxiE,EAAQrf,KACpDu+F,EAAiB,EAAS,EAAJv/F,GAAW2K,EAAam4E,EAAaziE,EAAQC,IACnEi/E,EAAiB,EAAS,EAAJv/F,GAAW6iF,EAAY/7D,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAMigB,EAAQrf,KACrHu+F,EAAiB,EAAS,EAAJv/F,GAAW2K,EAAam4E,EAAaziE,EAAQC,IACnEi/E,EAAiB,EAAS,EAAJv/F,GAAU6iF,EAAYxiE,EAAQrf,KACpDu+F,EAAiB,EAAS,EAAJv/F,GAAWu/F,EAAiB,EAAS,EAAJv/F,GACnD8mB,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAC9Dm/F,EAAiB,EAAS,EAAJv/F,GAAW6iF,EAAY/7D,KAAKo3E,kBAAkBh+F,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAMigB,EAAQrf,KACrHu+F,EAAiB,EAAS,EAAJv/F,GAAUu/F,EAAiB,EAAS,EAAJv/F,GAG9D8mB,KAAKw2B,QAAUiiD,EACfz4E,KAAK1U,YAAY7K,IAAI,aAAcuf,KAAKw2B,UAErCygD,GACT1R,IAqBEwT,GAAwC,SAAUlxE,GAElD,QAASkxE,GAAuB3rF,EAAM1K,EAAGC,EAAGC,EAAO3I,GAC/C,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAajC,OAZA+H,GAAMixE,eAAiB,GACvBjxE,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,kBAC7B,KAATiL,IACP2a,EAAMixE,eAAiB5rF,EACvB2a,EAAM3a,KAAOA,OAEA,KAAN1K,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmBgiF,oBAC1BlxE,EAmJX,MAlKA9B,IAAU8yE,EAAwBlxE,GAiBlCkxE,EAAuBtsB,MAAQ,SAAUzyE,EAAMuH,GAC3C,GAAIi3E,GAAQ,GAAIugB,EAGhB,OAFAvgB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEXugB,EAAuB/kF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC3DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDw3F,EAAuB/kF,UAAUg+D,aAAe,WAC5C,OAA2B,KAAhBhyD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,OAEJ,KAAhBssE,IACPA,EAAc,OAEQ,KAAf7tD,KAAKhc,QACZgc,KAAKhc,OAAS,EAAG,EAAG,IAExBgc,KAAK8mE,oBAAsB9mE,KAAKk5E,6BAChCl5E,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,WAClB,KAAjBA,KAAK66D,SAA6C,IAAlB76D,KAAK24D,UAC5C34D,KAAK1U,YAAY7K,IAAI,KAAMuf,KAAK24D,WAGxCogB,EAAuB/kF,UAAUklF,2BAA6B,WAC1D,GAAI3kF,GAAOyL,KAAKu2D,mBACK,KAAThiE,GAAiC,OAATA,KAAqByL,KAAKpK,WAAcoK,KAAK7G,OAAS6G,KAAK7G,MAAM80C,eAAgC,IAAd15C,EAAK9Z,QACxH8Z,EAAOyL,KAAK+4D,iBACZ/4D,KAAKiwD,SAAW17D,GAEpByL,KAAKm5E,aAAen5E,KAAKi7D,yBACS,KAAvBj7D,KAAK6qD,eAAiC7qD,KAAK9T,UAAY7R,mBAAiBme,QAAUwH,KAAKm5E,eAAiB9+F,mBAAiBme,UACtG,IAAtBwH,KAAKm5E,eACLn5E,KAAKm5E,aAAoC,GAArBn5E,KAAK6qD,eAE7B7qD,KAAK/G,OAAS+G,KAAK2hE,kBAAkB3hE,KAAK/G,OAAQ+G,KAAKm5E,cAE3D,IAAIla,IAAmB,EAAG,EAAGj/D,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QACxD4Q,EAAa,GAAI0tE,IAAcv4D,KAAMi/D,EACzCp0E,GAAW3C,OAAS,GAAIuD,IAAYwzE,EAAiBj/D,KAAKtU,gBAC1D,IAAIP,GAAWN,EAAW3C,MAC1B0D,IAAWT,EAAU6U,KAAKm5E,aAC1B,IAIIzrB,GAJArzB,EAAWxvC,EAAW3C,OAAOmyC,SAC7Bz3C,EAAQod,KAAKuqD,OAAO3nE,MAAQ,EAC5BikB,EAAS,GAAI/B,IAAgB9G,mBAAiB9jB,KAAMsrB,uBAAqBhM,KACzEo0D,EAAY,GAAI/qB,IAAO7iC,KAAKhc,MAAOpB,EAiBvC,IAfIod,KAAKg6D,aACLtM,EAAY,GAAI5qB,IAAS9iC,KAAK+5D,cAE9B/5D,KAAKpK,WACDoK,KAAK1U,YAAYtJ,IAAI,cACrBge,KAAKg5E,eAAiBh5E,KAAK1U,YAAYnJ,IAAI,aAE/C6d,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAKg5E,iBAGzCh5E,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAKg5E,oBAEV,KAAxBh5E,KAAKg5E,gBACZ3+C,EAAS0H,WAAW/hC,KAAKg5E,eAAgBzkF,GAAO,EAAG,EAAG,EAAG,GAAIq5D,EAAWF,EAAW7mD,GAEnF7G,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIo3F,GAAep5E,KAAK1U,YAAYnJ,IAAI,KACpCi3F,IAAgBA,YAAwBt3F,KACxCgR,GAA0BsmF,EAAcp5E,KAAKtU,gBAAiB,KAGtE,GAAInK,GAAa,GAAIO,GACrBu4C,GAASmB,UAAU1vC,SAASvK,WAAWgR,UAAW,CAClD,IAAIrI,GAAY8V,KAAKtU,gBAAgB00C,mBAMrC,OALApgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWmwC,EAASmB,UAAU1vC,UACjEuuC,EAASmB,UAAU1vC,SAAS5B,UAAYA,EACxC3I,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,KAAMc,GACpB4J,GAEX4tF,EAAuB/kF,UAAU89D,eAAiB,SAAUC,GAExD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,UACAm8D,IACD/xD,KAAK8mE,oBAAsB9mE,KAAKk5E,+BAE/Bl5E,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,OACzBkwE,EAAmB3wE,EAAWY,IAAI,SAE9B+H,EAAY3I,EAAWiK,OAAO,QAE9B0mE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,sBAO9E,IADAsU,KAAKgyD,gBACAhyD,KAAK8mE,qBACF/U,EACA,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IACtC,IAAI+vE,EAAkB,CAClB,GAAIhoE,GAAY3I,EAAWiK,OAAO,IAC9BtB,KACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAKk5E,4BAkBhD,IAAInnB,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpF,KAAKye,KAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,UAAW,CAC7D,GAAI6J,GAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,OAC5D2J,IACAmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAGjGmU,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAErDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,OAG/B+4E,GACThiF,IAmBEsiF,GAA0C,SAAUxxE,GAEpD,QAASwxE,GAAyB32F,EAAGC,EAAGC,EAAO3I,GAC3C,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAcjC,OAbA+H,GAAM6pE,MAAQ5jF,+BAA6BM,MAC3CyZ,EAAMuxE,YAAc,EACpBvxE,EAAM8pE,YAAc,GACpB9pE,EAAM65D,YAAc,EACpB75D,EAAMwxE,oBAAqB,EAC3BxxE,EAAMyxE,qBAAuB,GAAInkF,IAAgBC,gBAAcC,UAAW,GAAIlE,eAAaE,OAASF,eAAaC,MACjHyW,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,cAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmB2lE,sBAC1B70D,EAgkBX,MAhlBA9B,IAAUozE,EAA0BxxE,GAkBpC9T,OAAO+H,eAAeu9E,EAAyBrlF,UAAW,QAkBtD7R,IAAK,WAID,MAHI6d,MAAK1U,YAAYtJ,IAAI,UACrBge,KAAK4xE,MAAQ/jF,GAAoBmS,KAAK1U,YAAYnJ,IAAI,QAAQgG,OAE3D6X,KAAK4xE,OAqBhBnxF,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAK4xE,MAAQz5F,EACb6nB,KAAK1U,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,IAAM6d,KAAK8yE,gBAAgB9yE,KAAK4xE,WAGrF71E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeu9E,EAAyBrlF,UAAW,cA4BtD7R,IAAK,WACD,GAAI6d,KAAKpK,UACL,MAAO,KAEX,QAAgC,KAArBoK,KAAKinD,YAA6B,CACzC,GAAIgY,IAAmB,EAAG,EAAGj/D,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,OAC5D+lB,MAAKinD,YAAc,GAAIsR,IAAcv4D,KAAMi/D,GAC3Cj/D,KAAKinD,YAAY/+D,OAAS,GAAIuD,IAAYwzE,EAAiBj/D,KAAKtU,iBAEpE,MAAOsU,MAAKinD,aAEhBlrD,YAAY,EACZC,cAAc,IAqBlBq9E,EAAyBrlF,UAAUylF,eAAiB,WAChD,GAAItuF,EACJ,IAAI6U,KAAKpK,UACL,GAAIoK,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IACtC,IAAI+vE,EAAkB,EAClB/mE,EAAW,GAAIM,KACNkzC,aAAc,CACvB,IAAI+6C,GAAqBxnB,EAAiB3wE,WACtCwK,EAAS2tF,EAAmBx3F,SAAS,UACrC+W,EAASygF,EAAmBx3F,SAAS,OACzC,IAAI6J,EAAQ,CAER,IAAK,GADD4tF,MACKzgG,EAAI,EAAGA,EAAI6S,EAAOhT,OAAQG,IAAK,CACpC,GAAIf,GAAQ4T,EAAO3S,OAAOC,SAASH,EAAEI,WAAY,IACjDqgG,GAAQvgG,OAAOC,SAASH,EAAEI,WAAY,KAAOnB,EAEjD,GAAI8gB,GAAUA,EAAOlgB,OAAS,EAAG,CAC7B,GAAIqK,GAAOI,EAAayV,GACpBxW,EAAYud,KAAK45E,eAAex2F,EAAMu2F,EAC1CxuF,GAASkc,OAAS5kB,EAAU,GAAIA,EAAU,IAC1C0I,EAASu7D,uBAAyBtjE,EAAKR,MAAOQ,EAAKnJ,aAGlDgf,KACLygF,EAAmBlxF,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIyQ,EAAO,IAAKA,EAAO,KACrE9N,EAASkc,OAASpO,EAAO,GAAIA,EAAO,IAExC9N,GAAS27D,cAAcvlE,EAAYye,KAAKtU,uBAKhDP,GAAW6U,KAAK65E,8BAGxB,OAAO1uF,IAEX4I,OAAO+H,eAAeu9E,EAAyBrlF,UAAW,wBACtD7R,IAAK,WACD,GAAI23F,EAMJ,OALI95E,MAAKpK,aACLkkF,EAAc95E,KAAK+5E,sBACPr3F,EAAIsd,KAAK/G,OAAOvW,EAC5Bo3F,EAAYn3F,EAAIqd,KAAK/G,OAAOtW,GAEzBm3F,GAEX/9E,YAAY,EACZC,cAAc,IAElBq9E,EAAyB5sB,MAAQ,SAAUzyE,EAAMuH,GAC7C,GAAIi3E,GAAQ,GAAI6gB,EAGhB,OAFA7gB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX6gB,EAAyBrlF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC7DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD83F,EAAyBrlF,UAAUg+D,aAAe,WAC9C,GAAInE,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,OAEJ,KAAhBssE,IACPA,EAAc,GAEb7tD,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKg5D,qBAAsB,GAE3Bh5D,KAAK1U,YAAYtJ,IAAI,OAASge,KAAKpK,YAAcoK,KAAKi5D,WACtDj5D,KAAKg6E,wBAGLh6E,KAAK8mE,oBAAsB9mE,KAAK65E,gCAGxCR,EAAyBrlF,UAAU4lF,eAAiB,SAAUK,EAAWluF,GACrE,GAAImuF,MACAC,KACA/L,EAASpuE,KAAKo6E,gBAAgBH,EAAUv3F,EAAGu3F,EAAUt3F,EAAIs3F,EAAUhgG,OAAQ8R,EAC/EmuF,GAAY,GAAK9L,EAAO,GACxB+L,EAAY,GAAK/L,EAAO,EACxB,IAAIC,GAASruE,KAAKo6E,gBAAgBH,EAAUv3F,EAAIu3F,EAAUr3F,MAAOq3F,EAAUt3F,EAAGoJ,EAC9EmuF,GAAY,GAAK7L,EAAO,GACxB8L,EAAY,GAAK9L,EAAO,EACxB,IAAIC,GAAStuE,KAAKo6E,gBAAgBH,EAAUv3F,EAAGu3F,EAAUt3F,EAAGoJ,EAC5DmuF,GAAY,GAAK5L,EAAO,GACxB6L,EAAY,GAAK7L,EAAO,EACxB,IAAI+L,GAASr6E,KAAKo6E,gBAAgBH,EAAUv3F,EAAIu3F,EAAUr3F,MAAOq3F,EAAUt3F,EAAIs3F,EAAUhgG,OAAQ8R,EAKjG,OAJAmuF,GAAY,GAAKG,EAAO,GACxBF,EAAY,GAAKE,EAAO,IACZr6E,KAAKs6E,UAAUJ,GAAcl6E,KAAKs6E,UAAUH,GACpDn6E,KAAKu6E,UAAUL,GAAcl6E,KAAKu6E,UAAUJ,KAGpDd,EAAyBrlF,UAAUomF,gBAAkB,SAAU13F,EAAGC,EAAGoJ,GACjE,GAAImB,KAGJ,OAFAA,GAAM,GAAKxK,EAAIqJ,EAAO,GAAKpJ,EAAIoJ,EAAO,GAAKA,EAAO,GAClDmB,EAAM,GAAKxK,EAAIqJ,EAAO,GAAKpJ,EAAIoJ,EAAO,GAAKA,EAAO,GAC3CmB,GAEXmsF,EAAyBrlF,UAAUsmF,UAAY,SAAUn/F,GAErD,IAAK,GADDq/F,GAAUr/F,EAAO,GACZjC,EAAI,EAAGA,EAAIiC,EAAOpC,OAAQG,IAC3BiC,EAAO/B,OAAOC,SAASH,EAAEI,WAAY,KAAOkhG,IAC5CA,EAAUr/F,EAAO/B,OAAOC,SAASH,EAAEI,WAAY,KAGvD,OAAOkhG,IAEXnB,EAAyBrlF,UAAUumF,UAAY,SAAUp/F,GAErD,IAAK,GADDs/F,GAAUt/F,EAAO,GACZjC,EAAI,EAAGA,EAAIiC,EAAOpC,OAAQG,IAC3BiC,EAAO/B,OAAOC,SAASH,EAAEI,WAAY,KAAOmhG,IAC5CA,EAAUt/F,EAAO/B,OAAOC,SAASH,EAAEI,WAAY,KAGvD,OAAOmhG,IAEXpB,EAAyBrlF,UAAU89D,eAAiB,SAAUC,OACxC,KAAdA,IAAwBA,GAAY,EACxC,IAAI2oB,IAAkB,CACtB,IAAI16E,KAAKpK,YAAcoK,KAAK2sD,gBAAkBoF,GAAa/xD,KAAK04D,aACtD3G,IAAc/xD,KAAK04D,WAAc14D,KAAK2sD,gBAAkB3sD,KAAKi5D,cAC/Dj5D,KAAK8mE,oBAAsB9mE,KAAK65E,iCAE/B75E,KAAK8mE,sBAAwB9mE,KAAK04D,WAAa3G,IAAc/xD,KAAK1U,YAAYtJ,IAAI,QACnF04F,EAAkB16E,KAAKg6E,6BAO3B,IAHMh6E,KAAK86C,aAAe96C,KAAK1U,YAAYtJ,IAAI,OAC3Cge,KAAKgyD,gBAEHhyD,KAAK8mE,sBAAyB/U,GAAa/xD,KAAK86C,aAClD,GAAK96C,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IACtC,IAAI+vE,EAAkB,CAClB,GAAIhoE,GAAY3I,EAAWiK,OAAO,IAC9BtB,KACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAK65E,8BAyB5C,QARkC,KAAvB75E,KAAKqnE,eAAiCrnE,KAAKqnE,gBAC9CrnE,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpF,KAAKye,KAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,UAAW,CAC7D,GAAI6J,GAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,OAC5D2J,IACAmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAG7F6uF,EACA16E,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqB4T,GAG1D16E,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAGzDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,OAGtCq5E,EAAyBrlF,UAAUgmF,sBAAwB,WACvD,GAAIU,IAAkB,EAClBn5F,EAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IACtC,IAAI+vE,EAAkB,CAClB,GAAIhoE,GAAY3I,EAAWiK,OAAO,IAC9BtB,KACAgoE,EAAiBhoE,UAAYA,EAEjC,IAAIywF,IAAU,CACd,IAAI36E,KAAKhJ,QAAUC,qBAAmB2lE,sBAAuB,CACzD,GAAIge,IAAY,EACZngG,MAAO,GACP2I,MAAO,EAYX,IAXI8uE,KACA0oB,EAAa56E,KAAK7G,MAAM/e,WAAaC,mBAAiBme,QAClDwH,KAAK6qD,gBAAkBxwE,mBAAiBme,UAExCoiF,EAAa56E,KAAK7G,MAAM/e,WAAaC,mBAAiBme,QAClDwH,KAAK6qD,gBAAkBxwE,mBAAiBme,SAGpDwH,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,iBAClEivF,GAAU,EACVD,IAAkBE,EACG,CACjB,GAAI7uF,GAASmmE,EAAiB3wE,WAAWW,SAAS,SAClD,IAAI6J,EAAQ,CAER,IAAK,GADD4tF,MACKzgG,EAAI,EAAGA,EAAI6S,EAAOhT,OAAQG,IAAK,CACpC,GAAIf,GAAQ4T,EAAO3S,OAAOC,SAASH,EAAEI,WAAY,IACjDqgG,GAAQvgG,OAAOC,SAASH,EAAEI,WAAY,KAAOnB,EAEjD,GAAI8gB,GAASi5D,EAAiB3wE,WAAWW,SAAS,OAClD,IAAI+W,GAAUA,EAAOlgB,OAAS,EAAG,CAC7BqK,EAAOI,EAAayV,EACpB,IAAIxW,GAAYud,KAAK45E,eAAex2F,EAAMu2F,EAC1Cl/F,IAAQgI,EAAU,GAAIA,EAAU,IAChCud,KAAK8mE,oBAAoBz/D,MAAQ5sB,MAGjCA,IAAQ2I,EAAKR,MAAOQ,EAAKnJ,aAI5BmJ,KACL3I,GAAQ2I,EAAKR,MAAOQ,EAAKnJ,SAG5B0gG,IACD36E,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,mBAI9E,MAAOgvF,IAEXrB,EAAyBrlF,UAAU6lF,6BAA+B,WAC9D,GACIhvF,GADAo0E,GAAmB,EAAG,EAAGj/D,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,OAExD+lB,MAAKinD,aACLp8D,EAAamV,KAAKinD,YACbjnD,KAAK1U,YAAYtJ,IAAI,SACtBge,KAAK1U,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,qBAIjD6d,KAAK6xE,YAAc7xE,KAAK8yE,gBAAgB9yE,KAAKjS,MAC7CiS,KAAK1U,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,MAAQ6d,KAAK6xE,eAC1DhnF,EAAa,GAAI0tE,IAAcv4D,KAAMi/D,IAC1B/2E,OAAS,GAAIuD,IAAYwzE,EAAiBj/D,KAAKtU,iBAE9D,IAAIP,GAAWN,EAAW3C,QACtB8X,KAAKu5E,wBAA8C,KAAjBv5E,KAAK9T,SAA4B8T,KAAK9T,UAAY7R,mBAAiBme,QAAuC,IAA7BwH,KAAKi7D,oBAQpHj7D,KAAK4hE,YAAc5hE,KAAKi7D,qBAPxBj7D,KAAK4hE,YAAc5hE,KAAKi7D,oBACC,IAArBj7D,KAAK4hE,cACL5hE,KAAK4hE,YAAmC,GAArB5hE,KAAK6qD,eAE5B7qD,KAAK/G,OAAS+G,KAAK2hE,kBAAkB3hE,KAAK/G,OAAQ+G,KAAK4hE,cAK3Dh2E,GAAWT,EAAU6U,KAAK4hE,aACrB5hE,KAAKinD,aACNjnD,KAAK66E,qBAAqB1vF,GAE1B6U,KAAK1U,YAAYtJ,IAAI,OACrB8Q,GAA0BkN,KAAK1U,YAAYnJ,IAAI,MAAO6d,KAAKtU,gBAAiB,IAEhF,IAAInK,GAAa,GAAIO,GACrBqJ,GAASW,SAASvK,WAAWgR,UAAW,CACxC,IAAIrI,GAAY8V,KAAKtU,gBAAgB00C,mBAQrC,OAPApgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWiB,EAASW,UACvDX,EAASW,SAAS5B,UAAYA,EAC9B3I,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,KAAMc,GAC3Bye,KAAK1U,YAAY7K,IAAI,UAAWuf,KAAKuqD,OAAOmP,QAAS15D,KAAKuqD,OAAOoP,QAAS35D,KAAKuqD,OAAO3nE,QACtFod,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,OACvC7U,GAEXkuF,EAAyBrlF,UAAU6mF,qBAAuB,SAAU1vF,GAChE,GAAIonE,GAAe,GAAIztD,GACvBytD,GAAajtD,UAAYtH,mBAAiBmoC,OAC1CosB,EAAahtD,cAAgBC,uBAAqB29B,MAClD,IAAIuqB,GAAY,GAAI5qB,IAAS9iC,KAAK86E,0BAC9BltB,EAAY,GAAI/qB,IAAO7iC,KAAK+6E,qBAAsB/6E,KAAKuqD,OAAO3nE,OAC9Dy3C,EAAWlvC,EAASkvC,QACxBA,GAASE,OACTF,EAAS6N,eAAe/8C,EAASkc,MAAM,IAAMrH,KAAKs5E,YAAc,GAAKnuF,EAASkc,MAAM,GAAK,GACzF,IAAI2zE,GAAah7E,KAAKw5E,oBACtBx5E,MAAKi7E,iBAAiB5gD,EAAUuzB,EAAWF,EAAWstB,EAAYzoB,GAClEl4B,EAASK,WAEb2+C,EAAyBrlF,UAAU8+E,gBAAkB,SAAU/kF,GAC3D,OAAQA,GACJ,IAAKC,gCAA6BC,SAC9B+R,KAAK6xE,YAAc,WACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BE,KAC9B8R,KAAK6xE,YAAc,OACnB7xE,KAAKs5E,YAAc,EACnB,MACJ,KAAKtrF,gCAA6BI,aAC9B4R,KAAK6xE,YAAc,eACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BK,aAC9B2R,KAAK6xE,YAAc,eACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BM,MAC9B0R,KAAK6xE,YAAc,QACnB7xE,KAAKs5E,YAAc,EACnB,MACJ,KAAKtrF,gCAA6BO,aAC9ByR,KAAK6xE,YAAc,eACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BQ,QAC9BwR,KAAK6xE,YAAc,UACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BS,MAC9BuR,KAAK6xE,YAAc,QACnB7xE,KAAKs5E,YAAc,EACnB,MACJ,KAAKtrF,gCAA6BU,WAC9BsR,KAAK6xE,YAAc,aACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BW,iBAC9BqR,KAAK6xE,YAAc,mBACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6Ba,YAC9BmR,KAAK6xE,YAAc,cACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6Bc,oBAC9BkR,KAAK6xE,YAAc,sBACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BgB,KAC9BgR,KAAK6xE,YAAc,OACnB7xE,KAAKs5E,YAAc,EACnB,MACJ,KAAKtrF,gCAA6BiB,UAC9B+Q,KAAK6xE,YAAc,YACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BG,UAC9B6R,KAAK6xE,YAAc,YACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6BkB,KAC9B8Q,KAAK6xE,YAAc,OACnB7xE,KAAKs5E,YAAc,EACnB,MACJ,KAAKtrF,gCAA6BY,gBAC9BoR,KAAK6xE,YAAc,kBACnB7xE,KAAKs5E,YAAc,GACnB,MACJ,KAAKtrF,gCAA6Be,mBAC9BiR,KAAK6xE,YAAc,qBACnB7xE,KAAKs5E,YAAc,IAG3B,MAAOt5E,MAAK6xE,aAEhBwH,EAAyBrlF,UAAU8mF,uBAAyB,WA0BxD,MArBI96E,MAAK4xE,QAAU5jF,+BAA6Ba,aAC5CmR,KAAK4xE,QAAU5jF,+BAA6BkB,MACtC,IACE,IACD,KAGF8Q,KAAK4xE,QAAU5jF,+BAA6BC,UACjD+R,KAAK4xE,QAAU5jF,+BAA6BS,OAC5CuR,KAAK4xE,QAAU5jF,+BAA6BG,WACtC,IACE,IACD,MAID,IACE,IACD,MAKfkrF,EAAyBrlF,UAAU+mF,mBAAqB,WA0BpD,MArBI/6E,MAAK4xE,QAAU5jF,+BAA6Ba,aAC5CmR,KAAK4xE,QAAU5jF,+BAA6BkB,MACtC,IACE,GACD,IAGF8Q,KAAK4xE,QAAU5jF,+BAA6BC,UACjD+R,KAAK4xE,QAAU5jF,+BAA6BS,OAC5CuR,KAAK4xE,QAAU5jF,+BAA6BG,WACtC,GACE,IACD,KAID,GACE,GACD,MAKfkrF,EAAyBrlF,UAAUinF,iBAAmB,SAAU5gD,EAAU6C,EAAKC,EAAO5oC,EAAMsS,GACxFwzB,EAAS6G,qBAAqB,EAAG,EAAGlhC,KAAKs5E,YAAa,GAAI,EAAGp8C,EAAKC,EAClE,IAAI+9C,GAAW,GAAIp4C,IAAS9iC,KAAK+6E,qBACjC1gD,GAAS0H,WAAW/hC,KAAK6xE,YAAY/yF,cAAeyV,GAAQyL,KAAKs5E,YAAc,EAAK,EAAG,GAAI,EAAG,GAAI,KAAM4B,EAAUr0E,IAEtHwyE,EAAyBrlF,UAAU+lF,mBAAqB,WACpD,GAAI9gF,IAAWvW,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAG3I,OAAQ,EAC7C,IAAI+lB,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,MAAO,CAChD,GAAImR,GAAuB6M,KAAK1U,YAAYnJ,IAAI,KAChD,IAAIgR,GAAwBA,EAAqBnR,IAAI,KAAM,CACvD,GAAIm5F,GAAmBhoF,EAAqBhR,IAAI,IAChD,IAAIg5F,OAA2D,KAAhCA,EAAiB55F,WAA4B,CACxE,GAAI65F,GAA6BD,EAAiB55F,UAClD,IAAI65F,EAA2Bp5F,IAAI,QAAS,CACxC,GAAI7G,GAASigG,EAA2Bl5F,SAAS,OAC7C/G,IAA4B,IAAlBA,EAAOpC,SACjBkgB,EAASzV,EAAarI,OAM1C,MAAO8d,IAEJogF,GACT9T,IAiBE8V,GAAoC,SAAUxzE,GAO9C,QAASwzE,KACL,GAAItzE,GAAQF,EAAO5T,KAAK+L,OAASA,IAEjC,OADA+H,GAAM/Q,MAAQC,qBAAmBqkF,gBAC1BvzE,EAmCX,MA5CA9B,IAAUo1E,EAAoBxzE,GAW9BwzE,EAAmB5uB,MAAQ,SAAUzyE,EAAMuH,GACvC,GAAIi3E,GAAQ,GAAI6iB,EAGhB,OAFA7iB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX6iB,EAAmBrnF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GACvDsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD85F,EAAmBrnF,UAAU89D,eAAiB,SAAUC,GAEpD,OADkB,KAAdA,IAAwBA,GAAY,GACpCA,EAAW,CACX,GAAIG,OAAmB,EACvB,IAAIlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,IAAagoE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAI/mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD6wE,EAAiBv8D,KAAK47D,wBAAwBzwE,EAASW,SAASvK,WACpEye,MAAKs8D,2BAA2BnxE,EAAUoxE,OAG1Cv8D,MAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,QAIxCq7E,GACT9V,IAiBEgW,GAAuC,SAAU1zE,GAEjD,QAAS0zE,GAAsB74F,EAAGC,EAAGC,EAAO3I,GACxC,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IAejC,OAdA+H,GAAMyzE,cAAgB,GACtBzzE,EAAM0zE,YAAc,GAAIpmF,IAAgBC,gBAAcC,UAAW,EAAGlE,eAAa4D,SACjF8S,EAAMuoD,eAAiBtyD,mBAAiB9jB,KACxC6tB,EAAM2zE,eAAiB,EACvB3zE,EAAM4zE,eAAiB,EACvB5zE,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,iBAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM6zE,mBAAoB,EAC1B7zE,EAAM/Q,MAAQC,qBAAmB4kF,mBACjC9zE,EAAM+zE,kBACC/zE,EA69CX,MA9+CA9B,IAAUs1E,EAAuB1zE,GAmBjC9T,OAAO+H,eAAey/E,EAAsBvnF,UAAW,gBAkBnD7R,IAAK,WAID,WAHkC,KAAvB6d,KAAK+7E,gBACZ/7E,KAAK+7E,cAAgB/7E,KAAKg8E,yBAEvBh8E,KAAK+7E,eAqBhBt7F,IAAK,SAAUtI,GACN6nB,KAAKpK,YACNoK,KAAK+7E,cAAgB5jG,EAEzB,IAAIo/F,IAAY,CAChB,IAAIv3E,KAAKpK,WAAazd,EAAMY,QAAU,EAClC,GAAIinB,KAAK+7E,cAAchjG,SAAWZ,EAAMY,QACpC,IAASG,EAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAE9B,IAAK,GADDiC,GAAShD,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KACxCH,EAAI,EAAGA,EAAIgC,EAAOpC,OAAQI,IAC/B,GAAIhB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAKF,OAAOC,SAASF,EAAEG,WAAY,OACvE0mB,KAAK+7E,cAAc3iG,OAAOC,SAASH,EAAEI,WAAY,KAAKF,OAAOC,SAASF,EAAEG,WAAY,KAAM,CAC1Fi+F,GAAY,CACZ,YAMZA,IAAY,CAGpB,IAAIA,EAAW,CAGX,IAAK,GAFD1zF,GAAamc,KAAK7G,MAAM1e,KAAK,GAC7BqvB,KACK5wB,EAAI,EAAGA,EAAIf,EAAMY,QAClBG,EAAIf,EAAMY,OADgBG,IAE1B4wB,EAAMxuB,KAAKnD,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAK0mB,KAAK07E,gBAC9D5xE,EAAMxuB,KAAMuI,EAAamc,KAAK27E,eAAkBxjG,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAMjG0mB,MAAK+7E,cAAgB5jG,EACrB6nB,KAAK1U,YAAY9C,OAAO,KAAMshB,KAGtC/N,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey/E,EAAsBvnF,UAAW,mBAoBnD7R,IAAK,WAOD,MANI6d,MAAKpK,UACLoK,KAAKkmE,iBAAmBlmE,KAAKi8E,6BAES,KAA1Bj8E,KAAKkmE,mBACjBlmE,KAAKkmE,iBAAmBtgF,qBAAmBY,MAExCwZ,KAAKkmE,kBAqBhBzlF,IAAK,SAAUtI,OACU,KAAVA,GACP6nB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAIwD,EAAuBxN,KAEtE6nB,KAAKkmE,iBAAmB/tF,GAE5B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey/E,EAAsBvnF,UAAW,mBAkBnD7R,IAAK,WACD,OAAqC,KAA1B6d,KAAKs3E,iBAAkC,CAC9C,GAAItzF,OAAQ,EACZ,IAAIgc,KAAK1U,YAAYtJ,IAAI,aAErB,MADAge,MAAKs3E,iBAAmBnzF,EAAY6b,KAAK1U,YAAYpJ,SAAS,cACvD8d,KAAKs3E,gBAEhB,IAAIt3E,KAAK1U,YAAYtJ,IAAI,MAErB,IAAK,GADDk6F,GAAcl8E,KAAK1U,YAAYnJ,IAAI,MAAMwS,MAAM,KAC1Czb,EAAI,EAAGA,EAAIgjG,EAAYnjG,OAAQG,IACpC,IAAyE,IAArEgjG,EAAY9iG,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,SAMvD,OALA8D,EAAQk4F,EAAY9iG,OAAOC,SAASH,EAAEI,WAAY,KAAKqb,MAAM,KAAK,IACxDkF,WAAW,OACjB7V,EAAQA,EAAM9E,UAAU,IAE5B8gB,KAAKs3E,iBAAmBxzF,EAAgBE,GACjCgc,KAAKs3E,gBAIxB,KAAKt3E,KAAKs3E,kBAAoBt3E,KAAK1U,YAAYtJ,IAAI,MAAO,CACtD,GACIm6F,KACAn8E,MAAK87E,eAAe/iG,OAAS,GAAKinB,KAAK87E,eAAe,KAEtDK,EADUn8E,KAAK87E,eAAe,GACZh6C,OAClB9hC,KAAKs3E,iBAAmB6E,IAIpC,MAAOn8E,MAAKs3E,kBAqBhB72F,IAAK,SAAUtI,OACU,KAAVA,GAA0C,IAAjBA,EAAMY,SACtCinB,KAAKs3E,iBAAmBn/F,EACxB6nB,KAAKo8E,aAAap8E,KAAKzL,KAAMpc,EAAO6nB,KAAK4xD,gBAE7C5xD,KAAK47E,mBAAoB,GAE7B7/E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey/E,EAAsBvnF,UAAW,iBAkBnD7R,IAAK,WACD,GAAI6d,KAAK1U,YAAYtJ,IAAI,KACrBge,KAAKswD,eAAiBtwD,KAAK1U,YAAYnJ,IAAI,SAE1C,IAAI6d,KAAK1U,YAAYtJ,IAAI,MAAO,CACjC,GAAIq6F,OAAc,EACdr8E,MAAK87E,eAAe/iG,OAAS,GAAKinB,KAAK87E,eAAe,KACtDO,EAAcr8E,KAAK87E,eAAe,GAClC97E,KAAKswD,eAAiB+rB,GAG9B,MAAOr8E,MAAKswD,gBAqBhB7vE,IAAK,SAAUtI,GACP6nB,KAAKswD,iBAAmBn4E,GACxB6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,GAEjC6nB,KAAKswD,eAAiBn4E,EACtB6nB,KAAK47E,mBAAoB,GAE7B7/E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey/E,EAAsBvnF,UAAW,QAkBnD7R,IAAK,WAOD,MANK6d,MAAKqJ,QACNrJ,KAAKqJ,MAAQrJ,KAAKu2D,eACE,OAAfv2D,KAAKqJ,WAAwC,KAAfrJ,KAAKqJ,QAA4BrJ,KAAKpK,WAAiC,IAApBoK,KAAKqJ,MAAM5uB,QAC7FulB,KAAKqJ,MAAQrJ,KAAKy7E,cAGnBz7E,KAAKqJ,OAqBhB5oB,IAAK,SAAUtI,GACX6nB,KAAKqJ,MAAQlxB,EACb6nB,KAAK47E,mBAAoB,GAE7B7/E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey/E,EAAsBvnF,UAAW,eAkBnD7R,IAAK,WAID,WAHiC,KAAtB6d,KAAKs8E,cAAgCt8E,KAAK1U,YAAYtJ,IAAI,QACjEge,KAAKs8E,aAAet8E,KAAKu8E,gBAEtBv8E,KAAKs8E,cAqBhB77F,IAAK,SAAUtI,OACU,KAAVA,GAA0C,IAAjBA,EAAMY,SACtCinB,KAAKs8E,aAAenkG,EACpB6nB,KAAK1U,YAAY9C,OAAO,KAAMwX,KAAKqjE,sBAAsBrjE,KAAKmsD,gBAGtEpwD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey/E,EAAsBvnF,UAAW,oBAkBnD7R,IAAK,WAOD,MANI6d,MAAK1U,YAAYtJ,IAAI,MACrBge,KAAKw8E,kBAAoB1rF,GAAqBkP,KAAK1U,YAAYnJ,IAAI,MAAMgG,MAGzE6X,KAAKw8E,kBAAoBvrF,sBAAoBzK,KAE1CwZ,KAAKw8E,mBAqBhB/7F,IAAK,SAAUtI,OACU,KAAVA,IACP6nB,KAAKw8E,kBAAoBrkG,EACrBA,IAAU8Y,sBAAoBzK,KAC9BwZ,KAAK1U,YAAY9C,OAAO,OAAQ,YAGhCwX,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI6d,KAAKy8E,wBAAwBz8E,KAAKw8E,uBAIzFzgF,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey/E,EAAsBvnF,UAAW,iBACnD7R,IAAK,WACD,GAAIhK,EAIJ,OAHI6nB,MAAK1U,YAAYtJ,IAAI,QACrB7J,EAAQ6nB,KAAK1U,YAAYnJ,IAAI,OAE1BhK,GAEX4jB,YAAY,EACZC,cAAc,IAElBu/E,EAAsB9uB,MAAQ,SAAUzyE,EAAMuH,GAC1C,GAAIi3E,GAAQ,GAAI+iB,EAMhB,OALA/iB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACpBA,EAAWS,IAAI,QACfw2E,EAAMsjB,eAAiBtjB,EAAMkkB,yBAAyBn7F,EAAWY,IAAI,QAElEq2E,GAEX+iB,EAAsBvnF,UAAU2oF,aAAe,SAAUC,GACrD58E,KAAK68E,UAAYD,GAErBrB,EAAsBvnF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC1DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElDg6F,EAAsBvnF,UAAUg+D,aAAe,SAAUD,GACrD,OAA2B,KAAhB/xD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,OAEJ,KAAhBssE,IACPA,EAAc,GAEb7tD,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKg5D,qBAAsB,EAE/B,IAAI0C,GAAiB17D,KAAKtG,oBACtBgiE,IAAkBA,EAAe3iF,OAAS,GAAkC,gBAAtB2iF,GAAe,IAAgD,gBAAtBA,GAAe,KAA0C,IAAtBA,EAAe,IAAkC,IAAtBA,EAAe,MAC5K17D,KAAK07E,eAAiBhgB,EAAe,GACrC17D,KAAK27E,eAAiBjgB,EAAe,KAErC3J,GAAa/xD,KAAK2sD,kBAClB3sD,KAAK8mE,oBAAsB9mE,KAAKiyD,qBAE/BF,IACD/xD,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,OAC9CA,KAAK88E,4BAGbvB,EAAsBvnF,UAAU89D,eAAiB,SAAUC,GAEvD,OADkB,KAAdA,IAAwBA,GAAY,GACpC/xD,KAAKpK,WACDoK,KAAK2sD,gBAAmBoF,IAAc/xD,KAAK1U,YAAYtJ,IAAI,SAC3Dge,KAAK8mE,oBAAsB9mE,KAAKiyD,sBAE/BjyD,KAAK8mE,qBAAuB/U,GAAa/xD,KAAK1U,YAAYtJ,IAAI,QAC3DT,EAAaye,KAAK1U,YAAYnJ,IAAI,QACpBZ,EAAWS,IAAI,OACzBkwE,EAAmB3wE,EAAWY,IAAI,SAE9B+H,EAAY3I,EAAWiK,OAAO,QAE9B0mE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,sBAO9E,IADAsU,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBAAuB/U,EAC7B,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IAClC+vE,MACIhoE,EAAY3I,EAAWiK,OAAO,QAE9B0mE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAKiyD,mBAyB5C,QARkC,KAAvBjyD,KAAKqnE,eAAiCrnE,KAAKqnE,gBAC9CrnE,KAAKpK,UACLoK,KAAKijE,sBAGLjjE,KAAKkiE,iBAGTnQ,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpF,KAAKye,KAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,YAAcge,KAAKpK,UAAW,CAChF,GAAI/J,GAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,OAC5D2J,IACAmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAG7F0wE,OAAiD,KAAxBv8D,KAAK7G,MAAM/e,UAA4B4lB,KAAK7G,MAAM/e,WAAaC,mBAAiBme,OACzGwH,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,GAErDv8D,KAAK8mE,sBAAwB9mE,KAAK1U,YAAYtJ,IAAI,MACvDge,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,GAErDv8D,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAKsrE,uBAAuBtrE,KAAK8mE,oBAAoBh7E,SAASvK,WAAYye,KAAK/G,OAAQ+G,KAAK8mE,sBAC5F9mE,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAI7DxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,KAKlC,IAHIA,KAAK1U,YAAYtJ,IAAI,OAASge,KAAK47E,mBACnC57E,KAAKo8E,aAAap8E,KAAKzL,KAAMyL,KAAKs3E,iBAAkBt3E,KAAK4xD,gBAExDG,GAAa/xD,KAAK2sD,eAAgB,CACnC,GAAI9hE,OAAa,EACjB,IAAImV,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACD,GAAI46F,GAAc/8E,KAAKtU,gBAAgB00C,mBACvCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIs8F,EAAalyF,GAChDmV,KAAK1U,YAAY9C,OAAO,KAAMu0F,GAElCjqF,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IAC5D,IAAIxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAK8mE,oBAAoBh7E,UACvEjB,EAAWrC,OAAO,IAAK0B,KAG/BqxF,EAAsBvnF,UAAUs3E,uBAAyB,SAAU/pF,EAAY0X,EAAQuyE,GACnF,GAAI1P,IAAgB,EAChB2P,EAASxyE,CACb,IAAI1X,GAAcA,EAAWS,IAAI,UAAW,CACxC,GAAI6J,GAAMtK,EAAWW,SAAS,QAC1B6J,EAASxK,EAAWW,SAAS,SACjC,IAAI6J,GAAUF,GAAOE,EAAOhT,OAAS,GAAK8S,EAAI9S,OAAS,OAC1B,KAAdgT,EAAO,QACO,KAAdA,EAAO,QACO,KAAdA,EAAO,QACO,KAAdA,EAAO,IACI,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,IAA0B,IAAdA,EAAO,QAC1C,KAAXF,EAAI,QACO,KAAXA,EAAI,QACO,KAAXA,EAAI,QACO,KAAXA,EAAI,KACPxT,KAAKgM,MAAMwH,EAAI,MAAQxT,KAAKgM,OAAQ0H,EAAO,KAAQ1T,KAAKgM,MAAMwH,EAAI,MAAQxT,KAAKgM,OAAQ0H,EAAO,KACnF,IAAXF,EAAI,IAAyC,IAA7BxT,KAAKgM,OAAQ0H,EAAO,KAAY,CAChD,GAAIsuC,GAAWr6B,KAAK7G,MAAMkhC,SACtB7vC,EAAQ6vC,EAASE,WACO,KAAjBv6B,KAAK66D,SAA2B76D,KAAK24D,SAAW,GACvDt+B,EAASgO,gBAAgBroC,KAAK24D,UAElC8S,EAAO/oF,GAAKmJ,EAAI,GAChB4/E,EAAO9oF,GAAKkJ,EAAI,GAChBwuC,EAASqE,aAAa8sC,EAAoBC,GAC1CpxC,EAASK,QAAQlwC,GACjBwV,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,MAC9B87D,GAAgB,GAOxC,MAAOA,IAEXyf,EAAsBvnF,UAAUi+D,kBAAoB,WAChD,GAAI9mE,GACA0iE,EAAc7tD,KAAKuqD,OAAO3nE,MAAQ,EAClCq8E,EAAkBj/D,KAAKg9E,0BACvBnyB,EAAgB7qD,KAAK9C,MACH,KAAlB2tD,GAAyC,KAAlBA,GAA0C,MAAlBA,GAA2C,MAAlBA,IACxE7qD,KAAK44D,gBAAiB,EAQ1B,IAAI/sE,IALAV,EADA0/D,EAAgB,GAAK7qD,KAAK44D,eACf,GAAIntE,KAAa,EAAG,EAAGwzE,EAAgB,GAAIA,EAAgB,IAAKj/D,KAAKtU,iBAGrE,GAAID,IAAYwzE,EAAiBj/D,KAAKtU,kBAElCI,SAASvK,WAAWW,SAAS,QAC5C8G,EAAQgX,KAAKi7D,mBACbpvE,IAAiB,OAAV7C,OAAmC,KAAVA,GAChCmC,EAASW,SAASvK,WAAWd,IAAI,UAAW,EAAG,EAAG,EAAG,GAAIoL,EAAI,IAAKA,EAAI,IAE1E,IAAI4hE,GAAY,GAAI0E,IAChB/kE,EAAO4S,KAAKi9E,aAChB9xF,GAASy7D,sBAAuB,CAChC,IAAIvsB,GAAWlvC,EAASkvC,SACpB/0B,EAAYtF,KAAKk9E,uBACjB/wB,EAAcnsD,KAAKu8E,eACnB3uB,EAAY,GAAI/qB,IAAOspB,EAAansD,KAAKuqD,OAAO3nE,MAChDod,MAAKuqD,OAAO3nE,MAAQ,IACpB6qE,EAAUG,UAAYA,EAE1B,IAAInrE,GAAYud,KAAKy+D,aAAa7Q,EAAWqR,EAAiBpR,EAAaJ,EAQ3E,IAPIztD,KAAKhc,QACLypE,EAAUmB,UAAY,GAAI9rB,IAAS9iC,KAAK8hC,SAExC9hC,KAAKg4E,kBACLvqB,EAAUC,UAAY,GAAI5qB,IAAS9iC,KAAKs3E,mBAE5C7pB,EAAUI,YAAc7tD,KAAKuqD,OAAO3nE,MAChCod,KAAKm9E,cAAgBn9E,KAAK+7E,cAAchjG,QAAU,EAAG,CAKrD,GAJAinB,KAAKo9E,cAAc/iD,EAAUuzB,GACzB5tD,KAAKpK,eAA8C,KAA1BoK,KAAKkmE,mBAC9BlmE,KAAKkmE,iBAAmBlmE,KAAKsmE,iBAE7BtmE,KAAKkmE,mBAAqBtgF,qBAAmBY,KAAM,CACnD,GAAIgxC,GAAax3B,KAAKynE,oBAClB4V,EAAUr9E,KAAKqgE,UAAU7oC,GACzBowC,EAAW5nE,KAAKwgE,eAAehpC,EAAW,GAAIA,EAAW,IAAK,GAAI,EACtEx3B,MAAK0gE,kBAAkBkH,EAAUvtC,EAAUgjD,EAASzvB,EAAWH,EAAUmB,UAAW5uD,KAAKsmE,gBAAiBtmE,KAAKuqD,OAAO3nE,OAAO,IAS7HH,EAPCud,KAAK1U,YAAYtJ,IAAI,OAOTS,EAAU,IAAKA,EAAU,GAAIA,EAAU,IAAKA,EAAU,KANtDud,KAAK/G,OAAOvW,IAClBsd,KAAK7G,MAAM1e,KAAK,IAAMulB,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,SACrD+lB,KAAK/G,OAAOrW,OACXod,KAAK/G,OAAOhf,SAKX,GAAKwI,EAAU,GAAKud,KAAK07E,eACnCj5F,EAAU,GAAKA,EAAU,GAAKud,KAAK27E,eACnC37E,KAAKs9E,oBAAoB76F,GACzBgrE,EAAUx0D,OAASxW,MAGnBA,IAAaA,EAAU,IAAKA,EAAU,GAAIA,EAAU,IAAKA,EAAU,IACnEgrE,EAAUx0D,OAASxW,CAKvB,KAAK,GAHD86F,GAAiBv9E,KAAKg9E,0BACtB7kG,GAASsK,EAAU,GAAK86F,EAAe,IAAO96F,EAAU,GAAO86F,EAAe,GAAI96F,EAAU,GAAK86F,EAAe,IAC5G96F,EAAU,GAAM86F,EAAe,GAAQ96F,EAAU,GAAO86F,EAAe,IACtErkG,EAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAC1Bf,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAO,IAC3CnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,MAAQnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAGxF0mB,MAAK1U,YAAY9C,OAAO,KAAMrQ,GAC1B6nB,KAAK66D,SAAW76D,KAAK24D,SAAW,IAChCt+B,EAASE,OACTF,EAASgO,gBAAgBroC,KAAK24D,WAE9B34D,KAAK6qD,eAAiB7qD,KAAK9T,UAAY7R,mBAAiBme,QACxD6hC,EAASE,OAEbv6B,KAAKw9E,uBAAuBnjD,EAAUozB,EAAWhrE,EAAW6iB,GACxDlY,GACA4S,KAAKy9E,oBAAoBpjD,EAAUozB,EAAWhrE,EAAW2K,EAAMkY,GAE/DtF,KAAK66D,SAAW76D,KAAK24D,SAAW,GAChCt+B,EAASK,UAET16B,KAAK6qD,eAAiB7qD,KAAK9T,UAAY7R,mBAAiBme,QACxD6hC,EAASK,SAEb,IAAIzhC,GAAS+G,KAAKg9E,yBAKlB,OAJIh9E,MAAK08D,UACL18D,KAAK9G,SAAYxW,EAAGuW,EAAO,GAAItW,EAAIqd,KAAK7G,MAAM1e,KAAK,IAAMwe,EAAO,GAAKA,EAAO,IAAMrW,MAAOqW,EAAO,GAAIhf,OAAQgf,EAAO,KAEvH+G,KAAK1U,YAAY7K,IAAI,QAASwY,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACvF9N,GAEXowF,EAAsBvnF,UAAUspF,oBAAsB,SAAUI,GAK5D,IAAK,GAJDH,GAAiBv9E,KAAKg9E,0BACtB7kG,GAASulG,EAAe,GAAKH,EAAe,IACzCG,EAAe,GAAOH,EAAe,GAAIG,EAAe,GAAKH,EAAe,IAC3EG,EAAe,GAAMH,EAAe,GAAQG,EAAe,GAAOH,EAAe,IAChFrkG,EAAI,EAAGA,EAAI,EAAGA,IACff,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAO,IAC3CnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,MAAQnB,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAGxF0mB,MAAK1U,YAAY7K,IAAI,KAAMtI,IAE/BojG,EAAsBvnF,UAAUyoF,wBAA0B,SAAUD,GAChE,OAAQA,GACJ,IAAKvrF,uBAAoBC,gBACrB8O,KAAKw7E,cAAgB,iBACrB,MACJ,KAAKvqF,uBAAoBE,mBACrB6O,KAAKw7E,cAAgB,qBAG7B,MAAOx7E,MAAKw7E,eAEhBD,EAAsBvnF,UAAUuiE,YAAc,WAC1C,GAAI7/D,GAAWsJ,KAAK9L,oBACpB,KAAKwC,EAASjc,MAAQulB,KAAK1U,YAAYtJ,IAAI,MAAO,CAC9C,GAAI27F,OAAS,EAIb,IAHI39E,KAAK87E,eAAe/iG,OAAS,GAAKinB,KAAK87E,eAAe,KACtD6B,EAAS39E,KAAK87E,eAAe,IAE7B6B,YAAkBtoF,IAAiB,CAC/Bd,EAAOopF,CACXjnF,GAASjc,KAAO8Z,EAAK9Z,KACrBic,EAAS5R,MAAQyP,EAAKzP,MACtB4R,EAASvO,KAAOoM,EAAKslB,YAAYvgC,eAEhC,IAAIqkG,YAAkB1nF,IAAoB,CAC3C,GAAI1B,GAAOopF,CACXjnF,GAASjc,KAAO8Z,EAAK9Z,KACrBic,EAAS5R,MAAQyP,EAAKzP,MACtB4R,EAASvO,KAAOoM,EAAKslB,YAAYvgC,YAGzC,MAAO8b,IAASsB,EAASvO,KAAMuO,EAASjc,KAAMic,EAAS5R,MAAOkb,OAElEu7E,EAAsBvnF,UAAUooF,aAAe,SAAU7nF,EAAMvQ,EAAOshB,GAClE,GAAIijE,GAAK,QACLh0E,EAAKuW,SAASkH,MACd,IACAzd,EAAK9Z,KACL,YAAc2W,GAAwBmD,EAAKzP,OAC3C,UACAkb,KAAKwhE,YAAYx9E,EACrBgc,MAAK1U,YAAY9C,OAAO,KAAM+/E,EAC9B,IAGI3W,GACAgsB,EAJAC,EAAO,+EACLtpF,EAAKuW,SAASkH,MAAQ,IAAMzd,EAAK9Z,KAAO,mBACvC8Z,EAAKiwC,OAAS,OAAS,UAAY,UAAYxkC,KAAKwhE,YAAYx9E,GAAS,iBAGhF,IAAkB,OAAdshB,OAA2C,KAAdA,EAA2B,CACxD,OAAQA,GACJ,IAAKtH,oBAAiB9jB,KAClB0jG,EAAgB,MAChB,MACJ,KAAK5/E,oBAAiBmoC,OAClBy3C,EAAgB,QAChB,MACJ,KAAK5/E,oBAAiB7F,MAClBylF,EAAgB,OAChB,MACJ,KAAK5/E,oBAAiBwoC,QAClBo3C,EAAgB,UAGpBA,IACAhsB,EAAgB,cAAgBgsB,EAAgB,KAGxD,GACIE,GADAC,EAAiB,GAEjBxsF,EAAS,oBACTD,EAAO,iBACPiD,GAAKsyC,aACLk3C,EAAiBxpF,EAAKuyC,YAAc,oCAAsC,uBACtEvyC,EAAK8uC,SACL06C,GAAkB,IAAMxsF,EAEnBgD,EAAKiwC,SACVu5C,GAAkB,IAAMzsF,IAGvBiD,EAAKuyC,aACVi3C,EAAiB,+BACbxpF,EAAK8uC,SACL06C,GAAkB,IAAMxsF,EAEnBgD,EAAKiwC,SACVu5C,GAAkB,IAAMzsF,IAIxBiD,EAAK8uC,SACL06C,GAAkBxsF,EAEbgD,EAAKiwC,SACVu5C,GAAkBzsF,GAItBwsF,EADmB,KAAnBC,EACiB,kBAAoBnsB,EAAgBmsB,EAAiB,MAAQ/9E,KAAK5S,KAAO4S,KAAKg+E,uBAAuBh+E,KAAK5S,MAAQ,IAAM,UAGxH,kBAAoBwkE,EAAgB,MAAQ5xD,KAAK5S,KAAO4S,KAAKg+E,uBAAuBh+E,KAAK5S,MAAQ,IAAM,UAE5H4S,KAAK1U,YAAY9C,OAAO,KAAMq1F,EAAOC,EAAiB,gBAE1DvC,EAAsBvnF,UAAUypF,oBAAsB,SAAUpjD,EAAUozB,EAAWhrE,EAAW2K,EAAMkY,GAClG,GAAI24E,IAAa,EACbj1F,EAAQgX,KAAK9C,MAgBjB,IAfI8C,KAAK6qD,gBAAkBxwE,mBAAiBC,SAAY0lB,KAAK44D,eAGpD54D,KAAK6qD,gBAAkBxwE,mBAAiBE,UAAaylB,KAAK44D,eAG1D54D,KAAK6qD,gBAAkBxwE,mBAAiBG,UAAawlB,KAAK44D,eAGhD,IAAV5vE,GAAgBgX,KAAK44D,iBAC1Bn2E,GAAaA,EAAU,GAAKA,EAAU,GAAKA,EAAU,GAAKA,EAAU,GAAIA,EAAU,KAHlFA,GAAcA,EAAU,GAAKA,EAAU,KAAOA,EAAU,GAAKA,EAAU,KAAMA,EAAU,GAAIA,EAAU,IAHrGA,KAAeA,EAAU,GAAKA,EAAU,KAAMA,EAAU,GAAIA,EAAU,IAAKA,EAAU,IAHrFA,IAAcA,EAAU,GAAIA,EAAU,IAAKA,EAAU,GAAIA,EAAU,SAW5C,KAAfud,KAAKqJ,OAAwC,OAAfrJ,KAAKqJ,QAAqBrJ,KAAKpK,WAAiC,IAApBoK,KAAKqJ,MAAM5uB,QAC7FulB,KAAKqJ,MAAQrJ,KAAKy7E,aAElBzyF,EAAQ,GAAKgX,KAAK44D,eAAgB,CAClCqlB,GAAa,CACb,IAAIC,GAAWl+E,KAAK/G,OAChB4N,EAAS,GAAI/B,IAAgB9G,mBAAiBmoC,OAAQ3gC,uBAAqB29B,QAC3EmE,EAAWtnC,KAAKqJ,MAAMymB,cAAc1iC,GAAO,EAAG,GAAIyZ,EAAQ,EAAG,EAC7D7d,GAAQ,GAAKA,GAAS,GACtBqxC,EAASG,mBAAmB8M,EAAS,IAAK42C,EAASjkG,QAE9C+O,EAAQ,IAAMA,GAAS,IAC5BqxC,EAASG,mBAAmB0jD,EAASt7F,MAAQ0kD,EAAS,KAAM42C,EAASjkG,OAASqtD,EAAS,KAElFt+C,EAAQ,KAAOA,GAAS,IAC7BqxC,EAASG,mBAAmB0jD,EAASt7F,MAAQ0kD,EAAS,IAAKA,EAAS,IAE/Dt+C,EAAQ,KAAOA,EAAQ,KAC5BqxC,EAASG,mBAAmB8M,EAAS,IAAKA,EAAS,IAEvDjN,EAAS+N,gBAAgBp/C,GACzBykE,EAAUx0D,QAAU,EAAG,EAAGw0D,EAAUx0D,OAAO,GAAIw0D,EAAUx0D,OAAO,IAEpE,GAAIA,IAAUxW,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAClE,IAAIud,KAAK68E,YAAc78E,KAAKpK,UAAW,CACnC,GAAI1b,GAAO8lB,KAAK68E,UAAUsB,MACtBC,EAAQp+E,KAAK68E,UAAUwB,KACvBlmF,EAAQ6H,KAAK68E,UAAUyB,OAASt+E,KAAK68E,UAAUsB,MAC/CjmF,EAAS8H,KAAK68E,UAAUwB,KAAOr+E,KAAK68E,UAAU0B,OAClD,IAAI9wB,EAAUI,YAAc,EAAG,CAW3BprE,GAVcA,EAAU,IAAMgrE,EAAUI,YAAc3zE,GACvCuI,EAAU,IAAMgrE,EAAUI,YAAcuwB,GACnDve,EAAQp9E,EAAU,IAA+B,EAAxBgrE,EAAUI,YAAmB11D,GAEtD1V,EAAU,GAAK,EACPA,EAAU,IAA+B,EAAxBgrE,EAAUI,YAAmB31D,IAG7CzV,EAAU,IAA+B,EAAxBgrE,EAAUI,YAAmB31D,QAI1D,CACD,GAAIsmF,GAAU/7F,EAAU,GAAKvI,EACzBukG,EAAWh8F,EAAU,GAAK27F,EAC1Bve,EAAQp9E,EAAU,GAAK0V,CAQ3B1V,IAAa+7F,EAASC,EAAU5e,EAN5Bp9E,EAAU,GAAK,EACPA,EAAU,GAAKyV,GAGdzV,EAAU,GAAKyV,QAK3Bu1D,GAAUI,YAAc,IAC7BprE,GAAaA,EAAU,GAA8B,IAAxBgrE,EAAUI,YACnCprE,EAAU,GAA8B,IAAxBgrE,EAAUI,YAC1BprE,EAAU,GAA8B,EAAxBgrE,EAAUI,YACzBprE,EAAU,GAAK,EAAMA,EAAU,GAA8B,EAAxBgrE,EAAUI,aAAsBprE,EAAU,GAA8B,EAAxBgrE,EAAUI,aAExG,IAAItwE,GAAQyiB,KAAKqJ,MAAMyB,SAAS5D,cAAiBzkB,EAAU,GAAK,EAAKA,EAAU,IAAMA,EAAU,IAC3FjF,EAASwiB,KAAKqJ,MAAMyB,SAAS5D,eAAkBjO,EAAO,GAAK,EAAKA,EAAO,IAAMA,EAAO,IACpFylF,EAA6BnhG,GAASC,CAC1CwiB,MAAK2+E,wBAAwBtkD,EAAUozB,EAAWrgE,EAAM4S,KAAKqJ,MAAOq1E,EAA6BzlF,EAASxW,GAAW,EAAM6iB,EAAW24E,IAE1I1C,EAAsBvnF,UAAUwpF,uBAAyB,SAAUnjD,EAAUozB,EAAWhrE,EAAW6iB,GAE/F,GAAItF,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,IAAK,GAAI9I,GAAI,EAAGA,EAAIuJ,EAAU1J,OAAQG,IAC9BuJ,EAAUrJ,OAAOC,SAASH,EAAEI,WAAY,KAAO,IAC/CmJ,EAAUrJ,OAAOC,SAASH,EAAEI,WAAY,MAAQmJ,EAAUrJ,OAAOC,SAASH,EAAEI,WAAY,KAGhG0mB,MAAK+zD,gBAAgB15B,EAAUozB,EAAWhrE,GACtCud,KAAK6qD,gBAAkBxwE,mBAAiBC,SAAY0lB,KAAK44D,eAGpD54D,KAAK6qD,gBAAkBxwE,mBAAiBE,UAAaylB,KAAK44D,eAG1D54D,KAAK6qD,gBAAkBxwE,mBAAiBG,UAAawlB,KAAK44D,gBAC/Dv+B,EAAS+N,iBAAiB,KAH1B/N,EAAS+N,iBAAiB,KAH1B/N,EAAS+N,iBAAiB,QAU1BpoC,MAAK6qD,gBAAkBxwE,mBAAiBC,SAAY0lB,KAAK44D,eAIpD54D,KAAK6qD,gBAAkBxwE,mBAAiBE,UAAaylB,KAAK44D,eAI1D54D,KAAK6qD,gBAAkBxwE,mBAAiBG,UAAawlB,KAAK44D,iBAC/Dv+B,EAAS+N,iBAAiB,KAC1BqlB,EAAUx0D,QAAUxW,EAAU,GAAKA,EAAU,IAAKA,EAAU,IAAKA,EAAU,IAAKA,EAAU,MAL1F43C,EAAS+N,iBAAiB,KAC1BqlB,EAAUx0D,UAAYxW,EAAU,GAAKA,EAAU,MAAOA,EAAU,GAAKA,EAAU,IAAKA,EAAU,GAAIA,EAAU,MAL5G43C,EAAS+N,iBAAiB,IAC1BqlB,EAAUx0D,SAAWxW,EAAU,GAAIA,EAAU,GAAKA,EAAU,IAAKA,EAAU,IAAKA,EAAU,KAU1FgrE,EAAUI,YAAc,IAAM7tD,KAAK44D,iBACnCn2E,EAAYgrE,EAAUx0D,QAE1B+G,KAAK2+E,wBAAwBtkD,EAAUozB,EAAW,GAAIztD,KAAKqJ,MAAO5mB,GAAW,EAAO6iB,GAlCvE,IAqCrBi2E,EAAsBvnF,UAAU+/D,gBAAkB,SAAU15B,EAAUozB,EAAWhrE,GAC7E,GAAI08E,GAAe,GAAI7oC,GAEvB,IADA6oC,EAAajnC,aAAaz1C,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAC1Eud,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GACIm/C,GAAmB,IADX5/C,EAAWY,IAAI,KACA,EAAI,CAC/B6d,MAAKg9D,gBAAgB3iC,EAAUozB,EAAUmB,UAAWnB,EAAUG,UAAWzsB,EAAQ,KAAOg+B,EAAa3oC,SAAS,MAI1H+kD,EAAsBvnF,UAAU2qF,wBAA0B,SAAUp6F,EAAGkpE,EAAWrgE,EAAMmH,EAAM9R,EAAWm8F,EAAqBt5E,EAAW24E,GACrI,GAAKW,EAGA,CACD,GAAI/3E,GAAS,GAAI/B,GACjB+B,GAAOtB,cAAgBC,uBAAqBhM,IAC5CqN,EAAOvB,UAAYA,EACnBuB,EAAOnB,YAAc,EACjBu4E,EACA15F,EAAEw9C,WAAW30C,EAAMmH,EAAMk5D,EAAUx0D,OAAQ,KAAMw0D,EAAUC,UAAW7mD,GAGtEtiB,EAAEw9C,WAAW30C,EAAMmH,EAAM9R,EAAW,KAAMgrE,EAAUC,UAAW7mD,OAXnEtiB,GAAEu4C,cAAcr6C,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIgrE,EAAUG,UAAWH,EAAUmB,YAe/G2sB,EAAsBvnF,UAAUgoF,sBAAwB,WACpD,GAAIh8E,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAI68F,GAAoB7+E,KAAK1U,YAAYpJ,SAAS,KAClD,IAAI28F,EAAmB,CACnB7+E,KAAK+7E,gBACL,KAAK,GAAI7iG,GAAI,EAAGA,EAAI2lG,EAAkB9lG,OAAQG,GAAQ,EAAG,CACrD,GAAIuQ,IAAUo1F,EAAkBzlG,OAAOC,SAASH,EAAEI,WAAY,KAC1D0mB,KAAK7G,MAAM1e,KAAK,GAAKokG,EAAkB3lG,EAAI,GAC/C8mB,MAAK+7E,cAAczgG,KAAKmO,KAIpC,MAAOuW,MAAK+7E,eAEhBR,EAAsBvnF,UAAUgpF,wBAA0B,WACtD,GAAI/jF,IAAU,EAAG,EAAG,EAAG,EACvB,IAAI+G,KAAKm9E,cAAgBn9E,KAAK+7E,cAAchjG,OAAS,EAAG,CAIpD,IAAK,GAHDgoD,GAAO,GAAIzK,IACXwoD,KACAC,EAAyC,IAA9B/+E,KAAK+7E,cAAchjG,OAAe,EAAI,EAC5CG,EAAI,EAAGA,EAAI6lG,EAAU7lG,IAC1B4lG,EAAWxjG,MAAM,EAAG,GAExB,IAAI0kB,KAAK+7E,cAAchjG,QAAU,EAAG,CAChCinB,KAAKg/E,uBACL,KAAS9lG,EAAI,EAAGA,EAAI8mB,KAAK+7E,cAAchjG,QAC/BG,EAAI,EADmCA,IAEvC4lG,EAAW1lG,OAAOC,SAASH,EAAEI,WAAY,MAAQ0mB,KAAKi/E,eAAe7lG,OAAOC,SAASH,EAAEI,WAAY,KAAK,GACpG0mB,KAAKi/E,eAAe7lG,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAOnEwlG,EAAW/lG,OAAS,IAChBinB,KAAKsmE,kBAAoB1gF,qBAAmBY,MAC5CwZ,KAAKk/E,kBAAkBJ,GAE3B/9C,EAAKxJ,UAAUunD,IAEnB/9C,EAAK7I,aAAcl4B,KAAK/G,OAAOvW,EAAIsd,KAAK07E,eAAkB,EAAK17E,KAAK7G,MAAM1e,KAAK,GAAKulB,KAAK27E,gBAAmB37E,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,QAAW,EAAG+lB,KAAK/G,OAAOrW,QAAiBod,KAAK/G,OAAOhf,UAC/Lgf,EAAS8nC,EAAKtH,iBAGdxgC,IAAU+G,KAAK/G,OAAOvW,EAAIsd,KAAK07E,eACzB17E,KAAK7G,MAAM1e,KAAK,GAAKulB,KAAK27E,gBAAmB37E,KAAK/G,OAAOtW,EAAIqd,KAAK/G,OAAOhf,QAC3E+lB,KAAK/G,OAAOrW,MACZod,KAAK/G,OAAOhf,OAEpB,OAAOgf,IAEXsiF,EAAsBvnF,UAAUgrF,sBAAwB,WACpD,GAAIh/E,KAAKm9E,cAAgBn9E,KAAK+7E,cAAchjG,OAAS,EAAG,CACpD,GAAI0B,GAAOulB,KAAK7G,MAAM1e,IACtBulB,MAAKi/E,iBACL,KAAK,GAAI/lG,GAAI,EAAGA,EAAI8mB,KAAK+7E,cAAchjG,OAAQG,IAC3C8mB,KAAKi/E,eAAe3jG,MAAM0kB,KAAK+7E,cAAc3iG,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAK0mB,KAAK07E,eACrFjhG,EAAK,GAAKulB,KAAK27E,eAAkB37E,KAAK+7E,cAAc3iG,OAAOC,SAASH,EAAEI,WAAY,KAAK,OAIxGiiG,EAAsBvnF,UAAUyzE,kBAAoB,WAChD,GAAI5jF,GAAamc,KAAK7G,MAAM1e,KAAK,EACjC,QAAQulB,KAAKm9E,aAAa,GAAG,GAAKn9E,KAAK07E,eAClC73F,EAAamc,KAAK27E,eAAkB37E,KAAKm9E,aAAa,GAAG,GAC1Dn9E,KAAKm9E,aAAa,GAAG,GAAKn9E,KAAK07E,eAC9B73F,EAAamc,KAAK27E,eAAkB37E,KAAKm9E,aAAa,GAAG,KAElE5B,EAAsBvnF,UAAUioF,uBAAyB,WACrD,GAAI3V,GAAkB1gF,qBAAmBQ,MAIzC,OAHI4Z,MAAK1U,YAAYtJ,IAAI,QACrBskF,EAAkBhgF,EAAoB0Z,KAAK1U,YAAYnJ,IAAI,MAAMgG,KAAMm+E,IAEpEA,GAEXiV,EAAsBvnF,UAAUipF,YAAc,WAC1C,GAAI7vF,GAAO,GACP+xF,EAAYn/E,KAAK1U,YAAYtJ,IAAI,WACrC,IAAIm9F,EAAW,CACX,GAAIC,GAAap/E,KAAK1U,YAAYnJ,IAAI,WAOtC,OANIi9F,KACAhyF,EAAOgyF,GAEPhyF,GAAiB,KAATA,IACR4S,KAAK+M,MAAQ3f,GAEVA,EAEN,MAAI4S,MAAK1U,YAAYtJ,IAAI,QAAUm9F,GAAsB,OAAT/xF,EACjDA,EAAO4S,KAAKq/E,QAGTjyF,GAEXmuF,EAAsBvnF,UAAUkpF,qBAAuB,WACnD,GACIoC,GADA1tB,EAAgB5zD,mBAAiB9jB,IAgBrC,IAdI8lB,KAAK1U,YAAYtJ,IAAI,SAEA,MADjB7J,EAAQ6nB,KAAK1U,YAAYnJ,IAAI,QAE7ByvE,EAAgBz5E,EAChBmnG,GAAe,GAGdt/E,KAAK1U,YAAYtJ,IAAI,OACtBge,KAAK87E,eAAe/iG,OAAS,GAAKinB,KAAK87E,eAAe,KAEtDlqB,EADkB5xD,KAAK87E,eAAe,GAEtCwD,GAAe,IAGlBA,GAAgBt/E,KAAK1U,YAAYtJ,IAAI,MAGtC,IAAK,GAFD7J,GAAQ6nB,KAAK1U,YAAYnJ,IAAI,MAC7B+5F,EAAc/jG,EAAMwc,MAAM,KACrBzb,EAAI,EAAGA,EAAIgjG,EAAYnjG,OAAQG,IACpC,IAA8E,IAA1EgjG,EAAY9iG,OAAOC,SAASH,EAAEI,WAAY,KAAK4G,QAAQ,cACvD,OAAQg8F,EAAY9iG,OAAOC,SAASH,EAAEI,WAAY,MAC9C,IAAK,OACDs4E,EAAgB5zD,mBAAiB9jB,IACjC,MACJ,KAAK,QACD03E,EAAgB5zD,mBAAiB7F,KACjC,MACJ,KAAK,SACDy5D,EAAgB5zD,mBAAiBmoC,MACjC,MACJ,KAAK,UACDyrB,EAAgB5zD,mBAAiBwoC,QAMrD,MAAOorB,IAEX2pB,EAAsBvnF,UAAUuoF,aAAe,WAC3C,GAAIv4F,EACJ,IAAIgc,KAAKpK,UACL,GAAIoK,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIoC,GAAQ4b,KAAK1U,YAAYnJ,IAAI,KAC7BlC,OAAMuB,QAAQ4C,IAAUA,EAAMrL,OAAS,EACvCiL,GAASI,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAEb,gBAAVA,KACZ4b,KAAK+pD,IAAM,GAAIC,IAAsB5lE,GACrCJ,EAAQgc,KAAK+pD,IAAI/lE,WAGpB,IAAIgc,KAAK1U,YAAYtJ,IAAI,MAAO,CACjC,GAAI4Q,GAASoN,KAAK6rD,aACdj5D,IAAUA,EAAO5Q,IAAI,QACrBgC,EAAQG,EAAYyO,EAAO1Q,SAAS,YAIxC8B,IAAS,EAAG,EAAG,OAInBA,GAAQgc,KAAKs8E,aAAet8E,KAAKs8E,cAAgB,EAAG,EAAG,EAE3D,OAAOt4F,IAEXu3F,EAAsBvnF,UAAUkrF,kBAAoB,SAAUJ,GAC1D,GAAIS,GAAST,EAAW,GAAG,GACvBU,EAASV,EAAW,GAAG,EACtB9+E,MAAKpK,YACN2pF,EAASv/E,KAAK7G,MAAM1e,KAAK,GAAK8kG,GAE9BA,EAASv/E,KAAK/G,OAAOtW,EACjBqd,KAAKsmE,kBAAoB1gF,qBAAmBC,YAC5Ci5F,EAAW,GAAG,IAA2B,GAApB9+E,KAAKuqD,OAAO3nE,OAIrCk8F,EAAW,GAAG,IAA2B,GAApB9+E,KAAKuqD,OAAO3nE,MAEjC48F,GAAUx/E,KAAK/G,OAAOvW,EACtBo8F,EAAW,GAAG,IAA2B,GAApB9+E,KAAKuqD,OAAO3nE,MAGjCk8F,EAAW,GAAG,IAA2B,GAApB9+E,KAAKuqD,OAAO3nE,OAGzC24F,EAAsBvnF,UAAUopF,cAAgB,SAAU/iD,EAAUuzB,GAIhE,IAAK,GAHD7sB,GAAO,GAAIzK,IACXwoD,KACA/lG,EAAuC,IAA9BinB,KAAK+7E,cAAchjG,OAAe,EAAI,EAC1CG,EAAI,EAAGA,EAAIH,EAAQG,IACxB4lG,EAAWxjG,MAAM,EAAG,GAExB,IAAI0kB,KAAK+7E,cAAchjG,QAAU,EAAG,CAChCinB,KAAKg/E,uBACL,KAAS9lG,EAAI,EAAGA,EAAI8mB,KAAK+7E,cAAchjG,QAAUG,EAAI,EAAGA,IACpD4lG,EAAW1lG,OAAOC,SAASH,EAAEI,WAAY,MAAQ0mB,KAAKi/E,eAAe7lG,OAAOC,SAASH,EAAEI,WAAY,KAAK,IACnG0mB,KAAKi/E,eAAe7lG,OAAOC,SAASH,EAAEI,WAAY,KAAK,IAGhEwlG,EAAW/lG,OAAS,GACpBgoD,EAAKxJ,UAAUunD,GAEnBzkD,EAASyG,SAASC,EAAM6sB,IAE5B2tB,EAAsBvnF,UAAU8oF,wBAA0B,WAmBtD,QAlB0B,KAAd98E,KAAKzL,MAAsC,OAAdyL,KAAKzL,OAAoByL,KAAKpK,WAAgC,IAAnBoK,KAAKzL,KAAK9Z,QAC1FulB,KAAKzL,KAAOyL,KAAKy7E,aAEI,gBAAdz7E,MAAK5S,MAAmC,OAAd4S,KAAK5S,MACtC4S,KAAK1U,YAAY9C,OAAO,WAAYwX,KAAK5S,MAEzC4S,KAAKpK,YACLoK,KAAKswD,eAAiBtwD,KAAK4xD,eAE/B5xD,KAAK1U,YAAY9C,OAAO,IAAKwX,KAAKswD,gBAC9BtwD,KAAKy/E,mBAAqBxuF,sBAAoBzK,KAC9CwZ,KAAK1U,YAAY9C,OAAO,OAAQ,YAGhCwX,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI6d,KAAKy8E,wBAAwBz8E,KAAKw8E,qBAEjFx8E,KAAKo8E,aAAap8E,KAAKzL,KAAMyL,KAAKg4E,gBAAiBh4E,KAAKswD,gBACxDtwD,KAAK1U,YAAY9C,OAAO,KAAMwX,KAAKqjE,sBAAsBrjE,KAAKmsD,YAAcnsD,KAAKs8E,cAAgB,EAAG,EAAG,KACnGt8E,KAAK+7E,eAAiB/7E,KAAK+7E,cAAchjG,QAAU,EAAG,CAGtD,IAAK,GAFD8K,GAAamc,KAAK7G,MAAM1e,KAAK,GAC7BqvB,KACK5wB,EAAI,EAAGA,EAAI8mB,KAAK+7E,cAAchjG,QAAUG,EAAI,EAAGA,IACpD4wB,EAAMxuB,KAAK0kB,KAAK+7E,cAAc3iG,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAAK0mB,KAAK07E,gBAC3E5xE,EAAMxuB,KAAMuI,EAAamc,KAAK27E,eAAkB37E,KAAK+7E,cAAc3iG,OAAOC,SAASH,EAAEI,WAAY,KAAK,GAE1G0mB,MAAK1U,YAAY9C,OAAO,KAAMshB,GAElC,GAAI9J,KAAK2sD,eAAgB,CACrB,GAAIvpE,GAAO4c,KAAKg9E,yBAChBh9E,MAAK1U,YAAY9C,OAAO,QAASpF,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAKA,EAAK,GAAIA,EAAK,GAAKA,EAAK,OAG7Fm4F,EAAsBvnF,UAAUgqF,uBAAyB,SAAU0B,GAI/D,MAHAA,GAAaA,EAAW1/F,QAAQ,IAAK,SACrC0/F,EAAaA,EAAW1/F,QAAQ,IAAK,QACrC0/F,EAAaA,EAAW1/F,QAAQ,IAAK,SAGzCu7F,EAAsBvnF,UAAU0oF,yBAA2B,SAAUiD,GACjE,GAQIC,GARA73E,EAAQ/H,KACRwxB,EAAYngC,eAAa4D,QACzB4qF,KAGA3kD,EAAUykD,CAKd,MAJkB3/E,KAAK1U,YAAYtJ,IAAI,YAAcge,KAAK1U,YAAYnJ,IAAI,YAAc,IAGhEwS,MAAM,IAAIwuD,KAAK,SAAUv6D,GAAQ,MAAOmf,GAAM6S,UAAUhyB,MAE5D,OAAZsyC,OAAuC,KAAZA,EAAyB,CAEpD,GAAI4W,IADJ8tC,GAAY,GAAKnnC,YAAaC,gBAAgBxd,EAAS,aAClC0d,gBACjBknC,EAAgBhuC,GAAQA,EAAKiuC,cAAiB,EAClD,IAAIjuC,EAAM,CACN,GAAIkuC,GAAWhgF,KAAKigF,eAAenuC,EACnC,IAAIkuC,EAASvlG,KAAO,EAAG,CACnB,GAAI8E,GAAQygB,KAAKkgF,sBAAsBF,GACnCG,EAAcngF,KAAKogF,gBAAgB7gG,EAAOygB,KAAKzL,KAAK9Z,KAAMulB,KAAK4xD,cAAepgC,EAhBtF,MAiBQz2B,EAAKiF,KAAKqgF,sBAAsBF,EAhBrC,GAgB4D3uD,EAjB/D,MAiBkF8uD,EAAkBvlF,EAAGspC,SAAUk8C,EAAmBxlF,EAAGy2B,UAAWgvD,EAAezlF,EAAGoiC,MAC5JsjD,EAAarrF,GAASkrF,EAAiBtgF,KAAKzL,KAAK8S,MAAOk5E,EAAkBvgF,KAC9E6/E,GAAiB7/E,KAAK0gF,gBAAgBb,EAAgBY,EAAYX,EAAc9/E,KAAKswD,eAAgBkwB,KAMrH,MADAxgF,MAAK87E,eAAiB+D,EACfA,GAEXtE,EAAsBvnF,UAAUisF,eAAiB,SAAUnuC,EAAMkuC,GAE7D,OADiB,KAAbA,IAAuBA,EAAW,GAAIl4D,OACrCgqB,EACD,MAAOkuC,EAEX,IAAIW,GAAY,IAChB,KACIA,EAAYC,OAAOC,iBAAiB/uC,GAExC,MAAOgvC,GACH,MAAOd,GAEXA,EAASv/F,IAAIqxD,EAAKivC,QAAQt6F,cAAek6F,EAEzC,KADA,GAAIrnC,GAAYxH,EAAKkvC,kBACd1nC,GACHt5C,KAAKigF,eAAe3mC,EAAW0mC,GAC/B1mC,EAAYA,EAAU2nC,kBAE1B,OAAOjB,IAEXzE,EAAsBvnF,UAAUksF,sBAAwB,SAAUF,GAC9D,GAAIzgG,KAYJ,OAXAygG,GAASh1F,QAAQ,SAAU45D,GACvB,GAAIA,GAAcA,EAAW7rE,OAAS,EAClC,IAAK,GAAIG,GAAI,EAAGA,EAAI0rE,EAAW7rE,OAAQG,IAAK,CACxC,GAAIgoG,GAAet8B,EAAW15D,KAAK9R,OAAOC,SAASH,EAAEI,WAAY,IACjE,IAAqB,OAAjB4nG,OAA0C9+F,KAAjB8+F,EAA4B,CACrD,GAAIC,GAAgBv8B,EAAWw8B,iBAAiBF,EAChD3hG,GAAMjE,KAAK4lG,EAAe,KAAOC,OAK1C5hG,GAEXg8F,EAAsBvnF,UAAU4mB,UAAY,SAAUhyB,GAClD,GAAIhM,GAAOgM,EAAKzM,WAAW,EAC3B,OAAa,MAATyM,GAAyB,MAATA,GAAyB,MAATA,GAAyB,MAATA,GAAyB,MAATA,IAG3DhM,GAAQ,MAAUA,GAAQ,MAC9BA,GAAQ,MAAUA,GAAQ,MAC1BA,GAAQ,OAAUA,GAAQ,OAC1BA,GAAQ,MAAUA,GAAQ,MAC1BA,GAAQ,MAAUA,GAAQ,MACjB,QAATA,IAET2+F,EAAsBvnF,UAAUqsF,sBAAwB,SAAUF,EAAa97C,EAAU7S,EAAW2L,GAChG,GAAIp1B,GAAQ/H,IAyBZ,OAxBAmgF,GAAYn1F,QAAQ,SAAU7S,EAAOkpG,GACjC,OAAQA,GACJ,IAAK,cACDh9C,EAAWlsD,CACX,MACJ,KAAK,YACD4vB,EAAMxT,KAAK8S,MAAQnkB,WAAW/K,EAC9B,MACJ,KAAK,aACL,IAAK,cACL,IAAK,kBACDq5C,EAAYzpB,EAAMu5E,iBAAiBnpG,EAAOkpG,EAC1C,MACJ,KAAK,aACDt5E,EAAMuoD,eAAiBvoD,EAAMw5E,oBAAoBppG,EACjD,MACJ,KAAK,QACDglD,EAAQhlD,CACR,MACJ,KAAK,eACD4vB,EAAMs3E,QAAUlnG,MAInBksD,SAAUA,EAAU7S,UAAWA,EAAW2L,MAAOA,IAE9Do+C,EAAsBvnF,UAAUstF,iBAAmB,SAAUnpG,EAAOkpG,GAChE,GAAIz8B,GAAa1hE,WAAW/K,EAC5B,QAAQkpG,GACJ,IAAK,aACD,MAAsB,KAAfz8B,EAAmBvzD,eAAa4D,QACpB,IAAf2vD,EAAmBvzD,eAAaC,KACb,IAAfszD,EAAmBvzD,eAAaE,OACb,IAAfqzD,EAAmBvzD,eAAaG,UACb,IAAfozD,EAAmBvzD,eAAahM,UAAYgM,eAAa4D,OAC7E,KAAK,cACD,MAAsB,KAAf2vD,EAAmBvzD,eAAaC,KAAOD,eAAa4D,OAC/D,KAAK,kBACD,MAAsB,KAAf2vD,EAAmBvzD,eAAaG,UACpB,IAAfozD,EAAmBvzD,eAAahM,UAAYgM,eAAa4D,OACjE,SACI,MAAO5D,gBAAa4D,UAGhCsmF,EAAsBvnF,UAAUutF,oBAAsB,SAAUppG,GAE5D,OADqB+K,WAAW/K,IAE5B,IAAK,GAAG,MAAO6lB,oBAAiB9jB,IAChC,KAAK,GAAG,MAAO8jB,oBAAiBmoC,MAChC,KAAK,GAAG,MAAOnoC,oBAAiB7F,KAChC,KAAK,GAAG,MAAO6F,oBAAiBwoC,OAChC,SAAS,MAAOxoC,oBAAiB9jB,OAGzCqhG,EAAsBvnF,UAAUosF,gBAAkB,SAAU7gG,EAAO+U,EAAUs9D,EAAepgC,EAAW2L,GACnG,GAAIp1B,GAAQ/H,KACRmgF,EAAc,GAAIr4D,IA0CtB,OAzCAvoC,GAAMyL,QAAQ,SAAU1I,GACpB,GAAIyY,GAAKzY,EAAQqS,MAAM,KAAKsuD,IAAI,SAAU/3D,GAAQ,MAAOA,GAAK0J,SAAYysF,EAAWtmF,EAAG,GAAI5iB,EAAQ4iB,EAAG,EACvG,IAAIsmF,GAAYlpG,EACZ,OAAQkpG,EAAS56F,eACb,IAAK,OACDshB,EAAMy5E,WAAWrpG,EAAOgoG,EACxB,MACJ,KAAK,YACD7rF,EAAWyT,EAAM05E,eAAetpG,GAChCgoG,EAAY1/F,IAAI,YAAa6T,EAC7B,MACJ,KAAK,cACDk9B,EAAYzpB,EAAM25E,iBAAiBvpG,EAAOq5C,GAC1C2uD,EAAY1/F,IAAI,cAAe+wC,EAC/B,MACJ,KAAK,cACD2uD,EAAY1/F,IAAI,cAAesnB,EAAM45E,iBAAiBxpG,GACtD,MACJ,KAAK,QACDglD,EAAQ,GAAI2F,IAAS/6B,EAAM65E,kBAAkBzpG,IAC7CgoG,EAAY1/F,IAAI,QAAS08C,EACzB,MACJ,KAAK,aACD3L,EAAYzpB,EAAM85E,gBAAgB1pG,EAAOq5C,GACzC2uD,EAAY1/F,IAAI,aAAc+wC,EAC9B,MACJ,KAAK,kBACDA,EAAYzpB,EAAM+5E,qBAAqB3pG,EAAOq5C,GAC9C2uD,EAAY1/F,IAAI,kBAAmB+wC,EACnC,MACJ,KAAK,aACDogC,EAAgB7pD,EAAMg6E,gBAAgB5pG,GACtCgoG,EAAY1/F,IAAI,aAAcmxE,EAC9B,MACJ,KAAK,eACD7pD,EAAMs3E,QAAUlnG,EAAMY,OAAS,GAAKZ,EAAMgd,SAAS,OAAS4S,EAAMs3E,QAAU,IAAMt3E,EAAMs3E,QACxFc,EAAY1/F,IAAI,eAAgBsnB,EAAMs3E,YAK/Cc,GAEX5E,EAAsBvnF,UAAUwtF,WAAa,SAAUrpG,EAAOgoG,GAC1D,GACI97C,GAAW,EADClsD,GAAMwc,MAAM,KAAKsuD,IAAI,SAAU/3D,GAAQ,MAAOA,GAAK0J,SAEzD5J,QAAQ,SAAUg3F,GACpBA,IAASA,EAAKloF,SAAS,MACvBuqC,GAAY29C,EAAO,IAEdA,EAAKloF,SAAS,OACnBqmF,EAAY1/F,IAAI,YAAayC,WAAW8+F,EAAKhiG,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAAK4U,WAGzFurF,EAAY1/F,IAAI,cAAe4jD,EAASzvC,OAAO5U,QAAQ,SAAU,MAErEu7F,EAAsBvnF,UAAUytF,eAAiB,SAAUtpG,GACvD,MAAIA,GAAM2hB,SAAS,MACR5W,WAAW/K,EAAM6H,QAAQ,KAAM,IAAIA,QAAQ,IAAK,KAAK4U,QAEzD,GAEX2mF,EAAsBvnF,UAAU0tF,iBAAmB,SAAUvpG,EAAOq5C,GAIhE,MAHIr5C,GAAMgd,SAAS,UACfq8B,GAAangC,eAAaC,MAEvBkgC,GAEX+pD,EAAsBvnF,UAAU2tF,iBAAmB,SAAUxpG,GACzD,MAAOA,GAAM6H,QAAQ,WAAY,IAAI4U,QAEzC2mF,EAAsBvnF,UAAU6tF,gBAAkB,SAAU1pG,EAAOq5C,GAC/D,MAAIr5C,GAAMgd,SAAS,WAAahd,EAAMgd,SAAS,WACpC9D,eAAa4D,QAEpB9c,EAAMgd,SAAS,aACR9D,eAAahM,UAEpBlN,EAAMgd,SAAS,aACR9D,eAAaG,UAEpBrZ,EAAMgd,SAAS,UACR9D,eAAaE,OAEpBpZ,EAAMgd,SAAS,QACR9D,eAAaC,KAEjBkgC,GAEX+pD,EAAsBvnF,UAAU8tF,qBAAuB,SAAU3pG,EAAOq5C,GACpE,MAAIr5C,GAAMgd,SAAS,QACR9D,eAAahM,UAEpBlN,EAAMgd,SAAS,gBACR9D,eAAaG,UAEjBggC,GAEX+pD,EAAsBvnF,UAAU+tF,gBAAkB,SAAU5pG,GACxD,OAAQA,EAAMyc,OAAOnO,eACjB,IAAK,OAAQ,MAAOuX,oBAAiB9jB,IACrC,KAAK,QAAS,MAAO8jB,oBAAiB7F,KACtC,KAAK,SAAU,MAAO6F,oBAAiBmoC,MACvC,KAAK,UAAW,MAAOnoC,oBAAiBwoC,OACxC,SAAS,MAAOxoC,oBAAiB9jB,OAGzCqhG,EAAsBvnF,UAAU4tF,kBAAoB,SAAUK,GAC1D,GACIC,GAAQD,EAAUC,MADV,mCAEZ,IAAIA,EAIA,OAHQ7oG,SAAS6oG,EAAM,GAAI,IACnB7oG,SAAS6oG,EAAM,GAAI,IACnB7oG,SAAS6oG,EAAM,GAAI,IAI3B,MAAM,IAAIroG,OAAM,8BAGxB0hG,EAAsBvnF,UAAU0sF,gBAAkB,SAAUb,EAAgBtrF,EAAM4tF,EAAc78E,EAAW63B,GACvG,MAAO0iD,GAAeuC,QAAQ7tF,EAAM+Q,EAAW68E,EAAchlD,KAE1Do+C,GACThW,IAiBE8c,GAAwC,SAAUx6E,GAElD,QAASw6E,GAAuB3/F,EAAGC,EAAGC,EAAO3I,GACzC,GAAI8tB,GAAQF,EAAO5T,KAAK+L,OAASA,IASjC,OARA+H,GAAMuoD,eAAiBtyD,mBAAiB9jB,KACxC6tB,EAAMzc,YAAc,GAAIxJ,IACxBimB,EAAMzc,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC9C4lB,EAAMzc,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,eAChC,KAANO,OAAkC,KAANC,OAAsC,KAAVC,OAA2C,KAAX3I,IAC/F8tB,EAAM9O,QAAWvW,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAO3I,OAAQA,IAEvD8tB,EAAM/Q,MAAQC,qBAAmBqrF,oBAC1Bv6E,EA2hBX,MAtiBA9B,IAAUo8E,EAAwBx6E,GAalC9T,OAAO+H,eAAeumF,EAAuBruF,UAAW,cAkBpD7R,IAAK,WAID,WAH4B,KAAjB6d,KAAKuiF,SAA2BviF,KAAK1U,YAAYtJ,IAAI,YAC5Dge,KAAKuiF,QAAUviF,KAAK1U,YAAYnJ,IAAI,WAEjC6d,KAAKuiF,SAqBhB9hG,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKuiF,UACfviF,KAAKuiF,QAAUpqG,EACX6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,SAAUrQ,KAI9C4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeumF,EAAuBruF,UAAW,iBAkBpD7R,IAAK,WAID,MAHI6d,MAAK1U,YAAYtJ,IAAI,OACrBge,KAAKswD,eAAiBtwD,KAAK1U,YAAYnJ,IAAI,MAExC6d,KAAKswD,gBAqBhB7vE,IAAK,SAAUtI,GACP6nB,KAAKswD,iBAAmBn4E,GACxB6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,GAEjC6nB,KAAKswD,eAAiBn4E,GAE1B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeumF,EAAuBruF,UAAW,aAkBpD7R,IAAK,WAID,WAH+B,KAApB6d,KAAKwiF,YAA8BxiF,KAAK1U,YAAYtJ,IAAI,OAC/Dge,KAAKwiF,WAAar+F,EAAY6b,KAAK1U,YAAYpJ,SAAS,OAErD8d,KAAKwiF,YAqBhB/hG,IAAK,SAAUtI,GACX,OAAqB,KAAVA,GAA0C,IAAjBA,EAAMY,OAAc,CACpD,GAAI+gF,GAAW95D,KAAKyiF,SACfziF,MAAKpK,eAAiC,KAAbkkE,GAA6BA,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,KACrI6nB,KAAKwiF,WAAarqG,EAClB6nB,KAAK1U,YAAY9C,OAAO,KAAMpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IACrEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,SAI3Doe,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeumF,EAAuBruF,UAAW,eAkBpD7R,IAAK,WAID,WAHiC,KAAtB6d,KAAKs8E,cAAgCt8E,KAAK1U,YAAYtJ,IAAI,QACjEge,KAAKs8E,aAAen4F,EAAY6b,KAAK1U,YAAYpJ,SAAS,QAEvD8d,KAAKs8E,cAqBhB77F,IAAK,SAAUtI,GACX,OAAqB,KAAVA,GAA0C,IAAjBA,EAAMY,OAAc,CACpD,GAAI+gF,GAAW95D,KAAKmsD,WACfnsD,MAAKpK,eAAiC,KAAbkkE,GAA6BA,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,IAAM2hF,EAAS,KAAO3hF,EAAM,KACrI6nB,KAAKs8E,aAAenkG,EACpB6nB,KAAK1U,YAAY9C,OAAO,MAAOpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IACtEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,SAI3Doe,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeumF,EAAuBruF,UAAW,eAkBpD7R,IAAK,WAID,WAHiC,KAAtB6d,KAAK0iF,cAAgC1iF,KAAK1U,YAAYtJ,IAAI,iBACjEge,KAAK0iF,aAAe1iF,KAAK1U,YAAYnJ,IAAI,gBAEtC6d,KAAK0iF,cAqBhBjiG,IAAK,SAAUtI,GACU,gBAAVA,KACP6nB,KAAK1U,YAAY9C,OAAO,cAAerQ,GACvC6nB,KAAK0iF,aAAevqG,IAG5B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeumF,EAAuBruF,UAAW,QAkBpD7R,IAAK,WACD,MAAO6d,MAAKqJ,OAqBhB5oB,IAAK,SAAUtI,GACX6nB,KAAKqJ,MAAQlxB,GAEjB4jB,YAAY,EACZC,cAAc,IAElBqmF,EAAuB51B,MAAQ,SAAUzyE,EAAMuH,GAC3C,GAAIi3E,GAAQ,GAAI6pB,EAGhB,OAFA7pB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX6pB,EAAuBruF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC3DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD8gG,EAAuBruF,UAAUg+D,aAAe,SAAUD,GACtD,OAA2B,KAAhB/xD,KAAK/G,QAA0C,OAAhB+G,KAAK/G,OAC3C,KAAM,IAAIpf,OAAM,qCAEpB,IAAIg0E,EACJ,IAAI7tD,KAAK1U,YAAYtJ,IAAI,MACrB6rE,EAAc7tD,KAAKuqD,OAAO3nE,UAEzB,CACD,GAAIrB,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWd,IAAI,OAAQ6E,GAASnD,IAAI,WACpC6d,KAAK1U,YAAY7K,IAAI,KAAMc,OAEJ,KAAhBssE,IACPA,EAAc,GAEd7tD,KAAK2sD,iBACL3sD,KAAK8mE,oBAAsB9mE,KAAK2iF,2BAA2B5wB,IAE/D/xD,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,QAElDqiF,EAAuBruF,UAAU89D,eAAiB,SAAUC,GAExD,OADkB,KAAdA,IAAwBA,GAAY,IACnC/xD,KAAK86C,YAAa,CACnB,GAAI96C,KAAKpK,UACLoK,KAAK8mE,oBAAsB9mE,KAAK2iF,2BAA2B5wB,OAI3D,IADA/xD,KAAKgyD,aAAaD,IACb/xD,KAAK8mE,qBACF/U,EACA,GAAK/xD,KAAK1U,YAAYtJ,IAAI,MAGrB,CACD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIkwE,GAAmB3wE,EAAWY,IAAI,IACtC,IAAI+vE,EAAkB,CAClB,GAAIhoE,GAAY3I,EAAWiK,OAAO,IAC9BtB,KACAgoE,EAAiBhoE,UAAYA,GAEjC8V,KAAK8mE,oBAAsB,GAAIr7E,IAAYymE,EAAkBlyD,KAAKtU,uBAX1EsU,MAAK8mE,oBAAsB9mE,KAAK2iF,2BAA2B5wB,EAkB3E,IAAIA,GAAa/xD,KAAK8mE,oBAAqB,CACvC,GAAIvK,GAAiBv8D,KAAK47D,wBAAwB57D,KAAK8mE,oBAAoBh7E,SAASvK,WACpF,KAAKye,KAAK8mE,oBAAoBh7E,SAASvK,WAAWS,IAAI,UAAW,CAC7D,GAAI6J,GAAMmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWW,SAAS,OAC5D2J,IACAmU,KAAK8mE,oBAAoBh7E,SAASvK,WAAWiH,OAAO,UAAW,EAAG,EAAG,EAAG,GAAIqD,EAAI,IAAKA,EAAI,KAGjGmU,KAAKs8D,2BAA2Bt8D,KAAK8mE,oBAAqBvK,OAErDxK,IACL/xD,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,QAI1CqiF,EAAuBruF,UAAU2uF,2BAA6B,SAAU5wB,GACpE,GAAI1d,GAAiBr0C,KAAK4iF,yBAC1B,IAAI7wB,EACI/xD,KAAKpK,WAA4B,OAAfoK,KAAK7G,OACvB6G,KAAK7G,MAAM05C,YAAYwpB,OAAOr8D,UAGjC,CACD,GAAI6iF,GAAiB7iF,KAAK8iF,yBAC1B,IAAI9iF,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAI6I,GAAamV,KAAK1U,YAAYnJ,IAAI,KAClC0I,IAAcA,YAAsB/I,MACpCgR,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,KAC5DoH,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,MAGpE,GAAInK,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCm3F,GAAe/2F,SAASvK,WAAWgR,UAAW,CAC9C,IAAI47E,GAAanuE,KAAKtU,gBAAgB00C,mBACtCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI0tF,EAAY0U,EAAe/2F,UAC9D+2F,EAAe/2F,SAAS5B,UAAYikF,EACpC5sF,EAAWd,IAAI,IAAK0tF,GACpB95B,EAAevoD,SAASvK,WAAWgR,UAAW,CAC9C,IAAIrI,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWmqD,EAAevoD,UAC7DuoD,EAAevoD,SAAS5B,UAAYA,EACpC3I,EAAWd,IAAI,IAAKyJ,GACpB3I,EAAWgR,UAAW,EACtByN,KAAK1U,YAAY7K,IAAI,KAAMc,GAE/B,MAAO8yD,IAEXguC,EAAuBruF,UAAU8uF,wBAA0B,WACvD,GAKI5lD,GALA+hC,GAAmB,EAAG,EAAGj/D,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QACxDkR,EAAW,GAAIM,IAAYwzE,EAAiBj/D,KAAKtU,iBACjD9I,EAAQod,KAAKuqD,OAAO3nE,MAAQ,EAC5By3C,EAAWlvC,EAASkvC,SACpB0oD,EAAc/iF,KAAKuqD,OAAO3nE,KAE1Bod,MAAKuqD,OAAO3nE,MAAQ,GAAKod,KAAKmsD,cAC9BjvB,EAAM,GAAI2F,IAAO7iC,KAAKmsD,YAAa42B,GAEvC,IAAI3/F,IAAQ67E,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,GACxF,IAAIj/D,KAAK66D,QAAU,EAAG,CAClB,GAAIrwE,GAAQ6vC,EAASE,MACrBF,GAASgO,gBAAgBroC,KAAK66D,SAC9BxgC,EAASyC,cAAc15C,EAAK,GAAKR,EAAOQ,EAAK,GAAKR,EAAOQ,EAAK,GAAK2/F,EAAa3/F,EAAK,GAAK2/F,EAAa7lD,EAAK,MAC5G7C,EAASK,QAAQlwC,OAGjB6vC,GAASyC,cAAc15C,EAAK,GAAKR,EAAOQ,EAAK,GAAKR,EAAOQ,EAAK,GAAK2/F,EAAa3/F,EAAK,GAAK2/F,EAAa7lD,EAAK,KAEhH,OAAO/xC,IAEXk3F,EAAuBruF,UAAU4uF,wBAA0B,WACvD,GAAI3jB,IAAmB,EAAG,EAAGj/D,KAAK/G,OAAOrW,MAAOod,KAAK/G,OAAOhf,QACxDkR,EAAW,GAAIM,IAAYwzE,EAAiBj/D,KAAKtU,gBACrDE,IAAWT,EAAU6U,KAAKi7D,oBAC1B,IAGIrN,GAHAhrE,EAAQod,KAAKuqD,OAAO3nE,MAAQ,EAC5By3C,EAAWlvC,EAASkvC,SACpBozB,EAAY,GAAI0E,GAEhBnyD,MAAKyiF,WAAaziF,KAAKuqD,OAAO3nE,MAAQ,IACtCgrE,EAAY,GAAI/qB,IAAO7iC,KAAKyiF,UAAWziF,KAAKuqD,OAAO3nE,OAEvD,IAAI8qE,GACAs1B,CACAhjF,MAAKg6D,aACLtM,EAAY,GAAI5qB,IAAS9iC,KAAKg6D,aAG9BgpB,EAAY,GAAIlgD,IADhB9iC,KAAKyiF,UACoBziF,KAAKyiF,WAGJ,IAAK,IAAK,MAExCh1B,EAAUC,UAAYA,EACtBD,EAAUI,YAAcjrE,CACxB,IAAIklB,GAAS9H,KAAKuqD,OAAO3nE,MACrBQ,GAAQ67E,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,GACxF,IAAIj/D,KAAK66D,QAAU,EAAG,CAClB,GAAIrwE,GAAQ6vC,EAASE,MACrBF,GAASgO,gBAAgBroC,KAAK66D,SAC9BxgC,EAASyC,cAAc15C,EAAK,GAAKR,EAAOQ,EAAK,GAAKR,EAAOQ,EAAK,GAAK0kB,EAAQ1kB,EAAK,GAAK0kB,EAAQ8lD,EAAWF,GACxGrzB,EAASK,QAAQlwC,OAGjB6vC,GAASyC,cAAc15C,EAAK,GAAKR,EAAOQ,EAAK,GAAKR,EAAOQ,EAAK,GAAK0kB,EAAQ1kB,EAAK,GAAK0kB,EAAQ8lD,EAAWF,EAG5G,IADArzB,EAASK,UACL16B,KAAKijF,aAAe5nF,GAAmB2E,KAAKijF,cAAsC,KAAtBjjF,KAAK0iF,aAAqB,CACtF,GAAIjhB,GAAM,EACNyhB,EAAM,MACe,KAAdljF,KAAKzL,MAAsC,OAAdyL,KAAKzL,OACzCyL,KAAKzL,KAAOyL,KAAK+4D,iBAErB,IAAIp2E,GAAI,EACJD,EAAI,EACJygG,EAAO,EACP1gG,MAAY,EACZud,MAAKpK,YACLoK,KAAKswD,eAAiBtwD,KAAK4xD,cAE/B,IAAI/qD,GAAS,GAAI/B,IAAgB9E,KAAKswD,eAAgB9qD,uBAAqBhM,KACvE4pF,EAAWpjF,KAAKzL,KAAKu7B,cAAc9vB,KAAKijF,aAAc,EAAG,GAAIp8E,EAAQ,EAAG,EAI5E,IAHI7G,KAAKpK,eAAqC,KAAjBoK,KAAKuiF,UAC9BviF,KAAKuiF,QAAUviF,KAAKqjF,YAEpBrjF,KAAKuiF,QAAS,CACVa,EAAS,IAAM,IACfA,EAAS,GAAK,GAElB3hB,EAAMzhE,KAAK/G,OAAOrW,MAAQwgG,EAAS,GACnCF,EAAM7qG,KAAK8iB,MAAM6E,KAAK/G,OAAOhf,OAAS+lB,KAAKzL,KAAK8S,OAChD87E,EAAO9qG,KAAKoL,IAAIuc,KAAK/G,OAAOrW,MAASvK,KAAK8iB,MAAMsmE,GAAO2hB,EAAS,IAC5DpjF,KAAKswD,iBAAmBtyD,mBAAiBmoC,SACzCzjD,EAAIygG,EAAO,GAEXnjF,KAAKswD,iBAAmBtyD,mBAAiB7F,QACzCzV,EAAIygG,EAER,KAAK,GAAIjqG,GAAI,EAAGA,EAAIuoF,EAAKvoF,IAAK,CAC1B,IAAK,GAAIC,GAAI,EAAGA,EAAI+pG,EAAK/pG,IACrBsJ,GAAaC,EAAGC,EAAG,EAAG,GACtB03C,EAAS0H,WAAW/hC,KAAKijF,YAAajjF,KAAKzL,KAAM9R,EAAW,KAAMugG,EAAW,MAC7ErgG,GAAQqd,KAAKzL,KAAK8S,KAEtB3kB,IAAQ0gG,EAAS,GACjBzgG,EAAI,OAIRwgG,GAAO9qG,KAAKoL,IAAIuc,KAAK/G,OAAOrW,MAAQwgG,EAAS,IACzCpjF,KAAKswD,iBAAmBtyD,mBAAiBmoC,SACzCzjD,EAAIygG,EAAO,GAEXnjF,KAAKswD,iBAAmBtyD,mBAAiB7F,QACzCzV,EAAIygG,GAER1gG,GAAaC,EAAG,EAAGsd,KAAK/G,OAAOrW,MAAQod,KAAKuqD,OAAO3nE,MAAOod,KAAK/G,OAAOhf,OAAS+lB,KAAKuqD,OAAO3nE,OAC3Fy3C,EAAS0H,WAAW/hC,KAAKijF,YAAajjF,KAAKzL,KAAM9R,EAAW,KAAMugG,EAAWn8E,GAGrF,MAAO1b,IAEJk3F,GACTtrF,IAiBEusF,GAAwC,SAAUz7E,GAOlD,QAASy7E,KACL,GAAIv7E,GAAQF,EAAO5T,KAAK+L,OAASA,IAEjC,OADA+H,GAAM/Q,MAAQC,qBAAmBssF,oBAC1Bx7E,EAsCX,MA/CA9B,IAAUq9E,EAAwBz7E,GAWlCy7E,EAAuB72B,MAAQ,SAAUzyE,EAAMuH,GAC3C,GAAIi3E,GAAQ,GAAI8qB,EAGhB,OAFA9qB,GAAM5iE,WAAY,EAClB4iE,EAAMrvD,YAAYnvB,EAAMuH,GACjBi3E,GAEX8qB,EAAuBtvF,UAAUmV,YAAc,SAAUnvB,EAAMuH,GAC3DsmB,EAAO7T,UAAUmV,YAAYlV,KAAK+L,KAAMhmB,EAAMuH,IAElD+hG,EAAuBtvF,UAAU89D,eAAiB,SAAUC,GAKxD,OAJkB,KAAdA,IAAwBA,GAAY,OACN,KAAvB/xD,KAAKqnE,eAAiCrnE,KAAKqnE,eAClDrnE,KAAKkiE,gBAELnQ,EAAW,CACX,GAAIG,OAAmB,EACvB,IAAIlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KACtC,IAAIZ,GAAcA,EAAWS,IAAI,KAAM,CACnCkwE,EAAmB3wE,EAAWY,IAAI,IAClC,IAAI+H,GAAY3I,EAAWiK,OAAO,IAC9BtB,IAAagoE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAI/mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD6wE,EAAiBv8D,KAAK47D,wBAAwBzwE,EAASW,SAASvK,WACpEye,MAAKs8D,2BAA2BnxE,EAAUoxE,OAG1Cv8D,MAAK+sD,kBAAkB/sD,KAAK7G,MAAO6G,QAIxCsjF,GACTvsF,IAiBEy1D,GAAqC,SAAU3kD,GAO/C,QAAS2kD,KACL,GAAIzkD,GAAQF,EAAO5T,KAAK+L,OAASA,IAQjC,OAPA+H,GAAMqpD,eAAgB,EACtBrpD,EAAM6hD,YAAcp3D,yBAAuBE,QAC3CqV,EAAM+G,SAAU,EAChB/G,EAAM2gD,yBAA0B,EAChC3gD,EAAM4gD,2BAA4B,EAClC5gD,EAAM6xD,WAAY,EAClB7xD,EAAM/Q,MAAQC,qBAAmBC,iBAC1B6Q,EAs6BX,MAr7BA9B,IAAUumD,EAAqB3kD,GAyB/B2kD,EAAoBC,MAAQ,SAAUlrE,EAAYkS,GAC9C,GAAIW,GAAS,GAAIo4D,EAIjB,OAHAp4D,GAAOwB,WAAY,EACnBxB,EAAO9I,YAAc/J,EACrB6S,EAAO1I,gBAAkB+H,EAClBW,GAEXL,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,QAqBjD7R,IAAK,WACD,MAAO6d,MAAK8sD,YAEhB/wD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,SAkBjD7R,IAAK,WAID,WAH2B,KAAhB6d,KAAK8hC,QAA0B9hC,KAAK8pD,qBAC3C9pD,KAAK8hC,OAAS9hC,KAAK+pD,IAAI/lE,OAEpBgc,KAAK8hC,QAqBhBrhD,IAAK,SAAUtI,OACe,KAAf6nB,KAAKhc,OAAyBgc,KAAK8hC,SAAW3pD,IACrD6nB,KAAK8hC,OAAS3pD,EAElB,IAAIomD,IAAQ,CACPv+B,MAAK8pD,qBACN9pD,KAAK+pD,IAAM,GAAIC,IAAsB,IACrCzrB,GAAQ,IAERA,GAASv+B,KAAK+pD,IAAI/lE,QAAU7L,KAC5B6nB,KAAK+pD,IAAI/lE,MAAQ7L,EACjB6nB,KAAK1U,YAAY9C,OAAO,KAAMwX,KAAK+pD,IAAIzwE,cAG/CyiB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,aAgBjD7R,IAAK,WACD,MAAO6d,MAAKiqD,mBAqBhBxpE,IAAK,SAAUtI,GACX6nB,KAAKkqD,iBAAiB/xE,IAE1B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,iBACjD7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,GAAIg2D,GAAe5rD,KAAK6rD,aACxB,OAAQD,IAAgBA,EAAa5pE,IAAI,MAGzC,OAAQge,KAAK0oD,yBAGrB3sD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,mBACjD7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,GAAIg2D,GAAe5rD,KAAK6rD,aACxB,OAAQD,IAAgBA,EAAa5pE,IAAI,MAGzC,OAAQge,KAAK2oD,2BAGrB5sD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,eAkBjD7R,IAAK,WACD,MAAO6d,MAAKmqD,qBAqBhB1pE,IAAK,SAAUtI,GACX6nB,KAAKoqD,mBAAmBjyE,IAE5B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,UAkBjD7R,IAAK,WASD,WARmC,KAAxB6d,KAAKwjF,iBACRxjF,KAAK6rD,eAAiB7rD,KAAK6rD,cAAc7pE,IAAI,KAC7Cge,KAAKwjF,eAAiBxjF,KAAK6rD,cAAc1pE,IAAI,KAExC6d,KAAK1U,YAAYtJ,IAAI,OAC1Bge,KAAKwjF,eAAiBxjF,KAAK1U,YAAYnJ,IAAI,OAG5C6d,KAAKwjF,gBAqBhB/iG,IAAK,SAAUtI,OACgB,KAAhB6nB,KAAK9C,QAA0B8C,KAAKwjF,iBAAmBrrG,QAC5B,KAAvB6nB,KAAK6rD,eACZ7rD,KAAK1U,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBAE1DsU,KAAK6rD,cAAcrjE,OAAO,IAAKrQ,GAC/B6nB,KAAKwjF,eAAiBrrG,EACtB6nB,KAAK1U,YAAYiH,UAAW,IAGpCwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,iBAkBjD7R,IAAK,WACD,OAAmC,KAAxB6d,KAAKyjF,gBAAkCzjF,KAAK1U,YAAYtJ,IAAI,KAAM,CACzE,GAAI2E,GAAOqZ,KAAK1U,YAAYnJ,IAAI,IAChC6d,MAAKyjF,eAAiB/8F,EAAkBC,EAAKwB,MAEjD,MAAO6X,MAAKyjF,gBAqBhBhjG,IAAK,SAAUtI,GACP6nB,KAAKyjF,iBAAmBtrG,GACxB6nB,KAAK1U,YAAY9C,OAAO,IAAKxB,EAAyB7O,KAG9D4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,UAkBjD7R,IAAK,WAOD,MANI6d,MAAKpK,eAAqC,KAAjBoK,KAAK9G,UAC9B8G,KAAK9G,QAAU/V,EAAiB6c,KAAK1U,YAAa0U,KAAK8sD,iBAE/B,KAAjB9sD,KAAK9G,SAA4C,OAAjB8G,KAAK9G,UAC5C8G,KAAK9G,SAAYxW,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAG3I,OAAQ,IAE5C+lB,KAAK9G,SAqBhBzY,IAAK,SAAUtI,GACX,GAAgB,IAAZA,EAAMuK,GAAuB,IAAZvK,EAAMwK,GAA2B,IAAhBxK,EAAMyK,OAAgC,IAAjBzK,EAAM8B,OAC7D,KAAM,IAAIJ,OAAM,0BAEpBmmB,MAAK9G,QAAU/gB,EACX6nB,KAAK7G,OAAS6G,KAAK7G,MAAMlG,QAAU+M,KAAK7G,MAAMC,cAC9C4G,KAAK1U,YAAY9C,OAAO,OAAQwQ,GAAcgH,OAG9CA,KAAK1U,YAAY9C,OAAO,OAAQ7E,GAAmBxL,EAAMuK,EAAGvK,EAAMwK,EAAGxK,EAAMyK,MAAOzK,EAAM8B,QAAS+lB,KAAK8sD,cAG9G/wD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,iBAkBjD7R,IAAK,WAID,WAHmC,KAAxB6d,KAAKswD,gBAAkCtwD,KAAK1U,YAAYtJ,IAAI,OACnEge,KAAKswD,eAAiBtwD,KAAK1U,YAAYnJ,IAAI,MAExC6d,KAAKswD,gBAqBhB7vE,IAAK,SAAUtI,OACwB,KAAxB6nB,KAAKswD,gBAAkCtwD,KAAKswD,iBAAmBn4E,GACtE6nB,KAAK1U,YAAY9C,OAAO,IAAKrQ,IAGrC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,cAkBjD7R,IAAK,WACD,GAAIhK,EACJ,KAAI6nB,KAAKpK,UAmCL,MAAOoK,MAAK4pD,WAlCZzxE,GAAQqa,yBAAuBE,OAC/B,IAAIxX,GAAOE,oBAAkBW,OAC7B,IAAIikB,KAAKypD,UAAW,CAEhB,GAAIE,GAAY,CAUhB,UAXAzuE,EAAO8kB,KAAK4e,OAEAxjC,oBAAkBC,UAAYD,oBAAkBC,SACxDsuE,EAAY,IAEXzuE,EAAOE,oBAAkBM,UAAYN,oBAAkBM,SACxDiuE,EAAY,IAEXzuE,EAAOE,oBAAkBQ,SAAWR,oBAAkBQ,QACvD+tE,GAAa,GAETA,GACJ,IAAK,GACDxxE,EAAQqa,yBAAuBnX,MAC/B,MACJ,KAAK,GACDlD,EAAQqa,yBAAuBC,eAC/B,MACJ,KAAK,GACDta,EAAQqa,yBAAuBk3D,mBAC/B,MACJ,KAAK,GACDvxE,EAAQqa,yBAAuBE,aAKvCva,GAAQqa,yBAAuBk3D,mBAMvC,OAAOvxE,IAmBXsI,IAAK,SAAUtI,GACX,GAAI6nB,KAAKpK,UACLxD,GAAkB4N,KAAK1U,YAAanT,GACpC6nB,KAAK1U,YAAYiH,UAAW,MAE3B,CACD,OAAQpa,GACJ,IAAKqa,0BAAuBnX,OACxB2kB,KAAK4e,MAAQxjC,oBAAkBC,MAC/B,MACJ,KAAKmX,0BAAuBC,gBACxBuN,KAAK4e,MAAQxjC,oBAAkBM,OAASN,oBAAkBQ,KAC1D,MACJ,KAAK4W,0BAAuBE,QACxBsN,KAAK4e,MAAQxjC,oBAAkBQ,KAC/B,MACJ,KAAK4W,0BAAuBk3D,oBACxB1pD,KAAK4e,MAAQxjC,oBAAkBW,QAGvCikB,KAAK4pD,YAAczxE,IAG3B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,QAqBjD7R,IAAK,WACD,IAAK6d,KAAKiwD,SAAU,CAChB,GAAI5rB,OAAW,EACf,IAAIrkC,KAAKtU,gBAAiB,CACtB,GAAIyI,GAAO6L,KAAKtU,gBAAgBuM,UAAU9D,KACtCuC,EAAWsJ,KAAK9L,oBACpB,IAAIC,GAAQA,EAAK7I,YAAYtJ,IAAI,MAAO,CACpC,GAAIuR,GAAYY,EAAK7I,YAAYnJ,IAAI,KACrC,IAAIoR,EAAUvR,IAAI,QAAS,CACvB,GAAI6S,GAAQtB,EAAUpR,IAAI,OAC1B,IAAI0S,EAAM7S,IAAI0U,EAASvO,MAAO,CAC1B,GAAI2M,GAAiBD,EAAM1S,IAAIuU,EAASvO,KACxC,IAAI2M,GAAkB4B,EAASvO,MAAQ2M,EAAe9S,IAAI,YAAa,CACnE,GAAI+S,GAAWD,EAAe3S,IAAI,YAC9B6S,EAAgB3D,eAAa4D,OAC7BF,KACAsvC,EAAWtvC,EAAS5M,KACpB6M,EAAgBE,GAAcH,EAAS5M,MACnCk8C,EAASlvC,SAAS,OAClBkvC,EAAWA,EAASnlD,UAAU,EAAGmlD,EAASnkD,QAAQ,OAEtD8f,KAAKiwD,SAAW76D,GAASivC,EAAU3tC,EAASjc,KAAMua,EAAegL,YAW7F,OAHuB,OAAlBA,KAAKiwD,cAA8C,KAAlBjwD,KAAKiwD,WAA+BjwD,KAAKpK,WAAoC,IAAvBoK,KAAKiwD,SAASx1E,QACtGulB,KAAKiwD,SAAWjwD,KAAKxK,oBAElBwK,KAAKiwD,UAwBhBxvE,IAAK,SAAUtI,GACPA,GAASA,YAAiBi3C,MAC1BpvB,KAAKiwD,SAAW93E,EAChB6nB,KAAKqtD,gBAAgBl1E,KAG7B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,sBACjD7R,IAAK,WACD,OAAwB,KAAb6d,KAAK+pD,KAAuB/pD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC/D,GAAIkrE,GAAKltD,KAAK1U,YAAYnJ,IAAI,KAC1B+qE,IAAa,KAAPA,IACNltD,KAAK+pD,IAAM,GAAIC,IAAsBkD,IAG7C,MAAOltD,MAAK+pD,KAEhBhuD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0wD,EAAoBx4D,UAAW,iBACjD7R,IAAK,WACD,GAAIhK,EAIJ,OAHI6nB,MAAK1U,YAAYtJ,IAAI,QACrB7J,EAAQ6nB,KAAK1U,YAAYnJ,IAAI,OAE1BhK,GAEX4jB,YAAY,EACZC,cAAc,IAElBwwD,EAAoBx4D,UAAU29D,QAAU,SAAU33E,EAAMif,EAAQ5E,GAmB5D,MAlBA2L,MAAK7G,MAAQnf,EACbgmB,KAAKtU,gBAAkB1R,EAAK0R,gBAC5BsU,KAAK+6C,KAAO/6C,KAAKtU,gBAAgB00C,oBACjCpgC,KAAK1U,YAAc,GAAIxJ,IAAeke,KAAKtU,iBAC3CsU,KAAKtU,gBAAgB2H,UAAU5S,IAAIuf,KAAK+6C,KAAM/6C,KAAK1U,aACnD0U,KAAK1U,YAAYg6B,YAActlB,KAC/BA,KAAK1U,YAAYvJ,MAAQie,KAAK+6C,KAAKzhE,WACnC0mB,KAAK1U,YAAY9C,OAAO,OAAQlD,GAASnD,IAAI,UAC7C6d,KAAK1U,YAAY9C,OAAO,UAAWlD,GAASnD,IAAI,WAChD6d,KAAK4e,OAASxjC,oBAAkBQ,MAChCokB,KAAK1U,YAAY9C,OAAO,IAAKxO,EAAK+gE,MAClC/gE,EAAK0pG,WAAW1jF,KAAK+6C,MACrB/6C,KAAKuqD,OAAS,GAAIgP,IAClBv5D,KAAK/G,OAASA,EACV5E,IACA2L,KAAK2nD,OAAStzD,EACd2L,KAAK1U,YAAY9C,OAAO,SAAUwX,KAAK2nD,OAAO5M,OAE3C/6C,KAAK1U,aAEhBkhE,EAAoBx4D,UAAU89D,eAAiB,SAAUC,EAAW4xB,GAGhE,OAFkB,KAAd5xB,IAAwBA,GAAY,OACb,KAAvB4xB,IAAiCA,GAAqB,GACtD5xB,GAAa4xB,EAAoB,CACjC,GAAIzxB,OAAmB,EAIvB,IAHIyxB,GAAuB5xB,GAAc/xD,KAAK1U,YAAYtJ,IAAI,OAGzDkwE,GAAoBlyD,KAAK1U,YAAYtJ,IAAI,MAAO,CACjD,GAAIT,GAAaye,KAAK1U,YAAYnJ,IAAI,KAClCZ,IAAcA,EAAWS,IAAI,OAC7BkwE,EAAmB3wE,EAAWY,IAAI,MAC9B+H,EAAY3I,EAAWiK,OAAO,OACjB0mE,IACbA,EAAiBhoE,UAAYA,IAIzC,GAAIgoE,EAAkB,CAClB,GAAIj5D,OAAS,EACb,IAAI84D,EAAW,CACX,GAAI5mE,GAAW,GAAIM,IAAYymE,EAAkBlyD,KAAKtU,iBAClD1R,EAAOgmB,KAAK8sD,UAChB,IAAI9yE,EAAM,CACN,GAAIqgD,GAAWrgD,EAAKqgD,QACpBA,GAASE,OACLvgD,EAAKI,WAAaC,mBAAiBC,SACnC+/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,gBAAgB,KAEpBpuD,EAAKI,WAAaC,mBAAiBE,UACxC8/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,iBAAiB,MAErBpuD,EAAKI,WAAaC,mBAAiBG,WACxC6/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,gBAAgB,MAE7BnvC,GAAWvW,EAAGsd,KAAK/G,OAAOvW,EAAGC,EAAGqd,KAAK/G,OAAOtW,EAAGC,MAAOuI,EAASkc,MAAM,GAAIptB,OAAQkR,EAASkc,MAAM,IAChGgzB,EAASqE,aAAavzC,EAAU8N,GAChCohC,EAASK,eAGZ,CACD,GAAI7vC,OAAa,EACjB,IAAImV,KAAK1U,YAAYtJ,IAAI,MACrB6I,EAAamV,KAAK1U,YAAYnJ,IAAI,UAEjC,CACD,GAAIyhG,GAAc5jF,KAAKtU,gBAAgB00C,mBACvCv1C,GAAa,GAAI/I,IAAeke,KAAKtU,iBACrCsU,KAAKtU,gBAAgB2H,UAAU5S,IAAImjG,EAAa/4F,GAChDmV,KAAK1U,YAAY9C,OAAO,KAAMo7F,GAElC9wF,GAA0BjI,EAAYmV,KAAKtU,gBAAiB,IAC5D,IAAIxB,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAWgoE,GAC9CrnE,EAAWrC,OAAO,IAAK0B,IAG/B8V,KAAK1U,YAAYiH,UAAW,IAGpCi6D,EAAoBx4D,UAAUq5D,gBAAkB,SAAU94D,GACtDyL,KAAKiwD,SAAW17D,CAChB,IAAItK,EACJ,IAAI+V,KAAKtU,gBAAiB,CAEtB,GAAI+yC,OAAW,IADfx0C,EAAW+V,KAAKtU,gBAAgBuM,aAIxBwmC,EADAx0C,EAASkK,KAAK7I,YAAYtJ,IAAI,MACnBiI,EAASkK,KAAK7I,YAAYnJ,IAAI,MAG9B,GAAIL,IAAeke,KAAKtU,iBAG3C,IAAI4hE,OAAW,GACXrtB,GAAc,CAClB,IAAIxB,EAASz8C,IAAI,QAAS,CACtB,GAAI2Z,GAAM8iC,EAASjzC,OAAO,OACtBmQ,IAAOA,YAAetR,KACtB41C,GAAc,EACdqtB,EAAWttD,KAAKtU,gBAAgBwH,OAAOyI,IAElCA,YAAe7Z,MACpBwrE,EAAW3xD,GAGd2xD,IACDA,EAAW,GAAIxrE,IAAeke,KAAKtU,iBACnC+yC,EAASj2C,OAAO,OAAQ8kE,GAE5B,IAAIhvB,GAAUh5C,GAASnD,IAAIsG,KACvByB,EAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAKiwD,SAAS3kE,aACxDiJ,YAAgBuC,IACZkJ,KAAKiwD,SAASxgC,mBACdzvB,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAKiwD,SAASxgC,mBAG3DzvB,KAAKiwD,SAAS3kE,aACnB0U,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW8V,KAAKiwD,SAAS3kE,aAEhEgiE,EAAS9kE,OAAO81C,EAAQn2C,KAAM+B,GAC9Bu0C,EAASlsC,UAAW,EACpBtI,EAASkK,KAAK7I,YAAY9C,OAAO,KAAMi2C,GACvCx0C,EAASkK,KAAK7I,YAAYiH,UAAW,EACrCyN,KAAK0yC,UAAYpU,EAAQn2C,IACzB,IAAIqM,GAAoB,GAAIw1D,GAC5Bx1D,GAAkB6vC,SAAWrkC,KAAK0yC,UAClCl+C,EAAkBF,SAAW0L,KAAKiwD,SAAS5oD,MAC3C7S,EAAkBxQ,MAAQgc,KAAKhc,MAAQgc,KAAKhc,OAAS,EAAG,EAAG,GAC3Dgc,KAAK1U,YAAY9C,OAAO,KAAMgM,EAAkBlb,YAC5C2mD,IACAxB,EAASlsC,UAAW,GAExByN,KAAK8O,SAAU,IAGvB09C,EAAoBx4D,UAAU84D,SAAW,WACrC,IAAK9sD,KAAK7G,MAAO,CACb,GAAI0qF,EACA7jF,MAAKtU,kBACLm4F,EAAa7jF,KAAKtU,gBAAgBuM,UAEtC,IAAIje,OAAO,EACX,IAAIgmB,KAAK1U,YAAYtJ,IAAI,KAAM,CAC3B,GAAIoI,GAAM4V,KAAK1U,YAAYE,OAAO,IAClC,IAAIpB,GAAOy5F,EACP,IAAK,GAAI3qG,GAAI,EAAGA,EAAI2qG,EAAW/oG,UAAW5B,IAAK,CAC3C,GAAIkL,GAAQy/F,EAAW9oG,QAAQ7B,EAC/B,IAAIkL,GAASA,EAAM22D,OAAS3wD,EAAK,CAC7BpQ,EAAOoK,CACP,UAKXpK,GAAQ6pG,GAAc7jF,KAAK+6C,OAC5B/gE,EAAOgQ,EAAU65F,EAAY7jF,KAAK+6C,OAEtC/6C,KAAK7G,MAAQnf,EAEjB,MAAOgmB,MAAK7G,OAEhBqzD,EAAoBx4D,UAAU+uB,WAAa,WACvC,IAAK/iB,KAAKpK,YAAcoK,KAAK7G,MAAMlG,OAAQ,CACvC,GAAI9a,GAAQ6nB,KAAK9G,OACjB8G,MAAK1U,YAAY9C,OAAO,OAAQ7E,GAAmBxL,EAAMuK,EAAGvK,EAAMwK,EAAGxK,EAAMyK,MAAOzK,EAAM8B,QAAS+lB,KAAK7G,UAG9GqzD,EAAoBx4D,UAAUi2D,gBAAkB,WAC5C,GAAI9xE,EACJ,IAAK6nB,KAAKpK,WAAaoK,KAAK+rD,gBAAoB/rD,KAAKpK,YAAcoK,KAAK0oD,wBAA0B,CAC9F,OAA+B,KAApB1oD,KAAK8jF,WAA4B,CACxC,GAAIviG,GAAaye,KAAK6rD,aACtB,IAAItqE,GAAcA,EAAWS,IAAI,MAAO,CACpC,GAAIsvD,GAAa/vD,EAAWW,SAAS,KACjCovD,KACAtxC,KAAK8jF,WAAa3/F,EAAYmtD,SAIX,KAApBtxC,KAAK8jF,YAAkD,OAApB9jF,KAAK8jF,aAC/C9jF,KAAK8jF,YAAc,IAAK,IAAK,MAEjC3rG,EAAQ6nB,KAAK8jF,WAEjB,MAAO3rG,IAEXq0E,EAAoBx4D,UAAUm2D,kBAAoB,WAC9C,GAAIhyE,EACJ,IAAK6nB,KAAKpK,WAAaoK,KAAKksD,kBAAsBlsD,KAAKpK,YAAcoK,KAAK2oD,0BAA4B,CAClG,OAAiC,KAAtB3oD,KAAKs8E,aAA8B,CAC1C,GAAI/6F,GAAaye,KAAK6rD,aACtB,IAAItqE,GAAcA,EAAWS,IAAI,MAAO,CACpC,GAAIsvD,GAAa/vD,EAAWW,SAAS,KACjCovD,KACAtxC,KAAKs8E,aAAen4F,EAAYmtD,SAIX,KAAtBtxC,KAAKs8E,cAAsD,OAAtBt8E,KAAKs8E,eACjDt8E,KAAKs8E,cAAgB,EAAG,EAAG,IAE/BnkG,EAAQ6nB,KAAKs8E,aAEjB,MAAOnkG,IAEXq0E,EAAoBx4D,UAAUk2D,iBAAmB,SAAU/xE,EAAOu0E,OACxC,KAAlBA,IAA4BA,GAAgB,EAChD,IAAI6qB,IAAY,CAChB,IAAqB,IAAjBp/F,EAAMY,QAA6B,MAAbZ,EAAM,GAAY,CACxC6nB,KAAK0oD,yBAA0B,EAC3B1oD,KAAK1U,YAAYtJ,IAAI,cACdge,MAAK1U,YAAY+G,KAAKQ,GAC7B0kF,GAAY,EAEhB,IAAI3rB,GAAe5rD,KAAK6rD,aACpBD,IAAgBA,EAAa5pE,IAAI,cAC1B4pE,GAAav5D,KAAKQ,GACzBmN,KAAK1U,YAAYiH,UAAW,EAC5BglF,GAAY,OAIhBv3E,MAAK0oD,yBAA0B,MACD,KAAnB1oD,KAAKgsD,WAA6BhsD,KAAK8jF,aAAe3rG,QAC3B,KAAvB6nB,KAAK6rD,eACZ7rD,KAAK1U,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBAE1DsU,KAAK6rD,cAAcrjE,OAAO,MAAOpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IACxEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,MAC/CqiB,KAAK8jF,YAAc3rG,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC7C6nB,KAAK1U,YAAYiH,UAAW,EAC5BglF,GAAY,EAGhB7qB,IAAiB6qB,GAAav3E,KAAK2nD,SACnC3nD,KAAK2nD,OAAOgF,gBAAiB,IAGrCH,EAAoBx4D,UAAUo2D,mBAAqB,SAAUjyE,GACzD,GAAqB,IAAjBA,EAAMY,QAA6B,MAAbZ,EAAM,GAAY,CACxC6nB,KAAK2oD,2BAA4B,EAC7B3oD,KAAK1U,YAAYtJ,IAAI,aACdge,MAAK1U,YAAY+G,KAAK+5D,EAEjC,IAAIR,GAAe5rD,KAAK6rD,aACxB,IAAID,GAAgBA,EAAa5pE,IAAI,MAAO,CAExC,SADO4pE,GAAav5D,KAAK+5D,GACrBpsD,KAAK1U,YAAYtJ,IAAI,MAAO,CAC5B,GAAIqqE,GAAersD,KAAK1U,YAAYnJ,IAAI,KACpCkqE,IAAgBA,EAAarqE,IAAI,YAC1BqqE,GAAah6D,KAAKi6D,EAGjCtsD,KAAK1U,YAAYiH,UAAW,OAIhCyN,MAAK2oD,2BAA4B,MACD,KAArB3oD,KAAKmsD,aAA+BnsD,KAAKmsD,cAAgBh0E,QAC9B,KAAvB6nB,KAAK6rD,eACZ7rD,KAAK1U,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBAE1DsU,KAAK6rD,cAAcrjE,OAAO,MAAOpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IACxEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,MAC/CqiB,KAAKs8E,cAAgBnkG,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC/C6nB,KAAK1U,YAAYiH,UAAW,IAIjCi6D,GACTz1D,IAmBE68D,GAA8B,SAAU/rD,GAOxC,QAAS+rD,KACL,MAAO/rD,GAAO5T,KAAK+L,OAASA,KAuPhC,MA9PAiG,IAAU2tD,EAAc/rD,GAkBxB+rD,EAAanH,MAAQ,SAAUlrE,EAAYkS,EAAgBY,GACvD,GAAID,GAAS,GAAIw/D,EAKjB,OAJAx/D,GAAOwB,WAAY,EACnBxB,EAAO9I,YAAc/J,EACrB6S,EAAO1I,gBAAkB+H,EACzBW,EAAOuzD,OAAStzD,EACTD,GAEXL,OAAO+H,eAAe83D,EAAa5/D,UAAW,WAoB1C7R,IAAK,WACD,MAAOmI,GAAY0V,KAAK1U,cAqB5B7K,IAAK,SAAUtI,GACP6nB,KAAK3U,UAAYlT,IACb6nB,KAAK2nD,SACL3nD,KAAK+jF,kBAAkB5rG,GACvB6nB,KAAK2nD,OAAOgF,gBAAiB,GAEjC3sD,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAIhK,EAAQ,MAAQ,UAGnE4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe83D,EAAa5/D,UAAW,SAoB1C7R,IAAK,WACD,GAAI6d,KAAKpK,UAAW,CAChB,GAAIrU,GAAaye,KAAK6rD,aAClBtqE,IAAcA,EAAWS,IAAI,MAC7Bge,KAAKqvB,OAAS5iC,GAAelL,EAAWY,IAAI,OAG5C6d,KAAKqvB,OAAS/iC,mBAAiB/B,MAGvC,MAAOyV,MAAKqvB,QAqBhB5uC,IAAK,SAAUtI,GACX,GAAI6nB,KAAKlb,QAAU3M,EAAO,CACtB6nB,KAAKqvB,OAASl3C,CACd,IAAIoJ,GAAaye,KAAK6rD,aACjBtqE,KACDA,EAAa,GAAIO,IAAeke,KAAKtU,iBACrCsU,KAAK1U,YAAY9C,OAAO,KAAMjH,IAElCA,EAAWiH,OAAO,KAAM6D,GAAelU,MAG/C4jB,YAAY,EACZC,cAAc,IAElB43D,EAAa5/D,UAAU+vF,kBAAoB,SAAU5rG,GACjD,GAAIoS,GAAQpS,EACR6rG,EAAahkF,KAAKtV,cAAcsV,KAAK1U,YAEzC,IADA0U,KAAKikF,eAAejkF,KAAMgkF,EAAY7rG,GAClCoS,EACKy5F,IACDA,EAAa,OAEjBhkF,KAAK2nD,OAAOr8D,YAAY9C,OAAO,IAAKw7F,GACpChkF,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI6hG,IAC3ChkF,KAAK1U,YAAY9C,OAAO,IAAKlD,GAASnD,IAAI6hG,QAEzC,IAAIhkF,KAAK2nD,OAAOr8D,YAAa,CAC9B,GAAI0U,KAAK2nD,OAAOr8D,YAAYtJ,IAAI,KAAM,CAClC,GAAImrF,GAAIntE,KAAK2nD,OAAOr8D,YAAYnJ,IAAI,IAChCgrF,IAAKA,EAAEhlF,OAAS67F,SACThkF,MAAK2nD,OAAOr8D,YAAY+G,KAAKwhE,EAG5C7zD,KAAK2nD,OAAOr8D,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,UAG1DyxE,EAAa5/D,UAAUiwF,eAAiB,SAAU/qC,EAAO/gE,EAAO+rG,GAC5D,IAAKlkF,KAAK2nD,OAAOqB,YAAa,CAC1BhpD,KAAK2nD,OAAOqB,aAAc,CAE1B,KAAK,GADD//D,GAAQ+W,KAAK2nD,OAAOkF,WACf3zE,EAAI,EAAGA,EAAI+P,IAAS/P,EAAG,CAC5B,GAAIgS,GAAO8U,KAAK2nD,OAAOjX,OAAOx3D,EAC1BgS,KACIA,IAASguD,EACThuD,EAAKG,QAAY2U,KAAKtV,cAAcQ,EAAKI,eAAiBnT,GAAU+rG,EAE9Dh5F,EAAKG,UACXH,EAAKG,SAAU,OAMnCuoE,EAAa5/D,UAAUtJ,cAAgB,SAAUnJ,GAC7C,GAAIqJ,GAAY,EAChB,IAAIrJ,GAAcA,EAAWS,IAAI,MAAO,CACpC,GAAImiG,GAAU5iG,EAAWY,IAAI,KACzBgiG,IAA4B,QAAjBA,EAAQh8F,OACnByC,EAAY,OAGpB,GAAkB,KAAdA,GACIrJ,GAAcA,EAAWS,IAAI,MAAO,CACpC,GAAIoiG,GAAe7iG,EAAWY,IAAI,KAClC,IAAIiiG,GAAgBA,EAAapiG,IAAI,KAAM,CACvC,GACIqiG,KAIJ,IALuBD,EAAajiG,IAAI,KAEvB6I,QAAQ,SAAUnL,EAAK1H,GACpCksG,EAAU/oG,KAAKuE,KAEfwkG,EAAUtrG,OAAS,EACnB,IAAK,GAAIG,GAAI,EAAGA,EAAImrG,EAAUtrG,OAAQG,IAAK,CACvC,GAAI2G,GAAMwkG,EAAUjrG,OAAOC,SAASH,EAAEI,WAAY,IAClD,IAAIuG,GAAe,QAARA,EAAe,CACtB+K,EAAY/K,CACZ,UAOxB,MAAO+K,IAEXgpE,EAAa5/D,UAAU89D,eAAiB,WACpC,GACI3mE,GAAWF,EADH+U,KAAK3U,QAAUD,sBAAoBC,QAAUD,sBAAoBkjE,UACrCtuD,KACxC,IAAI7U,EAAU,CACV,GAAInR,GAAOgmB,KAAK8sD,UAChB,IAAI9yE,EAAM,CACN,GAAIqgD,GAAWrgD,EAAKqgD,QACpBA,GAASE,OACLvgD,EAAKI,WAAaC,mBAAiBC,SACnC+/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,gBAAgB,KAEpBpuD,EAAKI,WAAaC,mBAAiBE,UACxC8/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,iBAAiB,MAErBpuD,EAAKI,WAAaC,mBAAiBG,WACxC6/C,EAASG,mBAAmBH,EAAShzB,MAAM,GAAIgzB,EAAShzB,MAAM,IAC9DgzB,EAAS+N,gBAAgB,MAE7B/N,EAASqB,IAAIr4B,sBAAsB2gC,qBAAmBC,MACtD5J,EAASqE,aAAavzC,EAAU6U,KAAK/G,QACrCohC,EAASK,WAGjB16B,KAAK1U,YAAYiH,UAAW,GAEhCqhE,EAAa5/D,UAAUg+D,aAAe,SAAU75E,GAC5C,GAAIkc,GAAQ2L,KAAK2nD,MACZxvE,KACDA,EAASkc,GAASA,EAAMhJ,QAAW,MAAQ,OAE/C2U,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAIhK,KAE/Cy7E,EAAa5/D,UAAUkhE,UAAY,SAAU7gE,GACzC2L,KAAK2nD,OAAStzD,EACd2L,KAAK2nD,OAAO6I,cAAgB,GAAI1rD,IAAgB9E,KAAK4xD,cAAepsD,uBAAqB29B,QACzFnjC,KAAK2nD,OAAOgI,UAAU3vD,OAEnB4zD,GACTpH,IA+BEyI,GAAwC,SAAUptD,GAElD,QAASotD,GAAuB98E,EAAO8gB,EAAQ/N,GAC3C,GAAI6c,GAAQF,EAAO5T,KAAK+L,OAASA,IASjC,OARI9U,IAAQ/S,GAAS8gB,IACb/N,YAAgBiM,IAChB4Q,EAAMu8E,gBAAgBnsG,EAAO8gB,EAAQ/N,EAAKlR,KAAMkR,GAGhD6c,EAAMu8E,gBAAgBnsG,EAAO8gB,EAAQ/N,IAGtC6c,EAyLX,MApMA9B,IAAUgvD,EAAwBptD,GAsBlCotD,EAAuBxI,MAAQ,SAAUlrE,EAAYkS,EAAgBY,GACjE,GAAID,GAAS,GAAI6gE,EAKjB,OAJA7gE,GAAOwB,WAAY,EACnBxB,EAAO9I,YAAc/J,EACrB6S,EAAO1I,gBAAkB+H,EACzBW,EAAOuzD,OAAStzD,EACTD,GAEXL,OAAO+H,eAAem5D,EAAuBjhE,UAAW,YAwBpD7R,IAAK,WACD,MAAO6d,MAAKtH,SAAWsH,KAAK2nD,OAAOtX,eAEvCt0C,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAem5D,EAAuBjhE,UAAW,SAwBpD7R,IAAK,WAID,MAHI6d,MAAKpK,YAAcoK,KAAKq1D,eACxBr1D,KAAKq1D,aAAe3qE,EAAcsV,KAAK1U,cAEpC0U,KAAKq1D,cAyBhB50E,IAAK,SAAUqzD,GACX9zC,KAAKq1D,aAAevhB,GAExB/3C,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAem5D,EAAuBjhE,UAAW,aAkBpD7R,IAAK,WACD,MAAO6d,MAAKiqD,mBAyBhBxpE,IAAK,SAAUtI,GACX6nB,KAAKkqD,iBAAiB/xE,GAAO,IAEjC4jB,YAAY,EACZC,cAAc,IAElBi5D,EAAuBjhE,UAAUswF,gBAAkB,SAAUnsG,EAAO8gB,EAAQjf,EAAMqa,GAC9E2L,KAAKq1D,aAAel9E,EACpB6nB,KAAK7G,MAAQnf,EACbgmB,KAAK2xD,QAAQ3xD,KAAK7G,MAAOF,EAAQ+G,KAAK2nD,QACtC3nD,KAAK4xD,cAAgB5zD,mBAAiB9jB,KACtC8lB,KAAK1U,YAAY9C,OAAO,KAAM,GAAI1G,IAAeke,KAAKtU,kBACtDsU,KAAK6rD,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACvCwX,KAAK6rD,cAAcrjE,OAAO,MAAO,EAAG,EAAG,IACvCwX,KAAKlb,MAAQwH,mBAAiBnG,OAC9B6Z,KAAK1U,YAAY9C,OAAO,KAAM,uBAC1B6L,IACA2L,KAAKk1D,UAAU7gE,GACf2L,KAAK1U,YAAY9C,OAAO,SAAU6L,EAAM0mD,QAGhDka,EAAuBjhE,UAAUg+D,aAAe,SAAU75E,GACtD,GAAIkc,GAAQ2L,KAAK2nD,QACZxvE,GAASkc,IAAkC,IAAzBA,EAAMg8C,gBACzBl4D,EAAQkc,EAAMq8C,OAAOr8C,EAAMg8C,eAAel4D,OAE1C6nB,KAAK7nB,QAAUA,EACf6nB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI6d,KAAK7nB,QAGhD6nB,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAI,SAG5C8yE,GACTrB,IA6BEsC,GAAkC,SAAUruD,GAE5C,QAASquD,GAAiB9oE,EAAMjV,EAAOkc,GACnC,GAAI0T,GAAQF,EAAO5T,KAAK+L,OAASA,IAIjC,OAHI5S,IAAQjV,GACR4vB,EAAMu8E,gBAAgBl3F,EAAMjV,EAAOkc,GAEhC0T,EA6HX,MAnIA9B,IAAUiwD,EAAkBruD,GAiB5BquD,EAAiBzJ,MAAQ,SAAUlrE,EAAYkS,EAAgBY,GAC3D,GAAID,GAAS,GAAI8hE,EAKjB,OAJA9hE,GAAOwB,WAAY,EACnBxB,EAAO9I,YAAc/J,EACrB6S,EAAO1I,gBAAkB+H,EACzBW,EAAOuzD,OAAStzD,EACTD,GAEXL,OAAO+H,eAAeo6D,EAAiBliE,UAAW,QAwB9C7R,IAAK,WAMD,WAL0B,KAAf6d,KAAK+M,WACW,KAAhB/M,KAAK2nD,SACX3nD,KAAK2nD,iBAAkB3X,KAAmBhwC,KAAK2nD,iBAAkB1X,OAClEjwC,KAAK+M,MAAQ/M,KAAK2nD,OAAO9T,SAASz6D,OAAOC,SAAS2mB,KAAKtH,OAAOpf,WAAY,KAAK,IAE5E0mB,KAAK+M,OAyBhBtsB,IAAK,SAAUtI,GACU,gBAAVA,QACgB,KAAhB6nB,KAAK2nD,SACX3nD,KAAK2nD,iBAAkB3X,KAAmBhwC,KAAK2nD,iBAAkB1X,MAC9D93D,IAAU6nB,KAAK2nD,OAAO9T,SAASz6D,OAAOC,SAAS2mB,KAAKtH,OAAOpf,WAAY,KAAK,KAC5E0mB,KAAK2nD,OAAO9T,SAASz6D,OAAOC,SAAS2mB,KAAKtH,OAAOpf,WAAY,KAAK,GAAKnB,EACvE6nB,KAAK+M,MAAQ50B,EACb6nB,KAAK2nD,OAAOr8D,YAAYiH,UAAW,IAI/CwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeo6D,EAAiBliE,UAAW,YAwB9C7R,IAAK,WACD,MAAO6d,MAAKtH,SAAWsH,KAAK2nD,OAAOtX,eAEvCt0C,YAAY,EACZC,cAAc,IAElBk6D,EAAiBliE,UAAUswF,gBAAkB,SAAUl3F,EAAMjV,EAAOkc,GAChE2L,KAAK+M,MAAQ3f,EACb4S,KAAKgwD,OAAS73E,EACVkc,GAASA,YAAiB27C,KAC1B37C,EAAMy7D,cAAc9vD,KAAM3L,IAG3B6hE,GACTtC,IAiBE2G,GAAsC,WACtC,QAASA,GAAqBK,EAAKvtE,EAAM/M,GACrC0f,KAAKw6D,SAAsB,KAARI,GAAsBA,EACzC56D,KAAKhJ,UAAwB,KAAT3J,EAAuBA,EAAOyQ,qBAAmB48D,OACrE16D,KAAKgO,YAA4B,KAAX1tB,EAAyBA,GAAU,EAAG,GAqJhE,MAnJAyT,QAAO+H,eAAey+D,EAAqBvmE,UAAW,OAkBlD7R,IAAK,WACD,MAAO6d,MAAKw6D,MAmBhB/5E,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKw6D,OACfx6D,KAAKw6D,KAAOriF,EACR6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,MAAOrQ,KAI3C4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey+D,EAAqBvmE,UAAW,QAkBlD7R,IAAK,WACD,MAAO6d,MAAKhJ,OAmBhBvW,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKhJ,QACfgJ,KAAKhJ,MAAQ7e,EACT6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,KAAMlD,GAASnD,IAAIhK,IAAU2lB,qBAAmBtE,IAAM,MAAQ,aAIlGuC,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey+D,EAAqBvmE,UAAW,UAkBlD7R,IAAK,WACD,MAAO6d,MAAKgO,SAmBhBvtB,IAAK,SAAUtI,GACPyF,EAAazF,EAAO6nB,KAAKgO,WACzBhO,KAAKgO,QAAU71B,EACX6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,KAAMrQ,KAI1C4jB,YAAY,EACZC,cAAc,IAEXu+D,KAkBP4L,GAA8C,WAC9C,QAASA,GAA6BjF,EAAOpoF,GACzCknB,KAAKqmE,WAA0B,KAAVnF,EAAwBA,EAAQt7E,qBAAmBY,KACxEwZ,KAAKwN,SAAsB,KAAR10B,EAAsBA,EAAM8M,qBAAmBY,KAkHtE,MAhHAuN,QAAO+H,eAAeqqE,EAA6BnyE,UAAW,SAmB1D7R,IAAK,WACD,MAAO6d,MAAKqmE,QAyBhB5lF,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKqmE,SACfrmE,KAAKqmE,OAASluF,EACV6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,MAAOlD,GAASnD,IAAIwD,EAAuBxN,IAASmN,GAASnD,IAAIwD,EAAuBqa,KAAKwN,WAIjIzR,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeqqE,EAA6BnyE,UAAW,OAmB1D7R,IAAK,WACD,MAAO6d,MAAKwN,MAyBhB/sB,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKwN,OACfxN,KAAKwN,KAAOr1B,EACR6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,MAAOlD,GAASnD,IAAIwD,EAAuBqa,KAAKqmE,SAAU/gF,GAASnD,IAAIwD,EAAuBxN,QAIlI4jB,YAAY,EACZC,cAAc,IAEXmqE,KAgBP3b,GAAsC,WACtC,QAASA,GAAqB5nE,EAAOkC,EAAOugE,GACxCrlD,KAAK8I,WAA0B,KAAVlmB,EAAwBA,EAAQ,EACrDod,KAAKqvB,WAA0B,KAAVvqC,EAAwBA,EAAQE,iBAAeS,UAChD,KAAT4/D,GAAwBplE,MAAMuB,QAAQ6jE,KAC7CrlD,KAAK2qD,MAAQtF,GAwLrB,MArLAtxD,QAAO+H,eAAe0uD,EAAqBx2D,UAAW,SAgBlD7R,IAAK,WACD,MAAO6d,MAAK8I,QAyBhBroB,IAAK,SAAUtI,GACX,GAAIA,IAAU6nB,KAAK8I,SACf9I,KAAK8I,OAAS3wB,EACV6nB,KAAK1U,aAAa,CAClB,GAAI6hE,GAAKntD,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK1U,YAAYnJ,IAAI,MAAQ,GAAIL,IAAeke,KAAKtU,gBAC3FyhE,GAAG3kE,OAAO,OAAQlD,GAASnD,IAAI,WAC/BgrE,EAAG3kE,OAAO,IAAKwX,KAAK8I,QACpBqkD,EAAG3kE,OAAO,IAAK3D,EAAgBmb,KAAKqvB,SAChCrvB,KAAK2qD,OACLwC,EAAG3kE,OAAO,IAAKwX,KAAK2qD,OAExB3qD,KAAK1U,YAAY9C,OAAO,KAAM2kE,GAC9BntD,KAAK1U,YAAYiH,UAAW,IAIxCwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0uD,EAAqBx2D,UAAW,SAgBlD7R,IAAK,WACD,MAAO6d,MAAKqvB,QAyBhB5uC,IAAK,SAAUtI,GACX,GAAIA,IAAU6nB,KAAKqvB,SACfrvB,KAAKqvB,OAASl3C,EACV6nB,KAAK1U,aAAa,CAClB,GAAI6hE,GAAKntD,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK1U,YAAYnJ,IAAI,MAAQ,GAAIL,IAAeke,KAAKtU,gBAC3FyhE,GAAG3kE,OAAO,OAAQlD,GAASnD,IAAI,WAC/BgrE,EAAG3kE,OAAO,IAAKwX,KAAK8I,QACpBqkD,EAAG3kE,OAAO,IAAK3D,EAAgBmb,KAAKqvB,SAChCrvB,KAAK2qD,OACLwC,EAAG3kE,OAAO,IAAKwX,KAAK2qD,OAExB3qD,KAAK1U,YAAY9C,OAAO,KAAM2kE,GAC9BntD,KAAK1U,YAAYiH,UAAW,IAIxCwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe0uD,EAAqBx2D,UAAW,QAgBlD7R,IAAK,WACD,MAAO6d,MAAK2qD,OAyBhBlqE,IAAK,SAAUtI,GACX,QAA0B,KAAf6nB,KAAK2qD,OAAyB/sE,EAAazF,EAAO6nB,KAAK2qD,UAC9D3qD,KAAK2qD,MAAQxyE,EACT6nB,KAAK1U,aAAa,CAClB,GAAI6hE,GAAKntD,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK1U,YAAYnJ,IAAI,MAAQ,GAAIL,IAAeke,KAAKtU,gBAC3FyhE,GAAG3kE,OAAO,OAAQlD,GAASnD,IAAI,WAC/BgrE,EAAG3kE,OAAO,IAAKwX,KAAK8I,QACpBqkD,EAAG3kE,OAAO,IAAK3D,EAAgBmb,KAAKqvB,SACpC89B,EAAG3kE,OAAO,IAAKwX,KAAK2qD,OACpB3qD,KAAK1U,YAAY9C,OAAO,KAAM2kE,GAC9BntD,KAAK1U,YAAYiH,UAAW,IAIxCwJ,YAAY,EACZC,cAAc,IAEXwuD,KA0BP+O,GAAqC,SAAU1xD,GAE/C,QAAS0xD,GAAoB32E,EAAO82E,EAASC,EAAS70E,EAAOugE,GACzD,GAAIt9C,GAAQF,EAAO5T,KAAK+L,KAAMpd,EAAOkC,EAAOugE,IAASrlD,IAGrD,OAFA+H,GAAMyxD,aAA8B,KAAZE,EAA0BA,EAAU,EAC5D3xD,EAAM0xD,aAA8B,KAAZE,EAA0BA,EAAU,EACrD5xD,EA0LX,MA/LA9B,IAAUszD,EAAqB1xD,GAO/B9T,OAAO+H,eAAey9D,EAAoBvlE,UAAW,SAkBjD7R,IAAK,WACD,MAAO6d,MAAK8I,QA2BhBroB,IAAK,SAAUtI,GACX,GAAIA,IAAU6nB,KAAK8I,SACf9I,KAAK8I,OAAS3wB,EACV6nB,KAAK1U,aAAa,CAClB0U,KAAK1U,YAAY9C,OAAO,UAAWwX,KAAKw5D,SAAUx5D,KAAKy5D,SAAUz5D,KAAK8I,QACtE,IAAIqkD,GAAKntD,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK1U,YAAYnJ,IAAI,MAAQ,GAAIL,IAAeke,KAAKtU,gBAC3FyhE,GAAG3kE,OAAO,OAAQlD,GAASnD,IAAI,WAC/BgrE,EAAG3kE,OAAO,IAAKwX,KAAK8I,QACpBqkD,EAAG3kE,OAAO,IAAK3D,EAAgBmb,KAAKqvB,SAChCrvB,KAAK2qD,OACLwC,EAAG3kE,OAAO,IAAKwX,KAAK2qD,OAExB3qD,KAAK1U,YAAY9C,OAAO,KAAM2kE,GAC9BntD,KAAK1U,YAAYiH,UAAW,IAIxCwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey9D,EAAoBvlE,UAAW,WAkBjD7R,IAAK,WACD,MAAO6d,MAAKw5D,UA6BhB/4E,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKw5D,WACfx5D,KAAKw5D,SAAWrhF,EACZ6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,UAAWwX,KAAKw5D,SAAUx5D,KAAKy5D,SAAUz5D,KAAK8I,WAIlF/M,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAey9D,EAAoBvlE,UAAW,WAkBjD7R,IAAK,WACD,MAAO6d,MAAKy5D,UA6BhBh5E,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKy5D,WACfz5D,KAAKy5D,SAAWthF,EACZ6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,UAAWwX,KAAKw5D,SAAUx5D,KAAKy5D,SAAUz5D,KAAK8I,WAIlF/M,YAAY,EACZC,cAAc,IAEXu9D,GACT/O,IAuBEqgB,GAAiC,WACjC,QAASA,GAAgBtpF,GAErB,GADAye,KAAK8qE,WAAa,MACQ,KAAfvpF,GAA6C,OAAfA,GACrC,GAAIA,EAAWS,IAAI,MAAO,CACtB,GAAIs0D,GAAet2C,KAAK1U,YAAYnJ,IAAI,KACpCm0D,KACIA,EAAat0D,IAAI,OACjBge,KAAK8qE,WAAax0B,EAAan0D,IAAI,MAEnCm0D,EAAat0D,IAAI,OACjBge,KAAKqvB,OAASrvB,KAAKukF,iBAAiBjuC,EAAan0D,IAAI,aAMjE6d,MAAK1U,YAAc,GAAIxJ,IACvBke,KAAK1U,YAAY7K,IAAI,IAAKuf,KAAK8qE,YAC/B9qE,KAAK1U,YAAY7K,IAAI,IAAKuf,KAAKwkF,eAAexkF,KAAKqvB,SAgJ3D,MA7IAt7B,QAAO+H,eAAe+uE,EAAgB72E,UAAW,aAoB7C7R,IAAK,WACD,MAAO6d,MAAK8qE,YAyBhBrqF,IAAK,SAAUtI,GACX,GAAIA,IAAU6nB,KAAK8qE,WAAY,CAE3B,GADA9qE,KAAK8qE,WAAa3yF,EACd6nB,KAAK1U,YAAa,CAClB,GAAI6hE,GAAKntD,KAAK1U,YAAYtJ,IAAI,MAAQge,KAAK1U,YAAYnJ,IAAI,MAAQ,GAAIL,IAAeke,KAAKtU,gBAC3FyhE,GAAG3kE,OAAO,IAAKwX,KAAK8qE,YACpB3d,EAAG3kE,OAAO,IAAKwX,KAAKwkF,eAAexkF,KAAKqvB,SACxCrvB,KAAK1U,YAAY9C,OAAO,KAAM2kE,GAC9BntD,KAAK1U,YAAYiH,UAAW,EAEhCyN,KAAK1U,YAAYiH,UAAW,IAGpCwJ,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe+uE,EAAgB72E,UAAW,SAoB7C7R,IAAK,WACD,MAAO6d,MAAKqvB,QAyBhB5uC,IAAK,SAAUtI,GACX,GAAIA,IAAU6nB,KAAKqvB,SACfrvB,KAAKqvB,OAASl3C,EACV6nB,KAAK1U,aAAa,CAClB,GAAI6hE,GAAKntD,KAAK1U,YAAYtJ,IAAI,MAC1Bge,KAAK1U,YAAYnJ,IAAI,MACrB,GAAIL,IAAeke,KAAKtU,gBAC5ByhE,GAAG3kE,OAAO,IAAKwX,KAAK8qE,YACpB3d,EAAG3kE,OAAO,IAAKwX,KAAKwkF,eAAexkF,KAAKqvB,SACxCrvB,KAAK1U,YAAY9C,OAAO,KAAM2kE,GAC9BntD,KAAK1U,YAAYiH,UAAW,IAIxCwJ,YAAY,EACZC,cAAc,IAElB6uE,EAAgB72E,UAAUuwF,iBAAmB,SAAUpsG,GACnD,MAAc,OAAVA,EACOqN,uBAAqBE,OAGrBF,uBAAqBC,OAGpColF,EAAgB72E,UAAUwwF,eAAiB,SAAUrsG,GACjD,MAAIA,KAAUqN,uBAAqBE,OACxB,IAGA,KAGRmlF,KAGP1Y,GAAiC,WACjC,QAASA,KACLnyD,KAAK6tD,YAAc,EAEvB,MAAOsE,MAGPyL,GAAgC,WAChC,QAASA,KACL59D,KAAK83B,WAAa,EAClB93B,KAAKg+D,SAAW,EAEpB,MAAOJ,MC3tePvS,GAAyC,WASzC,QAASA,GAAwBpsE,EAAOk8C,EAAMnhD,GAC1CgmB,KAAK04D,WAAY,EACbr9D,GAAmBpc,GACnB+gB,KAAKmzC,aAAel0D,EAGpB+gB,KAAKmzC,gBAETnzC,KAAK7G,MAAQnf,EACbgmB,KAAKtU,gBAAkByvC,EACvBn7B,KAAKozC,mBAAqB,GAAItrB,KAC9B9nB,KAAKg7C,aA+bT,MA7bAjnD,QAAO+H,eAAeuvD,EAAwBr3D,UAAW,SAiBrD7R,IAAK,WACD,MAAO6d,MAAKmzC,aAAap6D,QAE7BgjB,YAAY,EACZC,cAAc,IAqBlBqvD,EAAwBr3D,UAAUrb,GAAK,SAAUkC,GAC7C,GAAIA,EAAQ,GAAKA,GAASmlB,KAAKmzC,aAAap6D,OACxC,KAAMc,OAAM,sBAEhB,KAAKmmB,KAAKozC,mBAAmBpxD,IAAInH,GAAQ,CACrC,GAAI0G,GAAaye,KAAKmzC,aAAa/5D,OAAOC,SAASwB,EAAMvB,WAAY,IAIrE,IAHIiI,GAAcA,YAAsB8I,MACpC9I,EAAaye,KAAKtU,gBAAgBwH,OAAO3R,IAEzCA,GAAcA,YAAsBO,IAAgB,CACpD,GAAIgQ,GAAakO,KAAKkzC,iBAAiB3xD,EACnCuQ,KACAA,EAAWipD,KAAO/6C,KAAKmzC,aAAa/5D,OAAOC,SAASwB,EAAMvB,WAAY,KACtE0mB,KAAKozC,mBAAmB3yD,IAAI5F,EAAOiX,KAI/C,MAAOkO,MAAKozC,mBAAmBjxD,IAAItH,IAqBvCwwE,EAAwBr3D,UAAU/R,IAAM,SAAU6P,GAC9C,OAA0B,KAAfA,GAA6C,OAAfA,EACrC,KAAMjY,OAAM,yCAEhB,IAAIiY,EAAW8D,UACX,KAAM/b,OAAM,oCAEhBiY,GAAWqX,YAAYnJ,KAAK7G,MAC5B,IAAIjP,OAC2B,KAApB4H,EAAWipD,MAAwBjpD,EAAWipD,KAAK9nD,OAC1D/I,EAAY4H,EAAWipD,MAGvB7wD,EAAY8V,KAAKtU,gBAAgB00C,oBACjCpgC,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW4H,EAAWxG,aACzDwG,EAAWipD,KAAO7wD,EAEtB,IAAIrP,GAAQmlB,KAAKmzC,aAAap6D,MAC9BinB,MAAKmzC,aAAa73D,KAAK4O,GACvB8V,KAAKozC,mBAAmB3yD,IAAI5F,EAAOiX,EACnC,IAAI2yF,IAAU,CACd,IAAIzkF,KAAK7G,OAAS6G,KAAK7G,MAAMne,gBAAgBgH,IAAI,UAAW,CACxD,GAAI22B,GAAa3Y,KAAK7G,MAAMne,gBAAgBmH,IAAI,SAC7B,QAAfw2B,OAA6C,KAAfA,IAAiE,IAAnCA,EAAWz4B,QAAQgK,KAC/EyuB,EAAWr9B,KAAK4O,GAChB8V,KAAK7G,MAAMne,gBAAgByF,IAAI,SAAUk4B,GACzC8rE,GAAU,GAWlB,MARKA,IACDzkF,KAAK7G,MAAMne,gBAAgByF,IAAI,SAAUuf,KAAKmzC,cAElDnzC,KAAK7G,MAAMne,gBAAgBuX,UAAW,EAClCT,GAAcA,YAAsByzE,KACpCvlE,KAAK0kF,sBAAsB5yF,EAAYA,EAAWxG,YAAYnJ,IAAI,MAEtE6d,KAAK2kF,gCAAgC7yF,GAC9BjX,GAuBXwwE,EAAwBr3D,UAAUqoE,OAAS,SAAUvqE,GACjD,GAAIA,GAAcA,EAAWipD,KAAM,CAC/B,GAAIlgE,GAAQmlB,KAAKmzC,aAAa0N,YAAY/uD,EAAWipD,KACjDlgE,IAAS,GACTmlB,KAAK2vE,SAAS90F,KAuB1BwwE,EAAwBr3D,UAAU27E,SAAW,SAAU90F,GACnD,GAAIA,EAAQ,GAAKA,GAASmlB,KAAKmzC,aAAap6D,OACxC,KAAMc,OAAM,sBAEhB,IAAIqQ,GAAY8V,KAAKmzC,aAAa/5D,OAAOC,SAASwB,EAAMvB,WAAY,IACpE,IAAI4Q,GAAa8V,KAAK7G,MAAO,CACzB,GAAIla,GAAQ+gB,KAAK7G,MAAMyrF,aAAa,UAChCC,EAAc5lG,EAAMiB,QAAQgK,EAC5B26F,IAAe,GACf5lG,EAAMgtD,OAAO44C,EAAa,GAE9B7kF,KAAK7G,MAAMne,gBAAgByF,IAAI,SAAUxB,GACzC+gB,KAAK7G,MAAMne,gBAAgBuX,UAAW,EAClCyN,KAAKmzC,aAAajzD,QAAQgK,IAAc,GACxC8V,KAAKmzC,aAAalH,OAAOpxD,EAAO,GAEhCmlB,KAAKozC,mBAAmBpxD,IAAInH,KAC5BmlB,KAAKozC,mBAAmB9/C,OAAOzY,GAC/BmlB,KAAK8kF,0BAA0BjqG,GAEnC,IAAI4Y,GAAiBuM,KAAK7G,MAAMzN,eAC5B+H,IAAkBA,EAAeJ,UAAUrR,IAAIkI,IAC/CuJ,EAAeJ,UAAUC,OAAOpJ,KAI5CmhE,EAAwBr3D,UAAU8wF,0BAA4B,SAAUjqG,GACpE,GAAIiD,GAAS,GAAIgqC,IACjB9nB,MAAKozC,mBAAmBpoD,QAAQ,SAAU7S,EAAO0H,GACzCA,EAAMhF,EACNiD,EAAO2C,IAAIZ,EAAM,EAAG1H,GAGpB2F,EAAO2C,IAAIZ,EAAK1H,KAGxB6nB,KAAKozC,mBAAqBt1D,GAE9ButE,EAAwBr3D,UAAU2wF,gCAAkC,SAAU7yF,GACtEA,GAAcA,YAAsBunF,SAA8D,KAA3BvnF,EAAWm1D,aAClFn1D,EAAWm1D,YAAY/+D,OAAOmyC,SAASgG,kBAAkBvuC,EAAWpG,kBAG5E2/D,EAAwBr3D,UAAU0wF,sBAAwB,SAAU5yF,EAAY5W,GAC5E8kB,KAAK+kF,sBAAsBjzF,EAAYA,EAAWG,SAAU/W,GAC5D8kB,KAAK+kF,sBAAsBjzF,EAAYA,EAAWE,cAAe9W,IAErEmwE,EAAwBr3D,UAAU+wF,sBAAwB,SAAUjzF,EAAY6mB,EAAYz9B,GACxF,GAAIy9B,GAAcA,EAAW1vB,MAAQ,EAAG,CACpC,GAAa,KAAT/N,EAqBA,KAAM,IAAIrB,OAAM,+CApBhB,KAAK,GAAIX,GAAI,EAAGA,EAAIy/B,EAAW1vB,MAAO/P,IAAK,CACvC,GAAI8rG,GAAkBrsE,EAAWssE,YAAY7rG,OAAOC,SAASH,EAAEI,WAAY,IACvE0rG,KAAoBA,EAAgB15F,YAAYtJ,IAAI,SAC1C,IAAN9I,GAAYy/B,EAAWs5D,UAIvB+S,EAAgB15F,YAAY9C,OAAO,MAAOmwB,EAAWssE,YAAY/rG,EAAI,GAAG6hE,MAHxEiqC,EAAgB15F,YAAY9C,OAAO,MAAOsJ,EAAWipD,MAKrDpiC,EAAWs5D,UACX+S,EAAgB/S,WAAY,EAG5B+S,EAAgB9S,YAAa,EAEjClyE,KAAK/d,IAAI+iG,OAS7B35B,EAAwBr3D,UAAUk/C,iBAAmB,SAAU3xD,GAC3D,GAAIi3E,EACJ,IAAIj3E,GAAcA,EAAWS,IAAI,YAA6B,OAAfge,KAAK7G,WAAwC,KAAf6G,KAAK7G,MAAuB,CACrG,GAAItZ,GAAM0B,EAAWY,IAAI,WACrB1H,EAAO8G,EAAWY,IAAI,OAC1B,IAAItC,EAAK,CACL,GAAIqlG,OAAO,EACX,QAAQrlG,EAAIsI,MACR,IAAK,OACDqwE,EAAQ7iE,GAAkB82D,MAAMzsD,KAAK7G,MAAO5X,EAC5C,MACJ,KAAK,SAEGi3E,EADAj3E,EAAWS,IAAI,WACPgoF,GAAoBvd,MAAMzsD,KAAK7G,MAAO5X,GAGlC9G,EAAK,GAAKA,EAAK,KACdA,EAAK,GAAKA,EAAK,GAEhBuvF,GAAoBvd,MAAMzsD,KAAK7G,MAAO5X,GAGtCgpF,GAAqB9d,MAAMzsD,KAAK7G,MAAO5X,EAGvD,MACJ,KAAK,SAEGi3E,EADA/9E,EAAK,KAAOA,EAAK,GACTiwF,GAAoBje,MAAMzsD,KAAK7G,MAAO5X,GAGtC6pF,GAAuB3e,MAAMzsD,KAAK7G,MAAO5X,EAErD,MACJ,KAAK,UACDi3E,EAAQkT,GAAqBjf,MAAMzsD,KAAK7G,MAAO5X,EAC/C,MACJ,KAAK,WACGA,EAAWS,IAAI,YAAcT,EAAWS,IAAI,QACxCqL,EAAO9L,EAAWY,IAAI,QACA,kBAAdkL,EAAKlF,OACbqwE,EAAQqE,GAA8BpQ,MAAMzsD,KAAK7G,MAAO5X,IAG3Di3E,IACDA,EAAQ6T,GAAsB5f,MAAMzsD,KAAK7G,MAAO5X,GAEpD,MACJ,KAAK,MACDi3E,EAAQyW,GAAiBxiB,MAAMzsD,KAAK7G,MAAO5X,EAC3C,MACJ,KAAK,QAGL,IAAK,OACDi3E,EAAQmZ,GAAmBllB,MAAMzsD,KAAK7G,MAAO5X,EAC7C,MACJ,KAAK,OAID,GAHIA,EAAWS,IAAI,OACfkjG,EAAO3jG,EAAWY,IAAI,MAEtB+iG,GAAQA,EAAKljG,IAAI,KAAM,CACvB,GAAIqL,GAAO63F,EAAK/iG,IAAI,KAAKgG,IACzB,IAAIkF,EAAM,CACN,GAAI83F,GAAgBnlF,KAAKolF,gBAAgB7jG,EAAWW,SAAS,UAChD,SAATmL,EACAmrE,EAAQ2sB,EACJlvC,GAAyBwW,MAAMzsD,KAAK7G,MAAO5X,GAC3Cye,KAAKqlF,mBAAmB9jG,GAEd,WAAT8L,EACLmrE,EAAQxiB,GAAsByW,MAAMzsD,KAAK7G,MAAO5X,GAElC,UAAT8L,EACLmrE,EAAQx4D,KAAKqlF,mBAAmB9jG,GAElB,SAAT8L,IACLmrE,EAAQtiB,GAA0BuW,MAAMzsD,KAAK7G,MAAO5X,SAI1C,SAAb1B,EAAIsI,OACTqwE,EAAQtiB,GAA0BuW,MAAMzsD,KAAK7G,MAAO5X,GAExD,MACJ,KAAK,iBACDi3E,EAAQ+d,GAAwB9pB,MAAMzsD,KAAK7G,MAAO5X,EAClD,MACJ,KAAK,KACDi3E,EAAQue,GAAgBtqB,MAAMzsD,KAAK7G,MAAO5X,EAC1C,MACJ,KAAK,WACDi3E,EAAQ+iB,GAAsB9uB,MAAMzsD,KAAK7G,MAAO5X,EAChD,MACJ,KAAK,SACDi3E,EAAQ6pB,GAAuB51B,MAAMzsD,KAAK7G,MAAO5X,EACjD,MACJ,KAAK,YACDi3E,EAAQ8qB,GAAuB72B,MAAMzsD,KAAK7G,MAAO5X,EACjD,MACJ,KAAK,YACDi3E,EAAQugB,GAAuBtsB,MAAMzsD,KAAK7G,MAAO5X,EACjD,MACJ,KAAK,QACDi3E,EAAQ6gB,GAAyB5sB,MAAMzsD,KAAK7G,MAAO5X,EACnD,MACJ,KAAK,QACDi3E,EAAQ6iB,GAAmB5uB,MAAMzsD,KAAK7G,MAAO5X,EAC7C,MACJ,KAAK,YACL,IAAK,WACL,IAAK,YACL,IAAK,YACDi3E,EAAQye,GAAwBxqB,MAAMzsD,KAAK7G,MAAO5X,KAKlE,MAAOi3E,IAEXnN,EAAwBr3D,UAAUqxF,mBAAqB,SAAU9jG,GAC7D,GAAIi3E,EACJ,IAAIx4D,KAAK7G,MACL,GAAI5X,GAAcA,EAAWS,IAAI,KAAM,CACnC,GAAIsjG,GAAS/jG,EAAWY,IAAI,IAC5B,IAAImjG,GAAUA,EAAOtjG,IAAI,KAAM,CAC3B,GAAIkjG,GAAOI,EAAOnjG,IAAI,IAClB+iG,IAAsB,UAAdA,EAAK/8F,MAAoBm9F,EAAOtjG,IAAI,KAC5Cw2E,EAAQxiB,GAAsByW,MAAMzsD,KAAK7G,MAAO5X,GAE3C2jG,GAAsB,QAAdA,EAAK/8F,OAClBqwE,EAAQriB,GAAiBsW,MAAMzsD,KAAK7G,MAAO5X,SAKnDi3E,GAAQriB,GAAiBsW,MAAMzsD,KAAK7G,MAAO5X,EAGnD,OAAOi3E,IAEXnN,EAAwBr3D,UAAUoxF,gBAAkB,SAAU76B,GAC1D,OAAsB,KAAXA,GAAqC,OAAXA,EACjC,OAAO,CAEX,KAAK,GAAIrxE,GAAI,EAAGA,EAAIqxE,EAAOxxE,OAAQG,IAAK,CACpC,GAAIqsG,GAAM,EACNptG,EAAQoyE,EAAOnxE,OAAOC,SAASH,EAAEI,WAAY,IAIjD,IAHc,OAAVnB,OAAmC,KAAVA,IACzBotG,EAAMptG,GAENotG,EAAM,EACN,OAAO,EAGf,OAAO,GAEXl6B,EAAwBr3D,UAAU89D,eAAiB,SAAUC,GAEzD,IADA,GAAIl3E,GAAQ,EACLA,EAAQmlB,KAAK/W,OAAO,CACvB,GAAI6I,GAAakO,KAAKrnB,GAAGkC,EACzB,IAAIiX,EAAY,CACZ,GAAI0zF,GAAe1zF,EAAW4qE,SAAW3K,CACzCjgE,GAAW4mE,UAAY14D,KAAK04D,UACxB8sB,IAAoE,IAApDxlF,KAAKmzC,aAAa0N,YAAY/uD,EAAWipD,OACzDlgE,IAEJiX,EAAWggE,eAAe0zB,GACrBA,GACD3qG,QAIJA,OAIZwwE,EAAwBr3D,UAAUu2B,WAAa,SAAUngC,EAAKq7F,EAAU5qG,GACpE,GAAImlB,KAAKmzC,aAAc,CACfsyC,EAAWzlF,KAAKmzC,aAAap6D,SAC7B0sG,EAAW,GAEX5qG,GAASmlB,KAAKmzC,aAAap6D,SAC3B8B,EAAQmlB,KAAKmzC,aAAajzD,QAAQkK,GAEtC,IAAI0oD,GAAuB9yC,KAAKtU,gBAC5BwH,OAAO8M,KAAKmzC,aAAa/5D,OAAOC,SAASwB,EAAMvB,WAAY,KAC/D,IAAIw5D,GAAwBA,EAAqB9wD,IAAI,UAAW,CAC5D,GAAI0jG,GAAkB5yC,EAAqBtnD,OAAO,SAClD,IAAKk6F,GAAmBA,IAAoBt7F,GAAQA,IAChD4V,KAAKmzC,aAAa/5D,OAAOC,SAASwB,EAAMvB,WAAY,KAAM,CAC1D,GAAIoxC,GAAO1qB,KAAKmzC,aAAa/5D,OAAOC,SAASwB,EAAMvB,WAAY,IAC/D0mB,MAAKmzC,aAAa/5D,OAAOC,SAASwB,EAAMvB,WAAY,KAAO0mB,KAAKmzC,aAAa/5D,OAAOC,SAASosG,EAASnsG,WAAY,KAClH0mB,KAAKmzC,aAAa/5D,OAAOC,SAASosG,EAASnsG,WAAY,KAAOoxC,IAI1E,MAAO1qB,MAAKmzC,cAEhBkY,EAAwBr3D,UAAU2Q,OAAS,WACvC3E,KAAKmzC,gBACLnzC,KAAKozC,mBAAqB,GAAItrB,KAC9B9nB,KAAKg7C,cAEFqQ,KAkBPma,GAA8C,WAQ9C,QAASA,GAA6B1zE,EAAYC,GAC9CiO,KAAKilF,eACDnzF,IACAkO,KAAK2lF,YAAc7zF,GAEvBkO,KAAKiyE,UAAYlgF,GACbD,GAAckO,KAAK2lF,YAAY/vF,WAAa9D,EAAWqH,SACvD6G,KAAK7G,MAAQrH,EAAWqH,MACxB6G,KAAK4lF,kBAAoB9zF,EAAWxG,YAChC0U,KAAK2lF,YAAY/vF,WACjBoK,KAAK6lF,0BAiRjB,MA7QA9xF,QAAO+H,eAAe0pE,EAA6BxxE,UAAW,SAsB1D7R,IAAK,WACD,MAAO6d,MAAKilF,YAAYlsG,QAE5BgjB,YAAY,EACZC,cAAc,IAwBlBwpE,EAA6BxxE,UAAUrb,GAAK,SAAUkC,GAClD,GAAIA,EAAQ,GAAKA,GAASmlB,KAAKilF,YAAYlsG,OACvC,KAAMc,OAAM,sBAEhB,OAAOmmB,MAAKilF,YAAY7rG,OAAOC,SAASwB,EAAMvB,WAAY,MAwB9DksF,EAA6BxxE,UAAU/R,IAAM,SAAU6P,GACnD,GAA8C,KAA1CkO,KAAK2lF,YAAYr6F,YAAYnJ,IAAI,KACjC,KAAM,IAAItI,OAAM,+CAGpB,IADAiY,EAAWxG,YAAY9C,OAAO,IAAOwX,KAAK2lF,YAAY/mE,QAAUxjC,oBAAkBI,OAAU,IAAOwkB,KAAKiyE,UAAY,GAAK,IACrHjyE,KAAK2lF,cAAgB3lF,KAAK2lF,YAAY/vF,WAAcoK,KAAK7G,OAAS6G,KAAK2lF,YAAY5qC,MAAQ,CAC3F/6C,KAAK7G,MAAM05C,YAAY5wD,IAAI6P,EAC3B,IAAImwB,GAAWjiB,KAAKilF,YAAYlsG,MACf,KAAbkpC,GAAmBjiB,KAAKiyE,UAIxBngF,EAAWxG,YAAY9C,OAAO,MAAOwX,KAAKilF,YAAY7rG,OAAOC,UAAU4oC,EAAW,GAAG3oC,WAAY,KAAKyhE,MAHtGjpD,EAAWxG,YAAY9C,OAAO,MAAOwX,KAAK2lF,YAAY5qC,MAKtD/6C,KAAKiyE,UACLngF,EAAWmgF,WAAY,EAGvBngF,EAAWogF,YAAa,EAGhClyE,KAAKilF,YAAY3pG,KAAKwW,IAyB1B0zE,EAA6BxxE,UAAUqoE,OAAS,SAAUvqE,GACtD,GAAIjX,GAAQmlB,KAAKilF,YAAY/kG,QAAQ4R,EACjCjX,IAAS,GACTmlB,KAAK2vE,SAAS90F,IAwBtB2qF,EAA6BxxE,UAAU27E,SAAW,SAAU90F,GACxD,KAAIA,GAAS,GAAKA,EAAQmlB,KAAKilF,YAAYlsG,QAYvC,KAAM,IAAIc,OAAM,sBAXhB,IAAIiY,GAAakO,KAAKilF,YAAY7rG,OAAOC,SAASwB,EAAMvB,WAAY,IACpE,IAAI0mB,KAAKiyE,WAAap3F,EAAQmlB,KAAKilF,YAAYlsG,OAAS,EAAG,CACvD,GAAI+sG,GAAiB9lF,KAAKilF,YAAY7rG,OAAOC,UAAUwB,EAAQ,GAAGvB,WAAY,KAC1EgvC,EAAWx2B,EAAWxG,YAAYgrF,KAAK,MAC3CwP,GAAex6F,YAAY7K,IAAI,MAAO6nC,GACtCw9D,EAAex6F,YAAYiH,UAAW,EAE1CyN,KAAKilF,YAAYh5C,OAAOpxD,EAAO,GAC/BmlB,KAAK7G,MAAM05C,YAAYwpB,OAAOvqE,IAMtC0zE,EAA6BxxE,UAAU6xF,uBAAyB,WACxD7lF,KAAKiyE,UACLjyE,KAAK+lF,eAGL/lF,KAAKgmF,kBAGbxgB,EAA6BxxE,UAAU+xF,aAAe,WAClD,GAAIptE,EACA3Y,MAAK7G,QACLwf,EAAa3Y,KAAK7G,MAAM05C,YAE5B,IAAIoQ,GAAM,GAAIn7B,IAEd,IADAm7B,EAAIxiE,IAAIuf,KAAK2lF,YAAY5qC,KAAM/6C,KAAK2lF,aAChChtE,GAAcA,EAAWqiC,WAAariC,EAAWqiC,UAAUjiE,OAAS,EAAG,CAEvE,IAAK,GADDktG,MACK/sG,EAAI,EAAGA,EAAIy/B,EAAWqiC,UAAUjiE,OAAQG,IAAK,CAE9CgR,GADA4H,EAAa6mB,EAAWqiC,UAAU5hE,OAAOC,SAASH,EAAEI,WAAY,MACzCgS,YAAYgrF,KAAK,MACxCxkF,GAAWmgF,WAAa/nF,GAAa+4D,EAAIjhE,IAAIkI,IAC7C8V,KAAKilF,YAAY3pG,KAAKwW,GACtBmxD,EAAIxiE,IAAIqR,EAAWipD,KAAMjpD,IAGzBm0F,EAAU3qG,KAAKwW,GAGnBm0F,EAAUltG,OAAS,EACnB4/B,EAAWqiC,UAAYirC,EAGvBttE,EAAWqiC,iBAGd,IAAIriC,EAEL,IAAK,GADD1vB,GAAQ0vB,EAAW1vB,MACd/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAI4Y,GAAa6mB,EAAWhgC,GAAGO,EAC/B,IAAI4Y,GAAcA,YAAsB6/E,IAAoB,CACxD,GAAIpwF,GAAauQ,EAAWxG,WAC5B,IAAIwG,EAAWxG,YAAYtJ,IAAI,OAAQ,CACnC,GAAIkI,GAAY3I,EAAW+0F,KAAK,MAC5BxkF,GAAWmgF,WAAa/nF,GAAa+4D,EAAIjhE,IAAIkI,IAC7C8V,KAAKilF,YAAY3pG,KAAKwW,GACtBmxD,EAAIxiE,IAAIqR,EAAWipD,KAAMjpD,IAGzB6mB,EAAWqiC,UAAU1/D,KAAKwW,KAM9CmxD,EAAI1B,SAERikB,EAA6BxxE,UAAUgyF,eAAiB,WACpD,GAAIrtE,EAIJ,IAHI3Y,KAAK7G,QACLwf,EAAa3Y,KAAK7G,MAAM05C,aAExBl6B,GAAcA,EAAWqiC,WAAariC,EAAWqiC,UAAUjiE,OAAS,EAAG,CAEvE,IAAK,GADDktG,MACK/sG,EAAI,EAAGA,EAAIy/B,EAAWqiC,UAAUjiE,OAAQG,IAAK,CAG9C6Y,EAAWG,GADX3Q,GADAuQ,EAAa6mB,EAAWqiC,UAAU5hE,OAAOC,SAASH,EAAEI,WAAY,MACxCgS,cAExBpB,EAAY3I,EAAW+0F,KAAK,SACfpsF,IAAc8V,KAAK2lF,YAAY5qC,OAAShpD,EACrDiO,KAAKilF,YAAY3pG,KAAKwW,GAGtBm0F,EAAU3qG,KAAKwW,GAGnBm0F,EAAUltG,OAAS,EACnB4/B,EAAWqiC,UAAYirC,EAGvBttE,EAAWqiC,iBAGd,IAAIriC,EAEL,IAAK,GADD1vB,GAAQ0vB,EAAW1vB,MACd/P,EAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAI4Y,GAAa6mB,EAAWhgC,GAAGO,EAC/B,IAAI4Y,GAAcA,YAAsB6/E,IAAoB,CACxD,GAAIpwF,GAAauQ,EAAWxG,WAC5B,IAAIwG,EAAWxG,YAAYtJ,IAAI,OAAQ,CACnC,GAAI+P,GAAWG,GAAa3Q,GACxB2I,EAAY3I,EAAW+0F,KAAK,MAC5BpsF,IAAaA,IAAc8V,KAAK2lF,YAAY5qC,OAAShpD,EACrDiO,KAAKilF,YAAY3pG,KAAKwW,GAGtB6mB,EAAWqiC,UAAU1/D,KAAKwW,OAO3C0zE,KCzxBPv/D,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAkBnF0/E,GAAiC,WASjC,QAASA,GAAgB3kG,EAAYkS,GACjCuM,KAAKmmF,iBACLnmF,KAAKomF,aAAc,EACnBpmF,KAAKqmF,mBAAoB,EACzBrmF,KAAK1U,YAAc/J,EACnBye,KAAKtU,gBAAkB+H,EA2W3B,MAzWAM,QAAO+H,eAAeoqF,EAAgBlyF,UAAW,SAiB7C7R,IAAK,WAID,MAHI6d,MAAKqmF,mBAAmD,IAA9BrmF,KAAKmmF,cAAcptG,QAC7CinB,KAAKsmF,iBAEFtmF,KAAKmmF,cAAcptG,QAE9BgjB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeoqF,EAAgBlyF,UAAW,cAmB7C7R,IAAK,WACD,MAAI6d,MAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,SACjCge,KAAK1U,YAAYnJ,IAAI,UAAY,EAGlC6d,KAAKomF,aAqBpB3lG,IAAK,SAAUtI,GACX6nB,KAAKomF,YAAcjuG,EACf6nB,KAAK/W,MAAQ,GAAK+W,KAAK1U,aACvB0U,KAAK1U,YAAY9C,OAAO,QAASrQ,EAAQ6nB,KAAKmmF,cAAcptG,QAAWinB,KAAKmmF,cAAcptG,SAGlGgjB,YAAY,EACZC,cAAc,IAmBlBkqF,EAAgBlyF,UAAUrb,GAAK,SAAUkC,GACrC,GAAI0rG,EACJ,IAAI1rG,EAAQ,GAAKA,GAASmlB,KAAK/W,MAC3B,KAAMpP,OAAM,sBAKhB,OAHIwhB,IAAmB2E,KAAKmmF,gBAAkBnmF,KAAKmmF,cAAcptG,OAAS,GAAK8B,EAAQmlB,KAAKmmF,cAAcptG,SACtGwtG,EAAWvmF,KAAKmmF,cAAc/sG,OAAOC,SAASwB,EAAMvB,WAAY,MAE7DitG,GAqBXL,EAAgBlyF,UAAUwyF,SAAW,SAAU1/F,GAC3C,OAAgD,IAAzCkZ,KAAKmmF,cAAcjmG,QAAQ4G,IAEtCo/F,EAAgBlyF,UAAU/R,IAAM,SAAUwkG,EAAO5rG,GAC7C,GAAI0rG,EACJ,IAAIvmF,KAAK1U,YAAa,CAClB,GAAI/J,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWiH,OAAO,SAAUwX,KAAKugC,WACjC,IAAIr2C,GAAY8V,KAAKtU,gBAAgB00C,mBAKrC,IAJApgC,KAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,GAC9CglG,EAAW,GAAIG,IAAYnlG,EAAYye,KAAKtU,iBAC5C66F,EAAShmD,WAAar2C,EACtBq8F,EAASE,MAAQA,MACI,KAAV5rG,EAAuB,CAC9B,GAAmB,IAAfmlB,KAAK/W,MACL+W,KAAK1U,YAAY9C,OAAO,QAAS0B,GACjC8V,KAAK1U,YAAY9C,OAAO,OAAQ0B,OAE/B,CACGi7B,EAAOnlB,KAAKrnB,GAAGqnB,KAAK/W,MAAQ,EAChC+W,MAAK1U,YAAY9C,OAAO,OAAQ0B,GAC5Bi7B,GAAQA,EAAKob,aACbh/C,EAAWiH,OAAO,OAAQ28B,EAAKob,YAC/Bpb,EAAK75B,YAAY9C,OAAO,OAAQ0B,IAGxC8V,KAAKmmF,cAAc7qG,KAAKirG,OAEvB,CACD,GAAI1rG,EAAQ,GAAKA,EAAQmlB,KAAK/W,MAC1B,KAAM,IAAIpP,OAAM,qBAEpB,IAAmB,IAAfmmB,KAAK/W,MACL+W,KAAK1U,YAAY9C,OAAO,QAAS0B,GACjC8V,KAAK1U,YAAY9C,OAAO,OAAQ0B,GAChC8V,KAAKmmF,cAAc7qG,KAAKirG,OAEvB,IAAI1rG,IAAUmlB,KAAK/W,MAAO,CAC3B,GAAIk8B,GAAOnlB,KAAKrnB,GAAGqnB,KAAK/W,MAAQ,EAChC+W,MAAK1U,YAAY9C,OAAO,OAAQ0B,GAC5Bi7B,GAAQA,EAAKob,aACbh/C,EAAWiH,OAAO,OAAQ28B,EAAKob,YAC/Bpb,EAAK75B,YAAY9C,OAAO,OAAQ0B,IAEpC8V,KAAKmmF,cAAc7qG,KAAKirG,OAEvB,IAAc,IAAV1rG,EAAa,CAClB,GAAI0C,GAAQyiB,KAAKrnB,GAAG,EACpBqnB,MAAK1U,YAAY9C,OAAO,QAAS0B,GAC7B3M,GAASA,EAAMgjD,aACfh/C,EAAWiH,OAAO,OAAQjL,EAAMgjD,YAChChjD,EAAM+N,YAAY9C,OAAO,OAAQ0B,IAErC8V,KAAK2mF,oBAAoB9rG,EAAO0rG,OAE/B,CACD,GAAIl+D,GAAOroB,KAAKrnB,GAAGkC,GACf+rG,EAAO5mF,KAAKrnB,GAAGkC,EAAQ,EACvB+rG,IAAQA,EAAKrmD,YAAclY,GAAQA,EAAKkY,aACxCh/C,EAAWiH,OAAO,OAAQo+F,EAAKrmD,YAC/BqmD,EAAKt7F,YAAY9C,OAAO,OAAQ0B,GAChCm+B,EAAK/8B,YAAY9C,OAAO,OAAQ0B,GAChC3I,EAAWiH,OAAO,OAAQ6/B,EAAKkY,aAEnCvgC,KAAK2mF,oBAAoB9rG,EAAO0rG,IAGxCvmF,KAAK6mF,eAET,MAAON,IAEXL,EAAgBlyF,UAAUqoE,OAAS,SAAUlkF,GACzC,GAAqB,gBAAVA,GACP,IAAK,GAAIe,GAAI8mB,KAAKmmF,cAAcptG,OAAS,EAAGG,GAAK,EAAGA,IAAK,CACrD,GAAIqtG,GAAWvmF,KAAKrnB,GAAGO,EACnBqtG,GAASE,QAAUtuG,EACnB6nB,KAAKq8D,OAAOnjF,GAEPqtG,EAASt9F,MAAQ,GACtBs9F,EAASlqB,OAAOlkF,OAKxB,IAAIA,GAAS,GAAKA,EAAQ6nB,KAAK/W,MAC3B,GAAmB,IAAf+W,KAAK/W,MACL+W,KAAK8mF,aAAa9mF,KAAK1U,aACvB0U,KAAK+mF,YAAY/mF,KAAK1U,aACtB0U,KAAKgnF,aAAahnF,KAAK1U,aACvB0U,KAAKmmF,qBAEJ,CACD,GAAc,IAAVhuG,EAAa,CACTkwC,EAAOroB,KAAKrnB,GAAGR,EAAQ,EACvB6nB,MAAK1U,aAAe+8B,GAAQA,EAAKkY,aACjCvgC,KAAKinF,gBAAgB5+D,EAAK/8B,aAC1B0U,KAAK1U,YAAY9C,OAAO,QAAS6/B,EAAKkY,iBAGzC,IAAIpoD,IAAU6nB,KAAK/W,MAAQ,EAAG,CAC3B29F,EAAO5mF,KAAKrnB,GAAGR,EAAQ,EACvB6nB,MAAK1U,aAAes7F,GAAQA,EAAKrmD,aACjCvgC,KAAKknF,YAAYN,EAAKt7F,aACtB0U,KAAK1U,YAAY9C,OAAO,OAAQo+F,EAAKrmD,iBAGxC,CACD,GAAIqmD,GAAO5mF,KAAKrnB,GAAGR,EAAQ,GACvBkwC,EAAOroB,KAAKrnB,GAAGR,EAAQ,EACvByuG,IAAQA,EAAKrmD,YAAclY,GAAQA,EAAKkY,aACxCqmD,EAAKt7F,YAAY9C,OAAO,OAAQ6/B,EAAKkY,YACrClY,EAAK/8B,YAAY9C,OAAO,OAAQo+F,EAAKrmD,aAG7CvgC,KAAK2mF,oBAAoBxuG,GACrB6nB,KAAK1U,aACL0U,KAAK6mF,iBAwBzBX,EAAgBlyF,UAAUutD,MAAQ,WAC9BvhD,KAAK8mF,aAAa9mF,KAAK1U,aACvB0U,KAAK+mF,YAAY/mF,KAAK1U,aACtB0U,KAAKgnF,aAAahnF,KAAK1U,aACvB0U,KAAKmmF,kBAETD,EAAgBlyF,UAAU8yF,aAAe,SAAUvlG,GAC3CA,GAAcA,EAAWS,IAAI,iBACtBT,GAAW8Q,KAAK80F,MACvB5lG,EAAWgR,UAAW,IAG9B2zF,EAAgBlyF,UAAU+yF,YAAc,SAAUxlG,GAC1CA,GAAcA,EAAWS,IAAI,gBACtBT,GAAW8Q,KAAK+0F,KACvB7lG,EAAWgR,UAAW,IAG9B2zF,EAAgBlyF,UAAUkzF,YAAc,SAAU3lG,GAC1CA,GAAcA,EAAWS,IAAI,gBACtBT,GAAW8Q,KAAKg1F,KACvB9lG,EAAWgR,UAAW,IAG9B2zF,EAAgBlyF,UAAUizF,gBAAkB,SAAU1lG,GAC9CA,GAAcA,EAAWS,IAAI,gBACtBT,GAAW8Q,KAAKi1F,KACvB/lG,EAAWgR,UAAW,IAG9B2zF,EAAgBlyF,UAAUgzF,aAAe,SAAUzlG,GAC3CA,GAAcA,EAAWS,IAAI,iBACtBT,GAAW8Q,KAAKk1F,MACvBhmG,EAAWgR,UAAW,IAG9B2zF,EAAgBlyF,UAAU2yF,oBAAsB,SAAU9rG,EAAO0rG,GAC7D,GAAIiB,KACJ,QAAwB,KAAbjB,EACP,IAASrtG,EAAI,EAAGA,EAAI8mB,KAAK/W,MAAO/P,IAAK,CACjC,GAAIkL,GAAQ4b,KAAKmmF,cAAc/sG,OAAOC,SAASH,EAAEI,WAAY,IAC7D,IAAIJ,IAAM2B,EACN2sG,EAAYlsG,KAAK8I,OAEhB,CACD,GAAI8F,GAAY9F,EAAMm8C,UAClBr2C,IAAa8V,KAAKtU,gBAAgB2H,UAAUrR,IAAIkI,KAChD8V,KAAKtU,gBAAgB2H,UAAUlR,IAAI+H,GAAWqI,UAAW,QAMrE,KAAK,GAAIrZ,GAAI,EAAGA,EAAI8mB,KAAK/W,MAAO/P,IACxBA,IAAM2B,GACN2sG,EAAYlsG,KAAKirG,GAErBiB,EAAYlsG,KAAK0kB,KAAKmmF,cAAc/sG,OAAOC,SAASH,EAAEI,WAAY,KAG1E0mB,MAAKmmF,cAAgBqB,GAEzBtB,EAAgBlyF,UAAU6yF,aAAe,WACjC7mF,KAAKynF,aAAeznF,KAAK1U,YAAYtJ,IAAI,SACzCge,KAAK1U,YAAY9C,OAAO,QAASwX,KAAKmmF,cAAcptG,QAGpDinB,KAAK1U,YAAY9C,OAAO,SAAUwX,KAAKmmF,cAAcptG,SAG7DmtG,EAAgBlyF,UAAUsyF,eAAiB,WAGvC,IAFA,GAAIoB,GAAgB1nF,KAAK2nF,aAAa3nF,MAClC4nF,IAAa,EACVA,GAAcF,EAAcp8F,aAC/B0U,KAAKmmF,cAAc7qG,KAAKosG,GAExBE,KADAF,EAAgBA,EAAcpgC,QAItC4+B,EAAgBlyF,UAAU2zF,aAAe,SAAUE,EAAcC,OAC7C,KAAZA,IAAsBA,GAAU,EACpC,IACIC,GADAC,EAAyBH,EAAav8F,WAE1C,IAAI08F,GAA0BA,EAAuBhmG,IAAI8lG,EAAU,QAAU,QAAS,CAClF,GAAI59F,GAAY89F,EAAuB1R,KAAKwR,EAAU,QAAU,OAChE,IAAIzsF,GAAmBnR,GAAY,CAC/B,GAAI+9F,GAAqBjoF,KAAKtU,gBAAgBwH,OAAOhJ,EACjD+9F,MACAF,EAAW,GAAIrB,IAAYuB,EAAoBjoF,KAAKtU,kBAC3C60C,WAAar2C,IAIlC,MAAO69F,IAEJ7B,KAiBPQ,GAA6B,SAAU7+E,GAUvC,QAAS6+E,GAAYnlG,EAAYkS,GAC7B,GAAIsU,GAAQF,EAAO5T,KAAK+L,KAAMze,EAAYkS,IAAmBuM,IAC7D,IAAI+H,EAAMzc,cAAgByc,EAAMzc,YAAYtJ,IAAI,SAAW+lB,EAAMzc,YAAYtJ,IAAI,KAAM,CACnF,GAAIkxF,GAAmBnrE,EAAMzc,YAAYnJ,IAAI,IAC7C,IAAI+wF,GAAoBA,EAAiBlxF,IAAI,KAAM,CAC/C,GAAIgW,GAAmBk7E,EAAiB1nF,OAAO,IAC/Cuc,GAAMzc,YAAY9C,OAAO,OAAQwP,IAIzC,MADA+P,GAAMs+E,mBAAoB,EACnBt+E,EA2WX,MA9XA9B,IAAUygF,EAAa7+E,GAqBvB9T,OAAO+H,eAAe4qF,EAAY1yF,UAAW,eAmBzC7R,IAAK,WACD,IAAK6d,KAAKynD,aAAc,CACpB,GAAIygC,GAAmBloF,KAAKmoF,yBACH,QAArBD,OAAyD,KAArBA,IACpCloF,KAAKynD,aAAe1vD,GAAmBiI,KAAK1U,YAAa,SAGjE,MAAO0U,MAAKynD,cAsBhBhnE,IAAK,SAAUtI,GACPA,IACAA,EAAMiwG,QAAUpoF,KAChBA,KAAKynD,aAAetvE,EACpB6nB,KAAKynD,aAAaisB,yBAG1B33E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4qF,EAAY1yF,UAAW,oBAmBzC7R,IAAK,WAID,MAH+B,QAA3B6d,KAAKqoF,uBAAgE,KAA3BroF,KAAKqoF,oBAC/CroF,KAAKqoF,kBAAoBroF,KAAKmoF,2BAE3BnoF,KAAKqoF,mBAoBhB5nG,IAAK,SAAUtI,GACX,GAAI6nB,KAAKqoF,oBAAsBlwG,GAAS6nB,KAAK1U,YAAa,CACtD0U,KAAKqoF,kBAAoBlwG,CACzB,IAAIoJ,GAAa,GAAIO,IAAeke,KAAKtU,gBACzCnK,GAAWiH,OAAO,IAAKrQ,EAAMsuG,OAC7BllG,EAAWiH,OAAO,IAAKlD,GAASnD,IAAI,QACpC,IAAI+H,GAAY8V,KAAKtU,gBAAgB00C,mBACrCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIyJ,EAAW3I,GAC9Cye,KAAK1U,YAAY9C,OAAO,IAAK0B,KAGrC6R,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4qF,EAAY1yF,UAAW,SAmBzC7R,IAAK,WASD,MARoB,QAAhB6d,KAAKsoF,YAA0C,KAAhBtoF,KAAKsoF,SAChCtoF,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,SACzCge,KAAKsoF,OAAStoF,KAAK1U,YAAYnJ,IAAI,SAGnC6d,KAAKsoF,OAAS,IAGftoF,KAAKsoF,QAoBhB7nG,IAAK,SAAUtI,GACX6nB,KAAKsoF,OAASnwG,EACV6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,QAASrQ,IAGzC4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4qF,EAAY1yF,UAAW,SAmBzC7R,IAAK,WAMD,MALoB,QAAhB6d,KAAK8hC,YAA0C,KAAhB9hC,KAAK8hC,QAChC9hC,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,OACzCge,KAAK8hC,OAAS39C,EAAY6b,KAAK1U,YAAYpJ,SAAS,OAGpD8d,YAAeA,KAAK8hC,QAAU,EAAG,EAAG,IAoBhDrhD,IAAK,SAAUtI,GACX6nB,KAAK8hC,OAAS3pD,EACV6nB,KAAK1U,aACL0U,KAAK1U,YAAY9C,OAAO,KAAMpP,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IACrEvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,IAC3CvE,OAAO8J,YAAY/K,EAAM,GAAK,KAAKwF,QAAQ,OAGvDoe,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4qF,EAAY1yF,UAAW,aAmBzC7R,IAAK,WAID,MAHwB,QAApB6d,KAAKuoF,gBAAkD,KAApBvoF,KAAKuoF,aACxCvoF,KAAKuoF,WAAavoF,KAAKwoF,oBAEpBxoF,KAAKuoF,YAoBhB9nG,IAAK,SAAUtI,GACX6nB,KAAKuoF,WAAapwG,EAClB6nB,KAAKyoF,iBAAiBtwG,IAE1B4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAe4qF,EAAY1yF,UAAW,SACzC7R,IAAK,WACD,GAAIumG,EACJ,IAAI1oF,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,QAAS,CAClD,GAAIkI,GAAY8V,KAAK1U,YAAYgrF,KAAK,OACtC,IAAIj7E,GAAmBnR,GAAY,CAC/B,GAAI3I,GAAaye,KAAKtU,gBAAgBwH,OAAOhJ,EACzC3I,MACAmnG,EAAe,GAAIhC,GAAYnlG,EAAYye,KAAKtU,kBACnC60C,WAAar2C,IAItC,MAAOw+F,IAEX3sF,YAAY,EACZC,cAAc,IAElB0qF,EAAY1yF,UAAUy0F,iBAAmB,SAAUtwG,GAC3CA,IAAUqnB,eAAavK,QACnB+K,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,YAClCge,MAAK1U,YAAY+G,KAAKC,EAG5B0N,KAAK1U,aACV0U,KAAK1U,YAAY9C,OAAO,IAAKrQ,IAGrCuuG,EAAY1yF,UAAUw0F,iBAAmB,WACrC,GAAI1jG,GAAQ0a,eAAavK,OACzB,IAAI+K,KAAK1U,aAAe0U,KAAK1U,YAAYtJ,IAAI,KAAM,CAC/C,GAAI9G,GAAO8kB,KAAK1U,YAAYnJ,IAAI,KAC5BwnE,EAAY,MACI,KAATzuE,GAAiC,OAATA,IAC/ByuE,EAAYzuE,GAEhB4J,GAAS6kE,EAEb,MAAO7kE,IAEX4hG,EAAY1yF,UAAUm0F,wBAA0B,WAC5C,GACIQ,GADA1+F,EAAW+V,KAAKtU,gBAAgBuM,SAEhChO,KACA0+F,EAAwB1+F,EAAS2+F,uBAErC,IAAI1rG,GACAgrG,CACJ,IAAIS,EAAuB,CACvB,GAAIpnG,GAAaye,KAAK1U,WACtB,IAAI/J,EACA,GAAIA,EAAWS,IAAI,KAAM,CACrB,GAAIomE,GAAS7mE,EAAWY,IAAI,IACxBimE,IAAUA,EAAOpmE,IAAI,OACrB9E,EAAckrE,EAAOjmE,IAAI,UAGxBZ,GAAWS,IAAI,UACpB9E,EAAcqE,EAAWY,IAAI,QAGrC,IAAIjF,EAAa,CACb,GAAI/E,OAAQ,EAOZ,IANI+E,YAAuBoI,IACvBnN,EAAQ+E,EAAYiL,KAEQ,gBAAhBjL,KACZ/E,EAAQ+E,GAER/E,EAEA,IAAK,GADD0wG,GAAoBF,EAAsBG,mBACrC5vG,EAAI,EAAGA,EAAI2vG,EAAkB9vG,OAAQG,IAE1C,IADAgvG,EAAmBW,EAAkBzvG,OAAOC,SAASH,EAAEI,WAAY,MAC9CgvG,SAAWnwG,EAAO,CACnC+E,EAAcgrG,CACd,SAMpB,MAAOA,IAEJxB,GACTR,IAiBE6C,GAAqC,WACrC,QAASA,GAAoBzmG,EAASmR,GACX,gBAAZnR,IACP0d,KAAKmJ,cACLnJ,KAAKymF,MAAQnkG,IAGb0d,KAAK1U,YAAchJ,EACnB0d,KAAKtU,gBAAkB+H,GAuH/B,MApHAM,QAAO+H,eAAeitF,EAAoB/0F,UAAW,eAqBjD7R,IAAK,WACD,MAAO6d,MAAKynD,cAwBhBhnE,IAAK,SAAUtI,GACPA,IACAA,EAAMiwG,QAAUpoF,KAChBA,KAAKynD,aAAetvE,EACpB6nB,KAAKynD,aAAaisB,yBAG1B33E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAeitF,EAAoB/0F,UAAW,SAqBjD7R,IAAK,WACD,MAAO6d,MAAKsoF,QAwBhB7nG,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKsoF,QAAUtoF,KAAK1U,cAC9B0U,KAAKsoF,OAASnwG,EACd6nB,KAAK1U,YAAY9C,OAAO,QAASrQ,GACjC6nB,KAAK1U,YAAYiH,UAAW,IAGpCwJ,YAAY,EACZC,cAAc,IAElB+sF,EAAoB/0F,UAAUmV,YAAc,WACxCnJ,KAAK1U,YAAc,GAAIxJ,IACvBke,KAAK1U,YAAY9C,OAAO,IAAKlD,GAASnD,IAAI,UAEvC4mG,KAGPC,GAAgD,WAChD,QAASA,GAA+BznG,EAAYkS,GAQhD,GAPAuM,KAAK8oF,sBACDvnG,IACAye,KAAK1U,YAAc/J,GAEnBkS,IACAuM,KAAKtU,gBAAkB+H,GAEvBlS,GAAcA,EAAWS,IAAI,SAAU,CACvC,GAAI9E,GAAcqE,EAAWY,IAAI,QACjC,IAAIjF,EACA,GAAIA,EAAY8E,IAAI,SAChBge,KAAKipF,eAAe/rG,OAEnB,IAAIA,EAAY8E,IAAI,QAErB,IAAK,GADDgW,GAAmB9a,EAAYgF,SAAS,QACnChJ,EAAI,EAAGA,EAAI8e,EAAiBjf,OAAQG,IACzC8mB,KAAKkpF,iBAAiBlxF,EAAiB5e,OAAOC,SAASH,EAAEI,WAAY,OAwIzF,MAlIA0vG,GAA+Bh1F,UAAUk1F,iBAAmB,SAAUhsG,GAClE,GAAIA,EACA,GAAIA,EAAY8E,IAAI,SAChBge,KAAKipF,eAAe/rG,OAEnB,IAAIA,EAAY8E,IAAI,QAAS,CAC9B,GAAIwvD,GAAOt0D,EAAYgF,SAAS,OAChC,IAAIsvD,GAAQvxD,MAAMuB,QAAQgwD,IAASA,EAAKz4D,OAAS,EAC7C,IAAK,GAAIG,GAAI,EAAGA,EAAIs4D,EAAKz4D,OAAQG,IAC7B8mB,KAAKkpF,iBAAiB13C,EAAKp4D,OAAOC,SAASH,EAAEI,WAAY,QAM7E0vG,EAA+Bh1F,UAAUi1F,eAAiB,SAAU/rG,GAChE,GACIkN,GACA7I,EAFAsB,EAAW3F,EAAYsO,OAAO,QASlC,IANI3I,GAAYA,YAAoBwH,MAChCD,EAAM4V,KAAKtU,gBAAgBwH,OAAOrQ,IAElCuH,GAAOnK,MAAMuB,QAAQ4I,IAAQA,EAAIrR,OAAS,IAC1C8J,EAAWuH,GAEXvH,GAAY5C,MAAMuB,QAAQqB,IAAaA,EAAS9J,OAAS,EACzD,IAAK,GAAIG,GAAI,EAAGA,EAAI2J,EAAS9J,OAAQG,GAAQ,EAAG,CAC5C,GAAIgR,GAAYrH,EAAS3J,EAezB,IAdIgR,GAAaA,YAAqBG,KAC9B2N,EAAmBgI,KAAKtU,gBAAgBwH,OAAOhJ,KAC3BjK,MAAMuB,QAAQwW,IAAqBA,EAAiBjf,OAAS,GACjFwI,EAAa,GAAIO,KACN0G,OAAO,IAAKwP,GAGvBzW,EAAaye,KAAKtU,gBAAgBwH,OAAOhJ,GAGxB,OAAf3I,OAA6C,KAAfA,IAA+BtB,MAAMuB,QAAQ0I,KACjF3I,EAAa,GAAIO,KACN0G,OAAO,IAAK0B,GAEvB3I,EAAY,CACZ,GAAI2mG,GAAmB,GAAIa,IAAoBxnG,EAAYye,KAAKtU,iBAC5DvT,EAAQ0K,EAAS3J,EAAI,GACrBiwG,MAAoB,GACpBnxF,MAAmB,EACvB,IAAI7f,IACA+vG,EAAiBI,OAASnwG,EACtBoJ,EAAWS,IAAI,MAAM,CACrBgW,EAAmBzW,EAAWY,IAAI,KAClCgnG,EAAoB,GAAI1wF,GACxB,IAAI2xE,GAAcpyE,EAAiB,EACnC,IAAIoyE,GAAepyE,GAAoBA,EAAiB,YAAc3N,IAAe,CACjF,GAAIzP,GAAiBolB,KAAKtU,gBAAgBwH,OAAOk3E,GAC7CzvF,EAAiBqlB,KAAKtU,gBAAgBuM,UACtCpd,MAAQ,EACRF,IAAkBC,OAEG,MADrBC,EAAQH,EAAcC,EAAgBC,KACQ,OAAVC,GAAkBA,GAAS,IAC3DsuG,EAAkBzwF,OAAS7d,EAC3BsuG,EAAkBnvG,KAAOW,EAAeI,QAAQF,KAMpE,GAAImd,EAAiB,YAAc1S,IAAU,CACzC,GAAIpL,OAAO,GACPD,MAAS,GACTme,MAAO,GACPzR,EAAOqR,EAAiB,GAAG7P,KAC3BnO,EAAOmvG,EAAkBnvG,IAC7B,QAAQ2M,GACJ,IAAK,MACDwiG,EAAkB9gC,iBAAmBzvD,qBAAmBG,SACxD,MACJ,KAAK,MAWD,GAVAowF,EAAkB9gC,iBAAmBzvD,qBAAmB0vD,SACpDtwD,EAAiBjf,OAAS,IAC1BmB,EAAO8d,EAAiB,IAExBA,EAAiBjf,OAAS,IAC1BkB,EAAS+d,EAAiB,IAE1BA,EAAiBjf,OAAS,IAC1Bqf,EAAOJ,EAAiB,IAExBhe,EAAM,CACN,GAAIS,GAAOT,EAAKS,KACZN,EAAuB,OAAXF,OAAqC,KAAXA,EAA0B,EAAIQ,EAAK,GAAKR,EAC9Ese,EAAsB,OAATre,OAAiC,KAATA,EAAwB,EAAIA,CACrEivG,GAAkBC,WAAa7wF,EAAWpe,GACtCH,EAAKI,WAAaC,mBAAiBme,SACnCre,EAAWJ,EAAeC,EAAMC,EAAQC,IAE5CivG,EAAkBE,UAAyB,KAATjxF,GAAiC,OAATA,EAAiBA,EAAO,EACrE,OAATle,GAA4B,OAAXD,GAA4B,OAATme,OAAiC,KAATle,OACvC,KAAXD,OAA0C,KAATme,IAC3C+wF,EAAkBG,UAAW,GAGrC,KACJ,KAAK,OACL,IAAK,QAKD,GAJAH,EAAkB9gC,iBAAmBzvD,qBAAmBE,KACpDd,EAAiBjf,QAAU,IAC3BkB,EAAS+d,EAAiB,IAE1Bhe,EAAM,CACN,GAAIS,GAAOT,EAAKS,KACZN,EAAuB,OAAXF,OAAqC,KAAXA,EAA0B,EAAIQ,EAAK,GAAKR,CAClFkvG,GAAkBC,WAAa,EAAGjvG,GAEvB,OAAXF,OAAqC,KAAXA,IAC1BkvG,EAAkBG,UAAW,EAEjC,MACJ,KAAK,OACDH,EAAkB9gC,iBAAmBzvD,qBAAmBC,MAIpEswF,EAAkBf,QAAUF,EAC5BA,EAAiBzgC,aAAe0hC,EAChCnpF,KAAK8oF,mBAAmBxtG,KAAK4sG,MAKtCc,KC9jCP1tD,GAAyB,WAUzB,QAASA,GAAQ7nC,EAAgBsiD,EAAWx0D,EAAY2I,GACpD8V,KAAKupF,qBAAsB,EAC3BvpF,KAAK/M,QAAS,EACd+M,KAAKiuC,cAAe,EACpBjuC,KAAK6jC,WAAakS,EAClB/1C,KAAKhlB,gBAAkBuG,EACvBye,KAAKtU,gBAAkB+H,EACvBuM,KAAK+6C,KAAO7wD,EA6qBhB,MA3qBA6J,QAAO+H,eAAew/B,EAAQtnC,UAAW,eAmBrC7R,IAAK,WACD,OAAiC,KAAtB6d,KAAKmzC,aAA8B,CAC1C,GAAInzC,KAAKhlB,iBAAmBglB,KAAKhlB,gBAAgBgH,IAAI,UAAW,CAC5D,GAAImI,GAAS6V,KAAK4kF,aAAa,SAC/B,IAAIvpF,GAAmBlR,IAAWlK,MAAMuB,QAAQ2I,GAAS,CACrD,GAAIq/F,EAIJ,IAHIxpF,KAAKtU,gBAAgBuM,UAAUq8E,SAASC,mBAAmBvyF,IAAI,cAC/DwnG,EAAYxpF,KAAKtU,gBAAgBuM,UAAU9D,KAAKs1F,0BAEhDD,GAAaA,EAAUzwG,OAAS,EAAG,CACnC,GAAI2wG,KACJv/F,GAAOa,QAAQ,SAAU5G,IACa,IAA9BolG,EAAUtpG,QAAQkE,IAClBslG,EAAmBpuG,KAAK8I,KAGhC4b,KAAKmzC,aAAe,GAAIkY,IAAwBq+B,EAAoB1pF,KAAKtU,gBAAiBsU,UAG1FA,MAAKmzC,aAAe,GAAIkY,IAAwBlhE,EAAQ6V,KAAKtU,gBAAiBsU,WAIzD,KAAtBA,KAAKmzC,eACZnzC,KAAKmzC,aAAe,GAAIkY,OAA4BrrD,KAAKtU,gBAAiBsU,OAGlF,MAAOA,MAAKmzC,cAEhBp3C,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew/B,EAAQtnC,UAAW,QAmBrC7R,IAAK,WACD,OAA0B,KAAf6d,KAAKqH,MAAuB,CACnC,GAAIhkB,GAAO/B,EAAwB0e,KAAKhlB,gBAAiB,YAAY,GAAO,GACxE2uG,EAAOroG,EAAwB0e,KAAKhlB,gBAAiB,WAAW,GAAO,GACvE4H,EAAQ,EACR3I,EAAS,EACTijB,EAAS8C,KAAKhlB,iBAAmBglB,KAAKhlB,gBAAgBgH,IAAI,UACxDV,EAAwB0e,KAAKhlB,gBAAiB,UAAU,GAAO,GAC/D,CACN,IAAI2uG,GAAmB,OAAXzsF,OAAqC,KAAXA,EAAwB,CAC1Dta,EAAQ+mG,EAAK,GAAKA,EAAK,GACvB1vG,EAAS0vG,EAAK,GAAKA,EAAK,EACxB,IAAIC,KAAmBvmG,GAASA,EAAK,GAAKA,EAAK,GAAMT,IAClC,IAAXsa,GAA2B,MAAXA,IAAoBta,EAAQ3I,IACnC,KAAXijB,GAA4B,MAAXA,IAAoBta,EAAQ3I,GAAW2vG,GAAgC,IAAX1sF,IAAgB7Z,IAC/FT,EAAQS,EAAK,GAAKA,EAAK,GACvBpJ,EAAqB,IAAZoJ,EAAK,GAAWA,EAAK,GAAKA,EAAK,GAAKA,EAAK,QAGjDA,IACLT,EAAQS,EAAK,GAAKA,EAAK,GACvBpJ,EAAqB,IAAZoJ,EAAK,GAAWA,EAAK,GAAKA,EAAK,GAAKA,EAAK,KAGlD2c,KAAKhlB,gBAAgBwN,OAAO,YAAa,EAAG,EAAG,IAAK,MACpD5F,EAAQ,IACR3I,EAAS,IAEb+lB,MAAKqH,OAAShvB,KAAKoL,IAAIb,GAAQvK,KAAKoL,IAAIxJ,IAE5C,MAAO+lB,MAAKqH,OAEhBtL,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew/B,EAAQtnC,UAAW,YAmBrC7R,IAAK,WACD,GAAI6G,GAAQ,CAQZ,YAP8B,KAAnBgX,KAAK6pF,aACZ7gG,EAAQ1H,EAAwB0e,KAAKhlB,gBAAiB,UAAU,GAAO,IAC3D,IACRgO,GAAS,KAEbgX,KAAK6pF,cAA8B,KAAV7gG,EAA2BA,EAAQ,GAAM,EAAK3O,mBAAiBme,QAErFwH,KAAK6pF,WAoBhBppG,IAAK,SAAUtI,GACX,IAAK6nB,KAAK/M,OAAQ,CACd+M,KAAK6pF,UAAY1xG,CACjB,IAAI+kB,GAAsC,GAA7B7kB,KAAK8iB,MAAM6E,KAAK6pF,UACzB3sF,IAAU,MACVA,GAAkB,KAEtB8C,KAAKhlB,gBAAgBwN,OAAO,SAAU0U,KAG9CnB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew/B,EAAQtnC,UAAW,YAkBrC7R,IAAK,WACD,MAAO6d,MAAK8pF,mBAmBhBrpG,IAAK,SAAUtI,GACX6nB,KAAKmrD,UAAYhzE,CACjB,IAAI4xG,GAAO,EACP/pF,MAAKmrD,YAAchtD,wBAAsB3X,OACrCwZ,KAAKmrD,YAAchtD,wBAAsB+kF,IACzC6G,EAAO,IAEF/pF,KAAKmrD,YAAchtD,wBAAsB6rF,OAC9CD,EAAO,IAEF/pF,KAAKmrD,YAAchtD,wBAAsBuzC,YAC9Cq4C,EAAO,MAGf/pF,KAAKhlB,gBAAgBwN,OAAO,OAAQlD,GAASnD,IAAI4nG,KAErDhuF,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew/B,EAAQtnC,UAAW,WAmBrC7R,IAAK,WAOD,WAN0B,KAAf6d,KAAKiqF,QACZjqF,KAAKiqF,MAAQ3oG,EAAwB0e,KAAKhlB,gBAAiB,WAAW,GAAO,QAEvD,KAAfglB,KAAKiqF,QACZjqF,KAAKiqF,OAAS,EAAG,EAAG,EAAG,IAEpBjqF,KAAKiqF,OAEhBluF,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew/B,EAAQtnC,UAAW,YAmBrC7R,IAAK,WAOD,WAN0B,KAAf6d,KAAKkqF,QACZlqF,KAAKkqF,MAAQ5oG,EAAwB0e,KAAKhlB,gBAAiB,YAAY,GAAO,QAExD,KAAfglB,KAAKkqF,QACZlqF,KAAKkqF,OAAS,EAAG,EAAG,EAAG,IAEpBlqF,KAAKkqF,OAEhBnuF,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew/B,EAAQtnC,UAAW,eAmBrC7R,IAAK,WACD,OAAiC,KAAtB6d,KAAKmqF,kBACa,KAAdnqF,KAAKvlB,KAAsB,CAClC,GAAIA,GAAOulB,KAAKvlB,IACZA,GAAK,GAAKA,EAAK,GACfulB,KAAKmqF,aAAe5rF,qBAAmB6rF,UAGvCpqF,KAAKmqF,aAAe5rF,qBAAmB8rF,SAInD,MAAOrqF,MAAKmqF,cAEhBpuF,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew/B,EAAQtnC,UAAW,WACrC7R,IAAK,WAID,WAHuB,KAAZ6d,KAAK88D,IAAsC,IAAf98D,KAAK88D,GAAG,IAA2B,IAAf98D,KAAK88D,GAAG,MAC/D98D,KAAK88D,IAAM98D,KAAK1c,SAAS,GAAI0c,KAAKkqF,MAAM,KAErClqF,KAAK88D,IAEhB/gE,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAew/B,EAAQtnC,UAAW,YAuBrC7R,IAAK,WAID,WAHuB,KAAZ6d,KAAK8pC,IAAsB9pC,KAAK28D,0BACvC38D,KAAKsqF,iBAEFtqF,KAAK8pC,IAEhB/tC,YAAY,EACZC,cAAc,IAElBs/B,EAAQtnC,UAAU0vF,WAAa,SAAUx5F,GACrC,GAAIC,EACJ,IAAI6V,KAAKhlB,gBAAgBgH,IAAI,UAAW,CACpC,GAAIuoG,GAAYvqF,KAAKhlB,gBAAgBwQ,OAAO,SAC5CrB,GAAS6V,KAAK4kF,aAAa,UACvB2F,GAAaA,YAAqBlgG,YAC3B2V,MAAKhlB,gBAAgBqX,KAAKm4F,OACjCxqF,KAAKhlB,gBAAgBwN,OAAO,SAAU2B,IAG1CA,GAAUlK,MAAMuB,QAAQ2I,GACxBA,EAAO7O,KAAK4O,GAGZ8V,KAAKhlB,gBAAgBwN,OAAO,UAAW0B,IAE3C8V,KAAKhlB,gBAAgBuX,UAAW,GAEpC+oC,EAAQtnC,UAAU4wF,aAAe,SAAU/kG,EAAKqC,OAC3B,KAAbA,IAAuBA,GAAW,EACtC,IAAI/J,GAAQmJ,EAAwB0e,KAAKhlB,gBAAiB6E,EAAKqC,GAAU,EACzE,OAAKjC,OAAMuB,QAAQrJ,GAGE,IAAjBA,EAAMY,QAAkBZ,EAAM,YAAc2J,IAGzCA,GAAe2oG,MAAMzqF,KAAKtU,gBAAiBvT,GAFvCA,EAAM,GAHNA,GAOfmjD,EAAQtnC,UAAUs2F,eAAiB,WAC/BtqF,KAAK0qF,eACL,IAAIC,GAAa,GAAIjtC,KAAmB,GAAI,IAAK,GAAI,KACjDktC,EAAgB5qF,KAAKtU,gBAAgB00C,mBACzCpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAImqG,EAAeD,GAClD3qF,KAAK6qF,UAAU5+C,OAAO,EAAG,EAAG2+C,EAC5B,IAAIE,GAAgB,GAAIptC,KAAmB,GAAI,GAAI,GAAI,KACnDqtC,EAAmB/qF,KAAKtU,gBAAgB00C,mBAC5CpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIsqG,EAAkBD,GACrD9qF,KAAK6qF,UAAUvvG,KAAKyvG,EACpB,IAAIC,GAAgB,GAAIttC,QACpButC,EAAmBjrF,KAAKtU,gBAAgB00C,mBAC5CpgC,MAAKtU,gBAAgB2H,UAAU5S,IAAIwqG,EAAkBD,GACrDhrF,KAAK6qF,UAAUvvG,KAAK2vG,GACpBjrF,KAAKhlB,gBAAgByF,IAAI,WAAYuf,KAAK6qF,WAC1C7qF,KAAKhlB,gBAAgBuX,UAAW,EAChCyN,KAAKkrF,oBAAoBF,IAE7B1vD,EAAQtnC,UAAU02F,cAAgB,WAC9B,GACItgG,GADA+gG,EAAWnrF,KAAKhlB,gBAAgBwQ,OAAO,WAE1B,QAAb2/F,OAAyC,KAAbA,GAA4BA,YAAoB9gG,MAC5ED,EAAM+gG,EACNA,EAAWnrF,KAAKtU,gBAAgBwH,OAAO9I,IAEvC+gG,GAAYA,YAAoBrgG,IAChCkV,KAAK6qF,WAAazgG,GAEb+gG,GAAYlrG,MAAMuB,QAAQ2pG,GAC/BnrF,KAAK6qF,UAAYM,EAGjBnrF,KAAK6qF,cAGbvvD,EAAQtnC,UAAUk3F,oBAAsB,SAAU3/F,GAC9C,GAAI6/F,IAAgB,EAChBC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACN/wG,EAAOulB,KAAKvlB,KACZutD,EAAOhoC,KAAK1c,QACZ0kD,IAAQA,EAAKjvD,QAAU,IACvBsyG,EAAMrjD,EAAK,GACXsjD,EAAMtjD,EAAK,GACXujD,EAAMvjD,EAAK,GACXwjD,EAAMxjD,EAAK,GAEf,IAAIH,EACJ,IAAI7nC,KAAKhlB,gBAAgBgH,IAAI,WAEzB,IADA6lD,EAAO7nC,KAAKzc,UACAskD,EAAK9uD,QAAU,EAAG,CAC1B,GAAI0yG,GAAK5jD,EAAK,GACV6jD,EAAK7jD,EAAK,GACV8jD,EAAM9jD,EAAK,GACX+jD,EAAM/jD,EAAK,IACA4jD,EAAK,GAAKC,EAAK,GAAKC,EAAM,GAAKC,EAAM,IAC/CvzG,KAAK8iB,MAAM9iB,KAAKoL,IAAIioG,MAASrzG,KAAK8iB,MAAM9iB,KAAKoL,IAAIhJ,EAAK,MACtDpC,KAAK8iB,MAAM9iB,KAAKoL,IAAIgoG,MAASpzG,KAAK8iB,MAAM9iB,KAAKoL,IAAIhJ,EAAK,KAEvDulB,KAAK8pC,GAAK,GAAI7O,KAAa5iD,KAAKW,IAAIyyG,EAAIE,GAAMtzG,KAAKW,IAAI0yG,EAAIE,IAAOrgG,EAAQyU,KAAKtU,gBAAiBsU,OAGhGA,KAAK8pC,GAAK,GAAI7O,IAAYxgD,EAAM8Q,EAAQyU,KAAKtU,gBAAiBsU,MAC9DA,KAAK8pC,GAAG7B,SAAWJ,OAIvB7nC,MAAK8pC,GAAK,GAAI7O,IAAYxgD,EAAM8Q,EAAQyU,KAAKtU,gBAAiBsU,UAGjE,KAAKqrF,EAAM,GAAKC,EAAM,GAAKC,EAAM,GAAKC,EAAM,IAC5CnzG,KAAK8iB,MAAM9iB,KAAKoL,IAAI6nG,MAAUjzG,KAAK8iB,MAAM9iB,KAAKoL,IAAIhJ,EAAK,MACvDpC,KAAK8iB,MAAM9iB,KAAKoL,IAAI8nG,MAAUlzG,KAAK8iB,MAAM9iB,KAAKoL,IAAIhJ,EAAK,KAAO,CAC/D,GAAImI,GAAQvK,KAAKW,IAAIqyG,EAAKE,GACtBtxG,EAAS5B,KAAKW,IAAIsyG,EAAKE,IACvB5oG,GAAS,GAAK3I,GAAU,KACxBmxG,GAAgB,EACZC,EAAM,IACNA,GAAOA,GAEPC,EAAM,IACNA,GAAOA,GAEPC,EAAM,IACNA,GAAOA,GAEPC,EAAM,IACNA,GAAOA,GAEX5oG,EAAQvK,KAAKW,IAAIqyG,EAAKE,GACtBtxG,EAAS5B,KAAKW,IAAIsyG,EAAKE,IAE3BxrF,KAAK8pC,GAAK,GAAI7O,KAAar4C,EAAO3I,GAASsR,EAAQyU,KAAKtU,gBAAiBsU,UAGzEA,MAAK8pC,GAAK,GAAI7O,IAAYxgD,EAAM8Q,EAAQyU,KAAKtU,gBAAiBsU,KAE9DA,MAAKhlB,gBAAgBgH,IAAI,cACzBge,KAAK8pC,GAAGzH,yBAA2B+oD,GAAiBE,EAAME,GAE9DxrF,KAAK08B,eAAiB18B,KAAK8pC,GAAGvP,MAC9B,IAAIsxD,GAAS7rF,KAAKm/B,OAQlB,IAPK0sD,EAAO,IAAM,GAAKA,EAAO,IAAM,GAAMxzG,KAAKyzG,KAAKD,EAAO,MAAQxzG,KAAKyzG,KAAKD,EAAO,IAChF7rF,KAAK8pC,GAAGlC,yBAGR5nC,KAAK8pC,GAAGlC,uBAAuB5nC,OAG9BA,KAAK/M,OAAQ,CACd,GAAI7Y,GAAW4lB,KAAK5lB,QACpB,KAAKhB,OAAOm3D,MAAMn2D,KAAcA,IAAaC,mBAAiBme,QAAUwH,KAAKhlB,gBAAgBgH,IAAI,WAAY,CACzG,GAAIkb,OAAS,EAETA,GADA8C,KAAKhlB,gBAAgBgH,IAAI,UAChBge,KAAKhlB,gBAAgBmH,IAAI,UAGd,GAAX/H,CAEb,IAAI2xG,GAAO/rF,KAAK8pC,GAAGnO,WACJ,MAAXz+B,GACA8C,KAAK8pC,GAAGtP,mBAAmB,EAAG//C,EAAK,IACnCulB,KAAK8pC,GAAG1B,iBAAiB,IACzBpoC,KAAK8pC,GAAGnO,aAAeowD,EAAK,GAAIA,EAAK,GAAItxG,EAAK,GAAIA,EAAK,KAEvC,MAAXyiB,GACL8C,KAAK8pC,GAAGtP,mBAAmB//C,EAAK,GAAIA,EAAK,IACzCulB,KAAK8pC,GAAG1B,iBAAiB,MAET,MAAXlrC,IACL8C,KAAK8pC,GAAGtP,mBAAmB//C,EAAK,GAAI,GACpCulB,KAAK8pC,GAAG1B,iBAAiB,KACzBpoC,KAAK8pC,GAAGnO,aAAeowD,EAAK,GAAIA,EAAK,GAAItxG,EAAK,GAAIA,EAAK,MAInE,GAAIulB,KAAK/M,QAAU+M,KAAK5G,cAAe,CACnC,GAAI8pC,GAAaljC,KAAKgsF,iBAAiBhsF,KAAK5G,cAC5C4G,MAAK8pC,GAAGjB,sBAAsB3F,GAElCljC,KAAK28D,yBAA0B,GAEnCrhC,EAAQtnC,UAAUg4F,iBAAmB,SAAU3yF,GAC3C,GAAI4yF,GAAa5yF,EAAa6yF,gBAC9B,QAAQ7yF,EAAaE,QAAQrf,KAAMmf,EAAaE,QAAQC,IAAKyyF,EAAW,GAAIA,EAAW,KAE3F3wD,EAAQtnC,UAAUm4F,gBAAkB,WAChC,OAAoC,KAAzBnsF,KAAKy7B,gBACZ,GAAIz7B,KAAKhlB,iBAAmBglB,KAAKhlB,gBAAgBgH,IAAI,aAAc,CAC/D,GAAI2Z,GAAMqE,KAAKhlB,gBAAgBwQ,OAAO,YAC1B,QAARmQ,OAA+B,KAARA,GAAuBA,YAAetR,KAC7D2V,KAAKq7B,uBAAwB,EAC7Br7B,KAAKy7B,gBAAkBz7B,KAAKtU,gBAAgBwH,OAAOyI,IAE9CA,GAAOA,YAAe7Z,MAC3Bke,KAAKy7B,gBAAkB9/B,OAI3BqE,MAAKy7B,gBAAkB,GAAI35C,IAAeke,KAAKtU,iBAC/CsU,KAAKhlB,gBAAgBwN,OAAO,YAAawX,KAAKy7B,gBAGtD,OAAOz7B,MAAKy7B,iBAEhBH,EAAQtnC,UAAU0F,mBAAqB,WACnC,GAAI7N,EASJ,OARImU,MAAKhlB,kBACDglB,KAAKhlB,gBAAgBgH,IAAI,WACzB6J,EAAMmU,KAAKhlB,gBAAgBkH,SAAS,WAE/B8d,KAAKhlB,gBAAgBgH,IAAI,cAC9B6J,EAAMmU,KAAKhlB,gBAAgBkH,SAAS,cAGrC2J,GAEXyvC,EAAQtnC,UAAU+uB,WAAa,eACQ,KAAxB/iB,KAAK08B,iBACZ18B,KAAKq6B,SAASK,QAAQ16B,KAAK08B,gBAC3B18B,KAAK08B,eAAiB,KACtB18B,KAAK28D,yBAA0B,IAGvCrhC,EAAQtnC,UAAU24C,SAAW,WACzB3sC,KAAKhlB,oBAAkBoH,GACvB4d,KAAKqH,UAAQjlB,GACb4d,KAAKkqF,UAAQ9nG,GACb4d,KAAKiqF,UAAQ7nG,GACb4d,KAAK88D,OAAK16E,GACV4d,KAAK8pC,OAAK1nD,GACV4d,KAAK08B,mBAAiBt6C,GACtB4d,KAAK6qF,cAAYzoG,IAErBk5C,EAAQtnC,UAAU81F,gBAAkB,WAChC,GAAI9pF,KAAKhlB,iBAAmBglB,KAAKhlB,gBAAgBgH,IAAI,QAAS,CAC1D,GAAIipE,GAAWjrD,KAAKhlB,gBAAgBmH,IAAI,OACpC8oE,KAAa3lE,GAASnD,IAAI,KAC1B6d,KAAKmrD,UAAYhtD,wBAAsB+kF,IAElCj4B,IAAa3lE,GAASnD,IAAI,KAC/B6d,KAAKmrD,UAAYhtD,wBAAsB6rF,OAElC/+B,IAAa3lE,GAASnD,IAAI,KAC/B6d,KAAKmrD,UAAYhtD,wBAAsBuzC,UAElCuZ,IAAa3lE,GAASnD,IAAI,OAC/B6d,KAAKmrD,UAAYhtD,wBAAsB/J,QAM/C,MAHuB,QAAnB4L,KAAKmrD,eAAgD,KAAnBnrD,KAAKmrD,YACvCnrD,KAAKmrD,UAAYhtD,wBAAsB3X,MAEpCwZ,KAAKmrD,WAEhB7vB,EAAQtnC,UAAU+4D,kBAAoB,SAAU7iE,GAC5C,GAAI8V,KAAKhlB,iBAAmBglB,KAAKhlB,gBAAgBgH,IAAI,UAAW,CAC5D,GAAImI,GAAS6V,KAAK4kF,aAAa,SAC/B,IAAIvpF,GAAmBlR,IAAWlK,MAAMuB,QAAQ2I,GAAS,CACrD,GAAItP,GAAQsP,EAAOjK,QAAQgK,EACvBrP,IAAS,GACTsP,EAAO8hD,OAAOpxD,EAAO,GAEzBmlB,KAAKhlB,gBAAgByF,IAAI,SAAU0J,GACnC6V,KAAKhlB,gBAAgBuX,UAAW,KAI5CwB,OAAO+H,eAAew/B,EAAQtnC,UAAW,oBACrC7R,IAAK,WACD6d,KAAKmsF,iBACL,IAAIC,GAAcpsF,KAAKqsF,kBACnBC,EAAe,GAAI5uC,IAAkBz9D,MAAMS,KAAK0rG,IAChDjhG,EAAW,GAAIM,IAAY6gG,EAActsF,KAAKtU,gBAclD,OAbAP,GAASW,SAASvK,WAAWd,IAAI,YAAauf,KAAKy7B,iBAC/Cz7B,KAAKzc,QAAQ,GAAK,GAAKyc,KAAKzc,QAAQ,GAAK,GACzC4H,EAASW,SAASvK,WAAWd,IAAI,OAAQuf,KAAKzc,SAC9C4H,EAASkc,OAASrH,KAAKzc,QAAQ,GAAIyc,KAAKzc,QAAQ,KAE3Cyc,KAAK1c,SAAS,GAAK,GAAK0c,KAAK1c,SAAS,GAAK,GAChD6H,EAASW,SAASvK,WAAWd,IAAI,OAAQuf,KAAK1c,UAC9C6H,EAASkc,OAASrH,KAAK1c,SAAS,GAAI0c,KAAK1c,SAAS,MAGlD6H,EAASW,SAASvK,WAAWd,IAAI,QAAS,EAAG,EAAGuf,KAAKvlB,KAAK,GAAIulB,KAAKvlB,KAAK,KACxE0Q,EAASkc,OAASrH,KAAKvlB,KAAK,GAAIulB,KAAKvlB,KAAK,KAEvC0Q,GAEX4Q,YAAY,EACZC,cAAc,IAElBs/B,EAAQtnC,UAAUu4F,wBAA0B,SAAUC,GAClD,GAAIzsG,GAAcysG,EAAOC,OAAO,SAAU1zG,EAAQ2zG,GAAO,MAAO3zG,GAAS2zG,EAAI3zG,QAAW,GACpFqzG,EAAc,GAAI/uG,YAAW0C,GAC7BO,EAAS,CAKb,OAJAksG,GAAOxhG,QAAQ,SAAU2hG,GACrBP,EAAY3rG,IAAIksG,EAAarsG,GAC7BA,GAAUqsG,EAAY5zG,SAEnBqzG,GAEX9wD,EAAQtnC,UAAUq4F,gBAAkB,WAChC,GACIptG,GADA+4C,IAEJh4B,MAAK0qF,eACL,IAAIzhG,GAAQ+W,KAAK6qF,UAAU9xG,MAC3Bi/C,GAAK18C,KAAK,GAAI+B,aAAY,GAAI,IAAK,GAAI,KACvC,KAAK,GAAInE,GAAI,EAAGA,EAAI+P,EAAO/P,IAAK,CAC5B,GAAIgR,GAAY8V,KAAK6qF,UAAUzxG,OAAOC,SAASH,EAAEI,WAAY,KACzD6mD,EAAOngC,KAAKtU,gBAAgBwH,OAAOhJ,EACnCi2C,KACIA,YAAgBud,IAChBz+D,EAAQ,GAAI5B,YAAW8iD,EAAKv7B,QAEvBu7B,YAAgBr1C,MACrB7L,EAAQkhD,EAAK2W,YAEb73D,IACA+4C,EAAK18C,KAAK2D,GACV+4C,EAAK18C,KAAK,GAAI+B,aAAY,GAAI,QAO1C,MAHA26C,GAAK18C,KAAK,GAAI+B,aAAY,GAAI,GAAI,GAAI,MACtC26C,EAAK18C,KAAK,GAAI+B,aAAY,GAAI,MACZ2iB,KAAKusF,wBAAwBv0D,IAG5CsD,KA8BP7iC,GAAgC,WAChC,QAASA,GAAeze,EAAMsuE,GAC1BtoD,KAAKopF,WAAa,EAAG,GACrBppF,KAAKqoD,iBAAmBzvD,qBAAmB0vD,SAC3CtoD,KAAKqpF,MAAQ,EACbrpF,KAAKspF,UAAW,EAChBtpF,KAAKtH,OAAS,EACdsH,KAAK4sF,oBAAsB,EAAG,EAAG,EAAG,GACpC5sF,KAAK61E,OAAS51F,YACM,KAATjG,GAAiC,OAATA,IAC3BA,EAAKI,WAAaC,mBAAiBE,SACnCylB,KAAKopF,WAAapvG,EAAKqgD,SAAShzB,MAAM,GAAIrH,KAAKopF,UAAU,IAEpDpvG,EAAKI,WAAaC,mBAAiBC,QACxC0lB,KAAKopF,WAAa,EAAG,GAEhBpvG,EAAKI,WAAaC,mBAAiBG,SACxCwlB,KAAKopF,WAAapvG,EAAKqgD,SAAShzB,MAAM,GAAI,GAG1CrH,KAAKopF,WAAa,EAAGppF,KAAKopF,UAAU,IAExCppF,KAAK7G,MAAQnf,EACbgmB,KAAKtH,OAAS1e,EAAK6pD,gBAEC,KAAbykB,GAAgD,IAApBA,EAASvvE,SAC5CinB,KAAKopF,UAAY9gC,OAEG,KAAbA,GAAgD,IAApBA,EAASvvE,SAC5CinB,KAAKopF,WAAa9gC,EAAS,GAAIA,EAAS,IACxCtoD,KAAK4sF,mBAAqBtkC,GAwYlC,MArYAv0D,QAAO+H,eAAerD,EAAezE,UAAW,QAkB5C7R,IAAK,WACD,MAAO6d,MAAKqpF,OA+BhB5oG,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKqpF,QACfrpF,KAAKqpF,MAAQlxG,EACb6nB,KAAK0zE,yBAGb33E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAerD,EAAezE,UAAW,QAkB5C7R,IAAK,WACD,MAAO6d,MAAK7G,OA+BhB1Y,IAAK,SAAUtI,GACPA,IAAU6nB,KAAK7G,QACf6G,KAAK7G,MAAQhhB,EACb6nB,KAAK0zE,uBACL1zE,KAAKtH,OAASvgB,EAAM0rD,aAG5B9nC,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAerD,EAAezE,UAAW,aAkB5C7R,IAAK,WACD,MAAO6d,MAAKtH,QAEhBqD,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAerD,EAAezE,UAAW,QAkB5C7R,IAAK,WACD,MAAO6d,MAAKqoD,kBA+BhB5nE,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKqoD,mBACfroD,KAAKqoD,iBAAmBlwE,EACxB6nB,KAAK0zE,yBAGb33E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAerD,EAAezE,UAAW,YAkB5C7R,IAAK,WACD,MAAO6d,MAAKopF,WA+BhB3oG,IAAK,SAAUtI,GACPA,IAAU6nB,KAAKopF,YACfppF,KAAKopF,UAAYjxG,EACjB6nB,KAAK0zE,yBAGb33E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAerD,EAAezE,UAAW,qBAkB5C7R,IAAK,WACD,MAAO6d,MAAK4sF,oBA+BhBnsG,IAAK,SAAUtI,GACPA,IAAU6nB,KAAK4sF,qBACf5sF,KAAK4sF,mBAAqBz0G,EAC1B6nB,KAAK0zE,yBAGb33E,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAerD,EAAezE,UAAW,WAkB5C7R,IAAK,WACD,MAAO6d,MAAKspF,UAEhBvtF,YAAY,EACZC,cAAc,IAElBvD,EAAezE,UAAU2E,eAAiB,SAAUxgB,GAChD6nB,KAAKspF,SAAWnxG,GAEpBsgB,EAAezE,UAAU0/E,qBAAuB,WAC5C1zE,KAAK61E,SACL,IAAI77F,GAAOgmB,KAAK7G,KAChB,IAAInf,GAAQA,EAAKgB,gBAAiB,CAC9B,GAAIsH,GAAUtI,EAAKgB,eAInB,YAHuB,KAAZsH,GAAuC,OAAZA,GAClC0d,KAAK61E,OAAOv6F,KAAK0kB,KAAK7G,MAAM4hD,MAExB/6C,KAAKqoD,kBACT,IAAKzvD,sBAAmB0vD,SACpBtoD,KAAK61E,OAAOv6F,KAAKgK,GAASnD,IAAI,YACV,KAATnI,GAAiC,OAATA,GAC/BgmB,KAAK61E,OAAOv6F,KAAK0kB,KAAKopF,UAAU,IAChCppF,KAAK61E,OAAOv6F,KAAK0kB,KAAK7G,MAAMkhC,SAAShzB,MAAM,GAAKrH,KAAKopF,UAAU,MAG/DppF,KAAK61E,OAAOv6F,KAAK,GACjB0kB,KAAK61E,OAAOv6F,KAAK,IAErB0kB,KAAK61E,OAAOv6F,KAAK0kB,KAAKqpF,MACtB,MACJ,KAAKzwF,sBAAmBG,UACpBiH,KAAK61E,OAAOv6F,KAAKgK,GAASnD,IAAI,OAC9B,MACJ,KAAKyW,sBAAmBC,KACpBmH,KAAK61E,OAAOv6F,KAAKgK,GAASnD,IAAI,SAC9B6d,KAAK61E,OAAOv6F,KAAK0kB,KAAK4sF,mBAAmB,IACzC5sF,KAAK61E,OAAOv6F,KAAK0kB,KAAK4sF,mBAAmB,IACzC5sF,KAAK61E,OAAOv6F,KAAK0kB,KAAK4sF,mBAAmB,IACzC5sF,KAAK61E,OAAOv6F,KAAK0kB,KAAK4sF,mBAAmB,GACzC,MACJ,KAAKh0F,sBAAmBE,KACpBkH,KAAK61E,OAAOv6F,KAAKgK,GAASnD,IAAI,SAC9B6d,KAAK61E,OAAOv6F,SAAsB,KAATtB,GAAiC,OAATA,EAAiBA,EAAKqtB,MAAM,GAAKrH,KAAKopF,UAAU,GAAK,GAG1GppF,KAAKooF,UACLpoF,KAAKooF,QAAQ98F,YAAY7K,IAAIuf,KAAKooF,kBAAmBW,IAAsB,IAAM,OAAQ/oF,KAAK61E,QAC9F71E,KAAKooF,QAAQ98F,YAAYiH,UAAW,KAIzCkG,KCtpCPo0F,GAA+B,WAC/B,QAASA,KACL7sF,KAAKsJ,QAAUhK,eAAapP,QAC5B8P,KAAKmkB,QAAU,EACfnkB,KAAK8I,OAAS,EACd9I,KAAK8sF,kBAAoB,EACzB9sF,KAAK+L,UAAY,EACjB/L,KAAK+sF,iBAAmB,EA2D5B,MAzDAF,GAAc74F,UAAUg5F,OAAS,WAC7BhtF,KAAK+L,UAAY,GAErB8gF,EAAc74F,UAAUi5F,WAAa,SAAUpyG,GAC3C,MAAOmlB,MAAKG,QAAQ/mB,OAAOC,SAASwB,EAAMvB,WAAY,MAE1DuzG,EAAc74F,UAAUwW,MAAQ,SAAU9tB,EAAQ4D,EAAQ2I,EAAOsC,GAC7D,GAAIA,GAAUtL,MAAMuB,QAAQ+J,GAAS,CACjC,GAAIzN,GAAS,CACb,IAAImL,GAASsC,EAAOxS,QAAUwS,EAAOxS,OAASuH,GAAU2I,EACpD,IAAK,GAAI/P,GAAI,EAAGA,EAAI+P,EAAO/P,IACvBwD,EAAOtD,OAAOC,SAASH,EAAEI,WAAY,KAAOiS,EAAOnS,OAAOC,SAASiH,EAAOhH,WAAY,KACtFgH,IACAxC,GAGR,QAASovG,aAAgBxwG,EAAQ4D,OAAUA,EAAQvH,OAAU+E,GAG7D,IAAK,GAAIjD,GAAQyF,EAAQzF,EAAQoO,EAAOpO,IAAS,CAC7C,GAAI6a,GAAWsK,KAAK+L,SACpBrvB,GAAOtD,OAAOC,SAASwB,EAAMvB,WAAY,KAAO0mB,KAAKitF,WAAWv3F,GAChEsK,KAAK+L,cAIjB8gF,EAAc74F,UAAUwc,YAAc,SAAUz3B,GAE5C,IAAK,GADD+E,GAAS,GACJ5E,EAAI,EAAGA,EAAIH,EAAQG,IACxB4E,GAAUjB,OAAOC,aAAakjB,KAAKsY,YAEvC,OAAOx6B,IAEX+uG,EAAc74F,UAAUm5F,MAAQ,SAAUp0G,GACtCinB,KAAK+L,WAAahzB,GAEtB8zG,EAAc74F,UAAUskB,UAAY,WAChC,GAAItY,KAAK+L,UAAY/L,KAAKG,QAAQitF,WAAY,CAC1C,GAAIj1G,GAAQ6nB,KAAKitF,WAAWjtF,KAAK+L,UAEjC,OADA/L,MAAK+L,WAAa,EACX5zB,EAGP,KAAM,IAAI0B,OAAM,+CAGxBgzG,EAAc74F,UAAUq5F,cAAgB,SAAUl1G,GAE9C,MADAA,IAAgB,MACTA,EAAQ,EAAKA,EAAQ,MAAWA,GAE3C00G,EAAc74F,UAAUs5F,gBAAkB,SAAUhtG,GAKhD,MAJS0f,MAAKitF,WAAW3sG,EAAS,GACzB0f,KAAKitF,WAAW3sG,EAAS,IAGf,EAFV0f,KAAKitF,WAAW3sG,EAAS,IAEH,GADtB0f,KAAKitF,WAAW3sG,IACmB,IAEzCusG,KCnEP5mF,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAOnF5sB,GAA8B,SAAUiuB,GAQxC,QAASjuB,GAAa2R,GAClB,GAAIwc,GAAQF,EAAO5T,KAAK+L,OAASA,IAGjC,OAFA+H,GAAM5H,QAAU5U,EAChBwc,EAAMoB,cACCpB,EAgKX,MA3KA9B,IAAUrsB,EAAciuB,GAaxB9T,OAAO+H,eAAeliB,EAAaoa,UAAW,2BAC1C7R,IAAK,WACD,MAAO6d,MAAKutF,YAEhBxxF,YAAY,EACZC,cAAc,IAElBpiB,EAAaoa,UAAUmV,YAAc,WACjCnJ,KAAKsJ,QAAUhK,eAAakuF,KAC5BxtF,KAAKytF,cACLztF,KAAKgtF,SACLhtF,KAAKutF,WAAa,GAAIlwG,YAAW2iB,KAAKG,QAAQitF,YAC9CptF,KAAKwK,MAAMxK,KAAKutF,WAAY,EAAGvtF,KAAKutF,WAAWH,aAEnDxzG,EAAaoa,UAAUy5F,YAAc,WACjCztF,KAAKgtF,QACL,IAAIU,GAAU,GAAIrwG,YAAW2iB,KAAKG,QAAQitF,WAC1CptF,MAAKwK,MAAMkjF,EAAS,EAAGA,EAAQN,WAI/B,KAHA,GAAIl0G,GAAI,EACJH,EAA8B,IAArBinB,KAAKitF,WAAW/zG,GAAW8mB,KAAKitF,WAAW/zG,EAAI,GACxDy0G,GAAiB,EACdz0G,EAAIw0G,EAAQN,YAAY,CAE3B,MADAl0G,GAAKH,GACG20G,EAAQN,YAcX,CACDO,GAAiB,CACjB,OAfA,GAA+B,MAA3B3tF,KAAKitF,WAAW/zG,EAAI,IAIpB,GAHA8mB,KAAKmkB,QAAmC,IAAzBnkB,KAAKitF,WAAW/zG,EAAI,GAAW8mB,KAAKitF,WAAW/zG,EAAI,GAClE8mB,KAAK8I,OAAkC,IAAzB9I,KAAKitF,WAAW/zG,EAAI,GAAW8mB,KAAKitF,WAAW/zG,EAAI,GACjE8mB,KAAK+sF,gBAAkB/sF,KAAKitF,WAAW/zG,EAAI,GACvB,IAAhB8mB,KAAK8I,QAAiC,IAAjB9I,KAAKmkB,QAC1B,WAIJjrC,IAAK,EACLH,EAA8B,IAArBinB,KAAKitF,WAAW/zG,GAAW8mB,KAAKitF,WAAW/zG,EAAI,GAQhEy0G,IACA3tF,KAAKgtF,SACLhtF,KAAKmtF,MAAM,GACXntF,KAAK4tF,2BAGbh0G,EAAaoa,UAAU65F,oBAAsB,WACzC,GAAIjrF,KACJ5C,MAAK0gC,aAAe,GAAI7sC,IAAW+O,EAAM,GAAI9gB,KAC7Cke,KAAK0gC,aAAaiiB,eAAgB,CAGlC,KAAK,GAFDmrC,GAAa,GACbC,EAAgB,GACX70G,EAAI,EAAGA,EAAI8mB,KAAKguF,wBAAwBZ,WAAYl0G,IACzD40G,GAAc,IAAMjxG,OAAOC,aAAakjB,KAAKitF,WAAW/zG,GAE5D,KAASA,EAAI,EAAGA,EAAI40G,EAAW/0G,OAAQG,IAC/BA,EAAI,GAAM,IACV60G,GAAiBD,EAAW10G,OAAOC,SAASH,EAAEI,WAAY,KAGlE0mB,MAAK0gC,aAAa99B,MAAQmrF,GAC1B/tF,KAAK0gC,aAAase,aAAc,CAChC,IAAIz9D,GAAa,GAAIO,GACrBP,GAAWd,IAAI,OAAQ,GAAI6E,IAAS,YACpC/D,EAAWd,IAAI,UAAW,GAAI6E,IAAS,UACvC/D,EAAWd,IAAI,QAASuf,KAAK8I,QAC7BvnB,EAAWd,IAAI,SAAUuf,KAAKmkB,SAC9B5iC,EAAWd,IAAI,mBAAoBuf,KAAK8sF,mBACxCvrG,EAAWd,IAAI,SAAU,GAAI6E,IAAS,cACtC/D,EAAWd,IAAI,aAAc,GAAI6E,IAAS0a,KAAKiuF,mBAC/C1sG,EAAWd,IAAI,cAAeuf,KAAKkuF,oBACnCluF,KAAK0gC,aAAan/C,WAAaA,EAC/Bye,KAAK0gC,aAAavjD,MAAQ,GAAIE,YAAW2iB,KAAK0gC,aAAa99B,KAAK,GAAG7pB,OACnE,KAASG,EAAI,EAAGA,EAAI8mB,KAAK0gC,aAAa99B,KAAK,GAAG7pB,OAAQG,IAClD8mB,KAAK0gC,aAAavjD,MAAM/D,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAK0gC,aAAa99B,KAAK,GAAGzmB,WAAWjD,EAItG,OAFA8mB,MAAK0gC,aAAa5nD,IAAMknB,KAAK0gC,aAAavjD,MAAMpE,OAChDinB,KAAK0gC,aAAan/C,WAAWgR,UAAW,EACjCyN,KAAK0gC,cAEhB9mD,EAAaoa,UAAUi6F,eAAiB,WACpC,MAA6B,KAAzBjuF,KAAK+sF,gBACE,aAEuB,IAAzB/sF,KAAK+sF,gBACH,aAEJ,aAEXnzG,EAAaoa,UAAUk6F,iBAAmB,WACtC,GAAIC,GAAe,GAAIrsG,GAMvB,OALAqsG,GAAa1tG,IAAI,UAAWuf,KAAK8I,QACjCqlF,EAAa1tG,IAAI,YAAY,GAC7B0tG,EAAa1tG,IAAI,KAAM,GACvB0tG,EAAa1tG,IAAI,YAAa,IAC9B0tG,EAAa1tG,IAAI,mBAAoBuf,KAAK8sF,mBACnCqB,GAEXv0G,EAAaoa,UAAUo6F,YAAc,WACjC,GAAIr1G,GAASinB,KAAKitF,WAAWjtF,KAAK+L,YAAc,EAAI/L,KAAKitF,WAAWjtF,KAAK+L,UAAY,EAErF,IADA/L,KAAKmtF,MAAM,GACPp0G,EAAS,EACT,KAAM,IAAIc,OAAM,4BAEXd,GAAS,GACdinB,KAAKmtF,MAAMp0G,EAAS,IAG5Ba,EAAaoa,UAAU45F,uBAAyB,WAE5C,IADA,GAAIS,IAAoB,EACjBA,GAEH,OADaruF,KAAKsuF,cAEd,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACDtuF,KAAKmtF,MAAM,GACXntF,KAAKmkB,QAAUnkB,KAAKitF,WAAWjtF,KAAK+L,YAAc,EAAI/L,KAAKitF,WAAWjtF,KAAK+L,UAAY,GACvF/L,KAAKmtF,MAAM,GACXntF,KAAK8I,OAAS9I,KAAKitF,WAAWjtF,KAAK+L,YAAc,EAAI/L,KAAKitF,WAAWjtF,KAAK+L,UAAY,GACtF/L,KAAKmtF,MAAM,GACXntF,KAAK+sF,gBAAkB/sF,KAAKitF,WAAWjtF,KAAK+L,WAC5C/L,KAAKmtF,MAAM,GACXkB,GAAoB,CACpB,MACJ,SACIruF,KAAKouF,gBAKrBx0G,EAAaoa,UAAUs6F,WAAa,WAGhC,IAFA,GAAIC,GAAc,EACdC,EAASxuF,KAAKsY,YACA,MAAXk2E,GACHD,IACAC,EAASxuF,KAAKsY,WAElB,IACIk2E,EAASxuF,KAAKsY,kBACE,MAAXk2E,EACT,IAAoB,IAAhBD,EACA,KAAM,IAAI10G,OAAM,4BAEpB,OAAOmmB,MAAKqtF,cAAcmB,IAEvB50G,GACTizG,KC7LF,SAAW4B,GACPA,EAAeA,EAA8B,cAAI,GAAK,gBACtDA,EAAeA,EAA8B,cAAI,GAAK,gBACtDA,EAAeA,EAA6B,aAAI,GAAK,eACrDA,EAAeA,EAA+B,eAAI,GAAK,iBACvDA,EAAeA,EAA+B,eAAI,GAAK,iBACvDA,EAAeA,EAA6B,aAAI,GAAK,eACrDA,EAAeA,EAA+B,eAAI,GAAK,iBACvDA,EAAeA,EAAgC,gBAAI,GAAK,kBACxDA,EAAeA,EAA+B,eAAI,GAAK,iBACvDA,EAAeA,EAA0B,UAAI,GAAK,YAClDA,EAAeA,EAAwB,QAAI,IAAM,UACjDA,EAAeA,EAAwB,QAAI,IAAM,UACjDA,EAAeA,EAAsB,MAAI,IAAM,QAC/CA,EAAeA,EAAqC,qBAAI,IAAM,uBAC9DA,EAAeA,EAAkC,kBAAI,IAAM,oBAC3DA,EAAeA,EAAkC,kBAAI,IAAM,oBAC3DA,EAAeA,EAAkC,kBAAI,IAAM,oBAC3DA,EAAeA,EAAkC,kBAAI,IAAM,oBAC3DA,EAAeA,EAAwC,wBAAI,IAAM,0BACjEA,EAAeA,EAAyB,SAAI,IAAM,WAClDA,EAAeA,EAAwB,QAAI,IAAM,UACjDA,EAAeA,EAAwB,QAAI,IAAM,UACjDA,EAAeA,EAAqB,KAAI,IAAM,QAC/CA,mBAAmBA,sBAEtB,SAAWC,GACPA,EAAWA,EAA6B,iBAAI,GAAK,mBACjDA,EAAWA,EAAuB,WAAI,GAAK,aAC3CA,EAAWA,EAAwB,YAAI,GAAK,eAC7CA,eAAeA,qBC2nBdC,ICzpBAC,GAAqC,WACrC,QAASA,KACL5uF,KAAKwN,KAAO,EACZxN,KAAK6uF,WAAa,EAClB7uF,KAAK8uF,SAAW7uG,MAAM2uG,EAAoBG,WAAW9qD,KAAK,GAC1DjkC,KAAKwN,KAAO,EACZxN,KAAK6uF,WAAa,EAmFtB,MAjFA96F,QAAO+H,eAAe8yF,EAAoB56F,UAAW,gBACjD7R,IAAK,WACD,MAAOysG,GAAoBG,UAAY/uF,KAAK6uF,YAEhD9yF,YAAY,EACZC,cAAc,IAElB4yF,EAAoB56F,UAAUuO,OAAS,SAAU/d,GAC7Cwb,KAAK8uF,SAAS9uF,KAAKwN,QAAUhpB,EAC7Bwb,KAAKwN,MAAQohF,EAAoBI,YAC/BhvF,KAAK6uF,YAEXD,EAAoB56F,UAAUi7F,SAAW,SAAUl2G,EAAQ2mE,GACvD1/C,KAAK6uF,YAAc91G,CACnB,IAAIm2G,GAAalvF,KAAKwN,KAAOkyC,EAAYkvC,EAAoBI,UACzDzkC,EAASqkC,EAAoBG,UAAYh2G,CAC7C,IAAIm2G,GAAa3kC,GAAUvqD,KAAKwN,KAAO+8C,EACnC,GAAIxxE,GAAU2mE,EACVjnE,EAAWunB,KAAK8uF,SAAU9uF,KAAKwN,KAAMxN,KAAK8uF,SAAUI,EAAWA,EAAYn2G,GAC3EinB,KAAKwN,MAAQz0B,MAGb,MAAOA,KAAW,GACdinB,KAAK8uF,SAAS9uF,KAAKwN,QAAUxN,KAAK8uF,SAASI,SAKnD,MAAOn2G,KAAW,GACdinB,KAAK8uF,SAAS9uF,KAAKwN,QAAUxN,KAAK8uF,SAASI,KAC3ClvF,KAAKwN,MAAQohF,EAAoBI,UACjCE,GAAaN,EAAoBI,WAI7CJ,EAAoB56F,UAAUm7F,UAAY,SAAU5vG,EAAOxG,GACvDA,EAASV,KAAKY,IAAIZ,KAAKY,IAAIF,EAAQ61G,EAAoBG,UAAY/uF,KAAK6uF,YAAatvG,EAAMqlB,OAC3F,IAAIwqF,GACAC,EAAUT,EAAoBG,UAAY/uF,KAAKwN,IAYnD,OAXIz0B,GAASs2G,GACTD,EAAS7vG,EAAM+vG,QAAQtvF,KAAK8uF,SAAU9uF,KAAKwN,KAAM6hF,MAClCA,IACXD,GAAU7vG,EAAM+vG,QAAQtvF,KAAK8uF,SAAU,EAAG/1G,EAASs2G,IAIvDD,EAAS7vG,EAAM+vG,QAAQtvF,KAAK8uF,SAAU9uF,KAAKwN,KAAMz0B,GAErDinB,KAAKwN,KAAQxN,KAAKwN,KAAO4hF,EAAUR,EAAoBI,UACvDhvF,KAAK6uF,YAAcO,EACZA,GAEXR,EAAoB56F,UAAUs7F,QAAU,SAAU5wG,EAAQ4B,EAAQvH,GAC9D,GAAID,EACAC,GAASinB,KAAK6uF,YACd/1G,EAAMknB,KAAKwN,KACXz0B,EAASinB,KAAK6uF,YAGd/1G,EAAOknB,KAAKwN,KAAOxN,KAAK6uF,WAAa91G,EAAU61G,EAAoBI,SAEvE,IAAII,GAASr2G,EACTs2G,EAAUt2G,EAASD,EACnBy2G,EAAcX,EAAoBG,UAAYM,CAClD,IAAIA,EAAU,EAAG,CACb,IAAK,GAAIn2G,GAAI,EAAGA,EAAIm2G,GAAWn2G,EAAIq2G,EAAcvvF,KAAK8uF,SAAS/1G,QAAUG,EAAIoH,EAAS5B,EAAO3F,OAAQG,IACjGwF,EAAO4B,EAASpH,GAAK8mB,KAAK8uF,SAASS,EAAcr2G,EAErD,IAAIs2G,GAAqBZ,EAAoBG,UAAYM,CACzD52G,GAAWiG,EAAQ4B,EAAQ0f,KAAK8uF,SAAUU,EAAoBA,EAAqBH,GACnF/uG,GAAU+uG,EACVt2G,EAASD,EAEby2G,EAAcz2G,EAAMC,CACpB,IAAI02G,GAAmB32G,EAAMC,CAG7B,OAFAN,GAAWiG,EAAQ4B,EAAQ0f,KAAK8uF,SAAUW,EAAkB32G,GAC5DknB,KAAK6uF,YAAcO,GACVnmG,MAASmmG,EAAQxsF,KAAQlkB,IAEtCkwG,EAAoBG,UAAY,MAChCH,EAAoBI,UAAY,MACzBJ,KCzFPc,GAA2B,WAC3B,QAASA,KACL1vF,KAAK2vF,SAAW,EAChB3vF,KAAK4vF,WAAa,EAClB5vF,KAAKqmE,OAAS,EACdrmE,KAAKwN,KAAO,EA+FhB,MA7FAzZ,QAAO+H,eAAe4zF,EAAU17F,UAAW,UACvC7R,IAAK,WACD,MAAQ6d,MAAKwN,KAAOxN,KAAKqmE,OAAUhuF,KAAK8iB,MAAM6E,KAAK4vF,WAAa,IAEpE7zF,YAAY,EACZC,cAAc,IAElB0zF,EAAU17F,UAAU67F,YAAc,WAC9B,MAAO7vF,MAAKqmE,SAAWrmE,KAAKwN,MAEhCkiF,EAAU17F,UAAU87F,eAAiB,SAAU7mG,GAC3C,GAAI+W,KAAK4vF,WAAa3mG,EAAO,CACzB,GAAI+W,KAAK6vF,cACL,OAAO,CAIX,IAFA7vF,KAAK2vF,UAAYz3G,EAAY8nB,KAAKgiB,QAAQhiB,KAAKqmE,UAAW,KAAOrmE,KAAK4vF,WACtE5vF,KAAK4vF,YAAc,EACf5vF,KAAK4vF,WAAa3mG,EAAO,CACzB,GAAI+W,KAAK6vF,cACL,OAAO,CAEX7vF,MAAK2vF,UAAYz3G,EAAY8nB,KAAKgiB,QAAQhiB,KAAKqmE,UAAW,KAAOrmE,KAAK4vF,WACtE5vF,KAAK4vF,YAAc,GAG3B,OAAO,GAEXF,EAAU17F,UAAU+7F,YAAc,WAiB9B,MAhBI/vF,MAAK4vF,WAAa,GACd5vF,KAAKqmE,OAASrmE,KAAKwN,OACnBxN,KAAK2vF,UAAYz3G,EAAY8nB,KAAKgiB,QAAQhiB,KAAKqmE,UAAW,KAAOrmE,KAAK4vF,WACtE5vF,KAAK4vF,YAAc,GAEnB5vF,KAAKqmE,OAASrmE,KAAKwN,OACnBxN,KAAK2vF,UAAYz3G,EAAY8nB,KAAKgiB,QAAQhiB,KAAKqmE,UAAW,KAAOrmE,KAAK4vF,WACtE5vF,KAAK4vF,YAAc,IAGlB5vF,KAAK4vF,WAAa,IACnB5vF,KAAKqmE,OAASrmE,KAAKwN,OACnBxN,KAAK2vF,UAAYz3G,EAAY8nB,KAAKgiB,QAAQhiB,KAAKqmE,UAAW,KAAOrmE,KAAK4vF,WACtE5vF,KAAK4vF,YAAc,GAGpB5vF,KAAK2vF,UAEhBD,EAAU17F,UAAUg8F,YAAc,SAAU/mG,GACxC,OAAQ/Q,EAAY,EAAG,KAAO+Q,GAAS,GAE3CymG,EAAU17F,UAAUi8F,SAAW,SAAUhnG,GACrC,IAAK+W,KAAK8vF,eAAe7mG,GACrB,OAAQ,CAEZ,IAAInL,GAASkiB,KAAK2vF,SAAW3vF,KAAKgwF,YAAY/mG,EAG9C,OAFA+W,MAAK2vF,WAAa1mG,EAClB+W,KAAK4vF,YAAc3mG,EACZnL,GAEX4xG,EAAU17F,UAAUs7F,QAAU,SAAU5wG,EAAQ4B,EAAQvH,GAEpD,IADA,GAAIm3G,GAAY,EACTlwF,KAAK4vF,WAAa,GAAK72G,EAAS,GACnC2F,EAAO4B,KAAYpI,EAAY8nB,KAAK2vF,SAAU,GAC9C3vF,KAAK2vF,WAAa,EAClB3vF,KAAK4vF,YAAc,EACnB72G,IACAm3G,GAEJ,IAAe,IAAXn3G,EACA,MAAOm3G,EAEX,IAAIC,GAAQnwF,KAAKwN,KAAOxN,KAAKqmE,MACzBttF,GAASo3G,IACTp3G,EAASo3G,EAEb,KAAK,GAAIj3G,GAAI,EAAGA,EAAIH,GAAUG,EAAI8mB,KAAKqmE,OAASrmE,KAAKgiB,QAAQjpC,QAAUG,EAAIoH,EAAS5B,EAAO3F,OAAQG,IAC/FwF,EAAO4B,EAASpH,GAAK8mB,KAAKgiB,QAAQhiB,KAAKqmE,OAASntF,EAGpD,OADA8mB,MAAKqmE,QAAUttF,EACRm3G,EAAYn3G,GAEvB22G,EAAU17F,UAAUo8F,UAAY,SAAU1zG,EAAQ4D,EAAQvH,GACtDinB,KAAKgiB,QAAUtlC,EACfsjB,KAAKqmE,OAAS/lF,EACd0f,KAAKwN,KAAOltB,EAASvH,GAEzB22G,EAAU17F,UAAUq8F,UAAY,SAAU7uE,GACtCxhB,KAAK2vF,WAAanuE,EAClBxhB,KAAK4vF,YAAcpuE,GAEvBkuE,EAAU17F,UAAUs8F,kBAAoB,WACpCtwF,KAAK2vF,WAAa3vF,KAAK4vF,WAAa,EACpC5vF,KAAK4vF,WAAa5vF,KAAK4vF,WAAc5vF,KAAK4vF,WAAa,GAEpDF,KCpGPa,GAA8B,WAC9B,QAASA,MAyJT,MAvJAA,GAAav8F,UAAUy4D,MAAQ,SAAU7vE,GACrCojB,KAAKwwF,SAAW5zG,EAChBojB,KAAKmJ,eAETonF,EAAav8F,UAAUy8F,UAAY,SAAUC,GACzC1wF,KAAKwwF,SAAWE,EAAe1wF,KAAK2wF,iBAAmB3wF,KAAK4wF,gBAC5D5wF,KAAKmJ,eAETonF,EAAav8F,UAAUmV,YAAc,WAC7BnJ,KAAKwwF,SAASz3G,SAAWw3G,EAAaM,eACtC7wF,KAAK8wF,OAAS,EAGd9wF,KAAK8wF,OAAS,EAElB9wF,KAAK+wF,QAAU,GAAK/wF,KAAK8wF,QAAU,EACnC9wF,KAAKgxF,gBAETT,EAAav8F,UAAU28F,eAAiB,WAEpC,IAAK,GADDM,GAAQhxG,MAAMswG,EAAaM,gBAAgB5sD,KAAK,GAC3C/qD,EAAI,EAAGA,GAAK,IAAKA,IACtB+3G,EAAM73G,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,EAAY,EAAG,EAE9D,KAASgB,EAAI,IAAKA,GAAK,IAAKA,IACxB+3G,EAAM73G,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,EAAY,EAAG,EAE9D,KAASgB,EAAI,IAAKA,GAAK,IAAKA,IACxB+3G,EAAM73G,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,EAAY,EAAG,EAE9D,KAASgB,EAAI,IAAKA,GAAK,IAAKA,IACxB+3G,EAAM73G,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,EAAY,EAAG,EAE9D,OAAO+4G,IAEXV,EAAav8F,UAAU48F,cAAgB,WACnC,MAAO3wG,OAAMswG,EAAaW,eAAejtD,KAAK,IAElDssD,EAAav8F,UAAUm9F,mBAAqB,WAExC,IAAK,GADDC,GAAMnxG,MAAM,IAAIgkD,KAAK,GAChB/qD,EAAI,EAAGA,EAAI8mB,KAAKwwF,SAASz3G,OAAQG,IACtCk4G,EAAIpxF,KAAKwwF,SAASp3G,OAAOC,SAASH,EAAEI,WAAY,OAEpD83G,GAAI,GAAK,CAGT,KAAK,GAFD/oE,GAAOpoC,MAAM,IAAIgkD,KAAK,GACtBvZ,EAAO,EACFtyC,EAAO,EAAGA,GAAQ,GAAIA,IAC3BsyC,EAAQA,EAAO0mE,EAAIh5G,EAAO,IAAO,EACjCiwC,EAAKjvC,OAAOC,SAASjB,EAAKkB,WAAY,KAAOoxC,CAGjD,KAAK,GADD9tC,GAAOqD,MAAMswG,EAAaM,gBAAgB5sD,KAAK,GAC1C/qD,EAAI,EAAGA,EAAI8mB,KAAKwwF,SAASz3G,OAAQG,IAAK,CAC3C,GAAIm0B,GAAMrN,KAAKwwF,SAASp3G,OAAOC,SAASH,EAAEI,WAAY,IAClD+zB,GAAM,IACNzwB,EAAKxD,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAKqxF,YAAYhpE,EAAKjvC,OAAOC,SAASg0B,EAAI/zB,WAAY,KAAM+zB,GACtGgb,EAAKjvC,OAAOC,SAASg0B,EAAI/zB,WAAY,QAG7C,MAAOsD,IAEX2zG,EAAav8F,UAAUq9F,YAAc,SAAUz0G,EAAM7D,GACjD,GAAIu4G,GAAU,CACd,IACIA,GAAkB,EAAP10G,EACX00G,IAAY,EACZ10G,IAAS,UACF7D,EAAS,EACpB,OAAOu4G,IAAW,GAEtBf,EAAav8F,UAAUg9F,aAAe,WAClC,GAAIO,GAAYvxF,KAAKmxF,oBACrBnxF,MAAK2uC,OAAS1uD,MAAM,GAAK+f,KAAK8wF,QAAQ7sD,KAAK,GAC3CjkC,KAAKm+E,MAAQl+F,MAAM,EAAI+f,KAAKwwF,SAASz3G,QAAQkrD,KAAK,GAClDjkC,KAAKs+E,OAASr+F,MAAM,EAAI+f,KAAKwwF,SAASz3G,QAAQkrD,KAAK,EAEnD,KAAK,GADDksD,GAAQ53G,EAAYynB,KAAKwwF,SAASz3G,QAC7BsG,EAAK,EAAGA,EAAK2gB,KAAKwwF,SAASz3G,OAAQsG,IAAM,CAC9C,GAAIguB,GAAMrN,KAAKwwF,SAASp3G,OAAOC,SAASgG,EAAG/F,WAAY,IACvD,IAAI+zB,EAAM,EAAG,CACT,GAAIx0B,GAAQ04G,EAAUn4G,OAAOC,SAASgG,EAAG/F,WAAY,IACrD,IAAI+zB,GAAOrN,KAAK8wF,OAAQ,CACpB,GAAI53G,GAAI,GAAKm0B,CACb,IAAIx0B,GAASK,EACT,KAAM,IAAIW,OAAM,gBAGpB,KAAK,GADDuzC,GAAI,GAAMptB,KAAK8wF,OAASzjF,EACnBl0B,EAAI,EAAGA,EAAIi0C,EAAGj0C,IACnB6mB,KAAK2uC,OAAOv1D,OAAOC,SAASR,EAAMS,WAAY,KAAOf,EAAY8G,GACjExG,GAASK,MAGZ,CACD,GAAIs4G,GAASnkF,EAAMrN,KAAK8wF,OACpBW,EAAU,GAAKzxF,KAAK8wF,OACpBj2G,EAAQhC,GAAU,GAAKmnB,KAAK8wF,QAAU,EACtC7xG,EAAQ+gB,KAAK2uC,MACjB,GAAG,CACC,GAAIx2D,GAAQI,EAAY0G,EAAM7F,OAAOC,SAASwB,EAAMvB,WAAY,KAMhE,IALc,IAAVnB,IACA8G,EAAM7F,OAAOC,SAASwB,EAAMvB,WAAY,KAAOf,GAAa43G,GAC5Dh4G,EAAQI,GAAa43G,GACrBA,KAEAh4G,EAAQ,EACR,KAAM,IAAI0B,OAAM,gBAGhBoF,GADsB,IAArBpG,EAAQ44G,GACDzxF,KAAKm+E,MAGLn+E,KAAKs+E,OAEjBzjG,GAAS1C,EACTs5G,IAAY,EACZD,UACgB,IAAXA,EACTvyG,GAAM7F,OAAOC,SAASwB,EAAMvB,WAAY,KAAOf,EAAY8G,OAK3EkxG,EAAav8F,UAAU09F,eAAiB,SAAUnyG,GAC9C,GAAI2wG,GAAY3wG,EAAMwwG,aACtB,IAAyB,IAArBxwG,EAAMqwG,WACN,OAAQ,CAEZ,IAAI95F,GAASkK,KAAK2uC,OAAOuhD,EAAYlwF,KAAK+wF,OAC1C,IAAIj7F,EAAS,EAAG,CACZ,GAAI67F,GAAOz5G,EAAa,GAAK8nB,KAAK8wF,OAAS,GAC3C,IACIh7F,GAAUA,EAENA,EADuB,IAAtBo6F,EAAYyB,GACJ3xF,KAAKm+E,MAAM/kG,OAAOC,SAASyc,EAAOxc,WAAY,KAG9C0mB,KAAKs+E,OAAOllG,OAAOC,SAASyc,EAAOxc,WAAY,KAE5Dq4G,IAAS,QACJ77F,EAAS,GAEtB,GAAI87F,GAAa5xF,KAAKwwF,SAASp3G,OAAOC,SAASyc,EAAOxc,WAAY,IAClE,IAAIs4G,GAAc,EACd,KAAM,IAAI/3G,OAAM,gBAEpB,OAAI+3G,GAAaryG,EAAMqwG,YACX,GAEZrwG,EAAM8wG,UAAUuB,GACT97F,IAEXy6F,EAAaM,eAAiB,IAC9BN,EAAaW,cAAgB,GAC7BX,EAAasB,UAAY,GAClBtB,KCrJPuB,GAA2B,WAC3B,QAASA,KACL9xF,KAAK+xF,kBAAoB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7G/xF,KAAKgyF,0BAA4B,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,GACvH,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAC9FhyF,KAAKiyF,aAAe,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrG,IAAK,IAAK,IAAK,IAAK,KACxBjyF,KAAKkyF,uBAAyB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KACrH,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,EAAG,GACpDlyF,KAAKmyF,YAAc,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,IACjFnyF,KAAKoyF,QAAU,EACfpyF,KAAKqyF,SAAW,EAChBryF,KAAKsyF,WAAa,EAAG,EAAG,EAAG,GAC3BtyF,KAAKuyF,WAAa7D,aAAW8D,iBAC7BxyF,KAAKyyF,QAAU,EACfzyF,KAAK0yF,aAAe,EACpB1yF,KAAK2yF,WAAa,EAClB3yF,KAAK4yF,YAAc,EACnB5yF,KAAK8L,QAAU,EACf9L,KAAK6yF,aAAe,EACpB7yF,KAAK8yF,QAAU,GAAIlE,IACnB5uF,KAAK+yF,OAAS,GAAIrD,IAClB1vF,KAAKgzF,aAAe,EACpBhzF,KAAKizF,UAAYhzG,MAAMswG,GAAaM,eAAiBN,GAAaW,eAAejtD,KAAK,GACtFjkC,KAAKkzF,OAASjzG,MAAMswG,GAAasB,WAAW5tD,KAAK,GACjDjkC,KAAKmzF,eAAiB1E,iBAAe2E,cA0hBzC,MAxhBAr/F,QAAO+H,eAAeg2F,EAAU99F,UAAW,aACvC7R,IAAK,WACD,MAAO6d,MAAKmzF,iBAAmB1E,iBAAe4E,MAAQrzF,KAAKmzF,iBAAmB1E,iBAAe6E,SAEjGv3F,YAAY,EACZC,cAAc,IAElB81F,EAAU99F,UAAUo8F,UAAY,SAAUmD,EAAYjzG,EAAQvH,GAC1DinB,KAAK+yF,OAAO3C,UAAUmD,EAAYjzG,EAAQvH,IAE9C+4G,EAAU99F,UAAUw/F,SAAW,SAAUr2G,EAAOmD,EAAQvH,GACpD,GAAIG,GAAI,CACR,GAAG,CACC,GAAI4E,GAASkiB,KAAK8yF,QAAQxD,QAAQnyG,EAAOmD,EAAQvH,GAC7Cq2G,EAAStxG,EAAOmL,KAOpB,IANA9L,EAAQW,EAAO8kB,KACXwsF,EAAS,IACT9uG,GAAU8uG,EACVl2G,GAAKk2G,EACLr2G,GAAUq2G,GAEC,IAAXr2G,EACA,aAEEinB,KAAKyzF,WAAazzF,KAAK7f,UACjC,QAAS8I,MAAS/P,EAAG0pB,KAAQzlB,IAEjC20G,EAAU99F,UAAU7T,QAAU,WAC1B,GAAIuzG,IAAM,EACN51G,GAAS,CACb,IAAIkiB,KAAKyzF,UACL,OAAO,CAEX,IAAIzzF,KAAKmzF,iBAAmB1E,iBAAe2E,cAAe,CACtD,IAAKpzF,KAAK+yF,OAAOjD,eAAe,GAC5B,OAAO,CAEX9vF,MAAKoyF,QAAUpyF,KAAK+yF,OAAO9C,SAAS,GACpCjwF,KAAKmzF,eAAiB1E,iBAAekF,aAEzC,GAAI3zF,KAAKmzF,iBAAmB1E,iBAAekF,aAAc,CACrD,IAAK3zF,KAAK+yF,OAAOjD,eAAe,GAE5B,MADA9vF,MAAKmzF,eAAiB1E,iBAAekF,cAC9B,CAEX3zF,MAAKuyF,WAAavyF,KAAK4zF,cAAc5zF,KAAK+yF,OAAO9C,SAAS,IACtDjwF,KAAKuyF,aAAe7D,aAAWmF,YAC/B7zF,KAAKmzF,eAAiB1E,iBAAeqF,eAEhC9zF,KAAKuyF,aAAe7D,aAAWqF,YACpC/zF,KAAKg0F,QAAU,GAAIzD,IACnBvwF,KAAKg0F,QAAQvD,WAAU,GACvBzwF,KAAKi0F,cAAgB,GAAI1D,IACzBvwF,KAAKi0F,cAAcxD,WAAU,GAC7BzwF,KAAKmzF,eAAiB1E,iBAAeyF,WAEhCl0F,KAAKuyF,aAAe7D,aAAW8D,mBACpCxyF,KAAKmzF,eAAiB1E,iBAAe0F,sBAG7C,GAAIn0F,KAAKuyF,aAAe7D,aAAWmF,YAC3B7zF,KAAKo0F,uBAAuBp0F,KAAKmzF,gBAAkBnzF,KAAKo0F,uBAAuB3F,iBAAeyF,WAC9Fp2G,EAASkiB,KAAKq0F,6BAIdv2G,GADIusB,EAAgBrK,KAAKs0F,aAAaZ,IACf51G,OACvB41G,EAAMrpF,EAAcqpF,IACpB1zF,KAAK8yF,QAAUzoF,EAAc3rB,YAGhC,IAAIshB,KAAKuyF,aAAe7D,aAAWqF,WAEpCj2G,GADIusB,EAAgBrK,KAAKs0F,aAAaZ,IACf51G,OACvB41G,EAAMrpF,EAAcqpF,IACpB1zF,KAAK8yF,QAAUzoF,EAAc3rB,WAE5B,IAAIshB,KAAKuyF,aAAe7D,aAAW8D,iBAAkB,CACtD,GAAInoF,GAAgBrK,KAAKu0F,yBAAyBb,EAClD51G,GAASusB,EAAcvsB,OACvB41G,EAAMrpF,EAAcqpF,IACpB1zF,KAAK8yF,QAAUzoF,EAAc3rB,OAKjC,MAHIg1G,IAAyB,IAAjB1zF,KAAKoyF,UACbpyF,KAAKmzF,eAAiB1E,iBAAe4E,MAElCv1G,GAEXg0G,EAAU99F,UAAUugG,yBAA2B,SAAUC,GAErD,IADAA,GAAW,IAEP,OAAQx0F,KAAKmzF,gBACT,IAAK1E,kBAAe0F,qBAGhB,GAFAn0F,KAAK+yF,OAAOzC,oBACZtwF,KAAKmzF,eAAiB1E,iBAAegG,mBAChCz0F,KAAK00F,oBACN,OAAS52G,QAAU,EAAO41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,QAE9D,MACJ,KAAKrE,kBAAegG,kBACpB,IAAKhG,kBAAekG,kBACpB,IAAKlG,kBAAemG,kBACpB,IAAKnG,kBAAeoG,kBAChB,IAAK70F,KAAK00F,oBACN,OAAS52G,QAAU,EAAO41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,QAE9D,MACJ,KAAKrE,kBAAeqG,wBAEhB,MADA90F,MAAKqyF,UAAYryF,KAAK8yF,QAAQ3D,UAAUnvF,KAAK+yF,OAAQ/yF,KAAKqyF,UACpC,IAAlBryF,KAAKqyF,UACLryF,KAAKmzF,eAAiB1E,iBAAe2E,cACrCoB,GAAW,GACF12G,QAAU,EAAM41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,UAE3B,IAA9B9yF,KAAK8yF,QAAQiC,cACJj3G,QAAU,EAAM41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,UAEpDh1G,QAAU,EAAO41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,WAM1EhB,EAAU99F,UAAU0gG,kBAAoB,WACpC,GAAIt8G,GAAO4nB,KAAK+yF,OAAO9C,SAAS,EAChC,IAAI73G,EAAO,EACP,OAAO,CAEX,IAAI48G,GAAgBh1F,KAAKo0F,uBAAuBp0F,KAAKmzF,gBACjD8B,EAAmBj1F,KAAKo0F,uBAAuB3F,iBAAegG,kBAElE,IADAz0F,KAAKsyF,UAAU0C,EAAgBC,GAAoB/8G,EAAYE,EAAM,GACjE4nB,KAAKmzF,iBAAmB1E,iBAAeoG,oBACvC70F,KAAKqyF,SAAWryF,KAAKsyF,UAAU,GAA2B,IAArBtyF,KAAKsyF,UAAU,GAChDp6G,EAAY8nB,KAAKqyF,SAAU,MAAQn6G,IAAe8nB,KAAKsyF,UAAU,GAA2B,IAArBtyF,KAAKsyF,UAAU,IAAa,KACnG,KAAM,IAAIz4G,OAAM,uBAIxB,OADAmmB,MAAKmzF,eAAiBnzF,KAAKk1F,kBAAkBl1F,KAAKo0F,uBAAuBp0F,KAAKmzF,gBAAkB,IACzF,GAEXrB,EAAU99F,UAAUsgG,aAAe,SAAUE,GACzCA,GAAW,CAEX,KADA,GAAIW,GAAKn1F,KAAK8yF,QAAQiC,aACfI,EAAK,KAAK,CACb,GAAIr/F,OAAS,GACTs/F,MAAc,GACdC,MAAgB,GAChBC,MAAiB,EACrB,QAAQt1F,KAAKmzF,gBACT,IAAK1E,kBAAeyF,UAEhB,IADAp+F,EAASkK,KAAKg0F,QAAQtC,eAAe1xF,KAAK+yF,SAC7B,EACT,OAASj1G,QAAU,EAAO41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,QAE9D,IAAIh9F,EAAS,IACTkK,KAAK8yF,QAAQvwF,OAAOrqB,EAAY4d,EAAQ,MACtCq/F,MAED,CAAA,GAAe,MAAXr/F,EAGL,MAFA0+F,IAAW,EACXx0F,KAAKmzF,eAAiB1E,iBAAe2E,eAC5Bt1G,QAAU,EAAM41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,QAIzD,KADAh9F,GAAU,KACG,EACTA,GAAU,EACVkK,KAAK2yF,WAAa,MAEjB,IAAe,KAAX78F,EACLA,EAAS,IACTkK,KAAK2yF,WAAa,MAEjB,CACD,GAAI78F,EAAS,GAAKA,GAAUkK,KAAK+xF,iBAAiBh5G,OAC9C,KAAM,IAAIc,OAAM,gBAEpBmmB,MAAK2yF,WAAa3yF,KAAK+xF,iBAAiB34G,OAAOC,SAASyc,EAAOxc,WAAY,KAK/E,GAHA0mB,KAAK8L,QAAUhW,EACfw/F,EAAiBt1F,KAAKu1F,UAAUJ,GAChCA,EAAKG,EAAeH,IACfG,EAAen9G,MAChB,OAAS2F,QAAU,EAAO41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,SAGlE,KACJ,KAAKrE,kBAAe+G,QAGhB,GAFAF,EAAiBt1F,KAAKu1F,UAAUJ,GAChCA,EAAKG,EAAeH,IACfG,EAAen9G,MAChB,OAAS2F,QAAU,EAAO41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,QAE9D,MACJ,KAAKrE,kBAAegH,QAGhB,GAFAJ,EAAgBr1F,KAAK01F,SAASP,GAC9BA,EAAKE,EAAcF,IACdE,EAAcl9G,MACf,OAAS2F,QAAU,EAAO41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,QAE9D,MACJ,KAAKrE,kBAAekH,MAGhB,GAFAP,EAAcp1F,KAAK41F,OAAOT,GAC1BA,EAAKC,EAAYD,IACZC,EAAYj9G,MACb,OAAS2F,QAAU,EAAO41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,UAO1E,OAASh1G,QAAU,EAAM41G,IAAOc,EAAU91G,OAAUshB,KAAK8yF,UAE7DhB,EAAU99F,UAAUuhG,UAAY,SAAUJ,GACtC,GAAIn1F,KAAK2yF,WAAa,EAAG,CACrB3yF,KAAKmzF,eAAiB1E,iBAAe+G,OACrC,IAAIp9G,GAAO4nB,KAAK+yF,OAAO9C,SAASjwF,KAAK2yF,WACrC,IAAIv6G,EAAO,EACP,OAASD,OAAS,EAAOg9G,GAAMA,EAEnC,IAAIn1F,KAAK8L,QAAU,GAAK9L,KAAK8L,SAAW9L,KAAKiyF,YAAYl5G,OACrD,KAAM,IAAIc,OAAM,gBAEpBmmB,MAAK8L,QAAU9L,KAAKiyF,YAAYjyF,KAAK8L,SAAW1zB,EAEpD4nB,KAAKmzF,eAAiB1E,iBAAegH,OACrC,IAAIJ,GAAgBr1F,KAAK01F,SAASP,EAElC,OADAA,GAAKE,EAAcF,GACdE,EAAcl9G,OAGVA,OAAS,EAAMg9G,GAAMA,IAFjBh9G,OAAS,EAAOg9G,GAAMA,IAIvCrD,EAAU99F,UAAU0hG,SAAW,SAAUP,GAUrC,GATIn1F,KAAKuyF,aAAe7D,aAAWmF,YAC/B7zF,KAAK61F,cAAgB71F,KAAKi0F,cAAcvC,eAAe1xF,KAAK+yF,SAG5D/yF,KAAK61F,cAAgB71F,KAAK+yF,OAAO9C,SAAS,GACtCjwF,KAAK61F,eAAiB,IACtB71F,KAAK61F,cAAgB71F,KAAKgyF,yBAAyBhyF,KAAK61F,iBAG5D71F,KAAK61F,cAAgB,EACrB,OAAS19G,OAAS,EAAOg9G,GAAMA,EAEnCn1F,MAAKmzF,eAAiB1E,iBAAekH,KACrC,IAAIP,GAAcp1F,KAAK41F,OAAOT,EAE9B,OADAA,GAAKC,EAAYD,GACZC,EAAYj9G,OAGRA,OAAS,EAAMg9G,GAAMA,IAFjBh9G,OAAS,EAAOg9G,GAAMA,IAIvCrD,EAAU99F,UAAU4hG,OAAS,SAAUT,GACnC,GAAI70G,EACJ,IAAI0f,KAAK61F,cAAgB,EAAG,CACxB71F,KAAK2yF,WAAc3yF,KAAK61F,cAAgB,GAAM,CAC9C,IAAIz9G,GAAO4nB,KAAK+yF,OAAO9C,SAASjwF,KAAK2yF,WACrC,IAAIv6G,EAAO,EACP,OAASD,OAAS,EAAOg9G,GAAMA,EAEnC70G,GAAS0f,KAAKkyF,sBAAsBlyF,KAAK61F,eAAiBz9G,MAG1DkI,GAAS0f,KAAK61F,cAAgB,CAKlC,OAHA71F,MAAK8yF,QAAQ7D,SAASjvF,KAAK8L,QAASxrB,GACpC60G,GAAMn1F,KAAK8L,QACX9L,KAAKmzF,eAAiB1E,iBAAeyF,WAC5B/7G,OAAS,EAAMg9G,GAAMA,IAElCrD,EAAU99F,UAAUqgG,0BAA4B,WAC5C,OAAQr0F,KAAKmzF,gBACT,IAAK1E,kBAAeqF,eAEhB,GADA9zF,KAAK6yF,aAAe7yF,KAAK+yF,OAAO9C,SAAS,GACrCjwF,KAAK6yF,aAAe,EACpB,OAAO,CAIX,IAFA7yF,KAAK6yF,cAAgB,IACrB7yF,KAAKmzF,eAAiB1E,iBAAeqH,gBAChC91F,KAAK+1F,kBACN,OAAO,CAEX,MACJ,KAAKtH,kBAAeqH,eAChB,IAAK91F,KAAK+1F,kBACN,OAAO,CAEX,MACJ,KAAKtH,kBAAeuH,aAChB,IAAKh2F,KAAKi2F,gBACN,OAAO,CAEX,MACJ,KAAKxH,kBAAeyH,eAChB,IAAKl2F,KAAKm2F,kBACN,OAAO,CAEX,MACJ,KAAK1H,kBAAe2H,gBACpB,IAAK3H,kBAAe4H,eAChB,IAAKr2F,KAAKs2F,mBACN,OAAO,EAMnB,GAAIC,GAAwBt2G,MAAMswG,GAAaM,gBAAgB5sD,KAAK,EACpExrD,GAAW89G,EAAuB,EAAGv2F,KAAKizF,UAAW,EAAGjzF,KAAK6yF,aAC7D,IAAI2D,GAAyBv2G,MAAMswG,GAAaW,eAAejtD,KAAK,EAOpE,OANAxrD,GAAW+9G,EAAwB,EAAGx2F,KAAKizF,UAAWjzF,KAAK6yF,aAAc7yF,KAAK6yF,aAAe7yF,KAAKy2F,aAClGz2F,KAAKg0F,QAAU,GAAIzD,IACnBvwF,KAAKg0F,QAAQvnC,MAAM8pC,GACnBv2F,KAAKi0F,cAAgB,GAAI1D,IACzBvwF,KAAKi0F,cAAcxnC,MAAM+pC,GACzBx2F,KAAKmzF,eAAiB1E,iBAAeyF,WAC9B,GAEXpC,EAAU99F,UAAU+hG,gBAAkB,WAElC,MADA/1F,MAAKy2F,YAAcz2F,KAAK+yF,OAAO9C,SAAS,KACpCjwF,KAAKy2F,YAAc,KAGvBz2F,KAAKy2F,aAAe,EACpBz2F,KAAKmzF,eAAiB1E,iBAAeuH,eAChCh2F,KAAKi2F,kBAKdnE,EAAU99F,UAAUiiG,cAAgB,WAEhC,MADAj2F,MAAK0yF,aAAe1yF,KAAK+yF,OAAO9C,SAAS,KACrCjwF,KAAK0yF,aAAe,KAGxB1yF,KAAK0yF,cAAgB,EACrB1yF,KAAKgzF,aAAe,EACpBhzF,KAAKmzF,eAAiB1E,iBAAeyH,iBAChCl2F,KAAKm2F,oBAKdrE,EAAU99F,UAAUmiG,gBAAkB,WAClC,KAAOn2F,KAAKgzF,aAAehzF,KAAK0yF,cAAc,CAC1C,GAAIt6G,GAAO4nB,KAAK+yF,OAAO9C,SAAS,EAChC,IAAI73G,EAAO,EACP,OAAO,CAEX4nB,MAAKkzF,OAAOlzF,KAAKmyF,WAAWnyF,KAAKgzF,eAAiB96G,EAAYE,EAAM,KAClE4nB,KAAKgzF,aAEX,IAAK,GAAI95G,GAAI8mB,KAAK0yF,aAAcx5G,EAAI8mB,KAAKmyF,WAAWp5G,OAAQG,IACxD8mB,KAAKkzF,OAAOlzF,KAAKmyF,WAAW/4G,OAAOC,SAASH,EAAEI,WAAY,MAAQ,CAOtE,OALA0mB,MAAK02F,QAAU,GAAInG,IACnBvwF,KAAK02F,QAAQjqC,MAAMzsD,KAAKkzF,QACxBlzF,KAAKyyF,QAAUzyF,KAAK6yF,aAAe7yF,KAAKy2F,YACxCz2F,KAAKgzF,aAAe,EACpBhzF,KAAKmzF,eAAiB1E,iBAAe2H,kBAChCp2F,KAAKs2F,oBAKdxE,EAAU99F,UAAUsiG,iBAAmB,WACnC,KAAOt2F,KAAKgzF,aAAehzF,KAAKyyF,SAAS,CACrC,GAAIzyF,KAAKmzF,iBAAmB1E,iBAAe2H,kBACvCp2F,KAAK4yF,YAAc5yF,KAAK02F,QAAQhF,eAAe1xF,KAAK+yF,QAChD/yF,KAAK4yF,YAAc,GACnB,OAAO,CAGf,IAAI5yF,KAAK4yF,aAAe,GACpB5yF,KAAKizF,UAAUjzF,KAAKgzF,gBAAkB96G,EAAY8nB,KAAK4yF,YAAa,OAEnE,CACD,IAAK5yF,KAAK+yF,OAAOjD,eAAe,GAE5B,MADA9vF,MAAKmzF,eAAiB1E,iBAAe4H,gBAC9B,CAEX,IAAIM,OAAc,EAClB,IAAyB,KAArB32F,KAAK4yF,YAAoB,CACzB,GAA0B,IAAtB5yF,KAAKgzF,aACL,KAAM,IAAIn5G,OAAM,gBAEpB,IAAI+8G,GAAe1+G,EAAY8nB,KAAKizF,UAAUjzF,KAAKgzF,aAAe,GAAI,EAEtE,IADA2D,EAAc32F,KAAK+yF,OAAO9C,SAAS,GAAK,EACpCjwF,KAAKgzF,aAAe2D,EAAc32F,KAAKyyF,QACvC,KAAM,IAAI54G,OAAM,gBAEpB,KAASV,EAAI,EAAGA,EAAIw9G,EAAax9G,IAC7B6mB,KAAKizF,UAAUjzF,KAAKgzF,gBAAkB4D,MAGzC,IAAyB,KAArB52F,KAAK4yF,YAAoB,CAE9B,GADA+D,EAAc32F,KAAK+yF,OAAO9C,SAAS,GAAK,EACpCjwF,KAAKgzF,aAAe2D,EAAc32F,KAAKyyF,QACvC,KAAM,IAAI54G,OAAM,gBAEpB,KAASV,EAAI,EAAGA,EAAIw9G,EAAax9G,IAC7B6mB,KAAKizF,UAAUjzF,KAAKgzF,gBAAkB,MAGzC,CAED,GADA2D,EAAc32F,KAAK+yF,OAAO9C,SAAS,GAAK,GACpCjwF,KAAKgzF,aAAe2D,EAAc32F,KAAKyyF,QACvC,KAAM,IAAI54G,OAAM,gBAEpB,KAAK,GAAIV,GAAI,EAAGA,EAAIw9G,EAAax9G,IAC7B6mB,KAAKizF,UAAUjzF,KAAKgzF,gBAAkB,GAIlDhzF,KAAKmzF,eAAiB1E,iBAAe2H,gBAEzC,OAAO,GAEXtE,EAAU99F,UAAU4/F,cAAgB,SAAUvmG,GAC1C,MAAIA,KAASqhG,aAAW8D,iBACb9D,aAAW8D,iBAEbnlG,IAASqhG,aAAWqF,WAClBrF,aAAWqF,WAGXrF,aAAWmF,aAG1B/B,EAAU99F,UAAUkhG,kBAAoB,SAAU/8G,GAC9C,OAAQA,GACJ,IAAK,GACD,MAAOs2G,kBAAeoI,aAC1B,KAAK,GACD,MAAOpI,kBAAe2E,aAC1B,KAAK,GACD,MAAO3E,kBAAekF,YAC1B,KAAK,GACD,MAAOlF,kBAAeqF,cAC1B,KAAK,GACD,MAAOrF,kBAAeqH,cAC1B,KAAK,GACD,MAAOrH,kBAAeuH,YAC1B,KAAK,GACD,MAAOvH,kBAAeyH,cAC1B,KAAK,GACD,MAAOzH,kBAAe2H,eAC1B,KAAK,GACD,MAAO3H,kBAAe4H,cAC1B,KAAK,IACD,MAAO5H,kBAAeyF,SAC1B,KAAK,IACD,MAAOzF,kBAAe+G,OAC1B,KAAK,IACD,MAAO/G,kBAAegH,OAC1B,KAAK,IACD,MAAOhH,kBAAekH,KAC1B,KAAK,IACD,MAAOlH,kBAAe0F,oBAC1B,KAAK,IACD,MAAO1F,kBAAegG,iBAC1B,KAAK,IACD,MAAOhG,kBAAekG,iBAC1B,KAAK,IACD,MAAOlG,kBAAemG,iBAC1B,KAAK,IACD,MAAOnG,kBAAeoG,iBAC1B,KAAK,IACD,MAAOpG,kBAAeqG,uBAC1B,KAAK,IACD,MAAOrG,kBAAeqI,QAC1B,KAAK,IACD,MAAOrI,kBAAesI,OAC1B,KAAK,IACD,MAAOtI,kBAAe6E,OAC1B,KAAK,IACD,MAAO7E,kBAAe4E,IAC1B,SACI,MAAO5E,kBAAeoI,gBAGlC/E,EAAU99F,UAAUogG,uBAAyB,SAAU5pG,GACnD,OAAQA,GACJ,IAAKikG,kBAAeoI,cAChB,MAAO,EACX,KAAKpI,kBAAe2E,cAChB,MAAO,EACX,KAAK3E,kBAAekF,aAChB,MAAO,EACX,KAAKlF,kBAAeqF,eAChB,MAAO,EACX,KAAKrF,kBAAeqH,eAChB,MAAO,EACX,KAAKrH,kBAAeuH,aAChB,MAAO,EACX,KAAKvH,kBAAeyH,eAChB,MAAO,EACX,KAAKzH,kBAAe2H,gBAChB,MAAO,EACX,KAAK3H,kBAAe4H,eAChB,MAAO,EACX,KAAK5H,kBAAeyF,UAChB,MAAO,GACX,KAAKzF,kBAAe+G,QAChB,MAAO,GACX,KAAK/G,kBAAegH,QAChB,MAAO,GACX,KAAKhH,kBAAekH,MAChB,MAAO,GACX,KAAKlH,kBAAe0F,qBAChB,MAAO,GACX,KAAK1F,kBAAegG,kBAChB,MAAO,GACX,KAAKhG,kBAAekG,kBAChB,MAAO,GACX,KAAKlG,kBAAemG,kBAChB,MAAO,GACX,KAAKnG,kBAAeoG,kBAChB,MAAO,GACX,KAAKpG,kBAAeqG,wBAChB,MAAO,GACX,KAAKrG,kBAAeqI,SAChB,MAAO,GACX,KAAKrI,kBAAesI,QAChB,MAAO,GACX,KAAKtI,kBAAe6E,QAChB,MAAO,GACX,KAAK7E,kBAAe4E,KAChB,MAAO,GACX,SACI,MAAO,KAGZvB,KCvjBPkF,GAAgC,WAChC,QAASA,GAAep0F,EAAMtiB,EAAQ22G,GAC9B57F,GAAmBuH,GACnB5C,KAAKuf,MAAQ3c,EAGb5C,KAAKuf,SAELlkB,GAAmB47F,KACnBj3F,KAAKk3F,WAAaD,GAEtBj3F,KAAKgO,QAAU1tB,EACf0f,KAAKm3F,UAAY,GAAIrF,IACrB9xF,KAAKgiB,QAAU/hC,MAAM,MAAMgkD,KAAK,GA0CpC,MAxCA+yD,GAAehjG,UAAUwW,MAAQ,SAAUvrB,EAAOqB,EAAQ2I,GAItD,IAHA,GAAIlQ,GACAq+G,EAAU92G,EACV+2G,EAASpuG,IACA,CACT,GAAIquG,GAAgBt3F,KAAKm3F,UAAU3D,SAASv0G,EAAOm4G,EAASC,EAK5D,IAJAt+G,EAASu+G,EAAcruG,MACvBhK,EAAQq4G,EAAc10F,KACtBw0F,GAAWr+G,EAEI,KADfs+G,GAAUt+G,GAEN,KAEJ,IAAIinB,KAAKm3F,UAAU1D,UACf,KAEJ,IAAI31G,GAASkiB,KAAKgV,aACd73B,EAAQW,EAAOmL,KAEnB,IADA+W,KAAKgiB,QAAUlkC,EAAOpB,OACR,IAAVS,EACA,KAEJ6iB,MAAKm3F,UAAU/G,UAAUpwF,KAAKgiB,QAAS,EAAG7kC,GAE9C,OAAS8L,MAAOA,EAAQouG,EAAQz0F,KAAM3jB,IAE1C+3G,EAAehjG,UAAUghB,WAAa,WAClC,GAAI3Z,GAAmB2E,KAAKgO,UAAYhO,KAAKgO,SAAWhO,KAAKuf,MAAMxmC,OAC/D,OAAS2D,UAAYuM,MAAO,EAI5B,KAAK,GADDA,GAAQ,EACH/P,EAAI,EAAGA,EAAI8mB,KAAKgiB,QAAQjpC,QAAUG,EAAI8mB,KAAKgO,QAAUhO,KAAKuf,MAAMxmC,OAAQG,IAC7E8mB,KAAKgiB,QAAQ5oC,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAKuf,MAAMvf,KAAKgO,QAAU90B,GAC5E+P,GAGJ,OADA+W,MAAKgO,SAAW/kB,GACPvM,OAAQsjB,KAAKgiB,QAAS/4B,MAAOA,IAGvC+tG,KLzDP/wF,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAUnF1sB,GAA6B,SAAU+tB,GAQvC,QAAS/tB,GAAYyR,GACjB,GAAIwc,GAAQF,EAAO5T,KAAK+L,OAASA,IAajC,OAZA+H,GAAM5H,QAAU5U,EAChBwc,EAAMuB,QAAUhK,eAAai4F,IAC7BxvF,EAAMyvF,iBAAkB,EACxBzvF,EAAM0vF,WAAY,EAClB1vF,EAAM2vF,SAAU,EAChB3vF,EAAM4vF,eAAgB,EACtB5vF,EAAM6vF,QAAU,EAChB7vF,EAAM8vF,cAAgB,EACtB9vF,EAAM+vF,YAAc,EACpB/vF,EAAMgwF,YAAc,EACpBhwF,EAAMgE,UAAY,EAClBhE,EAAMoB,cACCpB,EAimBX,MAtnBA9B,IAAUnsB,EAAa+tB,GAuBvB/tB,EAAYka,UAAUmV,YAAc,WAGhC,IAFA,GAAI1vB,GACAqE,EAASkiB,KAAKg4F,mBAAmBv+G,GAC9BqE,EAAOm6G,eAAe,CAEzB,OADAx+G,EAASqE,EAAOuP,MAEZ,IAAKshG,IAAeuJ,KAChBl4F,KAAKytF,aACL,MACJ,KAAKkB,IAAewJ,KAChBn4F,KAAKo4F,gBACL,MACJ,KAAKzJ,IAAe0J,KAChBr4F,KAAKw3F,iBAAkB,EACvBx3F,KAAKs4F,cACL,MACJ,KAAK3J,IAAe4J,KAChBv4F,KAAKw4F,iBACL,MACJ,KAAK7J,IAAe8J,KAChBz4F,KAAK04F,kBACL,MACJ,KAAK/J,IAAegK,KAChB34F,KAAK44F,mBACL,MACJ,KAAKjK,IAAekK,KACpB,IAAKlK,IAAemK,KACpB,IAAKnK,IAAeoK,KACpB,IAAKpK,IAAeqK,KACpB,IAAKrK,IAAesK,KACpB,IAAKtK,IAAeuK,KACpB,IAAKvK,IAAewK,KACpB,IAAKxK,IAAeyK,KACpB,IAAKzK,IAAe0K,KACpB,IAAK1K,IAAe2K,KACpB,IAAK3K,IAAe4K,KACpB,IAAK5K,IAAez+F,QAChB8P,KAAKs4F,eAKbx6G,EAASkiB,KAAKg4F,mBAAmBv+G,KAGzCK,EAAYka,UAAUgkG,mBAAqB,SAAU3qG,GAEjD,GADAA,EAAOshG,GAAez+F,QAClB8P,KAAK+L,UAAY,GAAK/L,KAAKG,QAAQitF,WAAY,CAC/CptF,KAAKw5F,oBAAsBx5F,KAAKstF,gBAAgBttF,KAAK+L,WACrD/L,KAAKmtF,MAAM,EACX,IAAI9uG,GAAQ2hB,KAAKwQ,YAAY,GACzB/2B,EAASumB,KAAKy5F,cAAcp7G,EAChC,YAAsB,KAAX5E,GAAqC,OAAXA,GACjC4T,EAAO5T,GACE4T,KAAQA,EAAM4qG,eAAiB,IAExCj4F,KAAKG,QAAQitF,aAAeptF,KAAK+L,WACxB1e,KAAQA,EAAM4qG,eAAiB,IAG/B5qG,KAAQA,EAAM4qG,eAAiB,GAI5C,OAAS5qG,KAAQA,EAAM4qG,eAAiB,IAGhDn+G,EAAYka,UAAUskG,aAAe,WAC7Bt4F,KAAKw5F,oBAAsB,GAC3Bx5F,KAAKmtF,MAAMntF,KAAKw5F,oBAAsB,IAG9C1/G,EAAYka,UAAUy5F,YAAc,WAChCztF,KAAK05F,QAAU,GAAIC,IACnB35F,KAAK05F,QAAQ5wF,OAAS9I,KAAKstF,gBAAgBttF,KAAK+L,WAChD/L,KAAKmtF,MAAM,GACXntF,KAAK05F,QAAQv1E,QAAUnkB,KAAKstF,gBAAgBttF,KAAK+L,WACjD/L,KAAKmtF,MAAM,GACXntF,KAAK05F,QAAQE,UAAY55F,KAAKsY,YAC9BtY,KAAK05F,QAAQG,WAAa75F,KAAKsY,YAC/BtY,KAAK05F,QAAQI,aAAe95F,KAAKsY,YACjCtY,KAAK05F,QAAQK,QAAU/5F,KAAKg6F,eAAeh6F,KAAKsY,aAChDtY,KAAK05F,QAAQO,WAAaj6F,KAAKsY,YAC/BtY,KAAK43F,QAAuC,IAA5B53F,KAAK05F,QAAQG,YAAsD,IAAP,EAA1B75F,KAAK05F,QAAQG,YAAyB,EAAI,EAC5F75F,KAAK8I,OAAS9I,KAAK05F,QAAQ5wF,OAC3B9I,KAAKmkB,QAAUnkB,KAAK05F,QAAQv1E,QAC5BnkB,KAAK8sF,kBAAoB9sF,KAAK05F,QAAQE,UACtC55F,KAAKk6F,mBACLl6F,KAAKmtF,MAAM,IAEfrzG,EAAYka,UAAUkmG,iBAAmB,WACrCl6F,KAAK63F,cAA2C,KAA3B73F,KAAK05F,QAAQE,UAAmB,EAAI,EACzB,IAA5B55F,KAAK05F,QAAQG,YACb75F,KAAK83F,YAAc1+G,OAAOC,WAAW2mB,KAAK8sF,kBAAoB9sF,KAAK8I,OAAS,GAAK,GAAGxvB,WAAY,IAAM0mB,KAAKmkB,QAC3GnkB,KAAK+3F,YAAc,GAEc,IAA5B/3F,KAAK05F,QAAQG,YAClB75F,KAAK83F,YAAc93F,KAAK8I,OAAS9I,KAAKmkB,QAAU,EAChDnkB,KAAK+3F,YAAc,EACnB/3F,KAAK63F,eAAiB,GAEW,IAA5B73F,KAAK05F,QAAQG,YACc,IAA5B75F,KAAK05F,QAAQO,YAAgD,IAA5Bj6F,KAAK05F,QAAQO,aAC9Cj6F,KAAK83F,YAAc1+G,OAAOC,WAAW2mB,KAAK05F,QAAQE,UAAY55F,KAAK8I,OAAS,GAAK,GAAGxvB,WAAY,IAAM0mB,KAAKmkB,SAE/GnkB,KAAK+3F,YAAc,EACnB/3F,KAAK63F,cAAgB,GAEY,IAA5B73F,KAAK05F,QAAQG,YAClB75F,KAAK83F,YAAc93F,KAAK8I,OAAS9I,KAAKmkB,QACtCnkB,KAAK+3F,YAAc,EACnB/3F,KAAK63F,eAAiB,GAEW,IAA5B73F,KAAK05F,QAAQG,aAClB75F,KAAK83F,YAA4B,EAAd93F,KAAK8I,OAAa9I,KAAKmkB,QAC1CnkB,KAAK+3F,YAAc,EACnB/3F,KAAK63F,eAAiB,IAG9B/9G,EAAYka,UAAUokG,eAAiB,WAInC,GAHKp4F,KAAKm6F,gBAAiD,IAA/Bn6F,KAAKm6F,eAAephH,SAC5CinB,KAAKm6F,mBAELn6F,KAAKw5F,qBAAuBx5F,KAAKG,QAAQitF,YAAcptF,KAAKG,QAAQitF,WAAaptF,KAAK+L,WAAa/L,KAAKw5F,oBACxG,IAAK,GAAItgH,GAAI,EAAGA,EAAI8mB,KAAKw5F,oBAAqBtgH,IAC1C8mB,KAAKm6F,eAAe7+G,KAAK0kB,KAAKsY,YAGtCtY,MAAKmtF,MAAM,IAEfrzG,EAAYka,UAAUwkG,gBAAkB,WACpC,GAAgC,IAA5Bx4F,KAAK05F,QAAQG,WAAkB,CAC/B75F,KAAKo6F,eACLp6F,KAAKo6F,YAAY9+G,KAAKgK,GAASnD,IAAI,YACnC6d,KAAKo6F,YAAY9+G,KAAK0kB,KAAKq6F,qBAC3Br6F,KAAKo6F,YAAY9+G,KAAK0kB,KAAKw5F,oBAAsB,EAAI,EACrD,IAAI98G,GAAS,GAAIW,YAAW2iB,KAAKw5F,oBACjCx5F,MAAKwK,MAAM9tB,EAAQ,EAAGsjB,KAAKw5F,qBAC3Bx5F,KAAKo6F,YAAY9+G,KAAKyC,EAAerB,IACrCsjB,KAAKmtF,MAAM,OAGXntF,MAAKs4F,gBAGbx+G,EAAYka,UAAU4kG,kBAAoB,WACtC,GAAgC,IAA5B54F,KAAK05F,QAAQG,WAAkB,CAC/B,GAAIS,GAAQ,GAAIj9G,YAAW2iB,KAAKw5F,oBAChCx5F,MAAKwK,MAAM8vF,EAAO,EAAGt6F,KAAKw5F,qBAC1Bx5F,KAAKmtF,MAAM,GACXntF,KAAKu6F,SACL,KAAK,GAAIrhH,GAAI,EAAGA,EAAIohH,EAAMvhH,OAAQG,IAAK,CACnC8mB,KAAKu6F,OAAOj/G,KAAKg/G,EAAMlhH,OAAOC,SAASH,EAAEI,WAAY,KACrD,IAAIkhH,GAAgD,IAA3CF,EAAMlhH,OAAOC,SAASH,EAAEI,WAAY,IAClC,KAAPkhH,GAAmB,MAAPA,IACZx6F,KAAK03F,SAAU,QAKvB13F,MAAKs4F,gBAGbx+G,EAAYka,UAAUqmG,kBAAoB,WACtC,GAAKr6F,KAAKw3F,gBAQL,CACD,GAAIiD,MACAC,EAAS,GAAI54G,IACb64G,GAAc,EAAG,EAAG,GACpBC,GAAc,IAAK,IAAK,IAE5B,IADAF,EAAOj6G,IAAI,QAASm6G,GAChB56F,KAAKw3F,gBAAiB,CACtB,GAQI7pE,IAAIktE,SACJC,EAASC,kBAGTC,GAAQ,SAAwErtE,EAChFstE,EATS,GASDD,EARC,GASTE,EAAQF,GAAS,GATR,GASgC,GACzCG,GAASC,WAA8EztE,CAM3FgtE,IAHaU,kBACA,EACAC,mBAEbZ,EAAOj6G,IAAI,UAZEq6G,kBAYiBA,EAXjBA,mBAWiCG,EAAOD,EAAOE,EAN/CC,kBAM8DA,EAL9DA,oBAUjB,MAHAT,GAAOj6G,IAAI,aAAck6G,GACzBF,EAAWn/G,KAAKgK,GAASnD,IAAI,WAC7Bs4G,EAAWn/G,KAAKo/G,GACTD,EAzCP,MAAsC,KAAP,EAA1Bz6F,KAAK05F,QAAQG,YACPv0G,GAASnD,IAAI,cAGbmD,GAASnD,IAAI,cAwChCrI,EAAYka,UAAU0kG,iBAAmB,WACrC,GAAIj/G,GAASumB,KAAK05F,OAClB15F,MAAKy3F,UAAmC,IAAtBh+G,EAAOwgH,YAA2C,KAArBxgH,EAAOmgH,WAAkD,IAAP,EAApBngH,EAAOogH,aAA0B75F,KAAK03F,QAC/G13F,KAAKy3F,YAC2B,IAAP,EAApBh+G,EAAOogH,aAAyB75F,KAAK03F,WACtC13F,KAAKu7F,UAAYt7G,MAAM+f,KAAK8I,OAAS9I,KAAKmkB,SAAS8f,KAAK,IAExDjkC,KAAKm6F,iBACLn6F,KAAKw7F,YAAcx7F,KAAKy7F,iBAAiBz7F,KAAKm6F,gBAC9Cn6F,KAAK07F,kBAAoB,GAEzB17F,KAAK83F,YAAc,IACnB93F,KAAK27F,kBAAoB17G,MAAM+f,KAAK83F,aAAa7zD,KAAK,IAE1DjkC,KAAK47F,kBACD57F,KAAK27F,mBAAuD,IAAlC37F,KAAK27F,kBAAkB5iH,QAAgBinB,KAAK03F,UACtE13F,KAAK23F,eAAgB,EACrB33F,KAAK27F,kBAAoB37F,KAAKm6F,kBAIlCn6F,KAAK23F,eAAgB,EACrB33F,KAAK27F,kBAAoB37F,KAAKm6F,iBAGtCrgH,EAAYka,UAAUynG,iBAAmB,SAAU74F,GAC/C,GAAIi5F,GAAWj5F,EAAKw0B,MAAM,EAAGx0B,EAAK7pB,OAAS,GACvC+iH,EAAgB,GAAI9E,IAAe6E,EAAU,GAAG,GAChDn/G,EAASuD,MAAM,MAAMgkD,KAAK,GAC1B83D,EAAU,EACVC,IACJ,GAAG,CACC,GAAIl+G,GAASg+G,EAActxF,MAAM9tB,EAAQ,EAAGA,EAAO3D,OACnDgjH,GAAUj+G,EAAOmL,MACjBvM,EAASoB,EAAO8kB,IAChB,KAAK,GAAI1pB,GAAI,EAAGA,EAAI6iH,EAAS7iH,IACzB8iH,EAAW1gH,KAAKoB,EAAOtD,OAAOC,SAASH,EAAEI,WAAY,YAEpDyiH,EAAU,EACnB,OAAOC,IAEXliH,EAAYka,UAAU4nG,gBAAkB,WACJ,IAA5B57F,KAAK05F,QAAQO,WACbj6F,KAAKi8F,YAAY,EAAG,EAAG,EAAG,EAAGj8F,KAAK8I,OAAQ9I,KAAKmkB,UAG/CnkB,KAAKi8F,YAAY,EAAG,EAAG,EAAG,EAAG5jH,KAAK8iB,OAAO6E,KAAK8I,OAAS,GAAK,GAAIzwB,KAAK8iB,OAAO6E,KAAKmkB,QAAU,GAAK,IAChGnkB,KAAKi8F,YAAY,EAAG,EAAG,EAAG,EAAG5jH,KAAK8iB,OAAO6E,KAAK8I,OAAS,GAAK,GAAIzwB,KAAK8iB,OAAO6E,KAAKmkB,QAAU,GAAK,IAChGnkB,KAAKi8F,YAAY,EAAG,EAAG,EAAG,EAAG5jH,KAAK8iB,OAAO6E,KAAK8I,OAAS,GAAK,GAAIzwB,KAAK8iB,OAAO6E,KAAKmkB,QAAU,GAAK,IAChGnkB,KAAKi8F,YAAY,EAAG,EAAG,EAAG,EAAG5jH,KAAK8iB,OAAO6E,KAAK8I,OAAS,GAAK,GAAIzwB,KAAK8iB,OAAO6E,KAAKmkB,QAAU,GAAK,IAChGnkB,KAAKi8F,YAAY,EAAG,EAAG,EAAG,EAAG5jH,KAAK8iB,OAAO6E,KAAK8I,OAAS,GAAK,GAAIzwB,KAAK8iB,OAAO6E,KAAKmkB,QAAU,GAAK,IAChGnkB,KAAKi8F,YAAY,EAAG,EAAG,EAAG,EAAG5jH,KAAK8iB,MAAM6E,KAAK8I,OAAS,GAAIzwB,KAAK8iB,OAAO6E,KAAKmkB,QAAU,GAAK,IAC1FnkB,KAAKi8F,YAAY,EAAG,EAAG,EAAG,EAAGj8F,KAAK8I,OAAQzwB,KAAK8iB,MAAM6E,KAAKmkB,QAAU,MAG5ErqC,EAAYka,UAAUioG,YAAc,SAAU3sC,EAASH,EAAS+sC,EAAOC,EAAOv5G,EAAO3I,GACjF,GAAe,IAAV2I,GAA4B,IAAX3I,EAOlB,IAAK,GAHDmiH,GAAc/jH,KAAK8iB,OAAO6E,KAAK+3F,YAAcn1G,EAAQod,KAAK05F,QAAQE,UAAY,GAAK,GACnF/7G,EAAUoC,MAAMm8G,GAAan4D,KAAK,GAClCo4D,EAAQp8G,MAAMm8G,GAAan4D,KAAK,GAC3Bq4D,EAAU,EAAGC,EAAeptC,EAASmtC,EAAUriH,EAAQqiH,IAAWC,GAAgBJ,EAAO,CAC9F,GAAIK,GAASx8F,KAAKw7F,YAAYx7F,KAAK07F,kBAGnC,QAFA17F,KAAK07F,kBAAoB17F,KAAK07F,kBAAoB,EAClD17F,KAAK07F,kBAAoB17F,KAAKy8F,YAAYz8F,KAAKw7F,YAAax7F,KAAK07F,kBAAmB79G,EAASu+G,GACrFp8F,KAAKg6F,eAAewC,IACxB,IAAKE,IAAgBl2G,KACjB,KACJ,KAAKk2G,IAAgBC,IACjB38F,KAAK48F,eAAe/+G,EAASu+G,EAAap8F,KAAK63F,cAC/C,MACJ,KAAK6E,IAAgBzuB,GACjBjuE,KAAK68F,cAAch/G,EAASw+G,EAAOD,EACnC,MACJ,KAAKM,IAAgBI,QACjB98F,KAAK+8F,mBAAmBl/G,EAASw+G,EAAOD,EAAap8F,KAAK63F,cAC1D,MACJ,KAAK6E,IAAgBM,MACjBh9F,KAAKi9F,iBAAiBp/G,EAASw+G,EAAOD,EAAap8F,KAAK63F,cACxD,MACJ,SACI,KAAM,IAAIh+G,OAAM,sBAExBmmB,KAAKk9F,eAAer/G,EAASyxE,EAAS4sC,EAAOK,EAAc35G,EAC3D,IAAIu6G,GAAMd,CACVA,GAAQx+G,EACRA,EAAUs/G,IAItBrjH,EAAYka,UAAUyoG,YAAc,SAAUlxG,EAAQ6xG,EAAcx6F,EAAM3Z,GACtE,GAAInL,GAASkiB,KAAKwK,MAAM5H,EAAMw6F,EAAcn0G,EAAOsC,EAInD,IAHAqX,EAAO9kB,EAAOovG,aACdkQ,EAAet/G,EAAOwC,OACdxC,EAAO/E,QACN,EACL,KAAM,IAAIc,OAAM,oBAEpB,OAAOujH,IAEXtjH,EAAYka,UAAU4oG,eAAiB,SAAUh6F,EAAM3Z,EAAOo0G,GAC1D,IAAK,GAAInkH,GAAImkH,EAAcnkH,EAAI+P,EAAO/P,IAClC0pB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,GAAuD,IAA1C0qB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,OAC1D,IAAzBspB,EAAK1pB,EAAImkH,IAAuB,IAG/CvjH,EAAYka,UAAU6oG,cAAgB,SAAUj6F,EAAM06F,EAAOr0G,GACzD,IAAK,GAAI/P,GAAI,EAAGA,EAAI+P,EAAO/P,IACvB0pB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,GAAuD,IAA1C0qB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,OACxC,IAA3CgkH,EAAMlkH,OAAOC,SAASH,EAAEI,WAAY,MAAc,IAGjEQ,EAAYka,UAAU+oG,mBAAqB,SAAUn6F,EAAM06F,EAAOr0G,EAAOo0G,GAIrE,IAAK,GAHD9X,GACAgY,EACAC,EACKtkH,EAAI,EAAGA,EAAImkH,EAAcnkH,IAC9BqsG,EAAgD,IAA1C3iF,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KACzCkkH,EAAgD,IAA3CF,EAAMlkH,OAAOC,SAASH,EAAEI,WAAY,KACzCspB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,EAAYG,KAAK8iB,MAAM,EAAQqiG,EAAK,GAAI,EAEtF,KAAStkH,EAAImkH,EAAcnkH,EAAI+P,EAAO/P,IAClCqsG,EAAgD,IAA1C3iF,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KACzCikH,EAA8B,IAAzB36F,EAAK1pB,EAAImkH,GACdG,EAAgD,IAA3CF,EAAMlkH,OAAOC,SAASH,EAAEI,WAAY,KACzCspB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,EAAYG,KAAK8iB,MAAOoqF,EAAMltG,KAAK8iB,OAAOoiG,EAAKC,GAAM,IAAM,IAG7G1jH,EAAYka,UAAUipG,iBAAmB,SAAUr6F,EAAM06F,EAAOr0G,EAAOo0G,GAKnE,IAAK,GAJD9X,GACAgY,EACAC,EACAC,EACKvkH,EAAI,EAAGA,EAAImkH,EAAcnkH,IAC9BqsG,EAAgD,IAA1C3iF,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KACzCkkH,EAAgD,IAA3CF,EAAMlkH,OAAOC,SAASH,EAAEI,WAAY,KACzCspB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,EAAYqtG,EAAMiY,EAAI,EAEpE,KAAStkH,EAAImkH,EAAcnkH,EAAI+P,EAAO/P,IAClCqsG,EAAgD,IAA1C3iF,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KACzCikH,EAA8B,IAAzB36F,EAAK1pB,EAAImkH,GACdG,EAAgD,IAA3CF,EAAMlkH,OAAOC,SAASH,EAAEI,WAAY,KACzCmkH,EAAgC,IAA1BH,EAAMpkH,EAAImkH,GAChBz6F,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KAAOpB,EAAaqtG,EAAMvlF,KAAK09F,gBAAgBH,EAAIC,EAAIC,GAAO,IAGzG3jH,EAAYka,UAAU0pG,gBAAkB,SAAUvgF,EAAG34B,EAAGC,GACpD,GAAI6hB,GAAI6W,EAAI34B,EAAIC,EACZk5G,EAAKtlH,KAAKoL,IAAI6iB,EAAI6W,GAClBygF,EAAKvlH,KAAKoL,IAAI6iB,EAAI9hB,GAClBq5G,EAAKxlH,KAAKoL,IAAI6iB,EAAI7hB,EACtB,OAAKk5G,IAAMC,GAAQD,GAAME,EACd1gF,EAEFygF,GAAMC,EACJr5G,EAGAC,GAGf3K,EAAYka,UAAUkpG,eAAiB,SAAUt6F,EAAMlgB,EAAGo7G,EAAMn7G,EAAGC,GAC/D,GAAIm7G,GAAU,EACVC,EAAQ,EACRvjH,EAAO,EACPugD,EAAQh7B,KAAKi+F,UAAUr7F,EAO3B,IANgC,IAA5B5C,KAAK05F,QAAQG,YAAgD,IAA5B75F,KAAK05F,QAAQG,YAAgD,IAA5B75F,KAAK05F,QAAQG,WAC/Ep/G,EAAO,EAE0B,IAA5BulB,KAAK05F,QAAQG,YAAgD,IAA5B75F,KAAK05F,QAAQG,aACnDp/G,EAAO,GAEPulB,KAAK27F,mBAAqB37F,KAAK27F,kBAAkB5iH,OAAS,EAAG,CAC7DilH,EAAQt7G,CACR,IAAIw7G,GAAoC,KAA3Bl+F,KAAK05F,QAAQE,UAAoB,EAAI55F,KAAK05F,QAAQE,UAC3DuC,EAAQ9jH,KAAK8iB,OAAO1gB,EAAOmI,EAAQs7G,EAAQ,GAAK,EACpD,KAAKH,EAAU,EAAGA,EAAUn7G,EAAOm7G,IAC/B/9F,KAAK27F,kBAAoB37F,KAAKm+F,UAAUn+F,KAAK27F,kBAAmB3gE,EAAOh7B,KAAK+3F,YAAcgG,EAAStjH,EAAMujH,EAAOr7G,EAAGqd,KAAK05F,QAAQE,UAAWuC,GAC3I6B,GAASF,EAIjB,GAD+C,IAAP,EAA1B99F,KAAK05F,QAAQG,aAAyB75F,KAAK03F,QAErD,GAAsC,IAAP,EAA1B13F,KAAK05F,QAAQG,YAAuB,CACrC,GAA+B,KAA3B75F,KAAK05F,QAAQE,UACb,IAAK,GAAI1gH,GAAI,EAAGA,EAAI0J,IAAS1J,EAAG,CAC5B,GAAIwxC,GAAOxxC,EAAI8mB,KAAK+3F,YAAct9G,EAC9B2jH,EAAWlmH,EAAY8iD,EAAM5hD,OAAOC,SAASqxC,EAAKpxC,WAAY,KAAM,GACxE0hD,GAAM5hD,OAAOC,SAASqxC,EAAKpxC,WAAY,KAAOd,EAAY4lH,GAAY,GAG1EjC,EAAQv5G,CAEZ,KADAo7G,EAAQt7G,EACHq7G,EAAU,EAAGA,EAAUn7G,EAAOm7G,IAC/B/9F,KAAKu7F,UAAYv7F,KAAKm+F,UAAUn+F,KAAKu7F,UAAWvgE,EAAOh7B,KAAK+3F,YAAcgG,EAAUtjH,EAAM,EAAGujH,EAAOr7G,EAAG,EAAGw5G,GAC1G6B,GAASF,MAGZ,CACD,GAAI3B,GAAQv5G,EACRy7G,GAAM,EAEV,KADAL,EAAQt7G,EACHq7G,EAAU,EAAGA,EAAUn7G,EAAOm7G,IAAW,CAC1C,GAAIljH,GAAQmgD,EAAM5hD,OAAOC,SAAS0kH,EAAQzkH,WAAY,IAClDuB,GAAQmlB,KAAKu6F,OAAOxhH,OACpBslH,EAAG,GAAKr+F,KAAKu6F,OAAOnhH,OAAOC,SAASwB,EAAMvB,WAAY,KAGtD+kH,EAAG,GAAK,IAEZr+F,KAAKu7F,UAAYv7F,KAAKm+F,UAAUn+F,KAAKu7F,UAAW8C,EAAI,EAAG,EAAGL,EAAOr7G,EAAG,EAAGw5G,GACvE6B,GAASF,KAKzBhkH,EAAYka,UAAUiqG,UAAY,SAAUr7F,GACxC,GAA+B,IAA3B5C,KAAK05F,QAAQE,UAAiB,CAE9B,IAAK,GADD5+D,GAAQ/6C,MAAM2iB,EAAK7pB,QAAQkrD,KAAK,GAC3B/qD,EAAI,EAAGA,EAAI8hD,EAAMjiD,SAAUG,EAChC8hD,EAAM5hD,OAAOC,SAASH,EAAEI,WAAY,KAAiD,IAA1CspB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,IAElF,OAAO0hD,GAEN,GAA+B,KAA3Bh7B,KAAK05F,QAAQE,UAAkB,CAEpC,IAAK,GADD5+D,GAAQ/6C,MAAM5H,KAAK8iB,MAAMyH,EAAK7pB,OAAS,IAAIkrD,KAAK,GAC3C/qD,EAAI,EAAGA,EAAI8hD,EAAMjiD,SAAUG,EAChC8hD,EAAM5hD,OAAOC,SAASH,EAAEI,WAAY,OAAuB,IAAdspB,EAAS,EAAJ1pB,KAAkB,IAAwB,IAAlB0pB,EAAS,EAAJ1pB,EAAQ,GAE3F,OAAO8hD,GAOP,IAAK,GAJDA,GAAQ/6C,MAAM5H,KAAK8iB,MAAqB,EAAdyH,EAAK7pB,OAAcinB,KAAK05F,QAAQE,YAAY31D,KAAK,GAC3EppD,EAAQ,EACRyrB,EAAIjuB,KAAK8iB,MAAM,EAAI6E,KAAK05F,QAAQE,WAChCjI,GAAQ,GAAK3xF,KAAK05F,QAAQE,WAAa,EAClCp4E,EAAI,EAAGA,EAAI5e,EAAK7pB,SAAUyoC,EAC/B,IAAStoC,EAAIotB,EAAI,EAAGptB,GAAK,IAAKA,EAAG,CAC7B,GAAIolH,GAAKt+F,KAAK05F,QAAQE,UAAY1gH,EAC9BitB,EAAIvD,EAAKxpB,OAAOC,SAASmoC,EAAEloC,WAAY,IAC3C0hD,GAAMngD,MAAayjH,EAAK,EAAKn4F,EAAI3tB,EAAYN,EAAYiuB,EAAG,KAAOm4F,IAAO3M,EAGlF,MAAO32D,IAGflhD,EAAYka,UAAUmqG,UAAY,SAAU3kH,EAAWopB,EAAMtiB,EAAQ7F,EAAMiI,EAAGC,EAAG47G,EAAUC,GACvF,GAAiB,IAAbD,EAEA,IAAK,GADD7oG,GAAW8oG,EAAM77G,EAAIlI,EAAOiI,EACvBxJ,EAAI,EAAGA,EAAIuB,IAAQvB,EACxBM,EAAUkc,EAAWxc,GAAKhB,EAAY0qB,EAAK1pB,EAAIoH,GAAS,OAG3D,IAAiB,KAAbi+G,EAEL,IAAK,GADD7oG,GAAW8oG,EAAM77G,EAAIlI,EAAOiI,EACvBxJ,EAAI,EAAGA,EAAIuB,IAAQvB,EACxBM,EAAUkc,EAAWxc,GAAKhB,EAAa0qB,EAAK1pB,EAAIoH,IAAW,EAAI,OAGlE,CACD,GAAIoV,GAAWrd,KAAK8iB,OAAOqjG,EAAM77G,EAAID,IAAM,EAAI67G,IAC3C5wE,EAAI/qB,EAAKxpB,OAAOC,SAASiH,EAAOhH,WAAY,MACzCF,OAAOC,UAAU,EAAIklH,GAAY77G,GAAK,EAAI67G,IAAaA,GAAUjlH,WAAY,GACpFE,GAAUJ,OAAOC,SAASqc,EAASpc,WAAY,KAAOE,EAAUJ,OAAOC,SAASqc,EAASpc,WAAY,KAAOpB,EAAYy1C,EAAG,GAE/H,MAAOn0C,IAEXM,EAAYka,UAAU65F,oBAAsB,WACxC,GAAIjrF,KACJ5C,MAAK0gC,aAAe,GAAI7sC,IAAW+O,EAAM,GAAI9gB,KAC7Cke,KAAK0gC,aAAaiiB,eAAgB,CAElC,KAAK,GADDorC,GAAgB,GACX70G,EAAI,EAAGA,EAAI8mB,KAAK27F,kBAAkB5iH,OAAQG,IAC/C60G,GAAiBlxG,OAAOC,aAAakjB,KAAK27F,kBAAkBviH,OAAOC,SAASH,EAAEI,WAAY,KAE9F0mB,MAAK0gC,aAAa99B,MAAQmrF,GAC1B/tF,KAAK0gC,aAAase,YAAch/C,KAAKy3F,WAAaz3F,KAAK23F,aACvD,IAAIp2G,GAAa,GAAIO,GACrBP,GAAWd,IAAI,OAAQ,GAAI6E,IAAS,YACpC/D,EAAWd,IAAI,UAAW,GAAI6E,IAAS,UACvC/D,EAAWd,IAAI,QAASuf,KAAK8I,QAC7BvnB,EAAWd,IAAI,SAAUuf,KAAKmkB,SACC,KAA3BnkB,KAAK8sF,kBACLvrG,EAAWd,IAAI,mBAAoB,GAGnCc,EAAWd,IAAI,mBAAoBuf,KAAK8sF,mBAEvC9sF,KAAKy3F,WAAcz3F,KAAK23F,eACzBp2G,EAAWd,IAAI,SAAU,GAAI6E,IAAS,gBAEJ,IAAP,EAA1B0a,KAAK05F,QAAQG,YACdt4G,EAAWd,IAAI,aAAc6E,GAASnD,IAAI,eAG1CZ,EAAWd,IAAI,aAAc6E,GAASnD,IAAI,gBAEzC6d,KAAKy3F,WAAaz3F,KAAK03F,UAAY13F,KAAK23F,gBACzCp2G,EAAWd,IAAI,cAAeuf,KAAKkuF,oBAEvCluF,KAAK0gC,aAAan/C,WAAaA,EAC/Bye,KAAK0gC,aAAavjD,MAAQ,GAAIE,YAAW2iB,KAAK0gC,aAAa99B,KAAK,GAAG7pB,OACnE,KAASG,EAAI,EAAGA,EAAI8mB,KAAK0gC,aAAa99B,KAAK,GAAG7pB,OAAQG,IAClD8mB,KAAK0gC,aAAavjD,MAAM/D,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAK0gC,aAAa99B,KAAK,GAAGzmB,WAAWjD,EAKtG,OAHA8mB,MAAK0gC,aAAa5nD,IAAMknB,KAAK0gC,aAAavjD,MAAMpE,OAChDinB,KAAK0gC,aAAan/C,WAAWgR,UAAW,EACxCyN,KAAKy+F,WACEz+F,KAAK0gC,cAEhB5mD,EAAYka,UAAUyqG,SAAW,WAC7B,GAAIz+F,KAAKu7F,WAAav7F,KAAKu7F,UAAUxiH,OAAS,EAAG,CAC7CinB,KAAK2gC,YAAc,GAAI9sC,IAAWmM,KAAKu7F,UAAW,GAAIz5G,KACtDke,KAAK2gC,YAAYqe,YAAch/C,KAAKy3F,WAAaz3F,KAAK23F,aACtD,IAAIp2G,GAAa,GAAIO,GACrBP,GAAWd,IAAI,OAAQ,GAAI6E,IAAS,YACpC/D,EAAWd,IAAI,UAAW,GAAI6E,IAAS,UACvC/D,EAAWd,IAAI,QAASuf,KAAK8I,QAC7BvnB,EAAWd,IAAI,SAAUuf,KAAKmkB,SACC,KAA3BnkB,KAAK8sF,kBACLvrG,EAAWd,IAAI,mBAAoB,GAGnCc,EAAWd,IAAI,mBAAoBuf,KAAK8sF,mBAE5CvrG,EAAWd,IAAI,aAAc6E,GAASnD,IAAI,eAC1C6d,KAAK2gC,YAAYp/C,WAAaA,EAC9Bye,KAAK2gC,YAAYxjD,MAAQ,GAAIE,YAAW2iB,KAAKu7F,WAC7Cv7F,KAAK2gC,YAAY7nD,IAAMknB,KAAK2gC,YAAYxjD,MAAMpE,OAC9CinB,KAAK2gC,YAAYp/C,WAAWgR,UAAW,IAG/CzY,EAAYka,UAAUk6F,iBAAmB,WACrC,GAAIC,GAAe,GAAIrsG,GAKvB,OAJAqsG,GAAa1tG,IAAI,UAAWuf,KAAK8I,QACjCqlF,EAAa1tG,IAAI,SAAUuf,KAAK43F,SAChCzJ,EAAa1tG,IAAI,YAAa,IAC9B0tG,EAAa1tG,IAAI,mBAAoBuf,KAAK8sF,mBACnCqB,GAEXr0G,EAAYka,UAAUylG,cAAgB,SAAUp7G,GAC5C,OAAQA,GACJ,IAAK,OACD,MAAOswG,IAAeuJ,IAC1B,KAAK,OACD,MAAOvJ,IAAe4J,IAC1B,KAAK,OACD,MAAO5J,IAAewJ,IAC1B,KAAK,OACD,MAAOxJ,IAAe8J,IAC1B,KAAK,OACD,MAAO9J,IAAe0K,IAC1B,KAAK,OACD,MAAO1K,IAAe4K,IAC1B,KAAK,OACD,MAAO5K,IAAe2K,IAC1B,KAAK,OACD,MAAO3K,IAAeqK,IAC1B,KAAK,OACD,MAAOrK,IAAewK,IAC1B,KAAK,OACD,MAAOxK,IAAesK,IAC1B,KAAK,OACD,MAAOtK,IAAekK,IAC1B,KAAK,OACD,MAAOlK,IAAeyK,IAC1B,KAAK,OACD,MAAOzK,IAAegK,IAC1B,KAAK,OACD,MAAOhK,IAAeoK,IAC1B,KAAK,OACD,MAAOpK,IAAe0J,IAC1B,KAAK,OACD,MAAO1J,IAAeuK,IAC1B,KAAK,OACD,MAAOvK,IAAemK,IAC1B,KAAK,UACD,MAAOnK,IAAez+F,OAC1B,SACI,MAAO,QAGnBpW,EAAYka,UAAUgmG,eAAiB,SAAU3sG,GAC7C,OAAQA,GACJ,IAAK,GACD,MAAOqvG,IAAgBC,GAC3B,KAAK,GACD,MAAOD,IAAgBzuB,EAC3B,KAAK,GACD,MAAOyuB,IAAgBI,OAC3B,KAAK,GACD,MAAOJ,IAAgBM,KAC3B,SACI,MAAON,IAAgBl2G,OAG5B1M,GACT+yG,IAEE8M,GAA4B,WAC5B,QAASA,KACL35F,KAAK8I,OAAS,EACd9I,KAAKmkB,QAAU,EACfnkB,KAAK65F,WAAa,EAClB75F,KAAK85F,aAAe,EACpB95F,KAAK45F,UAAY,EACjB55F,KAAKi6F,WAAa,EAClBj6F,KAAK+5F,QAAU2C,GAAgBl2G,KAEnC,MAAOmzG,OAGX,SAAWhL,GACPA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,GAAK,OAC7CA,EAAeA,EAAqB,KAAI,IAAM,OAC9CA,EAAeA,EAAqB,KAAI,IAAM,OAC9CA,EAAeA,EAAqB,KAAI,IAAM,OAC9CA,EAAeA,EAAqB,KAAI,IAAM,OAC9CA,EAAeA,EAAqB,KAAI,IAAM,OAC9CA,EAAeA,EAAqB,KAAI,IAAM,OAC9CA,EAAeA,EAAqB,KAAI,IAAM,OAC9CA,EAAeA,EAAwB,QAAI,IAAM,WAClDA,KAAmBA,OACtB,IAAI+N,KACJ,SAAWA,GACPA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAqB,IAAI,GAAK,MAC9CA,EAAgBA,EAAoB,GAAI,GAAK,KAC7CA,EAAgBA,EAAyB,QAAI,GAAK,UAClDA,EAAgBA,EAAuB,MAAI,GAAK,SACjDA,KAAoBA,O/BtrBvB,IAAIz2F,IAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAqhHnFk4F,GAA+B,WAC/B,QAASA,GAAcC,EAASx2G,GAC5B6X,KAAK2+F,QAAUA,EACf3+F,KAAK7X,KAAOA,EAEhB,MAAOu2G,MAGPE,GAA6B,SAAU/2F,GAEvC,QAAS+2F,GAAYD,GACjB,MAAO92F,GAAO5T,KAAK+L,KAAM2+F,EAAS,gBAAkB3+F,KAExD,MAJAiG,IAAU24F,EAAa/2F,GAIhB+2F,GACTF,IAEEG,GAA0C,SAAUh3F,GAEpD,QAASg3F,GAAyBF,GAC9B,MAAO92F,GAAO5T,KAAK+L,KAAM2+F,EAAS,6BAA+B3+F,KAErE,MAJAiG,IAAU44F,EAA0Bh3F,GAI7Bg3F,GACTH,ICnjHEthG,GAAYrJ,OAAOsJ,OAAO,MAC1BC,GAAWvJ,OAAOsJ,OAAO,MACzBE,GAAWxJ,OAAOsJ,OAAO,MACzB/X,GAA0B,WAC1B,QAASA,GAAS6C,GACd6X,KAAK7X,KAAOA,EAKhB,MAHA7C,GAASnD,IAAM,SAAUgG,GACrB,MAAOiV,IAAUjV,KAAUiV,GAAUjV,GAAQ,GAAI7C,GAAS6C,KAEvD7C,KAGPqY,GAA6B,WAC7B,QAASA,GAAYD,GACjBsC,KAAKtC,QAAUA,EAKnB,MAHAC,GAAYxb,IAAM,SAAUub,GACxB,MAAOJ,IAASI,KAAaJ,GAASI,GAAW,GAAIC,GAAYD,KAE9DC,KAGPtT,GAA+B,WAC/B,QAASA,GAAc66D,EAAc45C,GACjC9+F,KAAK/M,QAAS,EACd+M,KAAKklD,aAAeA,EACpBllD,KAAKmlD,iBAAmB25C,EAS5B,MAPAz0G,GAAc2J,UAAU1a,SAAW,WAC/B,MAAO0mB,MAAKklD,aAAe,IAAMllD,KAAKmlD,kBAE1C96D,EAAclI,IAAM,SAAU+iE,EAAcC,GACxC,GAAItlE,GAA2B,IAArBslE,EAAyBD,EAAe,IAAMA,EAAe,IAAMC,CAC7E,OAAO5nD,IAAS1d,KAAS0d,GAAS1d,GAAO,GAAIwK,GAAc66D,EAAcC,KAEtE96D,KAGP00G,GAAkC,WAClC,QAASA,GAAiB1hD,OACP,KAAXA,IAAqBA,EAAS,MAClCr9C,KAAK+qC,KAAO,GAAIlpD,KAAIw7D,GAAUA,EAAOtS,MAczC,MAZAg0D,GAAiB/qG,UAAUhS,IAAM,SAAUoI,GACvC,MAAO4V,MAAK+qC,KAAK/oD,IAAIoI,EAAI9Q,aAE7BylH,EAAiB/qG,UAAUgrG,IAAM,SAAU50G,GACvC4V,KAAK+qC,KAAK9oD,IAAImI,EAAI9Q,aAEtBylH,EAAiB/qG,UAAUqoE,OAAS,SAAUjyE,GAC1C4V,KAAK+qC,KAAKz3C,OAAOlJ,EAAI9Q,aAEzBylH,EAAiB/qG,UAAUutD,MAAQ,WAC/BvhD,KAAK+qC,KAAKwW,SAEPw9C,KAGPE,GAAuC,WACvC,QAASA,KACLj/F,KAAK3N,KAAO,GAAIy1B,KAwBpB,MAtBA/zB,QAAO+H,eAAemjG,EAAsBjrG,UAAW,QACnD7R,IAAK,WACD,MAAO6d,MAAK3N,KAAK5X,MAErBshB,YAAY,EACZC,cAAc,IAElBijG,EAAsBjrG,UAAU7R,IAAM,SAAUiI,GAC5C,MAAO4V,MAAK3N,KAAKlQ,IAAIiI,EAAI9Q,aAE7B2lH,EAAsBjrG,UAAUhS,IAAM,SAAUoI,GAC5C,MAAO4V,MAAK3N,KAAKrQ,IAAIoI,EAAI9Q,aAE7B2lH,EAAsBjrG,UAAUgrG,IAAM,SAAU50G,EAAKuR,GACjDqE,KAAK3N,KAAK5R,IAAI2J,EAAI9Q,WAAYqiB,IAElCsjG,EAAsBjrG,UAAUvT,IAAM,SAAUsB,EAAO4Z,GACnDqE,KAAK3N,KAAK5R,IAAIsB,EAAO4Z,IAEzBsjG,EAAsBjrG,UAAUutD,MAAQ,WACpCvhD,KAAK3N,KAAKkvD,SAEP09C,KAGP3vF,GAA4B,WAC5B,QAASA,GAAW4vF,GAChBl/F,KAAKmQ,SACLnQ,KAAKm/F,UAAY,EACjBn/F,KAAKo/F,MAAQF,GAAoBprG,GA2CrC,MAzCAwb,GAAWtb,UAAUid,SAAW,SAAUpxB,GACtC,GAAIw/G,GAAOr/F,KAAKmQ,MAAM,IAAMnQ,KAAKo/F,MAAMv/G,GACvC,QAAoB,KAATw/G,EAGX,MAAOA,GAAKlnH,OAEhBm3B,EAAWtb,UAAU0c,SAAW,SAAU7wB,EAAK1H,GAC3C,GACIwM,GAAI,IAAMqb,KAAKo/F,MAAMv/G,EACHmgB,MAAKmQ,MAAMxrB,EACjCqb,MAAKm/F,YAELn/F,KAAKmQ,MAAMxrB,IACP9E,IAAKA,EACL1H,MAAOA,IAIfm3B,EAAWtb,UAAUgd,KAAO,WAGxB,IAAK,GAFDsuF,MACAC,EAAcxrG,OAAOid,KAAKhR,KAAKmQ,OAC1B46C,EAAS,EAAGA,EAASw0C,EAAYxmH,OAAQgyE,IAAU,CACxD,GAAIy0C,GAAQx/F,KAAKmQ,MAAMovF,EAAYx0C,GACnCu0C,GAAUhkH,KAAKkkH,EAAM3/G,KAEzB,MAAOy/G,IAEXhwF,EAAWtb,UAAU+lB,YAAc,SAAUl6B,GAQzC,YANkC,KAAvBmgB,KAAKiR,SAASpxB,KAQ7ByvB,EAAWtb,UAAUqT,MAAQ,WACzB,MAAOrH,MAAKm/F,WAET7vF,KAGPxtB,GAAgC,WAChC,QAASA,GAAeq5C,GACpBn7B,KAAK8O,SAAU,EACf9O,KAAKmJ,YAAYgyB,GA4IrB,MA1IApnC,QAAO+H,eAAeha,EAAekS,UAAW,QAC5C7R,IAAK,WACD,MAAO4R,QAAOid,KAAKhR,KAAK3N,MAAMtZ,QAElCgjB,YAAY,EACZC,cAAc,IAElBla,EAAekS,UAAUwnE,WAAa,SAAUrgC,GAC5Cn7B,KAAKtU,gBAAkByvC,GAE3Br5C,EAAekS,UAAUxI,OAAS,SAAU3L,GACxC,MAAOmgB,MAAK3N,KAAKxS,IAErBiC,EAAekS,UAAUyrG,aAAe,WACpC,MAAOz/F,MAAK3N,KAAKlX,QAErB2G,EAAekS,UAAU7R,IAAM,SAAUu9G,EAAMC,EAAMC,GACjD,GAAIznH,GAAQ6nB,KAAKs2E,KAAKopB,EAAMC,EAAMC,EAIlC,OAHI5/F,MAAKtU,qBAAoC,KAAVvT,GAAyBA,YAAiBkS,MACzElS,EAAQ6nB,KAAKtU,gBAAgBwH,OAAO/a,IAEjCA,GAEX2J,EAAekS,UAAU9R,SAAW,SAAUw9G,EAAMC,EAAMC,GACtD,GAAIznH,GAAQ6nB,KAAK7d,IAAIu9G,EAAMC,EAAMC,EACjC,IAAI5/F,KAAKtU,qBAAoC,KAAVvT,GAAyB8H,MAAMuB,QAAQrJ,GAAQ,CAC9EA,EAAQA,EAAMi/C,OACd,KAAK,GAAIl+C,GAAI,EAAGA,EAAIf,EAAMY,OAAQG,IAAK,CACnC,GAAIgR,GAAY/R,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,IAClC,QAAd4Q,OAA2C,KAAdA,GAA6BA,YAAqBG,MAC/ElS,EAAMiB,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAKtU,gBAAgBwH,OAAOhJ,KAInF,MAAO/R,IAEX2J,EAAekS,UAAUvT,IAAM,SAAUZ,EAAK1H,GAC1C6nB,KAAK3N,KAAKxS,GAAO1H,GAErB2J,EAAekS,UAAUhS,IAAM,SAAUnC,GACrC,WAAiC,KAAnBmgB,KAAK3N,KAAKxS,IAE5BiC,EAAekS,UAAUhJ,QAAU,SAAU60G,GACzC,IAAK,GAAIhgH,KAAOmgB,MAAK3N,KACjBwtG,EAAShgH,EAAKmgB,KAAKxU,OAAO3L,KAGlCiC,EAAekS,UAAUxL,OAAS,SAAU3I,EAAK1H,GAC7C,GAAI6nB,KAAKhe,IAAInC,GAAM,CACf,GAAIigH,GAAY9/F,KAAK3N,KAAKxS,EACR,QAAdigH,OAA2C,KAAdA,GAA6BA,YAAqBz1G,KAAiB2V,KAAKtU,kBACrGo0G,EAAY9/F,KAAKtU,gBAAgBwH,OAAO4sG,IAExCA,IAAc3nH,IACd6nB,KAAK3N,KAAKxS,GAAO1H,EACjB6nB,KAAKzN,UAAW,OAIpByN,MAAK3N,KAAKxS,GAAO1H,EACjB6nB,KAAKzN,UAAW,GAGxBzQ,EAAei+G,SAAW,SAAU5kE,GAChC,GAAI6kE,GAAY,GAAIl+G,GAAeq5C,EAInC,OAHA6kE,GAAUv/G,IAAM,SAAUZ,EAAK1H,GAC3B,KAAM,IAAI0B,OAAM,iDAEbmmH,GAEXl+G,EAAe2oG,MAAQ,SAAUtvD,EAAM8kE,EAAiBC,OACzB,KAAvBA,IAAiCA,GAAqB,EAG1D,KAAK,GAFDC,GAAmB,GAAIr+G,GAAeq5C,GACtCilE,EAAarsG,OAAOsJ,OAAO,MACtB9c,EAAK,EAAG8/G,EAAoBJ,EAAiB1/G,EAAK8/G,EAAkBtnH,OAAQwH,IAEjF,IADIgB,EAAa8+G,EAAkB9/G,aACPuB,GAG5B,IAAK,GAAIiZ,GAAK,EAAGulG,EAAK/+G,EAAW8Q,KAAM0I,EAAKulG,EAAGvnH,OAAQgiB,IAAM,CACzD,GAAIwlG,GAAKD,EAAGvlG,GAAKlb,EAAM0gH,EAAG,GAAIpoH,EAAQooH,EAAG,GACrClf,EAAW+e,EAAWj+G,IAAItC,EAC9B,QAAwB,KAAbwhG,EACPA,KACA+e,EAAW3/G,IAAIZ,EAAKwhG,OAEnB,MAAK6e,GAAwB/nH,YAAiB2J,IAC/C,QAEJu/F,GAAS/lG,KAAKnD,GAGtB,IAAK,GAAIqoH,GAAK,EAAGC,EAAeL,EAAYI,EAAKC,EAAa1nH,OAAQynH,IAAM,CACxE,GAAIE,GAAKD,EAAaD,GAAKnmD,EAASqmD,EAAG,GAAIvlH,EAASulH,EAAG,EACvD,IAAsB,IAAlBvlH,EAAOpC,QAAkBoC,EAAO,YAAc2G,GAAlD,CAKA,IAAK,GADD6+G,GAAU,GAAI7+G,GAAeq5C,GACxBylE,EAAK,EAAGnrC,EAAWt6E,EAAQylH,EAAKnrC,EAAS18E,OAAQ6nH,IAEtD,IAAK,GADDr/G,GAAak0E,EAASmrC,GACjB92D,EAAK,EAAG+2D,EAAKt/G,EAAW8Q,KAAMy3C,EAAK+2D,EAAG9nH,OAAQ+wD,IAAM,CACzD,GAAIg3D,GAAKD,EAAG/2D,GAAKjqD,EAAMihH,EAAG,GAAI3oH,EAAQ2oH,EAAG,OACR,KAAtBH,EAAQtuG,KAAKxS,KACpB8gH,EAAQtuG,KAAKxS,GAAO1H,GAI5BwoH,EAAQlmH,KAAO,IACf0lH,EAAiB9tG,KAAKgoD,GAAUsmD,OAdhCR,GAAiB9tG,KAAKgoD,GAAUl/D,EAAO,GAkB/C,MADAilH,GAAW7+C,QACJ4+C,EAAiB1lH,KAAO,EAAI0lH,EAAmBr+G,EAAei+G,SAAS5kE,IAElFr5C,EAAekS,UAAUmV,YAAc,SAAUgyB,GAC7Cn7B,KAAK3N,KAAO0B,OAAOsJ,OAAO,MAC1B2C,KAAK+gG,oBAAqB,EAC1B/gG,KAAKzN,UAAW,EAChByN,KAAKghG,WAAY,EACjBhhG,KAAK/M,QAAS,EACVkoC,IACAn7B,KAAKtU,gBAAkByvC,IAG/Br5C,EAAekS,UAAUsiF,KAAO,SAAUopB,EAAMC,EAAMC,GAClD,GAAIznH,GAAQ6nB,KAAK3N,KAAKqtG,EAUtB,YATqB,KAAVvnH,IACPA,EAAQ6nB,KAAK3N,KAAKstG,OACE,KAATA,GAAiC,OAATA,EAC/BxnH,EAAQ6nB,KAAK3N,KAAKstG,OAEG,KAATC,GAAiC,OAATA,IACpCznH,EAAQ6nB,KAAK3N,KAAKutG,KAGnBznH,GAEJ2J,KAGPm/G,GAA0B,WAC1B,QAASA,GAAS9oH,OACA,KAAVA,IAAoBA,MACxB6nB,KAAK7nB,MAAQA,EAEjB,MAAO8oH,MoCnSPh7F,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAKnF1b,GAAgC,WAChC,QAASA,KACLkV,KAAKg/C,aAAc,EACnBh/C,KAAKkhG,UAAW,EAyFpB,MAvFAp2G,GAAekJ,UAAUmtG,QAAU,WAC/B,MAAO,OAEXr2G,EAAekJ,UAAU8iD,SAAW,SAAU/9D,GAC1C,MAAO,OAEXgb,OAAO+H,eAAehR,EAAekJ,UAAW,UAC5C7R,IAAK,WACD,KAAM,IAAItI,OAAM,sCAEpBkiB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAehR,EAAekJ,UAAW,WAC5C7R,IAAK,WACD,KAAM,IAAItI,OAAM,uCAEpBkiB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAehR,EAAekJ,UAAW,gBAC5C7R,IAAK,WACD,OAAO,GAEX4Z,YAAY,EACZC,cAAc,IAElBlR,EAAekJ,UAAUotG,SAAW,WAChC,GAAIC,GAAarhG,KAAKmhG,SAItB,QAHoB,IAAhBE,GACArhG,KAAK1f,SAEF+gH,GAEXv2G,EAAekJ,UAAUstG,UAAY,SAAUvoH,GAC3C,GAAIoE,GAAQ6iB,KAAK82C,SAAS/9D,EAE1B,OADAinB,MAAK1f,QAAUnD,EAAMpE,OACdoE,GAEX2N,EAAekJ,UAAUutG,qBAAuB,WAC5C,GAAIC,GAAKxhG,KAAKmhG,UACVM,EAAKzhG,KAAKmhG,SACd,QAAY,IAARK,IAAqB,IAARC,GACL,GAEJD,GAAM,GAAKC,GAEvB32G,EAAekJ,UAAU0tG,SAAW,WAKhC,OAJS1hG,KAAKmhG,WAIA,KAHLnhG,KAAKmhG,WAGa,KAFlBnhG,KAAKmhG,WAE0B,GAD/BnhG,KAAKmhG,WAGlBr2G,EAAekJ,UAAU2D,aAAe,SAAUupE,EAAOpoF,GACrD,MAAO,OAEXgS,EAAekJ,UAAU2tG,cAAgB,SAAU9oH,EAAOE,EAAQwI,GAC9D,MAAO,OAEXuJ,EAAekJ,UAAU4tG,UAAY,WACjC,MAAO,OAEX92G,EAAekJ,UAAU6tG,MAAQ,WAC7B,MAAO,OAEX/2G,EAAekJ,UAAU8tG,UAAY,WACjC,MAAO,OAEXh3G,EAAekJ,UAAUoI,UAAY,SAAU2lG,EAAO5kH,GAKlD,WAJc,KAAV4kH,IAAoBA,GAAQ,OACX,KAAV5kH,GAAmC,OAAVA,IAChCA,EAAQ6iB,KAAK82C,YAEbirD,EACOpjH,EAAsBxB,GAGtBY,EAAeZ,IAG9B2N,EAAekJ,UAAUomD,KAAO,SAAU54B,GACtCxhB,KAAK1f,QAAUkhC,GAAK,GAExB12B,EAAekJ,UAAUguG,eAAiB,WACtC,MAAO,OAEJl3G,KAGP+I,GAA4B,SAAUgU,GAEtC,QAAShU,GAAWouG,EAAa1gH,EAAY1I,EAAOE,GAChD,GAAIgvB,GAAQF,EAAO5T,KAAK+L,OAASA,IAYjC,OAXA+H,GAAM46C,eAAgB,EACtB56C,EAAM5qB,MAAQ8kH,YAAuB5kH,YAAa4kH,EAAc,GAAI5kH,YAAW4kH,GAE3El6F,EAAMlvB,UADW,KAAVA,EACOA,EAGA,EAElBkvB,EAAMrS,SAAWqS,EAAMlvB,MACvBkvB,EAAMjvB,IAAMD,EAAQE,GAAUgvB,EAAM5qB,MAAMpE,OAC1CgvB,EAAMxmB,WAAaA,EACZwmB,EAqIX,MAnJA9B,IAAUpS,EAAYgU,GAgBtB9T,OAAO+H,eAAejI,EAAWG,UAAW,YAMxC7R,IAAK,WACD,MAAO6d,MAAK1f,QAOhBG,IAAK,SAAUtI,GACX6nB,KAAK1f,OAASnI,GAElB4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAejI,EAAWG,UAAW,UAMxC7R,IAAK,WACD,MAAO6d,MAAKlnB,IAAMknB,KAAKnnB,OAE3BkjB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAejI,EAAWG,UAAW,WAMxC7R,IAAK,WACD,MAAuB,KAAhB6d,KAAKjnB,QAEhBgjB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAejI,EAAWG,UAAW,QAMxC7R,IAAK,WACD,MAAO6d,MAAKkiG,aAOhBzhH,IAAK,SAAUtI,GACX6nB,KAAKkiG,eACLliG,KAAKkiG,YAAc/pH,GAEvB4jB,YAAY,EACZC,cAAc,IAElBnI,EAAWG,UAAUmtG,QAAU,WAC3B,MAAInhG,MAAKtK,UAAYsK,KAAKlnB,KACd,EAELknB,KAAK7iB,MAAM6iB,KAAKtK,aAE3B7B,EAAWG,UAAU8iD,SAAW,SAAU/9D,GACtC,GAAIoE,GAAQ6iB,KAAK7iB,MACbuY,EAAWsK,KAAKtK,SAChBysG,EAASniG,KAAKlnB,GAClB,KAAKC,EACD,MAAOoE,GAAMmB,SAASoX,EAAUysG,EAEpC,IAAIrpH,GAAM4c,EAAW3c,CAKrB,OAJID,GAAMqpH,IACNrpH,EAAMqpH,GAEVniG,KAAKtK,SAAW5c,EACTqE,EAAMmB,SAASoX,EAAU5c,IAEpC+a,EAAWG,UAAU2D,aAAe,SAAUupE,EAAOpoF,GAOjD,MANIooF,GAAQ,IACRA,EAAQ,GAERpoF,EAAMknB,KAAKlnB,MACXA,EAAMknB,KAAKlnB,KAERknB,KAAK7iB,MAAMmB,SAAS4iF,EAAOpoF,IAEtC+a,EAAWG,UAAU6tG,MAAQ,WACzB7hG,KAAKtK,SAAWsK,KAAKnnB,OAEzBgb,EAAWG,UAAU8tG,UAAY,WAC7B9hG,KAAKnnB,MAAQmnB,KAAKtK,UAEtB7B,EAAWG,UAAU2tG,cAAgB,SAAU9oH,EAAOE,EAAQwI,GAE1D,WADmB,KAAfA,IAAyBA,EAAa,MACnC,GAAIsS,GAAWmM,KAAK7iB,MAAMT,OAAQ6E,EAAY1I,EAAOE,IAEhE8a,EAAWG,UAAU4tG,UAAY,WAC7B,KAAM,IAAI/nH,OAAM,uCAEpBga,EAAWG,UAAU8wB,aAAe,WACR,OAApB9kB,KAAKze,gBAAkD,KAApBye,KAAKze,YAA8Bye,KAAKze,WAAWS,IAAI,iBACnFge,MAAKze,WAAW8Q,KAAK6sD,OAEhCl/C,KAAKg/C,aAAc,EACnBh/C,KAAKze,WAAWgR,UAAW,GAE/BsB,EAAWG,UAAUuO,OAAS,SAAUnV,GACpC4S,KAAK7iB,MAAQ,GAAIE,YAAW+P,EAAKrU,OACjC,KAAK,GAAIG,GAAI,EAAGA,EAAIkU,EAAKrU,OAAQG,IAC7B8mB,KAAK7iB,MAAM/D,OAAOC,SAASH,EAAEI,WAAY,KAAO8T,EAAKjR,WAAWjD,EAEpE8mB,MAAKlnB,IAAMknB,KAAK7iB,MAAMpE,OACtBinB,KAAKze,WAAWgR,UAAW,GAE/BsB,EAAWG,UAAU0sB,YAAc,SAAU9d,GAEzC,IAAK,GADDxV,GAAO,GACFlU,EAAI,EAAGA,EAAI0pB,EAAK7pB,OAAQG,IAC7BkU,GAAcvQ,OAAOC,aAAa8lB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KAEzE0mB,MAAK7iB,MAAQ,GAAIE,YAAWulB,GAC5B5C,KAAKlnB,IAAMknB,KAAK7iB,MAAMpE,OACtBinB,KAAKze,WAAWgR,UAAW,GAExBsB,GACT/I,IAEE4yD,GAAmC,SAAU71C,GAE7C,QAAS61C,GAAkBvgE,GACvB,GAAI4qB,GAAQF,EAAO5T,KAAK+L,OAASA,IASjC,OARI3E,IAAmBle,GACnB4qB,EAAMnD,OAASznB,EAGf4qB,EAAMnD,UAEVmD,EAAMxmB,WAAa,GAAIO,IACvBimB,EAAMxmB,WAAWgR,UAAW,EACrBwV,EA4CX,MAvDA9B,IAAUy3C,EAAmB71C,GAa7B9T,OAAO+H,eAAe4hD,EAAkB1pD,UAAW,UAC/C7R,IAAK,WACD,MAAO6d,MAAK4E,OAAO7rB,QAEvBgjB,YAAY,EACZC,cAAc,IAElB0hD,EAAkB1pD,UAAUwI,MAAQ,SAAUoG,GAC1C,GAAoB,gBAATA,GACP,IAAS1pB,EAAI,EAAGA,EAAI0pB,EAAK7pB,OAAQG,IAC7B8mB,KAAK4E,OAAOtpB,KAAKsnB,EAAKzmB,WAAWjD,QAIrC,KAAK,GAAIA,GAAI,EAAGA,EAAI0pB,EAAK7pB,OAAQG,IAC7B8mB,KAAK4E,OAAOtpB,KAAKsnB,EAAKxpB,OAAOC,SAASH,EAAEI,WAAY,KAG5D0mB,MAAKze,WAAWgR,UAAW,GAE/BmrD,EAAkB1pD,UAAUoI,UAAY,SAAU2lG,OAChC,KAAVA,IAAoBA,GAAQ,EAChC,IAAI5kH,GAAQ,GAAIE,YAAW2iB,KAAK4E,OAChC,QAAqB,KAAVznB,GAAmC,OAAVA,OAA0C,KAAjBA,EAAMpE,OAC/D,KAAM,IAAIc,OAAM,qCAEpB,IAAIkoH,EACA,MAAOpjH,GAAsBxB,EAG7B,IAAIkwB,GAAMlwB,EAAMpE,MAEhB,IAAIs0B,EADM,KAEN,MAAOxwB,QAAOC,aAAaqB,MAAM,KAAMhB,EAG3C,KAAK,GADDc,MACK/E,EAAI,EAAGA,EAAIm0B,EAAKn0B,GALf,KAMN+E,EAAa3C,KAAKuB,OAAOC,aAAaqB,MAAM,KAAMhB,EAAMmB,SAASpF,EAAGb,KAAKY,IAAIC,EANvE,KAMgFm0B,KAE1F,OAAOpvB,GAAajC,KAAK,KAG1B0hE,GACT5yD,IAEEs3G,GAAgC,SAAUv6F,GAE1C,QAASu6F,KACL,MAAOv6F,GAAO5T,KAAK+L,KAAM,GAAI3iB,YAAW,KAAO2iB,KAEnD,MAJAiG,IAAUm8F,EAAgBv6F,GAInBu6F,GACTvuG,ICrUEwuG,GAAgC,WAChC,QAASA,GAAerX,GACpBhrF,KAAKsiG,qBACLtiG,KAAKuiG,aACLviG,KAAKwiG,OAAS,GAAIC,IAAczX,GAuDpC,MArDAqX,GAAeruG,UAAU0uG,aAAe,WAEpC,MADA1iG,MAAK2iG,aAAapjG,aAAWqjG,KACtB5iG,KAAKsiG,mBAEhBD,EAAeruG,UAAU2uG,aAAe,SAAUE,GAE9C,IADA,GAAI/sG,IACIA,EAASkK,KAAK8iG,mBAAqBvjG,aAAWqjG,KAAK,CACvD,GAAI9sG,IAAW+sG,GAAa/sG,IAAWyJ,aAAW/Y,KAC9C,MAEJ,QAAQsP,GACJ,IAAKyJ,cAAWjQ,QACZ,KACJ,KAAKiQ,cAAWwjG,OACwB,MAAhC/iG,KAAKwiG,OAAOQ,gBACZhjG,KAAKuiG,UAAUjnH,KAAK,KAGpB0kB,KAAKuiG,UAAUjnH,KAAK0kB,KAAKwiG,OAAOQ,gBAEpC,MACJ,KAAKzjG,cAAW0jG,KACZjjG,KAAKuiG,UAAUjnH,KAAK0kB,KAAKwiG,OAAOQ,gBAChC,MACJ,KAAKzjG,cAAWmD,OAChB,IAAKnD,cAAWvgB,UAChB,IAAKugB,cAAW2jG,iBAChB,IAAK3jG,cAAW4jG,cAGhB,IAAK5jG,cAAWpX,KACZ6X,KAAKuiG,UAAUjnH,KAAK0kB,KAAKwiG,OAAOQ,gBAChC,MACJ,KAAKzjG,cAAW6jG,SACZpjG,KAAKqjG,gBACLrjG,KAAKuiG,YACL,MACJ,KAAKhjG,cAAW+jG,WACZ,KACJ,KAAK/jG,cAAWgkG,SACZ,KAAM,IAAI1pH,OAAM,kCAIhCwoH,EAAeruG,UAAUqvG,cAAgB,WACrC,GAAIG,GAAUxjG,KAAKwiG,OAAOQ,gBACtBtxF,EAAS,GAAI+xF,IAAWD,EAASxjG,KAAKuiG,UAC1C7wF,GAAOgyF,cAAgB1jG,KAAKwiG,OAAOz1F,MACnC/M,KAAKsiG,kBAAkBhnH,KAAKo2B,IAEhC2wF,EAAeruG,UAAU8uG,cAAgB,WACrC,MAAO9iG,MAAKwiG,OAAOM,iBAEhBT,KAGPI,GAA+B,WAC/B,QAASA,GAAc7/F,GACnB5C,KAAK2jG,WAAapkG,aAAW/Y,KAC7BwZ,KAAK4jG,kBAAoB,KACzB5jG,KAAK6jG,eAAiB,KACtB7jG,KAAKgO,QAAU,EACfhO,KAAK+M,SACL/M,KAAKuf,MAAQ3c,YAAgBvlB,YAAaulB,EAAO,GAAIvlB,YAAWulB,GAgTpE,MA9SA6/F,GAAczuG,UAAU8uG,cAAgB,WACpC9iG,KAAKgjG,gBAAkB,EACvB,IAAI7qH,GAAQ6nB,KAAK8jG,iBACjB,QAAQ3rH,GACJ,IAAK,IACD,MAAO6nB,MAAK2jG,WAAa3jG,KAAK+jG,aAClC,KAAK,IACD,MAAO/jG,MAAK2jG,WAAa3jG,KAAK4+C,UAClC,KAAK,IACL,IAAK,IACD,MAAO5+C,MAAK2jG,WAAa3jG,KAAKgkG,mBAClC,KAAK,IACL,IAAK,IACD,MAAOhkG,MAAK2jG,WAAa3jG,KAAKikG,YAClC,KAAK,IACD,MAAOjkG,MAAK2jG,WAAa3jG,KAAKkkG,0BAClC,KAAK,IACD,MAAOlkG,MAAK2jG,WAAa3jG,KAAKikG,YAClC,KAAK,IACL,IAAK,IACD,MAAOjkG,MAAK2jG,WAAa3jG,KAAKmkG,eAEtC,MAAK5zD,OAAMl3D,SAASlB,EAAO,KAGvB,WAAaykB,KAAKzkB,GACX6nB,KAAK2jG,WAAa3jG,KAAKmkG,eAE9BhsH,IAAU0E,OAAOC,aAAa,OACvBkjB,KAAK2jG,WAAapkG,aAAWqjG,IAEjC5iG,KAAK2jG,WAAapkG,aAAW/Y,KARzBwZ,KAAK2jG,WAAa3jG,KAAKikG,cAUtCxB,EAAczuG,UAAU+vG,YAAc,WAClC/jG,KAAKgjG,gBAAkB,EAGvB,KAFA,GAAI7qH,GACA+C,EAA0C,QAAlC/C,EAAQ6nB,KAAKokG,kBAA+BjsH,IAAU0E,OAAOC,aAAa,OAC/E5B,GACHA,EAA0C,QAAlC/C,EAAQ6nB,KAAKokG,kBAA+BjsH,IAAU0E,OAAOC,aAAa,MAEtF,OAAOyiB,cAAWjQ,SAEtBmzG,EAAczuG,UAAU4qD,SAAW,WAC/B5+C,KAAKgjG,gBAAkB,EAEvB,KADA,GAAI9nH,IAAO,GACHA,GAEJ,OADY8kB,KAAKokG,iBAEb,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAED,MADAlpH,IAAO,EACAqkB,aAAWpX,KAK9B,MAAOoX,cAAW/Y,MAEtBi8G,EAAczuG,UAAUiwG,WAAa,WACjC,GAAI9rH,GAAQ6nB,KAAK4jG,iBAKjB,KAJc,MAAVzrH,GAA2B,MAAVA,IACjB6nB,KAAKgjG,iBAAmBhjG,KAAK4jG,kBAC7BzrH,EAAQ6nB,KAAKqkG,iBAET9zD,MAAMl3D,SAASlB,EAAO,MAAkB,MAAVA,GAAe,CACjD,GAAKo4D,MAAMl3D,SAASlB,EAAO,MAGtB,GAAc,MAAVA,EAAe,CACpB,GAAI6nB,KAAKgjG,gBAAgB7tG,SAAS,KAC9B,KAGA6K,MAAKgjG,iBAAmBhjG,KAAK4jG,uBAPjC5jG,MAAKgjG,iBAAmBhjG,KAAK4jG,iBAUjCzrH,GAAQ6nB,KAAKqkG,eAEjB,MAAO9kG,cAAWwjG,QAEtBN,EAAczuG,UAAUmwG,aAAe,WACnCnkG,KAAKgjG,gBAAkB,EAEvB,KADA,GAAI7qH,GAAQ6nB,KAAK4jG,kBACV5jG,KAAKskG,YAAYnsH,IACpBA,EAAQ6nB,KAAKokG,eAEjB,OAAO7kG,cAAW6jG,UAEtBX,EAAczuG,UAAUswG,YAAc,SAAUnsH,GAC5C,GAAI,WAAaykB,KAAKzkB,GAClB,OAAO,CAEX,QAAQA,GACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAO,EAEf,OAAO,GAEXsqH,EAAczuG,UAAUgwG,kBAAoB,WACxChkG,KAAKgjG,gBAAkB,EACvB,IACIuB,GADAC,EAAYxkG,KAAK4jG,kBAEjBzrH,EAAQ6nB,KAAKokG,gBACblpH,GAAO,EACPL,EAAQ,EACR+N,EAAO,EAEX,KADAoX,KAAK+M,SACE7xB,GAAM,CACT,GAAkB,MAAdspH,EAAmB,CACnBD,EAAUvkG,KAAKykG,uBAAuBtsH,GACtC6nB,KAAKgjG,iBAAmBuB,EACxBpsH,EAAQ6nB,KAAKqkG,eACbnpH,GAAO,CACP,OAGA,GAAc,MAAV/C,EAAJ,CAeK,GAAc,MAAVA,EAAe,CACpB+C,GAAO,EACP/C,EAAQ6nB,KAAKokG,eACb,OAEe,MAAVjsH,GACL6nB,KAAK+M,MAAM3zB,OAAOC,SAASwB,EAAMvB,WAAY,KAAO,IAAMsP,EAC1D/N,IACA+N,EAAO,IAEQ,MAAVzQ,IACQ,KAATyQ,IACAoX,KAAK+M,MAAM3zB,OAAOC,SAASwB,EAAMvB,WAAY,KAAOsP,EAAKwuC,MAAM,GAAI,GACnEv8C,KAEJ+N,EAAO,IAGXA,GADAzQ,EAAQ6nB,KAAKokG,oBA/BI,KAATx7G,IACAoX,KAAK+M,MAAM3zB,OAAOC,SAASwB,EAAMvB,WAAY,KAAOsP,EAAKwuC,MAAM,GAAI,GACnExuC,EAAO,GACP/N,KAEJ1C,EAAQ6nB,KAAKokG,gBACbG,EAAUvkG,KAAKykG,uBAAuBtsH,GACtC6nB,KAAK+M,MAAM3zB,OAAOC,SAASwB,EAAMvB,WAAY,KAAO,IAAMirH,EAC1D1pH,IACAmlB,KAAKgjG,iBAAmBuB,EAExB37G,GADAzQ,EAAQ6nB,KAAKqkG,eAyBzB,MAAO9kG,cAAWmD,QAEtB+/F,EAAczuG,UAAUkwG,yBAA2B,WAO/C,IANA,GAGIQ,GAAc,EACdvsH,EAAQ6nB,KAAKokG,gBACblpH,GAAO,EACJA,GACH,GAPY,MAOR/C,EACAusH,IACAvsH,EAAQ6nB,KAAKokG,oBAEZ,IAVK,MAUDjsH,EAAmB,CACxB,GAAoB,IAAhBusH,EAAmB,CACnB1kG,KAAKokG,gBACLlpH,GAAO,CACP,OAEC,GAAoB,IAAhBwpH,GAKL,GAHc,OADdvsH,EAAQ6nB,KAAKokG,kBAETM,IAEgB,IAAhBA,GApBJ,MAoByBvsH,EAAiB,CACtC+C,GAAO,CACP,YAIU,MAAV/C,GACAusH,IAEJvsH,EAAQ6nB,KAAKokG,oBAKjB,KADAjsH,EAAQ6nB,KAAKokG,mBACCvnH,OAAOC,aAAa,OAAQ,CACtC5B,GAAO,CACP,OAIZ,MAAOqkB,cAAWvgB,WAEtByjH,EAAczuG,UAAUywG,uBAAyB,SAAUtsH,GAIvD,IAHA,GAAIwsH,GAAmB,EACnBJ,EAAU,GACVrpH,GAAO,EACJA,GACH,GAAc,OAAV/C,EAOJ,GAAc,MAAVA,EAMJ,GAAc,MAAVA,GAAsC,IAArBwsH,EAArB,CAMA,GAAc,MAAVxsH,GAAsC,IAArBwsH,EAGjB,MAFAJ,IAAWpsH,EACX+C,GAAO,EACAqpH,CAEXA,IAAWpsH,EACXA,EAAQ6nB,KAAKqkG,mBAXTE,IAAWpsH,EACXA,EAAQ6nB,KAAKqkG,eACbM,QARAA,KACAJ,GAAWpsH,EACXA,EAAQ6nB,KAAKqkG,mBATbE,IAAWpsH,EAEXosH,GADApsH,EAAQ6nB,KAAKqkG,eAEblsH,EAAQ6nB,KAAKqkG,cAuBrB,OAAOE,IAEX9B,EAAczuG,UAAUowG,cAAgB,WAEpC,MADApkG,MAAKgjG,iBAAmBhjG,KAAK4jG,kBACtB5jG,KAAKqkG,gBAEhB5B,EAAczuG,UAAU8vG,gBAAkB,WACtC,KAAO9jG,KAAK4jG,oBAAsB/mH,OAAOC,aAAa,QAClD,OAAQkjB,KAAK4jG,mBACT,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,IACD5jG,KAAKqkG,cACL,MACJ,SACI,MAAOrkG,MAAK4jG,kBAGxB,MAAO5jG,MAAK4jG,mBAEhBnB,EAAczuG,UAAUqwG,aAAe,WACnC,GAAIrkG,KAAKuf,MAAMxmC,QAAUinB,KAAKgO,QAAS,CACnC,GAA4B,MAAxBhO,KAAK6jG,gBAAsD,MAA3B7jG,KAAK4jG,mBAAqD,MAAxB5jG,KAAK6jG,eAGvE,MAFA7jG,MAAK4jG,kBAAoB5jG,KAAK6jG,eAC9B7jG,KAAK6jG,eAAiBhnH,OAAOC,aAAa,OACnCkjB,KAAK4jG,iBAEhB5jG,MAAK4jG,kBAAoB/mH,OAAOC,aAAa,OAC7CkjB,KAAK6jG,eAAiBhnH,OAAOC,aAAa,WAG1CkjB,MAAK4jG,kBAAoB5jG,KAAK6jG,eAC9B7jG,KAAK6jG,eAAiBhnH,OAAOC,aAAakjB,KAAKuf,MAAMvf,KAAKgO,YAC3B,OAA3BhO,KAAK4jG,oBACuB,OAAxB5jG,KAAK6jG,gBACL7jG,KAAK4jG,kBAAoB5jG,KAAK6jG,eAC1B7jG,KAAKuf,MAAMxmC,QAAUinB,KAAKgO,QAC1BhO,KAAK6jG,eAAiBhnH,OAAOC,aAAa,OAG1CkjB,KAAK6jG,eAAiBhnH,OAAOC,aAAakjB,KAAKuf,MAAMvf,KAAKgO,aAI9DhO,KAAK4jG,kBAAoB,KAIrC,OAAO5jG,MAAK4jG,mBAETnB,KAGPgB,GAA4B,WAC5B,QAASA,GAAWL,EAAUwB,GAC1B5kG,KAAK6kG,UAAYzB,EACjBpjG,KAAKuiG,UAAYqC,EAErB,MAAOnB,MC9XPx9F,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAInFs+F,GAAkC,SAAUj9F,GAE5C,QAASi9F,GAAiBC,GACtB,GAAIh9F,GAAQF,EAAO5T,KAAK+L,OAASA,IAOjC,IANA+H,EAAMi9F,oBAAsBD,GAAwB,EACpDh9F,EAAMznB,OAAS,EACfynB,EAAMg7C,aAAe,EACrBh7C,EAAM66F,KAAM,EACZ76F,EAAMrrB,OAAS,GAAIW,YAAW,GAC9B0qB,EAAMk9F,gBAAkB,IACpBF,EACA,KAAOh9F,EAAMk9F,gBAAkBF,GAC3Bh9F,EAAMk9F,iBAAmB,CAGjC,OAAOl9F,GAwFX,MAtGA9B,IAAU6+F,EAAkBj9F,GAgB5B9T,OAAO+H,eAAegpG,EAAiB9wG,UAAW,WAC9C7R,IAAK,WACD,MAAQ6d,KAAK4iG,KAA6B,IAAtB5iG,KAAK+iD,cACrB/iD,KAAK4hG,WAET,OAA6B,KAAtB5hG,KAAK+iD,cAEhBhnD,YAAY,EACZC,cAAc,IAElB8oG,EAAiB9wG,UAAUkxG,aAAe,SAAUC,GAChD,GAAIzoH,GAASsjB,KAAKtjB,MAClB,IAAIyoH,GAAazoH,EAAO0wG,WACpB,MAAO1wG,EAGX,KADA,GAAIjC,GAAOulB,KAAKilG,gBACTxqH,EAAO0qH,GACV1qH,GAAQ,CAEZ,IAAI2qH,GAAU,GAAI/nH,YAAW5C,EAG7B,OAFA2qH,GAAQ3kH,IAAI/D,GACZsjB,KAAKtjB,OAAS0oH,EACPplG,KAAKtjB,QAEhBooH,EAAiB9wG,UAAUmtG,QAAU,WAEjC,IADA,GAAIzrG,GAAWsK,KAAK1f,OACb0f,KAAK+iD,cAAgBrtD,GAAU,CAClC,GAAIsK,KAAK4iG,IACL,OAAQ,CAEZ5iG,MAAK4hG,YAET,MAAO5hG,MAAKtjB,OAAOsjB,KAAK1f,WAE5BwkH,EAAiB9wG,UAAU8iD,SAAW,SAAU/9D,GAC5C,GACID,GADA4c,EAAWsK,KAAK1f,MAEpB,IAAIvH,EAAQ,CAGR,IAFAinB,KAAKklG,aAAaxvG,EAAW3c,GAC7BD,EAAM4c,EAAW3c,GACTinB,KAAK4iG,KAAO5iG,KAAK+iD,aAAejqE,GACpCknB,KAAK4hG,WAET,IAAIyD,GAASrlG,KAAK+iD,YACdjqE,GAAMusH,IACNvsH,EAAMusH,OAGT,CACD,MAAQrlG,KAAK4iG,KACT5iG,KAAK4hG,WAET9oH,GAAMknB,KAAK+iD,aAGf,MADA/iD,MAAK1f,OAASxH,EACPknB,KAAKtjB,OAAO4B,SAASoX,EAAU5c,IAE1CgsH,EAAiB9wG,UAAU6tG,MAAQ,WAC/B7hG,KAAK1f,OAAS,GAElBwkH,EAAiB9wG,UAAU2tG,cAAgB,SAAU9oH,EAAOE,EAAQwI,GAChE,OAAea,KAAXrJ,EACA,MAAQinB,KAAK4iG,KACT5iG,KAAK4hG,gBAKT,KADA,GAAI9oH,GAAMD,EAAQE,EACXinB,KAAK+iD,cAAgBjqE,IAAQknB,KAAK4iG,KACrC5iG,KAAK4hG,WAGb,OAAO,IAAI/tG,IAAWmM,KAAKtjB,OAAQ6E,EAAY1I,EAAOE,IAE1D+rH,EAAiB9wG,UAAUguG,eAAiB,WACxC,MAAOhiG,MAAKzU,OAASyU,KAAKzU,OAAOy2G,iBAAmB,MAExD8C,EAAiB9wG,UAAU8tG,UAAY,WACnC,KAAM,IAAIjoH,OAAM,oCAEpBirH,EAAiB9wG,UAAU2D,aAAe,SAAUupE,EAAOpoF,GACvD,KAAM,IAAIe,OAAM,2CAA6CqnF,EAAQ,UAAYpoF,IAErFgsH,EAAiB9wG,UAAU4tG,UAAY,WACnC,KAAM,IAAI/nH,OAAM,oCAEbirH,GACTh6G,ICtHEmb,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAInF8+F,GAAmC,SAAUz9F,GAE7C,QAASy9F,GAAkB/5G,EAAQg6G,EAAaC,GAC5C,GAAIz9F,GAAQF,EAAO5T,KAAK+L,KAAMulG,IAAgBvlG,IAO9C,OANA+H,GAAM09F,WAAa,IACnB19F,EAAMxc,OAASA,EACfwc,EAAMxmB,WAAagK,EAAOhK,WAC1BwmB,EAAM86C,QAAU2iD,EAChBz9F,EAAM29F,WAAa,KACnB39F,EAAM66C,cAAe,EACd76C,EA0BX,MAnCA9B,IAAUq/F,EAAmBz9F,GAW7By9F,EAAkBtxG,UAAU4tG,UAAY,WACpC,GAAIvjH,EAQJ,IAPI2hB,KAAK4iD,aACLvkE,EAAQ2hB,KAAK0lG,YAGbrnH,EAAQ2hB,KAAKzU,OAAOurD,SAAS92C,KAAKylG,YAClCzlG,KAAK4iD,cAAe,IAEnBvkE,GAA0B,IAAjBA,EAAMtF,OAEhB,YADAinB,KAAK4iG,KAAM,EAGf5iG,MAAK0lG,WAAa1lG,KAAKzU,OAAOurD,SAAS92C,KAAKylG,WAC5C,IAAIE,GAAc3lG,KAAK0lG,YAAc1lG,KAAK0lG,WAAW3sH,OAAS,CAC9DsF,GAAQ2hB,KAAK6iD,QAAQ+iD,cAAcvnH,GAAQsnH,EAI3C,KAAK,GAHD5iD,GAAe/iD,KAAK+iD,aACpBvhC,EAAInjC,EAAMtF,OACV2D,EAASsjB,KAAKklG,aAAaniD,EAAevhC,GACrCtoC,EAAI,EAAGA,EAAIsoC,EAAGtoC,IACnBwD,EAAOqmE,KAAkB1kE,EAAMjF,OAAOC,SAASH,EAAEI,WAAY,IAEjE0mB,MAAK+iD,aAAeA,GAEjBuiD,GACTR,ICnDE7+F,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAKnFq/F,GAAiB,GAAIC,aACrB,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAE9DC,GAAe,GAAID,aACnB,EAAS,EAAS,EAAS,EAAS,EAAS,EAAS,EAAS,GAC/D,MAAS,MAAS,MAAS,MAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,IAAS,IAAS,MAEtDE,GAAa,GAAIF,aACjB,EAAS,EAAS,EAAS,EAAS,MAAS,MAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,SAE7CG,IACA,GAAIH,anE,GAEAI,IACA,GAAIJ,aACA,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,EAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAC/D,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,IAEnE,GAEAK,GAAiC,SAAUt+F,GAE3C,QAASs+F,GAAgB56G,EAAQg6G,GAC7B,GAAIx9F,GAAQF,EAAO5T,KAAK+L,KAAMulG,IAAgBvlG,IAC9C+H,GAAMxc,OAASA,EACfwc,EAAMxmB,WAAagK,EAAOhK,UAC1B,IAAI6kH,GAAM76G,EAAO41G,UACbkF,EAAM96G,EAAO41G,SACjB,IAAqB,IAAV,GAANiF,GACD,KAAM,IAAIxH,IAAY,+CAAiDwH,EAAM,KAAOC,EAExF,MAAMD,GAAO,GAAKC,GAAO,IAAO,EAC5B,KAAM,IAAIzH,IAAY,mCAAqCwH,EAAM,KAAOC,EAE5E,IAAU,GAANA,EACA,KAAM,IAAIzH,IAAY,qCAAuCwH,EAAM,KAAOC,EAI9E,OAFAt+F,GAAMu+F,SAAW,EACjBv+F,EAAMw+F,WAAa,EACZx+F,EAuMX,MAzNA9B,IAAUkgG,EAAiBt+F,GAoB3Bs+F,EAAgBnyG,UAAUwyG,QAAU,SAAUpuH,GAK1C,IAJA,GAGIoM,GAHA+G,EAASyU,KAAKzU,OACd+6G,EAAWtmG,KAAKsmG,SAChBC,EAAavmG,KAAKumG,WAEfD,EAAWluH,GAEdmuH,IADA/hH,EAAI+G,EAAO41G,YACQmF,EACnBA,GAAY,CAKhB,OAHA9hH,GAAI+hH,GAAe,GAAKnuH,GAAQ,EAChC4nB,KAAKumG,WAAaA,GAAcnuH,EAChC4nB,KAAKsmG,SAAWA,GAAYluH,EACrBoM,GAEX2hH,EAAgBnyG,UAAUyyG,QAAU,SAAUt2F,GAO1C,IANA,GAAI5kB,GAASyU,KAAKzU,OACdm7G,EAAQv2F,EAAM,GACdw2F,EAASx2F,EAAM,GACfm2F,EAAWtmG,KAAKsmG,SAChBC,EAAavmG,KAAKumG,WAEfD,EAAWK,GAEdJ,GADIh7G,EAAO41G,WACQmF,EACnBA,GAAY,CAEhB,IAAI1pH,GAAO8pH,EAAMH,GAAe,GAAKI,GAAU,GAC3CC,EAAUhqH,GAAQ,GAClBiqH,EAAiB,MAAPjqH,CAKd,OAJMgqH,GAAU,GAAKN,EAAWM,IAC5B5mG,KAAKumG,WAAaA,GAAcK,EAChC5mG,KAAKsmG,SAAWA,EAAWM,GAExBC,GAEXV,EAAgBnyG,UAAU8yG,qBAAuB,SAAUC,GACvD,GAEI7tH,GAFAsoC,EAAIulF,EAAQhuH,OACZiuH,EAAgB,CAEpB,KAAK9tH,EAAI,EAAGA,EAAIsoC,IAAKtoC,EACb6tH,EAAQ7tH,GAAK8tH,IACbA,EAAgBD,EAAQ7tH,GAKhC,KAAK,GAFDuB,GAAO,GAAKusH,EACZN,EAAQ,GAAIZ,YAAWrrH,GAClB4yB,EAAM,EAAGzwB,EAAO,EAAGw9D,EAAO,EAAG/sC,GAAO25F,IAAiB35F,EAAKzwB,IAAS,EAAGw9D,IAAS,EACpF,IAAK,GAAImrC,GAAM,EAAGA,EAAM/jE,IAAK+jE,EACzB,GAAIwhB,EAAQxhB,KAASl4E,EAAK,CACtB,GAAI45F,GAAQ,EACRt5E,EAAI/wC,CACR,KAAK1D,EAAI,EAAGA,EAAIm0B,IAAOn0B,EACnB+tH,EAASA,GAAS,EAAU,EAAJt5E,EACxBA,IAAM,CAEV,KAAKz0C,EAAI+tH,EAAO/tH,EAAIuB,EAAMvB,GAAKkhE,EAC3BssD,EAAMxtH,GAAMm0B,GAAO,GAAMk4E,IAE3B3oG,EAId,OAAQ8pH,EAAOM,IAEnBb,EAAgBnyG,UAAU4tG,UAAY,WAClC,GAAIllH,GACA3D,EACAwS,EAASyU,KAAKzU,OACd27G,EAAMlnG,KAAKwmG,QAAQ,EAKvB,IAJU,EAANU,IACAlnG,KAAK4iG,KAAM,GAGH,KADZsE,IAAQ,GACO,CACX,GAAI1iH,GAAI+G,EAAO41G,UACXgG,EAAW3iH,CAEf2iH,KADA3iH,EAAI+G,EAAO41G,YACM,CAEjB,IAAI52G,GADJ/F,EAAI+G,EAAO41G,SAIX,IAFA38G,EAAI+G,EAAO41G,WACX52G,GAAS/F,GAAK,MACe,OAAX2iH,IAAoC,IAAbA,GAA4B,IAAV58G,EAAe,CACtEyV,KAAKumG,WAAa,EAClBvmG,KAAKsmG,SAAW,CAChB,IAAIvjD,GAAe/iD,KAAK+iD,aACpBjqE,EAAMiqE,EAAeokD,CAGzB,IAFAzqH,EAASsjB,KAAKklG,aAAapsH,GAC3BknB,KAAK+iD,aAAejqE,EACH,IAAbquH,GAC2B,IAAvB57G,EAAO61G,aACPphG,KAAK4iG,KAAM,OAGd,CACD,GAAIwE,GAAQ77G,EAAOurD,SAASqwD,EAC5BzqH,GAAO+D,IAAI2mH,EAAOrkD,GACdqkD,EAAMruH,OAASouH,IACfnnG,KAAK4iG,KAAM,GAGnB,QAGR,GAAIyE,GACAC,CACJ,IAAY,IAARJ,EACAG,EAAepB,GACfqB,EAAgBpB,OAEf,IAAY,IAARgB,EAAW,CAChB,GAAIK,GAAcvnG,KAAKwmG,QAAQ,GAAK,IAChCgB,EAAexnG,KAAKwmG,QAAQ,GAAK,EACjCiB,EAAkBznG,KAAKwmG,QAAQ,GAAK,EACpCkB,EAAqB,GAAIrqH,YAAWwoH,GAAe9sH,QACnDG,MAAI,EACR,KAAKA,EAAI,EAAGA,EAAIuuH,IAAmBvuH,EAC/BwuH,EAAmB7B,GAAe3sH,IAAM8mB,KAAKwmG,QAAQ,EAEzD,IAAImB,GAAiB3nG,KAAK8mG,qBAAqBY,EAC/C3uH,GAAS,EACTG,EAAI,CAMJ,KALA,GAAIwtH,GAAQa,EAAcC,EACtBI,EAAc,GAAIvqH,YAAWqpH,GAC7BmB,MAAa,GACbC,MAAa,GACbC,MAAO,GACJ7uH,EAAIwtH,GAAO,CACd,GAAI9pH,GAAOojB,KAAKymG,QAAQkB,EACxB,IAAa,KAAT/qH,EACAirH,EAAa,EACbC,EAAa,EACbC,EAAOhvH,MAEN,IAAa,KAAT6D,EACLirH,EAAa,EACbC,EAAa,EACbC,EAAOhvH,EAAS,MAEf,CAAA,GAAa,KAAT6D,EAKJ,CACDgrH,EAAY1uH,KAAOH,EAAS6D,CAC5B,UANAirH,EAAa,EACbC,EAAa,GACbC,EAAOhvH,EAAS,EAOpB,IADA,GAAIivH,GAAehoG,KAAKwmG,QAAQqB,GAAcC,EACvCE,KAAiB,GACpBJ,EAAY1uH,KAAO6uH,EAG3BV,EAAernG,KAAK8mG,qBAAqBc,EAAYtpH,SAAS,EAAGipH,IACjED,EAAgBtnG,KAAK8mG,qBAAqBc,EAAYtpH,SAASipH,EAAab,IAKhF,IAFA,GAAIuB,IADJvrH,EAASsjB,KAAKtjB,QACOA,EAAO3D,OAAS,EACjC2c,EAAWsK,KAAK+iD,eACP,CACT,GAAImlD,GAAQloG,KAAKymG,QAAQY,EACzB,IAAIa,EAAQ,IACJxyG,EAAW,GAAKuyG,IAEhBA,GADAvrH,EAASsjB,KAAKklG,aAAaxvG,EAAW,IACvB3c,QAEnB2D,EAAOgZ,KAAcwyG,MALzB,CAQA,GAAc,MAAVA,EAEA,YADAloG,KAAK+iD,aAAertD,EAKxB,IAAIuxG,IADJiB,EAAQnC,GADRmC,GAAS,OAEY,EACjBjB,GAAQ,IACRA,EAAQjnG,KAAKwmG,QAAQS,IAEzBluH,GAAkB,MAARmvH,GAAkBjB,EAC5BiB,EAAQloG,KAAKymG,QAAQa,IAErBL,GADAiB,EAAQlC,GAAWkC,KACF,IACL,IACRjB,EAAQjnG,KAAKwmG,QAAQS,GAEzB,IAAIkB,IAAgB,MAARD,GAAkBjB,CAC1BvxG,GAAW3c,GAAUkvH,IAErBA,GADAvrH,EAASsjB,KAAKklG,aAAaxvG,EAAW3c,IACvBA,OAEnB,KAAK,GAAI4L,GAAI,EAAGA,EAAI5L,IAAU4L,IAAK+Q,EAC/BhZ,EAAOgZ,GAAYhZ,EAAOgZ,EAAWyyG,MAI1ChC,GACTrB,ICrUEsD,GAA6B,WAC7B,QAASA,GAAYjtE,GAGjB,GAFAn7B,KAAKtU,gBAAkByvC,EACvBn7B,KAAKu0E,mBAAqBp5C,EAAKktE,mBACzBroG,KAAKu0E,6BAA8BzyF,KACrC,KAAM,IAAI88G,IAAY,sCAGtB5+F,MAAKu0E,mBAAmBysB,WAAY,EAExChhG,KAAKsoG,oBAAsBtoG,KAAKu0E,mBAAmBpyF,IAAI,SACvD6d,KAAKuoG,mBAAqB,GAAItJ,IAC9Bj/F,KAAKwoG,eAAiB,GAAIvJ,IA2J9B,MAzJAlrG,QAAO+H,eAAessG,EAAYp0G,UAAW,WACzC7R,IAAK,WACD,GAAIhK,EACJ,IAAI6nB,KAAKu0E,mBAAmBvyF,IAAI,WAAY,CACxC,GAAImvB,GAAUnR,KAAKu0E,mBAAmBpyF,IAAI,UACtCgvB,KACAh5B,EAAQg5B,EAAQhpB,MAGxB,MAAOhQ,IAEX4jB,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAessG,EAAYp0G,UAAW,aACzC7R,IAAK,WACD,GAAIwZ,GAAMqE,KAAKsoG,oBAAoBnmH,IAAI,QACvC,QAAmB,KAARwZ,IAAwBviB,OAAOsE,UAAUie,GAChD,KAAM,IAAIijG,IAAY,qBAE1B,OAAOjjG,IAEXI,YAAY,EACZC,cAAc,IAElBjI,OAAO+H,eAAessG,EAAYp0G,UAAW,YACzC7R,IAAK,WACD,GAAIgS,EAOJ,OANI6L,MAAKu0E,mBAAmBvyF,IAAI,cAC5BmS,EAAO6L,KAAKu0E,mBAAmBpyF,IAAI,aAE1B,OAATgS,OAAiC,KAATA,IACxBA,EAAO6L,KAAKyoG,eAETt0G,GAEX4H,YAAY,EACZC,cAAc,IAGlBosG,EAAYp0G,UAAUy0G,YAAc,WAChC,GAAIt0G,GAAO,GAAIrS,IAAeke,KAAKtU,iBAC/BtB,EAAM4V,KAAKtU,gBAAgB00C,mBAM/B,OALApgC,MAAKtU,gBAAgB2H,UAAU5S,IAAI2J,EAAK+J,GACxC6L,KAAKu0E,mBAAmB9zF,IAAI,WAAY2J,GACxC4V,KAAKu0E,mBAAmBhiF,UAAW,EACnCyN,KAAKtU,gBAAgBg9G,eAAgB,EACrCv0G,EAAK5B,UAAW,EACT4B,GAEXi0G,EAAYp0G,UAAU20G,kBAAoB,SAAU5yD,GAChD,GAAI6yD,IAAgB5oG,KAAKsoG,qBACrBO,EAAe,GAAI9J,IACnB+J,EAAW9oG,KAAKu0E,mBAAmB/oF,OAAO,QAC1Cs9G,IAAYA,YAAoBz+G,KAChCw+G,EAAa7J,IAAI8J,EAMrB,KAJA,GAAI3tE,GAAOn7B,KAAKtU,gBACZ68G,EAAqBvoG,KAAKuoG,mBAC1BC,EAAiBxoG,KAAKwoG,eACtBO,EAAmB,EAChBH,EAAa7vH,OAAS,GAAG,CAC5B,GAAIiwH,GAAcJ,EAAahsE,KAC/B,IAAoB,OAAhBosE,OAA+C,KAAhBA,GAA+BA,YAAuB3+G,IAAzF,CACI,GAAIq6D,GAAU6jD,EAAmBpmH,IAAI6mH,EACrC,IAAItkD,GAAW,GAAKqkD,EAAmBrkD,GAAW3O,EAAW,CACzDgzD,GAAoBrkD,CACpB,UAEJ,GAAImkD,EAAa7mH,IAAIgnH,GACjB,KAAM,IAAIpK,IAAY,0CAE1BiK,GAAa7J,IAAIgK,EACjB,IAAIrtG,GAAMw/B,EAAKjoC,OAAO81G,EACtB,IAAIrtG,GAAOA,YAAe7Z,MAET,QADTuL,EAAOsO,EAAInQ,OAAO,cACe,KAAT6B,GAAwBA,YAAgBhD,MAChEgD,EAAO8tC,EAAKjoC,OAAO7F,IAEnBmQ,GAAQnQ,EAAM,UAAYsO,EAAI3Z,IAAI,SAAS,CAO3C,GANKumH,EAAmBvmH,IAAIgnH,IACxBT,EAAmBvJ,IAAIgK,EAAa,GAEnCR,EAAexmH,IAAIgnH,IACpBR,EAAexJ,IAAIgK,EAAaD,GAEhCA,IAAqBhzD,EACrB,OAASx0D,WAAYoa,EAAKzR,UAAW8+G,EAEzCD,IACA,UAGRH,EAAattH,KAAKqgB,OA9BtB,CAiCA,KAAMqtG,YAAuBlnH,KACzB,KAAM,IAAI88G,IAAY,gEAE1B,IAAI78G,GAAQinH,EAAYjnH,MACpBkH,EAAQ+/G,EAAY7mH,IAAI,QAI5B,IAHc,OAAV8G,OAAmC,KAAVA,GAAyBA,YAAiBoB,MACnEpB,EAAQkyC,EAAKjoC,OAAOjK,IAEV,OAAVA,OAAmC,KAAVA,GAAyB7P,OAAOsE,UAAUuL,IAAUA,GAAS,IAClFlH,IAAUwmH,EAAmBvmH,IAAID,IACjCwmH,EAAmB9nH,IAAIsB,EAAOkH,GAE9B8/G,EAAmB9/G,GAAS8sD,GAC5BgzD,GAAoB9/G,MAL5B,CASA,GAAIuoD,GAAOw3D,EAAYx9G,OAAO,OAI9B,IAHa,OAATgmD,OAAiC,KAATA,GAAwBA,YAAgBnnD,MAChEmnD,EAAOrW,EAAKjoC,OAAOs+C,KAElBvxD,MAAMuB,QAAQgwD,GAAO,CACtB,GAAInkD,GAAO27G,EAAYx9G,OAAO,OAI9B,IAHa,OAAT6B,OAAiC,KAATA,GAAwBA,YAAgBhD,MAChEgD,EAAO8tC,EAAKjoC,OAAO7F,IAEnBmQ,GAAQnQ,EAAM,UAAY27G,EAAYhnH,IAAI,QAAS,CACnD,GAAI+mH,IAAqBhzD,EACrB,OAASx0D,WAAYynH,EAAa9+G,UAAW,KAEjD6+G,IACA,UAEJ,KAAM,IAAInK,IAAY,gDAE1B,IAAK,GAAIz5E,GAAOqsB,EAAKz4D,OAAS,EAAGosC,GAAQ,EAAGA,IACxCyjF,EAAattH,KAAKk2D,EAAKrsB,MAG/B,KAAM,IAAItrC,OAAM,cAAgBk8D,EAAY,gBAEhDqyD,EAAYp0G,UAAU24C,SAAW,WACzB3sC,KAAKu0E,qBACLv0E,KAAKu0E,uBAAqBnyF,IAE1B4d,KAAKsoG,sBACLtoG,KAAKsoG,wBAAsBlmH,IAE3B4d,KAAKwoG,iBACLxoG,KAAKwoG,eAAejnD,QACpBvhD,KAAKwoG,mBAAiBpmH,IAEtB4d,KAAKuoG,qBACLvoG,KAAKuoG,mBAAmBhnD,QACxBvhD,KAAKuoG,uBAAqBnmH,KAG3BgmH,KCzKPniG,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAMnFyiG,GAAoC,SAAUphG,GAE9C,QAASohG,GAAmB19G,EAAQg6G,EAAa2D,GAC7C,GAAInhG,GAAQF,EAAO5T,KAAK+L,KAAMulG,IAAgBvlG,IAC9C,MAAMkpG,YAAkBpnH,KACpB,MAAOyJ,EAEX,IAAI49G,GAAaphG,EAAMohG,UAAYD,EAAO/mH,IAAI,cAAgB,CAC9D,IAAIgnH,GAAa,EACb,MAAO59G,EAEX,IAAkB,IAAd49G,IAAoBA,EAAY,IAAMA,EAAY,IAClD,KAAM,IAAIvK,IAAY,0BAA4BuK,EAGlDphG,GAAM65F,UADQ,IAAduH,EACkBphG,EAAMqhG,cAGNrhG,EAAMshG,aAE5BthG,EAAMxc,OAASA,EACfwc,EAAMxmB,WAAagK,EAAOhK,UAC1B,IAAI+nH,GAAUvhG,EAAMuhG,OAASJ,EAAO/mH,IAAI,WAAa,EACjD/J,EAAQ2vB,EAAM3vB,KAAO8wH,EAAO/mH,IAAI,MAAO,qBAAuB,EAC9DonH,EAAWxhG,EAAMwhG,QAAUL,EAAO/mH,IAAI,YAAc,CAGxD,OAFA4lB,GAAMyhG,SAAYF,EAASlxH,EAAO,GAAM,EACxC2vB,EAAM0hG,SAAYF,EAAUD,EAASlxH,EAAO,GAAM,EAC3C2vB,EAwKX,MAlMA9B,IAAUgjG,EAAoBphG,GA4B9BohG,EAAmBj1G,UAAUo1G,cAAgB,WACzC,GAAIK,GAAWzpG,KAAKypG,SAChB1mD,EAAe/iD,KAAK+iD,aACpBrmE,EAASsjB,KAAKklG,aAAaniD,EAAe0mD,GAC1CrxH,EAAO4nB,KAAK5nB,KACZkxH,EAAStpG,KAAKspG,OACdI,EAAW1pG,KAAKzU,OAAOurD,SAAS2yD,EAEpC,IADAzpG,KAAK4iG,KAAO8G,EAAS3wH,QACjBinB,KAAK4iG,IAAT,CAGA,GAKI1pH,GALAywH,EAAQ,EACRC,EAAS,EACTC,EAAS,EACTC,EAAU,EACVp0G,EAAWqtD,CAEf,IAAa,IAAT3qE,GAAyB,IAAXkxH,EACd,IAAKpwH,EAAI,EAAGA,EAAIuwH,IAAYvwH,EAAG,CAC3B,GAAIuL,GAAIilH,EAASxwH,GAAKywH,CACtBllH,IAAKA,GAAK,EACVA,GAAKA,GAAK,EAEVklH,GAAa,GADbllH,GAAKA,GAAK,KACS,EACnB/H,EAAOgZ,KAAcjR,MAGxB,IAAa,IAATrM,EAAY,CACjB,IAAKc,EAAI,EAAGA,EAAIowH,IAAUpwH,EACtBwD,EAAOgZ,KAAcg0G,EAASxwH,EAElC,MAAOA,EAAIuwH,IAAYvwH,EACnBwD,EAAOgZ,GAAYhZ,EAAOgZ,EAAW4zG,GAAUI,EAASxwH,GACxDwc,QAGH,IAAa,KAATtd,EAAa,CAClB,GAAI2xH,GAAyB,EAATT,CACpB,KAAKpwH,EAAI,EAAGA,EAAI6wH,IAAiB7wH,EAC7BwD,EAAOgZ,KAAcg0G,EAASxwH,EAElC,MAAOA,EAAIuwH,EAAUvwH,GAAK,EAAG,CACzB,GAAImlF,KAAsB,IAAdqrC,EAASxwH,KAAc,IACZ,IAAlBwwH,EAASxwH,EAAI,MACuB,IAAnCwD,EAAOgZ,EAAWq0G,KAA0B,IACN,IAAvCrtH,EAAOgZ,EAAWq0G,EAAgB,GACvCrtH,GAAOgZ,KAAe2oE,GAAO,EAAK,IAClC3hF,EAAOgZ,KAAoB,IAAN2oE,OAGxB,CACD,GAAI2rC,GAAY,GAAI3sH,YAAWisH,EAAS,GACpC7X,GAAW,GAAKr5G,GAAQ,EACxBe,EAAI,EACJwL,EAAIo+D,EACJwmD,EAAUvpG,KAAKupG,OACnB,KAAKrwH,EAAI,EAAGA,EAAIqwH,IAAWrwH,EACvB,IAAK,GAAI+wH,GAAK,EAAGA,EAAKX,IAAUW,EACxBJ,EAASzxH,IACTuxH,EAASA,GAAS,EAAsB,IAAhBD,EAASvwH,KACjC0wH,GAAU,GAEdG,EAAUC,GAAOD,EAAUC,IAAON,GAAUE,EAASzxH,GAAUq5G,EAC/DoY,GAAUzxH,EACVwxH,EAAUA,GAAUxxH,EAAQ4xH,EAAUC,IACtCH,GAAW1xH,IACI,IACXsE,EAAOiI,KAAQilH,GAAWE,EAAU,EAAM,IAC1CA,GAAW,EAInBA,GAAU,IACVptH,EAAOiI,MAAQilH,GAAW,EAAIE,IAAaH,GAAU,GAAM,EAAIG,GAAY,IAGnF9pG,KAAK+iD,cAAgB0mD,IAEzBR,EAAmBj1G,UAAUq1G,aAAe,WACxC,GAAII,GAAWzpG,KAAKypG,SAChBD,EAAWxpG,KAAKwpG,SAChBL,EAAYnpG,KAAKzU,OAAO41G,UACxBuI,EAAW1pG,KAAKzU,OAAOurD,SAAS2yD,EAEpC,IADAzpG,KAAK4iG,KAAO8G,EAAS3wH,QACjBinB,KAAK4iG,IAAT,CAGA,GAAI7/C,GAAe/iD,KAAK+iD,aACpBrmE,EAASsjB,KAAKklG,aAAaniD,EAAe0mD,GAC1CS,EAAUxtH,EAAO4B,SAASykE,EAAe0mD,EAAU1mD,EAChC,KAAnBmnD,EAAQnxH,SACRmxH,EAAU,GAAI7sH,YAAWosH,GAE7B,IAAIvwH,GAEA+0F,EACAxpF,EAFAtL,EAAI4pE,CAGR,QAAQomD,GACJ,IAAK,GACD,IAAKjwH,EAAI,EAAGA,EAAIuwH,IAAYvwH,EACxBwD,EAAOvD,KAAOuwH,EAASxwH,EAE3B,MACJ,KAAK,GACD,IAAKA,EAAI,EAAGA,EAAIswH,IAAYtwH,EACxBwD,EAAOvD,KAAOuwH,EAASxwH,EAE3B,MAAOA,EAAIuwH,IAAYvwH,EACnBwD,EAAOvD,GAAMuD,EAAOvD,EAAIqwH,GAAYE,EAASxwH,GAAM,IACnDC,GAEJ,MACJ,KAAK,GACD,IAAKD,EAAI,EAAGA,EAAIuwH,IAAYvwH,EACxBwD,EAAOvD,KAAQ+wH,EAAQhxH,GAAKwwH,EAASxwH,GAAM,GAE/C,MACJ,KAAK,GACD,IAAKA,EAAI,EAAGA,EAAIswH,IAAYtwH,EACxBwD,EAAOvD,MAAQ+wH,EAAQhxH,IAAM,GAAKwwH,EAASxwH,EAE/C,MAAOA,EAAIuwH,IAAYvwH,EACnBwD,EAAOvD,IAAQ+wH,EAAQhxH,GAAKwD,EAAOvD,EAAIqwH,IAAc,GAAKE,EAASxwH,GAAM,IACzEC,GAEJ,MACJ,KAAK,GACD,IAAKD,EAAI,EAAGA,EAAIswH,IAAYtwH,EACxB+0F,EAAKi8B,EAAQhxH,GACbuL,EAAIilH,EAASxwH,GACbwD,EAAOvD,KAAO80F,EAAKxpF,CAEvB,MAAOvL,EAAIuwH,IAAYvwH,EAAG,CACtB+0F,EAAKi8B,EAAQhxH,EACb,IAAIixH,GAASD,EAAQhxH,EAAIswH,GACrBtvH,EAAOwC,EAAOvD,EAAIqwH,GAClBljG,EAAIpsB,EAAO+zF,EAAKk8B,EAChBxM,EAAKr3F,EAAIpsB,CACTyjH,GAAK,IACLA,GAAMA,EAEV,IAAIC,GAAKt3F,EAAI2nE,CACT2vB,GAAK,IACLA,GAAMA,EAEV,IAAIC,GAAKv3F,EAAI6jG,CACTtM,GAAK,IACLA,GAAMA,GAEVp5G,EAAIilH,EAASxwH,GAETwD,EAAOvD,KADPwkH,GAAMC,GAAMD,GAAME,EACJ3jH,EAAOuK,EAEhBm5G,GAAMC,EACG5vB,EAAKxpF,EAGL0lH,EAAS1lH,EAG/B,KACJ,SACI,KAAM,IAAIm6G,IAAY,0BAA4BuK,GAE1DnpG,KAAK+iD,cAAgB0mD,IAElBR,GACTnE,ICpNE7+F,GAAwC,WACxC,GAAIC,GAAgB,SAAUC,EAAG3hB,GAI7B,OAHA0hB,EAAgBnS,OAAOqS,iBAChBC,uBAA2BpmB,QAAS,SAAUkmB,EAAG3hB,GAAK2hB,EAAEE,UAAY7hB,IACvE,SAAU2hB,EAAG3hB,GAAK,IAAK,GAAI8hB,KAAK9hB,GAAOA,EAAE+hB,eAAeD,KAAIH,EAAEG,GAAK9hB,EAAE8hB,MACpDH,EAAG3hB,GAE5B,OAAO,UAAU2hB,EAAG3hB,GAEhB,QAASgiB,KAAOxG,KAAKyG,YAAcN,EADnCD,EAAcC,EAAG3hB,GAEjB2hB,EAAEnS,UAAkB,OAANxP,EAAauP,OAAOsJ,OAAO7Y,IAAMgiB,EAAGxS,UAAYxP,EAAEwP,UAAW,GAAIwS,QAMnF4jG,GAA+B,WAC/B,QAASA,GAAc7oH,EAAYm4B,EAAIk3C,OAClB,KAAbA,IAAuBA,EAAW,IACtC5wD,KAAKqqG,iBAAkB,EACvBrqG,KAAKsqG,sBAAuB,EAC5BtqG,KAAKuqG,wBAAyB,EAC9BvqG,KAAKwqG,kBAAmB,EACxBxqG,KAAKyqG,sBAAwB,GAAIptH,aAAY,GAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,IACjH,IAAM,EAAM,EAAM,GAAM,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,KAChH,IAAIm/G,GAASj7G,EAAWY,IAAI,SAC5B,KAAKqb,GAAQg/F,EAAQ,YACjB,KAAM,IAAIoC,IAAY,4BAE1B5+F,MAAK0qG,YAAclO,EAAOr0G,KAC1B6X,KAAK1U,YAAc/J,CACnB,IAAIopH,GAAYppH,EAAWY,IAAI,IAC/B,KAAK/I,OAAOsE,UAAUitH,IAA6B,IAAdA,GAAiC,IAAdA,GAAiC,IAAdA,GAAiC,IAAdA,EAC1F,KAAM,IAAI/L,IAAY,mCAE1B5+F,MAAK4qG,WAAaD,CAClB,IAAIE,GAAYtpH,EAAWY,IAAI,SAC/B,KAAK0oH,EACD,GAAIF,GAAa,EACbE,EAAY,OAEX,CACD,GAAIC,GAAevpH,EAAWY,IAAI,MAC9B4oH,EAAmBxpH,EAAWY,IAAI,OACtC,IAAI2oH,GAAgBC,EAAkB,CAClCD,EAAa/J,oBAAqB,CAClC,IAAIiK,GAAoBF,EAAa3oH,IAAI4oH,EAAiB5iH,OAC1D0iH,EAAaG,GAAqBA,EAAkB7oH,IAAI,WAAc,KACtD,KACZ0oH,IAAc,IAK9B,IAAKzxH,OAAOsE,UAAUmtH,IAAcA,EAAY,IAAMA,EAAY,GAAM,EACpE,KAAM,IAAIjM,IAAY,qBAE1B,IAAIqM,GAAgBzuH,EAAe+E,EAAWY,IAAI,MAAM,GAAO,GAAM7D,SAAS,EAAG,IAC7E4sH,EAAe1uH,EAAe+E,EAAWY,IAAI,MAAM,GAAO,GAAM7D,SAAS,EAAG,IAC5EpD,EAAOqG,EAAWY,IAAI,KACtBgpH,EAAW5pH,EAAWY,IAAI,IAC9B6d,MAAKwqG,kBAAkC,IAAdG,GAAiC,IAAdA,KAA0D,IAAtCppH,EAAWY,IAAI,kBAC/E,IACIipH,GADAC,EAAc7uH,EAAek9B,GAAI,GAAO,EAExCk3C,KACiB,IAAbu6C,IACAv6C,EAAW06C,mBAAmB16C,IAElCw6C,EAAgB5uH,EAAeo0E,GAAU,GAAO,GAEpD,IAAI26C,EACJ,IAAkB,IAAdZ,GAEA,IADAY,EAAgBvrG,KAAKwrG,gBAAgBH,EAAaD,EAAeH,EAAeC,EAAchwH,EAAMiwH,EAAUN,EAAW7qG,KAAKwqG,qBAE1HxqG,KAAKqqG,iBAAkB,EACnBz5C,GAAU,CACV,GAAI66C,GAAkBzrG,KAAK0rG,oBAAoBN,EAAeH,EAAeE,EAAUN,GACnFc,EAAqB3rG,KAAKwrG,gBAAgBH,EAAaI,EAAiBR,EAAeC,EAAchwH,EAAMiwH,EAAUN,EAAW7qG,KAAKwqG,iBACrImB,IAAsBruH,EAAequH,EAAoBJ,KACzDvrG,KAAKsqG,sBAAuB,QAKvC,CACD,GASIsB,GATAC,EAAqBrvH,EAAe+E,EAAWY,IAAI,MAAM,GAAO,GAChE2pH,EAAsBD,EAAmBvtH,SAAS,GAAI,IACtDytH,EAAeF,EAAmBvtH,SAAS,GAAI,IAC/C0tH,EAAoBxvH,EAAe+E,EAAWY,IAAI,MAAM,GAAO,GAC/D8pH,EAASD,EAAkB1tH,SAAS,EAAG,IACvC4tH,EAAqBF,EAAkB1tH,SAAS,GAAI,IACpD6tH,EAAcH,EAAkB1tH,SAAS,GAAI,IAC7C8tH,EAAkB5vH,EAAe+E,EAAWY,IAAI,OAAO,GAAO,GAC9DkqH,EAAiB7vH,EAAe+E,EAAWY,IAAI,OAAO,GAAO,EAG7DypH,GADa,IAAbT,EACc,GAAImB,IAGJ,GAAIC,GAEtB,IAAIjmG,OAAI,EAEJA,GADA8kG,EACIA,EAAc9sH,SAAS,EAAGjG,KAAKY,IAAI,IAAKmyH,EAAcryH,SAGtD,GAAIsE,gBAERuuH,EAAYY,mBAAmBlmG,EAAG4lG,EAAoBhB,IACtDK,EAAgBvrG,KAAKysG,sBAAqB,EAAMnmG,EAAGylG,EAAcE,EAAQE,EAAaC,EAAiBC,EAAgBT,GACvH5rG,KAAKqqG,iBAAkB,EACnBz5C,EAAS73E,QAAU6yH,EAAYc,oBAAoBpmG,EAAGwlG,EAAqBG,EAAQhB,KACnFjrG,KAAKsqG,sBAAuB,IAG3B15C,EAAS73E,QAAU6yH,EAAYc,oBAAoBpmG,EAAGwlG,EAAqBG,EAAQhB,KACxFM,EAAgBvrG,KAAKysG,sBAAqB,EAAOrB,EAAeW,EAAcE,EAAQE,EAAaC,EAAiBC,EAAgBT,GACpI5rG,KAAKqqG,iBAAkB,GAG/B,IAAKkB,EAAe,CAChB,IAAI36C,EAMA,KAAM,IAAI/2E,OAAM,8DALZ4xH,GAAkBzrG,KAAK0rG,oBAAoBN,EAAeH,EAAeE,EAAUN,EACvFU,GAAgBvrG,KAAKwrG,gBAAgBH,EAAaI,EAAiBR,EAAeC,EAAchwH,EAAMiwH,EAAUN,EAAW7qG,KAAKwqG,kBAChIxqG,KAAKqqG,iBAAkB,EAM/B,GAAIM,GAAa,EAAG,CAChB,GAAIgC,GAAmBprH,EAAWY,IAAI,KACtC,IAAIwqH,IACAA,EAAiB5L,oBAAqB,EAClC4L,EAAiB3qH,IAAI,UAAU,CAC/B,GAAI4qH,GAAsBD,EAAiBxqH,IAAI,QAC/C,IAAIyqH,GAAuBA,EAAoB5qH,IAAI,aAAc,CAC7D,GAAI6qH,GAAUD,EAAoBzqH,IAAI,YAClC0qH,IAA4B,WAAjBA,EAAQ1kH,OACnB6X,KAAKuqG,wBAAyB,IAK9CvqG,KAAK8sG,kBAAoBH,EACzB3sG,KAAKG,QAAU5e,EAAWY,IAAI,SAAWmD,GAASnD,IAAI,YACtD6d,KAAK+sG,QAAUxrH,EAAWY,IAAI,SAAWmD,GAASnD,IAAI,YACtD6d,KAAKgtG,KAAOzrH,EAAWY,IAAI,QAAU6d,KAAKG,QAE9C,IAAKorG,IAAkBvrG,KAAKuqG,uBACxB,KAAM,IAAI1wH,OAAM,8DAEpBmmB,MAAKitG,eAAiB1B,EAuL1B,MArLAx3G,QAAO+H,eAAesuG,EAAcp2G,UAAW,QAC3C7R,IAAK,WAID,WAHmC,KAAxB6d,KAAKktG,iBACZltG,KAAKktG,eAAiB,GAAIC,KAEvBntG,KAAKktG,gBAEhBnxG,YAAY,EACZC,cAAc,IAElBouG,EAAcp2G,UAAUy4G,qBAAuB,SAAUW,EAAWx8C,EAAUm7C,EAAcE,EAAQE,EAAaC,EAAiBC,EAAgB1B,GAC9I,MAAIyC,GACOzC,EAAU0C,YAAYz8C,EAAUu7C,EAAaE,GAG7C1B,EAAU2C,aAAa18C,EAAUm7C,EAAcE,EAAQG,IAGtEhC,EAAcp2G,UAAUw3G,gBAAkB,SAAU9xF,EAAIk3C,EAAUq6C,EAAeC,EAActsF,EAAOusF,EAAUN,EAAW0C,GACvH,GAGI/rF,GAHAgsF,EAAW,GAAInwH,YAAW,GAAK4tH,EAAclyH,OAAS2gC,EAAG3gC,QACzDG,EAAI,EACJC,EAAI,CAER,IAAIy3E,EAEA,IADApvC,EAAInpC,KAAKY,IAAI,GAAI23E,EAAS73E,QACnBG,EAAIsoC,IAAKtoC,EACZs0H,EAASp0H,OAAOC,SAASH,EAAEI,WAAY,KAAOs3E,EAASx3E,OAAOC,SAASH,EAAEI,WAAY,IAG7F,MAAOJ,EAAI,IACPs0H,EAASt0H,KAAO8mB,KAAKyqG,sBAAsBtxH,IAE/C,KAAKA,EAAI,EAAGqoC,EAAIypF,EAAclyH,OAAQI,EAAIqoC,IAAKroC,EAC3Cq0H,EAASt0H,KAAO+xH,EAAc7xH,OAAOC,SAASF,EAAEG,WAAY,IAMhE,KAJAk0H,EAASt0H,KAAe,IAAR0lC,EAChB4uF,EAASt0H,KAAQ0lC,GAAS,EAAK,IAC/B4uF,EAASt0H,KAAQ0lC,GAAS,GAAM,IAChC4uF,EAASt0H,KAAQ0lC,IAAU,GAAM,IAC5BzlC,EAAI,EAAGqoC,EAAI9H,EAAG3gC,OAAQI,EAAIqoC,IAAKroC,EAChCq0H,EAASt0H,KAAOwgC,EAAGtgC,OAAOC,SAASF,EAAEG,WAAY,IAEjD6xH,IAAY,IAAMoC,IAClBC,EAASt0H,KAAO,IAChBs0H,EAASt0H,KAAO,IAChBs0H,EAASt0H,KAAO,IAChBs0H,EAASt0H,KAAO,IAEpB,IAAIu0H,GAAOztG,KAAK0tG,KAAKD,KAAKD,EAAU,EAAGt0H,GACnCy0H,EAAmB9C,GAAa,CACpC,IAAIM,GAAY,EACZ,IAAKhyH,EAAI,EAAGA,EAAI,KAAMA,EAClBs0H,EAAOztG,KAAK0tG,KAAKD,KAAKA,EAAM,EAAGE,EAGvC,IAEIC,GAFArC,EAAgBkC,EAAKnvH,SAAS,EAAGqvH,EAGrC,IAAIxC,GAAY,EAAG,CACf,IAAKjyH,EAAI,EAAGA,EAAI,KAAMA,EAClBs0H,EAASp0H,OAAOC,SAASH,EAAEI,WAAY,KAAO0mB,KAAKyqG,sBAAsBrxH,OAAOC,SAASH,EAAEI,WAAY,IAE3G,KAAKH,EAAI,EAAGqoC,EAAI9H,EAAG3gC,OAAQI,EAAIqoC,IAAKroC,EAChCq0H,EAASt0H,KAAOwgC,EAAGtgC,OAAOC,SAASF,EAAEG,WAAY,IAGrDs0H,GADS,GAAIC,IAAkBtC,GACZuC,cAAc9tG,KAAK0tG,KAAKD,KAAKD,EAAU,EAAGt0H,IAC7DsoC,EAAI+pF,EAAcxyH,MAClB,IAAIg1H,GAAa,GAAI1wH,YAAWmkC,EAChC,KAAKroC,EAAI,EAAGA,GAAK,KAAMA,EAAG,CACtB,IAAK,GAAIwL,GAAI,EAAGA,EAAI68B,IAAK78B,EACrBopH,EAAW30H,OAAOC,SAASsL,EAAErL,WAAY,KAAOiyH,EAAcnyH,OAAOC,SAASsL,EAAErL,WAAY,KAAOH,CAGvGy0H,GADS,GAAIC,IAAkBE,GACZD,cAAcF,GAErC,IAAKz0H,EAAI,EAAGqoC,EAAIosF,EAAU70H,OAAQI,EAAIqoC,IAAKroC,EACvC,GAAI+xH,EAAa9xH,OAAOC,SAASF,EAAEG,WAAY,OAASs0H,EAAUx0H,OAAOC,SAASF,EAAEG,WAAY,KAC5F,MAAO,UAOf,KAAKH,EAAI,EAAGqoC,GADZosF,EADS,GAAIC,IAAkBtC,GACZuC,cAAc9tG,KAAKyqG,wBACZ1xH,OAAQI,EAAIqoC,IAAKroC,EACvC,GAAI+xH,EAAa9xH,OAAOC,SAASF,EAAEG,WAAY,OAASs0H,EAAUx0H,OAAOC,SAASF,EAAEG,WAAY,KAC5F,MAAO,KAInB,OAAOiyH,IAEXnB,EAAcp2G,UAAU03G,oBAAsB,SAAU96C,EAAUq6C,EAAeE,EAAUN,GAKvF,IAJA,GAAI2C,GAAW,GAAInwH,YAAW,IAC1BnE,EAAI,EACJC,EAAI,EACJqoC,EAAInpC,KAAKY,IAAI,GAAI23E,EAAS73E,QACvBG,EAAIsoC,IAAKtoC,EACZs0H,EAASp0H,OAAOC,SAASH,EAAEI,WAAY,KAAOs3E,EAASx3E,OAAOC,SAASH,EAAEI,WAAY,IAEzF,MAAOJ,EAAI,IACPs0H,EAASt0H,KAAO8mB,KAAKyqG,sBAAsBtxH,IAE/C,IAAIs0H,GAAOztG,KAAK0tG,KAAKD,KAAKD,EAAU,EAAGt0H,GACnCy0H,EAAmB9C,GAAa,CACpC,IAAIM,GAAY,EACZ,IAAKhyH,EAAI,EAAGA,EAAI,KAAMA,EAClBs0H,EAAOztG,KAAK0tG,KAAKD,KAAKA,EAAM,EAAGA,EAAK10H,OAG5C,IACImyH,EACJ,IAAIC,GAAY,EAAG,CACfD,EAAeD,CACf,IAAI8C,GAAa,GAAI1wH,YAAWswH,EAChC,KAAKx0H,EAAI,GAAIA,GAAK,EAAGA,IAAK,CACtB,IAAK,GAAIwL,GAAI,EAAGA,EAAIgpH,IAAoBhpH,EACpCopH,EAAW30H,OAAOC,SAASsL,EAAErL,WAAY,KAAOm0H,EAAKr0H,OAAOC,SAASsL,EAAErL,WAAY,KAAOH,CAG9F+xH,GADS,GAAI2C,IAAkBE,GACTD,cAAc5C,QAKxCA,GADS,GAAI2C,IAAkBJ,EAAKnvH,SAAS,EAAGqvH,IAC1BG,cAAc7C,EAExC,OAAOC,IAEXd,EAAcp2G,UAAUg6G,uBAAyB,SAAU9oD,EAAcC,GACrE,GAAwB,IAApBnlD,KAAK4qG,YAAwC,IAApB5qG,KAAK4qG,WAAkB,CAChD,GAAIqD,GAAejuG,KAAKkuG,wBAAwBluG,KAAK8sG,kBAAmB9sG,KAAK+sG,QAAS7nD,EAAcC,EAAkBnlD,KAAKitG,gBACvHkB,EAAenuG,KAAKkuG,wBAAwBluG,KAAK8sG,kBAAmB9sG,KAAKG,QAAS+kD,EAAcC,EAAkBnlD,KAAKitG,eAC3H,OAAO,IAAImB,IAAiBH,EAAcE,GAE9C,GAAItuH,GAAMmgB,KAAKquG,gBAAgBnpD,EAAcC,EAAkBnlD,KAAKitG,gBAAgB,EACpF,OAAO,IAAImB,IAAiB,GAAIP,IAAkBhuH,GAAM,GAAIguH,IAAkBhuH,KAElFuqH,EAAcp2G,UAAUk6G,wBAA0B,SAAUvB,EAAkBxkH,EAAM+8D,EAAcC,EAAkBtlE,GAChH,GACIyuH,GADAC,EAAc5B,EAAiBxqH,IAAIgG,EAAKA,KAK5C,IAHIomH,IACAD,EAAMC,EAAYpsH,IAAI,SAErBmsH,EACD,MAAO,IAAIE,GAEf,QAAQF,EAAInmH,MACR,IAAK,OACD,MAAO,IAAIqmH,GACf,KAAK,QACD,MAAO,IAAIC,IAA6BzuG,KAAKquG,gBAAgBnpD,EAAcC,EAAkBtlE,GAAK,GACtG,KAAK,QACD,MAAO,IAAI6uH,IAA6B7uH,EAC5C,KAAK,KACD,MAAO,IAAIguH,IAAkB7tG,KAAKquG,gBAAgBnpD,EAAcC,EAAkBtlE,GAAK,IAE/F,KAAM,IAAI++G,IAAY,gCAE1BwL,EAAcp2G,UAAUq6G,gBAAkB,SAAUnpD,EAAcC,EAAkBomD,EAAeoD,OAClE,KAAzBA,IAAmCA,GAAuB,EAC9D,IACIz1H,GADA2G,EAAM,GAAIxC,YAAWkuH,EAAcxyH,OAAS,EAEhD,KAAKG,EAAI,EAAGA,EAAIqyH,EAAcxyH,SAAUG,EACpC2G,EAAIzG,OAAOC,SAASH,EAAEI,WAAY,KAAOiyH,EAAcnyH,OAAOC,SAASH,EAAEI,WAAY,IAczF,OAZAuG,GAAI3G,KAAsB,IAAfgsE,EACXrlE,EAAI3G,KAAQgsE,GAAgB,EAAK,IACjCrlE,EAAI3G,KAAQgsE,GAAgB,GAAM,IAClCrlE,EAAI3G,KAA0B,IAAnBisE,EACXtlE,EAAI3G,KAAQisE,GAAoB,EAAK,IACjCwpD,IACA9uH,EAAI3G,KAAO,IACX2G,EAAI3G,KAAO,GACX2G,EAAI3G,KAAO,IACX2G,EAAI3G,KAAO,IAEJ8mB,KAAK0tG,KAAKD,KAAK5tH,EAAK,EAAG3G,GACtBoF,SAAS,EAAGjG,KAAKY,IAAIsyH,EAAcxyH,OAAS,EAAG,MAExDqxH,KAGP+C,GAAsB,WACtB,QAASA,KACLntG,KAAK4uG,GAAK,GAAIvxH,aAAY,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EACnG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAC3G,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,KAC7C2iB,KAAK6uG,GAAK,GAAI/I,cAAa,WAAY,UAAW,WAAY,YAAa,UAAW,YAAa,YAAa,SAC5G,YAAa,YAAa,OAAQ,WAAY,YAAa,UAAW,WAAY,YAAa,WAAY,WAC3G,WAAY,WAAY,UAAW,UAAW,WAAY,UAAW,WAAY,YAAa,UAAW,YACxG,YAAa,SAAU,YAAa,YAAa,QAAS,WAAY,YAAa,UAAW,WAAY,YAC1G,WAAY,WAAY,WAAY,WAAY,UAAW,UAAW,WAAY,UAAW,WAAY,WACzG,UAAW,YAAa,YAAa,SAAU,YAAa,YAAa,SAAU,WAAY,YAAa,UAC5G,WAAY,YAAa,WAAY,WAAY,WAAY,YA4EtE,MA1EAqH,GAAKn5G,UAAUy5G,KAAO,SAAU7qG,EAAMtiB,EAAQvH,GAS1C,IARA,GAAI+1H,GAAK,WACL32B,GAAM,UACN42B,GAAM,WACNC,EAAK,UACLC,EAAgBl2H,EAAS,IAAM,GAC/Bm2H,EAAS,GAAI7xH,YAAW4xH,GACxB/1H,EAAI,EACJC,EAAI,EACDD,EAAIH,IAAUG,EACjBg2H,EAAO91H,OAAOC,SAASH,EAAEI,WAAY,KAAOspB,EAAKtiB,IAErD4uH,GAAOh2H,KAAO,GAEd,KADA,GAAIsoC,GAAIytF,EAAe,EAChB/1H,EAAIsoC,GACP0tF,EAAOh2H,KAAO,CAElBg2H,GAAOh2H,KAAQH,GAAU,EAAK,IAC9Bm2H,EAAOh2H,KAAQH,GAAU,EAAK,IAC9Bm2H,EAAOh2H,KAAQH,GAAU,GAAM,IAC/Bm2H,EAAOh2H,KAAQH,GAAU,GAAM,IAC/Bm2H,EAAOh2H,KAAQH,IAAW,GAAM,IAChCm2H,EAAOh2H,KAAO,EACdg2H,EAAOh2H,KAAO,EACdg2H,EAAOh2H,KAAO,CACd,IAAIi2H,GAAI,GAAIrJ,YAAW,GACvB,KAAK5sH,EAAI,EAAGA,EAAI+1H,GAAe,CAC3B,IAAK91H,EAAI,EAAGA,EAAI,KAAMA,EAAGD,GAAK,EAC1Bi2H,EAAE/1H,OAAOC,SAASF,EAAEG,WAAY,KAAO41H,EAAO91H,OAAOC,SAASH,EAAEI,WAAY,KACvE41H,EAAOh2H,EAAI,IAAM,EACjBg2H,EAAOh2H,EAAI,IAAM,GACjBg2H,EAAOh2H,EAAI,IAAM,EAE1B,IAAIikC,GAAI2xF,EACJtqH,EAAI2zF,EACJ1zF,EAAIsqH,EACJ5oG,EAAI6oG,EACJvyH,MAAI,GACJ2yH,MAAI,EACR,KAAKj2H,EAAI,EAAGA,EAAI,KAAMA,EAAG,CACjBA,EAAI,IACJsD,EAAK+H,EAAIC,GAAOD,EAAI2hB,EACpBipG,EAAIj2H,GAECA,EAAI,IACTsD,EAAK0pB,EAAI3hB,GAAO2hB,EAAI1hB,EACpB2qH,EAAK,EAAIj2H,EAAI,EAAK,IAEbA,EAAI,IACTsD,EAAI+H,EAAIC,EAAI0hB,EACZipG,EAAK,EAAIj2H,EAAI,EAAK,KAGlBsD,EAAIgI,GAAKD,GAAK2hB,GACdipG,EAAK,EAAIj2H,EAAK,GAElB,IAAImvC,GAAWniB,EACXtoB,EAAWs/B,EAAI1gC,EAAIujB,KAAK6uG,GAAGz1H,OAAOC,SAASF,EAAEG,WAAY,KAAO61H,EAAE/1H,OAAOC,SAAS+1H,EAAE91H,WAAY,KAAQ,EACxG4jB,EAAS8C,KAAK4uG,GAAGx1H,OAAOC,SAASF,EAAEG,WAAY,IACnD6sB,GAAI1hB,EACJA,EAAID,EACJA,EAAKA,GAAM3G,GAAWqf,EAAWrf,IAAa,GAAKqf,GAAa,EAChEigB,EAAImL,EAERwmF,EAAMA,EAAK3xF,EAAK,EAChBg7D,EAAMA,EAAK3zF,EAAK,EAChBuqH,EAAMA,EAAKtqH,EAAK,EAChBuqH,EAAMA,EAAK7oG,EAAK,EAEpB,MAAO,IAAI9oB,aAAiB,IAALyxH,EAAYA,GAAM,EAAK,IAAOA,GAAM,GAAM,IAAOA,IAAO,GAAM,IAAW,IAAL32B,EACtFA,GAAM,EAAK,IAAOA,GAAM,GAAM,IAAOA,IAAO,GAAM,IAAW,IAAL42B,EAAYA,GAAM,EAAK,IAAOA,GAAM,GAAM,IAClGA,IAAO,GAAM,IAAW,IAALC,EAAYA,GAAM,EAAK,IAAOA,GAAM,GAAM,IAAOA,IAAO,GAAM,OAGnF7B,KAGPkC,GAAyB,WACzB,QAASA,MA6GT,MA3GAA,GAAQr7G,UAAUs7G,aAAe,SAAU5sH,EAAG8+B,GAC1C,MAAQ9+B,KAAM8+B,EAAM9+B,GAAM,GAAK8+B,GAEnC6tF,EAAQr7G,UAAUu7G,OAAS,SAAU7sH,GACjC,MAAOsd,MAAKsvG,aAAa5sH,EAAG,GAAKsd,KAAKsvG,aAAa5sH,EAAG,IAAMsd,KAAKsvG,aAAa5sH,EAAG,KAErF2sH,EAAQr7G,UAAUw7G,YAAc,SAAU9sH,GACtC,MAAOsd,MAAKsvG,aAAa5sH,EAAG,GAAKsd,KAAKsvG,aAAa5sH,EAAG,IAAMsd,KAAKsvG,aAAa5sH,EAAG,KAErF2sH,EAAQr7G,UAAUy7G,aAAe,SAAU/sH,GACvC,MAAOsd,MAAKsvG,aAAa5sH,EAAG,GAAKsd,KAAKsvG,aAAa5sH,EAAG,IAAOA,IAAM,GAEvE2sH,EAAQr7G,UAAU07G,kBAAoB,SAAUhtH,GAC5C,MAAOsd,MAAKsvG,aAAa5sH,EAAG,IAAMsd,KAAKsvG,aAAa5sH,EAAG,IAAOA,IAAM,IAExE2sH,EAAQr7G,UAAU27G,MAAQ,SAAU/sG,EAAMtiB,EAAQvH,GAoB9C,IAnBA,GAkBII,GAlBA21H,EAAK,WACL32B,EAAK,WACL42B,EAAK,WACLC,EAAK,WACLY,EAAK,WACLC,EAAK,WACLC,EAAK,UACLC,EAAK,WACLprH,GAAK,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACrG,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5G,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5G,WAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5G,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAC5G,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5G,WAAY,WAAY,WAAY,WAAY,YAChDsqH,EAA8C,GAA/B52H,KAAK6Q,MAAMnQ,EAAS,GAAK,IACxCm2H,EAAS,GAAI7xH,YAAW4xH,GACxB/1H,EAAI,EAEDA,EAAIH,IAAUG,EACjBg2H,EAAO91H,OAAOC,SAASH,EAAEI,WAAY,KAAOspB,EAAKtiB,IAErD4uH,GAAOh2H,KAAO,GAEd,KADA,GAAIsoC,GAAIytF,EAAe,EAChB/1H,EAAIsoC,GACP0tF,EAAOh2H,KAAO,CAElBg2H,GAAOh2H,KAAO,EACdg2H,EAAOh2H,KAAO,EACdg2H,EAAOh2H,KAAO,EACdg2H,EAAOh2H,KAAQH,IAAW,GAAM,IAChCm2H,EAAOh2H,KAAQH,GAAU,GAAM,IAC/Bm2H,EAAOh2H,KAAQH,GAAU,GAAM,IAC/Bm2H,EAAOh2H,KAAQH,GAAU,EAAK,IAC9Bm2H,EAAOh2H,KAAQH,GAAU,EAAK,GAC9B,IAAIo2H,GAAI,GAAIa,aAAY,GACxB,KAAK92H,EAAI,EAAGA,EAAI+1H,GAAe,CAC3B,IAAK91H,EAAI,EAAGA,EAAI,KAAMA,EAClBg2H,EAAE/1H,OAAOC,SAASF,EAAEG,WAAY,KAAQ41H,EAAO91H,OAAOC,SAASH,EAAEI,WAAY,MAAQ,GAChF41H,EAAOh2H,EAAI,IAAM,GACjBg2H,EAAOh2H,EAAI,IAAM,EAClBg2H,EAAOh2H,EAAI,GACfA,GAAK,CAET,KAAKC,EAAI,GAAIA,EAAI,KAAMA,EACnBg2H,EAAE/1H,OAAOC,SAASF,EAAEG,WAAY,KAAQ0mB,KAAK0vG,kBAAkBP,EAAEh2H,EAAI,IACjEg2H,EAAEh2H,EAAI,GACN6mB,KAAKyvG,aAAaN,EAAEh2H,EAAI,KAAOg2H,EAAEh2H,EAAI,IAAO,CAEpD,IAAIgkC,GAAI2xF,EACJtqH,EAAI2zF,EACJ1zF,EAAIsqH,EACJ5oG,EAAI6oG,EACJvyH,EAAImzH,EACJR,EAAIS,EACJtrH,EAAIurH,EACJz4C,EAAI04C,EACJE,MAAK,GACLC,MAAK,EACT,KAAK/2H,EAAI,EAAGA,EAAI,KAAMA,EAClB82H,EAAK54C,EACDr3D,KAAKwvG,YAAY/yH,IACfA,EAAI2yH,GAAO3yH,EAAI8H,GACjBI,EAAEvL,OAAOC,SAASF,EAAEG,WAAY,KAChC61H,EAAE/1H,OAAOC,SAASF,EAAEG,WAAY,KACpC42H,EAAKlwG,KAAKuvG,OAAOpyF,IAAOA,EAAI34B,EAAM24B,EAAI14B,EAAMD,EAAIC,GAChD4yE,EAAI9yE,EACJA,EAAI6qH,EACJA,EAAI3yH,EACJA,EAAK0pB,EAAI8pG,EAAM,EACf9pG,EAAI1hB,EACJA,EAAID,EACJA,EAAI24B,EACJA,EAAK8yF,EAAKC,EAAM,CAEpBpB,GAAMA,EAAK3xF,EAAK,EAChBg7D,EAAMA,EAAK3zF,EAAK,EAChBuqH,EAAMA,EAAKtqH,EAAK,EAChBuqH,EAAMA,EAAK7oG,EAAK,EAChBypG,EAAMA,EAAKnzH,EAAK,EAChBozH,EAAMA,EAAKT,EAAK,EAChBU,EAAMA,EAAKvrH,EAAK,EAChBwrH,EAAMA,EAAK14C,EAAK,EAEpB,MAAO,IAAIh6E,aAAayxH,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAa,IAAP,EAAc32B,GAAM,GAAM,IAAOA,GAAM,GAAM,IACvHA,GAAM,EAAK,IAAa,IAAP,EAAc42B,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAa,IAAP,EAAcC,GAAM,GAAM,IAChHA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAa,IAAP,EAAcY,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAa,IAAP,EACzGC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAa,IAAP,EAAcC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAChH,IAAP,EAAcC,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAa,IAAP,KAGtEV,KAGPc,GAAyB,WACzB,QAASA,KACLnwG,KAAK6uG,IAAM,GAAIuB,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,WACpE,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,UAAY,YAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,WAC7D,GAAIA,IAAQ,WAAY,WAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,WAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,UAAY,YAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,WAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,UAAY,WAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,UAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,WAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,WAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,UAAY,WAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,UAAY,YAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,UAAY,YAC7D,GAAIA,IAAQ,UAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,IAAQ,WAAY,YAAa,GAAIA,IAAQ,WAAY,WAC7D,GAAIA,IAAQ,WAAY,WAAa,GAAIA,IAAQ,WAAY,YAC7D,GAAIA,I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,IAAM,IAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAClE,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAClE,EAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAAM,EAAM,GAAM,IAAM,IAClE,IAAM,GAAM,IAAM,IAAM,EAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAClE,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAClE,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,IAClE,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAM,IAClE,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAClE,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAClE,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAClE,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAClE,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,GAClE,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAClE,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAClE,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAClE,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,EAAM,IAAM,GAClE,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAClE,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAClE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"}