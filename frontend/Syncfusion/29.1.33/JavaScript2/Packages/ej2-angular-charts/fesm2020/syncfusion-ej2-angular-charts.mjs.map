{"version":3,"file":"syncfusion-ej2-angular-charts.mjs","sources":["../../src/chart/trendlines.directive.ts","../../src/chart/segments.directive.ts","../../src/chart/series.directive.ts","../../src/chart/striplines.directive.ts","../../src/chart/categories.directive.ts","../../src/chart/multilevellabels.directive.ts","../../src/chart/axes.directive.ts","../../src/chart/rows.directive.ts","../../src/chart/columns.directive.ts","../../src/chart/rangecolorsettings.directive.ts","../../src/chart/annotations.directive.ts","../../src/chart/selecteddataindexes.directive.ts","../../src/chart/indicators.directive.ts","../../src/chart/chart.component.ts","../../src/chart/chart.module.ts","../../src/chart/chart-all.module.ts","../../src/accumulation-chart/series.directive.ts","../../src/accumulation-chart/annotations.directive.ts","../../src/accumulation-chart/accumulationchart.component.ts","../../src/accumulation-chart/accumulationchart.module.ts","../../src/accumulation-chart/accumulationchart-all.module.ts","../../src/range-navigator/series.directive.ts","../../src/range-navigator/rangenavigator.component.ts","../../src/range-navigator/rangenavigator.module.ts","../../src/range-navigator/rangenavigator-all.module.ts","../../src/sparkline/rangebandsettings.directive.ts","../../src/sparkline/sparkline.component.ts","../../src/sparkline/sparkline.module.ts","../../src/sparkline/sparkline-all.module.ts","../../src/smithchart/series.directive.ts","../../src/smithchart/smithchart.component.ts","../../src/smithchart/smithchart.module.ts","../../src/smithchart/smithchart-all.module.ts","../../src/stock-chart/trendlines.directive.ts","../../src/stock-chart/series.directive.ts","../../src/stock-chart/axes.directive.ts","../../src/stock-chart/rows.directive.ts","../../src/stock-chart/annotations.directive.ts","../../src/stock-chart/selecteddataindexes.directive.ts","../../src/stock-chart/periods.directive.ts","../../src/stock-chart/stockevents.directive.ts","../../src/stock-chart/indicators.directive.ts","../../src/stock-chart/stockchart.component.ts","../../src/stock-chart/stockchart.module.ts","../../src/stock-chart/stockchart-all.module.ts","../../src/bullet-chart/ranges.directive.ts","../../src/bullet-chart/bulletchart.component.ts","../../src/bullet-chart/bulletchart.module.ts","../../src/bullet-chart/bulletchart-all.module.ts","../../src/chart3d/series.directive.ts","../../src/chart3d/axes.directive.ts","../../src/chart3d/rows.directive.ts","../../src/chart3d/columns.directive.ts","../../src/chart3d/selecteddataindexes.directive.ts","../../src/chart3d/chart3d.component.ts","../../src/chart3d/chart3d.module.ts","../../src/chart3d/chart3d-all.module.ts","../../src/circularchart3d/series.directive.ts","../../src/circularchart3d/selecteddataindexes.directive.ts","../../src/circularchart3d/circularchart3d.component.ts","../../src/circularchart3d/circularchart3d.module.ts","../../src/circularchart3d/circularchart3d-all.module.ts","../../syncfusion-ej2-angular-charts.ts"],"sourcesContent":["import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['accessibility', 'animation', 'backwardForecast', 'dashArray', 'enableTooltip', 'fill', 'forwardForecast', 'intercept', 'legendShape', 'marker', 'name', 'period', 'polynomialOrder', 'type', 'visible', 'width'];\nlet outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-series-collection>\n * <e-series>\n * <e-trendlines>\n * <e-trendline>\n * </e-trendline>\n * </e-trendlines>\n * </e-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-series>e-trendlines>e-trendline',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class TrendlineDirective extends ComplexBase<TrendlineDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Defines the type of trendline used in the series. \n     * Available types are: \n     * * Linear - A straight line that shows the general direction of data. \n     * * Exponential - A curve that fits data with exponential growth or decay. \n     * * Polynomial - A curve that fits data with a polynomial function. \n     * * Power - A curve that represents data with a power function. \n     * * Logarithmic - A curve that fits data with a logarithmic scale. \n     * * MovingAverage - A trendline that smoothens data using a moving average calculation.\n     * @default 'Linear'\n     */\n    public type: any;\n    /** \n     * Options to improve accessibility for chart trendline elements.\n     */\n    public accessibility: any;\n    /** \n     * Options to customize the animation for trendlines.\n     */\n    public animation: any;\n    /** \n     * Defines the period by which the trend is to be backward forecasted.\n     * @default 0\n     */\n    public backwardForecast: any;\n    /** \n     * Configures the pattern of dashes and gaps in the trendline stroke using the `dashArray` property.\n     * @default ''\n     */\n    public dashArray: any;\n    /** \n     * Enables or disables the tooltip for the trendline using the `enableTooltip` property. By default, it is set to true.\n     * @default true\n     */\n    public enableTooltip: any;\n    /** \n     * The fill color for the trendline, which accepts values in hex or rgba as valid CSS color strings.\n     * @default ''\n     */\n    public fill: any;\n    /** \n     * Defines the period by which the trend must be forward forecasted.\n     * @default 0\n     */\n    public forwardForecast: any;\n    /** \n     * Specifies the intercept value of the trendline.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public intercept: any;\n    /** \n     * The `legendShape` property defines the shape used to represent the trendline in the chart legend.\n     * @default 'SeriesType'\n     */\n    public legendShape: any;\n    /** \n     * Options for customizing the markers for trendlines, including shape, size, color, and other visual aspects.\n     * @deprecated \n     */\n    public marker: any;\n    /** \n     * The `name` property is used to assign a descriptive name to the trendline, which will be displayed in the chart as a legend.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * Defines the period, the price changes over which will be considered to predict the moving average trendline.\n     * @default 2\n     */\n    public period: any;\n    /** \n     * Defines the polynomial order of the polynomial trendline.\n     * @default 2\n     */\n    public polynomialOrder: any;\n    /** \n     * The `visible` property controls the display of the trendline. If set to true, the trendline will be rendered on the chart. If set to false, the trendline will be hidden.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * Defines the width of the trendline.\n     * @default 1\n     */\n    public width: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Trendline Array Directive\n * @private\n */\n@Directive({\n    selector: 'e-series>e-trendlines',\n    queries: {\n        children: new ContentChildren(TrendlineDirective)\n    },\n})\nexport class TrendlinesDirective extends ArrayBase<TrendlinesDirective> {\n    constructor() {\n        super('trendlines');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['color', 'dashArray', 'value'];\nlet outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-series-collection>\n * <e-series>\n * <e-segments>\n * <e-segment>\n * </e-segment>\n * </e-segments>\n * </e-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-series>e-segments>e-segment',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class SegmentDirective extends ComplexBase<SegmentDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Defines the fill color for the region using a color name, hex code, or rgba value.\n     * @default null\n     */\n    public color: any;\n    /** \n     * Specifies the dash pattern for the stroke of the series. The string format allows defining various dash and gap lengths.\n     * @default '0'\n     */\n    public dashArray: any;\n    /** \n     * Defines the starting point of region.\n     * @default null\n     */\n    public value: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Segment Array Directive\n * @private\n */\n@Directive({\n    selector: 'e-series>e-segments',\n    queries: {\n        children: new ContentChildren(SegmentDirective)\n    },\n})\nexport class SegmentsDirective extends ArrayBase<SegmentsDirective> {\n    constructor() {\n        super('segments');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { TrendlinesDirective } from './trendlines.directive';\nimport { SegmentsDirective } from './segments.directive';\n\nlet input: string[] = ['accessibility', 'animation', 'bearFillColor', 'binInterval', 'border', 'boxPlotMode', 'bullFillColor', 'cardinalSplineTension', 'close', 'colorName', 'columnFacet', 'columnSpacing', 'columnWidth', 'columnWidthInPixel', 'connector', 'cornerRadius', 'dashArray', 'dataSource', 'dragSettings', 'drawType', 'emptyPointSettings', 'enableComplexProperty', 'enableSolidCandles', 'enableTooltip', 'errorBar', 'fill', 'groupName', 'high', 'intermediateSumIndexes', 'isClosed', 'legendImageUrl', 'legendShape', 'low', 'marker', 'maxRadius', 'minRadius', 'name', 'negativeFillColor', 'noRisers', 'nonHighlightStyle', 'opacity', 'open', 'paretoOptions', 'pointColorMapping', 'query', 'segmentAxis', 'segments', 'selectionStyle', 'showMean', 'showNearestTooltip', 'showNormalDistribution', 'showOutliers', 'size', 'splineType', 'stackingGroup', 'step', 'sumIndexes', 'summaryFillColor', 'tooltipFormat', 'tooltipMappingName', 'trendlines', 'type', 'unSelectedStyle', 'visible', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName', 'yName', 'zOrder'];\nlet outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-series-collection>\n * <e-series></e-series>\n * </e-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-series-collection>e-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childTrendlines: new ContentChild(TrendlinesDirective), \n        childSegments: new ContentChild(SegmentsDirective)\n    }\n})\nexport class SeriesDirective extends ComplexBase<SeriesDirective> {\n    public directivePropList: any;\n\t\n    public childTrendlines: any;\n    public childSegments: any;\n    public tags: string[] = ['trendlines', 'segments'];\n    /** \n     * The type of the series determines the visual representation of the data. \n     * Available series types include: \n     * * Line - Draws a line series. \n     * * Column - Draws a column series. \n     * * Area - Draws an area series. \n     * * Bar - Draws a bar series. \n     * * Histogram - Draws a histogram series. \n     * * StackingColumn - Draws a stacking column series. \n     * * StackingArea - Draws a stacking area series. \n     * * StackingBar - Draws a stacking bar series. \n     * * StepLine - Draws a step line series. \n     * * StepArea - Draws a step area series. \n     * * Scatter - Draws a scatter series. \n     * * Spline - Draws a spline series. \n     * * StackingColumn100 - Draws a 100% stacked column series. \n     * * StackingBar100 - Draws a 100% stacked bar series. \n     * * StackingArea100 - Draws a 100% stacked area series. \n     * * RangeColumn - Draws a range column series. \n     * * Hilo - Draws a Hilo series. \n     * * HiloOpenClose - Draws a Hilo Open Close series. \n     * * Waterfall - Draws a waterfall series. \n     * * RangeArea - Draws a range area series. \n     * * SplineRangeArea - Draws a spline range area series. \n     * * Bubble - Draws a bubble series. \n     * * Candle - Draws a candle series. \n     * * Polar - Draws a polar series. \n     * * Radar - Draws a radar series. \n     * * BoxAndWhisker - Draws a box and whisker series. \n     * * Pareto - Draws a Pareto series.\n     * @default 'Line'\n     */\n    public type: any;\n    /** \n     * Options to improve accessibility for series elements.\n     */\n    public accessibility: any;\n    /** \n     * Options for customizing the animation of the series. \n     * By default, animation is enabled with a duration of 1000 milliseconds (about 1 second). It can be disabled by setting enable to `false`. \n     * The following properties are supported in animation: \n     * * enable: If set to true, the series is animated on initial loading. \n     * * duration: The duration of the animation in milliseconds. \n     * * delay: The delay before the animation starts, in milliseconds.\n     */\n    public animation: any;\n    /** \n     * This property is used in financial charts to visualize price movements in stocks. \n     * It defines the color of the candle/point when the opening price is less than the closing price.\n     * @default null\n     */\n    public bearFillColor: any;\n    /** \n     * The `binInterval` property controls the width of each bin and the interval between bins for histogram points.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public binInterval: any;\n    /** \n     * Options for customizing the border of the series. \n     * > Note that this property is applicable only for `Column` and `Bar` type series.\n     */\n    public border: any;\n    /** \n     * Specifies the box plot mode for the box and whisker chart series. \n     * The available modes are: \n     * Exclusive - Renders the series based on the exclusive mode. \n     * Inclusive - Renders the series based on the inclusive mode. \n     * Normal - Renders the series based on the normal mode.\n     * @default 'Normal'\n     */\n    public boxPlotMode: any;\n    /** \n     * This property is used in financial charts to visualize price movements in stocks. \n     * It defines the color of the candle/point when the opening price is higher than the closing price.\n     * @default null\n     */\n    public bullFillColor: any;\n    /** \n     * Specifies the tension parameter for cardinal splines. This affects the curvature of the spline.\n     * @default 0.5\n     */\n    public cardinalSplineTension: any;\n    /** \n     * The data source field that contains the close value. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public close: any;\n    /** \n     * The data source field that contains the color mapping value. \n     * It is applicable for range color mapping.\n     */\n    public colorName: any;\n    /** \n     * Defines the shape of the data in a column and bar chart. \n     * Available shapes are: \n     * * Rectangle: Displays the data in a column and bar chart with a rectangular shape. \n     * * Cylinder: Displays the data in a column and bar chart with a cylindrical shape.\n     * @default 'Rectangle'\n     */\n    public columnFacet: any;\n    /** \n     * This property determines the space between columns in a column or bar chart. \n     * > Note that it takes a value from 0 to 1.\n     * @default 0\n     */\n    public columnSpacing: any;\n    /** \n     * The `columnWidth` property can be used to customize the width of the columns in a column series. \n     * > Note that if the series type is histogram, the default value is 1; otherwise, it is 0.7.\n     * @default null\n     * @aspdefaultvalueignore \n     * @blazordefaultvalue Double.NaN\n     */\n    public columnWidth: any;\n    /** \n     * To render the column series points with a specific column width in pixels.\n     * @default null\n     * @aspdefaultvalueignore \n     * @blazordefaultvalue Double.NaN\n     */\n    public columnWidthInPixel: any;\n    /** \n     * Specifies the appearance of the line connecting adjacent points in waterfall charts.\n     */\n    public connector: any;\n    /** \n     * The `cornerRadius` property specifies the radius for the corners of the column series points to create a rounded appearance in the chart.\n     */\n    public cornerRadius: any;\n    /** \n     * Defines the pattern of dashes and gaps used to stroke the lines in `Line` type series.\n     * @default ''\n     */\n    public dashArray: any;\n    /** \n     * Specifies the data source for the series. It can be an array of JSON objects, or an instance of DataManager. \n     * \n     * @default ''\n     */\n    public dataSource: any;\n    /** \n     * Customize the drag settings for the series with this property to configure drag behavior in the chart.\n     */\n    public dragSettings: any;\n    /** \n     * Specifies the type of series to be drawn in radar or polar charts. \n     * The available options are: \n     * * 'Line' - Renders a line series. \n     * * 'Column' - Renders a column series. \n     * * 'Area' - Renders an area series. \n     * * 'Scatter' - Renders a scatter series. \n     * * 'Spline' - Renders a spline series. \n     * * 'StackingColumn' - Renders a stacking column series. \n     * * 'StackingArea' - Renders a stacking area series. \n     * * 'RangeColumn' - Renders a range column series. \n     * * 'SplineArea' - Renders a spline area series.\n     * @default 'Line'\n     */\n    public drawType: any;\n    /** \n     * Customization options for the appearance of empty points in the series. \n     * `null` or `undefined` values are considered empty points.\n     */\n    public emptyPointSettings: any;\n    /** \n     * This property is used to improve chart performance through data mapping for the series data source.\n     * @default false\n     */\n    public enableComplexProperty: any;\n    /** \n     * This property is applicable for the candle series. \n     * It enables or disables the visual comparison of the current values with previous values in stock charts.\n     * @default false\n     */\n    public enableSolidCandles: any;\n    /** \n     * Controls whether the tooltip for the chart series is enabled or disabled. Set to true to display tooltips on hover, or false to hide them.\n     * @default true\n     */\n    public enableTooltip: any;\n    /** \n     * Options for displaying and customizing error bars for individual points in a series.\n     */\n    public errorBar: any;\n    /** \n     * The fill color for the series, which accepts values in hex or rgba as a valid CSS color string. \n     * It also represents the color of the signal lines in technical indicators. \n     * For technical indicators, the default value is 'blue', and for series, it is null.\n     * @default null\n     */\n    public fill: any;\n    /** \n     * Defines the name that specifies the chart series are mutually exclusive and can be overlaid. \n     * Series in the same group share the same baseline and location on the corresponding axis.\n     * @default ''\n     */\n    public groupName: any;\n    /** \n     * The data source field that contains the high value. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public high: any;\n    /** \n     * Defines the collection of indexes for the intermediate summary columns in waterfall charts.\n     * @default []\n     * @asptype int[]\n     */\n    public intermediateSumIndexes: any;\n    /** \n     * Specifies whether to join the start and end points of a line/area series used in a polar/radar chart to form a closed path.\n     * @default true\n     */\n    public isClosed: any;\n    /** \n     * The URL for the image to be displayed as a legend icon. \n     * > Note that `legendShape` must be set to `Image`.\n     * @default ''\n     */\n    public legendImageUrl: any;\n    /** \n     * Specifies the shape of the legend icon for each series. \n     * Available shapes for legend: \n     * * Circle - Renders a circular icon. \n     * * Rectangle - Renders a rectangular icon. \n     * * Triangle - Renders a triangular icon. \n     * * Diamond - Renders a diamond-shaped icon. \n     * * Cross - Renders a cross-shaped icon. \n     * * HorizontalLine - Renders a horizontal line icon. \n     * * VerticalLine - Renders a vertical line icon. \n     * * Pentagon - Renders a pentagon-shaped icon. \n     * * InvertedTriangle - Renders an inverted triangle-shaped icon. \n     * * SeriesType - Uses the default icon shape based on the series type. \n     * * Image - Renders a custom image for the legend icon.\n     * @default 'SeriesType'\n     */\n    public legendShape: any;\n    /** \n     * The data source field that contains the low value. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public low: any;\n    /** \n     * Options for displaying and customizing markers for individual points in a series.\n     */\n    public marker: any;\n    /** \n     * Specifies the maximum radius for the data points in the series.\n     * @default 3\n     */\n    public maxRadius: any;\n    /** \n     * Specifies the minimum radius for the data points in the series.\n     * @default 1\n     */\n    public minRadius: any;\n    /** \n     * The `name` property allows setting a name for the series, which will be displayed in the legend, identifying different series in the chart, especially when multiple series are present.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * Defines the visual representation of negative changes in waterfall charts.\n     * @default '#C64E4A'\n     */\n    public negativeFillColor: any;\n    /** \n     * When set to true, the step series will be rendered without the vertical lines (risers) connecting the horizontal steps. \n     * > Note this property is only applicable to step series.\n     * @default false\n     */\n    public noRisers: any;\n    /** \n     * The `nonHighlightStyle` property is used to specify custom CSS styles for the non-highlighted series or points.\n     * @default null\n     */\n    public nonHighlightStyle: any;\n    /** \n     * Sets the opacity of the series, with a value between 0 and 1 where 0 is fully transparent and 1 is fully opaque.\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * The data source field that contains the open value. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public open: any;\n    /** \n     * Options for customizing the Pareto line series, including its appearance and behavior in the chart.\n     */\n    public paretoOptions: any;\n    /** \n     * The data source field that contains the color value of a point. \n     * It is applicable for series.\n     * @default ''\n     */\n    public pointColorMapping: any;\n    /** \n     * Specifies a query to select data from the data source. This property is applicable only when the data source is an `ej.DataManager`.\n     * @default ''\n     */\n    public query: any;\n    /** \n     * Defines the axis along which the line series will be split.\n     */\n    public segmentAxis: any;\n    /** \n     * Specifies a collection of regions used to differentiate a line series.\n     */\n    public segments: any;\n    /** \n     * The `selectionStyle` property is used to specify custom CSS styles for the selected series or points.\n     * @default null\n     */\n    public selectionStyle: any;\n    /** \n     * If set to true, the mean value for the box and whisker plot will be visible.\n     * @default true\n     */\n    public showMean: any;\n    /** \n     * Enables or disables the display of tooltips for the nearest data point to the cursor for series.\n     * @default true\n     */\n    public showNearestTooltip: any;\n    /** \n     * Specifies whether to display the normal distribution curve for the histogram series.\n     * @default false\n     */\n    public showNormalDistribution: any;\n    /** \n     * Specifies whether to display outliers in the Box and Whisker chart.\n     * \n     * If set to `true`, outliers will be displayed as individual points beyond the whiskers, representing data points that significantly differ from the rest of the dataset.\n     *If set to `false`, outliers will be hidden, and only the box, median, and whiskers will be rendered.\n     *\n     *Outliers are typically used to identify extreme values in statistical data representation.\n     *     \n     * @default true\n     */\n    public showOutliers: any;\n    /** \n     * The data source field that contains the size value for the y-axis.\n     * @default ''\n     */\n    public size: any;\n    /** \n     * Specifies the type of spline used for rendering. \n     * Available options include: \n     * * Natural - Renders a natural spline. \n     * * Cardinal - Renders a cardinal spline. \n     * * Clamped - Renders a clamped spline. \n     * * Monotonic - Renders a monotonic spline.\n     * @default 'Natural'\n     */\n    public splineType: any;\n    /** \n     * This property allows the grouping of series in stacked column and stacked bar charts. \n     * Any string value can be assigned to the `stackingGroup` property. \n     * Series with the same `stackingGroup` value will be grouped together in the chart.\n     * @default ''\n     */\n    public stackingGroup: any;\n    /** \n     * The `step` property can be used to change the position of the steps in step line, step area, and step range area chart types. \n     * * Left: Steps start from the left side of the 2nd point. \n     * * Center: Steps start between the data points. \n     * * Right: Steps start from the right side of the 1st point.\n     * @default 'Left'\n     */\n    public step: any;\n    /** \n     * Defines the collection of indexes for the overall summary columns in waterfall charts.\n     * @default []\n     * @asptype int[]\n     */\n    public sumIndexes: any;\n    /** \n     * Defines the visual representation of summaries in waterfall charts.\n     * @default '#4E81BC'\n     */\n    public summaryFillColor: any;\n    /** \n     * Use this property to define a custom format for how tooltips are displayed. \n     * \n     * @default ''\n     */\n    public tooltipFormat: any;\n    /** \n     * The data source field that contains the value to be displayed in the tooltip.\n     * @default ''\n     */\n    public tooltipMappingName: any;\n    /** \n     * Defines the collection of trendlines used to predict the trend.\n     */\n    public trendlines: any;\n    /** \n     * The `unSelectedStyle` property is used to specify custom CSS styles for the deselected series or points.\n     * @default null\n     */\n    public unSelectedStyle: any;\n    /** \n     * If set to `true`, the series will be visible. If set to `false`, the series will be hidden.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * Defines the data source field that contains the volume value in candle charts. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public volume: any;\n    /** \n     * The stroke width for the series, applicable only for `Line` type series. \n     * It also represents the stroke width of the signal lines in technical indicators.\n     * @default 1\n     */\n    public width: any;\n    /** \n     * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n     * It is applicable for series and technical indicators. \n     * \n     * @default null\n     */\n    public xAxisName: any;\n    /** \n     * The data source field that contains the x value. \n     * It is applicable to both series and technical indicators.\n     * @default ''\n     */\n    public xName: any;\n    /** \n     * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n     * It is applicable for series and technical indicators. \n     * \n     * @default null\n     */\n    public yAxisName: any;\n    /** \n     * The data source field that contains the y value.\n     * @default ''\n     */\n    public yName: any;\n    /** \n     * The z-order of the series, which controls the stack order of the series. Higher values are drawn on top of lower values.\n     * @default 0\n     */\n    public zOrder: any;\n    @ContentChild('dataLabelTemplate')\n    @Template()\n    public dataLabel_template: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Series Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-chart>e-series-collection',\n    queries: {\n        children: new ContentChildren(SeriesDirective)\n    },\n})\nexport class SeriesCollectionDirective extends ArrayBase<SeriesCollectionDirective> {\n    constructor() {\n        super('series');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['border', 'color', 'dashArray', 'end', 'horizontalAlignment', 'imageUrl', 'isRepeat', 'isSegmented', 'opacity', 'repeatEvery', 'repeatUntil', 'rotation', 'segmentAxisName', 'segmentEnd', 'segmentStart', 'size', 'sizeType', 'start', 'startFromAxis', 'text', 'textStyle', 'verticalAlignment', 'visible', 'zIndex'];\nlet outputs: string[] = [];\n/**\n * StripLine Directive\n * ```html\n * <e-axis>\n * <e-striplines>\n * <e-stripline></e-stripline>\n * </e-striplines>\n * </e-axis>\n * ```\n */\n@Directive({\n    selector: 'e-axis>e-striplines>e-stripline',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StripLineDirective extends ComplexBase<StripLineDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * The `border` property allows customization of the border for the strip line. \n     * It includes options to set the color and width of the border.\n     */\n    public border: any;\n    /** \n     * The `color` property specifies the color of the strip line.\n     * @default '#808080'\n     */\n    public color: any;\n    /** \n     * Specifies the pattern of dashes and gaps used to render the strip line.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public dashArray: any;\n    /** \n     * Specifies the ending value of the strip line.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public end: any;\n    /** \n     * Defines the position of the strip line text horizontally. \n     * Available options are: \n     * * Start: Places the strip line text at the start. \n     * * Middle: Places the strip line text in the middle. \n     * * End: Places the strip line text at the end.\n     * @default 'Middle'\n     */\n    public horizontalAlignment: any;\n    /** \n     * Specifies the URL of the background image for the strip line. The image will be displayed as the background.\n     * @default ''\n     */\n    public imageUrl: any;\n    /** \n     * Specifies whether the strip line is repeated at regular intervals along the axis.\n     * @default false\n     * @aspdefaultvalueignore \n     */\n    public isRepeat: any;\n    /** \n     * Specifies whether the strip line is segmented.\n     * @default false\n     * @aspdefaultvalueignore \n     */\n    public isSegmented: any;\n    /** \n     * Specifies the opacity for the strip line.\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * Specifies the interval at which the strip line is repeated.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public repeatEvery: any;\n    /** \n     * Specifies the maximum value of the interval at which the strip line is repeated.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public repeatUntil: any;\n    /** \n     * Defines the degree of rotation applied to the text on the strip line.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public rotation: any;\n    /** \n     * The name of the axis where the strip line segment is applied.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public segmentAxisName: any;\n    /** \n     * Specifies where a new segment of the strip line on the axis ends.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public segmentEnd: any;\n    /** \n     * Specifies where a new segment of the strip line on the axis begins.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public segmentStart: any;\n    /** \n     * Specifies the size of the strip line when starting from the origin.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public size: any;\n    /** \n     * The `sizeType` property specifies how the size of the strip line is determined.\n     * @default Auto\n     */\n    public sizeType: any;\n    /** \n     * Specifies the starting value of the strip line.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public start: any;\n    /** \n     * If set to true, the strip line is rendered from the axis origin.\n     * @default false\n     */\n    public startFromAxis: any;\n    /** \n     * Defines the text to be displayed on the strip line.\n     * @default ''\n     */\n    public text: any;\n    /** \n     * The `textStyle` property enables customization of the text appearance on the strip line.\n     */\n    public textStyle: any;\n    /** \n     * Defines the position of the strip line text vertically. \n     * Available options are: \n     * * Start: Places the strip line text at the start. \n     * * Middle: Places the strip line text in the middle. \n     * * End: Places the strip line text at the end.\n     * @default 'Middle'\n     */\n    public verticalAlignment: any;\n    /** \n     * If set to true, the strip line on the axis will render.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * Specifies the order of the strip line. \n     * The options are: \n     * * Behind: Places the strip line behind the series elements. \n     * * Over: Places the strip line over the series elements.\n     * @default 'Behind'\n     */\n    public zIndex: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StripLine Array Directive\n * @private\n */\n@Directive({\n    selector: 'e-axis>e-striplines',\n    queries: {\n        children: new ContentChildren(StripLineDirective)\n    },\n})\nexport class StripLinesDirective extends ArrayBase<StripLinesDirective> {\n    constructor() {\n        super('striplines');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['customAttributes', 'end', 'maximumTextWidth', 'start', 'text', 'type'];\nlet outputs: string[] = [];\n/**\n * MultiLevelLabels Directive\n * ```html\n * <e-multilevellabels>\n * <e-multilevellabel>\n * <e-Categories>\n * <e-Category>\n * </e-Category>\n * </e-Categories>\n * </e-multilevellabel>\n * </e-multilevellabels>\n * ```\n */\n@Directive({\n    selector: 'e-multilevellabel>e-categories>e-category',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class CategoryDirective extends ComplexBase<CategoryDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the type of border for labels. \n     * Available border types: \n     * * Rectangle \n     * * Without Top Border \n     * * Without Top and Bottom Border \n     * * Without Border \n     * * Brace \n     * * Curly Brace\n     * @default 'Rectangle'\n     * @aspdefaultvalueignore \n     * @blazordefaultvalueignore \n     */\n    public type: any;\n    /** \n     * Allows adding custom data for multi-level labels.\n     * @default null\n     */\n    public customAttributes: any;\n    /** \n     * Specifies the end value for the multi-level labels.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public end: any;\n    /** \n     * Specifies the maximum width of the text for multi-level labels.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public maximumTextWidth: any;\n    /** \n     * Specifies the starting value for the multi-level labels.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public start: any;\n    /** \n     * Specifies the text to be displayed for the multi-level labels.\n     * @default ''\n     */\n    public text: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Category Array Directive\n * @private\n */\n@Directive({\n    selector: 'e-multilevellabel>e-categories',\n    queries: {\n        children: new ContentChildren(CategoryDirective)\n    },\n})\nexport class CategoriesDirective extends ArrayBase<CategoriesDirective> {\n    constructor() {\n        super('categories');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { CategoriesDirective } from './categories.directive';\n\nlet input: string[] = ['alignment', 'border', 'categories', 'overflow', 'textStyle'];\nlet outputs: string[] = [];\n/**\n * MultiLevelLabel Directive\n * ```html\n * <e-axis>\n * <e-multilevellabels>\n * <e-multilevellabel></e-multilevellabel>\n * </e-multilevellabels>\n * </e-axis>\n * ```\n */\n@Directive({\n    selector: 'e-axis>e-multilevellabels>e-multilevellabel',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childCategories: new ContentChild(CategoriesDirective)\n    }\n})\nexport class MultiLevelLabelDirective extends ComplexBase<MultiLevelLabelDirective> {\n    public directivePropList: any;\n\t\n    public childCategories: any;\n    public tags: string[] = ['categories'];\n    /** \n     * Defines the position of the multi-level labels. \n     * The available options are: \n     * * Near: Places the multi-level labels close to the chart elements. \n     * * Center: Positions the multi-level labels in the center of the chart elements. \n     * * Far: Places the multi-level labels further from the chart elements.\n     * @default 'Center'\n     */\n    public alignment: any;\n    /** \n     * The `border` property allows customization of the border for multi-level labels. \n     * It includes options to set the color, width, and type of the border.\n     */\n    public border: any;\n    /** \n     * Configures multi-level categories for multi-level labels.\n     */\n    public categories: any;\n    /** \n     * Defines the text overflow behavior for multi-level labels. \n     * The available options are: \n     * * Trim: Trims the text that overflows for multi-level labels. \n     * * Wrap: Wraps the text that overflows for multi-level labels. \n     * * None: No text overflow handling for multi-level labels.\n     * @default 'Wrap'\n     */\n    public overflow: any;\n    /** \n     * Options to customize the multi-level labels.\n     */\n    public textStyle: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * MultiLevelLabel Array Directive\n * @private\n */\n@Directive({\n    selector: 'e-axis>e-multilevellabels',\n    queries: {\n        children: new ContentChildren(MultiLevelLabelDirective)\n    },\n})\nexport class MultiLevelLabelsDirective extends ArrayBase<MultiLevelLabelsDirective> {\n    constructor() {\n        super('multilevellabels');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { StripLinesDirective } from './striplines.directive';\nimport { MultiLevelLabelsDirective } from './multilevellabels.directive';\n\nlet input: string[] = ['border', 'coefficient', 'columnIndex', 'crossesAt', 'crossesInAxis', 'crosshairTooltip', 'description', 'desiredIntervals', 'edgeLabelPlacement', 'enableAutoIntervalOnZooming', 'enableScrollbarOnZooming', 'enableTrim', 'enableWrap', 'interval', 'intervalType', 'isIndexed', 'isInversed', 'labelFormat', 'labelIntersectAction', 'labelPadding', 'labelPlacement', 'labelPosition', 'labelRotation', 'labelStyle', 'lineBreakAlignment', 'lineStyle', 'logBase', 'majorGridLines', 'majorTickLines', 'maximum', 'maximumLabelWidth', 'maximumLabels', 'minimum', 'minorGridLines', 'minorTickLines', 'minorTicksPerInterval', 'multiLevelLabels', 'name', 'opposedPosition', 'placeNextToAxisLine', 'plotOffset', 'plotOffsetBottom', 'plotOffsetLeft', 'plotOffsetRight', 'plotOffsetTop', 'rangePadding', 'rowIndex', 'scrollbarSettings', 'skeleton', 'skeletonType', 'span', 'startAngle', 'startFromZero', 'stripLines', 'tabIndex', 'tickPosition', 'title', 'titlePadding', 'titleRotation', 'titleStyle', 'valueType', 'visible', 'zoomFactor', 'zoomPosition'];\nlet outputs: string[] = [];\n/**\n * Axis Directive\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\n@Directive({\n    selector: 'e-axes>e-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childStripLines: new ContentChild(StripLinesDirective), \n        childMultiLevelLabels: new ContentChild(MultiLevelLabelsDirective)\n    }\n})\nexport class AxisDirective extends ComplexBase<AxisDirective> {\n    public directivePropList: any;\n\t\n    public childStripLines: any;\n    public childMultiLevelLabels: any;\n    public tags: string[] = ['stripLines', 'multiLevelLabels'];\n    /** \n     * Configures the appearance of the border around multi-level labels, including the color, width, and type of the border.\n     */\n    public border: any;\n    /** \n     * The `coefficient` value adjusts the size of the polar radar chart's radius. A higher value increases the radius size, while a smaller value decreases it.\n     * @default 100\n     */\n    public coefficient: any;\n    /** \n     * Specifies the index of the column where the axis is associated when the chart area is divided into multiple plot areas using `columns`. \n     * \n     * @default 0\n     */\n    public columnIndex: any;\n    /** \n     * Specifies the value at which the axis line intersects with the vertical axis or vice versa.\n     * @default null\n     */\n    public crossesAt: any;\n    /** \n     * Specifies the name of the axis with which the axis line should intersect.\n     * @default null\n     */\n    public crossesInAxis: any;\n    /** \n     * Options to customize the appearance and behavior of the crosshair tooltip that appears when hovering over the chart.\n     */\n    public crosshairTooltip: any;\n    /** \n     * A description for the axis that provides additional information about its content for screen readers.\n     * @default null\n     */\n    public description: any;\n    /** \n     * The `desiredIntervals` property allows the axis to calculate intervals that are roughly equal to the specified number, promoting a more readable and evenly spaced axis.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public desiredIntervals: any;\n    /** \n     * The `edgeLabelPlacement` property ensures that labels positioned at the edges of the axis do not overlap with the axis boundaries or other chart elements, offering several options to improve chart readability by managing edge labels effectively. \n     * Available options are: \n     * * None: No action will be performed on edge labels. \n     * * Hide: Edge labels will be hidden to prevent overlap. \n     * * Shift: Edge labels will be shifted to fit within the axis bounds without overlapping.\n     * @default 'Shift'\n     */\n    public edgeLabelPlacement: any;\n    /** \n     * If set to true, the axis interval will be calculated automatically based on the zoomed range.\n     * @default true\n     */\n    public enableAutoIntervalOnZooming: any;\n    /** \n     * If set to true, a scrollbar will appear while zooming to help navigate through the zoomed content.\n     * @default true\n     */\n    public enableScrollbarOnZooming: any;\n    /** \n     * If set to true, axis labels will be trimmed based on the `maximumLabelWidth`.\n     * @default false\n     */\n    public enableTrim: any;\n    /** \n     * Specifies whether the axis labels should be wrapped based on the specified `maximumLabelWidth`. \n     * When set to `true`, the axis labels will automatically wrap to fit within the available width defined by `maximumLabelWidth`.\n     * @default false\n     */\n    public enableWrap: any;\n    /** \n     * Specifies the interval for the axis.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public interval: any;\n    /** \n     * The `intervalType` property defines how the intervals on a date-time axis are calculated and displayed. \n     * Available options are: \n     * * Auto: Automatically determines the interval type based on the data and chart settings. \n     * * Years: Sets the interval of the axis in years. \n     * * Months: Sets the interval of the axis in months. \n     * * Days: Sets the interval of the axis in days. \n     * * Hours: Sets the interval of the axis in hours. \n     * * Minutes: Sets the interval of the axis in minutes.\n     * @default 'Auto'\n     */\n    public intervalType: any;\n    /** \n     * If set to true, data points are rendered based on their index.\n     * @default false\n     */\n    public isIndexed: any;\n    /** \n     * If set to true, the axis will be rendered in an inversed manner.\n     * @default false\n     */\n    public isInversed: any;\n    /** \n     * Used to format the axis label. This property accepts global string formats such as `C`, `n1`, `P`, etc. \n     * It also accepts placeholders like `{value}°C`, where `{value}` represents the axis label (e.g., 20°C).\n     * @default ''\n     */\n    public labelFormat: any;\n    /** \n     * Specifies the action to take when axis labels intersect with each other. \n     * The available options are: \n     * * None: Shows all labels without any modification. \n     * * Hide: Hides the label if it intersects with another label. \n     * * Trim: Trims the label text to fit within the available space. \n     * * Wrap: Wraps the label text to fit within the available space. \n     * * MultipleRows: Displays the label text in multiple rows to avoid intersection. \n     * * Rotate45: Rotates the label text by 45 degrees to avoid intersection. \n     * * Rotate90: Rotates the label text by 90 degrees to avoid intersection.\n     * @default Trim\n     */\n    public labelIntersectAction: any;\n    /** \n     * The `labelPadding` property adjusts the distance to ensure a clear space between the axis labels and the axis line.\n     * @default 5\n     */\n    public labelPadding: any;\n    /** \n     * The `labelPlacement` property controls where the category axis labels are rendered in relation to the axis ticks. \n     * Available options are: \n     * * BetweenTicks: Renders the label between the axis ticks. \n     * * OnTicks: Renders the label directly on the axis ticks.\n     * @default 'BetweenTicks'\n     */\n    public labelPlacement: any;\n    /** \n     * The `labelPosition` property determines where the axis labels are rendered in relation to the axis line. \n     * Available options are: \n     * * Inside: Renders the labels inside the axis line. \n     * * Outside: Renders the labels outside the axis line.\n     * @default 'Outside'\n     */\n    public labelPosition: any;\n    /** \n     * The angle to which the axis label gets rotated.\n     * @default 0\n     */\n    public labelRotation: any;\n    /** \n     * This property allows defining various font settings to control how the labels are displayed on the axis.\n     */\n    public labelStyle: any;\n    /** \n     * Determines the alignment of labels when a line break occurs in the axis labels.\n     * @default 'Center'\n     */\n    public lineBreakAlignment: any;\n    /** \n     * Options for customizing the axis lines.\n     */\n    public lineStyle: any;\n    /** \n     * Specifies the base value for a logarithmic axis. \n     * > Note that `valueType` must be set to `Logarithmic` for this feature to work.\n     * @default 10\n     */\n    public logBase: any;\n    /** \n     * Options for customizing major grid lines on the axis.\n     */\n    public majorGridLines: any;\n    /** \n     * Options for customizing major tick lines on the axis.\n     */\n    public majorTickLines: any;\n    /** \n     * Specifies the maximum value of the axis range, which sets the upper bound of the axis and defines the largest value displayed on the chart, helping to control the visible range of data.\n     * @default null\n     */\n    public maximum: any;\n    /** \n     * Specifies the maximum width of an axis label.\n     * @default 34.\n     */\n    public maximumLabelWidth: any;\n    /** \n     * Specifies the maximum number of labels per 100 pixels relative to the axis length.\n     * @default 3\n     */\n    public maximumLabels: any;\n    /** \n     * Specifies the minimum value of the axis range, which sets the lower bound of the axis and defines the smallest value that will be displayed on the chart to control the visible range of data.\n     * @default null\n     */\n    public minimum: any;\n    /** \n     * Options for customizing minor grid lines on the axis.\n     */\n    public minorGridLines: any;\n    /** \n     * Options for customizing minor tick lines on the axis.\n     */\n    public minorTickLines: any;\n    /** \n     * Specifies the number of minor ticks per interval.\n     * @default 0\n     */\n    public minorTicksPerInterval: any;\n    /** \n     * Multi-level labels are used to display hierarchical or grouped labels on the axis, allowing for a more detailed and structured data representation.\n     */\n    public multiLevelLabels: any;\n    /** \n     * A unique identifier for an axis. To associate an axis with a series, set this name to the `xAxisName` or `yAxisName` properties of the series.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * If set to true, the axis will render on the opposite side of its default position.\n     * @default false\n     */\n    public opposedPosition: any;\n    /** \n     * Specifies whether axis elements, such as axis labels and the axis title, should be crossed by the axis line.\n     * @default true\n     */\n    public placeNextToAxisLine: any;\n    /** \n     * Specifies the padding on the top, bottom, left and right sides of the chart area, in pixels.\n     * @default 0\n     */\n    public plotOffset: any;\n    /** \n     * Specifies the bottom padding for the chart area, in pixels.\n     * @default null\n     */\n    public plotOffsetBottom: any;\n    /** \n     * Specifies the left padding for the chart area, in pixels.\n     * @default null\n     */\n    public plotOffsetLeft: any;\n    /** \n     * Specifies the right padding for the chart area, in pixels.\n     * @default null\n     */\n    public plotOffsetRight: any;\n    /** \n     * Specifies the top padding for the chart area, in pixels.\n     * @default null\n     */\n    public plotOffsetTop: any;\n    /** \n     * The `rangePadding` property determines how padding is applied to the axis range, affecting the appearance of the chart by adjusting the minimum and maximum values of the axis. \n     * Available options are: \n     * * None: No padding is applied to the axis. \n     * * Normal: Padding is applied based on the range calculation. \n     * * Additional: The interval of the axis is added as padding to both the minimum and maximum values of the range. \n     * * Round: The axis range is rounded to the nearest possible value that is divisible by the interval.\n     * @default 'Auto'\n     */\n    public rangePadding: any;\n    /** \n     * Specifies the index of the row where the axis is associated when the chart area is divided into multiple plot areas using `rows`. \n     * \n     * @default 0\n     */\n    public rowIndex: any;\n    /** \n     * Configures the scrollbar with options for customization, including appearance, behavior, and lazy loading settings.\n     */\n    public scrollbarSettings: any;\n    /** \n     * Specifies the skeleton format used for processing date-time values.\n     * @default ''\n     */\n    public skeleton: any;\n    /** \n     * Specifies the format type to be used in date-time formatting.\n     * @default 'DateTime'\n     * @deprecated \n     */\n    public skeletonType: any;\n    /** \n     * Specifies the number of `columns` or `rows` that an axis spans horizontally or vertically.\n     * @default 1\n     */\n    public span: any;\n    /** \n     * Specifies the start angle for the series in a polar or radar chart, measured in degrees from the horizontal axis, determining the initial angle from which the series begins.\n     * @default 0\n     */\n    public startAngle: any;\n    /** \n     * If set to true, the axis starts from zero. \n     * If set to false, the axis starts from the minimum value of the data.\n     * @default true\n     */\n    public startFromZero: any;\n    /** \n     * Specifies the collection of strip lines for the axis, which are visual elements used to mark or highlight specific ranges.\n     */\n    public stripLines: any;\n    /** \n     * The `tabIndex` value for the axis, determining its position in the tab order.\n     * @default 2\n     */\n    public tabIndex: any;\n    /** \n     * The `tickPosition` property determines where the axis ticks are rendered in relation to the axis line. \n     * Available options are: \n     * * Inside: Renders the ticks inside the axis line. \n     * * Outside: Renders the ticks outside the axis line.\n     * @default 'Outside'\n     */\n    public tickPosition: any;\n    /** \n     * Specifies the title of an axis, displayed along the axis to provide context about the represented data.\n     * @default ''\n     */\n    public title: any;\n    /** \n     * Specifies the padding between the axis title and the axis labels.\n     * @default 5\n     */\n    public titlePadding: any;\n    /** \n     * Defines an angle for rotating the axis title. By default, the angle is calculated based on the position and orientation of the axis.\n     * @default null\n     */\n    public titleRotation: any;\n    /** \n     * Options for customizing the appearance of the axis title, including font family, size, style, weight, and color.\n     */\n    public titleStyle: any;\n    /** \n     * The `valueType` property defines the type of data that the axis can manage, ensuring correct rendering based on the data type. This property supports multiple data types, each suited for different kinds of data visualization. \n     * Available options include: \n     * * Double: Used for rendering a numeric axis to accommodate numeric data. \n     * * DateTime: Utilized for rendering a date-time axis to manage date-time data. \n     * * Category: Employed for rendering a category axis to manage categorical data. \n     * * Logarithmic: Applied for rendering a logarithmic axis to handle a wide range of values. \n     * * DateTimeCategory: Used to render a date-time category axis for managing business days.\n     * @default 'Double'\n     * @blazortype Syncfusion.EJ2.Blazor.Charts.ValueType\n     * @isenumeration true\n     */\n    public valueType: any;\n    /** \n     * If set to true, axis labels will be visible in the chart. By default, axis labels are enabled.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * The axis is scaled by this factor. When `zoomFactor` is 0.5, the chart is scaled by 200% along this axis. \n     * > Note the value ranges from 0 to 1.\n     * @default 1\n     */\n    public zoomFactor: any;\n    /** \n     * Sets the position of the zoomed axis on the chart, with the `zoomPosition` property specifying the position within the zoomed range, from 0 (start) to 1 (end).\n     * @default 0\n     */\n    public zoomPosition: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Axis Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart>e-axes',\n    queries: {\n        children: new ContentChildren(AxisDirective)\n    },\n})\nexport class AxesDirective extends ArrayBase<AxesDirective> {\n    constructor() {\n        super('axes');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['border', 'height'];\nlet outputs: string[] = [];\n/**\n * Row Directive\n * ```html\n * <e-rows><e-row></e-row><e-rows>\n * ```\n */\n@Directive({\n    selector: 'e-rows>e-row',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class RowDirective extends ComplexBase<RowDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Options to customize the border of the rows.\n     */\n    public border: any;\n    /** \n     * The height of the row as a string accepts input both as '100px' and '100%'. \n     * If specified as '100%', the row renders to the full height of its chart.\n     * @default '100%'\n     */\n    public height: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Row Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart>e-rows',\n    queries: {\n        children: new ContentChildren(RowDirective)\n    },\n})\nexport class RowsDirective extends ArrayBase<RowsDirective> {\n    constructor() {\n        super('rows');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['border', 'width'];\nlet outputs: string[] = [];\n/**\n * Column Directive\n * ```html\n * <e-columns><e-column></e-column><e-columns>\n * ```\n */\n@Directive({\n    selector: 'e-columns>e-column',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class ColumnDirective extends ComplexBase<ColumnDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Options to customize the border of the columns.\n     */\n    public border: any;\n    /** \n     * The width of the column as a string accepts input both as '100px' and '100%'. \n     * If specified as '100%', the column renders to the full width of its chart.\n     * @default '100%'\n     */\n    public width: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Column Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart>e-columns',\n    queries: {\n        children: new ContentChildren(ColumnDirective)\n    },\n})\nexport class ColumnsDirective extends ArrayBase<ColumnsDirective> {\n    constructor() {\n        super('columns');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['colors', 'end', 'label', 'start'];\nlet outputs: string[] = [];\n/**\n * RangeColorSetting Directive\n * ```html\n * <e-rangeColorSettings><e-rangeColorSetting></e-rangeColorSetting><e-rangeColorSettings>\n * ```\n */\n@Directive({\n    selector: 'e-rangecolorsettings>e-rangecolorsetting',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class RangeColorSettingDirective extends ComplexBase<RangeColorSettingDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the fill colors for points that lie within the given range. If multiple colors are specified, a gradient will be applied.\n     */\n    public colors: any;\n    /** \n     * Specifies the end value of the color mapping range.\n     */\n    public end: any;\n    /** \n     * Specifies the name or label for the range mapping item.\n     */\n    public label: any;\n    /** \n     * Specifies the start value of the color mapping range.\n     */\n    public start: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * RangeColorSetting Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart>e-rangecolorsettings',\n    queries: {\n        children: new ContentChildren(RangeColorSettingDirective)\n    },\n})\nexport class RangeColorSettingsDirective extends ArrayBase<RangeColorSettingsDirective> {\n    constructor() {\n        super('rangecolorsettings');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet input: string[] = ['accessibility', 'content', 'coordinateUnits', 'description', 'horizontalAlignment', 'region', 'verticalAlignment', 'x', 'xAxisName', 'y', 'yAxisName'];\nlet outputs: string[] = [];\n/**\n * Annotation Directive\n * ```html\n * <e-annotations><e-annotation></e-annotation><e-annotations>\n * ```\n */\n@Directive({\n    selector: 'e-annotations>e-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Options to improve accessibility for chart annotation elements.\n     */\n    public accessibility: any;\n    /** \n     * Specifies the coordinate units of the annotation. \n     * The options are: \n     * * Pixel - Renders the annotation based on x and y pixel values. \n     * * Point - Renders the annotation based on x and y axis values.\n     * @default 'Pixel'\n     */\n    public coordinateUnits: any;\n    /** \n     * A description for the annotation that provides additional information about its content for screen readers.\n     * @default null\n     * @deprecated \n     */\n    public description: any;\n    /** \n     * Specifies the alignment of the annotation. \n     * The options are: \n     * * Near - Aligns the annotation element to the left side. \n     * * Far - Aligns the annotation element to the right side. \n     * * Center - Aligns the annotation element to the midpoint.\n     * @default 'Center'\n     * @deprecated \n     */\n    public horizontalAlignment: any;\n    /** \n     * Specifies the regions of the annotation. \n     * The options are: \n     * * Chart - Renders the annotation based on chart coordinates. \n     * * Series - Renders the annotation based on series coordinates.\n     * @default 'Chart'\n     */\n    public region: any;\n    /** \n     * Specifies the position of the annotation. \n     * The options are \n     * * Top - Aligns the annotation element to the top side. \n     * * Bottom - Aligns the annotation element to the bottom side. \n     * * Middle - Aligns the annotation element to the midpoint.\n     * @default 'Middle'\n     * @deprecated \n     */\n    public verticalAlignment: any;\n    /** \n     * If `coordinateUnit` is set to `Pixel`, x specifies the pixel value. \n     * If `coordinateUnit` is set to `Point`, x specifies the axis value.\n     * @default '0'\n     * @asptype object\n     */\n    public x: any;\n    /** \n     * The name of the horizontal axis associated with the annotation. \n     * Requires the `axes` of the chart.\n     * @default null\n     */\n    public xAxisName: any;\n    /** \n     * If `coordinateUnit` is set to `Pixel`, y specifies the pixel value. \n     * If `coordinateUnit` is set to `Point`, y specifies the axis value.\n     * @default '0'\n     */\n    public y: any;\n    /** \n     * The name of the vertical axis associated with the annotation. \n     * Requires the `axes` of the chart.\n     * @default null\n     */\n    public yAxisName: any;\n    /** \n     * The content of the annotation, which also accepts the ID of the custom element.\n     * @default null\n     */\n    @ContentChild('content')\n    @Template()\n    public content: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Annotation Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart>e-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n})\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\n    constructor() {\n        super('annotations');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['point', 'series'];\nlet outputs: string[] = [];\n/**\n * Selected Data Directive\n * ```html\n * <e-selecteddataindexes><e-selecteddataindex></e-selecteddataindex><e-selecteddataindexes>\n * ```\n */\n@Directive({\n    selector: 'e-selecteddataindexes>e-selecteddataindex',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class SelectedDataIndexDirective extends ComplexBase<SelectedDataIndexDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the index of the data point within the series.\n     * @default 0\n     * @asptype int\n     */\n    public point: any;\n    /** \n     * Specifies the index of the series.\n     * @default 0\n     * @asptype int\n     */\n    public series: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * SelectedDataIndex Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart>e-selecteddataindexes',\n    queries: {\n        children: new ContentChildren(SelectedDataIndexDirective)\n    },\n})\nexport class SelectedDataIndexesDirective extends ArrayBase<SelectedDataIndexesDirective> {\n    constructor() {\n        super('selecteddataindexes');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['accessibility', 'animation', 'bandColor', 'close', 'colorName', 'dPeriod', 'dashArray', 'dataSource', 'enableComplexProperty', 'fastPeriod', 'field', 'fill', 'high', 'kPeriod', 'low', 'lowerLine', 'macdLine', 'macdNegativeColor', 'macdPositiveColor', 'macdType', 'open', 'overBought', 'overSold', 'period', 'periodLine', 'pointColorMapping', 'query', 'segmentAxis', 'segments', 'seriesName', 'showZones', 'slowPeriod', 'standardDeviation', 'type', 'upperLine', 'visible', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName'];\nlet outputs: string[] = [];\n/**\n * Indicator Directive\n * ```html\n * <e-indicators>\n * <e-indicator></e-indicator>\n * </e-indicators>\n * ```\n */\n@Directive({\n    selector: 'e-indicators>e-indicator',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class IndicatorDirective extends ComplexBase<IndicatorDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Defines the types of technical indicators. They are: \n     * * 'Sma' - Predicts the trend using the Simple Moving Average approach. \n     * * 'Ema' - Predicts the trend using the Exponential Moving Average approach. \n     * * 'Tma' - Predicts the trend using the Triangular Moving Average approach. \n     * * 'Atr' - Predicts the trend using the Average True Range approach. \n     * * 'AccumulationDistribution' - Predicts the trend using the Accumulation Distribution approach. \n     * * 'Momentum' - Predicts the trend using the Momentum approach. \n     * * 'Rsi' - Predicts the trend using the Relative Strength Index (RSI) approach. \n     * * 'Macd' - Predicts the trend using the Moving Average Convergence Divergence (MACD) approach. \n     * * 'Stochastic' - Predicts the trend using the Stochastic Oscillator approach. \n     * * 'BollingerBands' - Predicts the trend using the Bollinger Bands approach.\n     * @default 'Sma'\n     */\n    public type: any;\n    /** \n     * Options to improve accessibility for technical indicator elements.\n     */\n    public accessibility: any;\n    /** \n     * Options for customizing the animation of the series. \n     * By default, animation is enabled with a duration of 1000 milliseconds (about 1 second). It can be disabled by setting enable to `false`. \n     * The following properties are supported in animation: \n     * * enable: If set to true, the series is animated on initial loading. \n     * * duration: The duration of the animation in milliseconds. \n     * * delay: The delay before the animation starts, in milliseconds.\n     */\n    public animation: any;\n    /** \n     * Configures the settings for customizing the Bollinger Bands in the indicator.\n     * @default 'rgba(211,211,211,0.25)'\n     */\n    public bandColor: any;\n    /** \n     * The data source field that contains the close value. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public close: any;\n    /** \n     * The data source field that contains the color mapping value. \n     * It is applicable for range color mapping.\n     */\n    public colorName: any;\n    /** \n     * Defines the period over which price changes determine the %D value in stochastic indicators.\n     * @default 3\n     */\n    public dPeriod: any;\n    /** \n     * Defines the pattern of dashes and gaps used to stroke the lines in `Line` type series.\n     * @default ''\n     */\n    public dashArray: any;\n    /** \n     * Specifies the data source for the series. It can be an array of JSON objects, or an instance of DataManager. \n     * \n     * @default ''\n     */\n    public dataSource: any;\n    /** \n     * This property is used to improve chart performance through data mapping for the series data source.\n     * @default false\n     */\n    public enableComplexProperty: any;\n    /** \n     * Sets the fast period to define the MACD line.\n     * @default 26\n     */\n    public fastPeriod: any;\n    /** \n     * Defines the field used to compare the current value with previous values.\n     * @default 'Close'\n     */\n    public field: any;\n    /** \n     * The fill color for the series, which accepts values in hex or rgba as a valid CSS color string. \n     * It also represents the color of the signal lines in technical indicators. \n     * For technical indicators, the default value is 'blue', and for series, it is null.\n     * @default null\n     */\n    public fill: any;\n    /** \n     * The data source field that contains the high value. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public high: any;\n    /** \n     * Defines the look-back period for price changes used to calculate the %K value in stochastic indicators.\n     * @default 14\n     */\n    public kPeriod: any;\n    /** \n     * The data source field that contains the low value. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public low: any;\n    /** \n     * Defines the appearance of the lower line in technical indicators.\n     */\n    public lowerLine: any;\n    /** \n     * Defines the appearance of the MACD line in the MACD indicator.\n     * @default { color: '#ff9933', width: 2 }\n     */\n    public macdLine: any;\n    /** \n     * Specifies the color for negative bars in the MACD indicator.\n     * @default '#e74c3d'\n     */\n    public macdNegativeColor: any;\n    /** \n     * Specifies the color for positive bars in the MACD indicator.\n     * @default '#2ecd71'\n     */\n    public macdPositiveColor: any;\n    /** \n     * Defines the type of the MACD (Moving Average Convergence Divergence) indicator.\n     * @default 'Both'\n     */\n    public macdType: any;\n    /** \n     * The data source field that contains the open value. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public open: any;\n    /** \n     * Specifies the over-bought (threshold) values applicable for RSI and stochastic indicators.\n     * @default 80\n     */\n    public overBought: any;\n    /** \n     * Defines the over-sold (threshold) values for RSI and stochastic indicators.\n     * @default 20\n     */\n    public overSold: any;\n    /** \n     * Defines the period over which price changes are considered for trend prediction.\n     * @default 14\n     */\n    public period: any;\n    /** \n     * Defines the appearance of the period line in technical indicators.\n     */\n    public periodLine: any;\n    /** \n     * The data source field that contains the color value of a point. \n     * It is applicable for series.\n     * @default ''\n     */\n    public pointColorMapping: any;\n    /** \n     * Specifies a query to select data from the data source. This property is applicable only when the data source is an `ej.DataManager`.\n     * @default ''\n     */\n    public query: any;\n    /** \n     * Defines the axis along which the line series will be split.\n     */\n    public segmentAxis: any;\n    /** \n     * Specifies a collection of regions used to differentiate a line series.\n     */\n    public segments: any;\n    /** \n     * Specifies the name of the series to be used for displaying the indicator data.\n     * @default ''\n     */\n    public seriesName: any;\n    /** \n     * Specifies whether to enable or disable the over-bought and over-sold regions.\n     * @default true\n     */\n    public showZones: any;\n    /** \n     * Sets the slow period for defining the MACD line.\n     * @default 12\n     */\n    public slowPeriod: any;\n    /** \n     * Sets the standard deviation values used to define the upper and lower Bollinger Bands.\n     * @default 2\n     */\n    public standardDeviation: any;\n    /** \n     * Defines the appearance of the upper line in technical indicators.\n     */\n    public upperLine: any;\n    /** \n     * If set to `true`, the series will be visible. If set to `false`, the series will be hidden.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * Defines the data source field that contains the volume value in candle charts. \n     * It is applicable for both financial series and technical indicators.\n     * @default ''\n     */\n    public volume: any;\n    /** \n     * The stroke width for the series, applicable only for `Line` type series. \n     * It also represents the stroke width of the signal lines in technical indicators.\n     * @default 1\n     */\n    public width: any;\n    /** \n     * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n     * It is applicable for series and technical indicators. \n     * \n     * @default null\n     */\n    public xAxisName: any;\n    /** \n     * The data source field that contains the x value. \n     * It is applicable to both series and technical indicators.\n     * @default ''\n     */\n    public xName: any;\n    /** \n     * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n     * It is applicable for series and technical indicators. \n     * \n     * @default null\n     */\n    public yAxisName: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Indicator Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-chart>e-indicators',\n    queries: {\n        children: new ContentChildren(IndicatorDirective)\n    },\n})\nexport class IndicatorsDirective extends ArrayBase<IndicatorsDirective> {\n    constructor() {\n        super('indicators');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Chart } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { SeriesCollectionDirective } from './series.directive';\nimport { AxesDirective } from './axes.directive';\nimport { RowsDirective } from './rows.directive';\nimport { ColumnsDirective } from './columns.directive';\nimport { RangeColorSettingsDirective } from './rangecolorsettings.directive';\nimport { AnnotationsDirective } from './annotations.directive';\nimport { SelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { IndicatorsDirective } from './indicators.directive';\n\nexport const inputs: string[] = ['accessibility','allowExport','allowMultiSelection','annotations','axes','background','backgroundImage','border','chartArea','columns','crosshair','currencyCode','dataSource','description','enableAnimation','enableAutoIntervalOnBothAxis','enableCanvas','enableExport','enableHtmlSanitizer','enablePersistence','enableRtl','enableSideBySidePlacement','focusBorderColor','focusBorderMargin','focusBorderWidth','height','highlightColor','highlightMode','highlightPattern','indicators','isMultiSelect','isTransposed','legendSettings','locale','margin','palettes','primaryXAxis','primaryYAxis','rangeColorSettings','rows','selectedDataIndexes','selectionMode','selectionPattern','series','stackLabels','subTitle','subTitleStyle','tabIndex','theme','title','titleStyle','tooltip','useGroupingSeparator','width','zoomSettings'];\nexport const outputs: string[] = ['afterExport','animationComplete','annotationRender','axisLabelClick','axisLabelRender','axisMultiLabelRender','axisRangeCalculated','beforeExport','beforePrint','beforeResize','chartDoubleClick','chartMouseClick','chartMouseDown','chartMouseLeave','chartMouseMove','chartMouseUp','drag','dragComplete','dragEnd','dragStart','legendClick','legendRender','load','loaded','multiLevelLabelClick','onZooming','pointClick','pointDoubleClick','pointMove','pointRender','resized','scrollChanged','scrollEnd','scrollStart','selectionComplete','seriesRender','sharedTooltipRender','textRender','tooltipRender','zoomComplete','dataSourceChange'];\nexport const twoWays: string[] = ['dataSource'];\n\n/**\n * Chart Component\n * ```html\n * <ejschart></ejschart>\n * ```\n */\n@Component({\n    selector: 'ejs-chart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    queries: {\n        childSeries: new ContentChild(SeriesCollectionDirective), \n        childAxes: new ContentChild(AxesDirective), \n        childRows: new ContentChild(RowsDirective), \n        childColumns: new ContentChild(ColumnsDirective), \n        childRangeColorSettings: new ContentChild(RangeColorSettingsDirective), \n        childAnnotations: new ContentChild(AnnotationsDirective), \n        childSelectedDataIndexes: new ContentChild(SelectedDataIndexesDirective), \n        childIndicators: new ContentChild(IndicatorsDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class ChartComponent extends Chart implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\tafterExport: any;\n\tanimationComplete: any;\n\tannotationRender: any;\n\taxisLabelClick: any;\n\taxisLabelRender: any;\n\taxisMultiLabelRender: any;\n\taxisRangeCalculated: any;\n\tbeforeExport: any;\n\tbeforePrint: any;\n\tbeforeResize: any;\n\tchartDoubleClick: any;\n\tchartMouseClick: any;\n\tchartMouseDown: any;\n\tchartMouseLeave: any;\n\tchartMouseMove: any;\n\tchartMouseUp: any;\n\tdrag: any;\n\tdragComplete: any;\n\tdragEnd: any;\n\tdragStart: any;\n\tlegendClick: any;\n\tlegendRender: any;\n\tload: any;\n\tloaded: any;\n\tmultiLevelLabelClick: any;\n\tonZooming: any;\n\tpointClick: any;\n\tpointDoubleClick: any;\n\tpointMove: any;\n\tpointRender: any;\n\tresized: any;\n\tscrollChanged: any;\n\tscrollEnd: any;\n\tscrollStart: any;\n\tselectionComplete: any;\n\tseriesRender: any;\n\tsharedTooltipRender: any;\n\ttextRender: any;\n\ttooltipRender: any;\n\tzoomComplete: any;\n\tpublic dataSourceChange: any;\n    public childSeries: QueryList<SeriesCollectionDirective>;\n    public childAxes: QueryList<AxesDirective>;\n    public childRows: QueryList<RowsDirective>;\n    public childColumns: QueryList<ColumnsDirective>;\n    public childRangeColorSettings: QueryList<RangeColorSettingsDirective>;\n    public childAnnotations: QueryList<AnnotationsDirective>;\n    public childSelectedDataIndexes: QueryList<SelectedDataIndexesDirective>;\n    public childIndicators: QueryList<IndicatorsDirective>;\n    public tags: string[] = ['series', 'axes', 'rows', 'columns', 'rangeColorSettings', 'annotations', 'selectedDataIndexes', 'indicators'];\n    @ContentChild('tooltipTemplate')\n    @Template()\n    public tooltip_template: any;\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsScatterSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsColumnSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSplineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSplineAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStripLine');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsScrollBar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStepLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStepAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStackingColumnSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStackingLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStackingAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStackingStepAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsBarSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStackingBarSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsRangeColumnSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsBubbleSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCrosshair');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCategory');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDateTime');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsLogarithmic');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsZoom');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDataLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSelection');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsChartAnnotation');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsHiloSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsHiloOpenCloseSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsWaterfallSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsRangeAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsRangeStepAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSplineRangeAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCandleSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsPolarSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsRadarSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsTmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsEmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAccumulationDistributionIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsMacdIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAtrIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsRsiIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsMomentumIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStochasticIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsBollingerBands');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsBoxAndWhiskerSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsHistogramSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsErrorBar');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsTrendlines');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDateTimeCategory');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsMultiColoredLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsMultiColoredAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsMultiLevelLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsParetoSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDataEditing');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsHighlight');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        \n\t    if (this.childAxes) {\n            this.tagObjects[1].instance = this.childAxes;\n        }\n        \n\t    if (this.childRows) {\n            this.tagObjects[2].instance = this.childRows;\n        }\n        \n\t    if (this.childColumns) {\n            this.tagObjects[3].instance = this.childColumns;\n        }\n        \n\t    if (this.childRangeColorSettings) {\n            this.tagObjects[4].instance = this.childRangeColorSettings;\n        }\n        \n\t    if (this.childAnnotations) {\n            this.tagObjects[5].instance = this.childAnnotations;\n        }\n        \n\t    if (this.childSelectedDataIndexes) {\n            this.tagObjects[6].instance = this.childSelectedDataIndexes;\n        }\n        \n\t    if (this.childIndicators) {\n            this.tagObjects[7].instance = this.childIndicators;\n        }\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrendlineDirective, TrendlinesDirective } from './trendlines.directive';\nimport { SegmentDirective, SegmentsDirective } from './segments.directive';\nimport { SeriesDirective, SeriesCollectionDirective } from './series.directive';\nimport { StripLineDirective, StripLinesDirective } from './striplines.directive';\nimport { CategoryDirective, CategoriesDirective } from './categories.directive';\nimport { MultiLevelLabelDirective, MultiLevelLabelsDirective } from './multilevellabels.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { RowDirective, RowsDirective } from './rows.directive';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { RangeColorSettingDirective, RangeColorSettingsDirective } from './rangecolorsettings.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { SelectedDataIndexDirective, SelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { IndicatorDirective, IndicatorsDirective } from './indicators.directive';\nimport { ChartComponent } from './chart.component';\n\n/**\n * NgModule definition for the Chart component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        ChartComponent,\n        TrendlineDirective,\n        TrendlinesDirective,\n        SegmentDirective,\n        SegmentsDirective,\n        SeriesDirective,\n        SeriesCollectionDirective,\n        StripLineDirective,\n        StripLinesDirective,\n        CategoryDirective,\n        CategoriesDirective,\n        MultiLevelLabelDirective,\n        MultiLevelLabelsDirective,\n        AxisDirective,\n        AxesDirective,\n        RowDirective,\n        RowsDirective,\n        ColumnDirective,\n        ColumnsDirective,\n        RangeColorSettingDirective,\n        RangeColorSettingsDirective,\n        AnnotationDirective,\n        AnnotationsDirective,\n        SelectedDataIndexDirective,\n        SelectedDataIndexesDirective,\n        IndicatorDirective,\n        IndicatorsDirective\n    ],\n    exports: [\n        ChartComponent,\n        TrendlineDirective,\n        TrendlinesDirective,\n        SegmentDirective,\n        SegmentsDirective,\n        SeriesDirective,\n        SeriesCollectionDirective,\n        StripLineDirective,\n        StripLinesDirective,\n        CategoryDirective,\n        CategoriesDirective,\n        MultiLevelLabelDirective,\n        MultiLevelLabelsDirective,\n        AxisDirective,\n        AxesDirective,\n        RowDirective,\n        RowsDirective,\n        ColumnDirective,\n        ColumnsDirective,\n        RangeColorSettingDirective,\n        RangeColorSettingsDirective,\n        AnnotationDirective,\n        AnnotationsDirective,\n        SelectedDataIndexDirective,\n        SelectedDataIndexesDirective,\n        IndicatorDirective,\n        IndicatorsDirective\n    ]\n})\nexport class ChartModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TrendlineDirective, TrendlinesDirective } from './trendlines.directive';\nimport { SegmentDirective, SegmentsDirective } from './segments.directive';\nimport { SeriesDirective, SeriesCollectionDirective } from './series.directive';\nimport { StripLineDirective, StripLinesDirective } from './striplines.directive';\nimport { CategoryDirective, CategoriesDirective } from './categories.directive';\nimport { MultiLevelLabelDirective, MultiLevelLabelsDirective } from './multilevellabels.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { RowDirective, RowsDirective } from './rows.directive';\nimport { ColumnDirective, ColumnsDirective } from './columns.directive';\nimport { RangeColorSettingDirective, RangeColorSettingsDirective } from './rangecolorsettings.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { SelectedDataIndexDirective, SelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { IndicatorDirective, IndicatorsDirective } from './indicators.directive';\nimport { ChartComponent } from './chart.component';\nimport { ChartModule } from './chart.module';\nimport {LineSeries, ScatterSeries, ColumnSeries, SplineSeries, SplineAreaSeries, StripLine, AreaSeries, ScrollBar, StepLineSeries, StepAreaSeries, StackingColumnSeries, StackingLineSeries, StackingAreaSeries, StackingStepAreaSeries, BarSeries, StackingBarSeries, RangeColumnSeries, BubbleSeries, Tooltip, Crosshair, Category, DateTime, Logarithmic, Legend, Zoom, DataLabel, Selection, ChartAnnotation, HiloSeries, HiloOpenCloseSeries, WaterfallSeries, RangeAreaSeries, RangeStepAreaSeries, SplineRangeAreaSeries, CandleSeries, PolarSeries, RadarSeries, SmaIndicator, TmaIndicator, EmaIndicator, AccumulationDistributionIndicator, MacdIndicator, AtrIndicator, RsiIndicator, MomentumIndicator, StochasticIndicator, BollingerBands, BoxAndWhiskerSeries, HistogramSeries, ErrorBar, Trendlines, DateTimeCategory, MultiColoredLineSeries, MultiColoredAreaSeries, MultiLevelLabel, ParetoSeries, Export, DataEditing, Highlight} from '@syncfusion/ej2-charts'\n\n\nexport const LineSeriesService: ValueProvider = { provide: 'ChartsLineSeries', useValue: LineSeries};\nexport const ScatterSeriesService: ValueProvider = { provide: 'ChartsScatterSeries', useValue: ScatterSeries};\nexport const ColumnSeriesService: ValueProvider = { provide: 'ChartsColumnSeries', useValue: ColumnSeries};\nexport const SplineSeriesService: ValueProvider = { provide: 'ChartsSplineSeries', useValue: SplineSeries};\nexport const SplineAreaSeriesService: ValueProvider = { provide: 'ChartsSplineAreaSeries', useValue: SplineAreaSeries};\nexport const StripLineService: ValueProvider = { provide: 'ChartsStripLine', useValue: StripLine};\nexport const AreaSeriesService: ValueProvider = { provide: 'ChartsAreaSeries', useValue: AreaSeries};\nexport const ScrollBarService: ValueProvider = { provide: 'ChartsScrollBar', useValue: ScrollBar};\nexport const StepLineSeriesService: ValueProvider = { provide: 'ChartsStepLineSeries', useValue: StepLineSeries};\nexport const StepAreaSeriesService: ValueProvider = { provide: 'ChartsStepAreaSeries', useValue: StepAreaSeries};\nexport const StackingColumnSeriesService: ValueProvider = { provide: 'ChartsStackingColumnSeries', useValue: StackingColumnSeries};\nexport const StackingLineSeriesService: ValueProvider = { provide: 'ChartsStackingLineSeries', useValue: StackingLineSeries};\nexport const StackingAreaSeriesService: ValueProvider = { provide: 'ChartsStackingAreaSeries', useValue: StackingAreaSeries};\nexport const StackingStepAreaSeriesService: ValueProvider = { provide: 'ChartsStackingStepAreaSeries', useValue: StackingStepAreaSeries};\nexport const BarSeriesService: ValueProvider = { provide: 'ChartsBarSeries', useValue: BarSeries};\nexport const StackingBarSeriesService: ValueProvider = { provide: 'ChartsStackingBarSeries', useValue: StackingBarSeries};\nexport const RangeColumnSeriesService: ValueProvider = { provide: 'ChartsRangeColumnSeries', useValue: RangeColumnSeries};\nexport const BubbleSeriesService: ValueProvider = { provide: 'ChartsBubbleSeries', useValue: BubbleSeries};\nexport const TooltipService: ValueProvider = { provide: 'ChartsTooltip', useValue: Tooltip};\nexport const CrosshairService: ValueProvider = { provide: 'ChartsCrosshair', useValue: Crosshair};\nexport const CategoryService: ValueProvider = { provide: 'ChartsCategory', useValue: Category};\nexport const DateTimeService: ValueProvider = { provide: 'ChartsDateTime', useValue: DateTime};\nexport const LogarithmicService: ValueProvider = { provide: 'ChartsLogarithmic', useValue: Logarithmic};\nexport const LegendService: ValueProvider = { provide: 'ChartsLegend', useValue: Legend};\nexport const ZoomService: ValueProvider = { provide: 'ChartsZoom', useValue: Zoom};\nexport const DataLabelService: ValueProvider = { provide: 'ChartsDataLabel', useValue: DataLabel};\nexport const SelectionService: ValueProvider = { provide: 'ChartsSelection', useValue: Selection};\nexport const ChartAnnotationService: ValueProvider = { provide: 'ChartsChartAnnotation', useValue: ChartAnnotation};\nexport const HiloSeriesService: ValueProvider = { provide: 'ChartsHiloSeries', useValue: HiloSeries};\nexport const HiloOpenCloseSeriesService: ValueProvider = { provide: 'ChartsHiloOpenCloseSeries', useValue: HiloOpenCloseSeries};\nexport const WaterfallSeriesService: ValueProvider = { provide: 'ChartsWaterfallSeries', useValue: WaterfallSeries};\nexport const RangeAreaSeriesService: ValueProvider = { provide: 'ChartsRangeAreaSeries', useValue: RangeAreaSeries};\nexport const RangeStepAreaSeriesService: ValueProvider = { provide: 'ChartsRangeStepAreaSeries', useValue: RangeStepAreaSeries};\nexport const SplineRangeAreaSeriesService: ValueProvider = { provide: 'ChartsSplineRangeAreaSeries', useValue: SplineRangeAreaSeries};\nexport const CandleSeriesService: ValueProvider = { provide: 'ChartsCandleSeries', useValue: CandleSeries};\nexport const PolarSeriesService: ValueProvider = { provide: 'ChartsPolarSeries', useValue: PolarSeries};\nexport const RadarSeriesService: ValueProvider = { provide: 'ChartsRadarSeries', useValue: RadarSeries};\nexport const SmaIndicatorService: ValueProvider = { provide: 'ChartsSmaIndicator', useValue: SmaIndicator};\nexport const TmaIndicatorService: ValueProvider = { provide: 'ChartsTmaIndicator', useValue: TmaIndicator};\nexport const EmaIndicatorService: ValueProvider = { provide: 'ChartsEmaIndicator', useValue: EmaIndicator};\nexport const AccumulationDistributionIndicatorService: ValueProvider = { provide: 'ChartsAccumulationDistributionIndicator', useValue: AccumulationDistributionIndicator};\nexport const MacdIndicatorService: ValueProvider = { provide: 'ChartsMacdIndicator', useValue: MacdIndicator};\nexport const AtrIndicatorService: ValueProvider = { provide: 'ChartsAtrIndicator', useValue: AtrIndicator};\nexport const RsiIndicatorService: ValueProvider = { provide: 'ChartsRsiIndicator', useValue: RsiIndicator};\nexport const MomentumIndicatorService: ValueProvider = { provide: 'ChartsMomentumIndicator', useValue: MomentumIndicator};\nexport const StochasticIndicatorService: ValueProvider = { provide: 'ChartsStochasticIndicator', useValue: StochasticIndicator};\nexport const BollingerBandsService: ValueProvider = { provide: 'ChartsBollingerBands', useValue: BollingerBands};\nexport const BoxAndWhiskerSeriesService: ValueProvider = { provide: 'ChartsBoxAndWhiskerSeries', useValue: BoxAndWhiskerSeries};\nexport const HistogramSeriesService: ValueProvider = { provide: 'ChartsHistogramSeries', useValue: HistogramSeries};\nexport const ErrorBarService: ValueProvider = { provide: 'ChartsErrorBar', useValue: ErrorBar};\nexport const TrendlinesService: ValueProvider = { provide: 'ChartsTrendlines', useValue: Trendlines};\nexport const DateTimeCategoryService: ValueProvider = { provide: 'ChartsDateTimeCategory', useValue: DateTimeCategory};\nexport const MultiColoredLineSeriesService: ValueProvider = { provide: 'ChartsMultiColoredLineSeries', useValue: MultiColoredLineSeries};\nexport const MultiColoredAreaSeriesService: ValueProvider = { provide: 'ChartsMultiColoredAreaSeries', useValue: MultiColoredAreaSeries};\nexport const MultiLevelLabelService: ValueProvider = { provide: 'ChartsMultiLevelLabel', useValue: MultiLevelLabel};\nexport const ParetoSeriesService: ValueProvider = { provide: 'ChartsParetoSeries', useValue: ParetoSeries};\nexport const ExportService: ValueProvider = { provide: 'ChartsExport', useValue: Export};\nexport const DataEditingService: ValueProvider = { provide: 'ChartsDataEditing', useValue: DataEditing};\nexport const HighlightService: ValueProvider = { provide: 'ChartsHighlight', useValue: Highlight};\n\n/**\n * NgModule definition for the Chart component with providers.\n */\n@NgModule({\n    imports: [CommonModule, ChartModule],\n    exports: [\n        ChartModule\n    ],\n    providers:[\n        LineSeriesService,\n        ScatterSeriesService,\n        ColumnSeriesService,\n        SplineSeriesService,\n        SplineAreaSeriesService,\n        StripLineService,\n        AreaSeriesService,\n        ScrollBarService,\n        StepLineSeriesService,\n        StepAreaSeriesService,\n        StackingColumnSeriesService,\n        StackingLineSeriesService,\n        StackingAreaSeriesService,\n        StackingStepAreaSeriesService,\n        BarSeriesService,\n        StackingBarSeriesService,\n        RangeColumnSeriesService,\n        BubbleSeriesService,\n        TooltipService,\n        CrosshairService,\n        CategoryService,\n        DateTimeService,\n        LogarithmicService,\n        LegendService,\n        ZoomService,\n        DataLabelService,\n        SelectionService,\n        ChartAnnotationService,\n        HiloSeriesService,\n        HiloOpenCloseSeriesService,\n        WaterfallSeriesService,\n        RangeAreaSeriesService,\n        RangeStepAreaSeriesService,\n        SplineRangeAreaSeriesService,\n        CandleSeriesService,\n        PolarSeriesService,\n        RadarSeriesService,\n        SmaIndicatorService,\n        TmaIndicatorService,\n        EmaIndicatorService,\n        AccumulationDistributionIndicatorService,\n        MacdIndicatorService,\n        AtrIndicatorService,\n        RsiIndicatorService,\n        MomentumIndicatorService,\n        StochasticIndicatorService,\n        BollingerBandsService,\n        BoxAndWhiskerSeriesService,\n        HistogramSeriesService,\n        ErrorBarService,\n        TrendlinesService,\n        DateTimeCategoryService,\n        MultiColoredLineSeriesService,\n        MultiColoredAreaSeriesService,\n        MultiLevelLabelService,\n        ParetoSeriesService,\n        ExportService,\n        DataEditingService,\n        HighlightService\n    ]\n})\nexport class ChartAllModule { }","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet input: string[] = ['accessibility', 'animation', 'applyPattern', 'border', 'borderRadius', 'dashArray', 'dataLabel', 'dataSource', 'emptyPointSettings', 'enableTooltip', 'endAngle', 'explode', 'explodeAll', 'explodeIndex', 'explodeOffset', 'funnelMode', 'gapRatio', 'groupMode', 'groupTo', 'height', 'innerRadius', 'legendImageUrl', 'legendShape', 'name', 'neckHeight', 'neckWidth', 'opacity', 'palettes', 'pointColorMapping', 'pyramidMode', 'query', 'radius', 'selectionStyle', 'startAngle', 'tooltipMappingName', 'type', 'visible', 'width', 'xName', 'yName'];\nlet outputs: string[] = [];\n/**\n * AccumulationSeries Directive\n * ```html\n * <e-accumulation-series-collection>\n * <e-accumulation-series></e-accumulation-series>\n * </e-accumulation-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-accumulation-series-collection>e-accumulation-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class AccumulationSeriesDirective extends ComplexBase<AccumulationSeriesDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the type of series in the accumulation chart.\n     * @default 'Pie'\n     */\n    public type: any;\n    /** \n     * Options to improve accessibility for series elements.\n     */\n    public accessibility: any;\n    /** \n     * Options for customizing the animation of the series. \n     * By default, animation is enabled with a duration of 1000 milliseconds (about 1 second). It can be disabled by setting enable to `false`. \n     * The following properties are supported in animation: \n     * * enable: If set to true, the series is animated on initial loading. \n     * * duration: The duration of the animation in milliseconds. \n     * * delay: The delay before the animation starts, in milliseconds.\n     */\n    public animation: any;\n    /** \n     * When set to true, a different pattern is applied to each slice of the pie.\n     * @default false\n     */\n    public applyPattern: any;\n    /** \n     * Options for customizing the border of the series.\n     */\n    public border: any;\n    /** \n     * Option for customizing the border radius.\n     * @default 0\n     */\n    public borderRadius: any;\n    /** \n     * Defines the pattern of dashes and gaps for the series border.\n     * @default '0'\n     */\n    public dashArray: any;\n    /** \n     * The data label property can be used to show the data label and customize its position and styling.\n     */\n    public dataLabel: any;\n    /** \n     * Specifies the data source for the series. It can be an array of JSON objects, or an instance of DataManager. \n     * \n     * @default ''\n     */\n    public dataSource: any;\n    /** \n     * Customization options for the appearance of empty points in the series, where `null` or `undefined` values are considered as empty points.\n     */\n    public emptyPointSettings: any;\n    /** \n     * Controls whether the tooltip for the accumulation chart series is enabled or disabled. Set to true to display tooltips on hover, or false to hide them.\n     * @default true\n     */\n    public enableTooltip: any;\n    /** \n     * Specifies the ending angle for the series, in degrees.\n     * @default null\n     */\n    public endAngle: any;\n    /** \n     * If set to true, series points will explode on mouse click or touch.\n     * @default false\n     */\n    public explode: any;\n    /** \n     * If set to true, all the points in the series will explode on load.\n     * @default false\n     */\n    public explodeAll: any;\n    /** \n     * Index of the point in the series to be exploded on initial load.\n     * @default null\n     * @aspdefaultvalueignore \n     * @blazordefaultvalue Double.NaN\n     */\n    public explodeIndex: any;\n    /** \n     * Specifies the distance of the point from the center, which can be defined in both pixels and percentage.\n     * @default '30%'\n     */\n    public explodeOffset: any;\n    /** \n     * Defines the rendering mode for the funnel chart. \n     * Available options are: \n     * * Standard - Displays a funnel shape that narrows down to a point. \n     * * Trapezoid - Displays a funnel shape with parallel sides near the top.\n     * @default 'Standard'\n     */\n    public funnelMode: any;\n    /** \n     * Defines the distance between the segments of a funnel or pyramid series. \n     * The range is from 0 to 1.\n     * @default 0\n     */\n    public gapRatio: any;\n    /** \n     * In the accumulation series, y-values less than `groupMode` are combined into a single slice named 'others'.\n     * @default Value\n     */\n    public groupMode: any;\n    /** \n     * The y-values of the accumulation series that are less than `groupTo` are combined into a single slice named 'others'.\n     * @default null\n     */\n    public groupTo: any;\n    /** \n     * Defines the height of the funnel or pyramid series relative to the chart area.\n     * @default '80%'\n     */\n    public height: any;\n    /** \n     * When the `innerRadius` value is greater than 0%, a donut shape will appear in the pie series. It accepts only percentage values.\n     * @default '0'\n     */\n    public innerRadius: any;\n    /** \n     * The URL for the image to be displayed as a legend icon. \n     * > Note that `legendShape` must be set to `Image`.\n     * @default ''\n     */\n    public legendImageUrl: any;\n    /** \n     * Specifies the shape of the legend icon for each data point. \n     * Available shapes for legend: \n     * * Circle - Renders a circular icon. \n     * * Rectangle - Renders a rectangular icon. \n     * * Triangle - Renders a triangular icon. \n     * * Diamond - Renders a diamond-shaped icon. \n     * * Cross - Renders a cross-shaped icon. \n     * * HorizontalLine - Renders a horizontal line icon. \n     * * VerticalLine - Renders a vertical line icon. \n     * * Pentagon - Renders a pentagon-shaped icon. \n     * * InvertedTriangle - Renders an inverted triangle-shaped icon. \n     * * SeriesType - Uses the default icon shape based on the series type. \n     * * Image - Renders a custom image for the legend icon.\n     * @default 'SeriesType'\n     */\n    public legendShape: any;\n    /** \n     * The `name` property allows for setting a name for the series.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * Defines the height of the funnel neck relative to the chart area.\n     * @default '20%'\n     */\n    public neckHeight: any;\n    /** \n     * Defines the width of the funnel neck relative to the chart area.\n     * @default '20%'\n     */\n    public neckWidth: any;\n    /** \n     * Sets the opacity of the series, with a value between 0 and 1 where 0 is fully transparent and 1 is fully opaque.\n     * @default 1.\n     */\n    public opacity: any;\n    /** \n     * The `palettes` array defines a set of colors used for rendering the accumulation chart's points. Each color in the array is applied to each point in order.\n     * @default []\n     */\n    public palettes: any;\n    /** \n     * The data source field that contains the color value of a point. \n     * It is applicable for series.\n     * @default ''\n     */\n    public pointColorMapping: any;\n    /** \n     * Defines how the values are represented, either through the height or surface area of the segments.\n     * @default 'Linear'\n     */\n    public pyramidMode: any;\n    /** \n     * Specifies a query to select data from the data source. This property is applicable only when the data source is an `ej.DataManager`.\n     * @default null\n     */\n    public query: any;\n    /** \n     * Specifies the radius of the pie series as a percentage of the chart's size.\n     * @default null\n     */\n    public radius: any;\n    /** \n     * The `selectionStyle` property is used to specify custom CSS styles for the selected series or points.\n     * @default null\n     */\n    public selectionStyle: any;\n    /** \n     * Specifies the starting angle for the series, in degrees.\n     * @default 0\n     */\n    public startAngle: any;\n    /** \n     * The data source field that contains the value to be displayed in the tooltip.\n     * @default ''\n     */\n    public tooltipMappingName: any;\n    /** \n     * If set to true, the series will be visible. If set to false, the series will be hidden.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * Defines the width of the funnel or pyramid series relative to the chart area.\n     * @default '80%'\n     */\n    public width: any;\n    /** \n     * The data source field that contains the x value.\n     * @default ''\n     */\n    public xName: any;\n    /** \n     * The data source field that contains the y value.\n     * @default ''\n     */\n    public yName: any;\n    @ContentChild('dataLabelTemplate')\n    @Template()\n    public dataLabel_template: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * AccumulationSeries Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-accumulationchart>e-accumulation-series-collection',\n    queries: {\n        children: new ContentChildren(AccumulationSeriesDirective)\n    },\n})\nexport class AccumulationSeriesCollectionDirective extends ArrayBase<AccumulationSeriesCollectionDirective> {\n    constructor() {\n        super('series');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet input: string[] = ['content', 'coordinateUnits', 'description', 'horizontalAlignment', 'region', 'verticalAlignment', 'x', 'y'];\nlet outputs: string[] = [];\n/**\n * AccumulationAnnotations Directive\n * ```html\n * <e-accumulation-annotations>\n * <e-accumulation-annotation></e-accumulation-annotation>\n * </e-accumulation-annotations>\n * ```\n */\n@Directive({\n    selector: 'e-accumulation-annotations>e-accumulation-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class AccumulationAnnotationDirective extends ComplexBase<AccumulationAnnotationDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the coordinate units of the annotation. \n     * The options are: \n     * * Pixel - Renders the annotation based on x and y pixel values. \n     * * Point - Renders the annotation based on x and y data values.\n     * @default 'Pixel'\n     */\n    public coordinateUnits: any;\n    /** \n     * A description for the annotation that provides additional information about its content for screen readers.\n     * @default null\n     */\n    public description: any;\n    /** \n     * Specifies the alignment of the annotation. \n     * The options are: \n     * * Near - Aligns the annotation element to the top side. \n     * * Far - Aligns the annotation element to the bottom side. \n     * * Center - Aligns the annotation element to the midpoint.\n     * @default 'Center'\n     * @deprecated \n     */\n    public horizontalAlignment: any;\n    /** \n     * Specifies the regions of the annotation. \n     * The options are: \n     * * Chart - Renders the annotation based on chart coordinates. \n     * * Series - Renders the annotation based on series coordinates.\n     * @default 'Chart'\n     */\n    public region: any;\n    /** \n     * Specifies the position of the annotation. \n     * The options are \n     * * Top - Aligns the annotation element to the top side. \n     * * Bottom - Aligns the annotation element to the bottom side. \n     * * Middle - Aligns the annotation element to the midpoint.\n     * @default 'Middle'\n     * @deprecated \n     */\n    public verticalAlignment: any;\n    /** \n     * If `coordinateUnit` is set to `Pixel`, x specifies the pixel value. \n     * If `coordinateUnit` is set to `Point`, x specifies the data value.\n     * @default '0'\n     */\n    public x: any;\n    /** \n     * If `coordinateUnit` is set to `Pixel`, y specifies the pixel value. \n     * If `coordinateUnit` is set to `Point`, y specifies the data value.\n     * @default '0'\n     */\n    public y: any;\n    /** \n     * The content of the annotation, which can also accept the ID of a custom element.\n     * @default null\n     */\n    @ContentChild('content')\n    @Template()\n    public content: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * AccumulationAnnotation Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-accumulationchart>e-accumulation-annotations',\n    queries: {\n        children: new ContentChildren(AccumulationAnnotationDirective)\n    },\n})\nexport class AccumulationAnnotationsDirective extends ArrayBase<AccumulationAnnotationsDirective> {\n    constructor() {\n        super('annotations');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { AccumulationChart } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { AccumulationSeriesCollectionDirective } from './series.directive';\nimport { AccumulationAnnotationsDirective } from './annotations.directive';\n\nexport const inputs: string[] = ['accessibility','allowExport','annotations','background','backgroundImage','border','center','centerLabel','currencyCode','dataSource','enableAnimation','enableBorderOnMouseMove','enableExport','enableHtmlSanitizer','enablePersistence','enableRtl','enableSmartLabels','focusBorderColor','focusBorderMargin','focusBorderWidth','height','highlightColor','highlightMode','highlightPattern','isMultiSelect','legendSettings','locale','margin','selectedDataIndexes','selectionMode','selectionPattern','series','subTitle','subTitleStyle','theme','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const outputs: string[] = ['afterExport','animationComplete','annotationRender','beforeExport','beforePrint','beforeResize','chartDoubleClick','chartMouseClick','chartMouseDown','chartMouseLeave','chartMouseMove','chartMouseUp','legendClick','legendRender','load','loaded','pointClick','pointMove','pointRender','resized','selectionComplete','seriesRender','textRender','tooltipRender','dataSourceChange'];\nexport const twoWays: string[] = ['dataSource'];\n\n/**\n * AccumulationChart Component\n * ```html\n * <ejs-accumulationchart></ejs-accumulationchart>\n * ```\n */\n@Component({\n    selector: 'ejs-accumulationchart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(AccumulationSeriesCollectionDirective), \n        childAnnotations: new ContentChild(AccumulationAnnotationsDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class AccumulationChartComponent extends AccumulationChart implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\tafterExport: any;\n\tanimationComplete: any;\n\tannotationRender: any;\n\tbeforeExport: any;\n\tbeforePrint: any;\n\tbeforeResize: any;\n\tchartDoubleClick: any;\n\tchartMouseClick: any;\n\tchartMouseDown: any;\n\tchartMouseLeave: any;\n\tchartMouseMove: any;\n\tchartMouseUp: any;\n\tlegendClick: any;\n\tlegendRender: any;\n\tload: any;\n\tloaded: any;\n\tpointClick: any;\n\tpointMove: any;\n\tpointRender: any;\n\tresized: any;\n\tselectionComplete: any;\n\tseriesRender: any;\n\ttextRender: any;\n\ttooltipRender: any;\n\tpublic dataSourceChange: any;\n    public childSeries: QueryList<AccumulationSeriesCollectionDirective>;\n    public childAnnotations: QueryList<AccumulationAnnotationsDirective>;\n    public tags: string[] = ['series', 'annotations'];\n    @ContentChild('tooltipTemplate')\n    @Template()\n    public tooltip_template: any;\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsPieSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsFunnelSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsPyramidSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAccumulationTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAccumulationLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAccumulationSelection');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAccumulationHighlight');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAccumulationDataLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAccumulationAnnotation');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        if (this.childAnnotations) {\n                    this.tagObjects[1].instance = this.childAnnotations as any;\n                }\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccumulationSeriesDirective, AccumulationSeriesCollectionDirective } from './series.directive';\nimport { AccumulationAnnotationDirective, AccumulationAnnotationsDirective } from './annotations.directive';\nimport { AccumulationChartComponent } from './accumulationchart.component';\n\n/**\n * NgModule definition for the AccumulationChart component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        AccumulationChartComponent,\n        AccumulationSeriesDirective,\n        AccumulationSeriesCollectionDirective,\n        AccumulationAnnotationDirective,\n        AccumulationAnnotationsDirective\n    ],\n    exports: [\n        AccumulationChartComponent,\n        AccumulationSeriesDirective,\n        AccumulationSeriesCollectionDirective,\n        AccumulationAnnotationDirective,\n        AccumulationAnnotationsDirective\n    ]\n})\nexport class AccumulationChartModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AccumulationSeriesDirective, AccumulationSeriesCollectionDirective } from './series.directive';\nimport { AccumulationAnnotationDirective, AccumulationAnnotationsDirective } from './annotations.directive';\nimport { AccumulationChartComponent } from './accumulationchart.component';\nimport { AccumulationChartModule } from './accumulationchart.module';\nimport {PieSeries, FunnelSeries, PyramidSeries, AccumulationTooltip, AccumulationLegend, AccumulationSelection, AccumulationHighlight, AccumulationDataLabel, AccumulationAnnotation} from '@syncfusion/ej2-charts'\n\n\nexport const PieSeriesService: ValueProvider = { provide: 'ChartsPieSeries', useValue: PieSeries};\nexport const FunnelSeriesService: ValueProvider = { provide: 'ChartsFunnelSeries', useValue: FunnelSeries};\nexport const PyramidSeriesService: ValueProvider = { provide: 'ChartsPyramidSeries', useValue: PyramidSeries};\nexport const AccumulationTooltipService: ValueProvider = { provide: 'ChartsAccumulationTooltip', useValue: AccumulationTooltip};\nexport const AccumulationLegendService: ValueProvider = { provide: 'ChartsAccumulationLegend', useValue: AccumulationLegend};\nexport const AccumulationSelectionService: ValueProvider = { provide: 'ChartsAccumulationSelection', useValue: AccumulationSelection};\nexport const AccumulationHighlightService: ValueProvider = { provide: 'ChartsAccumulationHighlight', useValue: AccumulationHighlight};\nexport const AccumulationDataLabelService: ValueProvider = { provide: 'ChartsAccumulationDataLabel', useValue: AccumulationDataLabel};\nexport const AccumulationAnnotationService: ValueProvider = { provide: 'ChartsAccumulationAnnotation', useValue: AccumulationAnnotation};\n\n/**\n * NgModule definition for the AccumulationChart component with providers.\n */\n@NgModule({\n    imports: [CommonModule, AccumulationChartModule],\n    exports: [\n        AccumulationChartModule\n    ],\n    providers:[\n        PieSeriesService,\n        FunnelSeriesService,\n        PyramidSeriesService,\n        AccumulationTooltipService,\n        AccumulationLegendService,\n        AccumulationSelectionService,\n        AccumulationHighlightService,\n        AccumulationDataLabelService,\n        AccumulationAnnotationService\n    ]\n})\nexport class AccumulationChartAllModule { }","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['animation', 'border', 'dashArray', 'dataSource', 'fill', 'opacity', 'query', 'type', 'width', 'xName', 'yName'];\nlet outputs: string[] = [];\n/**\n * RangenavigatorSeries Directive\n * ```html\n * <e-rangenavigator-series-collection>\n * <e-rangenavigator-series></e-rangenavigator-series>\n * </e-rangenavigator-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-rangenavigator-series-collection>e-rangenavigator-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class RangenavigatorSeriesDirective extends ComplexBase<RangenavigatorSeriesDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * It defines the series type of the range navigator.\n     * @default 'Line'\n     */\n    public type: any;\n    /** \n     * Options to customizing animation for the series.\n     */\n    public animation: any;\n    /** \n     * Options for customizing the color and width of the series border.\n     */\n    public border: any;\n    /** \n     * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n     * @default '0'\n     */\n    public dashArray: any;\n    /** \n     * It defines the data source for a series.\n     * @default null\n     */\n    public dataSource: any;\n    /** \n     * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n     * It also represents the color of the signal lines in technical indicators. \n     * For technical indicators, the default value is 'blue' and for series, it has null.\n     * @default null\n     */\n    public fill: any;\n    /** \n     * The opacity for the background.\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * It defines the query for the data source.\n     * @default null\n     */\n    public query: any;\n    /** \n     * The stroke width for the series that is applicable only for `Line` type series. \n     * It also represents the stroke width of the signal lines in technical indicators.\n     * @default 1\n     */\n    public width: any;\n    /** \n     * It defines the xName for the series.\n     * @default null\n     */\n    public xName: any;\n    /** \n     * It defines the yName for the series.\n     * @default null\n     */\n    public yName: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * RangenavigatorSeries Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-rangenavigator>e-rangenavigator-series-collection',\n    queries: {\n        children: new ContentChildren(RangenavigatorSeriesDirective)\n    },\n})\nexport class RangenavigatorSeriesCollectionDirective extends ArrayBase<RangenavigatorSeriesCollectionDirective> {\n    constructor() {\n        super('series');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { RangeNavigator } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { RangenavigatorSeriesCollectionDirective } from './series.directive';\n\nexport const inputs: string[] = ['allowIntervalData','allowSnapping','animationDuration','background','dataSource','disableRangeSelector','enableDeferredUpdate','enableGrouping','enablePersistence','enableRtl','groupBy','height','interval','intervalType','labelFormat','labelIntersectAction','labelPlacement','labelPosition','labelStyle','locale','logBase','majorGridLines','majorTickLines','margin','maximum','minimum','navigatorBorder','navigatorStyleSettings','periodSelectorSettings','query','secondaryLabelAlignment','series','skeleton','skeletonType','theme','tickPosition','tooltip','useGroupingSeparator','value','valueType','width','xName','yName'];\nexport const outputs: string[] = ['beforePrint','beforeResize','changed','labelRender','load','loaded','resized','selectorRender','tooltipRender','dataSourceChange'];\nexport const twoWays: string[] = ['dataSource'];\n\n/**\n * RangeNavigator Component\n * ```html\n * <ejs-rangenavigator></ejs-rangenavigator>\n * ```\n */\n@Component({\n    selector: 'ejs-rangenavigator',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(RangenavigatorSeriesCollectionDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class RangeNavigatorComponent extends RangeNavigator implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\tbeforePrint: any;\n\tbeforeResize: any;\n\tchanged: any;\n\tlabelRender: any;\n\tload: any;\n\tloaded: any;\n\tresized: any;\n\tselectorRender: any;\n\ttooltipRender: any;\n\tpublic dataSourceChange: any;\n    public childSeries: QueryList<RangenavigatorSeriesCollectionDirective>;\n    public tags: string[] = ['series'];\n    @ContentChild('tooltipTemplate')\n    @Template()\n    public tooltip_template: any;\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsRangeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsPeriodSelector');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStepLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDateTime');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsLogarithmic');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDateTimeCategory');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangenavigatorSeriesDirective, RangenavigatorSeriesCollectionDirective } from './series.directive';\nimport { RangeNavigatorComponent } from './rangenavigator.component';\n\n/**\n * NgModule definition for the RangeNavigator component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        RangeNavigatorComponent,\n        RangenavigatorSeriesDirective,\n        RangenavigatorSeriesCollectionDirective\n    ],\n    exports: [\n        RangeNavigatorComponent,\n        RangenavigatorSeriesDirective,\n        RangenavigatorSeriesCollectionDirective\n    ]\n})\nexport class RangeNavigatorModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangenavigatorSeriesDirective, RangenavigatorSeriesCollectionDirective } from './series.directive';\nimport { RangeNavigatorComponent } from './rangenavigator.component';\nimport { RangeNavigatorModule } from './rangenavigator.module';\nimport {RangeTooltip, PeriodSelector} from '@syncfusion/ej2-charts'\n\n\nexport const RangeTooltipService: ValueProvider = { provide: 'ChartsRangeTooltip', useValue: RangeTooltip};\nexport const PeriodSelectorService: ValueProvider = { provide: 'ChartsPeriodSelector', useValue: PeriodSelector};\n\n/**\n * NgModule definition for the RangeNavigator component with providers.\n */\n@NgModule({\n    imports: [CommonModule, RangeNavigatorModule],\n    exports: [\n        RangeNavigatorModule\n    ],\n    providers:[\n        RangeTooltipService,\n        PeriodSelectorService\n    ]\n})\nexport class RangeNavigatorAllModule { }","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['color', 'endRange', 'opacity', 'startRange'];\nlet outputs: string[] = [];\n\n@Directive({\n    selector: 'e-rangeBandSettings>e-rangeBandSetting',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class RangeBandSettingDirective extends ComplexBase<RangeBandSettingDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * To configure sparkline rangeband color.\n     */\n    public color: any;\n    /** \n     * To configure sparkline end range.\n     * @aspdefaultvalueignore \n     */\n    public endRange: any;\n    /** \n     * To configure sparkline rangeband opacity.\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * To configure sparkline start range.\n     * @aspdefaultvalueignore \n     */\n    public startRange: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * RangeBandSetting Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-sparkline>e-rangeBandSettings',\n    queries: {\n        children: new ContentChildren(RangeBandSettingDirective)\n    },\n})\nexport class RangeBandSettingsDirective extends ArrayBase<RangeBandSettingsDirective> {\n    constructor() {\n        super('rangebandsettings');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Sparkline } from '@syncfusion/ej2-charts';\n\nimport { RangeBandSettingsDirective } from './rangebandsettings.directive';\n\nexport const inputs: string[] = ['axisSettings','border','containerArea','dataLabelSettings','dataSource','enablePersistence','enableRtl','endPointColor','fill','format','height','highPointColor','lineWidth','locale','lowPointColor','markerSettings','negativePointColor','opacity','padding','palette','query','rangeBandSettings','rangePadding','startPointColor','theme','tiePointColor','tooltipSettings','type','useGroupingSeparator','valueType','width','xName','yName'];\nexport const outputs: string[] = ['axisRendering','dataLabelRendering','load','loaded','markerRendering','pointRegionMouseClick','pointRegionMouseMove','pointRendering','resize','seriesRendering','sparklineMouseClick','sparklineMouseMove','tooltipInitialize'];\nexport const twoWays: string[] = [''];\n\n/**\n * Sparkline Component\n * ```html\n * <ejs-sparkline></ejs-sparkline>\n * ```\n */\n@Component({\n    selector: 'ejs-sparkline',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childRangeBandSettings: new ContentChild(RangeBandSettingsDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class SparklineComponent extends Sparkline implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\taxisRendering: any;\n\tdataLabelRendering: any;\n\tload: any;\n\tloaded: any;\n\tmarkerRendering: any;\n\tpointRegionMouseClick: any;\n\tpointRegionMouseMove: any;\n\tpointRendering: any;\n\tresize: any;\n\tseriesRendering: any;\n\tsparklineMouseClick: any;\n\tsparklineMouseMove: any;\n\tpublic tooltipInitialize: any;\n    public childRangeBandSettings: QueryList<RangeBandSettingsDirective>;\n    public tags: string[] = ['rangeBandSettings'];\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsSparklineTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childRangeBandSettings;\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeBandSettingDirective, RangeBandSettingsDirective } from './rangebandsettings.directive';\nimport { SparklineComponent } from './sparkline.component';\n\n/**\n * NgModule definition for the Sparkline component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        SparklineComponent,\n        RangeBandSettingDirective,\n        RangeBandSettingsDirective\n    ],\n    exports: [\n        SparklineComponent,\n        RangeBandSettingDirective,\n        RangeBandSettingsDirective\n    ]\n})\nexport class SparklineModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeBandSettingDirective, RangeBandSettingsDirective } from './rangebandsettings.directive';\nimport { SparklineComponent } from './sparkline.component';\nimport { SparklineModule } from './sparkline.module';\nimport {SparklineTooltip} from '@syncfusion/ej2-charts'\n\n\nexport const SparklineTooltipService: ValueProvider = { provide: 'ChartsSparklineTooltip', useValue: SparklineTooltip};\n\n/**\n * NgModule definition for the Sparkline component with providers.\n */\n@NgModule({\n    imports: [CommonModule, SparklineModule],\n    exports: [\n        SparklineModule\n    ],\n    providers:[\n        SparklineTooltipService\n    ]\n})\nexport class SparklineAllModule { }","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['animationDuration', 'dataSource', 'enableAnimation', 'enableSmartLabels', 'fill', 'marker', 'name', 'opacity', 'points', 'reactance', 'resistance', 'tooltip', 'tooltipMappingName', 'visibility', 'width'];\nlet outputs: string[] = [];\n\n@Directive({\n    selector: 'e-seriesCollection>e-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class SmithchartSeriesDirective extends ComplexBase<SmithchartSeriesDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * perform animation of series based on animation duration.\n     * @default '2000ms'\n     */\n    public animationDuration: any;\n    /** \n     * Specifies the dataSource\n     * @default null\n     * @isdatamanager false\n     */\n    public dataSource: any;\n    /** \n     * enable or disable the animation of series.\n     * @default false\n     */\n    public enableAnimation: any;\n    /** \n     * avoid the overlap of dataLabels.\n     * @default false\n     */\n    public enableSmartLabels: any;\n    /** \n     * color for series.\n     * @default null\n     */\n    public fill: any;\n    /** \n     * options for customizing marker.\n     */\n    public marker: any;\n    /** \n     * The name of the series visible in legend.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * opacity for series.\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * points for series.\n     * @default []\n     */\n    public points: any;\n    /** \n     * reactance name for dataSource.\n     * @default ''\n     */\n    public reactance: any;\n    /** \n     * resistance name for dataSource.\n     * @default ''\n     */\n    public resistance: any;\n    /** \n     * options for customizing tooltip.\n     */\n    public tooltip: any;\n    /** \n     * tooltip mapping name for the series.\n     * @default ''\n     */\n    public tooltipMappingName: any;\n    /** \n     * visibility for series.\n     * @default 'visible'\n     */\n    public visibility: any;\n    /** \n     * width for series.\n     * @default 1\n     */\n    public width: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * SmithchartSeries Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-smithchart>e-seriesCollection',\n    queries: {\n        children: new ContentChildren(SmithchartSeriesDirective)\n    },\n})\nexport class SmithchartSeriesCollectionDirective extends ArrayBase<SmithchartSeriesCollectionDirective> {\n    constructor() {\n        super('series');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Smithchart } from '@syncfusion/ej2-charts';\n\nimport { SmithchartSeriesCollectionDirective } from './series.directive';\n\nexport const inputs: string[] = ['background','border','elementSpacing','enablePersistence','enableRtl','font','height','horizontalAxis','legendSettings','locale','margin','radialAxis','radius','renderType','series','theme','title','width'];\nexport const outputs: string[] = ['animationComplete','axisLabelRender','beforePrint','legendRender','load','loaded','seriesRender','subtitleRender','textRender','titleRender','tooltipRender'];\nexport const twoWays: string[] = [''];\n\n/**\n * Smithchart Component\n * ```html\n * <ejs-smithchart></ejs-smithchart>\n * ```\n */\n@Component({\n    selector: 'ejs-smithchart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(SmithchartSeriesCollectionDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class SmithchartComponent extends Smithchart implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\tanimationComplete: any;\n\taxisLabelRender: any;\n\tbeforePrint: any;\n\tlegendRender: any;\n\tload: any;\n\tloaded: any;\n\tseriesRender: any;\n\tsubtitleRender: any;\n\ttextRender: any;\n\ttitleRender: any;\n\tpublic tooltipRender: any;\n    public childSeries: QueryList<SmithchartSeriesCollectionDirective>;\n    public tags: string[] = ['series'];\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsSmithchartLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsTooltipRender');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SmithchartSeriesDirective, SmithchartSeriesCollectionDirective } from './series.directive';\nimport { SmithchartComponent } from './smithchart.component';\n\n/**\n * NgModule definition for the Smithchart component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        SmithchartComponent,\n        SmithchartSeriesDirective,\n        SmithchartSeriesCollectionDirective\n    ],\n    exports: [\n        SmithchartComponent,\n        SmithchartSeriesDirective,\n        SmithchartSeriesCollectionDirective\n    ]\n})\nexport class SmithchartModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SmithchartSeriesDirective, SmithchartSeriesCollectionDirective } from './series.directive';\nimport { SmithchartComponent } from './smithchart.component';\nimport { SmithchartModule } from './smithchart.module';\nimport {SmithchartLegend, TooltipRender} from '@syncfusion/ej2-charts'\n\n\nexport const SmithchartLegendService: ValueProvider = { provide: 'ChartsSmithchartLegend', useValue: SmithchartLegend};\nexport const TooltipRenderService: ValueProvider = { provide: 'ChartsTooltipRender', useValue: TooltipRender};\n\n/**\n * NgModule definition for the Smithchart component with providers.\n */\n@NgModule({\n    imports: [CommonModule, SmithchartModule],\n    exports: [\n        SmithchartModule\n    ],\n    providers:[\n        SmithchartLegendService,\n        TooltipRenderService\n    ]\n})\nexport class SmithchartAllModule { }","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['accessibility', 'animation', 'backwardForecast', 'dashArray', 'enableTooltip', 'fill', 'forwardForecast', 'intercept', 'legendShape', 'marker', 'name', 'period', 'polynomialOrder', 'type', 'visible', 'width'];\nlet outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-stockchart-series-collection>\n * <e-stockchart-series>\n * <e-trendlines>\n * </e-trendline>\n * <e-trendline>\n * </e-trendlines>\n * </e-stockchart-series>\n * </e-stockchart-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-stockchart-series>e-trendlines>e-trendline',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StockChartTrendlineDirective extends ComplexBase<StockChartTrendlineDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Defines the type of trendline used in the series. \n     * Available types are: \n     * * Linear - A straight line that shows the general direction of data. \n     * * Exponential - A curve that fits data with exponential growth or decay. \n     * * Polynomial - A curve that fits data with a polynomial function. \n     * * Power - A curve that represents data with a power function. \n     * * Logarithmic - A curve that fits data with a logarithmic scale. \n     * * MovingAverage - A trendline that smoothens data using a moving average calculation.\n     * @default 'Linear'\n     */\n    public type: any;\n    /** \n     * Options to improve accessibility for chart trendline elements.\n     */\n    public accessibility: any;\n    /** \n     * Options to customize the animation for trendlines.\n     */\n    public animation: any;\n    /** \n     * Defines the period by which the trend is to be backward forecasted.\n     * @default 0\n     */\n    public backwardForecast: any;\n    /** \n     * Configures the pattern of dashes and gaps in the trendline stroke using the `dashArray` property.\n     * @default ''\n     */\n    public dashArray: any;\n    /** \n     * Enables or disables the tooltip for the trendline using the `enableTooltip` property. By default, it is set to true.\n     * @default true\n     */\n    public enableTooltip: any;\n    /** \n     * The fill color for the trendline, which accepts values in hex or rgba as valid CSS color strings.\n     * @default ''\n     */\n    public fill: any;\n    /** \n     * Defines the period by which the trend must be forward forecasted.\n     * @default 0\n     */\n    public forwardForecast: any;\n    /** \n     * Specifies the intercept value of the trendline.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public intercept: any;\n    /** \n     * The `legendShape` property defines the shape used to represent the trendline in the chart legend.\n     * @default 'SeriesType'\n     */\n    public legendShape: any;\n    /** \n     * Options for customizing the markers for trendlines, including shape, size, color, and other visual aspects.\n     * @deprecated \n     */\n    public marker: any;\n    /** \n     * The `name` property is used to assign a descriptive name to the trendline, which will be displayed in the chart as a legend.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * Defines the period, the price changes over which will be considered to predict the moving average trendline.\n     * @default 2\n     */\n    public period: any;\n    /** \n     * Defines the polynomial order of the polynomial trendline.\n     * @default 2\n     */\n    public polynomialOrder: any;\n    /** \n     * The `visible` property controls the display of the trendline. If set to true, the trendline will be rendered on the chart. If set to false, the trendline will be hidden.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * Defines the width of the trendline.\n     * @default 1\n     */\n    public width: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockChartTrendline Array Directive\n * @private\n */\n@Directive({\n    selector: 'e-stockchart-series>e-trendlines',\n    queries: {\n        children: new ContentChildren(StockChartTrendlineDirective)\n    },\n})\nexport class StockChartTrendlinesDirective extends ArrayBase<StockChartTrendlinesDirective> {\n    constructor() {\n        super('trendlines');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { StockChartTrendlinesDirective } from './trendlines.directive';\n\nlet input: string[] = ['animation', 'bearFillColor', 'border', 'bullFillColor', 'cardinalSplineTension', 'close', 'columnSpacing', 'columnWidth', 'cornerRadius', 'dashArray', 'dataSource', 'emptyPointSettings', 'enableSolidCandles', 'enableTooltip', 'fill', 'high', 'legendImageUrl', 'legendShape', 'low', 'marker', 'name', 'opacity', 'open', 'pointColorMapping', 'query', 'selectionStyle', 'showNearestTooltip', 'tooltipMappingName', 'trendlines', 'type', 'visible', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName', 'yName'];\nlet outputs: string[] = [];\n/**\n * Series Directive\n * ```html\n * <e-stockchart-series-collection>\n * <e-stockchart-series></e-stockchart-series>\n * </e-stockchart-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-stockchart-series-collection>e-stockchart-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childTrendlines: new ContentChild(StockChartTrendlinesDirective)\n    }\n})\nexport class StockChartSeriesDirective extends ComplexBase<StockChartSeriesDirective> {\n    public directivePropList: any;\n\t\n    public childTrendlines: any;\n    public tags: string[] = ['trendlines'];\n    /** \n     * The type of the series are \n     * * Line \n     * * Column \n     * * Area \n     * * Spline \n     * * Hilo \n     * * HiloOpenClose \n     * * Candle\n     * @default 'Candle'\n     */\n    public type: any;\n    /** \n     * Options to customizing animation for the series.\n     */\n    public animation: any;\n    /** \n     * This property is used in stock charts to visualize the price movements in stock. \n     * It defines the color of the candle/point, when the opening price is less than the closing price.\n     * @default '#2ecd71'\n     */\n    public bearFillColor: any;\n    /** \n     * Options to customizing the border of the series. This is applicable only for `Column` and `Bar` type series.\n     */\n    public border: any;\n    /** \n     * This property is used in financial charts to visualize the price movements in stock. \n     * It defines the color of the candle/point, when the opening price is higher than the closing price.\n     * @default '#e74c3d'\n     */\n    public bullFillColor: any;\n    /** \n     * It defines tension of cardinal spline types.\n     * @default 0.5\n     */\n    public cardinalSplineTension: any;\n    /** \n     * The DataSource field that contains the close value of y \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public close: any;\n    /** \n     * To render the column series points with particular column spacing. It takes value from 0 - 1.\n     * @default 0\n     */\n    public columnSpacing: any;\n    /** \n     * To render the column series points with particular column width. If the series type is histogram the \n     * default value is 1 otherwise 0.7.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public columnWidth: any;\n    /** \n     * To render the column series points with particular rounded corner.\n     */\n    public cornerRadius: any;\n    /** \n     * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n     * @default '0'\n     */\n    public dashArray: any;\n    /** \n     * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager.\n     * @default ''\n     */\n    public dataSource: any;\n    /** \n     * options to customize the empty points in series.\n     */\n    public emptyPointSettings: any;\n    /** \n     * This property is applicable for candle series. \n     * It enables/disables to visually compare the current values with the previous values in stock.\n     * @default false\n     */\n    public enableSolidCandles: any;\n    /** \n     * If set true, the Tooltip for series will be visible.\n     * @default true\n     */\n    public enableTooltip: any;\n    /** \n     * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n     * It also represents the color of the signal lines in technical indicators. \n     * For technical indicators, the default value is 'blue' and for series, it has null.\n     * @default null\n     */\n    public fill: any;\n    /** \n     * The DataSource field that contains the high value of y \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public high: any;\n    /** \n     * The URL for the Image that is to be displayed as a Legend icon.  It requires  `legendShape` value to be an `Image`.\n     * @default ''\n     */\n    public legendImageUrl: any;\n    /** \n     * The shape of the legend. Each series has its own legend shape. They are \n     * * Circle - Renders a circle. \n     * * Rectangle - Renders a rectangle. \n     * * Triangle - Renders a triangle. \n     * * Diamond - Renders a diamond. \n     * * Cross - Renders a cross. \n     * * HorizontalLine - Renders a horizontalLine. \n     * * VerticalLine - Renders a verticalLine. \n     * * Pentagon - Renders a pentagon. \n     * * InvertedTriangle - Renders a invertedTriangle. \n     * * SeriesType -Render a legend shape based on series type. \n     * * Image -Render a image.     *\n     * @default 'SeriesType'\n     */\n    public legendShape: any;\n    /** \n     * The DataSource field that contains the low value of y \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public low: any;\n    /** \n     * Options for displaying and customizing markers for individual points in a series.\n     */\n    public marker: any;\n    /** \n     * The name of the series visible in legend.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * The opacity of the series.\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * The DataSource field that contains the open value of y \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public open: any;\n    /** \n     * The DataSource field that contains the color value of point \n     * It is applicable for series\n     * @default ''\n     */\n    public pointColorMapping: any;\n    /** \n     * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n     * @default null\n     */\n    public query: any;\n    /** \n     * Custom style for the selected series or points.\n     * @default null\n     */\n    public selectionStyle: any;\n    /** \n     * Enables or disables the display of tooltips for the nearest data point to the cursor for series.\n     * @default true\n     */\n    public showNearestTooltip: any;\n    /** \n     * The provided value will be considered as a Tooltip name\n     * @default ''\n     */\n    public tooltipMappingName: any;\n    /** \n     * Defines the collection of trendlines that are used to predict the trend\n     */\n    public trendlines: any;\n    /** \n     * Specifies the visibility of series.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * Defines the data source field that contains the volume value in candle charts \n     * It is applicable for financial series and technical indicators\n     * @default ''\n     */\n    public volume: any;\n    /** \n     * The stroke width for the series that is applicable only for `Line` type series. \n     * It also represents the stroke width of the signal lines in technical indicators.\n     * @default 1\n     */\n    public width: any;\n    /** \n     * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n     * It is applicable for series and technical indicators\n     * @default null\n     */\n    public xAxisName: any;\n    /** \n     * The DataSource field that contains the x value. \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public xName: any;\n    /** \n     * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n     * It is applicable for series and technical indicators\n     * @default null\n     */\n    public yAxisName: any;\n    /** \n     * The DataSource field that contains the y value.\n     * @default ''\n     */\n    public yName: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockChartSeries Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-stockchart>e-stockchart-series-collection',\n    queries: {\n        children: new ContentChildren(StockChartSeriesDirective)\n    },\n})\nexport class StockChartSeriesCollectionDirective extends ArrayBase<StockChartSeriesCollectionDirective> {\n    constructor() {\n        super('series');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['coefficient', 'crossesAt', 'crossesInAxis', 'crosshairTooltip', 'description', 'desiredIntervals', 'edgeLabelPlacement', 'enableAutoIntervalOnZooming', 'enableTrim', 'interval', 'intervalType', 'isInversed', 'labelFormat', 'labelIntersectAction', 'labelPlacement', 'labelPosition', 'labelRotation', 'labelStyle', 'lineStyle', 'logBase', 'majorGridLines', 'majorTickLines', 'maximum', 'maximumLabelWidth', 'maximumLabels', 'minimum', 'minorGridLines', 'minorTickLines', 'minorTicksPerInterval', 'name', 'opposedPosition', 'placeNextToAxisLine', 'plotOffset', 'rangePadding', 'rowIndex', 'skeleton', 'skeletonType', 'span', 'startAngle', 'stripLines', 'tabIndex', 'tickPosition', 'title', 'titleStyle', 'valueType', 'visible', 'zoomFactor', 'zoomPosition'];\nlet outputs: string[] = [];\n/**\n * Axis Directive\n * ```html\n * <e-stockchart-axes><e-stockchart-axis></e-stockchart-axis></e-stockchart-axes>\n * ```\n */\n@Directive({\n    selector: 'e-stockchart-axes>e-stockchart-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StockChartAxisDirective extends ComplexBase<StockChartAxisDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * The polar radar radius position.\n     * @default 100\n     */\n    public coefficient: any;\n    /** \n     * Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\n     * @default null\n     */\n    public crossesAt: any;\n    /** \n     * Specifies axis name with which the axis line has to be crossed.\n     * @default null\n     */\n    public crossesInAxis: any;\n    /** \n     * Options to customize the crosshair ToolTip.\n     */\n    public crosshairTooltip: any;\n    /** \n     * Description for axis and its element.\n     * @default null\n     */\n    public description: any;\n    /** \n     * With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public desiredIntervals: any;\n    /** \n     * Specifies the position of labels at the edge of the axis.They are, \n     * * None: No action will be performed. \n     * * Hide: Edge label will be hidden. \n     * * Shift: Shifts the edge labels.\n     * @default 'None'\n     */\n    public edgeLabelPlacement: any;\n    /** \n     * If set to true, axis interval will be calculated automatically with respect to the zoomed range.\n     * @default true\n     */\n    public enableAutoIntervalOnZooming: any;\n    /** \n     * Specifies the Trim property for an axis.\n     * @default false\n     */\n    public enableTrim: any;\n    /** \n     * Specifies the interval for an axis.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public interval: any;\n    /** \n     * Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are, \n     * * Auto: Defines the interval of the axis based on data. \n     * * Years: Defines the interval of the axis in years. \n     * * Months: Defines the interval of the axis in months. \n     * * Days: Defines the interval of the axis in days. \n     * * Hours: Defines the interval of the axis in hours. \n     * * Minutes: Defines the interval of the axis in minutes.\n     * @default 'Auto'\n     */\n    public intervalType: any;\n    /** \n     * It specifies whether the axis to be rendered in inversed manner or not.\n     * @default false\n     */\n    public isInversed: any;\n    /** \n     * Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc. \n     * It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n     * @default ''\n     */\n    public labelFormat: any;\n    /** \n     * Specifies the actions like `Hide`, `Rotate45`, and `Rotate90` when the axis labels intersect with each other.They are, \n     * * None: Shows all the labels. \n     * * Hide: Hides the label when it intersects. \n     * * Rotate45: Rotates the label to 45 degree when it intersects. \n     * * Rotate90: Rotates the label to 90 degree when it intersects.\n     * @default Hide\n     */\n    public labelIntersectAction: any;\n    /** \n     * Specifies the placement of a label for category axis. They are, \n     * * betweenTicks: Renders the label between the ticks. \n     * * onTicks: Renders the label on the ticks.\n     * @default 'BetweenTicks'\n     */\n    public labelPlacement: any;\n    /** \n     * Specifies the placement of a labels to the axis line. They are, \n     * * inside: Renders the labels inside to the axis line. \n     * * outside: Renders the labels outside to the axis line.\n     * @default 'Outside'\n     */\n    public labelPosition: any;\n    /** \n     * The angle to which the axis label gets rotated.\n     * @default 0\n     */\n    public labelRotation: any;\n    /** \n     * Options to customize the axis label.\n     */\n    public labelStyle: any;\n    /** \n     * Options for customizing axis lines.\n     */\n    public lineStyle: any;\n    /** \n     * The base value for logarithmic axis. It requires `valueType` to be `Logarithmic`.\n     * @default 10\n     */\n    public logBase: any;\n    /** \n     * Options for customizing major grid lines.\n     */\n    public majorGridLines: any;\n    /** \n     * Options for customizing major tick lines.\n     */\n    public majorTickLines: any;\n    /** \n     * Specifies the maximum range of an axis.\n     * @default null\n     */\n    public maximum: any;\n    /** \n     * Specifies the maximum width of an axis label.\n     * @default 34.\n     */\n    public maximumLabelWidth: any;\n    /** \n     * The maximum number of label count per 100 pixels with respect to the axis length.\n     * @default 3\n     */\n    public maximumLabels: any;\n    /** \n     * Specifies the minimum range of an axis.\n     * @default null\n     */\n    public minimum: any;\n    /** \n     * Options for customizing minor grid lines.\n     */\n    public minorGridLines: any;\n    /** \n     * Options for customizing minor tick lines.\n     */\n    public minorTickLines: any;\n    /** \n     * Specifies the number of minor ticks per interval.\n     * @default 0\n     */\n    public minorTicksPerInterval: any;\n    /** \n     * Unique identifier of an axis. \n     * To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * If set to true, the axis will render at the opposite side of its default position.\n     * @default false\n     */\n    public opposedPosition: any;\n    /** \n     * Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\n     * @default true\n     */\n    public placeNextToAxisLine: any;\n    /** \n     * Left and right padding for the plot area in pixels.\n     * @default 0\n     */\n    public plotOffset: any;\n    /** \n     * Specifies the padding for the axis range in terms of interval.They are, \n     * * none: Padding cannot be applied to the axis. \n     * * normal: Padding is applied to the axis based on the range calculation. \n     * * additional: Interval of the axis is added as padding to the minimum and maximum values of the range. \n     * * round: Axis range is rounded to the nearest possible value divided by the interval.\n     * @default 'Auto'\n     */\n    public rangePadding: any;\n    /** \n     * Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `rows`. \n     * \n     * @default 0\n     */\n    public rowIndex: any;\n    /** \n     * Specifies the skeleton format in which the dateTime format will process.\n     * @default ''\n     */\n    public skeleton: any;\n    /** \n     * It specifies the type of format to be used in dateTime format process.\n     * @default 'DateTime'\n     */\n    public skeletonType: any;\n    /** \n     * Specifies the number of `columns` or `rows` an axis has to span horizontally or vertically.\n     * @default 1\n     */\n    public span: any;\n    /** \n     * The start angle for the series.\n     * @default 0\n     */\n    public startAngle: any;\n    /** \n     * Specifies the stripLine collection for the axis.\n     */\n    public stripLines: any;\n    /** \n     * TabIndex value for the axis.\n     * @default 2\n     */\n    public tabIndex: any;\n    /** \n     * Specifies the placement of a ticks to the axis line. They are, \n     * * inside: Renders the ticks inside to the axis line. \n     * * outside: Renders the ticks outside to the axis line.\n     * @default 'Outside'\n     */\n    public tickPosition: any;\n    /** \n     * Specifies the title of an axis.\n     * @default ''\n     */\n    public title: any;\n    /** \n     * Options for customizing the axis title.\n     */\n    public titleStyle: any;\n    /** \n     * Specifies the data types that the axis can handle: \n     * * Double: This type is used for rendering a numeric axis to accommodate numeric data. \n     * * DateTime: This type is utilized for rendering a date-time axis to manage date-time data. \n     * * Category: This type is employed for rendering a category axis to manage categorical data. \n     * * Logarithmic: This type is applied for rendering a logarithmic axis to handle a wide range of values. \n     * * DateTimeCategory: This type is used to render a date time category axis for managing business days.\n     * @default 'Double'\n     * @blazortype Syncfusion.EJ2.Blazor.Charts.ValueType\n     * @isenumeration true\n     */\n    public valueType: any;\n    /** \n     * If set to true, axis label will be visible.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\n     * @default 1\n     */\n    public zoomFactor: any;\n    /** \n     * Position of the zoomed axis. Value ranges from 0 to 1.\n     * @default 0\n     */\n    public zoomPosition: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockChartAxis Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-stockchart>e-stockchart-axes',\n    queries: {\n        children: new ContentChildren(StockChartAxisDirective)\n    },\n})\nexport class StockChartAxesDirective extends ArrayBase<StockChartAxesDirective> {\n    constructor() {\n        super('axes');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['border', 'height'];\nlet outputs: string[] = [];\n/**\n * Row Directive\n * ```html\n * <e-rows><e-row></e-row><e-rows>\n * ```\n */\n@Directive({\n    selector: 'e-stockchart-rows>e-striplines>e-stockchart-row',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StockChartRowDirective extends ComplexBase<StockChartRowDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Options to customize the border of the rows.\n     */\n    public border: any;\n    /** \n     * The height of the row as a string accept input both as '100px' and '100%'. \n     * If specified as '100%, row renders to the full height of its chart.\n     * @default '100%'\n     */\n    public height: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockChartRow Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-stockchart>e-stockchart-rows',\n    queries: {\n        children: new ContentChildren(StockChartRowDirective)\n    },\n})\nexport class StockChartRowsDirective extends ArrayBase<StockChartRowsDirective> {\n    constructor() {\n        super('rows');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet input: string[] = ['content', 'coordinateUnits', 'description', 'horizontalAlignment', 'region', 'verticalAlignment', 'x', 'xAxisName', 'y', 'yAxisName'];\nlet outputs: string[] = [];\n/**\n * Annotation Directive\n * ```html\n * <e-stockchart-annotations><e-stockchart-annotation></e-stockchart-annotation><e-stockchart-annotations>\n * ```\n */\n@Directive({\n    selector: 'ejs-stockchart-annotations>e-stockchart-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StockChartAnnotationDirective extends ComplexBase<StockChartAnnotationDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the coordinate units of the annotation. They are \n     * * Pixel - Annotation renders based on x and y pixel value. \n     * * Point - Annotation renders based on x and y axis value.\n     * @default 'Pixel'\n     */\n    public coordinateUnits: any;\n    /** \n     * Information about annotation for assistive technology.\n     * @default null\n     */\n    public description: any;\n    /** \n     * Specifies the alignment of the annotation. They are \n     * * Near - Align the annotation element as left side. \n     * * Far - Align the annotation element as right side. \n     * * Center - Align the annotation element as mid point.\n     * @default 'Center'\n     */\n    public horizontalAlignment: any;\n    /** \n     * Specifies the regions of the annotation. They are \n     * * Chart - Annotation renders based on chart coordinates. \n     * * Series - Annotation renders based on series coordinates.\n     * @default 'Chart'\n     */\n    public region: any;\n    /** \n     * Specifies the position of the annotation. They are \n     * * Top - Align the annotation element as top side. \n     * * Bottom - Align the annotation element as bottom side. \n     * * Middle - Align the annotation element as mid point.\n     * @default 'Middle'\n     */\n    public verticalAlignment: any;\n    /** \n     * if set coordinateUnit as `Pixel` X specifies the axis value \n     * else is specifies pixel or percentage of coordinate\n     * @default '0'\n     */\n    public x: any;\n    /** \n     * The name of horizontal axis associated with the annotation. \n     * It requires `axes` of chart.\n     * @default null\n     */\n    public xAxisName: any;\n    /** \n     * if set coordinateUnit as `Pixel` Y specifies the axis value \n     * else is specifies pixel or percentage of coordinate\n     * @default '0'\n     */\n    public y: any;\n    /** \n     * The name of vertical axis associated with the annotation. \n     * It requires `axes` of chart.\n     * @default null\n     */\n    public yAxisName: any;\n    /** \n     * Content of the annotation, which accepts the id of the custom element.\n     * @default null\n     */\n    @ContentChild('content')\n    @Template()\n    public content: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockChartAnnotation Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-stockchart>e-stockchart-annotations',\n    queries: {\n        children: new ContentChildren(StockChartAnnotationDirective)\n    },\n})\nexport class StockChartAnnotationsDirective extends ArrayBase<StockChartAnnotationsDirective> {\n    constructor() {\n        super('annotations');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['point', 'series'];\nlet outputs: string[] = [];\n/**\n * Selected Data Directive\n * ```html\n * <e-selecteddataindexes><e-selecteddataindex></e-selecteddataindex><e-selecteddataindexes>\n * ```\n */\n@Directive({\n    selector: 'ejs-stockchart-selectedDataIndexes>e-stockchart-selectedDataIndex',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StockChartSelectedDataIndexDirective extends ComplexBase<StockChartSelectedDataIndexDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies index of point.\n     * @default 0\n     * @asptype int\n     */\n    public point: any;\n    /** \n     * Specifies index of series.\n     * @default 0\n     * @asptype int\n     */\n    public series: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockChartSelectedDataIndex Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-stockchart>e-stockchart-selectedDataIndexes',\n    queries: {\n        children: new ContentChildren(StockChartSelectedDataIndexDirective)\n    },\n})\nexport class StockChartSelectedDataIndexesDirective extends ArrayBase<StockChartSelectedDataIndexesDirective> {\n    constructor() {\n        super('selecteddataindexes');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['interval', 'intervalType', 'selected', 'text'];\nlet outputs: string[] = [];\n/**\n * Indicator Directive\n * ```html\n * <e-stockchart-periods>\n * <e-stockchart-period></e-stockchart-period>\n * </e-stockchart-periods>\n * ```\n */\n@Directive({\n    selector: 'e-stockchart-indicators>e-stockchart-period',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StockChartPeriodDirective extends ComplexBase<StockChartPeriodDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Count value for the button.\n     * @default 1\n     */\n    public interval: any;\n    /** \n     * IntervalType of button.\n     * @default 'Years'\n     */\n    public intervalType: any;\n    /** \n     * To select the default period.\n     * @default false\n     */\n    public selected: any;\n    /** \n     * Text to be displayed on the button.\n     * @default null\n     */\n    public text: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockChartPeriod Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-stockchart>e-stockchart-periods',\n    queries: {\n        children: new ContentChildren(StockChartPeriodDirective)\n    },\n})\nexport class StockChartPeriodsDirective extends ArrayBase<StockChartPeriodsDirective> {\n    constructor() {\n        super('periods');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['background', 'border', 'date', 'description', 'placeAt', 'seriesIndexes', 'showOnSeries', 'text', 'textStyle', 'type'];\nlet outputs: string[] = [];\n/**\n * StockEvents\n * ```html\n * <e-stockchart-stockevents>\n * <e-stockchart-stockevent></e-stockchart-stockevent>\n * </e-stockchart-stockevents>\n * ```\n */\n@Directive({\n    selector: 'e-stockchart-indicators>e-stockchart-stockevent',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StockEventDirective extends ComplexBase<StockEventDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies type of stock events \n     * * Circle \n     * * Square \n     * * Flag \n     * * Text \n     * * Sign \n     * * Triangle \n     * * InvertedTriangle \n     * * ArrowUp \n     * * ArrowDown \n     * * ArrowLeft \n     * * ArrowRight\n     * @default 'Circle'\n     */\n    public type: any;\n    /** \n     * The background of the stock event that accepts value in hex and rgba as a valid CSS color string.\n     * @default 'transparent'\n     */\n    public background: any;\n    /** \n     * Options to customize the border of the stock events.\n     */\n    public border: any;\n    /** \n     * Date value of stock event in which stock event shows.\n     */\n    public date: any;\n    /** \n     * Specifies the description for the chart which renders in tooltip for stock event.\n     */\n    public description: any;\n    /** \n     * Corresponding values in which stock event placed. \n     * * Close \n     * * Open \n     * * High \n     * * Close\n     * @default 'close'\n     */\n    public placeAt: any;\n    /** \n     * To render stock events in particular series. \n     * By default stock events will render for all series.\n     * @default []\n     */\n    public seriesIndexes: any;\n    /** \n     * Enables the stock events to be render on series. If it disabled, stock event rendered on primaryXAxis.\n     * @default true\n     */\n    public showOnSeries: any;\n    /** \n     * Specifies the text for the stock chart text.\n     */\n    public text: any;\n    /** \n     * Options to customize the styles for stock events text.\n     */\n    public textStyle: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockEvent Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-stockchart>e-stockchart-stockevents',\n    queries: {\n        children: new ContentChildren(StockEventDirective)\n    },\n})\nexport class StockEventsDirective extends ArrayBase<StockEventsDirective> {\n    constructor() {\n        super('stockevents');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['animation', 'bandColor', 'close', 'dPeriod', 'dashArray', 'dataSource', 'fastPeriod', 'field', 'fill', 'high', 'kPeriod', 'low', 'lowerLine', 'macdLine', 'macdNegativeColor', 'macdPositiveColor', 'macdType', 'open', 'overBought', 'overSold', 'period', 'periodLine', 'pointColorMapping', 'query', 'seriesName', 'showZones', 'slowPeriod', 'standardDeviation', 'type', 'upperLine', 'volume', 'width', 'xAxisName', 'xName', 'yAxisName'];\nlet outputs: string[] = [];\n/**\n * Indicator Directive\n * ```html\n * <e-stockchart-indicators>\n * <e-stockchart-indicator></e-stockchart-indicator>\n * </e-stockchart-indicators>\n * ```\n */\n@Directive({\n    selector: 'e-stockchart-indicators>e-stockchart-indicator',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class StockChartIndicatorDirective extends ComplexBase<StockChartIndicatorDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Defines the type of the technical indicator.\n     * @default 'Sma'\n     */\n    public type: any;\n    /** \n     * Options to customizing animation for the series.\n     */\n    public animation: any;\n    /** \n     * Options for customizing the BollingerBand in the indicator.\n     * @default 'rgba(211,211,211,0.25)'\n     */\n    public bandColor: any;\n    /** \n     * The DataSource field that contains the close value of y \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public close: any;\n    /** \n     * Defines the period, the price changes over which will define the %D value in stochastic indicators.\n     * @default 3\n     */\n    public dPeriod: any;\n    /** \n     * Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\n     * @default '0'\n     */\n    public dashArray: any;\n    /** \n     * Specifies the DataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n     * \n     * @default ''\n     */\n    public dataSource: any;\n    /** \n     * Sets the fast period to define the Macd line.\n     * @default 26\n     */\n    public fastPeriod: any;\n    /** \n     * Defines the field to compare the current value with previous values.\n     * @default 'Close'\n     */\n    public field: any;\n    /** \n     * The fill color for the series that accepts value in hex and rgba as a valid CSS color string. \n     * It also represents the color of the signal lines in technical indicators. \n     * For technical indicators, the default value is 'blue' and for series, it has null.\n     * @default null\n     */\n    public fill: any;\n    /** \n     * The DataSource field that contains the high value of y \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public high: any;\n    /** \n     * Defines the look back period, the price changes over which will define the %K value in stochastic indicators.\n     * @default 14\n     */\n    public kPeriod: any;\n    /** \n     * The DataSource field that contains the low value of y \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public low: any;\n    /** \n     * Defines the appearance of lower line in technical indicators.\n     */\n    public lowerLine: any;\n    /** \n     * Defines the appearance of the the MacdLine of Macd indicator.\n     * @default { color: '#ff9933', width: 2 }\n     */\n    public macdLine: any;\n    /** \n     * Defines the color of the negative bars in Macd indicators.\n     * @default '#e74c3d'\n     */\n    public macdNegativeColor: any;\n    /** \n     * Defines the color of the positive bars in Macd indicators.\n     * @default '#2ecd71'\n     */\n    public macdPositiveColor: any;\n    /** \n     * Defines the type of the Macd indicator.\n     * @default 'Both'\n     */\n    public macdType: any;\n    /** \n     * The DataSource field that contains the open value of y \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public open: any;\n    /** \n     * Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators.\n     * @default 80\n     */\n    public overBought: any;\n    /** \n     * Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators.\n     * @default 20\n     */\n    public overSold: any;\n    /** \n     * Defines the period, the price changes over which will be considered to predict the trend.\n     * @default 14\n     */\n    public period: any;\n    /** \n     * Defines the appearance of period line in technical indicators.\n     */\n    public periodLine: any;\n    /** \n     * The DataSource field that contains the color value of point \n     * It is applicable for series\n     * @default ''\n     */\n    public pointColorMapping: any;\n    /** \n     * Specifies query to select data from DataSource. This property is applicable only when the DataSource is `ej.DataManager`.\n     * @default null\n     */\n    public query: any;\n    /** \n     * Defines the name of the series, the data of which has to be depicted as indicator.\n     * @default ''\n     */\n    public seriesName: any;\n    /** \n     * Enables/Disables the over-bought and over-sold regions.\n     * @default true\n     */\n    public showZones: any;\n    /** \n     * Sets the slow period to define the Macd line.\n     * @default 12\n     */\n    public slowPeriod: any;\n    /** \n     * Sets the standard deviation values that helps to define the upper and lower bollinger bands.\n     * @default 2\n     */\n    public standardDeviation: any;\n    /** \n     * Defines the appearance of the upper line in technical indicators.\n     */\n    public upperLine: any;\n    /** \n     * Defines the data source field that contains the volume value in candle charts \n     * It is applicable for financial series and technical indicators\n     * @default ''\n     */\n    public volume: any;\n    /** \n     * The stroke width for the series that is applicable only for `Line` type series. \n     * It also represents the stroke width of the signal lines in technical indicators.\n     * @default 1\n     */\n    public width: any;\n    /** \n     * The name of the horizontal axis associated with the series. It requires `axes` of the chart. \n     * It is applicable for series and technical indicators \n     * \n     * @default null\n     */\n    public xAxisName: any;\n    /** \n     * The DataSource field that contains the x value. \n     * It is applicable for series and technical indicators\n     * @default ''\n     */\n    public xName: any;\n    /** \n     * The name of the vertical axis associated with the series. It requires `axes` of the chart. \n     * It is applicable for series and technical indicators \n     * \n     * @default null\n     */\n    public yAxisName: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * StockChartIndicator Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-stockchart>e-stockchart-indicators',\n    queries: {\n        children: new ContentChildren(StockChartIndicatorDirective)\n    },\n})\nexport class StockChartIndicatorsDirective extends ArrayBase<StockChartIndicatorsDirective> {\n    constructor() {\n        super('indicators');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { StockChart } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { StockChartSeriesCollectionDirective } from './series.directive';\nimport { StockChartAxesDirective } from './axes.directive';\nimport { StockChartRowsDirective } from './rows.directive';\nimport { StockChartAnnotationsDirective } from './annotations.directive';\nimport { StockChartSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { StockChartPeriodsDirective } from './periods.directive';\nimport { StockEventsDirective } from './stockevents.directive';\nimport { StockChartIndicatorsDirective } from './indicators.directive';\n\nexport const inputs: string[] = ['annotations','axes','background','border','chartArea','crosshair','dataSource','enableCustomRange','enablePeriodSelector','enablePersistence','enableRtl','enableSelector','exportType','height','indicatorType','indicators','isMultiSelect','isSelect','isTransposed','legendSettings','locale','margin','periods','primaryXAxis','primaryYAxis','rows','selectedDataIndexes','selectionMode','series','seriesType','stockEvents','theme','title','titleStyle','tooltip','trendlineType','width','zoomSettings'];\nexport const outputs: string[] = ['axisLabelRender','beforeExport','legendClick','legendRender','load','loaded','onZooming','pointClick','pointMove','rangeChange','selectorRender','seriesRender','stockChartMouseClick','stockChartMouseDown','stockChartMouseLeave','stockChartMouseMove','stockChartMouseUp','stockEventRender','tooltipRender','dataSourceChange'];\nexport const twoWays: string[] = ['dataSource'];\n\n/**\n * Stock Chart Component\n * ```html\n * <ejs-stockchart></ejs-stockchart>\n * ```\n */\n@Component({\n    selector: 'ejs-stockchart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(StockChartSeriesCollectionDirective), \n        childAxes: new ContentChild(StockChartAxesDirective), \n        childRows: new ContentChild(StockChartRowsDirective), \n        childAnnotations: new ContentChild(StockChartAnnotationsDirective), \n        childSelectedDataIndexes: new ContentChild(StockChartSelectedDataIndexesDirective), \n        childPeriods: new ContentChild(StockChartPeriodsDirective), \n        childStockEvents: new ContentChild(StockEventsDirective), \n        childIndicators: new ContentChild(StockChartIndicatorsDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class StockChartComponent extends StockChart implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\taxisLabelRender: any;\n\tbeforeExport: any;\n\tlegendClick: any;\n\tlegendRender: any;\n\tload: any;\n\tloaded: any;\n\tonZooming: any;\n\tpointClick: any;\n\tpointMove: any;\n\trangeChange: any;\n\tselectorRender: any;\n\tseriesRender: any;\n\tstockChartMouseClick: any;\n\tstockChartMouseDown: any;\n\tstockChartMouseLeave: any;\n\tstockChartMouseMove: any;\n\tstockChartMouseUp: any;\n\tstockEventRender: any;\n\ttooltipRender: any;\n\tpublic dataSourceChange: any;\n    public childSeries: QueryList<StockChartSeriesCollectionDirective>;\n    public childAxes: QueryList<StockChartAxesDirective>;\n    public childRows: QueryList<StockChartRowsDirective>;\n    public childAnnotations: QueryList<StockChartAnnotationsDirective>;\n    public childSelectedDataIndexes: QueryList<StockChartSelectedDataIndexesDirective>;\n    public childPeriods: QueryList<StockChartPeriodsDirective>;\n    public childStockEvents: QueryList<StockEventsDirective>;\n    public childIndicators: QueryList<StockChartIndicatorsDirective>;\n    public tags: string[] = ['series', 'axes', 'rows', 'annotations', 'selectedDataIndexes', 'periods', 'stockEvents', 'indicators'];\n    @ContentChild('tooltipTemplate')\n    @Template()\n    public tooltip_template: any;\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsLineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsColumnSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSplineSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSplineAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStripLine');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsRangeAreaSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCrosshair');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDateTime');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsZoom');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDataLabel');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSelection');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsChartAnnotation');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsHiloSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsHiloOpenCloseSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCandleSeries');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsTmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsEmaIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAccumulationDistributionIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsMacdIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsAtrIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsRsiIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsMomentumIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStochasticIndicator');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsBollingerBands');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsTrendlines');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsRangeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsExport');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStockLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDateTimeCategory');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        if (this.childAxes) {\n                    this.tagObjects[1].instance = this.childAxes as any;\n                }\n        if (this.childRows) {\n                    this.tagObjects[2].instance = this.childRows as any;\n                }\n        if (this.childAnnotations) {\n                    this.tagObjects[3].instance = this.childAnnotations as any;\n                }\n        if (this.childSelectedDataIndexes) {\n                    this.tagObjects[4].instance = this.childSelectedDataIndexes as any;\n                }\n        if (this.childPeriods) {\n                    this.tagObjects[5].instance = this.childPeriods as any;\n                }\n        if (this.childStockEvents) {\n                    this.tagObjects[6].instance = this.childStockEvents as any;\n                }\n        if (this.childIndicators) {\n                    this.tagObjects[7].instance = this.childIndicators as any;\n                }\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockChartTrendlineDirective, StockChartTrendlinesDirective } from './trendlines.directive';\nimport { StockChartSeriesDirective, StockChartSeriesCollectionDirective } from './series.directive';\nimport { StockChartAxisDirective, StockChartAxesDirective } from './axes.directive';\nimport { StockChartRowDirective, StockChartRowsDirective } from './rows.directive';\nimport { StockChartAnnotationDirective, StockChartAnnotationsDirective } from './annotations.directive';\nimport { StockChartSelectedDataIndexDirective, StockChartSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { StockChartPeriodDirective, StockChartPeriodsDirective } from './periods.directive';\nimport { StockEventDirective, StockEventsDirective } from './stockevents.directive';\nimport { StockChartIndicatorDirective, StockChartIndicatorsDirective } from './indicators.directive';\nimport { StockChartComponent } from './stockchart.component';\n\n/**\n * NgModule definition for the StockChart component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        StockChartComponent,\n        StockChartTrendlineDirective,\n        StockChartTrendlinesDirective,\n        StockChartSeriesDirective,\n        StockChartSeriesCollectionDirective,\n        StockChartAxisDirective,\n        StockChartAxesDirective,\n        StockChartRowDirective,\n        StockChartRowsDirective,\n        StockChartAnnotationDirective,\n        StockChartAnnotationsDirective,\n        StockChartSelectedDataIndexDirective,\n        StockChartSelectedDataIndexesDirective,\n        StockChartPeriodDirective,\n        StockChartPeriodsDirective,\n        StockEventDirective,\n        StockEventsDirective,\n        StockChartIndicatorDirective,\n        StockChartIndicatorsDirective\n    ],\n    exports: [\n        StockChartComponent,\n        StockChartTrendlineDirective,\n        StockChartTrendlinesDirective,\n        StockChartSeriesDirective,\n        StockChartSeriesCollectionDirective,\n        StockChartAxisDirective,\n        StockChartAxesDirective,\n        StockChartRowDirective,\n        StockChartRowsDirective,\n        StockChartAnnotationDirective,\n        StockChartAnnotationsDirective,\n        StockChartSelectedDataIndexDirective,\n        StockChartSelectedDataIndexesDirective,\n        StockChartPeriodDirective,\n        StockChartPeriodsDirective,\n        StockEventDirective,\n        StockEventsDirective,\n        StockChartIndicatorDirective,\n        StockChartIndicatorsDirective\n    ]\n})\nexport class StockChartModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockChartTrendlineDirective, StockChartTrendlinesDirective } from './trendlines.directive';\nimport { StockChartSeriesDirective, StockChartSeriesCollectionDirective } from './series.directive';\nimport { StockChartAxisDirective, StockChartAxesDirective } from './axes.directive';\nimport { StockChartRowDirective, StockChartRowsDirective } from './rows.directive';\nimport { StockChartAnnotationDirective, StockChartAnnotationsDirective } from './annotations.directive';\nimport { StockChartSelectedDataIndexDirective, StockChartSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { StockChartPeriodDirective, StockChartPeriodsDirective } from './periods.directive';\nimport { StockEventDirective, StockEventsDirective } from './stockevents.directive';\nimport { StockChartIndicatorDirective, StockChartIndicatorsDirective } from './indicators.directive';\nimport { StockChartComponent } from './stockchart.component';\nimport { StockChartModule } from './stockchart.module';\nimport {StockLegend} from '@syncfusion/ej2-charts'\n\n\nexport const StockLegendService: ValueProvider = { provide: 'ChartsStockLegend', useValue: StockLegend};\n\n/**\n * NgModule definition for the StockChart component with providers.\n */\n@NgModule({\n    imports: [CommonModule, StockChartModule],\n    exports: [\n        StockChartModule\n    ],\n    providers:[\n        StockLegendService\n    ]\n})\nexport class StockChartAllModule { }","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['color', 'end', 'index', 'legendImageUrl', 'name', 'opacity', 'shape'];\nlet outputs: string[] = [];\n/**\n * BulletRange Directive\n * ```html\n * <e-bullet-range-collection>\n * <e-bullet-range></e-bullet-range>\n * </e-bullet-range-collection>\n * ```\n */\n@Directive({\n    selector: 'e-bullet-range-collection>e-bullet-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class BulletRangeDirective extends ComplexBase<BulletRangeDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Default value for qualitative range Color.\n     * @default null\n     */\n    public color: any;\n    /** \n     * Default value for qualitative range end value.\n     * @default null\n     */\n    public end: any;\n    /** \n     * Default value for qualitative range Color.\n     * @default null\n     */\n    public index: any;\n    /** \n     * The URL for the Image that is to be displayed as a Legend icon.  It requires  `legendShape` value to be an `Image`.\n     * @default ''\n     */\n    public legendImageUrl: any;\n    /** \n     * Default value for qualitative range name.\n     * @default null\n     */\n    public name: any;\n    /** \n     * Range opacity\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * The shape of the legend. Each ranges has its own legend shape. They are, \n     * * Circle \n     * * Rectangle \n     * * Triangle \n     * * Diamond \n     * * Cross \n     * * HorizontalLine \n     * * VerticalLine \n     * * Pentagon \n     * * InvertedTriangle \n     * * SeriesType \n     * * Image\n     * @default 'Rectangle'\n     */\n    public shape: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * BulletRange Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-bulletchart>e-bullet-range-collection',\n    queries: {\n        children: new ContentChildren(BulletRangeDirective)\n    },\n})\nexport class BulletRangeCollectionDirective extends ArrayBase<BulletRangeCollectionDirective> {\n    constructor() {\n        super('ranges');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { BulletChart } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { BulletRangeCollectionDirective } from './ranges.directive';\n\nexport const inputs: string[] = ['animation','border','categoryField','categoryLabelStyle','dataLabel','dataSource','enableGroupSeparator','enablePersistence','enableRtl','height','interval','labelFormat','labelPosition','labelStyle','legendSettings','locale','majorTickLines','margin','maximum','minimum','minorTickLines','minorTicksPerInterval','opposedPosition','orientation','query','ranges','subtitle','subtitleStyle','tabIndex','targetColor','targetField','targetTypes','targetWidth','theme','tickPosition','title','titlePosition','titleStyle','tooltip','type','valueBorder','valueField','valueFill','valueHeight','width'];\nexport const outputs: string[] = ['beforePrint','bulletChartMouseClick','legendRender','load','loaded','tooltipRender','dataSourceChange'];\nexport const twoWays: string[] = ['dataSource'];\n\n/**\n * BulletChart Component\n * ```html\n * <ejs-bulletchart></ejs-bulletchart>\n * ```\n */\n@Component({\n    selector: 'ejs-bulletchart',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childRanges: new ContentChild(BulletRangeCollectionDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class BulletChartComponent extends BulletChart implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\tbeforePrint: any;\n\tbulletChartMouseClick: any;\n\tlegendRender: any;\n\tload: any;\n\tloaded: any;\n\ttooltipRender: any;\n\tpublic dataSourceChange: any;\n    public childRanges: QueryList<BulletRangeCollectionDirective>;\n    public tags: string[] = ['ranges'];\n    @ContentChild('tooltipTemplate')\n    @Template()\n    public tooltip_template: any;\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsBulletTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsBulletChartLegend');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childRanges;\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BulletRangeDirective, BulletRangeCollectionDirective } from './ranges.directive';\nimport { BulletChartComponent } from './bulletchart.component';\n\n/**\n * NgModule definition for the BulletChart component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        BulletChartComponent,\n        BulletRangeDirective,\n        BulletRangeCollectionDirective\n    ],\n    exports: [\n        BulletChartComponent,\n        BulletRangeDirective,\n        BulletRangeCollectionDirective\n    ]\n})\nexport class BulletChartModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BulletRangeDirective, BulletRangeCollectionDirective } from './ranges.directive';\nimport { BulletChartComponent } from './bulletchart.component';\nimport { BulletChartModule } from './bulletchart.module';\nimport {BulletTooltip, BulletChartLegend} from '@syncfusion/ej2-charts'\n\n\nexport const BulletTooltipService: ValueProvider = { provide: 'ChartsBulletTooltip', useValue: BulletTooltip};\nexport const BulletChartLegendService: ValueProvider = { provide: 'ChartsBulletChartLegend', useValue: BulletChartLegend};\n\n/**\n * NgModule definition for the BulletChart component with providers.\n */\n@NgModule({\n    imports: [CommonModule, BulletChartModule],\n    exports: [\n        BulletChartModule\n    ],\n    providers:[\n        BulletTooltipService,\n        BulletChartLegendService\n    ]\n})\nexport class BulletChartAllModule { }","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet input: string[] = ['animation', 'columnFacet', 'columnSpacing', 'columnWidth', 'dataLabel', 'dataSource', 'emptyPointSettings', 'enableTooltip', 'fill', 'groupName', 'legendImageUrl', 'legendShape', 'name', 'opacity', 'pointColorMapping', 'query', 'size', 'stackingGroup', 'tooltipFormat', 'tooltipMappingName', 'type', 'visible', 'xAxisName', 'xName', 'yAxisName', 'yName'];\nlet outputs: string[] = [];\n/**\n * Series3D Directive\n * ```html\n * <e-chart3d-series-collection>\n * <e-chart3d-series></e-chart3d-series>\n * </e-chart3d-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-chart3d-series-collection>e-chart3d-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class Chart3DSeriesDirective extends ComplexBase<Chart3DSeriesDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the type of the series in the 3D chart. Available options include: \n     * - Column \n     * - Bar \n     * - StackingColumn \n     * - StackingBar \n     * - StackingColumn100 \n     * - StackingBar100\n     * @default 'Column'\n     */\n    public type: any;\n    /** \n     * Options to customizing animation for the series.\n     */\n    public animation: any;\n    /** \n     * Defines the shape of the data in a column and bar chart. \n     * Rectangle: Displays the data in a column and bar chart in a rectangle shape. \n     * Cylinder: Displays the data in a column and bar chart in a cylinder shape.\n     * @default 'Rectangle'\n     */\n    public columnFacet: any;\n    /** \n     * To render the column series points with particular column spacing. It takes value from 0 - 1.\n     * @default 0.1\n     */\n    public columnSpacing: any;\n    /** \n     * Render the column series points with a particular column width.\n     * @default null\n     */\n    public columnWidth: any;\n    /** \n     * The data label for the series.\n     */\n    public dataLabel: any;\n    /** \n     * Specifies the data source for the series. It can be an array of JSON objects or an instance of DataManager.\n     * @default ''\n     */\n    public dataSource: any;\n    /** \n     * options to customize the empty points in series.\n     */\n    public emptyPointSettings: any;\n    /** \n     * Enable tooltip for the chart series.\n     * @default true\n     */\n    public enableTooltip: any;\n    /** \n     * The fill color for the series, which can accept values in hex or rgba as a valid CSS color string.\n     * @default null\n     */\n    public fill: any;\n    /** \n     * Defines the name that specifies the chart series are mutually exclusive and can be overlaid. \n     * The axis in the same group shares the same baseline and location on the corresponding axis.\n     * @default ''\n     */\n    public groupName: any;\n    /** \n     * The URL for the Image that is to be displayed as a Legend icon.  It requires  `legendShape` value to be an `Image`.\n     * @default ''\n     */\n    public legendImageUrl: any;\n    /** \n     * The shape of the legend. Each series has its own legend shape, which can be one of the following: \n     * * Circle \n     * * Rectangle \n     * * Triangle \n     * * Diamond \n     * * Cross \n     * * HorizontalLine \n     * * VerticalLine \n     * * Pentagon \n     * * InvertedTriangle \n     * * SeriesType \n     * * Image\n     * @default 'SeriesType'\n     */\n    public legendShape: any;\n    /** \n     * The name of the series as displayed in the legend.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * The opacity of the series.\n     * @default 1\n     */\n    public opacity: any;\n    /** \n     * The DataSource field that contains the point colors.\n     * @default ''\n     */\n    public pointColorMapping: any;\n    /** \n     * Specifies a query to select data from the DataSource. This property is applicable only when the DataSource is an `ej.DataManager`.\n     * @default ''\n     */\n    public query: any;\n    /** \n     * The DataSource field that contains the size value of y\n     * @default ''\n     */\n    public size: any;\n    /** \n     * This property allows grouping series in `stacked column / bar` charts. \n     * Any string value can be provided to the stackingGroup property. \n     * If any two or above series have the same value, those series will be grouped together.\n     * @default ''\n     */\n    public stackingGroup: any;\n    /** \n     * Format of the tooltip content.\n     * @default ''\n     */\n    public tooltipFormat: any;\n    /** \n     * The data source field that contains the tooltip value.\n     * @default ''\n     */\n    public tooltipMappingName: any;\n    /** \n     * Specifies the visibility of series.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * The name of the horizontal axis associated with the series. It requires `axes` of the chart.\n     * @default null\n     */\n    public xAxisName: any;\n    /** \n     * The DataSource field that contains the x value.\n     * @default ''\n     */\n    public xName: any;\n    /** \n     * The name of the vertical axis associated with the series. It requires `axes` of the chart.\n     * @default null\n     */\n    public yAxisName: any;\n    /** \n     * The DataSource field that contains the y value.\n     * @default ''\n     */\n    public yName: any;\n    @ContentChild('dataLabelTemplate')\n    @Template()\n    public dataLabel_template: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Chart3DSeries Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart3d>e-chart3d-series-collection',\n    queries: {\n        children: new ContentChildren(Chart3DSeriesDirective)\n    },\n})\nexport class Chart3DSeriesCollectionDirective extends ArrayBase<Chart3DSeriesCollectionDirective> {\n    constructor() {\n        super('series');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['columnIndex', 'desiredIntervals', 'edgeLabelPlacement', 'enableTrim', 'interval', 'intervalType', 'isIndexed', 'isInversed', 'labelFormat', 'labelIntersectAction', 'labelPadding', 'labelPlacement', 'labelRotation', 'labelStyle', 'logBase', 'majorGridLines', 'majorTickLines', 'maximum', 'maximumLabelWidth', 'maximumLabels', 'minimum', 'minorGridLines', 'minorTickLines', 'minorTicksPerInterval', 'name', 'opposedPosition', 'plotOffset', 'plotOffsetBottom', 'plotOffsetLeft', 'plotOffsetRight', 'plotOffsetTop', 'rangePadding', 'rowIndex', 'skeleton', 'skeletonType', 'span', 'startFromZero', 'title', 'titlePadding', 'titleRotation', 'titleStyle', 'valueType', 'visible'];\nlet outputs: string[] = [];\n/**\n * Axis3D Directive\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\n@Directive({\n    selector: 'e-chart3daxes>e-chart3daxis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class Chart3DAxisDirective extends ComplexBase<Chart3DAxisDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the index of the column where the axis is associated, \n     * when the chart area is divided into multiple plot areas by using `columns`. \n     * \n     * @default 0\n     */\n    public columnIndex: any;\n    /** \n     * With this property, you can request axis to calculate intervals approximately equal to your specified interval.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public desiredIntervals: any;\n    /** \n     * Specifies the position of labels at the edge of the axis.They are, \n     * * None: No action will be performed. \n     * * Hide: Edge label will be hidden. \n     * * Shift: Shifts the edge labels.\n     * @default 'None'\n     */\n    public edgeLabelPlacement: any;\n    /** \n     * Specifies the Trim property for an axis.\n     * @default false\n     */\n    public enableTrim: any;\n    /** \n     * Specifies the interval for an axis.\n     * @default null\n     * @aspdefaultvalueignore \n     */\n    public interval: any;\n    /** \n     * Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are, \n     * * Auto: Defines the interval of the axis based on data. \n     * * Years: Defines the interval of the axis in years. \n     * * Months: Defines the interval of the axis in months. \n     * * Days: Defines the interval of the axis in days. \n     * * Hours: Defines the interval of the axis in hours. \n     * * Minutes: Defines the interval of the axis in minutes.\n     * @default 'Auto'\n     */\n    public intervalType: any;\n    /** \n     * Specifies indexed category  axis.\n     * @default false\n     */\n    public isIndexed: any;\n    /** \n     * It specifies whether the axis to be rendered in inversed manner or not.\n     * @default false\n     */\n    public isInversed: any;\n    /** \n     * Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc. \n     * It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\n     * @default ''\n     */\n    public labelFormat: any;\n    /** \n     * Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90` \n     * when the axis labels intersect with each other.They are, \n     * * None: Shows all the labels. \n     * * Hide: Hides the label when it intersects. \n     * * Trim: Trim the label when it intersects. \n     * * Wrap: Wrap the label when it intersects. \n     * * MultipleRows: Shows the label in MultipleRows when it intersects. \n     * * Rotate45: Rotates the label to 45 degree when it intersects. \n     * * Rotate90: Rotates the label to 90 degree when it intersects.\n     * @default Trim\n     */\n    public labelIntersectAction: any;\n    /** \n     * Specifies the labelPadding from axis.\n     * @default 5\n     */\n    public labelPadding: any;\n    /** \n     * Specifies the placement of a label for category axis. They are, \n     * * betweenTicks: Renders the label between the ticks. \n     * * onTicks: Renders the label on the ticks.\n     * @default 'OnTicks'\n     */\n    public labelPlacement: any;\n    /** \n     * The angle to which the axis label gets rotated.\n     * @default 0\n     */\n    public labelRotation: any;\n    /** \n     * Options to customize the axis label.\n     */\n    public labelStyle: any;\n    /** \n     * The base value for logarithmic axis. It requires `valueType` to be `Logarithmic`.\n     * @default 10\n     */\n    public logBase: any;\n    /** \n     * Options for customizing major grid lines.\n     */\n    public majorGridLines: any;\n    /** \n     * Options for customizing major tick lines.\n     */\n    public majorTickLines: any;\n    /** \n     * Specifies the maximum range of an axis.\n     * @default null\n     */\n    public maximum: any;\n    /** \n     * Specifies the maximum width of an axis label.\n     * @default 34.\n     */\n    public maximumLabelWidth: any;\n    /** \n     * The maximum number of label count per 100 pixels with respect to the axis length.\n     * @default 3\n     */\n    public maximumLabels: any;\n    /** \n     * Specifies the minimum range of an axis.\n     * @default null\n     */\n    public minimum: any;\n    /** \n     * Options for customizing minor grid lines.\n     */\n    public minorGridLines: any;\n    /** \n     * Options for customizing minor tick lines.\n     */\n    public minorTickLines: any;\n    /** \n     * Specifies the number of minor ticks per interval.\n     * @default 0\n     */\n    public minorTicksPerInterval: any;\n    /** \n     * Unique identifier of an axis. \n     * To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * If set to true, the axis will render at the opposite side of its default position.\n     * @default false\n     */\n    public opposedPosition: any;\n    /** \n     * Left and right padding for the plot area in pixels.\n     * @default 0\n     */\n    public plotOffset: any;\n    /** \n     * Bottom padding for the plot area in pixels.\n     * @default null\n     */\n    public plotOffsetBottom: any;\n    /** \n     * Left padding for the plot area in pixels.\n     * @default null\n     */\n    public plotOffsetLeft: any;\n    /** \n     * Right padding for the plot area in pixels.\n     * @default null\n     */\n    public plotOffsetRight: any;\n    /** \n     * Top padding for the plot area in pixels.\n     * @default null\n     */\n    public plotOffsetTop: any;\n    /** \n     * Specifies the padding for the axis range in terms of interval.They are, \n     * * none: Padding cannot be applied to the axis. \n     * * normal: Padding is applied to the axis based on the range calculation. \n     * * additional: Interval of the axis is added as padding to the minimum and maximum values of the range. \n     * * round: Axis range is rounded to the nearest possible value divided by the interval.\n     * @default 'Auto'\n     */\n    public rangePadding: any;\n    /** \n     * Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `rows`. \n     * \n     * @default 0\n     */\n    public rowIndex: any;\n    /** \n     * Specifies the skeleton format in which the dateTime format will process.\n     * @default ''\n     */\n    public skeleton: any;\n    /** \n     * It specifies the type of format to be used in dateTime format process.\n     * @default 'DateTime'\n     * @deprecated \n     */\n    public skeletonType: any;\n    /** \n     * Specifies the number of `columns` or `rows` an axis has to span horizontally or vertically.\n     * @default 1\n     */\n    public span: any;\n    /** \n     * It specifies whether the axis to be start from zero.\n     * @default true\n     */\n    public startFromZero: any;\n    /** \n     * Specifies the title of an axis.\n     * @default ''\n     */\n    public title: any;\n    /** \n     * Specifies the titlePadding from axis label.\n     * @default 5\n     */\n    public titlePadding: any;\n    /** \n     * Defines an angle to rotate axis title. By default, angle auto calculated based on position and orientation of axis.\n     * @default null\n     */\n    public titleRotation: any;\n    /** \n     * Options for customizing the axis title.\n     */\n    public titleStyle: any;\n    /** \n     * Specifies the data types that the axis can handle: \n     * * Double: This type is used for rendering a numeric axis to accommodate numeric data. \n     * * DateTime: This type is utilized for rendering a date-time axis to manage date-time data. \n     * * Category: This type is employed for rendering a category axis to manage categorical data. \n     * * Logarithmic: This type is applied for rendering a logarithmic axis to handle a wide range of values. \n     * * DateTimeCategory: This type is used to render a date time category axis for managing business days.\n     * @default 'Double'\n     * @isenumeration true\n     */\n    public valueType: any;\n    /** \n     * If set to true, axis label will be visible.\n     * @default true\n     */\n    public visible: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Chart3DAxis Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart3d>e-chart3daxes',\n    queries: {\n        children: new ContentChildren(Chart3DAxisDirective)\n    },\n})\nexport class Chart3DAxesDirective extends ArrayBase<Chart3DAxesDirective> {\n    constructor() {\n        super('axes');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['height'];\nlet outputs: string[] = [];\n/**\n * Row3D Directive\n * ```html\n * <e-rows><e-row></e-row><e-rows>\n * ```\n */\n@Directive({\n    selector: 'e-chart3d-rows>e-chart3d-row',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class Chart3DRowDirective extends ComplexBase<Chart3DRowDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * The height of the row as a string accept input both as '100px' and '100%'. \n     * If specified as '100%, row renders to the full height of its chart.\n     * @default '100%'\n     */\n    public height: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Chart3DRow Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart3d>e-chart3d-rows',\n    queries: {\n        children: new ContentChildren(Chart3DRowDirective)\n    },\n})\nexport class Chart3DRowsDirective extends ArrayBase<Chart3DRowsDirective> {\n    constructor() {\n        super('rows');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['width'];\nlet outputs: string[] = [];\n/**\n * Column3D Directive\n * ```html\n * <e-columns><e-column></e-column><e-columns>\n * ```\n */\n@Directive({\n    selector: 'e-chart3d-columns>e-chart3d-columns',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class Chart3DColumnDirective extends ComplexBase<Chart3DColumnDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * The width of the column as a string accepts input both as like '100px' or '100%'. \n     * If specified as '100%, column renders to the full width of its chart.\n     * @default '100%'\n     */\n    public width: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Chart3DColumn Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart3d>e-chart3d-columns',\n    queries: {\n        children: new ContentChildren(Chart3DColumnDirective)\n    },\n})\nexport class Chart3DColumnsDirective extends ArrayBase<Chart3DColumnsDirective> {\n    constructor() {\n        super('columns');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['point', 'series'];\nlet outputs: string[] = [];\n/**\n * Selected Data Directive\n * ```html\n * <e-selecteddataindexes><e-selecteddataindex></e-selecteddataindex><e-selecteddataindexes>\n * ```\n */\n@Directive({\n    selector: 'e-chart3d-selecteddataindexes>e-chart3d-selecteddataindex',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class Chart3DSelectedDataIndexDirective extends ComplexBase<Chart3DSelectedDataIndexDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the index of the data point within the series.\n     * @default 0\n     * @asptype int\n     */\n    public point: any;\n    /** \n     * Specifies the index of the series.\n     * @default 0\n     * @asptype int\n     */\n    public series: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * Chart3DSelectedDataIndex Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-chart3d>e-chart3d-selecteddataindexes',\n    queries: {\n        children: new ContentChildren(Chart3DSelectedDataIndexDirective)\n    },\n})\nexport class Chart3DSelectedDataIndexesDirective extends ArrayBase<Chart3DSelectedDataIndexesDirective> {\n    constructor() {\n        super('selecteddataindexes');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { Chart3D } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { Chart3DSeriesCollectionDirective } from './series.directive';\nimport { Chart3DAxesDirective } from './axes.directive';\nimport { Chart3DRowsDirective } from './rows.directive';\nimport { Chart3DColumnsDirective } from './columns.directive';\nimport { Chart3DSelectedDataIndexesDirective } from './selecteddataindexes.directive';\n\nexport const inputs: string[] = ['axes','background','backgroundImage','border','columns','currencyCode','dataSource','depth','description','enableExport','enablePersistence','enableRotation','enableRtl','enableSideBySidePlacement','height','highlightColor','highlightMode','highlightPattern','isMultiSelect','isTransposed','legendSettings','locale','margin','palettes','perspectiveAngle','primaryXAxis','primaryYAxis','rotation','rows','selectedDataIndexes','selectionMode','selectionPattern','series','subTitle','subTitleStyle','theme','tilt','title','titleStyle','tooltip','useGroupingSeparator','wallColor','wallSize','width'];\nexport const outputs: string[] = ['afterExport','axisLabelRender','beforeExport','beforePrint','beforeResize','chart3DMouseClick','chart3DMouseDown','chart3DMouseLeave','chart3DMouseMove','chart3DMouseUp','legendClick','legendRender','load','loaded','pointClick','pointMove','pointRender','resized','selectionComplete','seriesRender','textRender','tooltipRender','dataSourceChange'];\nexport const twoWays: string[] = ['dataSource'];\n\n/**\n * 3D Chart Component\n * ```html\n * <ejschart3d></ejschart3d>\n * ```\n */\n@Component({\n    selector: 'ejs-chart3d',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(Chart3DSeriesCollectionDirective), \n        childAxes: new ContentChild(Chart3DAxesDirective), \n        childRows: new ContentChild(Chart3DRowsDirective), \n        childColumns: new ContentChild(Chart3DColumnsDirective), \n        childSelectedDataIndexes: new ContentChild(Chart3DSelectedDataIndexesDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class Chart3DComponent extends Chart3D implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\tafterExport: any;\n\taxisLabelRender: any;\n\tbeforeExport: any;\n\tbeforePrint: any;\n\tbeforeResize: any;\n\tchart3DMouseClick: any;\n\tchart3DMouseDown: any;\n\tchart3DMouseLeave: any;\n\tchart3DMouseMove: any;\n\tchart3DMouseUp: any;\n\tlegendClick: any;\n\tlegendRender: any;\n\tload: any;\n\tloaded: any;\n\tpointClick: any;\n\tpointMove: any;\n\tpointRender: any;\n\tresized: any;\n\tselectionComplete: any;\n\tseriesRender: any;\n\ttextRender: any;\n\ttooltipRender: any;\n\tpublic dataSourceChange: any;\n    public childSeries: QueryList<Chart3DSeriesCollectionDirective>;\n    public childAxes: QueryList<Chart3DAxesDirective>;\n    public childRows: QueryList<Chart3DRowsDirective>;\n    public childColumns: QueryList<Chart3DColumnsDirective>;\n    public childSelectedDataIndexes: QueryList<Chart3DSelectedDataIndexesDirective>;\n    public tags: string[] = ['series', 'axes', 'rows', 'columns', 'selectedDataIndexes'];\n    @ContentChild('tooltipTemplate')\n    @Template()\n    public tooltip_template: any;\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsColumnSeries3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStackingColumnSeries3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsBarSeries3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsStackingBarSeries3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCategory3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDateTime3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDateTimeCategory3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsLogarithmic3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsTooltip3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsLegend3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsDataLabel3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsSelection3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsExport3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsHighlight3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        if (this.childAxes) {\n                    this.tagObjects[1].instance = this.childAxes as any;\n                }\n        if (this.childRows) {\n                    this.tagObjects[2].instance = this.childRows as any;\n                }\n        if (this.childColumns) {\n                    this.tagObjects[3].instance = this.childColumns as any;\n                }\n        if (this.childSelectedDataIndexes) {\n                    this.tagObjects[4].instance = this.childSelectedDataIndexes as any;\n                }\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Chart3DSeriesDirective, Chart3DSeriesCollectionDirective } from './series.directive';\nimport { Chart3DAxisDirective, Chart3DAxesDirective } from './axes.directive';\nimport { Chart3DRowDirective, Chart3DRowsDirective } from './rows.directive';\nimport { Chart3DColumnDirective, Chart3DColumnsDirective } from './columns.directive';\nimport { Chart3DSelectedDataIndexDirective, Chart3DSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { Chart3DComponent } from './chart3d.component';\n\n/**\n * NgModule definition for the Chart3D component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        Chart3DComponent,\n        Chart3DSeriesDirective,\n        Chart3DSeriesCollectionDirective,\n        Chart3DAxisDirective,\n        Chart3DAxesDirective,\n        Chart3DRowDirective,\n        Chart3DRowsDirective,\n        Chart3DColumnDirective,\n        Chart3DColumnsDirective,\n        Chart3DSelectedDataIndexDirective,\n        Chart3DSelectedDataIndexesDirective\n    ],\n    exports: [\n        Chart3DComponent,\n        Chart3DSeriesDirective,\n        Chart3DSeriesCollectionDirective,\n        Chart3DAxisDirective,\n        Chart3DAxesDirective,\n        Chart3DRowDirective,\n        Chart3DRowsDirective,\n        Chart3DColumnDirective,\n        Chart3DColumnsDirective,\n        Chart3DSelectedDataIndexDirective,\n        Chart3DSelectedDataIndexesDirective\n    ]\n})\nexport class Chart3DModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Chart3DSeriesDirective, Chart3DSeriesCollectionDirective } from './series.directive';\nimport { Chart3DAxisDirective, Chart3DAxesDirective } from './axes.directive';\nimport { Chart3DRowDirective, Chart3DRowsDirective } from './rows.directive';\nimport { Chart3DColumnDirective, Chart3DColumnsDirective } from './columns.directive';\nimport { Chart3DSelectedDataIndexDirective, Chart3DSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { Chart3DComponent } from './chart3d.component';\nimport { Chart3DModule } from './chart3d.module';\nimport {ColumnSeries3D, StackingColumnSeries3D, BarSeries3D, StackingBarSeries3D, Category3D, DateTime3D, DateTimeCategory3D, Logarithmic3D, Tooltip3D, Legend3D, DataLabel3D, Selection3D, Export3D, Highlight3D} from '@syncfusion/ej2-charts'\n\n\nexport const ColumnSeries3DService: ValueProvider = { provide: 'ChartsColumnSeries3D', useValue: ColumnSeries3D};\nexport const StackingColumnSeries3DService: ValueProvider = { provide: 'ChartsStackingColumnSeries3D', useValue: StackingColumnSeries3D};\nexport const BarSeries3DService: ValueProvider = { provide: 'ChartsBarSeries3D', useValue: BarSeries3D};\nexport const StackingBarSeries3DService: ValueProvider = { provide: 'ChartsStackingBarSeries3D', useValue: StackingBarSeries3D};\nexport const Category3DService: ValueProvider = { provide: 'ChartsCategory3D', useValue: Category3D};\nexport const DateTime3DService: ValueProvider = { provide: 'ChartsDateTime3D', useValue: DateTime3D};\nexport const DateTimeCategory3DService: ValueProvider = { provide: 'ChartsDateTimeCategory3D', useValue: DateTimeCategory3D};\nexport const Logarithmic3DService: ValueProvider = { provide: 'ChartsLogarithmic3D', useValue: Logarithmic3D};\nexport const Tooltip3DService: ValueProvider = { provide: 'ChartsTooltip3D', useValue: Tooltip3D};\nexport const Legend3DService: ValueProvider = { provide: 'ChartsLegend3D', useValue: Legend3D};\nexport const DataLabel3DService: ValueProvider = { provide: 'ChartsDataLabel3D', useValue: DataLabel3D};\nexport const Selection3DService: ValueProvider = { provide: 'ChartsSelection3D', useValue: Selection3D};\nexport const Export3DService: ValueProvider = { provide: 'ChartsExport3D', useValue: Export3D};\nexport const Highlight3DService: ValueProvider = { provide: 'ChartsHighlight3D', useValue: Highlight3D};\n\n/**\n * NgModule definition for the Chart3D component with providers.\n */\n@NgModule({\n    imports: [CommonModule, Chart3DModule],\n    exports: [\n        Chart3DModule\n    ],\n    providers:[\n        ColumnSeries3DService,\n        StackingColumnSeries3DService,\n        BarSeries3DService,\n        StackingBarSeries3DService,\n        Category3DService,\n        DateTime3DService,\n        DateTimeCategory3DService,\n        Logarithmic3DService,\n        Tooltip3DService,\n        Legend3DService,\n        DataLabel3DService,\n        Selection3DService,\n        Export3DService,\n        Highlight3DService\n    ]\n})\nexport class Chart3DAllModule { }","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet input: string[] = ['animation', 'dataLabel', 'dataSource', 'emptyPointSettings', 'enableTooltip', 'explode', 'explodeAll', 'explodeIndex', 'explodeOffset', 'innerRadius', 'legendImageUrl', 'legendShape', 'name', 'opacity', 'palettes', 'pointColorMapping', 'query', 'radius', 'tooltipMappingName', 'visible', 'xName', 'yName'];\nlet outputs: string[] = [];\n/**\n * Circular3D Series Directive\n * ```html\n * <e-circular3d-series-collection>\n * <e-circular3d-series></e-circular3d-series>\n * </e-circular3d-series-collection>\n * ```\n */\n@Directive({\n    selector: 'e-circularchart3d-series-collection>e-circularchart3d-series',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class CircularChart3DSeriesDirective extends ComplexBase<CircularChart3DSeriesDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Options for customizing the animation of the series.\n     */\n    public animation: any;\n    /** \n     * The data label settings for the circular 3D series.\n     */\n    public dataLabel: any;\n    /** \n     * Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager. \n     * \n     * @default ''\n     */\n    public dataSource: any;\n    /** \n     * Options to customize the appearance of empty points in the circular 3D series.\n     */\n    public emptyPointSettings: any;\n    /** \n     * Specifies whether the tooltip is enabled or disabled for the circular 3D series.\n     * @default true\n     */\n    public enableTooltip: any;\n    /** \n     * If set true, series points will be exploded on mouse click or touch.\n     * @default false\n     */\n    public explode: any;\n    /** \n     * If set true, all the points in the series will get exploded on load.\n     * @default false\n     */\n    public explodeAll: any;\n    /** \n     * Index of the point to be exploded on load. Set to `null` for no explosion.\n     * @default null\n     */\n    public explodeIndex: any;\n    /** \n     * Distance of the point from the center, which takes values in both pixels and percentage.\n     * @default '30%'\n     */\n    public explodeOffset: any;\n    /** \n     * When the innerRadius value is greater than 0 percentage, a donut will appear in the pie series. It takes values only in percentage.\n     * @default '0'\n     */\n    public innerRadius: any;\n    /** \n     * The URL for the image that is to be displayed as a legend icon. It requires `legendShape` value to be an `Image`.\n     * @default ''\n     */\n    public legendImageUrl: any;\n    /** \n     * The shape of the legend. Each series has its own legend shape. Available shapes: \n     * * Circle - Renders a circle. \n     * * Rectangle - Renders a rectangle. \n     * * Triangle - Renders a triangle. \n     * * Diamond - Renders a diamond. \n     * * Cross - Renders a cross. \n     * * HorizontalLine - Renders a horizontal line. \n     * * VerticalLine - Renders a vertical line. \n     * * Pentagon - Renders a pentagon. \n     * * InvertedTriangle - Renders an inverted triangle. \n     * * SeriesType -Render a legend shape based on series type. \n     * * Image - Render an image. *\n     * @default 'SeriesType'\n     */\n    public legendShape: any;\n    /** \n     * The name of the series as displayed in the legend.\n     * @default ''\n     */\n    public name: any;\n    /** \n     * The opacity of the series.\n     * @default 1.\n     */\n    public opacity: any;\n    /** \n     * Palette configuration for the points in the circular 3D series.\n     * @default []\n     */\n    public palettes: any;\n    /** \n     * The DataSource field that contains the point colors.\n     * @default ''\n     */\n    public pointColorMapping: any;\n    /** \n     * Specifies the query to select data from the dataSource. This property is applicable only when the dataSource is `ej.DataManager`.\n     * @default null\n     */\n    public query: any;\n    /** \n     * Specifies the radius of the pie series in percentage. Set to `null` for default.\n     * @default null\n     */\n    public radius: any;\n    /** \n     * The data source field that contains the tooltip value.\n     * @default ''\n     */\n    public tooltipMappingName: any;\n    /** \n     * Specifies the visibility of the series.\n     * @default true\n     */\n    public visible: any;\n    /** \n     * The DataSource field that contains the x value\n     * @default ''\n     */\n    public xName: any;\n    /** \n     * The DataSource field that contains the y value.\n     * @default ''\n     */\n    public yName: any;\n    @ContentChild('dataLabelTemplate')\n    @Template()\n    public dataLabel_template: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * CircularChart3DSeries Array Directive\n * @private\n */\n@Directive({\n    selector: 'ej-circularchart3d>e-circularchart3d-series-collection',\n    queries: {\n        children: new ContentChildren(CircularChart3DSeriesDirective)\n    },\n})\nexport class CircularChart3DSeriesCollectionDirective extends ArrayBase<CircularChart3DSeriesCollectionDirective> {\n    constructor() {\n        super('series');\n    }\n}","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet input: string[] = ['point', 'series'];\nlet outputs: string[] = [];\n/**\n * Selected Data Directive\n * ```html\n * <e-selecteddataindexes><e-selecteddataindex></e-selecteddataindex><e-selecteddataindexes>\n * ```\n */\n@Directive({\n    selector: 'e-circularchart3d-selecteddataindexes>e-circularchart3d-selecteddataindex',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n})\nexport class CircularChart3DSelectedDataIndexDirective extends ComplexBase<CircularChart3DSelectedDataIndexDirective> {\n    public directivePropList: any;\n\t\n\n\n    /** \n     * Specifies the index of the data point within the series.\n     * @default 0\n     * @asptype int\n     */\n    public point: any;\n    /** \n     * Specifies the index of the series.\n     * @default 0\n     * @asptype int\n     */\n    public series: any;\n\n    constructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\n}\n\n/**\n * CircularChart3DSelectedDataIndex Array Directive\n * @private\n */\n@Directive({\n    selector: 'ejs-circularchart3d>e-circularchart3d-selecteddataindexes',\n    queries: {\n        children: new ContentChildren(CircularChart3DSelectedDataIndexDirective)\n    },\n})\nexport class CircularChart3DSelectedDataIndexesDirective extends ArrayBase<CircularChart3DSelectedDataIndexesDirective> {\n    constructor() {\n        super('selecteddataindexes');\n    }\n}","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { CircularChart3D } from '@syncfusion/ej2-charts';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { CircularChart3DSeriesCollectionDirective } from './series.directive';\nimport { CircularChart3DSelectedDataIndexesDirective } from './selecteddataindexes.directive';\n\nexport const inputs: string[] = ['background','backgroundImage','border','dataSource','depth','enableAnimation','enableExport','enablePersistence','enableRotation','enableRtl','height','highlightColor','highlightMode','highlightPattern','isMultiSelect','legendSettings','locale','margin','rotation','selectedDataIndexes','selectionMode','selectionPattern','series','subTitle','subTitleStyle','theme','tilt','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const outputs: string[] = ['afterExport','beforeExport','beforePrint','beforeResize','circularChart3DMouseClick','circularChart3DMouseDown','circularChart3DMouseLeave','circularChart3DMouseMove','circularChart3DMouseUp','legendClick','legendRender','load','loaded','pointClick','pointMove','pointRender','resized','selectionComplete','seriesRender','textRender','tooltipRender','dataSourceChange'];\nexport const twoWays: string[] = ['dataSource'];\n\n/**\n * CircularChart3D Component\n * ```html\n * <ejs-circularchart3d></ejs-circularchart3d>\n * ```\n */\n@Component({\n    selector: 'ejs-circularchart3d',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childSeries: new ContentChild(CircularChart3DSeriesCollectionDirective), \n        childSelectedDataIndexes: new ContentChild(CircularChart3DSelectedDataIndexesDirective)\n    }\n})\n@ComponentMixins([ComponentBase])\nexport class CircularChart3DComponent extends CircularChart3D implements IComponentBase {\n    public context : any;\n    public tagObjects: any;\n\tafterExport: any;\n\tbeforeExport: any;\n\tbeforePrint: any;\n\tbeforeResize: any;\n\tcircularChart3DMouseClick: any;\n\tcircularChart3DMouseDown: any;\n\tcircularChart3DMouseLeave: any;\n\tcircularChart3DMouseMove: any;\n\tcircularChart3DMouseUp: any;\n\tlegendClick: any;\n\tlegendRender: any;\n\tload: any;\n\tloaded: any;\n\tpointClick: any;\n\tpointMove: any;\n\tpointRender: any;\n\tresized: any;\n\tselectionComplete: any;\n\tseriesRender: any;\n\ttextRender: any;\n\ttooltipRender: any;\n\tpublic dataSourceChange: any;\n    public childSeries: QueryList<CircularChart3DSeriesCollectionDirective>;\n    public childSelectedDataIndexes: QueryList<CircularChart3DSelectedDataIndexesDirective>;\n    public tags: string[] = ['series', 'selectedDataIndexes'];\n    @ContentChild('tooltipTemplate')\n    @Template()\n    public tooltip_template: any;\n\n    constructor(private ngEle: ElementRef, private srenderer: Renderer2, private viewContainerRef:ViewContainerRef, private injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ChartsPieSeries3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCircularChartTooltip3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCircularChartLegend3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCircularChartSelection3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCircularChartDataLabel3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCircularChartHighlight3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r        try {\n                let mod = this.injector.get('ChartsCircularChartExport3D');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\r\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n\n    public ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n\n    public ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n\n    public ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n\n    public ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childSeries;\n        if (this.childSelectedDataIndexes) {\n                    this.tagObjects[1].instance = this.childSelectedDataIndexes as any;\n                }\n        this.context.ngAfterContentChecked(this);\n    }\n\n    public registerEvents: (eventList: string[]) => void;\n    public addTwoWay: (propList: string[]) => void;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CircularChart3DSeriesDirective, CircularChart3DSeriesCollectionDirective } from './series.directive';\nimport { CircularChart3DSelectedDataIndexDirective, CircularChart3DSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { CircularChart3DComponent } from './circularchart3d.component';\n\n/**\n * NgModule definition for the CircularChart3D component.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        CircularChart3DComponent,\n        CircularChart3DSeriesDirective,\n        CircularChart3DSeriesCollectionDirective,\n        CircularChart3DSelectedDataIndexDirective,\n        CircularChart3DSelectedDataIndexesDirective\n    ],\n    exports: [\n        CircularChart3DComponent,\n        CircularChart3DSeriesDirective,\n        CircularChart3DSeriesCollectionDirective,\n        CircularChart3DSelectedDataIndexDirective,\n        CircularChart3DSelectedDataIndexesDirective\n    ]\n})\nexport class CircularChart3DModule { }","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CircularChart3DSeriesDirective, CircularChart3DSeriesCollectionDirective } from './series.directive';\nimport { CircularChart3DSelectedDataIndexDirective, CircularChart3DSelectedDataIndexesDirective } from './selecteddataindexes.directive';\nimport { CircularChart3DComponent } from './circularchart3d.component';\nimport { CircularChart3DModule } from './circularchart3d.module';\nimport {PieSeries3D, CircularChartTooltip3D, CircularChartLegend3D, CircularChartSelection3D, CircularChartDataLabel3D, CircularChartHighlight3D, CircularChartExport3D} from '@syncfusion/ej2-charts'\n\n\nexport const PieSeries3DService: ValueProvider = { provide: 'ChartsPieSeries3D', useValue: PieSeries3D};\nexport const CircularChartTooltip3DService: ValueProvider = { provide: 'ChartsCircularChartTooltip3D', useValue: CircularChartTooltip3D};\nexport const CircularChartLegend3DService: ValueProvider = { provide: 'ChartsCircularChartLegend3D', useValue: CircularChartLegend3D};\nexport const CircularChartSelection3DService: ValueProvider = { provide: 'ChartsCircularChartSelection3D', useValue: CircularChartSelection3D};\nexport const CircularChartDataLabel3DService: ValueProvider = { provide: 'ChartsCircularChartDataLabel3D', useValue: CircularChartDataLabel3D};\nexport const CircularChartHighlight3DService: ValueProvider = { provide: 'ChartsCircularChartHighlight3D', useValue: CircularChartHighlight3D};\nexport const CircularChartExport3DService: ValueProvider = { provide: 'ChartsCircularChartExport3D', useValue: CircularChartExport3D};\n\n/**\n * NgModule definition for the CircularChart3D component with providers.\n */\n@NgModule({\n    imports: [CommonModule, CircularChart3DModule],\n    exports: [\n        CircularChart3DModule\n    ],\n    providers:[\n        PieSeries3DService,\n        CircularChartTooltip3DService,\n        CircularChartLegend3DService,\n        CircularChartSelection3DService,\n        CircularChartDataLabel3DService,\n        CircularChartHighlight3DService,\n        CircularChartExport3DService\n    ]\n})\nexport class CircularChart3DAllModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["input","outputs","inputs","twoWays"],"mappings":"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"}