{"version":3,"file":"ej2-office-chart.umd.min.js","sources":["../src/office-chart/chart.js","../src/office-chart/keywords.js"],"sourcesContent":["/* eslint-disable */\n/* tslint:disable:no-any */\nimport { Chart, AccumulationChart, AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel, DateTime, BarSeries, StackingBarSeries, LineSeries, StackingLineSeries, ColumnSeries, StackingColumnSeries, AreaSeries, StackingAreaSeries, Trendlines, ScatterSeries, BubbleSeries, RadarSeries, PolarSeries, ErrorBar, SplineSeries, DataLabel, Category, Legend, Tooltip, Export } from '@syncfusion/ej2-charts';\nChart.Inject(AreaSeries, StackingAreaSeries, BarSeries, PieSeries, StackingBarSeries, PolarSeries, ScatterSeries, BubbleSeries, RadarSeries, DateTime, ColumnSeries, StackingColumnSeries, LineSeries, StackingLineSeries, ErrorBar, Trendlines, SplineSeries, DataLabel, Category, Legend, Tooltip, Export);\nAccumulationChart.Inject(AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel);\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { chartTypeProperty, widthProperty, heightProperty, chartDataProperty, chartCategoryProperty, chartLegendProperty, chartPrimaryCategoryAxisProperty, chartSeriesProperty, chartTitleProperty, chartPrimaryValueAxisProperty, dataPointsProperty, seriesNameProperty, errorBarProperty, dataLabelProperty, trendLinesProperty, fillProperty, foreColorProperty, positionProperty, typeProperty, directionProperty, endStyleProperty, nameProperty, forwardProperty, backwardProperty, interceptProperty, lineProperty, rgbProperty, categoryTypeProperty, hasMajorGridLinesProperty, hasMinorGridLinesProperty, minimumValueProperty, maximumValueProperty, majorUnitProperty, categoryXNameProperty, numberFormatProperty, yValueProperty, sizeProperty, seriesFormatProperty, idProperty, isAutoMajorProperty } from '../index';\n/**\n * Chart component is used to convert office charts to ej2-charts.\n */\nvar ChartComponent = /** @class */ (function () {\n    function ChartComponent() {\n        /**\n         * @private\n         */\n        this.keywordIndex = undefined;\n        /**\n         * @private\n         */\n        this.chartYValues = [];\n    }\n    /**\n     * @private\n     */\n    ChartComponent.prototype.chartRender = function (chart, keywordIndex) {\n        this.keywordIndex = !isNullOrUndefined(keywordIndex) ? keywordIndex : 0;\n        this.chartType = chart[chartTypeProperty[this.keywordIndex]];\n        this.isPieType = (this.chartType === 'Pie' || this.chartType === 'Doughnut');\n        var chartData = this.chartData(chart, this.chartType);\n        var chartModel = {\n            enableAnimation: false,\n            width: chart[widthProperty[this.keywordIndex]] * (96 / 72) + 'px',\n            height: chart[heightProperty[this.keywordIndex]] * (96 / 72) + 'px'\n        };\n        if (this.isPieType) {\n            this.chart = new AccumulationChart(chartModel);\n        }\n        else {\n            this.chart = new Chart(chartModel);\n            this.chart.primaryXAxis = this.chartPrimaryXAxis(chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]], this.chartType);\n            this.chart.primaryYAxis = this.chartPrimaryYAxis(chart[chartPrimaryValueAxisProperty[this.keywordIndex]]);\n        }\n        this.chart.series = this.chartSeries(chart[chartSeriesProperty[this.keywordIndex]], chartData, this.chartType);\n        for (var i = 0; i < this.chart.series.length; i++) {\n            this.chart.series[parseInt(i.toString(), 10)].animation.enable = false;\n        }\n        this.chart.title = chart[chartTitleProperty[this.keywordIndex]];\n        this.chart.legendSettings = this.parseChartLegend(chart[chartLegendProperty[this.keywordIndex]]);\n    };\n    /**\n     * @private\n     */\n    ChartComponent.prototype.convertChartToImage = function (chart, elementWidth, elementHeight) {\n        var _this = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            var width = 0;\n            var height = 0;\n            var dataInfo = _this.getControlsValue([chart], elementWidth, elementHeight);\n            width = width ? width : dataInfo.width;\n            height = height ? height : dataInfo.height;\n            var element = createElement('canvas');\n            var displayPixelRatio = Math.max(1, window.devicePixelRatio || 1);\n            element.width = width * (displayPixelRatio);\n            element.height = height * (displayPixelRatio);\n            element.style.width = width + 'px';\n            element.style.height = height + 'px';\n            // tslint:disable-next-line:max-line-length\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(dataInfo.svg)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var canvasContext = element.getContext('2d');\n            canvasContext.scale(displayPixelRatio, displayPixelRatio);\n            image.onload = (function () {\n                canvasContext.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var dataURL = element.toDataURL('image/png');\n                resolve(dataURL);\n            });\n            image.onerror = (function () {\n                reject('Invalid data');\n            });\n            image.src = url;\n        });\n    };\n    ChartComponent.prototype.getControlsValue = function (controls, elementWidth, elementHeight) {\n        var width = 0;\n        var height = 0;\n        var content = '';\n        var svgRenderer = new SvgRenderer('').createSvg({\n            id: 'Image_Export',\n            width: 200, height: 200\n        });\n        controls.map(function (control) {\n            if (control) {\n                var svgElement = control.svgObject.cloneNode(true);\n                var groupElement = control.renderer.createGroup({\n                    style: 'transform: translateY(' + height + 'px)'\n                });\n                groupElement.appendChild(svgElement);\n                width = Math.max(control.availableSize.width, elementWidth);\n                height += control.availableSize.height;\n                content += control.svgObject.outerHTML;\n                svgRenderer.appendChild(groupElement);\n            }\n        });\n        svgRenderer.setAttribute('width', width + '');\n        svgRenderer.setAttribute('height', height + '');\n        return {\n            'width': width,\n            'height': height,\n            'svg': svgRenderer\n        };\n    };\n    ChartComponent.prototype.officeChartType = function (type) {\n        var chartType = '';\n        switch (type) {\n            case 'Area_Stacked':\n                chartType = 'StackingArea';\n                break;\n            case 'Area':\n                chartType = 'Area';\n                break;\n            case 'Area_Stacked_100':\n                chartType = 'StackingArea100';\n                break;\n            case 'Bar_Clustered':\n                chartType = 'Bar';\n                break;\n            case 'Bar_Stacked':\n                chartType = 'StackingBar';\n                break;\n            case 'Bar_Stacked_100':\n                chartType = 'StackingBar100';\n                break;\n            case 'Column_Clustered':\n                chartType = 'Column';\n                break;\n            case 'Column_Stacked':\n                chartType = 'StackingColumn';\n                break;\n            case 'Column_Stacked_100':\n                chartType = 'StackingColumn100';\n                break;\n            case 'Scatter_Markers':\n                chartType = 'Scatter';\n                break;\n            case 'Bubble':\n                chartType = 'Bubble';\n                break;\n            case 'Doughnut':\n            case 'Pie':\n                chartType = 'Pie';\n                break;\n            case 'Line_Stacked_100':\n            case 'Line_Markers_Stacked_100':\n                chartType = 'StackingLine100';\n                break;\n            case 'Line':\n            case 'Line_Markers':\n                chartType = 'Line';\n                break;\n            case 'Line_Stacked':\n            case 'Line_Markers_Stacked':\n                chartType = 'StackingLine';\n                break;\n        }\n        return chartType;\n    };\n    ChartComponent.prototype.chartSeries = function (series, data, type) {\n        // json data\n        var chartSeries = [];\n        for (var i = 0; i < series.length; i++) {\n            var seriesData = series[parseInt(i.toString(), 10)];\n            var seriesValue = this.writeChartSeries(seriesData, data, type, i);\n            chartSeries.push(seriesValue);\n        }\n        return chartSeries;\n    };\n    ChartComponent.prototype.writeChartSeries = function (seriesData, data, type, count) {\n        var chartType = this.officeChartType(type);\n        // let isAreaType: boolean = (type === 'Area_Stacked_100' || type === 'Area' || type === 'Area_Stacked');\n        var seriesFormat = seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)];\n        var series = {};\n        var fill;\n        series.type = chartType;\n        series.dataSource = data;\n        series.name = seriesData[seriesNameProperty[this.keywordIndex]];\n        series.xName = 'x';\n        series.yName = 'y' + count;\n        if (type === 'Bubble') {\n            series.size = 'size' + count;\n        }\n        if (this.isPieType) {\n            series.pointColorMapping = 'color';\n            if (type === 'Doughnut') {\n                series.innerRadius = '75%';\n                series.radius = '70%';\n            }\n        }\n        else {\n            if (isNullOrUndefined(seriesFormat)) {\n                seriesFormat = seriesData[dataPointsProperty[this.keywordIndex]][0];\n            }\n            fill = this.chartFormat(seriesFormat, chartType);\n            series.fill = fill;\n            if (!isNullOrUndefined(seriesFormat[fillProperty[this.keywordIndex]][foreColorProperty[this.keywordIndex]])) {\n                series.pointColorMapping = 'color';\n            }\n        }\n        if (type === 'Line_Markers' || type === 'Line_Markers_Stacked' || type === 'Line_Markers_Stacked_100') {\n            series.marker = { visible: true };\n        }\n        if (seriesData.hasOwnProperty(dataLabelProperty[this.keywordIndex])) {\n            if (this.isPieType) {\n                series.dataLabel = this.parseDataLabels(seriesData[dataLabelProperty[this.keywordIndex]]);\n            }\n            else {\n                var data_1 = {};\n                data_1.dataLabel = this.parseDataLabels(seriesData[dataLabelProperty[this.keywordIndex]]);\n                series.marker = data_1;\n            }\n        }\n        if (seriesData.hasOwnProperty(errorBarProperty[this.keywordIndex])) {\n            var errorBarData = seriesData[errorBarProperty[this.keywordIndex]];\n            series.errorBar = this.parseErrorBars(errorBarData);\n        }\n        if (seriesData.hasOwnProperty(trendLinesProperty[this.keywordIndex])) {\n            var trendLines = seriesData[trendLinesProperty[this.keywordIndex]];\n            var trendLinesData = [];\n            for (var count_1 = 0; count_1 < trendLines.length; count_1++) {\n                var trendLine = trendLines[parseInt(count_1.toString(), 10)];\n                var data_2 = {};\n                data_2 = this.parseTrendLines(trendLine, fill);\n                trendLinesData.push(data_2);\n                series.trendlines = trendLinesData;\n            }\n        }\n        return series;\n    };\n    ChartComponent.prototype.parseDataLabels = function (label) {\n        var dataLabel = {};\n        dataLabel.visible = true;\n        if (this.isPieType) {\n            if (label[positionProperty[this.keywordIndex]] === 'BestFit' || label[positionProperty[this.keywordIndex]] === 'Inside') {\n                dataLabel.position = 'Inside';\n            }\n            else {\n                dataLabel.position = 'Outside';\n            }\n        }\n        else {\n            dataLabel.position = this.dataLabelPosition(label[positionProperty[this.keywordIndex]]);\n        }\n        return dataLabel;\n    };\n    ChartComponent.prototype.parseErrorBars = function (errorBarData) {\n        var errorBar = {};\n        errorBar.visible = true;\n        errorBar.type = errorBarData[typeProperty[this.keywordIndex]];\n        errorBar.direction = errorBarData[directionProperty[this.keywordIndex]];\n        if (errorBarData[endStyleProperty[this.keywordIndex]] === 'Cap') {\n            errorBar.errorBarCap = { width: 1 };\n        }\n        else {\n            errorBar.errorBarCap = { width: 0 };\n        }\n        return errorBar;\n    };\n    ChartComponent.prototype.parseTrendLines = function (trendLines, fill) {\n        var trendLine = {};\n        trendLine.type = trendLines[typeProperty[this.keywordIndex]];\n        trendLine.name = trendLines[nameProperty[this.keywordIndex]];\n        trendLine.forwardForecast = trendLines[forwardProperty[this.keywordIndex]];\n        trendLine.backwardForecast = trendLines[backwardProperty[this.keywordIndex]];\n        if (trendLines[interceptProperty[this.keywordIndex]] === 'NaN') {\n            trendLine.intercept = 0;\n        }\n        else {\n            trendLine.intercept = trendLines[interceptProperty[this.keywordIndex]];\n        }\n        trendLine.fill = fill;\n        return trendLine;\n    };\n    ChartComponent.prototype.dataLabelPosition = function (position) {\n        var labelPosition = 'Auto';\n        switch (position) {\n            case 'Outside':\n                labelPosition = 'Outer';\n                break;\n            case 'Center':\n                labelPosition = 'Middle';\n                break;\n            case 'Inside':\n                labelPosition = 'Top';\n                break;\n            case 'OutsideBase':\n                labelPosition = 'Bottom';\n                break;\n        }\n        return labelPosition;\n    };\n    ChartComponent.prototype.chartFormat = function (dataPoints, type) {\n        var format = dataPoints;\n        if (type === 'Line' || type === 'StackingLine' || type === 'StackingLine100') {\n            return format[lineProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]];\n        }\n        else {\n            return format[fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]];\n        }\n    };\n    ChartComponent.prototype.chartPrimaryXAxis = function (data, type) {\n        // json data\n        var primaryXAxis = {};\n        if (data[chartTitleProperty[this.keywordIndex]]) {\n            primaryXAxis.title = data[chartTitleProperty[this.keywordIndex]];\n        }\n        var categoryType = this.chartCategoryType(data[categoryTypeProperty[this.keywordIndex]]);\n        primaryXAxis.valueType = categoryType;\n        if (categoryType === 'DateTime') {\n            primaryXAxis.intervalType = 'Days';\n            primaryXAxis.labelFormat = 'M/d/yyyy';\n            primaryXAxis.edgeLabelPlacement = 'Shift';\n        }\n        if (type === 'Scatter_Markers' || type === 'Bubble') {\n            this.checkAndSetAxisValue(primaryXAxis, data);\n        }\n        if (this.parseBoolValue(data[hasMajorGridLinesProperty[this.keywordIndex]])) {\n            primaryXAxis.majorGridLines = { width: 1 };\n        }\n        if (this.parseBoolValue(data[hasMinorGridLinesProperty[this.keywordIndex]])) {\n            primaryXAxis.minorTicksPerInterval = 4;\n        }\n        return primaryXAxis;\n    };\n    ChartComponent.prototype.chartCategoryType = function (categoryType) {\n        var type = '';\n        switch (categoryType) {\n            case 'Time':\n                type = 'DateTime';\n                break;\n            case 'Automatic':\n                type = 'Category';\n                break;\n        }\n        return type;\n    };\n    ChartComponent.prototype.chartPrimaryYAxis = function (data) {\n        // json data\n        var primaryYAxis = {};\n        if (data[chartTitleProperty[this.keywordIndex]]) {\n            primaryYAxis.title = data[chartTitleProperty[this.keywordIndex]];\n        }\n        this.checkAndSetAxisValue(primaryYAxis, data);\n        if (data[hasMajorGridLinesProperty[this.keywordIndex]]) {\n            primaryYAxis.majorGridLines = { width: 1 };\n        }\n        if (data[hasMinorGridLinesProperty[this.keywordIndex]]) {\n            primaryYAxis.minorTicksPerInterval = 4;\n        }\n        return primaryYAxis;\n    };\n    ChartComponent.prototype.checkAndSetAxisValue = function (primaryYAxis, data) {\n        if (data[minimumValueProperty[this.keywordIndex]] !== 0) {\n            primaryYAxis.minimum = data[minimumValueProperty[this.keywordIndex]];\n        }\n        if (data[maximumValueProperty[this.keywordIndex]] !== 0) {\n            primaryYAxis.maximum = data[maximumValueProperty[this.keywordIndex]];\n        }\n        if (data[majorUnitProperty[this.keywordIndex]] !== 0) {\n            var isAutoMajor = data[isAutoMajorProperty[this.keywordIndex]];\n            if (isAutoMajor && this.parseBoolValue(isAutoMajor)) {\n                var majorUnit = this.calculateMajorUnit(this.chartYValues);\n                if (majorUnit < 10 && (this.chartType === \"Bar_Stacked_100\" || this.chartType === \"Line_Stacked_100\" || this.chartType === \"Column_Stacked_100\" || this.chartType === \"Line_Markers_Stacked_100\" || this.chartType === \"Area_Stacked_100\")) {\n                    primaryYAxis.interval = 10;\n                }\n                else {\n                    primaryYAxis.interval = majorUnit;\n                }\n            }\n            else {\n                primaryYAxis.interval = data[majorUnitProperty[this.keywordIndex]];\n            }\n        }\n    };\n    ChartComponent.prototype.calculateMajorUnit = function (chartYValues) {\n        if (chartYValues && chartYValues.length > 0) {\n            var maxValue = Number.MIN_VALUE;\n            var minValue = Number.MAX_VALUE;\n            for (var i = 0; i < chartYValues.length; i++) {\n                var yValue = chartYValues[parseInt(i.toString(), 10)];\n                if (yValue > maxValue) {\n                    maxValue = yValue;\n                }\n                if (yValue < minValue) {\n                    minValue = yValue;\n                }\n            }\n            var range = maxValue - minValue;\n            var intervalSize = range / 1.5;\n            return this.roundToNiceNumber(intervalSize);\n        }\n        return 1;\n    };\n    ChartComponent.prototype.roundToNiceNumber = function (range) {\n        var log10 = Math.floor(Math.log(range) / Math.log(10));\n        var pow10 = Math.pow(10, log10);\n        var frac = range / pow10;\n        if (frac < 1.5) {\n            return 1 * pow10;\n        }\n        else if (frac < 3) {\n            return 2 * pow10;\n        }\n        else if (frac < 7) {\n            return 5 * pow10;\n        }\n        else {\n            return 10 * pow10;\n        }\n    };\n    ChartComponent.prototype.chartData = function (chart, type) {\n        // json data\n        var data = chart[chartCategoryProperty[this.keywordIndex]];\n        var chartData = [];\n        for (var i = 0; i < data.length; i++) {\n            var xData = data[parseInt(i.toString(), 10)];\n            var plotValue = this.chartPlotData(xData, chart, type, i);\n            chartData.push(plotValue);\n        }\n        return chartData;\n    };\n    ChartComponent.prototype.chartPlotData = function (data, chart, type, count) {\n        var _this = this;\n        var plotValue = {};\n        var series = chart[chartSeriesProperty[this.keywordIndex]];\n        if (chart[chartPrimaryCategoryAxisProperty[this.keywordIndex]][numberFormatProperty[this.keywordIndex]] === 'm/d/yyyy') {\n            var date = data[categoryXNameProperty[this.keywordIndex]];\n            var array = date.split('/');\n            var month = Number(array[0]);\n            var day = Number(array[1]);\n            var year = Number(array[2]);\n            plotValue.x = new Date(year, month - 1, day);\n        }\n        else {\n            plotValue.x = data[categoryXNameProperty[this.keywordIndex]];\n        }\n        for (var j = 0; j < series.length; j++) {\n            var yData = data[chartDataProperty[this.keywordIndex]][parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(yData)) {\n                var yValue = yData[yValueProperty[this.keywordIndex]];\n                this.chartYValues.push(yValue);\n                plotValue['y' + j] = yValue;\n                if (type === 'Bubble') {\n                    plotValue['size' + j] = yData[sizeProperty[this.keywordIndex]];\n                }\n            }\n            if (chart[chartTypeProperty[this.keywordIndex]] === 'Pie' || chart[chartTypeProperty[this.keywordIndex]] === 'Doughnut' || chart[chartTypeProperty[this.keywordIndex]] === 'Column_Stacked') {\n                var seriesData = series[parseInt(j.toString(), 10)];\n                var seriesDataPoints = seriesData[dataPointsProperty[this.keywordIndex]].find(function (obj) {\n                    return obj[idProperty[_this.keywordIndex]] === count;\n                });\n                if (!isNullOrUndefined(seriesDataPoints)) {\n                    var color = this.chartFormat(seriesDataPoints, type);\n                    if (chart[chartTypeProperty[this.keywordIndex]] !== 'Column_Stacked') {\n                        plotValue.color = color;\n                    }\n                    else {\n                        plotValue['color' + j] = color;\n                    }\n                }\n                else {\n                    if (seriesData[dataPointsProperty[this.keywordIndex]].length > 1 && seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)][idProperty[this.keywordIndex]] === 0) {\n                        seriesDataPoints = seriesData[dataPointsProperty[this.keywordIndex]][parseInt(count.toString(), 10)];\n                        var color = this.chartFormat(seriesDataPoints, type);\n                        if (chart[chartTypeProperty[this.keywordIndex]] !== 'Column_Stacked') {\n                            plotValue.color = color;\n                        }\n                        else {\n                            plotValue['color' + j] = color;\n                        }\n                    }\n                    else {\n                        if (!isNullOrUndefined(seriesData[seriesFormatProperty[this.keywordIndex]]) && !isNullOrUndefined(seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]])) {\n                            if (seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]].length > 7) {\n                                var color = this.getColor(seriesData[seriesFormatProperty[this.keywordIndex]][fillProperty[this.keywordIndex]][rgbProperty[this.keywordIndex]]);\n                                if (chart[chartTypeProperty[this.keywordIndex]] !== 'Column_Stacked') {\n                                    plotValue.color = color;\n                                }\n                                else {\n                                    plotValue['color' + j] = color;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return plotValue;\n    };\n    ChartComponent.prototype.getColor = function (color) {\n        if (color.length > 0) {\n            if (color[0] === '#') {\n                if (color.length > 7) {\n                    return color.substr(0, 7);\n                }\n            }\n        }\n        return color;\n    };\n    ChartComponent.prototype.parseChartLegend = function (data) {\n        var legendSettings = {};\n        var position = data[positionProperty[this.keywordIndex]];\n        if (position === 'Corner') {\n            position = 'right';\n        }\n        if (position) {\n            legendSettings.visible = true;\n            legendSettings.position = position.charAt(0).toUpperCase() + position.slice(1);\n        }\n        else {\n            legendSettings.visible = false;\n        }\n        return legendSettings;\n    };\n    ChartComponent.prototype.parseBoolValue = function (value) {\n        if (typeof value === 'string' || value instanceof String) {\n            if (isNullOrUndefined(value) || value === 'f' || value === '0' || value === 'off' || value === 'false') {\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            if (value === 1 || value === true) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n    };\n    /**\n     * Destroys the internal objects which is maintained.\n     */\n    ChartComponent.prototype.destroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n        this.chart = undefined;\n        if (this.chartYValues) {\n            this.chartYValues = [];\n        }\n        this.chartYValues = undefined;\n    };\n    return ChartComponent;\n}());\nexport { ChartComponent };\n","export var widthProperty = ['width', 'w'];\nexport var heightProperty = ['height', 'h'];\nexport var chartDataProperty = ['chartData', 'chd'];\nexport var chartCategoryProperty = ['chartCategory', 'c'];\nexport var chartSeriesProperty = ['chartSeries', 'cs'];\nexport var chartLegendProperty = ['chartLegend', 'cl'];\nexport var chartPrimaryCategoryAxisProperty = ['chartPrimaryCategoryAxis', 'cpca'];\nexport var chartPrimaryValueAxisProperty = ['chartPrimaryValueAxis', 'cpva'];\nexport var chartTitleProperty = ['chartTitle', 'ctt'];\nexport var chartTypeProperty = ['chartType', 'ct'];\nexport var trendLinesProperty = ['trendLines', 'tl'];\nexport var dataPointsProperty = ['dataPoints', 'dp'];\nexport var seriesNameProperty = ['seriesName', 'sn'];\nexport var dataLabelProperty = ['dataLabel', 'sl'];\nexport var errorBarProperty = ['errorBar', 'eb'];\nexport var fillProperty = ['fill', 'f'];\nexport var lineProperty = ['line', 'l'];\nexport var rgbProperty = ['rgb', 'rgb'];\nexport var idProperty = ['id', 'i'];\nexport var foreColorProperty = ['foreColor', 'fc'];\nexport var positionProperty = ['position', 'p'];\nexport var typeProperty = ['type', 't'];\nexport var nameProperty = ['name', 'n'];\nexport var directionProperty = ['direction', 'dir'];\nexport var endStyleProperty = ['endStyle', 'est'];\nexport var forwardProperty = ['forward', 'fw'];\nexport var backwardProperty = ['backward', 'bw'];\nexport var interceptProperty = ['intercept', 'itr'];\nexport var categoryTypeProperty = ['categoryType', 'ct'];\nexport var hasMajorGridLinesProperty = ['hasMajorGridLines', 'hmajgl'];\nexport var hasMinorGridLinesProperty = ['hasMinorGridLines', 'hmingl'];\nexport var majorUnitProperty = ['majorUnit', 'maju'];\nexport var isAutoMajorProperty = ['isAutoMajor', 'iam'];\nexport var maximumValueProperty = ['maximumValue', 'maxv'];\nexport var minimumValueProperty = ['minimumValue', 'minv'];\nexport var categoryXNameProperty = ['categoryXName', 'cx'];\nexport var numberFormatProperty = ['numberFormat', 'nf'];\nexport var yValueProperty = ['yValue', 'y'];\nexport var sizeProperty = ['size', 'sz'];\nexport var seriesFormatProperty = ['seriesFormat', 'sf'];\n"],"names":["ChartComponent","this","keywordIndex","undefined","chartYValues","Inject","AreaSeries","StackingAreaSeries","BarSeries","PieSeries","StackingBarSeries","PolarSeries","ScatterSeries","BubbleSeries","RadarSeries","DateTime","ColumnSeries","StackingColumnSeries","LineSeries","StackingLineSeries","ErrorBar","Trendlines","SplineSeries","DataLabel","Category","Legend","Tooltip","Export","AccumulationLegend","AccumulationTooltip","AccumulationDataLabel","prototype","chartRender","chart","isNullOrUndefined","chartType","chartTypeProperty","isPieType","chartData","chartModel","enableAnimation","width","widthProperty","height","heightProperty","AccumulationChart","Chart","primaryXAxis","chartPrimaryXAxis","chartPrimaryCategoryAxisProperty","primaryYAxis","chartPrimaryYAxis","chartPrimaryValueAxisProperty","series","chartSeries","chartSeriesProperty","i","length","parseInt","toString","animation","enable","title","chartTitleProperty","legendSettings","parseChartLegend","chartLegendProperty","convertChartToImage","elementWidth","elementHeight","_this","Promise","resolve","reject","dataInfo","getControlsValue","element","createElement","displayPixelRatio","Math","max","window","devicePixelRatio","url","style","URL","createObjectURL","Blob","XMLSerializer","serializeToString","svg","type","image","Image","canvasContext","getContext","scale","onload","drawImage","revokeObjectURL","dataURL","toDataURL","onerror","src","controls","svgRenderer","SvgRenderer","createSvg","id","map","control","svgElement","groupElement","svgObject","cloneNode","renderer","createGroup","appendChild","availableSize","outerHTML","setAttribute","officeChartType","data","seriesData","seriesValue","writeChartSeries","push","count","fill","seriesFormat","dataPointsProperty","dataSource","name","seriesNameProperty","xName","yName","size","pointColorMapping","innerRadius","radius","chartFormat","fillProperty","foreColorProperty","marker","visible","hasOwnProperty","dataLabelProperty","dataLabel","parseDataLabels","data_1","errorBarProperty","errorBarData","errorBar","parseErrorBars","trendLinesProperty","trendLines","trendLinesData","count_1","trendLine","data_2","parseTrendLines","trendlines","label","positionProperty","position","dataLabelPosition","typeProperty","direction","directionProperty","endStyleProperty","errorBarCap","nameProperty","forwardForecast","forwardProperty","backwardForecast","backwardProperty","interceptProperty","intercept","labelPosition","dataPoints","lineProperty","rgbProperty","categoryType","chartCategoryType","categoryTypeProperty","valueType","intervalType","labelFormat","edgeLabelPlacement","checkAndSetAxisValue","parseBoolValue","hasMajorGridLinesProperty","majorGridLines","hasMinorGridLinesProperty","minorTicksPerInterval","majorUnit","minimumValueProperty","minimum","maximumValueProperty","maximum","majorUnitProperty","isAutoMajor","isAutoMajorProperty","calculateMajorUnit","interval","maxValue","Number","MIN_VALUE","minValue","MAX_VALUE","yValue","roundToNiceNumber","range","log10","floor","log","pow10","pow","frac","chartCategoryProperty","xData","plotValue","chartPlotData","month","day","year","numberFormatProperty","array","categoryXNameProperty","split","x","Date","j","color","yData","chartDataProperty","yValueProperty","sizeProperty","seriesDataPoints","find","obj","idProperty","seriesFormatProperty","getColor","substr","charAt","toUpperCase","slice","value","String","destroy"],"mappings":"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"}