{"version":3,"file":"ej2-progressbar.min.js","sources":["../../src/progressbar/utils/helper.js","../../src/progressbar/utils/theme.js","../../src/progressbar/model/progress-base.js","../../src/progressbar/model/constant.js","../../src/progressbar/model/annotation.js","../../src/progressbar/utils/progress-animation.js","../../src/progressbar/model/progress-annotation.js","../../src/progressbar/model/progress-tooltip.js","../../src/progressbar/types/segment-progress.js","../../src/progressbar/types/linear-progress.js","../../src/progressbar/types/circular-progress.js","../../src/progressbar/progressbar.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\n/**\n * helper for progress bar\n */\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, height, width) {\n        this.x = x;\n        this.y = y;\n        this.height = height;\n        this.width = width;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar Size = /** @class */ (function () {\n    function Size(height, width) {\n        this.height = height;\n        this.width = width;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar Pos = /** @class */ (function () {\n    function Pos(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Pos;\n}());\nexport { Pos };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, width, color, opacity, rect, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, width, color, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        _this.stroke = (width !== 0 && _this.stroke !== '') ? color : 'transparent';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/** @private */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/**\n * Converts a color value to its hexadecimal representation.\n *\n * @param {ColorValue} value - The color value to convert.\n * @returns {string} - The hexadecimal representation of the color.\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * Converts a color component value to its hexadecimal representation.\n *\n * @param {number} value - The color component value to convert.\n * @returns {string} - The hexadecimal representation of the color component.\n * @private\n */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * Converts a hexadecimal color code to a ColorValue.\n *\n * @param {string} hex - The hexadecimal color code to convert.\n * @returns {ColorValue} - The ColorValue representing the color.\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * Converts a color name to its corresponding hexadecimal representation.\n *\n * @param {string} color - The color name to convert.\n * @returns {string} - The hexadecimal representation of the color.\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    document.body.appendChild(createElement('text', { id: 'chartmeasuretext' }));\n    var element = document.getElementById('chartmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    remove(element);\n    var isRGBValue;\n    if (color.indexOf('rgb') === 0 || color.indexOf('hsl') === 0) {\n        color = color.replace(/\\s/g, '').replace(/[()]/g, '');\n        isRGBValue = color.slice(3).split(',');\n    }\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[3], 10), parseInt(isRGBValue[4], 10), parseInt(isRGBValue[5], 10)));\n}\n/** @private */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, fontSize, fontStyle, fontFamily, fontWeight, textAnchor, fill, x, y, width, height) {\n        this.id = id;\n        this['font-size'] = fontSize;\n        this['font-style'] = fontStyle;\n        this['font-family'] = fontFamily;\n        this['font-weight'] = fontWeight;\n        this['text-anchor'] = textAnchor;\n        this.fill = fill;\n        this.x = x;\n        this.y = y;\n        this.width = width ? width : 0;\n        this.height = height ? height : 0;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * Converts polar coordinates (angle in degrees) to Cartesian coordinates.\n *\n * @param {number} centerX - The x-coordinate of the center point.\n * @param {number} centerY - The y-coordinate of the center point.\n * @param {number} radius - The radius from the center point.\n * @param {number} angleInDegrees - The angle in degrees.\n * @returns {Pos} - The Cartesian coordinates (x, y) corresponding to the given polar coordinates.\n */\nexport function degreeToLocation(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * (Math.PI / 180);\n    return {\n        x: centerX + (radius * Math.cos(angleInRadians)),\n        y: centerY + (radius * Math.sin(angleInRadians))\n    };\n}\n/**\n * Generates an SVG path arc string based on given parameters.\n *\n * @param {number} x - The x-coordinate of the center of the arc.\n * @param {number} y - The y-coordinate of the center of the arc.\n * @param {number} radius - The radius of the arc.\n * @param {number} startAngle - The start angle of the arc in degrees.\n * @param {number} endAngle - The end angle of the arc in degrees.\n * @param {boolean} enableRtl - Indicates whether the drawing direction is right-to-left.\n * @param {boolean} pieView - Indicates whether the arc should be drawn as a pie slice.\n * @returns {string} - The SVG path arc string representing the arc.\n */\nexport function getPathArc(x, y, radius, startAngle, endAngle, enableRtl, pieView) {\n    var start = degreeToLocation(x, y, radius, startAngle);\n    var end = degreeToLocation(x, y, radius, endAngle);\n    var largeArcFlag = '0';\n    var sweepFlag = (enableRtl) ? '0' : '1';\n    if (!enableRtl) {\n        largeArcFlag = ((endAngle >= startAngle) ? endAngle : endAngle + 360) - startAngle <= 180 ? '0' : '1';\n    }\n    else {\n        largeArcFlag = ((startAngle >= endAngle) ? startAngle : startAngle + 360) - endAngle <= 180 ? '0' : '1';\n    }\n    var d;\n    if (pieView) {\n        d = 'M ' + x + ' ' + y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' ' + ' 0 ' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y + ' ' + 'Z';\n    }\n    else {\n        d = 'M' + start.x + ' ' + start.y +\n            'A' + radius + ' ' + radius + ' ' + '0' + ' ' + largeArcFlag + ' ' + sweepFlag + ' ' + end.x + ' ' + end.y;\n    }\n    return d;\n}\n/**\n * Converts a string value to a number, considering the container size.\n *\n * @param {string} value - The string value to convert to a number.\n * @param {number} containerSize - The size of the container to consider for relative values.\n * @returns {number} - The converted number value.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Sets attributes on an HTML element based on the provided options.\n *\n * @param {any} options - The options object containing attributes to set.\n * @param {Element} element - The HTML element to set attributes on.\n * @returns {Element} - The modified HTML element.\n * @private\n */\nexport function setAttributes(options, element) {\n    var keys = Object.keys(options);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], options[keys[i]]);\n    }\n    return element;\n}\n/**\n * Calculates the effect value at a given time based on the start and end values, duration, and direction.\n *\n * @param {number} currentTime - The current time in milliseconds.\n * @param {number} startValue - The start value of the effect.\n * @param {number} endValue - The end value of the effect.\n * @param {number} duration - The duration of the effect in milliseconds.\n * @param {boolean} enableRtl - Indicates whether the effect direction is right-to-left.\n * @returns {number} - The calculated effect value at the given time.\n * @private\n */\nexport function effect(currentTime, startValue, endValue, duration, enableRtl) {\n    var start = (enableRtl) ? endValue : -endValue;\n    var end = startValue + ((enableRtl) ? -endValue : endValue);\n    return start * Math.cos(currentTime / duration * (Math.PI / 2)) + end;\n}\n/**\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Retrieves an HTML element from the DOM by its ID.\n *\n * @param {string} id - The ID of the HTML element to retrieve.\n * @returns {Element} - The HTML element with the specified ID.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Removes an HTML element from the DOM.\n *\n * @param {string | Element} id - The ID of the HTML element or the element itself to remove.\n *                                If provided as a string, it's assumed to be the ID of the element.\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    if (!id) {\n        return null;\n    }\n    var element = typeof id === 'string' ? getElement(id) : id;\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * @private\n */\nvar ProgressLocation = /** @class */ (function () {\n    function ProgressLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return ProgressLocation;\n}());\nexport { ProgressLocation };\n","import { Browser } from '@syncfusion/ej2-base';\n/**\n * Retrieves the theme color settings for a progress bar.\n *\n * @param {ProgressTheme} theme - The theme of the progress bar.\n * @returns {IProgressStyle} - The style settings for the progress bar based on the theme.\n * @private\n */\nexport function getProgressThemeColor(theme) {\n    var style;\n    switch (theme) {\n        case 'Material':\n            style = {\n                linearTrackColor: '#E3165B',\n                linearProgressColor: '#E3165B',\n                circularTrackColor: '#E3165B',\n                circularProgressColor: '#E3165B',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 0.26,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#4caf50',\n                danger: '#ff6652',\n                warning: '#ff9800',\n                info: '#03a9f4',\n                tooltipLabelFont: {\n                    color: 'rgba(249, 250, 251, 1)', fontFamily: 'Roboto', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#000000', fontStyle: 'Normal', fontFamily: 'Roboto'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#000000', fontStyle: 'Normal', fontFamily: 'Roboto'\n                }\n            };\n            break;\n        case 'Bootstrap':\n            style = {\n                linearTrackColor: '#EEEEEE',\n                linearProgressColor: '#317ab9',\n                circularTrackColor: '#EEEEEE',\n                circularProgressColor: '#317ab9',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 20,\n                linearProgressThickness: 20,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#48b14c',\n                danger: '#d44f4f',\n                warning: '#fac168',\n                info: '#2aaac0',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Helvetica Neue', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#000000', fontStyle: 'Normal', fontFamily: 'Helvetica Neue'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#000000', fontStyle: 'Normal', fontFamily: 'Helvetica Neue'\n                }\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                linearTrackColor: '#E9ECEF',\n                linearProgressColor: '#007bff',\n                circularTrackColor: '#E9ECEF',\n                circularProgressColor: '#007bff',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 6,\n                circularProgressThickness: 6,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#28a745',\n                danger: '#dc3545',\n                warning: '#ffc107',\n                info: '#17a2b8',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Helvetica Neue', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#000000', fontStyle: 'Normal', fontFamily: 'Helvetica Neue'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#000000', fontStyle: 'Normal', fontFamily: 'Helvetica Neue'\n                }\n            };\n            break;\n        case 'HighContrast':\n            style = {\n                linearTrackColor: '#BFBFBF',\n                linearProgressColor: '#FFD939',\n                circularTrackColor: '#BFBFBF',\n                circularProgressColor: '#FFD939',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#2bc700',\n                danger: '#ff6161',\n                warning: '#ff7d1a',\n                info: '#66b0ff',\n                tooltipLabelFont: {\n                    color: '#000000', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Tailwind3':\n            style = {\n                linearTrackColor: '#E5E7EB',\n                linearProgressColor: '#4F46E5',\n                circularTrackColor: '#E5E7EB',\n                circularProgressColor: '#4F46E5',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                bufferColor: '#818CF8',\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#111827',\n                tooltipLightLabel: '#F9FAFB',\n                success: '#15803D',\n                danger: '#DC2626',\n                warning: '#C2410C',\n                info: '#0E7490',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Inter', fontWeight: '500'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Inter'\n                },\n                circularLabelFont: {\n                    size: '10', fontWeight: '500', color: '#4F46E5', fontStyle: 'Normal', fontFamily: 'Inter'\n                }\n            };\n            break;\n        case 'Tailwind3Dark':\n            style = {\n                linearTrackColor: '#282F3C',\n                linearProgressColor: '#6366F1',\n                circularTrackColor: '#282F3C',\n                circularProgressColor: '#6366F1',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.45,\n                bufferColor: '#3730A3',\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#F9FAFB',\n                tooltipLightLabel: '#1F2937',\n                success: '#22C55E',\n                danger: '#F87171',\n                warning: '#F97316',\n                info: '#38BDF8',\n                tooltipLabelFont: {\n                    color: '#1F2937', fontFamily: 'Inter', fontWeight: '500'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Inter'\n                },\n                circularLabelFont: {\n                    size: '10', fontWeight: '500', color: '#6366F1', fontStyle: 'Normal', fontFamily: 'Inter'\n                }\n            };\n            break;\n        case 'Tailwind':\n            style = {\n                linearTrackColor: '#E5E7EB',\n                linearProgressColor: '#4F46E5',\n                circularTrackColor: '#E5E7EB',\n                circularProgressColor: '#4F46E5',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#15803D',\n                danger: '#DC2626',\n                warning: '#C2410C',\n                info: '#0E7490',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Inter', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Inter'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Inter'\n                }\n            };\n            break;\n        case 'TailwindDark':\n            style = {\n                linearTrackColor: '#4B5563',\n                linearProgressColor: '#22D3EE',\n                circularTrackColor: '#4B5563',\n                circularProgressColor: '#22D3EE',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.45,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#22C55E',\n                danger: '#F87171',\n                warning: '#ea580c',\n                info: '#06B6D4',\n                tooltipLabelFont: {\n                    color: '#1F2937', fontFamily: 'Inter', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#D1D5DB', fontStyle: 'Normal', fontFamily: 'Inter'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#D1D5DB', fontStyle: 'Normal', fontFamily: 'Inter'\n                }\n            };\n            break;\n        case 'FabricDark':\n        case 'BootstrapDark':\n        case 'MaterialDark':\n            style = {\n                linearTrackColor: '#C8C8C8',\n                linearProgressColor: '#9A9A9A',\n                circularTrackColor: '#C8C8C8',\n                circularProgressColor: '#9A9A9A',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#22b24b',\n                danger: '#ac2a2a',\n                warning: '#ffca1c',\n                info: '#489bd5',\n                tooltipLabelFont: {\n                    color: theme === 'BootstrapDark' ? '#1A1A1A' : theme === 'FabricDark' ? '#DADADA' : 'rgba(18, 18, 18, 1)', fontFamily: theme === 'BootstrapDark' ? 'Helvetica Neue' : theme === 'FabricDark' ? 'Segoe UI' : 'Roboto', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#000000', fontStyle: 'Normal', fontFamily: theme === 'BootstrapDark' ? 'Helvetica Neue' : theme === 'FabricDark' ? 'Segoe UI' : 'Roboto'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#000000', fontStyle: 'Normal', fontFamily: theme === 'BootstrapDark' ? 'Helvetica Neue' : theme === 'FabricDark' ? 'Segoe UI' : 'Roboto'\n                }\n            };\n            break;\n        case 'Bootstrap5':\n            style = {\n                linearTrackColor: '#DEE2E6',\n                linearProgressColor: '#0D6EFD',\n                circularTrackColor: '#DEE2E6',\n                circularProgressColor: '#0D6EFD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.44,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 2,\n                circularProgressThickness: 2,\n                tooltipFill: '#000000E5',\n                tooltipLightLabel: '#FFFFFF',\n                success: '#198754',\n                danger: '#DC3545',\n                warning: '#FFC107',\n                info: '#0DCAF0',\n                tooltipLabelFont: {\n                    color: '#F9FAFB', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '400', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Bootstrap5Dark':\n            style = {\n                linearTrackColor: '#495057',\n                linearProgressColor: '#0D6EFD',\n                circularTrackColor: '#495057',\n                circularProgressColor: '#0D6EFD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.4,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 2,\n                circularProgressThickness: 2,\n                tooltipFill: '#FFFFFFE5',\n                tooltipLightLabel: '#212529',\n                success: '#198754',\n                danger: '#DC3545',\n                warning: '#FFC107',\n                info: '#0DCAF0',\n                tooltipLabelFont: {\n                    color: '#212529', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '400', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Fluent':\n            style = {\n                linearTrackColor: '#F3F2F1',\n                linearProgressColor: '#0D6EFD',\n                circularTrackColor: '#F3F2F1',\n                circularProgressColor: '#0D6EFD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.45,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#0B6A0B',\n                danger: '#D13438',\n                warning: '#CA5010',\n                info: '#038387',\n                tooltipLabelFont: {\n                    color: '#323130', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'FluentDark':\n            style = {\n                linearTrackColor: '#3B4248',\n                linearProgressColor: '#0D6EFD',\n                circularTrackColor: '#3B4248',\n                circularProgressColor: '#0D6EFD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 16,\n                linearProgressThickness: 16,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#0B6A0B',\n                danger: '#D13438',\n                warning: '#CA5010',\n                info: '#038387',\n                tooltipLabelFont: {\n                    color: '#F3F2F1', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#0D6EFD', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Fluent2':\n            style = {\n                linearTrackColor: '#E6E6E6',\n                linearProgressColor: '#0F6CBD',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0F6CBD',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: Browser.isDevice ? 4 : 2,\n                linearProgressThickness: Browser.isDevice ? 4 : 2,\n                circularTrackThickness: Browser.isDevice ? 2 : 2,\n                circularProgressThickness: Browser.isDevice ? 2 : 2,\n                tooltipFill: '#FFFFFF',\n                tooltipLightLabel: '#242424',\n                success: '#107C10',\n                danger: '#D13438',\n                warning: '#BC4B09',\n                info: '#008AA9',\n                tooltipLabelFont: {\n                    color: '#242424', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '12', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#242424', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Fluent2Dark':\n            style = {\n                linearTrackColor: '#333333',\n                linearProgressColor: '#115EA3',\n                circularTrackColor: '#333333',\n                circularProgressColor: '#115EA3',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: Browser.isDevice ? 4 : 2,\n                linearProgressThickness: Browser.isDevice ? 4 : 2,\n                circularTrackThickness: Browser.isDevice ? 2 : 2,\n                circularProgressThickness: Browser.isDevice ? 2 : 2,\n                tooltipFill: '#292929',\n                tooltipLightLabel: '#FFFFFF',\n                success: '#107C10',\n                danger: '#DC626D',\n                warning: '#FAA06B',\n                info: '#0099BC',\n                tooltipLabelFont: {\n                    color: '#FFFFFF', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '12', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Fluent2HighContrast':\n            style = {\n                linearTrackColor: '#000000',\n                linearProgressColor: '#1AEBFF',\n                circularTrackColor: '#000000',\n                circularProgressColor: '#1AEBFF',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.35,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: Browser.isDevice ? 4 : 2,\n                linearProgressThickness: Browser.isDevice ? 4 : 2,\n                circularTrackThickness: Browser.isDevice ? 2 : 2,\n                circularProgressThickness: Browser.isDevice ? 2 : 2,\n                tooltipFill: '#000000',\n                tooltipLightLabel: '#FFFFFF',\n                success: '#107C10',\n                danger: '#C50F1F',\n                warning: '#F7630C',\n                info: '#0099BC',\n                tooltipLabelFont: {\n                    color: '#FFFFFF', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '12', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n        case 'Material3':\n            style = {\n                linearTrackColor: '#E7E0EC',\n                linearProgressColor: '#6750A4',\n                circularTrackColor: '#E7E0EC',\n                circularProgressColor: '#6750A4',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.24,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#313033',\n                tooltipLightLabel: '#F4EFF4',\n                success: '#0B6A0B',\n                danger: '#D13438',\n                warning: '#CA5010',\n                info: '#038387',\n                tooltipLabelFont: {\n                    size: '12px', fontWeight: '400', color: '#F4EFF4', fontStyle: 'Normal', fontFamily: 'Roboto'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#FFFFFF', fontStyle: 'Normal', fontFamily: 'Roboto'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#6750A4', fontStyle: 'Normal', fontFamily: 'Roboto'\n                }\n            };\n            break;\n        case 'Material3Dark':\n            style = {\n                linearTrackColor: '#49454F',\n                linearProgressColor: '#D0BCFF',\n                circularTrackColor: '#49454F',\n                circularProgressColor: '#D0BCFF',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.24,\n                linearGapWidth: 4,\n                circularGapWidth: 4,\n                linearTrackThickness: 4,\n                linearProgressThickness: 4,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#E6E1E5',\n                tooltipLightLabel: '#313033',\n                success: '#0B6A0B',\n                danger: '#D13438',\n                warning: '#CA5010',\n                info: '#038387',\n                tooltipLabelFont: {\n                    color: '#313033', fontFamily: 'roboto', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: '#371E73', fontStyle: 'Normal', fontFamily: 'Roboto'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: '#D0BCFF', fontStyle: 'Normal', fontFamily: 'Roboto'\n                }\n            };\n            break;\n        default:\n            style = {\n                linearTrackColor: '#EAEAEA',\n                linearProgressColor: '#0078D6',\n                circularTrackColor: '#E6E6E6',\n                circularProgressColor: '#0078D6',\n                backgroundColor: 'transparent',\n                progressOpacity: 1,\n                trackOpacity: 1,\n                bufferOpacity: 0.3,\n                linearGapWidth: 2,\n                circularGapWidth: 4,\n                linearTrackThickness: 2,\n                linearProgressThickness: 2,\n                circularTrackThickness: 4,\n                circularProgressThickness: 4,\n                tooltipFill: '#ffffff',\n                tooltipLightLabel: '#000000',\n                success: '#166600',\n                danger: '#b30900',\n                warning: '#944000',\n                info: '#0056b3',\n                tooltipLabelFont: {\n                    color: '#333333', fontFamily: 'Segoe UI', fontWeight: '400'\n                },\n                linearLabelFont: {\n                    size: '10', fontWeight: '400', color: null, fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                },\n                circularLabelFont: {\n                    size: '12', fontWeight: '500', color: null, fontStyle: 'Normal', fontFamily: 'Segoe UI'\n                }\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Complex } from '@syncfusion/ej2-base';\n/**\n * progress bar complex interface\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the fonts in progressbar\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Far')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"text\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Animation\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(2000)\n    ], Animation.prototype, \"duration\", void 0);\n    __decorate([\n        Property(0)\n    ], Animation.prototype, \"delay\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Annotation\n */\nvar ProgressAnnotationSettings = /** @class */ (function (_super) {\n    __extends(ProgressAnnotationSettings, _super);\n    function ProgressAnnotationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ProgressAnnotationSettings.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressAnnotationSettings.prototype, \"annotationAngle\", void 0);\n    __decorate([\n        Property('0%')\n    ], ProgressAnnotationSettings.prototype, \"annotationRadius\", void 0);\n    return ProgressAnnotationSettings;\n}(ChildProperty));\nexport { ProgressAnnotationSettings };\n/**\n * Configures the borders .\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n *  Options to customize the tooltip for the progress bar.\n *\n *  @default {}\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showTooltipOnHover\", void 0);\n    __decorate([\n        Complex({ fontFamily: null, size: '12px', fontWeight: null, fontStyle: 'Normal', color: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#cccccc', width: 0.5 }, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * RangeColor\n */\nvar RangeColor = /** @class */ (function (_super) {\n    __extends(RangeColor, _super);\n    function RangeColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], RangeColor.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeColor.prototype, \"end\", void 0);\n    return RangeColor;\n}(ChildProperty));\nexport { RangeColor };\n","/**\n * corner Radius\n */\nexport var lineCapRadius = 0.9;\n/**\n * complete Angle\n */\nexport var completeAngle = 359.99;\n/**\n * valueChanged event\n */\nexport var valueChanged = 'valueChanged';\n/**\n * progressCompleted event\n */\nexport var progressCompleted = 'progressCompleted';\n/**\n * mouseClick event\n */\nexport var mouseClick = 'mouseClick';\n/**\n * mouseDown event\n */\nexport var mouseDown = 'mouseDown';\n/**\n * mouseUp event\n */\nexport var mouseUp = 'mouseUp';\n/**\n * mouseMove event\n */\nexport var mouseMove = 'mouseMove';\n/**\n * mouseLeave event\n */\nexport var mouseLeave = 'mouseLeave';\n/**\n * svgLink\n */\nexport var svgLink = 'http://www.w3.org/2000/svg';\n/**\n * gradient type\n */\nexport var gradientType = 'linearGradient';\n/**\n * stop element\n */\nexport var stopElement = 'stop';\n/**\n * Render for the tooltip.\n */\nexport var tooltipRender = 'tooltipRender';\n","import { createElement } from '@syncfusion/ej2-base';\nimport { annotationRender, removeElement, ProgressLocation } from '../utils/helper';\n/**\n * Base file for annotation\n */\nvar AnnotationBase = /** @class */ (function () {\n    /**\n     * Constructor for progress annotation\n     *\n     * @param {ProgressBar} control It called constructor\n     */\n    function AnnotationBase(control) {\n        this.control = control;\n    }\n    AnnotationBase.prototype.render = function (annotation, index) {\n        this.annotation = annotation;\n        var childElement = createElement('div', {\n            id: this.control.element.id + 'Annotation' + index,\n            styles: 'position:absolute;z-index:1', innerHTML: annotation.content\n        });\n        return childElement;\n    };\n    /**\n     * To process the annotation\n     *\n     * @param {ProgressAnnotationSettings} annotation One of the parameter called annotation\n     * @param {number} index Index of the annotation\n     * @param {HTMLElement} parentElement Parent element of the annotation\n     * @returns {void}\n     */\n    AnnotationBase.prototype.processAnnotation = function (annotation, index, parentElement) {\n        var location = new ProgressLocation(0, 0);\n        var annotationElement = this.render(annotation, index);\n        if (annotationElement) {\n            this.setElementStyle(location, annotationElement, parentElement);\n        }\n        else if (this.control.redraw) {\n            removeElement(annotationElement.id);\n            if (this.control.isReact) {\n                this.control.clearTemplate();\n            }\n        }\n    };\n    AnnotationBase.prototype.setElementStyle = function (location, element, parentElement) {\n        var argsData = {\n            cancel: false, name: annotationRender, content: element,\n            location: location\n        };\n        this.control.trigger(annotationRender, argsData);\n        if (!argsData.cancel) {\n            var result = this.Location(this.annotation.annotationRadius, this.annotation.annotationAngle);\n            argsData.content.style.left = result.left + 'px';\n            argsData.content.style.top = result.top + 'px';\n            argsData.content.style.transform = 'translate(-50%, -50%)';\n            argsData.content.setAttribute('aria-label', 'Annotation');\n            parentElement.appendChild(argsData.content);\n            if (this.control.isReact) {\n                this.control.renderReactTemplates();\n            }\n        }\n    };\n    AnnotationBase.prototype.Location = function (radius, angle) {\n        var top;\n        var left;\n        var radius1 = parseFloat(radius);\n        if (radius1 === 0 && angle === 0) {\n            var rect = this.control.progressRect;\n            left = rect.x + (rect.width / 2);\n            top = rect.y + (rect.height / 2);\n        }\n        else {\n            var degToRadFactor = Math.PI / 180;\n            angle = angle - 90;\n            angle = angle * degToRadFactor;\n            var x = Math.round(this.control.progressSize.width / 2.25);\n            var y = Math.round(this.control.progressSize.height / 2.25);\n            left = (radius1 * Math.cos(angle)) + x;\n            top = (radius1 * Math.sin(angle)) + y;\n        }\n        return {\n            top: top, left: left\n        };\n    };\n    return AnnotationBase;\n}());\nexport { AnnotationBase };\n","import { Animation, isNullOrUndefined, animationMode } from '@syncfusion/ej2-base';\nimport { degreeToLocation, effect, getPathArc } from '../utils/helper';\nimport { lineCapRadius, completeAngle } from '../model/constant';\n/**\n * Animation for progress bar\n */\nvar ProgressAnimation = /** @class */ (function () {\n    function ProgressAnimation() {\n    }\n    /**\n     * Performs linear animation on the specified element.\n     *\n     * @param {Element} element - The HTML element to animate.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} delay - The delay before starting the animation, in milliseconds.\n     * @param {number} previousWidth - The previous width of the progress.\n     * @param {Element} active - The active element to control the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doLinearAnimation = function (element, progress, delay, previousWidth, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        var width = linearPath.getAttribute('width');\n        var x = linearPath.getAttribute('x');\n        var opacityValue = 0;\n        var value = 0;\n        var start = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? previousWidth : parseInt(x, 10);\n        var end = (!progress.enableRtl || (progress.cornerRadius === 'Round4px')) ? parseInt(width, 10) - start :\n            parseInt(width, 10) - previousWidth;\n        var rtlX = parseInt(x, 10) - end;\n        linearPath.style.visibility = 'hidden';\n        animation.animate(linearPath, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), parseInt(x, 10), parseInt(width, 10), true);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, true);\n                            linearPath.setAttribute('x', value.toString());\n                        }\n                    }\n                }\n                else {\n                    if (args.timeStamp >= args.delay) {\n                        linearPath.style.visibility = 'visible';\n                        if (progress.isActive) {\n                            value = _this.activeAnimate((args.timeStamp / args.duration), 0, parseInt(width, 10), false);\n                            opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                            active.setAttribute('opacity', opacityValue.toString());\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                        else {\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            linearPath.setAttribute('width', value.toString());\n                        }\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                linearPath.style.visibility = '';\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    if (progress.isActive) {\n                        linearPath.setAttribute('x', x.toString());\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                    else {\n                        linearPath.setAttribute('x', rtlX.toString());\n                    }\n                }\n                else {\n                    linearPath.setAttribute('width', width);\n                    if (progress.isActive) {\n                        _this.doLinearAnimation(element, progress, delay, previousWidth, active);\n                    }\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /**\n     * Initiates linear animation for an indeterminate progress bar.\n     *\n     * @param {Element} element - The HTML element representing the progress bar.\n     * @param {number} progressWidth - The width of the progress bar.\n     * @param {number} thickness - The thickness of the progress bar.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {Element} clipPath - The SVG clip path element to control the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doLinearIndeterminate = function (element, progressWidth, thickness, progress, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var linearPath = element;\n        var x = linearPath.getAttribute('x');\n        var width = linearPath.getAttribute('width');\n        var value = 0;\n        var start = (width) ? -(parseInt(width, 10)) : -progressWidth;\n        var end = (progress.progressRect.x + progress.progressRect.width) + ((width) ? (parseInt(width, 10)) : progressWidth);\n        var duration = (!progress.enableProgressSegments) ? progress.animation.duration : progress.animation.duration + 1000;\n        animation.animate(clipPath, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : duration,\n            delay: 0,\n            progress: function (args) {\n                if (progress.enableRtl && !(progress.cornerRadius === 'Round4px')) {\n                    value = effect(args.timeStamp, parseInt(x, 10) || progress.progressRect.x + progressWidth, end, args.duration, true);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n                else {\n                    value = effect(args.timeStamp, start, end, args.duration, false);\n                    if (!progress.enableProgressSegments) {\n                        linearPath.setAttribute('x', value.toString());\n                    }\n                    else {\n                        linearPath.setAttribute('d', progress.getPathLine(value, progressWidth, thickness));\n                    }\n                }\n            },\n            end: function () {\n                if (progress.enableRtl && !progress.enableProgressSegments && !(progress.cornerRadius === 'Round4px')) {\n                    linearPath.setAttribute('x', x.toString());\n                }\n                else if (!progress.enableProgressSegments) {\n                    linearPath.setAttribute('x', start.toString());\n                }\n                if (!progress.destroyIndeterminate) {\n                    _this.doLinearIndeterminate(element, progressWidth, thickness, progress, clipPath);\n                }\n            }\n        });\n    };\n    /**\n     * Performs striped animation on the specified element.\n     *\n     * @param {Element} element - The HTML element to animate.\n     * @param {ProgressBar} progress - The progress bar object.\n     * @param {number} value - The value indicating the progress of the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doStripedAnimation = function (element, progress, value) {\n        var _this = this;\n        var animation = new Animation({});\n        var point = 1000 / progress.animation.duration;\n        animation.animate(element, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : progress.animation.duration,\n            delay: progress.animation.delay,\n            progress: function () {\n                value += (progress.enableRtl) ? -point : point;\n                element.setAttribute('gradientTransform', 'translate(' + value + ') rotate(-45)');\n            },\n            end: function () {\n                if (!progress.destroyIndeterminate) {\n                    _this.doStripedAnimation(element, progress, value);\n                }\n            }\n        });\n    };\n    /**\n     * Initiates circular animation on the specified element.\n     *\n     * @param {number} x - The x-coordinate of the center of the circle.\n     * @param {number} y - The y-coordinate of the center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {number} progressEnd - The end value of the progress.\n     * @param {number} totalEnd - The total end value of the progress.\n     * @param {Element} element - The HTML element representing the circular progress.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} thickness - The thickness of the circular progress.\n     * @param {number} delay - The delay before starting the animation, in milliseconds.\n     * @param {number} startValue - The starting value of the progress.\n     * @param {number} previousTotal - The previous total value of the progress.\n     * @param {Element} active - The active element to control the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doCircularAnimation = function (x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active) {\n        var _this = this;\n        var animation = new Animation({});\n        var circularPath = element;\n        var start = progress.startAngle;\n        var pathRadius = radius + (thickness / 2);\n        var end = 0;\n        var opacityValue = 0;\n        var duration = (progress.isActive) ? 3000 : progress.animation.duration;\n        start += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n        totalEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            (lineCapRadius / 2) * thickness : 0;\n        progressEnd += (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0) ?\n            ((progress.enableRtl) ? -(lineCapRadius / 2) * thickness : (lineCapRadius / 2) * thickness) : 0;\n        if (progress.cornerRadius === 'Round' && totalEnd !== completeAngle && totalEnd !== 0 && progress.startAngle === progress.endAngle) {\n            var startPosition = degreeToLocation(x, y, pathRadius, start).x;\n            var endPosition = degreeToLocation(x, y, pathRadius, progressEnd).x;\n            while (((progress.enableRtl !== progress.startAngle >= 180) ? endPosition <= startPosition : endPosition >= startPosition)) {\n                progressEnd += (progress.enableRtl ? 0.1 : -0.1);\n                endPosition = degreeToLocation(x, y, pathRadius, progressEnd).x;\n            }\n        }\n        var startPos = (!isNullOrUndefined(startValue)) ? startValue : start;\n        var endPos = (!isNullOrUndefined(startValue)) ? totalEnd - previousTotal : totalEnd;\n        circularPath.setAttribute('visibility', 'Hidden');\n        animation.animate(circularPath, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                if (args.timeStamp >= args.delay) {\n                    circularPath.setAttribute('visibility', 'visible');\n                    if (progress.isActive) {\n                        end = _this.activeAnimate((args.timeStamp / args.duration), startPos, endPos, progress.enableRtl);\n                        opacityValue = effect(args.timeStamp, 0.5, 0.5, args.duration, true);\n                        active.setAttribute('opacity', opacityValue.toString());\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                    else {\n                        end = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                        circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, end % 360, progress.enableRtl, true));\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                circularPath.setAttribute('visibility', '');\n                circularPath.setAttribute('d', getPathArc(x, y, pathRadius, start, progressEnd, progress.enableRtl, true));\n                if (progress.isActive) {\n                    _this.doCircularAnimation(x, y, radius, progressEnd, totalEnd, element, progress, thickness, delay, startValue, previousTotal, active);\n                }\n                progress.trigger('animationComplete', {\n                    value: progress.value, trackColor: progress.trackColor,\n                    progressColor: progress.progressColor\n                });\n            }\n        });\n    };\n    /**\n     * Initiates circular animation for an indeterminate progress bar.\n     *\n     * @param {Element} circularProgress - The HTML element representing the circular progress bar.\n     * @param {ProgressBar} progress - The progress bar object.\n     * @param {number} start - The starting value of the progress.\n     * @param {number} end - The ending value of the progress.\n     * @param {number} x - The x-coordinate of the center of the circle.\n     * @param {number} y - The y-coordinate of the center of the circle.\n     * @param {number} radius - The radius of the circle.\n     * @param {number} thickness - The thickness of the circular progress bar.\n     * @param {Element} clipPath - The SVG clip path element to control the animation.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doCircularIndeterminate = function (circularProgress, progress, start, end, x, y, radius, thickness, clipPath) {\n        var _this = this;\n        var animation = new Animation({});\n        var pathRadius = radius + ((!progress.enableProgressSegments) ? (thickness / 2) : 0);\n        var duration = (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : progress.animation.duration;\n        var value = (!progress.enableProgressSegments) ? 6000 / duration : 4000 / duration;\n        animation.animate(clipPath, {\n            progress: function () {\n                circularProgress.style.visibility = 'visible';\n                start += (progress.enableRtl) ? -value : value;\n                end += (progress.enableRtl) ? -value : value;\n                circularProgress.setAttribute('d', getPathArc(x, y, pathRadius, start % 360, end % 360, progress.enableRtl, !progress.enableProgressSegments));\n            },\n            end: function () {\n                if (!progress.destroyIndeterminate) {\n                    _this.doCircularIndeterminate(circularProgress, progress, start, end, x, y, radius, thickness, clipPath);\n                }\n            }\n        });\n    };\n    /**\n     * Initiates label animation for a progress bar.\n     *\n     * @param {Element} labelPath - The SVG path element representing the label.\n     * @param {number} start - The starting value of the progress.\n     * @param {number} end - The ending value of the progress.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} delay - The delay before starting the animation, in milliseconds.\n     * @param {number} textSize - The size of the text.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doLabelAnimation = function (labelPath, start, end, progress, delay, textSize) {\n        var animation = new Animation({});\n        var label = new Animation({});\n        var startPos;\n        var endPos;\n        var text = labelPath.innerHTML;\n        var value = 0;\n        var xPos = 0;\n        var valueChanged = 0;\n        var percentage = 100;\n        var labelText = progress.labelStyle.text;\n        var labelPos = progress.labelStyle.textAlignment;\n        var posX = parseInt(labelPath.getAttribute('x'), 10);\n        labelPath.setAttribute('visibility', 'Hidden');\n        if (progress.type === 'Linear') {\n            startPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width) + (textSize / 2) :\n                start - (textSize / 2);\n            startPos = (startPos <= 0) ? 0 : startPos;\n            endPos = (progress.enableRtl) ? startPos - posX : posX - startPos;\n        }\n        animation.animate(labelPath, {\n            duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                args.name = 'SlideRight';\n                if (progress.type === 'Linear') {\n                    if (args.timeStamp >= args.delay) {\n                        if (labelText === '') {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, start, end, args.duration, false);\n                            valueChanged = parseInt((((Math.round(value)) / progress.progressRect.width) * percentage).toString(), 10);\n                            labelPath.innerHTML = valueChanged.toString() + '%';\n                            if (labelPos === 'Far' || labelPos === 'Center') {\n                                xPos = effect(args.timeStamp, startPos, endPos, args.duration, progress.enableRtl);\n                                labelPath.setAttribute('x', xPos.toString());\n                            }\n                        }\n                    }\n                }\n                else if (progress.type === 'Circular') {\n                    if (labelText === '') {\n                        labelPath.setAttribute('visibility', 'visible');\n                        value = effect(args.timeStamp, start, end - start, args.duration, false);\n                        valueChanged = parseInt((((Math.round(value)) / progress.totalAngle) * percentage).toString(), 10);\n                        labelPath.innerHTML = valueChanged.toString() + '%';\n                    }\n                }\n            },\n            end: function () {\n                progress.cancelResize = false;\n                if (labelText === '') {\n                    labelPath.innerHTML = text;\n                    labelPath.setAttribute('x', posX.toString());\n                }\n                else {\n                    label.animate(labelPath, {\n                        progress: function (args) {\n                            labelPath.setAttribute('visibility', 'visible');\n                            value = effect(args.timeStamp, 0, 1, args.duration, false);\n                            labelPath.setAttribute('opacity', value.toString());\n                        },\n                        end: function () {\n                            labelPath.setAttribute('opacity', '1');\n                        }\n                    });\n                }\n            }\n        });\n    };\n    /**\n     * Initiates annotation animation for a circular progress bar.\n     *\n     * @param {Element} circularPath - The SVG path element representing the circular progress bar.\n     * @param {ProgressBar} progress - The progress bar object.\n     * @param {number} previousEnd - The previous end value of the progress.\n     * @param {number} previousTotal - The previous total value of the progress.\n     * @returns {void}\n     */\n    ProgressAnimation.prototype.doAnnotationAnimation = function (circularPath, progress, previousEnd, previousTotal) {\n        var animation = new Animation({});\n        var value = 0;\n        var percentage = 100;\n        var isAnnotation = progress.annotations.length > 0;\n        var annotatElementChanged;\n        var firstAnnotatElement;\n        var start = progress.startAngle;\n        var totalAngle = progress.totalAngle;\n        var totalEnd;\n        var annotateValueChanged;\n        var annotateValue;\n        if (isAnnotation && progress.progressAnnotationModule) {\n            firstAnnotatElement = document.getElementById(progress.element.id + 'Annotation0').children[0];\n            if (firstAnnotatElement && firstAnnotatElement.children[0]) {\n                if (firstAnnotatElement.children[0].tagName === 'SPAN') {\n                    annotatElementChanged = firstAnnotatElement.children[0];\n                }\n            }\n        }\n        totalEnd = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n        progress.annotateTotal = totalEnd =\n            (progress.argsData.value < progress.minimum) ? 0 : totalEnd;\n        progress.annotateEnd = start + totalEnd;\n        annotateValue = ((progress.argsData.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        annotateValue = (progress.argsData.value < progress.minimum) ? 0 :\n            Math.round(annotateValue);\n        var startValue = (!isNullOrUndefined(previousEnd)) ? previousEnd : start;\n        var endValue = (!isNullOrUndefined(previousEnd)) ? totalEnd - previousTotal : totalEnd;\n        if (progress.argsData.value <= progress.minimum) {\n            annotatElementChanged.innerHTML = annotateValue + '%';\n        }\n        else {\n            animation.animate(circularPath, {\n                duration: (progress.animation.duration === 0 && animationMode === 'Enable') ? 2000 : progress.animation.duration,\n                delay: progress.animation.delay,\n                progress: function (args) {\n                    progress.cancelResize = true;\n                    if (isAnnotation && annotatElementChanged) {\n                        value = effect(args.timeStamp, startValue, endValue, args.duration, false);\n                        annotateValueChanged = parseInt((((Math.round(value) - start) / totalAngle) * percentage).toString(), 10);\n                        annotatElementChanged.innerHTML = annotateValueChanged ? annotateValueChanged.toString() + '%' : '0%';\n                    }\n                },\n                end: function () {\n                    progress.cancelResize = false;\n                    annotatElementChanged.innerHTML = annotateValue + '%';\n                }\n            });\n        }\n    };\n    ProgressAnimation.prototype.activeAnimate = function (t, start, end, enableRtl) {\n        var time = 1 - Math.pow(1 - t, 3);\n        var attrValue = start + ((!enableRtl) ? (time * end) : -(time * end));\n        return attrValue;\n    };\n    return ProgressAnimation;\n}());\nexport { ProgressAnimation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement } from '@syncfusion/ej2-base';\nimport { AnnotationBase } from './annotation';\nimport { ProgressAnimation } from '../utils/progress-animation';\n/**\n * Class for progress annotation\n */\nvar ProgressAnnotation = /** @class */ (function (_super) {\n    __extends(ProgressAnnotation, _super);\n    /**\n     * Constructor for ProgressBar annotation\n     *\n     * @private\n     * @param {ProgressBar} control Passed the control\n     * @param {annotations} annotations ProgressAnnotationSettings\n     */\n    function ProgressAnnotation(control, annotations) {\n        var _this = _super.call(this, control) || this;\n        _this.animation = new ProgressAnimation();\n        _this.progress = control;\n        _this.annotations = annotations;\n        return _this;\n    }\n    /**\n     * Method to render the annotation for ProgressBar\n     *\n     * @param {Element} element Annotation element.\n     * @returns {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.renderAnnotations = function (element) {\n        var _this = this;\n        this.annotations = this.progress.annotations;\n        var parentElement = document.getElementById(this.progress.element.id + 'Annotation_collections');\n        this.parentElement = parentElement ? parentElement : createElement('div', {\n            id: this.progress.element.id + 'Annotation_collections',\n            styles: 'position:absolute'\n        });\n        this.annotations.map(function (annotation, index) {\n            _this.processAnnotation(annotation, index, _this.parentElement);\n        });\n        if (!parentElement) {\n            element.appendChild(this.parentElement);\n        }\n        if (this.progress.animation.enable && !this.progress.isIndeterminate) {\n            this.animation.doAnnotationAnimation(this.progress.clipPath, this.progress);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    ProgressAnnotation.prototype.getModuleName = function () {\n        return 'ProgressAnnotation';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    ProgressAnnotation.prototype.destroy = function () {\n        // Destroy method performed here\n    };\n    return ProgressAnnotation;\n}(AnnotationBase));\nexport { ProgressAnnotation };\n","import { Tooltip as SVGTooltip } from '@syncfusion/ej2-svg-base';\nimport { Animation, extend } from '@syncfusion/ej2-base';\nimport { effect, ProgressLocation } from '../utils/helper';\nimport { tooltipRender } from './constant';\n/**\n * class for tooltip.\n */\nvar ProgressTooltip = /** @class */ (function () {\n    /**\n     * Constructor for progress tooltip.\n     *\n     * @param {ProgressBar} control\n     */\n    function ProgressTooltip(control) {\n        // Defines text collection passed to svg tooltip.\n        this.text = [];\n        // Defines the previous left value of tooltip.\n        this.previousPosition = 0;\n        this.control = control;\n    }\n    /**\n     * Method to render the tooltip for progress bar.\n     */\n    ProgressTooltip.prototype.tooltip = function (e) {\n        var svgElement = document.getElementById(this.control.element.id + '_tooltip');\n        var isTooltip = (svgElement && parseInt(svgElement.getAttribute('opacity'), 10) > 0);\n        this.previousPosition = svgElement.style.left ? parseInt(svgElement.style.left, 10) : 0;\n        this.renderTooltip(e, this.control, !isTooltip);\n        if (this.control.tooltip.enable && this.control.type === 'Circular' && this.control.animation.enable && !(this.control.tooltip.showTooltipOnHover)) {\n            svgElement.style.visibility = 'hidden';\n            var delay = this.control.secondaryProgress ? this.control.circular.delay + this.control.animation.duration :\n                this.control.animation.duration;\n            this.tooltipDelay(this.control, svgElement, delay);\n        }\n        if (this.control.animation.enable && !(this.control.tooltip.showTooltipOnHover) && !(this.control.type === 'Circular')) {\n            var delay = this.control.secondaryProgress ? this.control.linear.delay : this.control.animation.delay;\n            if (this.control.secondaryProgress) {\n                svgElement.style.visibility = 'hidden';\n            }\n            this.toolTipAnimation(svgElement, this.control, delay);\n        }\n    };\n    /**\n     * Function to delay tooltip at initial stage of circular progress.\n     */\n    ProgressTooltip.prototype.tooltipDelay = function (progress, element, delay) {\n        var animation = new Animation({});\n        animation.animate(element, {\n            duration: progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                args.element.style.visibility = 'visible';\n            }\n        });\n    };\n    /**\n     * Function to animate tooltip.\n     */\n    ProgressTooltip.prototype.toolTipAnimation = function (element, progress, delay) {\n        var _this = this;\n        var animation = new Animation({});\n        var endValue = parseInt(element.style.left, 10);\n        var tooltipSVG = document.getElementById(this.control.element.id + '_tooltip_svg');\n        var width = parseInt(tooltipSVG.getAttribute('width'), 10);\n        animation.animate(element, {\n            duration: progress.animation.duration,\n            delay: delay,\n            progress: function (args) {\n                progress.cancelResize = true;\n                args.name = 'SlideRight';\n                if (progress.type === 'Linear') {\n                    if (args.timeStamp >= args.delay) {\n                        args.element.style.visibility = 'visible';\n                        var start = _this.previousPosition ? _this.previousPosition :\n                            (0 - (width / 2 - _this.control.progressRect.x - 5));\n                        var end = _this.previousPosition ? endValue - start :\n                            endValue + (width / 2 - _this.control.progressRect.x - 5);\n                        var value = effect(args.timeStamp, start, end, args.duration, progress.enableRtl);\n                        args.element.style.left = '';\n                        args.element.style.left = value + 'px'.toString();\n                    }\n                }\n            },\n            end: function (args) {\n                progress.cancelResize = false;\n                args.element.style.left = '';\n                args.element.style.left = endValue + 'px'.toString();\n            }\n        });\n    };\n    ProgressTooltip.prototype.renderTooltip = function (e, chart, isFirst) {\n        this.textFormat = this.format((this.control.tooltip.showTooltipOnHover) ? e.target.id.indexOf('Linearbuffer') >= 0 || e.target.id.indexOf('Circularbuffer') >= 0 ? this.control.secondaryProgress : this.control.value : this.control.value);\n        this.triggerTooltipRender(e, isFirst, this.textFormat);\n    };\n    /**\n     * Function to get format of tooltip text.\n     */\n    ProgressTooltip.prototype.format = function (formatValue) {\n        var currentFormat = formatValue.toString();\n        var value;\n        if (this.control.tooltip.format) {\n            currentFormat = this.control.tooltip.format;\n            value = new RegExp('${value' + '}', 'gm');\n            currentFormat = currentFormat.replace(value.source, formatValue.toString());\n        }\n        return currentFormat;\n    };\n    /**\n     * Function to remove tooltip.\n     */\n    ProgressTooltip.prototype.removeTooltip = function (duration) {\n        var _this = this;\n        var tooltipElement = document.getElementById(this.control.element.id + '_tooltip');\n        if (tooltipElement) {\n            this.fadeInInterval = +setTimeout(function () {\n                if (_this.svgTooltip) {\n                    _this.svgTooltip.fadeOut();\n                }\n            }, duration);\n        }\n    };\n    /**\n     * Function to get arguments of tooltip.\n     */\n    ProgressTooltip.prototype.triggerTooltipRender = function (e, isFirst, textCollection) {\n        var padding = 5;\n        var argsData = {\n            cancel: false, name: tooltipRender, text: textCollection + '%'\n        };\n        this.control.trigger(tooltipRender, argsData);\n        textCollection = argsData.text;\n        if (!argsData.cancel) {\n            this.text = [].concat(argsData.text);\n            if (this.control.type === 'Linear') {\n                var linearEndPointX = (this.control.linear.linearProgressWidth - padding / 2 + (this.control.progressRect.x));\n                var linearEndPointY = (this.control.cornerRadius === 'Round4px') ? (this.control.progressRect.y + padding) : (this.control.progressRect.y + (this.control.progressRect.height / 2)) -\n                    (this.control.progressThickness ? this.control.progressThickness : this.control.themeStyle.linearProgressThickness) / 2 +\n                    padding;\n                this.createTooltip(this.control, isFirst, (this.control.tooltip.enable && !this.control.tooltip.showTooltipOnHover || !(e.target.id.indexOf('Linearbuffer') >= 0)) ? (new ProgressLocation((this.control.cornerRadius === 'Round4px') ? linearEndPointX - padding : linearEndPointX, linearEndPointY)) : (new ProgressLocation(this.control.linear.bufferWidth - (padding / 2) + (this.control.progressRect.x), linearEndPointY)), this.control.initialClipRect);\n            }\n            else {\n                var circularEndPointX = this.control.circular.endPosition.x - padding / 2;\n                var circularEndPointY = this.control.circular.endPosition.y + this.control.progressRect.y - padding / 2;\n                this.createTooltip(this.control, isFirst, (this.control.tooltip.enable && !this.control.tooltip.showTooltipOnHover || !(e.target.id.indexOf('Circularbuffer') >= 0)) ? (new ProgressLocation(circularEndPointX, circularEndPointY)) : (new ProgressLocation(this.control.circular.bufferEndPosition.x - padding / 2, this.control.circular.bufferEndPosition.y + this.control.progressRect.y - padding / 2)), this.control.initialClipRect);\n            }\n        }\n        this.isRendered = true;\n    };\n    /**\n     * Function to pass arguments into svg tooltip.\n     *\n     * @param {ProgressBar} chart - The progress bar chart for which the tooltip is being created.\n     * @param {boolean} isFirst - A flag indicating whether this is the first tooltip.\n     * @param {ProgressLocation} location - The location where the tooltip should be displayed.\n     * @param {ProgressLocation} bounds - The bounds within which the tooltip should be confined.\n     * @returns {void}\n     * @private\n     */\n    ProgressTooltip.prototype.createTooltip = function (chart, isFirst, location, bounds) {\n        var tooltipFont = extend({}, this.control.tooltip.textStyle, null, true);\n        tooltipFont.fontWeight = tooltipFont.fontWeight || this.control.themeStyle.tooltipLabelFont.fontWeight;\n        if (isFirst) {\n            this.svgTooltip = new SVGTooltip({\n                opacity: this.control.tooltip.textStyle.opacity ? this.control.tooltip.textStyle.opacity : ((this.control.theme === 'Material3' || this.control.theme === 'Material3Dark' || this.control.theme.indexOf('Bootstrap5') > -1) ? 1 : 0.75),\n                header: '',\n                content: this.text,\n                fill: this.control.tooltip.fill,\n                border: this.control.tooltip.border,\n                enableAnimation: true,\n                location: location,\n                theme: this.control.theme,\n                areaBounds: bounds,\n                template: null,\n                // To set tooltip location.\n                offset: 7.5,\n                // To set left and right margin of tooltip.\n                marginX: 8,\n                // To set top margin of tooltip.\n                marginY: 4.5,\n                textStyle: tooltipFont,\n                arrowPadding: 7,\n                availableSize: this.control.progressSize,\n                duration: 300,\n                blazorTemplate: { name: 'Template', parent: this.control.tooltip },\n                controlInstance: this.control,\n                enableRTL: chart.enableRtl,\n                controlName: 'Progressbar'\n            }, '#' + this.control.element.id + '_tooltip');\n        }\n        else {\n            if (this.svgTooltip) {\n                this.svgTooltip.location = location;\n                this.svgTooltip.content = this.text;\n                this.svgTooltip.header = '';\n                this.svgTooltip.offset = 7.5;\n                this.svgTooltip.textStyle = tooltipFont;\n                this.svgTooltip.areaBounds = bounds;\n                this.svgTooltip.arrowPadding = 7;\n                this.svgTooltip.dataBind();\n            }\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ProgressTooltip.prototype.getModuleName = function () {\n        return 'ProgressTooltip';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    ProgressTooltip.prototype.destroy = function () {\n        // Destroy method performed here\n    };\n    return ProgressTooltip;\n}());\nexport { ProgressTooltip };\n","import { lineCapRadius, completeAngle } from '../model/constant';\nimport { getPathArc, degreeToLocation } from '../utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * Progressbar Segment\n */\nvar Segment = /** @class */ (function () {\n    function Segment() {\n    }\n    /**\n     * Creates a linear segment element for the progress bar.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {string} id - The id of the segment element.\n     * @param {number} width - The width of the segment.\n     * @param {number} opacity - The opacity of the segment.\n     * @param {number} thickness - The thickness of the segment.\n     * @param {number} progressWidth - The width of the progress.\n     * @returns {Element} - The created linear segment element.\n     */\n    Segment.prototype.createLinearSegment = function (progress, id, width, opacity, thickness, progressWidth) {\n        var locX = (progress.enableRtl) ? ((progress.cornerRadius === 'Round') ?\n            (progress.progressRect.x + progress.progressRect.width) - ((lineCapRadius / 2) * thickness) :\n            (progress.progressRect.x + progress.progressRect.width)) :\n            ((progress.cornerRadius === 'Round') ? (progress.progressRect.x + (lineCapRadius / 2) * thickness) : progress.progressRect.x);\n        var locY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var avlWidth = progressWidth / progress.segmentCount;\n        var avlSegWidth = (progressWidth - ((progress.segmentCount - 1) * gapWidth));\n        avlSegWidth = (avlSegWidth -\n            ((progress.cornerRadius === 'Round') ? progress.segmentCount * (lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var gap = (progress.cornerRadius === 'Round') ? (gapWidth + (lineCapRadius * thickness)) : gapWidth;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var count = Math.ceil(width / avlWidth);\n        var segWidth;\n        var color;\n        var j = 0;\n        var option;\n        var segmentPath;\n        var tolWidth = (progress.cornerRadius === 'Round') ? (width - (lineCapRadius * thickness)) : width;\n        var linearThickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segWidth = (tolWidth < avlSegWidth) ? tolWidth : avlSegWidth;\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', linearThickness, color, opacity, '0', this.getLinearSegmentPath(locX, locY, segWidth, progress.enableRtl));\n            segmentPath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                segmentPath.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(segmentPath);\n            locX += (progress.enableRtl) ? -avlSegWidth - gap : avlSegWidth + gap;\n            tolWidth -= avlSegWidth + gap;\n            tolWidth = (tolWidth < 0) ? 0 : tolWidth;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.getLinearSegmentPath = function (x, y, width, enableRtl) {\n        return 'M' + ' ' + x + ' ' + y + ' ' + 'L' + (x + ((enableRtl) ? -width : width)) + ' ' + y;\n    };\n    /**\n     * Creates a circular segment element for the progress bar.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {string} id - The id of the segment element.\n     * @param {number} x - The x-coordinate of the center of the circle.\n     * @param {number} y - The y-coordinate of the center of the circle.\n     * @param {number} r - The radius of the circle.\n     * @param {number} value - The value determining the angle of the segment.\n     * @param {number} opacity - The opacity of the segment.\n     * @param {number} thickness - The thickness of the segment.\n     * @param {number} totalAngle - The total angle covered by the progress.\n     * @param {number} progressWidth - The width of the progress.\n     * @returns {Element} - The created circular segment element.\n     */\n    Segment.prototype.createCircularSegment = function (progress, id, x, y, r, value, opacity, thickness, totalAngle, progressWidth) {\n        var start = progress.startAngle;\n        var end = this.widthToAngle(progress.minimum, progress.maximum, value, progress.totalAngle);\n        end -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var size = (progressWidth - ((progress.totalAngle === completeAngle) ? progress.segmentCount :\n            progress.segmentCount - 1) * (progress.gapWidth || progress.themeStyle.circularGapWidth));\n        size = (size -\n            ((progress.cornerRadius === 'Round') ?\n                (((progress.totalAngle === completeAngle) ?\n                    progress.segmentCount : progress.segmentCount - 1) * lineCapRadius * thickness) : 0)) / progress.segmentCount;\n        var avlTolEnd = this.widthToAngle(0, progressWidth, (progressWidth / progress.segmentCount), totalAngle);\n        avlTolEnd -= (progress.cornerRadius === 'Round' && progress.totalAngle === completeAngle) ?\n            this.widthToAngle(0, progressWidth, ((lineCapRadius / 2) * thickness), totalAngle) : 0;\n        var avlEnd = this.widthToAngle(0, progressWidth, size, totalAngle);\n        var gap = this.widthToAngle(0, progressWidth, (progress.gapWidth || progress.themeStyle.circularGapWidth), totalAngle);\n        gap += (progress.cornerRadius === 'Round') ? this.widthToAngle(0, progressWidth, (lineCapRadius * thickness), totalAngle) : 0;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id });\n        var gapCount = Math.floor(end / avlTolEnd);\n        var count = Math.ceil((end - gap * gapCount) / avlEnd);\n        var segmentPath;\n        var circularSegment;\n        var segmentEnd;\n        var avlSegEnd = (start + ((progress.enableRtl) ? -avlEnd : avlEnd)) % 360;\n        var color;\n        var j = 0;\n        var option;\n        var circularThickness = progress.progressThickness || progress.themeStyle.circularProgressThickness;\n        for (var i = 0; i < count; i++) {\n            segmentEnd = (progress.enableRtl) ? ((progress.startAngle - end > avlSegEnd) ? progress.startAngle - end : avlSegEnd) :\n                ((progress.startAngle + end < avlSegEnd) ? progress.startAngle + end : avlSegEnd);\n            segmentPath = getPathArc(x, y, r, start, segmentEnd, progress.enableRtl);\n            if (j < progress.segmentColor.length) {\n                color = progress.segmentColor[j];\n                j++;\n            }\n            else {\n                j = 0;\n                color = progress.segmentColor[j];\n                j++;\n            }\n            option = new PathOption(progress.element.id + id + i, 'none', circularThickness, color, opacity, '0', segmentPath);\n            circularSegment = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round') {\n                circularSegment.setAttribute('stroke-linecap', 'round');\n            }\n            segmentGroup.appendChild(circularSegment);\n            start = segmentEnd + ((progress.enableRtl) ? -gap : gap);\n            avlSegEnd += (progress.enableRtl) ? -avlEnd - gap : avlEnd + gap;\n        }\n        return segmentGroup;\n    };\n    Segment.prototype.widthToAngle = function (min, max, value, totalAngle) {\n        var angle = ((value - min) / (max - min)) * totalAngle;\n        return angle;\n    };\n    Segment.prototype.createLinearRange = function (totalWidth, progress, progressWidth) {\n        var posX = progress.progressRect.x + ((progress.enableRtl) ? progress.progressRect.width : 0);\n        var startY = (progress.progressRect.y + (progress.progressRect.height / 2));\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var gradX = (progress.enableRtl) ? 0.1 : -0.1;\n        var gradient;\n        var validRange;\n        var rangePath;\n        var option;\n        var startPos;\n        var endPos;\n        var startX;\n        var endX;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            validRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startPos = totalWidth * progress.calculateProgressRange(range[i].start, rangeMin, rangeMax);\n            endPos = totalWidth * progress.calculateProgressRange(range[i].end, rangeMin, rangeMax);\n            startX = posX + ((progress.enableRtl) ? -startPos : startPos);\n            endX = posX + ((progress.enableRtl) ? -endPos : endPos);\n            startX = (validRange) ? ((progress.isGradient && i > 0) ? startX + gradX : startX) : posX;\n            endX = (validRange) ? endX : posX;\n            color = (progress.isGradient) ? 'url(#lineRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_LinearRange_' + i, 'none', thickness, color, opacity, '0', 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + endX + ' ' + startY);\n            rangePath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round' && progressWidth) {\n                rangePath.setAttribute('stroke-linecap', 'round');\n            }\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setLinearGradientColor(i, range[i].color, endColor, startX, endX, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.createCircularRange = function (centerX, centerY, radius, progress) {\n        var rangeGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularRangeGroup' });\n        var range = progress.rangeColors;\n        var thickness = progress.progressThickness || progress.themeStyle.linearProgressThickness;\n        var opacity = progress.themeStyle.progressOpacity;\n        var rangeMin = progress.minimum;\n        var rangeMax = progress.value;\n        var start = progress.startAngle;\n        var tolAngle = this.widthToAngle(progress.minimum, progress.maximum, progress.value, progress.totalAngle);\n        var gradient;\n        var startAngle;\n        var endAngle;\n        var rangePath;\n        var isValidRange;\n        var option;\n        var color;\n        var endColor;\n        for (var i = 0; i < range.length; i++) {\n            isValidRange = (range[i].start >= rangeMin && range[i].start <= rangeMax &&\n                range[i].end >= rangeMin && range[i].end <= rangeMax);\n            startAngle = this.widthToAngle(rangeMin, rangeMax, range[i].start, tolAngle);\n            endAngle = this.widthToAngle(rangeMin, rangeMax, range[i].end, tolAngle);\n            startAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -startAngle : startAngle)) % 360 : start;\n            endAngle = (isValidRange) ? (start + ((progress.enableRtl) ? -endAngle : endAngle)) % 360 : start;\n            color = (progress.isGradient) ? 'url(#circleRangeGrad_' + i + ')' : range[i].color;\n            option = new PathOption(progress.element.id + '_CircularRange_' + i, 'none', thickness, color, opacity, '0', getPathArc(centerX, centerY, radius, startAngle, endAngle, progress.enableRtl));\n            rangePath = progress.renderer.drawPath(option);\n            if (progress.cornerRadius === 'Round' && startAngle !== endAngle) {\n                rangePath.setAttribute('stroke-linecap', 'round');\n            }\n            rangeGroup.appendChild(rangePath);\n            if (progress.isGradient) {\n                if (range.length - 1 === i) {\n                    endColor = range[i].color;\n                }\n                else {\n                    endColor = range[i + 1].color;\n                }\n                gradient = this.setCircularGradientColor(i, range[i].color, endColor, startAngle, endAngle, radius, centerX, centerY, progress);\n                rangeGroup.appendChild(gradient);\n            }\n        }\n        return rangeGroup;\n    };\n    Segment.prototype.setLinearGradientColor = function (id, startColor, endColor, start, end, progress) {\n        var stopColor = [];\n        var option = { id: 'lineRangeGrad_' + id + '', x1: start.toString(), x2: end.toString() };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        var linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    Segment.prototype.setCircularGradientColor = function (id, startColor, endColor, start, end, rad, x, y, progress) {\n        var stopColor = [];\n        var pos1 = degreeToLocation(x, y, rad, start);\n        var pos2 = degreeToLocation(x, y, rad, end);\n        var option = {\n            id: 'circleRangeGrad_' + id + '', x1: pos1.x.toString(), x2: pos2.x.toString(),\n            y1: pos1.y.toString(), y2: pos2.y.toString()\n        };\n        stopColor[0] = { color: startColor, colorStop: '50%' };\n        stopColor[1] = { color: endColor, colorStop: '100%' };\n        var linearGradient = progress.renderer.drawGradient('linearGradient', option, stopColor);\n        linearGradient.firstElementChild.setAttribute('gradientUnits', 'userSpaceOnUse');\n        return linearGradient;\n    };\n    return Segment;\n}());\nexport { Segment };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { TextOption, setAttributes } from '../utils/helper';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { Segment } from './segment-progress';\nimport { svgLink, gradientType, stopElement } from '../model/constant';\nimport { animationMode } from '@syncfusion/ej2-base';\n/**\n * Progress Bar of type Linear\n */\nvar Linear = /** @class */ (function () {\n    function Linear(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /**\n     * To render the linear track.\n     *\n     * @returns {void}\n     */\n    Linear.prototype.renderLinearTrack = function () {\n        var progress = this.progress;\n        var linearTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearTrackGroup' });\n        var linearTrack;\n        var option;\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        var thickness = (progress.trackThickness || progress.themeStyle.linearTrackThickness);\n        var stroke = (progress.argsData.trackColor || progress.themeStyle.linearTrackColor);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearTrack = this.createRoundCornerSegment('_LinearTrack_', stroke, thickness, true, 0, progress);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Lineartrack', stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, progress.progressRect.width, thickness, 4, ''));\n                linearTrack = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Lineartrack', 'none', thickness, stroke, progress.themeStyle.trackOpacity, '0', progress.getPathLine(progress.progressRect.x, progress.progressRect.width, thickness));\n            linearTrack = progress.renderer.drawPath(option);\n            progress.trackWidth = linearTrack.getTotalLength();\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                linearTrack.setAttribute('stroke-linecap', 'round');\n            }\n            if (progress.segmentCount > 1 && !this.isRange && !progress.enableProgressSegments) {\n                progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, thickness);\n                linearTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n        }\n        linearTrackGroup.appendChild(linearTrack);\n        progress.svgObject.appendChild(linearTrackGroup);\n    };\n    /**\n     * Renders linear progress, optionally refreshing progress and specifying previous width.\n     *\n     * @param {boolean} refresh - Indicates whether to refresh the progress.\n     * @param {number} previousWidth - The previous width of the progress. Defaults to 0.\n     * @returns {void}\n     */\n    Linear.prototype.renderLinearProgress = function (refresh, previousWidth) {\n        if (previousWidth === void 0) { previousWidth = 0; }\n        var progress = this.progress;\n        var option;\n        var linearProgress;\n        var clipPathLinear;\n        var clipPathIndeterminate;\n        var linearProgressGroup;\n        var animationdelay;\n        var segmentWidth;\n        var strippedStroke;\n        var ismaximum = (progress.value >= progress.maximum);\n        var previousProgressWidth = progress.progressRect.width * progress.calculateProgressRange(progress.value > progress.maximum ? progress.maximum : progress.value);\n        var progressWidth = progress.calculateProgressRange(progress.argsData.value > progress.maximum ?\n            progress.maximum : progress.argsData.value);\n        this.linearProgressWidth = progress.progressRect.width *\n            ((progress.isIndeterminate && !progress.enableProgressSegments) ? 1 : progressWidth);\n        if (!refresh) {\n            linearProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearProgressGroup' });\n        }\n        else {\n            linearProgressGroup = getElement(progress.element.id + '_LinearProgressGroup');\n        }\n        var thickness = (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        var stroke = (!progress.isStriped) ? this.checkingLinearProgressColor() : 'url(#' + progress.element.id + '_LinearStriped)';\n        if (progress.cornerRadius === 'Round4px') {\n            option = new PathOption(progress.element.id + '_Linearprogress', stroke, 0, 'none', progress.themeStyle.progressOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, this.linearProgressWidth, thickness, 4, (ismaximum || progress.isIndeterminate) ? '' : 'start'));\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearprogress', 'none', thickness, stroke, progress.themeStyle.progressOpacity, '0', progress.getPathLine(progress.progressRect.x, this.linearProgressWidth, thickness));\n        }\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = (!progress.enableProgressSegments) ? progress.segmentSize :\n            progress.calculateSegmentSize(progress.progressWidth, thickness);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderLinearBuffer(progress);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.cornerRadius === 'Round4px') {\n                if (progress.segmentCount > 1) {\n                    linearProgress = this.createRoundCornerSegment('_Linearprogress_', stroke, thickness, false, this.linearProgressWidth, progress, progress.themeStyle.progressOpacity);\n                }\n                else {\n                    linearProgress = progress.renderer.drawPath(option);\n                }\n            }\n            else {\n                if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                    segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                    linearProgress = this.segment.createLinearSegment(progress, '_LinearProgressSegment', this.linearProgressWidth, progress.themeStyle.progressOpacity, thickness, segmentWidth);\n                }\n                else if (this.isRange && !progress.isIndeterminate) {\n                    linearProgress = this.segment.createLinearRange(this.linearProgressWidth, progress, progressWidth);\n                }\n                else {\n                    if (!refresh) {\n                        linearProgress = progress.renderer.drawPath(option);\n                    }\n                    else {\n                        linearProgress = getElement(progress.element.id + '_Linearprogress');\n                        linearProgress.setAttribute('d', progress.getPathLine(progress.progressRect.x, this.linearProgressWidth, thickness));\n                        linearProgress.setAttribute('stroke', stroke);\n                    }\n                    if (progress.segmentCount > 1) {\n                        linearProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                    }\n                    if (progress.cornerRadius === 'Round' && progressWidth) {\n                        linearProgress.setAttribute('stroke-linecap', 'round');\n                    }\n                }\n            }\n            linearProgressGroup.appendChild(linearProgress);\n            if (progress.isStriped && !progress.isIndeterminate) {\n                strippedStroke = this.checkingLinearProgressColor();\n                this.renderLinearStriped(strippedStroke, linearProgressGroup, progress);\n            }\n            if (progress.isActive && !progress.isIndeterminate && !progress.isStriped) {\n                this.renderActiveState(linearProgressGroup, progressWidth, this.linearProgressWidth, thickness, refresh);\n            }\n            if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isIndeterminate && !progress.isActive && !progress.isStriped) {\n                if ((progress.secondaryProgress !== null)) {\n                    animationdelay = progress.animation.delay + (this.bufferWidth - this.linearProgressWidth);\n                }\n                else {\n                    animationdelay = progress.animation.delay;\n                }\n                this.delay = animationdelay;\n                clipPathLinear = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.style.clipPath = 'url(#' + progress.element.id + '_clippath)';\n                this.animation.doLinearAnimation(clipPathLinear, progress, animationdelay, refresh ? previousWidth : 0);\n            }\n            if (progress.isIndeterminate) {\n                clipPathIndeterminate = progress.createClipPath(progress.clipPath, (progress.enableProgressSegments) ? 1 : progressWidth, null, refresh, thickness, progress.enableProgressSegments);\n                linearProgressGroup.appendChild(progress.clipPath);\n                linearProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                this.animation.doLinearIndeterminate(((!progress.enableProgressSegments) ? clipPathIndeterminate : linearProgress), this.linearProgressWidth, thickness, progress, clipPathIndeterminate);\n            }\n            progress.svgObject.appendChild(linearProgressGroup);\n            progress.previousWidth = previousProgressWidth;\n        }\n    };\n    /**\n     * To render the linear buffer.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @returns {void}\n     */\n    Linear.prototype.renderLinearBuffer = function (progress) {\n        var linearBuffer;\n        var clipPathBuffer;\n        var linearBufferWidth;\n        var option;\n        var segmentWidth;\n        var ismaximum = (progress.secondaryProgress >= progress.maximum);\n        var secondaryProgressWidth = progress.calculateProgressRange(progress.secondaryProgress > progress.maximum ?\n            progress.maximum : progress.secondaryProgress);\n        this.bufferWidth = linearBufferWidth = progress.progressRect.width * secondaryProgressWidth;\n        var linearBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearBufferGroup' });\n        var thickness = progress.secondaryProgressThickness ? progress.secondaryProgressThickness\n            : (progress.progressThickness || progress.themeStyle.linearProgressThickness);\n        var stroke = progress.secondaryProgressColor ? progress.secondaryProgressColor : progress.themeStyle.bufferColor ||\n            this.checkingLinearProgressColor();\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearBuffer = this.createRoundCornerSegment('_Linearbuffer_', stroke, thickness, false, linearBufferWidth, progress, progress.themeStyle.bufferOpacity);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_Linearbuffer', stroke, 0, 'none', progress.themeStyle.bufferOpacity, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearBufferWidth, thickness, 4, (ismaximum) ? '' : 'start'));\n                linearBuffer = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            option = new PathOption(progress.element.id + '_Linearbuffer', 'none', thickness, stroke, progress.themeStyle.bufferOpacity, '0', progress.getPathLine(progress.progressRect.x, linearBufferWidth, thickness));\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !this.isRange) {\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                linearBuffer = this.segment.createLinearSegment(progress, '_LinearBufferSegment', linearBufferWidth, progress.themeStyle.bufferOpacity, (progress.progressThickness || progress.themeStyle.linearProgressThickness), segmentWidth);\n            }\n            else {\n                linearBuffer = progress.renderer.drawPath(option);\n                if (progress.segmentCount > 1 && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && !this.isRange) {\n                    linearBuffer.setAttribute('stroke-linecap', 'round');\n                }\n            }\n        }\n        linearBufferGroup.appendChild(linearBuffer);\n        if ((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') {\n            clipPathBuffer = progress.createClipPath(progress.bufferClipPath, secondaryProgressWidth, null, false, thickness, false, (progress.cornerRadius === 'Round4px' && ismaximum));\n            linearBufferGroup.appendChild(progress.bufferClipPath);\n            linearBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doLinearAnimation(clipPathBuffer, progress, progress.animation.delay, 0);\n        }\n        progress.svgObject.appendChild(linearBufferGroup);\n    };\n    /**\n     * Render the Linear Label.\n     *\n     * @param {boolean} isProgressRefresh - Indicates whether the progress should be refreshed. Defaults to false.\n     * @returns {void}\n     */\n    Linear.prototype.renderLinearLabel = function (isProgressRefresh) {\n        if (isProgressRefresh === void 0) { isProgressRefresh = false; }\n        var linearlabel;\n        var posX;\n        var posY;\n        var textSize;\n        var percentage = 100;\n        var option;\n        var defaultPos;\n        var far;\n        var center;\n        var pos;\n        var clipPath;\n        var thickness = (this.progress.progressThickness || this.progress.themeStyle.linearProgressThickness);\n        var padding = 5;\n        var progress = this.progress;\n        var textAlignment = progress.labelStyle.textAlignment;\n        var labelText = progress.labelStyle.text;\n        var progressWidth = progress.progressRect.width * progress.calculateProgressRange(progress.value > progress.maximum ?\n            progress.maximum : progress.value);\n        var linearLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_LinearLabelGroup' });\n        if (document.getElementById(linearLabelGroup.id)) {\n            document.getElementById(linearLabelGroup.id).remove();\n        }\n        var labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        var linearValue = (progress.value < progress.minimum) ? 0 : +labelValue.toFixed(2);\n        var argsData = {\n            cancel: false, text: labelText ? labelText : String(linearValue) + '%', color: progress.labelStyle.color || this.progress.themeStyle.linearLabelFont.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle, progress.themeStyle.linearLabelFont);\n            defaultPos = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - textSize.width / 2) :\n                (progress.progressRect.x + textSize.width / 2);\n            if (progress.labelOnTrack) {\n                if (textAlignment === 'Near') {\n                    posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n                }\n                else if (textAlignment === 'Center') {\n                    center = (progress.enableRtl) ? (progress.progressRect.x + progress.progressRect.width - progressWidth / 2) :\n                        (progress.progressRect.x + progressWidth / 2);\n                    pos = (progress.enableRtl) ? (center <= defaultPos) : (center >= defaultPos);\n                    posX = (progressWidth < textSize.width / 2) ? defaultPos : center;\n                    if (!progressWidth && !progress.enableRtl && posX / 2 < progress.progressRect.x + padding) {\n                        posX += padding;\n                    }\n                }\n                else {\n                    far = (progress.enableRtl) ?\n                        ((progress.progressRect.x + progress.progressRect.width - progressWidth) + textSize.width / 2) :\n                        (progress.progressRect.x + progressWidth - textSize.width / 2);\n                    far += (progress.enableRtl) ? padding : -padding;\n                    pos = (progress.enableRtl) ? (far <= defaultPos) : (far >= defaultPos);\n                    if (pos) {\n                        posX = far;\n                    }\n                    else {\n                        posX = defaultPos;\n                    }\n                    if (!progressWidth && !progress.enableRtl && posX / 2 < progress.progressRect.x + padding) {\n                        posX += padding;\n                    }\n                }\n            }\n            else {\n                if (textAlignment === 'Near') {\n                    posX = defaultPos + ((progress.enableRtl) ? -padding : padding);\n                }\n                else if (textAlignment === 'Center') {\n                    posX = (progress.progressRect.x + progress.progressRect.width) / 2;\n                }\n                else {\n                    posX = (progress.enableRtl) ?\n                        (progress.progressRect.x + textSize.width / 2) :\n                        (progress.progressRect.x + progress.progressRect.width - textSize.width / 2);\n                    posX += (progress.enableRtl) ? padding : -padding;\n                }\n            }\n            if (this.progress.cornerRadius === 'Round4px') {\n                posY = progress.progressRect.y + (thickness / 2) + (textSize.height / 4);\n            }\n            else {\n                posY = progress.progressRect.y + (progress.progressRect.height / 2) + (textSize.height / 4);\n            }\n            option = new TextOption(progress.element.id + '_linearLabel', progress.labelStyle.size || progress.themeStyle.linearLabelFont.size, progress.labelStyle.fontStyle || progress.themeStyle.linearLabelFont.fontStyle, progress.labelStyle.fontFamily || progress.themeStyle.linearLabelFont.fontFamily, progress.labelStyle.fontWeight || progress.themeStyle.linearLabelFont.fontWeight, 'middle', argsData.color, posX, posY);\n            linearlabel = progress.renderer.createText(option, argsData.text);\n            linearLabelGroup.appendChild(linearlabel);\n            if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isIndeterminate) {\n                clipPath = progress.renderer.createClipPath({ 'id': progress.element.id + '_clippathLabel' });\n                progress.createClipPath(clipPath, 1, null, false, (progress.progressThickness || progress.themeStyle.linearProgressThickness), true);\n                linearLabelGroup.appendChild(clipPath);\n                linearlabel.style.clipPath = 'url(#' + progress.element.id + '_clippathLabel)';\n                this.animation.doLabelAnimation(linearlabel, (isProgressRefresh ? progress.previousLabelWidth : 0), progressWidth - (isProgressRefresh ? progress.previousLabelWidth : 0), progress, this.delay, textSize.width);\n            }\n            progress.svgObject.appendChild(linearLabelGroup);\n            progress.previousLabelWidth = progressWidth;\n        }\n    };\n    /**\n     * Renders the active state of the linear progress.\n     *\n     * @param {Element} progressGroup - The group element containing the progress.\n     * @param {number} progressWidth - The width of the progress.\n     * @param {number} linearProgressWidth - The width of the linear progress.\n     * @param {number} thickness - The thickness of the progress.\n     * @param {boolean} refresh - Indicates whether the progress should be refreshed.\n     * @returns {void}\n     * @private\n     */\n    Linear.prototype.renderActiveState = function (progressGroup, progressWidth, linearProgressWidth, thickness, refresh) {\n        var linearActive;\n        var progress = this.progress;\n        var option;\n        var ismaximum = (progress.value === progress.maximum);\n        if (progress.cornerRadius === 'Round4px') {\n            if (progress.segmentCount > 1) {\n                linearActive = this.createRoundCornerSegment('_LinearActiveProgress_', '#ffffff', thickness, false, linearProgressWidth, progress, 0.5);\n            }\n            else {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', '#ffffff', 0, 'none', 0.5, '0', this.cornerRadius(progress.progressRect.x, progress.progressRect.y, linearProgressWidth, thickness, 4, ismaximum ? '' : 'start'));\n                linearActive = progress.renderer.drawPath(option);\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(progress.element.id + '_LinearActiveProgress', 'none', thickness, '#ffffff', 0.5, '', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n                linearActive = progress.renderer.drawPath(option);\n            }\n            else {\n                linearActive = getElement(progress.element.id + '_LinearActiveProgress');\n                linearActive.setAttribute('d', progress.getPathLine(progress.progressRect.x, linearProgressWidth, thickness));\n            }\n            if (progress.segmentCount > 1 && !this.isRange) {\n                linearActive.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && progressWidth && !this.isRange) {\n                linearActive.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        var activeClip = progress.createClipPath(progress.clipPath, progressWidth, null, refresh, thickness, false);\n        linearActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(linearActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doLinearAnimation(activeClip, progress, 0, 0, linearActive);\n    };\n    /**\n     * Renders the linear progress with stripes.\n     *\n     * @param {string} color - The color of the progress stripes.\n     * @param {Element} group - The group element containing the progress.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @returns {void}\n     * @private\n     */\n    Linear.prototype.renderLinearStriped = function (color, group, progress) {\n        var defs = progress.renderer.createDefs();\n        var linearGradient = document.createElementNS(svgLink, gradientType);\n        var stripWidth = 14;\n        var stop;\n        var stopOption = [];\n        var gradOption = {\n            id: progress.element.id + '_LinearStriped', x1: (progress.progressRect.x).toString(),\n            x2: (progress.progressRect.x + stripWidth).toString(),\n            spreadMethod: 'repeat', gradientUnits: 'userSpaceOnUse', gradientTransform: 'rotate(-45)'\n        };\n        stopOption = [{ offset: '50%', 'stop-color': color, 'stop-opacity': '1' },\n            { offset: '50%', 'stop-color': color, 'stop-opacity': '0.4' }];\n        linearGradient = setAttributes(gradOption, linearGradient);\n        for (var i = 0; i < stopOption.length; i++) {\n            stop = document.createElementNS(svgLink, stopElement);\n            stop = setAttributes(stopOption[i], stop);\n            linearGradient.appendChild(stop);\n        }\n        defs.appendChild(linearGradient);\n        group.appendChild(defs);\n        if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable')) {\n            this.animation.doStripedAnimation(linearGradient, progress, 0);\n        }\n    };\n    /**\n     * Checks and retrieves the color for the linear progress.\n     *\n     * @returns {string} - The color for the linear progress.\n     * @private\n     */\n    Linear.prototype.checkingLinearProgressColor = function () {\n        var linearColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                linearColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                linearColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                linearColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                linearColor = progress.themeStyle.danger;\n                break;\n            default:\n                linearColor = (progress.argsData.progressColor || progress.themeStyle.linearProgressColor);\n        }\n        return linearColor;\n    };\n    /**\n     * Generates the SVG path string with rounded corners.\n     *\n     * @param {number} x - The x-coordinate of the starting point.\n     * @param {number} y - The y-coordinate of the starting point.\n     * @param {number} width - The width of the rectangle.\n     * @param {number} height - The height of the rectangle.\n     * @param {number} radius - The radius of the rounded corners.\n     * @param {string} pathtype - The type of SVG path ('M' for move to, 'L' for line to).\n     * @returns {string} - The SVG path string with rounded corners.\n     * @private\n     */\n    Linear.prototype.cornerRadius = function (x, y, width, height, radius, pathtype) {\n        var path = '';\n        var endWidth = width;\n        var endRadius = radius;\n        switch (pathtype) {\n            case 'start':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n                break;\n            case 'end':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (endWidth - endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + endRadius + ',' + endRadius + ' '\n                    + 'v' + (height - 2 * endRadius) + ' '\n                    + 'a' + endRadius + ',' + endRadius + ' 0 0 1 ' + -endRadius + ',' + endRadius + ' '\n                    + 'h' + (radius - endWidth) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            case 'none':\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width) + ' '\n                    + 'v' + (height) + ' '\n                    + 'h' + (-width) + ' '\n                    + 'v' + (-height) + ' '\n                    + 'z';\n                break;\n            default:\n                path = 'M' + x + ',' + y + ' '\n                    + 'h' + (width - radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius + ' '\n                    + 'v' + (height - 2 * radius) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius + ' '\n                    + 'h' + (radius - width) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + ' '\n                    + 'v' + (2 * radius - height) + ' '\n                    + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius + ' '\n                    + 'z';\n        }\n        return path;\n    };\n    /**\n     * Creates a round-corner segment element for the progress bar.\n     *\n     * @param {string} id - The id of the segment element.\n     * @param {string} stroke - The stroke color of the segment.\n     * @param {number} thickness - The thickness of the segment.\n     * @param {boolean} isTrack - Indicates whether the segment is a track.\n     * @param {number} progressWidth - The width of the progress.\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} opacity - The opacity of the segment.\n     * @returns {Element} - The created round-corner segment element.\n     */\n    Linear.prototype.createRoundCornerSegment = function (id, stroke, thickness, isTrack, progressWidth, progress, opacity) {\n        var locX = progress.progressRect.x;\n        var locY = progress.progressRect.y;\n        var width = progress.progressRect.width;\n        var option;\n        var pathType;\n        var avlWidth;\n        var gapWidth = (progress.gapWidth || progress.themeStyle.linearGapWidth);\n        var segWidth = (width - ((progress.segmentCount - 1) * gapWidth)) / progress.segmentCount;\n        var segmentGroup = progress.renderer.createGroup({ 'id': progress.element.id + id + 'SegmentGroup' });\n        var segmentPath;\n        for (var i = 1; i <= progress.segmentCount; i++) {\n            if (i === 1 || i === progress.segmentCount) {\n                pathType = (i === 1) ? 'start' : 'end';\n            }\n            else {\n                pathType = 'none';\n            }\n            if (isTrack) {\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', progress.themeStyle.trackOpacity, '0', this.cornerRadius(locX, locY, segWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n            }\n            else {\n                avlWidth = (progressWidth < segWidth) ? progressWidth : segWidth;\n                option = new PathOption(progress.element.id + id + i, stroke, 0, 'none', opacity, '0', this.cornerRadius(locX, locY, avlWidth, thickness, 4, pathType));\n                segmentPath = progress.renderer.drawPath(option);\n                segmentGroup.appendChild(segmentPath);\n                locX += (segWidth + gapWidth);\n                progressWidth -= (segWidth + gapWidth);\n                if (progressWidth <= 0) {\n                    break;\n                }\n            }\n        }\n        return segmentGroup;\n    };\n    return Linear;\n}());\nexport { Linear };\n","import { ProgressAnimation } from '../utils/progress-animation';\nimport { PathOption, getElement, measureText } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getPathArc, degreeToLocation } from '../utils/helper';\nimport { Segment } from './segment-progress';\nimport { TextOption } from '../utils/helper';\nimport { animationMode } from '@syncfusion/ej2-base';\n/**\n * Progressbar of type circular\n */\nvar Circular = /** @class */ (function () {\n    function Circular(progress) {\n        this.segment = new Segment();\n        this.animation = new ProgressAnimation();\n        this.progress = progress;\n    }\n    /**\n     * To render the circular track.\n     *\n     * @returns {void}\n     */\n    Circular.prototype.renderCircularTrack = function () {\n        var progress = this.progress;\n        var circularTrackGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularTrackGroup' });\n        var radius;\n        var endAngle;\n        var startAngle = progress.startAngle;\n        progress.totalAngle = (progress.endAngle - progress.startAngle) % 360;\n        progress.totalAngle = (progress.totalAngle <= 0 ? (360 + progress.totalAngle) : progress.totalAngle);\n        progress.totalAngle -= (progress.totalAngle === 360) ? 0.01 : 0;\n        this.trackEndAngle = endAngle = (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : +progress.totalAngle)) % 360;\n        this.centerX = progress.progressRect.x + (progress.progressRect.width / 2);\n        this.centerY = progress.progressRect.y + (progress.progressRect.height / 2);\n        this.maxThickness = Math.max(progress.trackThickness, progress.progressThickness) ||\n            Math.max(progress.themeStyle.circularProgressThickness, progress.themeStyle.circularTrackThickness);\n        this.availableSize = (Math.min(progress.progressRect.height, progress.progressRect.width) / 2) - this.maxThickness / 2;\n        radius = stringToNumber(progress.radius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        var stroke = (progress.argsData.trackColor || progress.themeStyle.circularTrackColor);\n        var fill = (progress.enablePieProgress) ? (progress.argsData.trackColor || progress.themeStyle.circularTrackColor) : 'none';\n        var strokeWidth = (progress.enablePieProgress) ? 0 :\n            (progress.trackThickness || progress.themeStyle.circularTrackThickness);\n        var circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        this.isRange = (this.progress.rangeColors[0].color !== '' || this.progress.rangeColors[0].start !== null ||\n            this.progress.rangeColors[0].end !== null);\n        var option = new PathOption(progress.element.id + '_Circulartrack', fill, strokeWidth, stroke, progress.themeStyle.trackOpacity, '0', circularPath);\n        var circularTrack = progress.renderer.drawPath(option);\n        progress.trackWidth = circularTrack.getTotalLength();\n        if (progress.segmentCount > 1 && !progress.enableProgressSegments && !progress.enablePieProgress && !this.isRange) {\n            progress.segmentSize = progress.calculateSegmentSize(progress.trackWidth, strokeWidth);\n            circularTrack.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round' && !progress.enablePieProgress && !this.isRange) {\n            circularTrack.setAttribute('stroke-linecap', 'round');\n        }\n        circularTrackGroup.appendChild(circularTrack);\n        progress.svgObject.appendChild(circularTrackGroup);\n    };\n    /**\n     * Renders circular progress to update previous progress.\n     *\n     * @param {number} previousEnd - The previous end value of the progress.\n     * @param {number} previousTotalEnd - The previous total end value of the progress.\n     * @param {boolean} refresh - Indicates whether to refresh the progress.\n     * @returns {void}\n     */\n    Circular.prototype.renderCircularProgress = function (previousEnd, previousTotalEnd, refresh) {\n        var progress = this.progress;\n        var startAngle = progress.startAngle;\n        var endAngle;\n        var totalAngle;\n        var radius;\n        var previousPath;\n        var progressTotalAngle;\n        var progressEnd;\n        var circularProgress;\n        var linearClipPath;\n        var circularProgressGroup;\n        var segmentWidth;\n        if (!refresh) {\n            circularProgressGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularProgressGroup' });\n        }\n        else {\n            circularProgressGroup = getElement(progress.element.id + '_CircularProgressGroup');\n        }\n        radius = stringToNumber(progress.innerRadius, this.availableSize);\n        radius = (radius === null) ? 0 : radius;\n        progress.previousTotalEnd = progressEnd = progress.calculateProgressRange(progress.argsData.value > progress.maximum ?\n            progress.maximum : progress.argsData.value);\n        var progressEndAngle = (progress.startAngle + ((progress.enableRtl) ? -progressEnd : progressEnd)) % 360;\n        progress.previousEndAngle = endAngle = ((progress.isIndeterminate && !progress.enableProgressSegments) ? (progress.startAngle + ((progress.enableRtl) ? -progress.totalAngle : progress.totalAngle)) % 360 : progressEndAngle);\n        progressTotalAngle = (progressEnd - progress.startAngle) % 360;\n        progressTotalAngle = (progressTotalAngle <= 0 ? (360 + progressTotalAngle) : progressTotalAngle);\n        progressTotalAngle -= (progressTotalAngle === 360) ? 0.01 : 0;\n        var circularPath = getPathArc(this.centerX, this.centerY, radius, startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        var stroke = this.checkingCircularProgressColor();\n        var fill = (progress.enablePieProgress) ? stroke : 'none';\n        var thickness = (progress.progressThickness || progress.themeStyle.circularProgressThickness);\n        var strokeWidth = (progress.enablePieProgress) ? 0 : thickness;\n        var option = new PathOption(progress.element.id + '_Circularprogress', fill, strokeWidth, stroke, progress.themeStyle.progressOpacity, '0', circularPath);\n        progress.progressWidth = progress.renderer.drawPath(option).getTotalLength();\n        progress.segmentSize = this.validateSegmentSize(progress, thickness);\n        this.endPosition = degreeToLocation(this.centerX, this.centerY, radius, endAngle);\n        if (progress.secondaryProgress !== null && !progress.isIndeterminate) {\n            this.renderCircularBuffer(progress, radius, progressTotalAngle);\n        }\n        if (progress.argsData.value !== null) {\n            if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress) {\n                totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n                segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n                circularProgress = this.segment.createCircularSegment(progress, '_CircularProgressSegment', this.centerX, this.centerY, radius, progress.argsData.value, progress.themeStyle.progressOpacity, thickness, totalAngle, segmentWidth);\n            }\n            else if (this.isRange && !progress.isIndeterminate) {\n                circularProgress = this.segment.createCircularRange(this.centerX, this.centerY, radius, progress);\n            }\n            else {\n                if (!refresh) {\n                    circularProgress = progress.renderer.drawPath(option);\n                }\n                else {\n                    circularProgress = getElement(progress.element.id + '_Circularprogress');\n                    previousPath = circularProgress.getAttribute('d');\n                    circularProgress.setAttribute('stroke', stroke);\n                    circularProgress.setAttribute('d', circularPath);\n                }\n                if (progress.segmentCount > 1 && !progress.enablePieProgress) {\n                    circularProgress.setAttribute('stroke-dasharray', progress.segmentSize);\n                }\n                if (progress.cornerRadius === 'Round' && startAngle !== endAngle) {\n                    circularProgress.setAttribute('stroke-linecap', 'round');\n                }\n            }\n            circularProgressGroup.appendChild(circularProgress);\n            if (progress.isActive && !progress.isIndeterminate && !progress.enablePieProgress) {\n                this.renderActiveState(circularProgressGroup, radius, strokeWidth, circularPath, progressEndAngle, progressEnd, refresh);\n            }\n            if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') || progress.isIndeterminate) {\n                this.delay = (progress.secondaryProgress !== null) ? 300 : progress.animation.delay;\n                linearClipPath = progress.createClipPath(progress.clipPath, null, refresh ? previousPath : '', refresh);\n                circularProgressGroup.appendChild(progress.clipPath);\n                if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isIndeterminate && !progress.isActive) {\n                    circularProgress.style.clipPath = 'url(#' + progress.element.id + '_clippath)';\n                    this.animation.doCircularAnimation(this.centerX, this.centerY, radius, progressEndAngle, progressEnd, linearClipPath, progress, thickness, this.delay, refresh ? previousEnd : null, refresh ? previousTotalEnd : null);\n                }\n                if (progress.isIndeterminate) {\n                    if (progress.enableProgressSegments) {\n                        linearClipPath.setAttribute('d', getPathArc(this.centerX, this.centerY, radius + (thickness / 2), progress.startAngle, this.trackEndAngle, progress.enableRtl, true));\n                    }\n                    circularProgress.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n                    this.animation.doCircularIndeterminate((!progress.enableProgressSegments) ? linearClipPath : circularProgress, progress, startAngle, progressEndAngle, this.centerX, this.centerY, radius, thickness, linearClipPath);\n                }\n            }\n            progress.svgObject.appendChild(circularProgressGroup);\n        }\n    };\n    /**\n     * Renders circular buffer for the progress bar.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} radius - The radius of the circular buffer.\n     * @param {number} progressTotalAngle - The total angle covered by the progress.\n     * @returns {void}\n     * @private\n     */\n    Circular.prototype.renderCircularBuffer = function (progress, radius, progressTotalAngle) {\n        var bufferClipPath;\n        var circularBuffer;\n        var segmentWidth;\n        var totalAngle;\n        var circularBufferGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_ CircularBufferGroup' });\n        var bufferEnd = progress.calculateProgressRange(progress.secondaryProgress > progress.maximum ?\n            progress.maximum : progress.secondaryProgress);\n        var endAngle = (progress.startAngle + ((progress.enableRtl) ? -bufferEnd : bufferEnd)) % 360;\n        var circularPath = getPathArc(this.centerX, this.centerY, radius, progress.startAngle, endAngle, progress.enableRtl, progress.enablePieProgress);\n        this.bufferEndPosition = degreeToLocation(this.centerX, this.centerY, radius, endAngle);\n        var stroke = progress.secondaryProgressColor ? progress.secondaryProgressColor : progress.themeStyle.bufferColor ||\n            this.checkingCircularProgressColor();\n        var fill = (progress.enablePieProgress) ? stroke : 'none';\n        var strokeWidth = (progress.enablePieProgress) ? 0 :\n            (progress.secondaryProgressThickness ? progress.secondaryProgressThickness :\n                (progress.progressThickness || progress.themeStyle.circularProgressThickness));\n        var option = new PathOption(progress.element.id + '_Circularbuffer', fill, strokeWidth, stroke, progress.themeStyle.bufferOpacity, '0', circularPath);\n        if (progress.segmentColor.length !== 0 && !progress.isIndeterminate && !progress.enablePieProgress && !this.isRange) {\n            totalAngle = (!progress.enableProgressSegments) ? progress.totalAngle : progressTotalAngle;\n            segmentWidth = (!progress.enableProgressSegments) ? progress.trackWidth : progress.progressWidth;\n            circularBuffer = this.segment.createCircularSegment(progress, '_CircularBufferSegment', this.centerX, this.centerY, radius, progress.secondaryProgress > progress.maximum ? progress.maximum : progress.secondaryProgress, progress.themeStyle.bufferOpacity, strokeWidth, totalAngle, segmentWidth);\n        }\n        else {\n            circularBuffer = progress.renderer.drawPath(option);\n            if (progress.segmentCount > 1 && !progress.enablePieProgress && !this.isRange) {\n                circularBuffer.setAttribute('stroke-dasharray', progress.segmentSize);\n            }\n            if (progress.cornerRadius === 'Round' && !this.isRange) {\n                circularBuffer.setAttribute('stroke-linecap', 'round');\n            }\n        }\n        circularBufferGroup.appendChild(circularBuffer);\n        if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isActive) {\n            bufferClipPath = progress.createClipPath(progress.bufferClipPath, null, '', false);\n            circularBufferGroup.appendChild(progress.bufferClipPath);\n            circularBuffer.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippathBuffer)');\n            this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, bufferEnd, bufferClipPath, progress, (progress.progressThickness || progress.themeStyle.circularProgressThickness), progress.animation.delay);\n        }\n        progress.svgObject.appendChild(circularBufferGroup);\n    };\n    /**\n     * To render the circular Label.\n     *\n     * @param {boolean} isProgressRefresh - Indicates whether progress should be refreshed. Defaults to false.\n     * @returns {void}\n     */\n    Circular.prototype.renderCircularLabel = function (isProgressRefresh) {\n        if (isProgressRefresh === void 0) { isProgressRefresh = false; }\n        var end;\n        var circularLabel;\n        var centerY;\n        var textSize;\n        var option;\n        var percentage = 100;\n        var progress = this.progress;\n        var labelText = progress.labelStyle.text;\n        var circularLabelGroup = progress.renderer.createGroup({ 'id': progress.element.id + '_CircularLabelGroup' });\n        if (document.getElementById(circularLabelGroup.id)) {\n            document.getElementById(circularLabelGroup.id).remove();\n        }\n        var labelValue = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * percentage;\n        var circularValue = (progress.value < progress.minimum) ? 0 : +labelValue.toFixed(2);\n        var argsData = {\n            cancel: false, text: labelText ? labelText : String(circularValue) + '%', color: progress.labelStyle.color || progress.themeStyle.circularLabelFont.color\n        };\n        progress.trigger('textRender', argsData);\n        if (!argsData.cancel) {\n            textSize = measureText(argsData.text, progress.labelStyle, progress.themeStyle.circularLabelFont);\n            centerY = this.centerY + (textSize.height / 2);\n            option = new TextOption(progress.element.id + '_circularLabel', progress.labelStyle.size || progress.themeStyle.circularLabelFont.size, progress.labelStyle.fontStyle || progress.themeStyle.circularLabelFont.fontStyle, progress.labelStyle.fontFamily || progress.themeStyle.circularLabelFont.fontFamily, progress.labelStyle.fontWeight ||\n                progress.themeStyle.circularLabelFont.fontWeight, 'middle', argsData.color, this.centerX, centerY, progress.progressRect.width, progress.progressRect.height);\n            circularLabel = progress.renderer.createText(option, argsData.text);\n            circularLabelGroup.appendChild(circularLabel);\n            if (((progress.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && !progress.isIndeterminate) {\n                end = ((progress.value - progress.minimum) / (progress.maximum - progress.minimum)) * progress.totalAngle;\n                end = (progress.value < progress.minimum) ? 0 : end;\n                this.animation.doLabelAnimation(circularLabel, isProgressRefresh ? progress.previousWidth :\n                    progress.startAngle, end, progress, this.delay);\n            }\n            progress.svgObject.appendChild(circularLabelGroup);\n            progress.previousWidth = end;\n        }\n    };\n    /**\n     * Renders the active state of the circular progress.\n     *\n     * @param {Element} progressGroup - The group element containing the progress.\n     * @param {number} radius - The radius of the circular progress.\n     * @param {number} strokeWidth - The width of the progress stroke.\n     * @param {string} circularPath - The path representing the circular progress.\n     * @param {number} endAngle - The angle at which the progress ends.\n     * @param {number} totalEnd - The total end value of the progress.\n     * @param {boolean} refresh - Indicates whether the progress should be refreshed.\n     * @returns {void}\n     * @private\n     */\n    Circular.prototype.renderActiveState = function (progressGroup, radius, strokeWidth, circularPath, endAngle, totalEnd, refresh) {\n        var circularActive;\n        var option;\n        var progress = this.progress;\n        var thickness = strokeWidth + 1;\n        if (!refresh) {\n            option = new PathOption(progress.element.id + '_CircularActiveProgress', 'none', thickness, '#ffffff', 0.5, '0', circularPath);\n            circularActive = progress.renderer.drawPath(option);\n        }\n        else {\n            circularActive = getElement(progress.element.id + '_CircularActiveProgress');\n            circularActive.setAttribute('d', circularPath);\n        }\n        if (progress.segmentCount > 1) {\n            circularActive.setAttribute('stroke-dasharray', progress.segmentSize);\n        }\n        if (progress.cornerRadius === 'Round') {\n            circularActive.setAttribute('stroke-linecap', 'round');\n        }\n        var activeClip = progress.createClipPath(progress.clipPath, null, '', refresh);\n        circularActive.setAttribute('style', 'clip-path:url(#' + progress.element.id + '_clippath)');\n        progressGroup.appendChild(circularActive);\n        progressGroup.appendChild(progress.clipPath);\n        this.animation.doCircularAnimation(this.centerX, this.centerY, radius, endAngle, totalEnd, activeClip, progress, thickness, 0, null, null, circularActive);\n    };\n    /**\n     * Validates the segment size for the progress bar.\n     *\n     * @param {ProgressBar} progress - The progress bar control.\n     * @param {number} thickness - The thickness of the progress segments.\n     * @returns {string} - The validated segment size.\n     * @private\n     */\n    Circular.prototype.validateSegmentSize = function (progress, thickness) {\n        var validSegment;\n        var progressSegment;\n        var rDiff = parseInt(progress.radius, 10) - parseInt(progress.innerRadius, 10);\n        if (rDiff !== 0 && !progress.enableProgressSegments) {\n            progressSegment = progress.trackWidth + ((rDiff < 0) ? (progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10) :\n                -(progress.trackWidth * Math.abs(rDiff)) / parseInt(progress.radius, 10));\n            validSegment = progress.calculateSegmentSize(progressSegment, thickness);\n        }\n        else if (progress.enableProgressSegments) {\n            validSegment = progress.calculateSegmentSize(progress.progressWidth, thickness);\n        }\n        else {\n            validSegment = progress.segmentSize;\n        }\n        return validSegment;\n    };\n    /**\n     * Checks and retrieves the color for the circular progress.\n     *\n     * @returns {string} - The color for the circular progress.\n     * @private\n     */\n    Circular.prototype.checkingCircularProgressColor = function () {\n        var circularColor;\n        var progress = this.progress;\n        var role = progress.role;\n        switch (role) {\n            case 'Success':\n                circularColor = progress.themeStyle.success;\n                break;\n            case 'Info':\n                circularColor = progress.themeStyle.info;\n                break;\n            case 'Warning':\n                circularColor = progress.themeStyle.warning;\n                break;\n            case 'Danger':\n                circularColor = progress.themeStyle.danger;\n                break;\n            default:\n                circularColor = (progress.argsData.progressColor || progress.themeStyle.circularProgressColor);\n        }\n        return circularColor;\n    };\n    return Circular;\n}());\nexport { Circular };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Browser, Complex, Event, Collection, EventHandler } from '@syncfusion/ej2-base';\nimport { createElement, remove, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Rect, Size, RectOption, stringToNumber } from './utils/helper';\nimport { Margin, Animation, Font, RangeColor, TooltipSettings } from './model/progress-base';\nimport { SvgRenderer, PathOption, getElement } from '@syncfusion/ej2-svg-base';\nimport { getProgressThemeColor } from './utils/theme';\nimport { lineCapRadius, completeAngle, valueChanged, progressCompleted } from './model/constant';\nimport { mouseClick, mouseDown, mouseLeave, mouseMove, mouseUp } from './model/constant';\nimport { ProgressTooltip } from './model/index';\nimport { ProgressAnnotationSettings } from './model/index';\nimport { Linear } from './types/linear-progress';\nimport { Circular } from './types/circular-progress';\nimport { ProgressAnimation } from './utils/progress-animation';\n/**\n *  progress bar control\n */\nvar ProgressBar = /** @class */ (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.linear = new Linear(_this);\n        /** @private */\n        _this.circular = new Circular(_this);\n        /** @private */\n        _this.annotateAnimation = new ProgressAnimation();\n        /** @private */\n        // private resizeTo: number;\n        /** @private */\n        _this.destroyIndeterminate = false;\n        /** @private */\n        _this.scaleX = 1;\n        /** @private */\n        _this.scaleY = 1;\n        ProgressBar_1.Inject(ProgressTooltip);\n        return _this;\n    }\n    ProgressBar_1 = ProgressBar;\n    ProgressBar.prototype.getModuleName = function () {\n        return 'progressbar';\n    };\n    ProgressBar.prototype.preRender = function () {\n        this.unWireEvents();\n        this.initPrivateVariable();\n        this.wireEvents();\n    };\n    ProgressBar.prototype.initPrivateVariable = function () {\n        this.progressRect = new Rect(0, 0, 0, 0);\n        this.progressSize = new Size(0, 0);\n    };\n    ProgressBar.prototype.render = function () {\n        var _this = this;\n        this.trigger('load', { progressBar: this });\n        this.element.style.display = 'block';\n        this.element.style.position = 'relative';\n        this.element.setAttribute('role', 'progressbar');\n        this.element.setAttribute('aria-valuemin', this.minimum.toString());\n        this.element.setAttribute('aria-valuemax', this.maximum.toString());\n        this.element.setAttribute('aria-valuenow', this.value ? this.value.toString() : '0');\n        this.element.setAttribute('tabindex', '0');\n        this.element.setAttribute('aria-label', this.labelStyle.text || 'progress bar');\n        this.calculateProgressBarSize();\n        this.setTheme();\n        this.createSVG();\n        this.argsData = { value: this.value, progressColor: this.progressColor, trackColor: this.trackColor };\n        if (this.argsData.value === this.maximum) {\n            this.trigger(progressCompleted, this.argsData, function () { _this.controlRendering(); });\n        }\n        else {\n            this.trigger(valueChanged, this.argsData, function () { _this.controlRendering(); });\n        }\n    };\n    ProgressBar.prototype.controlRendering = function () {\n        this.renderElements();\n        this.trigger('loaded', { progressBar: this });\n        this.renderComplete();\n        this.controlRenderedTimeStamp = new Date().getTime();\n    };\n    /**\n     * calculate size of the progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.calculateProgressBarSize = function () {\n        var containerWidth = this.element.clientWidth || this.element.offsetWidth;\n        var containerHeight = this.element.clientHeight;\n        var width = (this.type === 'Linear') ? 200 : 120;\n        var height = (this.type === 'Linear') ? 30 : 120;\n        var padding = 10;\n        var thickness = Math.max(this.progressThickness, this.trackThickness);\n        height = (this.type === 'Linear' && thickness > (height - padding)) ? thickness + padding : height;\n        this.progressSize.width = stringToNumber(this.width, containerWidth) || containerWidth || width;\n        this.progressSize.height = stringToNumber(this.height, containerHeight) || containerHeight || height;\n        this.progressRect.x = this.margin.left;\n        this.progressRect.y = this.margin.top;\n        this.progressRect.width = this.progressSize.width - (this.margin.left + this.margin.right);\n        this.progressRect.height = this.progressSize.height - (this.margin.top + this.margin.bottom);\n        this.initialClipRect = new Rect(this.progressRect.x, this.progressRect.y, this.progressSize.height, this.progressSize.width);\n    };\n    /**\n     * Render Annotation in progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderAnnotations = function () {\n        this.renderAnnotation();\n    };\n    /**\n     * Render SVG Element.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderElements = function () {\n        this.createSecondaryElement();\n        this.renderTrack();\n        this.renderProgress();\n        this.renderLabel();\n        if (this.annotations.length > 0) {\n            this.renderAnnotations();\n        }\n        this.setSecondaryElementPosition();\n        if (this.tooltip.enable && !(this.tooltip.showTooltipOnHover)) {\n            this.progressTooltipModule.tooltip();\n        }\n    };\n    ProgressBar.prototype.createSecondaryElement = function () {\n        var secElement = document.getElementById(this.element.id + 'Secondary_Element');\n        if (this.tooltip.enable) {\n            this.tooltipElement = createElement('div', {\n                id: this.element.id + '_tooltip',\n                className: 'ejSVGTooltip',\n                styles: 'pointer-events: none; position: absolute; zIndex: 1; visibility: visible'\n            });\n            if (secElement) {\n                this.secElement.appendChild(this.tooltipElement);\n            }\n        }\n        var tooltipElement = document.getElementById(this.element.id + '_tooltip');\n        if (secElement) {\n            secElement.innerHTML = '';\n            this.secElement = tooltipElement ? secElement.appendChild(tooltipElement) : secElement;\n            return;\n        }\n        this.secElement = createElement('div', {\n            id: this.element.id + 'Secondary_Element',\n            styles: 'position: absolute'\n        });\n        this.element.appendChild(this.secElement);\n        if (this.tooltipElement) {\n            this.secElement.appendChild(this.tooltipElement);\n        }\n    };\n    /**\n     * To set the left and top position for annotation for center aligned.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.setSecondaryElementPosition = function () {\n        var element = this.secElement;\n        var rect = this.element.getBoundingClientRect();\n        if (getElement(this.svgObject.id)) {\n            var svgRect = getElement(this.svgObject.id).getBoundingClientRect();\n            element.style.left = Math.max(svgRect.left - rect.left, 0) + 'px';\n            element.style.top = Math.max(svgRect.top - rect.top, 0) + 'px';\n        }\n    };\n    ProgressBar.prototype.createSVG = function () {\n        this.removeSvg();\n        this.renderer = new SvgRenderer(this.element.id);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + 'SVG',\n            width: this.progressSize.width,\n            height: this.progressSize.height,\n            style: 'background-color:' + this.themeStyle.backgroundColor\n        });\n    };\n    ProgressBar.prototype.clipPathElement = function () {\n        this.clipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippath' });\n        this.bufferClipPath = this.renderer.createClipPath({ 'id': this.element.id + '_clippathBuffer' });\n    };\n    ProgressBar.prototype.renderTrack = function () {\n        if (this.type === 'Linear') {\n            this.linear.renderLinearTrack();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularTrack();\n        }\n    };\n    ProgressBar.prototype.renderProgress = function () {\n        this.clipPathElement();\n        if (this.type === 'Linear') {\n            this.linear.renderLinearProgress();\n        }\n        else if (this.type === 'Circular') {\n            this.circular.renderCircularProgress();\n        }\n    };\n    ProgressBar.prototype.renderLabel = function () {\n        if (this.type === 'Linear' && this.showProgressValue && !this.isIndeterminate) {\n            this.linear.renderLinearLabel();\n        }\n        else if (this.type === 'Circular' && this.showProgressValue && !this.isIndeterminate) {\n            this.circular.renderCircularLabel();\n        }\n        this.element.appendChild(this.svgObject);\n    };\n    ProgressBar.prototype.getPathLine = function (x, width, thickness) {\n        var moveTo = (this.enableRtl) ? ((this.cornerRadius === 'Round') ?\n            (x + this.progressRect.width) - ((lineCapRadius / 2) * thickness) : (x + this.progressRect.width)) :\n            ((this.cornerRadius === 'Round') ? (x + (lineCapRadius / 2) * thickness) : x);\n        //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n        thickness = width < thickness && this.cornerRadius === 'Round' ? width : thickness;\n        var lineTo = (this.enableRtl) ? ((this.cornerRadius === 'Round' && width) ?\n            (moveTo - width + (lineCapRadius * thickness)) : (moveTo - width)) :\n            ((this.cornerRadius === 'Round' && width) ? (moveTo + width - (lineCapRadius * thickness)) : (moveTo + width));\n        return 'M' + moveTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2)) +\n            'L' + lineTo + ' ' + (this.progressRect.y + (this.progressRect.height / 2));\n    };\n    ProgressBar.prototype.calculateProgressRange = function (value, minimum, maximum) {\n        var min = minimum || this.minimum;\n        var max = maximum || this.maximum;\n        var endValue = (value - min) / (max - min) * ((this.type === 'Linear') ? 1 : this.totalAngle);\n        var result = (value < min || value > max) ? 0 : endValue;\n        return result;\n    };\n    ProgressBar.prototype.calculateSegmentSize = function (width, thickness) {\n        var count = (this.type === 'Circular' && this.totalAngle === completeAngle) ? this.segmentCount : this.segmentCount - 1;\n        var cornerCount = (this.totalAngle === completeAngle || this.type === 'Linear') ? this.segmentCount : this.segmentCount - 1;\n        var gap = this.gapWidth || ((this.type === 'Linear') ? this.themeStyle.linearGapWidth : this.themeStyle.circularGapWidth);\n        var size = (width - count * gap);\n        size = (size - ((this.cornerRadius === 'Round') ? (cornerCount * (lineCapRadius * thickness)) : 0)) / this.segmentCount;\n        gap += (this.cornerRadius === 'Round') ? lineCapRadius * thickness : 0;\n        return ' ' + size + ' ' + gap;\n    };\n    ProgressBar.prototype.createClipPath = function (clipPath, range, d, refresh, thickness, isLabel, isMaximum) {\n        var path;\n        var rect;\n        var option;\n        var posx;\n        var posy;\n        var pathWidth;\n        var x = this.progressRect.x;\n        var totalWidth = this.progressRect.width;\n        if (this.type === 'Linear') {\n            if (this.cornerRadius === 'Round4px') {\n                posx = x;\n                pathWidth = totalWidth * range;\n                posx += (!isLabel) ? (-4) : 0;\n                posy = this.progressRect.y;\n                pathWidth += ((!isLabel && isMaximum) || this.isIndeterminate) ? 4 : 0;\n            }\n            else {\n                //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n                posx = (this.enableRtl && !isLabel) ? (x + totalWidth + (this.cornerRadius === 'Round' ? thickness / 10 : 0)) : x - (this.cornerRadius === 'Round' ? thickness / 10 : 0);\n                pathWidth = totalWidth * range;\n                //TODO : BLAZ-14309 - ProgressBar renders improperly when corner radius is set to \"Round\" and the value between one to four.\n                //posx += (this.cornerRadius === 'Round' && !isLabel) ?\n                //    ((this.enableRtl) ? (lineCapRadius / 2) * thickness : -(lineCapRadius / 2) * thickness) : 0;\n                posy = (this.progressRect.y + (this.progressRect.height / 2)) - (thickness / 2);\n                pathWidth += (this.cornerRadius === 'Round' && !isLabel) ? (lineCapRadius * thickness) : 0;\n            }\n            if (!refresh) {\n                rect = new RectOption(this.element.id + '_clippathrect' + (isLabel ? 'label' : ''), 'transparent', 1, 'transparent', 1, new Rect(posx, posy, thickness, pathWidth));\n                path = this.renderer.drawRectangle(rect);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathrect' + (isLabel ? 'label' : ''));\n                path.setAttribute('width', (pathWidth).toString());\n                if (this.isActive) {\n                    path.setAttribute('x', (posx).toString());\n                }\n            }\n        }\n        else {\n            if (!refresh) {\n                option = new PathOption(this.element.id + '_clippathcircle', 'transparent', 10, 'transparent', 1, '0', d);\n                path = this.renderer.drawPath(option);\n                clipPath.appendChild(path);\n            }\n            else {\n                path = getElement(this.element.id + '_clippathcircle');\n                path.setAttribute('d', d);\n            }\n        }\n        return path;\n    };\n    /**\n     * Theming for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.setTheme = function () {\n        this.themeStyle = getProgressThemeColor(this.theme);\n        switch (this.theme) {\n            case 'Bootstrap':\n            case 'Bootstrap4':\n                this.cornerRadius = this.cornerRadius === 'Auto' ?\n                    ((this.type === 'Linear') ? 'Round4px' : 'Round') : this.cornerRadius;\n                break;\n            case 'Fluent2':\n            case 'Fluent2Dark':\n            case 'Fluent2HighContrast':\n            case 'Bootstrap5':\n            case 'Bootstrap5Dark':\n                this.cornerRadius = this.cornerRadius === 'Auto' && this.type === 'Linear' ? 'Round' : this.cornerRadius;\n                break;\n            default:\n                this.cornerRadius = this.cornerRadius === 'Auto' ? 'Square' : this.cornerRadius;\n        }\n    };\n    /**\n     * Annotation for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.renderAnnotation = function () {\n        if (this.progressAnnotationModule && this.annotations.length > 0) {\n            this.progressAnnotationModule.renderAnnotations(this.secElement);\n        }\n    };\n    /**\n     * Handles the progressbar resize.\n     *\n     * @returns {boolean} false\n     * @private\n     */\n    ProgressBar.prototype.progressResize = function () {\n        var _this = this;\n        // 800 used as buffer time for resize event preventing from control rendered time\n        if (!(new Date().getTime() > this.controlRenderedTimeStamp + 800)) {\n            return false;\n        }\n        var arg = {\n            bar: this,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.progressSize.width, this.progressSize.height),\n            cancel: (this.cancelResize) ? true : false\n        };\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTo);\n                return;\n            }\n            arg.currentSize = _this.progressSize;\n            _this.trigger('resized', arg);\n            if ((_this.width === null || _this.height === null || _this.width.indexOf('%') > -1 || _this.height.indexOf('%') > -1)\n                && !arg.cancel) {\n                if (_this.secElement) {\n                    _this.secElement.innerHTML = '';\n                }\n                _this.calculateProgressBarSize();\n                _this.createSVG();\n                _this.renderElements();\n            }\n        }, 500);\n        return false;\n    };\n    ProgressBar.prototype.progressMouseClick = function (e) {\n        this.mouseEvent(mouseClick, e);\n    };\n    ProgressBar.prototype.progressMouseDown = function (e) {\n        this.mouseEvent(mouseDown, e);\n    };\n    ProgressBar.prototype.progressMouseMove = function (e) {\n        this.mouseEvent(mouseMove, e);\n        var target = e.target;\n        if (this.tooltip.enable && this.tooltip.showTooltipOnHover) {\n            if (target.id.indexOf('Circularprogress') >= 0 || target.id.indexOf('Circularbuffer') >= 0 || target.id.indexOf('Linearprogress') >= 0 || target.id.indexOf('Linearbuffer') >= 0 || target.id.indexOf('Linearbuffer') >= 0) {\n                this.progressTooltipModule.tooltip(e);\n            }\n            else if (this.progressTooltipModule.isRendered) {\n                this.progressTooltipModule.removeTooltip(1000);\n                this.progressTooltipModule.isRendered = false;\n            }\n        }\n    };\n    ProgressBar.prototype.progressMouseUp = function (e) {\n        this.mouseEvent(mouseUp, e);\n    };\n    ProgressBar.prototype.progressMouseLeave = function (e) {\n        this.mouseEvent(mouseLeave, e);\n    };\n    ProgressBar.prototype.mouseEvent = function (eventName, e) {\n        var element = e.target;\n        this.trigger(eventName, { target: element.id });\n    };\n    /**\n     * Method to un-bind events for progress bar.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! UnBind the Event handler */\n        EventHandler.remove(this.element, 'click', this.progressMouseClick);\n        EventHandler.remove(this.element, startEvent, this.progressMouseDown);\n        EventHandler.remove(this.element, moveEvent, this.progressMouseMove);\n        EventHandler.remove(this.element, stopEvent, this.progressMouseUp);\n        EventHandler.remove(this.element, cancelEvent, this.progressMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    /**\n     * Method to bind events for bullet chart.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var stopEvent = Browser.touchEndEvent;\n        /*! Find the Events type */\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, 'click', this.progressMouseClick, this);\n        EventHandler.add(this.element, startEvent, this.progressMouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.progressMouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.progressMouseUp, this);\n        EventHandler.add(this.element, cancelEvent, this.progressMouseLeave, this);\n        this.resizeBounds = this.progressResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeBounds);\n    };\n    ProgressBar.prototype.removeSvg = function () {\n        var svgElement = document.getElementById(this.element.id + 'SVG');\n        if (svgElement) {\n            remove(svgElement);\n        }\n    };\n    ProgressBar.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'annotations':\n                    this.secElement.innerHTML = '';\n                    this.renderAnnotation();\n                    break;\n                case 'value':\n                    this.cancelResize = (this.animation.enable) ? true : false;\n                    this.argsData = {\n                        value: this.value,\n                        progressColor: this.argsData.progressColor,\n                        trackColor: this.argsData.trackColor\n                    };\n                    if (this.argsData.value < oldProp.value && this.animation.enable) {\n                        this.argsData.value = oldProp.value;\n                    }\n                    if (this.argsData.value === this.maximum) {\n                        this.trigger(progressCompleted, this.argsData);\n                    }\n                    else {\n                        this.trigger(valueChanged, this.argsData);\n                    }\n                    if (this.type === 'Circular') {\n                        this.circular.renderCircularProgress(this.previousEndAngle, this.previousTotalEnd, !isNullOrUndefined(oldProp.value));\n                        if (this.showProgressValue) {\n                            this.circular.renderCircularLabel(true);\n                        }\n                        if (this.progressAnnotationModule && this.animation.enable && !this.isIndeterminate) {\n                            this.annotateAnimation.doAnnotationAnimation(this.clipPath, this, this.annotateEnd, this.annotateTotal);\n                        }\n                    }\n                    else {\n                        this.linear.renderLinearProgress(!isNullOrUndefined(oldProp.value), this.previousWidth);\n                        if (this.showProgressValue) {\n                            this.linear.renderLinearLabel(true);\n                        }\n                    }\n                    if (this.progressTooltipModule) {\n                        this.progressTooltipModule.tooltip();\n                    }\n                    this.element.setAttribute('aria-valuenow', this.argsData.value ? this.argsData.value.toString() : '0');\n                    break;\n                case 'animation':\n                    this.createSVG();\n                    this.renderElements();\n                    break;\n            }\n        }\n    };\n    ProgressBar.prototype.requiredModules = function () {\n        var modules = [];\n        var enableAnnotation = false;\n        enableAnnotation = this.annotations.some(function (value) {\n            return (value.content !== null);\n        });\n        if (enableAnnotation) {\n            modules.push({\n                member: 'ProgressAnnotation',\n                args: [this]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'ProgressTooltip',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    ProgressBar.prototype.getPersistData = function () {\n        return ' ';\n    };\n    ProgressBar.prototype.show = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Visible');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = false;\n                if (this.type === 'Linear') {\n                    this.linear.renderLinearProgress(true);\n                }\n                else {\n                    this.circular.renderCircularProgress(null, null, true);\n                }\n            }\n        }\n    };\n    ProgressBar.prototype.hide = function () {\n        if (!isNullOrUndefined(this.svgObject)) {\n            this.svgObject.setAttribute('visibility', 'Hidden');\n            if (this.isIndeterminate) {\n                this.destroyIndeterminate = true;\n            }\n        }\n    };\n    /**\n     * To destroy the widget.\n     *\n     * @returns {void}\n     */\n    ProgressBar.prototype.destroy = function () {\n        this.unWireEvents();\n        _super.prototype.destroy.call(this);\n        this.removeSvg();\n        if (this.isReact) {\n            this.clearTemplate();\n        }\n        this.svgObject = null;\n        this.element.classList.remove('e-progressbar');\n        if (!this.refreshing) {\n            this.destroyIndeterminate = true;\n        }\n    };\n    var ProgressBar_1;\n    __decorate([\n        Property('Linear')\n    ], ProgressBar.prototype, \"type\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgress\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"secondaryProgressColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"secondaryProgressThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(100)\n    ], ProgressBar.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"radius\", void 0);\n    __decorate([\n        Property('100%')\n    ], ProgressBar.prototype, \"innerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], ProgressBar.prototype, \"segmentCount\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"gapWidth\", void 0);\n    __decorate([\n        Property('')\n    ], ProgressBar.prototype, \"segmentColor\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isIndeterminate\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isActive\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isGradient\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"isStriped\", void 0);\n    __decorate([\n        Property('Auto')\n    ], ProgressBar.prototype, \"role\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableRtl\", void 0);\n    __decorate([\n        Property(true)\n    ], ProgressBar.prototype, \"labelOnTrack\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"trackColor\", void 0);\n    __decorate([\n        Property(null)\n    ], ProgressBar.prototype, \"progressColor\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"trackThickness\", void 0);\n    __decorate([\n        Property(0)\n    ], ProgressBar.prototype, \"progressThickness\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enablePieProgress\", void 0);\n    __decorate([\n        Property('Fabric')\n    ], ProgressBar.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"showProgressValue\", void 0);\n    __decorate([\n        Property(false)\n    ], ProgressBar.prototype, \"enableProgressSegments\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontStyle: null, fontWeight: null, fontFamily: null }, Font)\n    ], ProgressBar.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], ProgressBar.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({}, Animation)\n    ], ProgressBar.prototype, \"animation\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], ProgressBar.prototype, \"tooltip\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"textRender\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"valueChanged\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"progressCompleted\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseClick\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseUp\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseDown\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], ProgressBar.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Collection([{}], ProgressAnnotationSettings)\n    ], ProgressBar.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([{}], RangeColor)\n    ], ProgressBar.prototype, \"rangeColors\", void 0);\n    ProgressBar = ProgressBar_1 = __decorate([\n        NotifyPropertyChanges\n    ], ProgressBar);\n    return ProgressBar;\n}(Component));\nexport { ProgressBar };\n","import * as index from './index';\nindex.ProgressBar.Inject(index.ProgressAnnotation, index.ProgressTooltip);\nexport * from './index';\n"],"names":["convertToHexCode","value","componentToHex","r","g","b","hex","toString","length","convertHexToColor","result","exec","ColorValue","parseInt","colorNameToHex","color","document","body","appendChild","createElement","id","element","getElementById","style","window","getComputedStyle","remove","isRGBValue","indexOf","replace","slice","split","degreeToLocation","centerX","centerY","radius","angleInDegrees","angleInRadians","Math","PI","x","cos","y","sin","getPathArc","startAngle","endAngle","enableRtl","pieView","start","end","largeArcFlag","sweepFlag","stringToNumber","containerSize","undefined","setAttributes","options","keys","Object","i","setAttribute","effect","currentTime","startValue","endValue","duration","getElement","removeElement","getProgressThemeColor","theme","linearTrackColor","linearProgressColor","circularTrackColor","circularProgressColor","backgroundColor","progressOpacity","trackOpacity","bufferOpacity","linearGapWidth","circularGapWidth","linearTrackThickness","linearProgressThickness","circularTrackThickness","circularProgressThickness","tooltipFill","tooltipLightLabel","success","danger","warning","info","tooltipLabelFont","fontFamily","fontWeight","linearLabelFont","size","fontStyle","circularLabelFont","bufferColor","Browser","isDevice","__extends","extendStatics","d","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","Rect","height","width","Size","Pos","RectOption","_super","fill","opacity","rect","rx","ry","transform","dashArray","_this","call","stroke","PathOption","TextOption","fontSize","textAnchor","ProgressLocation","__decorate","decorators","target","key","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Margin","apply","Property","ChildProperty","Font","Animation","ProgressAnnotationSettings","Border","TooltipSettings","Complex","RangeColor","svgLink","AnnotationBase","control","render","annotation","index","styles","innerHTML","content","processAnnotation","parentElement","location","annotationElement","setElementStyle","redraw","isReact","clearTemplate","argsData","cancel","name","trigger","Location","annotationRadius","annotationAngle","left","top","renderReactTemplates","angle","radius1","parseFloat","progressRect","round","progressSize","ProgressAnimation","doLinearAnimation","progress","delay","previousWidth","active","animation","linearPath","getAttribute","opacityValue","cornerRadius","rtlX","visibility","animate","animationMode","args","cancelResize","timeStamp","isActive","activeAnimate","trackColor","progressColor","doLinearIndeterminate","progressWidth","thickness","clipPath","enableProgressSegments","getPathLine","destroyIndeterminate","doStripedAnimation","point","doCircularAnimation","progressEnd","totalEnd","previousTotal","circularPath","pathRadius","startPosition","endPosition","startPos","isNullOrUndefined","endPos","doCircularIndeterminate","circularProgress","doLabelAnimation","labelPath","textSize","label","text","xPos","valueChanged","labelText","labelStyle","labelPos","textAlignment","posX","type","totalAngle","doAnnotationAnimation","previousEnd","annotatElementChanged","firstAnnotatElement","annotateValueChanged","annotateValue","isAnnotation","annotations","progressAnnotationModule","children","tagName","minimum","maximum","annotateTotal","annotateEnd","t","time","pow","ProgressAnnotation","renderAnnotations","map","enable","isIndeterminate","getModuleName","destroy","ProgressTooltip","previousPosition","tooltip","e","svgElement","isTooltip","renderTooltip","secondaryProgress","circular","tooltipDelay","linear","toolTipAnimation","tooltipSVG","chart","isFirst","textFormat","format","triggerTooltipRender","formatValue","currentFormat","RegExp","source","removeTooltip","fadeInInterval","setTimeout","svgTooltip","fadeOut","textCollection","concat","linearEndPointX","linearProgressWidth","padding","linearEndPointY","progressThickness","themeStyle","createTooltip","showTooltipOnHover","bufferWidth","initialClipRect","circularEndPointX","circularEndPointY","bufferEndPosition","isRendered","bounds","tooltipFont","extend","textStyle","SVGTooltip","header","border","enableAnimation","areaBounds","template","offset","marginX","marginY","arrowPadding","availableSize","blazorTemplate","parent","controlInstance","enableRTL","controlName","dataBind","Segment","createLinearSegment","locX","locY","gapWidth","avlWidth","segmentCount","avlSegWidth","segWidth","option","segmentPath","gap","segmentGroup","renderer","createGroup","count","ceil","j","tolWidth","linearThickness","segmentColor","getLinearSegmentPath","drawPath","createCircularSegment","widthToAngle","avlTolEnd","avlEnd","circularSegment","segmentEnd","gapCount","floor","avlSegEnd","circularThickness","min","max","createLinearRange","totalWidth","gradient","validRange","rangePath","startX","endX","endColor","startY","rangeGroup","range","rangeColors","rangeMin","rangeMax","gradX","calculateProgressRange","isGradient","setLinearGradientColor","createCircularRange","isValidRange","tolAngle","setCircularGradientColor","startColor","stopColor","x1","x2","colorStop","linearGradient","drawGradient","firstElementChild","rad","pos1","pos2","y1","y2","Linear","segment","renderLinearTrack","linearTrack","linearTrackGroup","isRange","trackThickness","createRoundCornerSegment","trackWidth","getTotalLength","segmentSize","calculateSegmentSize","svgObject","renderLinearProgress","refresh","linearProgress","clipPathLinear","clipPathIndeterminate","linearProgressGroup","animationdelay","segmentWidth","strippedStroke","ismaximum","previousProgressWidth","isStriped","checkingLinearProgressColor","renderLinearBuffer","renderLinearStriped","renderActiveState","createClipPath","linearBuffer","clipPathBuffer","linearBufferWidth","secondaryProgressWidth","linearBufferGroup","secondaryProgressThickness","secondaryProgressColor","bufferClipPath","renderLinearLabel","isProgressRefresh","linearlabel","posY","defaultPos","far","center","linearLabelGroup","labelValue","linearValue","toFixed","String","measureText","labelOnTrack","createText","previousLabelWidth","progressGroup","linearActive","activeClip","group","stop","defs","createDefs","createElementNS","stopOption","stop-color","stop-opacity","spreadMethod","gradientUnits","gradientTransform","linearColor","role","pathtype","path","endWidth","endRadius","isTrack","pathType","Circular","renderCircularTrack","circularTrackGroup","trackEndAngle","maxThickness","strokeWidth","enablePieProgress","circularTrack","renderCircularProgress","previousTotalEnd","previousPath","progressTotalAngle","linearClipPath","circularProgressGroup","innerRadius","progressEndAngle","previousEndAngle","checkingCircularProgressColor","validateSegmentSize","renderCircularBuffer","circularBuffer","circularBufferGroup","bufferEnd","renderCircularLabel","circularLabel","circularLabelGroup","circularValue","circularActive","validSegment","progressSegment","rDiff","abs","circularColor","ProgressBar","annotateAnimation","scaleX","scaleY","ProgressBar_1","Inject","preRender","unWireEvents","initPrivateVariable","wireEvents","progressBar","display","position","calculateProgressBarSize","setTheme","createSVG","controlRendering","renderElements","renderComplete","controlRenderedTimeStamp","Date","getTime","containerWidth","clientWidth","offsetWidth","containerHeight","clientHeight","margin","right","bottom","renderAnnotation","createSecondaryElement","renderTrack","renderProgress","renderLabel","setSecondaryElementPosition","progressTooltipModule","secElement","tooltipElement","className","getBoundingClientRect","svgRect","removeSvg","SvgRenderer","createSvg","clipPathElement","showProgressValue","moveTo","lineTo","cornerCount","isLabel","isMaximum","posx","posy","pathWidth","drawRectangle","progressResize","arg","bar","currentSize","previousSize","resizeTo","clearTimeout","isDestroyed","progressMouseClick","mouseEvent","progressMouseDown","progressMouseMove","progressMouseUp","progressMouseLeave","eventName","startEvent","touchStartEvent","moveEvent","touchMoveEvent","stopEvent","touchEndEvent","cancelEvent","isPointer","EventHandler","removeEventListener","isTouch","resizeBounds","add","bind","addEventListener","onPropertyChanged","newProp","oldProp","_i","_a","requiredModules","modules","some","push","member","getPersistData","show","hide","classList","refreshing","Event","Collection","NotifyPropertyChanges","Component","index.ProgressAnnotation","index.ProgressTooltip"],"mappings":"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"}